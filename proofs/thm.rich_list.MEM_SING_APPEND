Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.rich_list
% (117732)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 153
% Passive clauses: 3491
% Generated clauses: 21466
% Final active clauses: 131
% Final passive clauses: 3164
% Input formulas: 69
% Initial clauses: 175
% 
% Duplicate literals: 725
% Trivial inequalities: 521
% Fw subsumption resolutions: 3097
% Fw demodulations: 3353
% Bw demodulations: 11
% 
% Simple tautologies: 562
% Equational tautologies: 47
% Forward subsumptions: 9038
% Fw demodulations to eq. taut.: 2
% 
% Binary resolution: 223
% Factoring: 1
% Forward superposition: 6489
% Backward superposition: 6373
% Self superposition: 217
% Equality factoring: 124
% Equality resolution: 46
% 
% Split clauses: 378
% Split components: 761
% SAT solver clauses: 689
% SAT solver unit clauses: 39
% SAT solver binary clauses: 260
% 
% Sat splits: 378
% Sat splitting refutations: 3
% 
% TWLsolver clauses: 689
% TWLsolver calls for satisfiability: 95
% 
% Memory used [KB]: 10618
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 143 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.rich_list
% (117750)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 174
% Passive clauses: 1849
% Generated clauses: 19208
% Final active clauses: 83
% Final passive clauses: 683
% Input formulas: 69
% Initial clauses: 175
% 
% Duplicate literals: 291
% Trivial inequalities: 169
% Fw subsumption resolutions: 1731
% Fw demodulations: 3192
% Bw demodulations: 969
% Condensations: 717
% Global subsumptions: 17
% 
% Simple tautologies: 258
% Equational tautologies: 16
% Forward subsumptions: 6897
% Fw demodulations to eq. taut.: 2
% Bw demodulations to eq. taut.: 78
% 
% Binary resolution: 216
% Factoring: 1
% Forward superposition: 3080
% Backward superposition: 3262
% Self superposition: 121
% Equality factoring: 37
% Equality resolution: 35
% 
% Split clauses: 194
% Split components: 392
% SAT solver clauses: 1929
% SAT solver unit clauses: 175
% SAT solver binary clauses: 76
% SAT solver learnt clauses: 40
% SAT solver learnt literals: 8
% 
% Sat splits: 194
% Sat splitting refutations: 81
% 
% TWLsolver clauses: 1855
% TWLsolver calls for satisfiability: 856
% 
% Memory used [KB]: 12281
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 136 next slice time: 103
lrs+11_2_br=off:cond=on:fde=none:gs=on:gsaa=full_model:lwlo=on:nwc=2:sas=minisat:stl=30:ssfp=100000:ssfq=1.4:smm=sco:ssnc=none:sp=occurrence:urr=on_98 on thm.rich_list
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.rich_list
% SZS output start Proof for thm.rich_list
fof(f19653,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f288,f485,f483,f287,f484,f486,f1329,f1332,f1331,f1330,f1335,f1494,f1505,f1504,f1502,f1509,f1507,f1510,f1512,f1514,f1518,f1521,f1523,f1526,f1534,f1536,f1540,f1542,f1544,f1546,f1594,f1595,f1596,f1597,f2167,f2162,f4235,f4251,f4250,f4252,f6279,f6593,f6594,f6601,f6605,f6608,f6611,f6615,f6617,f6620,f6622,f6625,f6634,f6637,f6639,f6641,f6643,f6645,f6651,f6653,f6655,f6657,f6659,f6662,f6665,f6668,f6671,f6679,f6688,f6691,f6693,f6696,f6699,f6701,f6704,f6707,f6709,f6711,f6713,f6716,f6719,f6722,f6725,f6727,f6730,f6733,f6735,f6738,f6741,f6749,f6753,f6755,f6777,f6782,f6790,f6794,f6804,f6812,f6816,f6824,f6828,f6832,f6834,f6846,f6866,f6868,f6869,f6926,f7078,f7082,f7088,f7092,f7098,f7102,f7106,f7110,f7120,f7124,f7130,f7134,f7147,f7151,f7178,f7182,f7187,f7191,f7247,f7251,f7271,f7278,f7344,f7349,f7353,f7358,f7366,f7371,f7375,f7380,f7415,f7420,f7665,f7697,f7699,f7696,f7940,f7972,f7941,f7975,f7942,f7700,f7971,f7974,f7987,f7988,f9023,f9027,f11295,f11321,f11320,f11294,f11322,f4249,f14233,f14306,f14454,f14307,f14524,f17212,f17215,f17218,f17226,f19646])).
fof(f19646,plain,(
  $false | ($spl0 | $spl3 | $spl46)),
  inference(subsumption_resolution,[],[f19645,f487])).
fof(f487,plain,(
  ~p(s(bool,'F_0'))),
  inference(subsumption_resolution,[],[f292,f289])).
fof(f289,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f1])).
fof(f1,axiom,(
  p(s(bool,'T_0'))),
  file('thm.rich_list.MEM_SING_APPEND',aHL_TRUTH)).
fof(f292,plain,(
  ~p(s(bool,'T_0')) | ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f206])).
fof(f206,plain,(
  (p(s(bool,'T_0')) | p(s(bool,'F_0'))) & (~p(s(bool,'F_0')) | ~p(s(bool,'T_0')))),
  inference(nnf_transformation,[],[f73])).
fof(f73,plain,(
  ~p(s(bool,'T_0')) <=> p(s(bool,'F_0'))),
  inference(flattening,[],[f31])).
fof(f31,axiom,(
  ~p(s(bool,'T_0')) <=> p(s(bool,'F_0'))),
  file('thm.rich_list.MEM_SING_APPEND','thm.bool.NOT_CLAUSES|split|1')).
fof(f19645,plain,(
  p(s(bool,'F_0')) | ($spl0 | $spl3 | $spl46)),
  inference(forward_demodulation,[],[f19615,f7442])).
fof(f7442,plain,(
  s(bool,'F_0') = s(bool,'const.bool.IN_2'(s(sK0,sK2),s(fun(sK0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(sK0),sK1))))) | $spl3),
  inference(unit_resulting_resolution,[],[f487,f484,f414])).
fof(f414,plain,(
  ( ! [X0,X1] : (p(s(bool,X1)) | p(s(bool,X0)) | s(bool,X0) = s(bool,X1)) )),
  inference(cnf_transformation,[],[f189])).
fof(f189,plain,(
  ! [X0,X1] : ((p(s(bool,X0)) & ~p(s(bool,X1))) | (p(s(bool,X1)) & ~p(s(bool,X0))) | s(bool,X0) = s(bool,X1))),
  inference(flattening,[],[f188])).
fof(f188,plain,(
  ! [X0,X1] : ((p(s(bool,X0)) & ~p(s(bool,X1))) | ((p(s(bool,X1)) & ~p(s(bool,X0))) | s(bool,X0) = s(bool,X1)))),
  inference(ennf_transformation,[],[f154])).
fof(f154,plain,(
  ! [X0,X1] : ((p(s(bool,X0)) => p(s(bool,X1))) => ((p(s(bool,X1)) => p(s(bool,X0))) => s(bool,X0) = s(bool,X1)))),
  inference(rectify,[],[f13])).
fof(f13,axiom,(
  ! [X19,X20] : ((p(s(bool,X19)) => p(s(bool,X20))) => ((p(s(bool,X20)) => p(s(bool,X19))) => s(bool,X19) = s(bool,X20)))),
  file('thm.rich_list.MEM_SING_APPEND','thm.bool.IMP_ANTISYM_AX')).
fof(f19615,plain,(
  p(s(bool,'const.bool.IN_2'(s(sK0,sK2),s(fun(sK0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(sK0),sK1)))))) | ($spl0 | $spl46)),
  inference(superposition,[],[f17395,f483])).
fof(f17395,plain,(
  ( ! [X0] : (p(s(bool,'const.bool.IN_2'(s(sK0,sK2),s(fun(sK0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),X0),s('type.list.list'(sK0),sK4))))))))) ) | $spl46),
  inference(unit_resulting_resolution,[],[f14524,f405])).
fof(f405,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),X3)))))) | p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),X3))))))))) )),
  inference(cnf_transformation,[],[f272])).
fof(f272,plain,(
  ! [X0,X1,X2,X3] : ((~p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),X3)))))))) | p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),X2)))))) | p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),X3))))))) & ((~p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),X2)))))) & ~p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),X3))))))) | p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),X3))))))))))),
  inference(flattening,[],[f271])).
fof(f271,plain,(
  ! [X0,X1,X2,X3] : ((~p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),X3)))))))) | (p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),X2)))))) | p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),X3)))))))) & ((~p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),X2)))))) & ~p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),X3))))))) | p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),X3))))))))))),
  inference(nnf_transformation,[],[f149])).
fof(f149,plain,(
  ! [X0,X1,X2,X3] : (p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),X3)))))))) <=> (p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),X2)))))) | p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),X3))))))))),
  inference(flattening,[],[f148])).
fof(f148,plain,(
  ! [X0] : ! [X1,X2,X3] : (p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),X3)))))))) <=> (p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),X2)))))) | p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),X3))))))))),
  inference(rectify,[],[f67])).
fof(f67,axiom,(
  ! [X6] : ! [X12,X17,X18] : (p(s(bool,'const.bool.IN_2'(s(X6,X12),s(fun(X6,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X6),'const.list.APPEND_2'(s('type.list.list'(X6),X17),s('type.list.list'(X6),X18)))))))) <=> (p(s(bool,'const.bool.IN_2'(s(X6,X12),s(fun(X6,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X6),X17)))))) | p(s(bool,'const.bool.IN_2'(s(X6,X12),s(fun(X6,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X6),X18))))))))),
  file('thm.rich_list.MEM_SING_APPEND','thm.list.MEM_APPEND')).
fof(f17226,plain,(
  $false | ($spl3 | $spl44)),
  inference(subsumption_resolution,[],[f17225,f487])).
fof(f17225,plain,(
  p(s(bool,'F_0')) | ($spl3 | $spl44)),
  inference(forward_demodulation,[],[f17208,f7442])).
fof(f17208,plain,(
  p(s(bool,'const.bool.IN_2'(s(sK0,sK2),s(fun(sK0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(sK0),sK1)))))) | $spl44),
  inference(equality_resolution,[],[f14307])).
fof(f17218,plain,(
  $false | ($spl3 | $spl44)),
  inference(subsumption_resolution,[],[f17217,f487])).
fof(f17217,plain,(
  p(s(bool,'F_0')) | ($spl3 | $spl44)),
  inference(forward_demodulation,[],[f17216,f7442])).
fof(f17216,plain,(
  p(s(bool,'const.bool.IN_2'(s(sK0,sK2),s(fun(sK0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(sK0),sK1)))))) | $spl44),
  inference(forward_demodulation,[],[f17196,f358])).
fof(f358,plain,(
  ( ! [X0,X1] : (s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),'const.list.NIL_0')))) )),
  inference(cnf_transformation,[],[f108])).
fof(f108,plain,(
  ! [X0,X1] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),'const.list.NIL_0')))),
  inference(flattening,[],[f107])).
fof(f107,plain,(
  ! [X0] : ! [X1] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),'const.list.NIL_0')))),
  inference(rectify,[],[f60])).
fof(f60,axiom,(
  ! [X6] : ! [X11] : s('type.list.list'(X6),X11) = s('type.list.list'(X6),'const.list.APPEND_2'(s('type.list.list'(X6),X11),s('type.list.list'(X6),'const.list.NIL_0')))),
  file('thm.rich_list.MEM_SING_APPEND','thm.list.APPEND_NIL')).
fof(f17196,plain,(
  p(s(bool,'const.bool.IN_2'(s(sK0,sK2),s(fun(sK0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),sK1),s('type.list.list'(sK0),'const.list.NIL_0')))))))) | $spl44),
  inference(unit_resulting_resolution,[],[f358,f14307])).
fof(f17215,plain,(
  $false | ($spl3 | $spl44)),
  inference(subsumption_resolution,[],[f17214,f487])).
fof(f17214,plain,(
  p(s(bool,'F_0')) | ($spl3 | $spl44)),
  inference(forward_demodulation,[],[f17213,f7442])).
fof(f17213,plain,(
  p(s(bool,'const.bool.IN_2'(s(sK0,sK2),s(fun(sK0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(sK0),sK1)))))) | $spl44),
  inference(forward_demodulation,[],[f17197,f359])).
fof(f359,plain,(
  ( ! [X0,X1] : (s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.NIL_0'),s('type.list.list'(X0),X1)))) )),
  inference(cnf_transformation,[],[f110])).
fof(f110,plain,(
  ! [X0,X1] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.NIL_0'),s('type.list.list'(X0),X1)))),
  inference(flattening,[],[f109])).
fof(f109,plain,(
  ! [X0] : ! [X1] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.NIL_0'),s('type.list.list'(X0),X1)))),
  inference(rectify,[],[f57])).
fof(f57,axiom,(
  ! [X6] : ! [X11] : s('type.list.list'(X6),X11) = s('type.list.list'(X6),'const.list.APPEND_2'(s('type.list.list'(X6),'const.list.NIL_0'),s('type.list.list'(X6),X11)))),
  file('thm.rich_list.MEM_SING_APPEND','thm.list.APPEND|split|0')).
fof(f17197,plain,(
  p(s(bool,'const.bool.IN_2'(s(sK0,sK2),s(fun(sK0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),'const.list.NIL_0'),s('type.list.list'(sK0),sK1)))))))) | $spl44),
  inference(unit_resulting_resolution,[],[f359,f14307])).
fof(f17212,plain,(
  $false | ($spl3 | $spl44)),
  inference(subsumption_resolution,[],[f17211,f487])).
fof(f17211,plain,(
  p(s(bool,'F_0')) | ($spl3 | $spl44)),
  inference(forward_demodulation,[],[f17210,f7442])).
fof(f17210,plain,(
  p(s(bool,'const.bool.IN_2'(s(sK0,sK2),s(fun(sK0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(sK0),sK1)))))) | $spl44),
  inference(forward_demodulation,[],[f17198,f368])).
fof(f368,plain,(
  ( ! [X2,X0,X1] : (s(X0,X1) = s(X0,'const.ind_type.FCONS_3'(s(X0,X1),s(fun('type.num.num',X0),X2),s('type.num.num','const.num.|48|_0')))) )),
  inference(cnf_transformation,[],[f119])).
fof(f119,plain,(
  ! [X0,X1,X2] : s(X0,X1) = s(X0,'const.ind_type.FCONS_3'(s(X0,X1),s(fun('type.num.num',X0),X2),s('type.num.num','const.num.|48|_0')))),
  inference(flattening,[],[f118])).
fof(f118,plain,(
  ! [X0] : ! [X1,X2] : s(X0,X1) = s(X0,'const.ind_type.FCONS_3'(s(X0,X1),s(fun('type.num.num',X0),X2),s('type.num.num','const.num.|48|_0')))),
  inference(rectify,[],[f42])).
fof(f42,axiom,(
  ! [X6] : ! [X9,X22] : s(X6,X9) = s(X6,'const.ind_type.FCONS_3'(s(X6,X9),s(fun('type.num.num',X6),X22),s('type.num.num','const.num.|48|_0')))),
  file('thm.rich_list.MEM_SING_APPEND','thm.ind_type.FCONS|split|0')).
fof(f17198,plain,(
  ( ! [X0] : (p(s(bool,'const.bool.IN_2'(s(sK0,sK2),s(fun(sK0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(sK0),'const.ind_type.FCONS_3'(s('type.list.list'(sK0),sK1),s(fun('type.num.num','type.list.list'(sK0)),X0),s('type.num.num','const.num.|48|_0'))))))))) ) | $spl44),
  inference(unit_resulting_resolution,[],[f368,f14307])).
fof(f14524,plain,(
  p(s(bool,'const.bool.IN_2'(s(sK0,sK2),s(fun(sK0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(sK0),sK4)))))) | $spl46),
  inference(cnf_transformation,[],[f14524_D])).
fof(f14524_D,plain,(
  p(s(bool,'const.bool.IN_2'(s(sK0,sK2),s(fun(sK0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(sK0),sK4)))))) <=> ~$spl46),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl46])])).
fof(f14307,plain,(
  ( ! [X4] : (s('type.list.list'(sK0),sK1) != s('type.list.list'(sK0),X4) | p(s(bool,'const.bool.IN_2'(s(sK0,sK2),s(fun(sK0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(sK0),X4))))))) ) | $spl44),
  inference(cnf_transformation,[],[f14307_D])).
fof(f14307_D,plain,(
  ( ! [X4] : (s('type.list.list'(sK0),sK1) != s('type.list.list'(sK0),X4) | p(s(bool,'const.bool.IN_2'(s(sK0,sK2),s(fun(sK0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(sK0),X4))))))) ) <=> ~$spl44),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl44])])).
fof(f14454,plain,(
  ( ! [X4] : (s('type.list.list'(sK0),sK1) != s('type.list.list'(sK0),X4) | p(s(bool,'const.bool.IN_2'(s(sK0,sK2),s(fun(sK0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(sK0),sK4)))))) | p(s(bool,'const.bool.IN_2'(s(sK0,sK2),s(fun(sK0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(sK0),X4))))))) ) | $spl0),
  inference(superposition,[],[f380,f483])).
fof(f380,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.NIL_0'))))),s('type.list.list'(X0),X4))) | p(s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),X4)))))) | p(s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),X1))))))) )),
  inference(cnf_transformation,[],[f259])).
fof(f259,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),X1)))))) | (s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),sK13(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.NIL_0'))))),s('type.list.list'(X0),sK14(X2,X1,X0)))) & ~p(s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),sK14(X2,X1,X0))))))))) & (! [X3,X4] : (s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.NIL_0'))))),s('type.list.list'(X0),X4))) | p(s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),X4))))))) | p(s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),X1))))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK13,sK14])],[f258])).
fof(f258,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),X1)))))) | ? [X5,X6] : (s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.NIL_0'))))),s('type.list.list'(X0),X6))) & ~p(s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),X6)))))))) & (! [X3,X4] : (s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.NIL_0'))))),s('type.list.list'(X0),X4))) | p(s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),X4))))))) | p(s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),X1))))))))),
  inference(rectify,[],[f257])).
fof(f257,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),X1)))))) | ? [X3,X4] : (s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.NIL_0'))))),s('type.list.list'(X0),X4))) & ~p(s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),X4)))))))) & (! [X3,X4] : (s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.NIL_0'))))),s('type.list.list'(X0),X4))) | p(s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),X4))))))) | p(s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),X1))))))))),
  inference(nnf_transformation,[],[f129])).
fof(f129,plain,(
  ! [X0,X1,X2] : (p(s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),X1)))))) <=> ? [X3,X4] : (s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.NIL_0'))))),s('type.list.list'(X0),X4))) & ~p(s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),X4))))))))),
  inference(flattening,[],[f128])).
fof(f128,plain,(
  ! [X0] : ! [X1,X2] : (p(s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),X1)))))) <=> ? [X3,X4] : (s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.NIL_0'))))),s('type.list.list'(X0),X4))) & ~p(s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),X4))))))))),
  inference(rectify,[],[f9])).
fof(f9,axiom,(
  ! [X6] : ! [X11,X12] : (p(s(bool,'const.bool.IN_2'(s(X6,X12),s(fun(X6,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X6),X11)))))) <=> ? [X13,X14] : (s('type.list.list'(X6),X11) = s('type.list.list'(X6),'const.list.APPEND_2'(s('type.list.list'(X6),'const.list.APPEND_2'(s('type.list.list'(X6),X13),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X12),s('type.list.list'(X6),'const.list.NIL_0'))))),s('type.list.list'(X6),X14))) & ~p(s(bool,'const.bool.IN_2'(s(X6,X12),s(fun(X6,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X6),X14))))))))),
  file('thm.rich_list.MEM_SING_APPEND','thm.list.MEM_SPLIT_APPEND_last')).
fof(f14306,plain,(
  p(s(bool,'const.bool.IN_2'(s(sK0,sK2),s(fun(sK0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(sK0),sK3)))))) | $spl42),
  inference(cnf_transformation,[],[f14306_D])).
fof(f14306_D,plain,(
  p(s(bool,'const.bool.IN_2'(s(sK0,sK2),s(fun(sK0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(sK0),sK3)))))) <=> ~$spl42),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl42])])).
fof(f14233,plain,(
  ( ! [X4] : (s('type.list.list'(sK0),sK1) != s('type.list.list'(sK0),X4) | p(s(bool,'const.bool.IN_2'(s(sK0,sK2),s(fun(sK0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(sK0),sK3)))))) | p(s(bool,'const.bool.IN_2'(s(sK0,sK2),s(fun(sK0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(sK0),X4))))))) ) | $spl0),
  inference(superposition,[],[f377,f483])).
fof(f377,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.NIL_0'))))),s('type.list.list'(X0),X4))) | p(s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),X3)))))) | p(s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),X1))))))) )),
  inference(cnf_transformation,[],[f256])).
fof(f256,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),X1)))))) | (s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),sK11(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.NIL_0'))))),s('type.list.list'(X0),sK12(X2,X1,X0)))) & ~p(s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),sK11(X2,X1,X0))))))))) & (! [X3,X4] : (s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.NIL_0'))))),s('type.list.list'(X0),X4))) | p(s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),X3))))))) | p(s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),X1))))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK11,sK12])],[f255])).
fof(f255,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),X1)))))) | ? [X5,X6] : (s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.NIL_0'))))),s('type.list.list'(X0),X6))) & ~p(s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),X5)))))))) & (! [X3,X4] : (s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.NIL_0'))))),s('type.list.list'(X0),X4))) | p(s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),X3))))))) | p(s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),X1))))))))),
  inference(rectify,[],[f254])).
fof(f254,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),X1)))))) | ? [X3,X4] : (s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.NIL_0'))))),s('type.list.list'(X0),X4))) & ~p(s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),X3)))))))) & (! [X3,X4] : (s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.NIL_0'))))),s('type.list.list'(X0),X4))) | p(s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),X3))))))) | p(s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),X1))))))))),
  inference(nnf_transformation,[],[f127])).
fof(f127,plain,(
  ! [X0,X1,X2] : (p(s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),X1)))))) <=> ? [X3,X4] : (s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.NIL_0'))))),s('type.list.list'(X0),X4))) & ~p(s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),X3))))))))),
  inference(flattening,[],[f126])).
fof(f126,plain,(
  ! [X0] : ! [X1,X2] : (p(s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),X1)))))) <=> ? [X3,X4] : (s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.NIL_0'))))),s('type.list.list'(X0),X4))) & ~p(s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),X3))))))))),
  inference(rectify,[],[f7])).
fof(f7,axiom,(
  ! [X6] : ! [X11,X12] : (p(s(bool,'const.bool.IN_2'(s(X6,X12),s(fun(X6,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X6),X11)))))) <=> ? [X13,X14] : (s('type.list.list'(X6),X11) = s('type.list.list'(X6),'const.list.APPEND_2'(s('type.list.list'(X6),'const.list.APPEND_2'(s('type.list.list'(X6),X13),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X12),s('type.list.list'(X6),'const.list.NIL_0'))))),s('type.list.list'(X6),X14))) & ~p(s(bool,'const.bool.IN_2'(s(X6,X12),s(fun(X6,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X6),X13))))))))),
  file('thm.rich_list.MEM_SING_APPEND','thm.list.MEM_SPLIT_APPEND_first')).
fof(f4249,plain,(
  ( ! [X5] : (s(bool,'T_0') = s(bool,X5)) ) | $spl18),
  inference(cnf_transformation,[],[f4249_D])).
fof(f4249_D,plain,(
  ( ! [X5] : (s(bool,'T_0') = s(bool,X5)) ) <=> ~$spl18),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl18])])).
fof(f11322,plain,(
  ( ! [X28] : (s(bool,X28) != s(bool,'const.marker.Cong_1'(s(bool,'F_0'))) | s(bool,'F_0') = s(bool,'const.marker.Cong_1'(s(bool,X28)))) ) | $spl40),
  inference(cnf_transformation,[],[f11322_D])).
fof(f11322_D,plain,(
  ( ! [X28] : (s(bool,X28) != s(bool,'const.marker.Cong_1'(s(bool,'F_0'))) | s(bool,'F_0') = s(bool,'const.marker.Cong_1'(s(bool,X28)))) ) <=> ~$spl40),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl40])])).
fof(f11294,plain,(
  ( ! [X28,X27] : (s(bool,X28) != s(bool,'const.marker.Cong_1'(s(bool,'F_0'))) | s(bool,'F_0') = s(bool,'const.marker.Cong_1'(s(bool,X28))) | s(bool,'T_0') = s(bool,X27)) ) | ($spl3 | $spl20)),
  inference(duplicate_literal_removal,[],[f11170])).
fof(f11170,plain,(
  ( ! [X28,X27] : (s(bool,X28) != s(bool,'const.marker.Cong_1'(s(bool,'F_0'))) | s(bool,'F_0') = s(bool,'const.marker.Cong_1'(s(bool,X28))) | s(bool,'T_0') = s(bool,X27) | s(bool,'T_0') = s(bool,X27)) ) | ($spl3 | $spl20)),
  inference(superposition,[],[f7827,f11026])).
fof(f11026,plain,(
  ( ! [X0] : (s(bool,X0) = s(bool,'const.marker.Cong_1'(s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X0)) ) | ($spl3 | $spl20)),
  inference(condensation,[],[f11025])).
fof(f11025,plain,(
  ( ! [X0,X1] : (s(bool,X1) = s(bool,'const.marker.Cong_1'(s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X1) | s(bool,'T_0') = s(bool,X0)) ) | ($spl3 | $spl20)),
  inference(duplicate_literal_removal,[],[f10825])).
fof(f10825,plain,(
  ( ! [X0,X1] : (s(bool,X1) = s(bool,'const.marker.Cong_1'(s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X1) | s(bool,'T_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) ) | ($spl3 | $spl20)),
  inference(superposition,[],[f10567,f299])).
fof(f299,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f3])).
fof(f3,axiom,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) | s(bool,'F_0') = s(bool,X0))),
  file('thm.rich_list.MEM_SING_APPEND',aHL_BOOL_CASES)).
fof(f10567,plain,(
  ( ! [X17,X16] : (s(bool,X17) = s(bool,'const.marker.Cong_1'(s(bool,X16))) | s(bool,'T_0') = s(bool,X17) | s(bool,'T_0') = s(bool,X16)) ) | ($spl3 | $spl20)),
  inference(subsumption_resolution,[],[f10526,f487])).
fof(f10526,plain,(
  ( ! [X17,X16] : (p(s(bool,'F_0')) | s(bool,X17) = s(bool,'const.marker.Cong_1'(s(bool,X16))) | s(bool,'T_0') = s(bool,X17) | s(bool,'T_0') = s(bool,X16)) ) | ($spl3 | $spl20)),
  inference(superposition,[],[f575,f10472])).
fof(f10472,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,'const.marker.Cong_1'(s(bool,X0))) | s(bool,'T_0') = s(bool,X0)) ) | ($spl3 | $spl20)),
  inference(condensation,[],[f10471])).
fof(f10471,plain,(
  ( ! [X0,X1] : (s(bool,'F_0') = s(bool,'const.marker.Cong_1'(s(bool,X0))) | s(bool,'T_0') = s(bool,X1) | s(bool,'T_0') = s(bool,X0)) ) | ($spl3 | $spl20)),
  inference(subsumption_resolution,[],[f10436,f299])).
fof(f10436,plain,(
  ( ! [X0,X1] : (s(bool,'F_0') != s(bool,X1) | s(bool,'F_0') = s(bool,'const.marker.Cong_1'(s(bool,X0))) | s(bool,'T_0') = s(bool,X1) | s(bool,'T_0') = s(bool,X0)) ) | ($spl3 | $spl20)),
  inference(superposition,[],[f7827,f299])).
fof(f575,plain,(
  ( ! [X0,X1] : (p(s(bool,X1)) | s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X0)) )),
  inference(subsumption_resolution,[],[f565,f487])).
fof(f565,plain,(
  ( ! [X0,X1] : (p(s(bool,'F_0')) | p(s(bool,X1)) | s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f414,f299])).
fof(f7827,plain,(
  ( ! [X10,X9] : (s(bool,X9) != s(bool,X10) | s(bool,'F_0') = s(bool,'const.marker.Cong_1'(s(bool,X9))) | s(bool,'T_0') = s(bool,X10)) ) | ($spl3 | $spl20)),
  inference(superposition,[],[f7638,f297])).
fof(f297,plain,(
  ( ! [X0] : (s(bool,X0) = s(bool,'const.marker.Cong_1'(s(bool,X0)))) )),
  inference(cnf_transformation,[],[f77])).
fof(f77,plain,(
  ! [X0] : s(bool,X0) = s(bool,'const.marker.Cong_1'(s(bool,X0)))),
  inference(rectify,[],[f62])).
fof(f62,axiom,(
  ! [X15] : s(bool,X15) = s(bool,'const.marker.Cong_1'(s(bool,X15)))),
  file('thm.rich_list.MEM_SING_APPEND','thm.marker.Cong_def')).
fof(f7638,plain,(
  ( ! [X0,X1] : (s(bool,X0) != s(bool,X1) | s(bool,'F_0') = s(bool,X1) | s(bool,'T_0') = s(bool,X0)) ) | ($spl3 | $spl20)),
  inference(superposition,[],[f4250,f7496])).
fof(f7496,plain,(
  ( ! [X4] : (s(bool,X4) = s(bool,'const.bool.IN_2'(s(sK0,sK2),s(fun(sK0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(sK0),sK1))))) | s(bool,'T_0') = s(bool,X4)) ) | $spl3),
  inference(subsumption_resolution,[],[f7481,f487])).
fof(f7481,plain,(
  ( ! [X4] : (p(s(bool,'F_0')) | s(bool,X4) = s(bool,'const.bool.IN_2'(s(sK0,sK2),s(fun(sK0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(sK0),sK1))))) | s(bool,'T_0') = s(bool,X4)) ) | $spl3),
  inference(superposition,[],[f575,f7442])).
fof(f11320,plain,(
  ( ! [X20] : (s(bool,X20) != s(bool,'const.marker.Cong_1'(s(bool,'F_0'))) | s(bool,'F_0') = s(bool,X20)) ) | $spl38),
  inference(cnf_transformation,[],[f11320_D])).
fof(f11320_D,plain,(
  ( ! [X20] : (s(bool,X20) != s(bool,'const.marker.Cong_1'(s(bool,'F_0'))) | s(bool,'F_0') = s(bool,X20)) ) <=> ~$spl38),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl38])])).
fof(f11321,plain,(
  ( ! [X26,X25] : (s(bool,X26) != s(bool,'const.marker.Cong_1'(s(bool,'F_0'))) | s(bool,'F_0') = s(bool,X26) | s(bool,'T_0') = s(bool,X25)) ) | ($spl3 | $spl20)),
  inference(subsumption_resolution,[],[f11169,f10562])).
fof(f10562,plain,(
  ( ! [X4] : (s(bool,'T_0') != s(bool,'const.marker.Cong_1'(s(bool,X4))) | s(bool,'T_0') = s(bool,X4)) ) | ($spl3 | $spl20)),
  inference(subsumption_resolution,[],[f10518,f487])).
fof(f10518,plain,(
  ( ! [X4] : (p(s(bool,'F_0')) | s(bool,'T_0') != s(bool,'const.marker.Cong_1'(s(bool,X4))) | s(bool,'T_0') = s(bool,X4)) ) | ($spl3 | $spl20)),
  inference(superposition,[],[f303,f10472])).
fof(f303,plain,(
  ( ! [X0] : (p(s(bool,X0)) | s(bool,'T_0') != s(bool,X0)) )),
  inference(cnf_transformation,[],[f208])).
fof(f208,plain,(
  ! [X0] : ((s(bool,'T_0') != s(bool,X0) | p(s(bool,X0))) & (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f83])).
fof(f83,plain,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) <=> p(s(bool,X0)))),
  inference(rectify,[],[f51])).
fof(f51,axiom,(
  ! [X16] : (s(bool,'T_0') = s(bool,X16) <=> p(s(bool,X16)))),
  file('thm.rich_list.MEM_SING_APPEND','thm.bool.EQ_CLAUSES|split|1')).
fof(f11169,plain,(
  ( ! [X26,X25] : (s(bool,X26) != s(bool,'const.marker.Cong_1'(s(bool,'F_0'))) | s(bool,'F_0') = s(bool,X26) | s(bool,'T_0') = s(bool,'const.marker.Cong_1'(s(bool,X25))) | s(bool,'T_0') = s(bool,X25)) ) | ($spl3 | $spl20)),
  inference(superposition,[],[f7816,f11026])).
fof(f7816,plain,(
  ( ! [X10,X9] : (s(bool,X9) != s(bool,X10) | s(bool,'F_0') = s(bool,X10) | s(bool,'T_0') = s(bool,'const.marker.Cong_1'(s(bool,X9)))) ) | ($spl3 | $spl20)),
  inference(superposition,[],[f7638,f297])).
fof(f11295,plain,(
  ( ! [X19,X20] : (s(bool,X20) != s(bool,'const.marker.Cong_1'(s(bool,'F_0'))) | s(bool,'F_0') = s(bool,X20) | s(bool,'T_0') = s(bool,X19)) ) | ($spl3 | $spl20)),
  inference(duplicate_literal_removal,[],[f11166])).
fof(f11166,plain,(
  ( ! [X19,X20] : (s(bool,X20) != s(bool,'const.marker.Cong_1'(s(bool,'F_0'))) | s(bool,'F_0') = s(bool,X20) | s(bool,'T_0') = s(bool,X19) | s(bool,'T_0') = s(bool,X19)) ) | ($spl3 | $spl20)),
  inference(superposition,[],[f7638,f11026])).
fof(f9027,plain,(
  $false | ($spl0 | $spl3 | $spl34)),
  inference(subsumption_resolution,[],[f9026,f487])).
fof(f9026,plain,(
  p(s(bool,'F_0')) | ($spl0 | $spl3 | $spl34)),
  inference(forward_demodulation,[],[f9020,f7442])).
fof(f9020,plain,(
  p(s(bool,'const.bool.IN_2'(s(sK0,sK2),s(fun(sK0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(sK0),sK1)))))) | ($spl0 | $spl34)),
  inference(equality_resolution,[],[f8948])).
fof(f8948,plain,(
  ( ! [X0] : (s(sK0,sK2) != s(sK0,X0) | p(s(bool,'const.bool.IN_2'(s(sK0,X0),s(fun(sK0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(sK0),sK1))))))) ) | ($spl0 | $spl34)),
  inference(superposition,[],[f395,f8118])).
fof(f8118,plain,(
  s('type.list.list'(sK0),sK1) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK2),s('type.list.list'(sK0),sK4))) | ($spl0 | $spl34)),
  inference(forward_demodulation,[],[f8072,f359])).
fof(f8072,plain,(
  s('type.list.list'(sK0),sK1) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK2),s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),'const.list.NIL_0'),s('type.list.list'(sK0),sK4))))) | ($spl0 | $spl34)),
  inference(superposition,[],[f8041,f391])).
fof(f391,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),X2))))) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),X1))),s('type.list.list'(X0),X2)))) )),
  inference(cnf_transformation,[],[f139])).
fof(f139,plain,(
  ! [X0,X1,X2,X3] : s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),X2))))) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),X1))),s('type.list.list'(X0),X2)))),
  inference(flattening,[],[f138])).
fof(f138,plain,(
  ! [X0] : ! [X1,X2,X3] : s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),X2))))) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),X1))),s('type.list.list'(X0),X2)))),
  inference(rectify,[],[f56])).
fof(f56,axiom,(
  ! [X6] : ! [X17,X18,X27] : s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X27),s('type.list.list'(X6),'const.list.APPEND_2'(s('type.list.list'(X6),X17),s('type.list.list'(X6),X18))))) = s('type.list.list'(X6),'const.list.APPEND_2'(s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X27),s('type.list.list'(X6),X17))),s('type.list.list'(X6),X18)))),
  file('thm.rich_list.MEM_SING_APPEND','thm.list.APPEND|split|1')).
fof(f8041,plain,(
  s('type.list.list'(sK0),sK1) = s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK2),s('type.list.list'(sK0),'const.list.NIL_0'))),s('type.list.list'(sK0),sK4))) | ($spl0 | $spl34)),
  inference(forward_demodulation,[],[f8040,f359])).
fof(f8040,plain,(
  s('type.list.list'(sK0),sK1) = s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),'const.list.NIL_0'),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK2),s('type.list.list'(sK0),'const.list.NIL_0'))))),s('type.list.list'(sK0),sK4))) | ($spl0 | $spl34)),
  inference(forward_demodulation,[],[f483,f7974])).
fof(f395,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),X3)))))))) | s(X0,X1) != s(X0,X2)) )),
  inference(cnf_transformation,[],[f268])).
fof(f268,plain,(
  ! [X0,X1,X2,X3] : ((~p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),X3)))))))) | s(X0,X1) = s(X0,X2) | p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),X3))))))) & ((s(X0,X1) != s(X0,X2) & ~p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),X3))))))) | p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),X3))))))))))),
  inference(flattening,[],[f267])).
fof(f267,plain,(
  ! [X0,X1,X2,X3] : ((~p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),X3)))))))) | (s(X0,X1) = s(X0,X2) | p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),X3)))))))) & ((s(X0,X1) != s(X0,X2) & ~p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),X3))))))) | p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),X3))))))))))),
  inference(nnf_transformation,[],[f145])).
fof(f145,plain,(
  ! [X0,X1,X2,X3] : (p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),X3)))))))) <=> (s(X0,X1) = s(X0,X2) | p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),X3))))))))),
  inference(flattening,[],[f144])).
fof(f144,plain,(
  ! [X0] : ! [X1,X2,X3] : (p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),X3)))))))) <=> (s(X0,X1) = s(X0,X2) | p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),X3))))))))),
  inference(rectify,[],[f18])).
fof(f18,axiom,(
  ! [X6] : ! [X15,X27,X16] : (p(s(bool,'const.bool.IN_2'(s(X6,X15),s(fun(X6,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X27),s('type.list.list'(X6),X16)))))))) <=> (s(X6,X15) = s(X6,X27) | p(s(bool,'const.bool.IN_2'(s(X6,X15),s(fun(X6,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X6),X16))))))))),
  file('thm.rich_list.MEM_SING_APPEND','thm.list.MEM|split|1')).
fof(f9023,plain,(
  $false | ($spl0 | $spl3 | $spl34)),
  inference(subsumption_resolution,[],[f9022,f487])).
fof(f9022,plain,(
  p(s(bool,'F_0')) | ($spl0 | $spl3 | $spl34)),
  inference(forward_demodulation,[],[f9021,f7442])).
fof(f9021,plain,(
  p(s(bool,'const.bool.IN_2'(s(sK0,sK2),s(fun(sK0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(sK0),sK1)))))) | ($spl0 | $spl34)),
  inference(forward_demodulation,[],[f9015,f368])).
fof(f9015,plain,(
  ( ! [X0] : (p(s(bool,'const.bool.IN_2'(s(sK0,'const.ind_type.FCONS_3'(s(sK0,sK2),s(fun('type.num.num',sK0),X0),s('type.num.num','const.num.|48|_0'))),s(fun(sK0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(sK0),sK1))))))) ) | ($spl0 | $spl34)),
  inference(unit_resulting_resolution,[],[f368,f8948])).
fof(f7988,plain,(
  $false | ($spl15 | $spl30 | $spl34)),
  inference(subsumption_resolution,[],[f7985,f358])).
fof(f7985,plain,(
  s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),'const.list.NIL_0'),s('type.list.list'(sK0),'const.list.NIL_0'))) | ($spl15 | $spl30 | $spl34)),
  inference(backward_demodulation,[],[f7971,f7982])).
fof(f7982,plain,(
  s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),'const.list.NIL_0'),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK2),s('type.list.list'(sK0),'const.list.NIL_0'))))) | ($spl15 | $spl34)),
  inference(backward_demodulation,[],[f7974,f1506])).
fof(f1506,plain,(
  s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK2),s('type.list.list'(sK0),'const.list.NIL_0'))))) | $spl15),
  inference(cnf_transformation,[],[f1506_D])).
fof(f1506_D,plain,(
  s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK2),s('type.list.list'(sK0),'const.list.NIL_0'))))) <=> ~$spl15),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl15])])).
fof(f7987,plain,(
  $false | ($spl0 | $spl17 | $spl24 | $spl30 | $spl34)),
  inference(subsumption_resolution,[],[f7986,f1509])).
fof(f7986,plain,(
  s('type.list.list'(sK0),'const.list.NIL_0') = s('type.list.list'(sK0),sK1) | ($spl0 | $spl24 | $spl30 | $spl34)),
  inference(forward_demodulation,[],[f7984,f358])).
fof(f7984,plain,(
  s('type.list.list'(sK0),sK1) = s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),'const.list.NIL_0'),s('type.list.list'(sK0),'const.list.NIL_0'))) | ($spl0 | $spl24 | $spl30 | $spl34)),
  inference(backward_demodulation,[],[f7971,f7983])).
fof(f7983,plain,(
  s('type.list.list'(sK0),sK1) = s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),'const.list.NIL_0'),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK2),s('type.list.list'(sK0),'const.list.NIL_0'))))) | ($spl0 | $spl24 | $spl34)),
  inference(backward_demodulation,[],[f7974,f7840])).
fof(f7840,plain,(
  s('type.list.list'(sK0),sK1) = s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK2),s('type.list.list'(sK0),'const.list.NIL_0'))))) | ($spl0 | $spl24)),
  inference(superposition,[],[f7709,f358])).
fof(f7709,plain,(
  s('type.list.list'(sK0),sK1) = s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK2),s('type.list.list'(sK0),'const.list.NIL_0'))))),s('type.list.list'(sK0),'const.list.NIL_0'))) | ($spl0 | $spl24)),
  inference(backward_demodulation,[],[f7696,f483])).
fof(f7974,plain,(
  s('type.list.list'(sK0),'const.list.NIL_0') = s('type.list.list'(sK0),sK3) | $spl34),
  inference(cnf_transformation,[],[f7974_D])).
fof(f7974_D,plain,(
  s('type.list.list'(sK0),'const.list.NIL_0') = s('type.list.list'(sK0),sK3) <=> ~$spl34),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl34])])).
fof(f7971,plain,(
  s('type.list.list'(sK0),'const.list.NIL_0') = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK2),s('type.list.list'(sK0),'const.list.NIL_0'))) | $spl30),
  inference(cnf_transformation,[],[f7971_D])).
fof(f7971_D,plain,(
  s('type.list.list'(sK0),'const.list.NIL_0') = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK2),s('type.list.list'(sK0),'const.list.NIL_0'))) <=> ~$spl30),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl30])])).
fof(f7700,plain,(
  ( ! [X14] : (s('type.list.list'(sK0),sK1) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X14),s('type.list.list'(sK0),'const.list.NIL_0')))) ) | $spl28),
  inference(cnf_transformation,[],[f7700_D])).
fof(f7700_D,plain,(
  ( ! [X14] : (s('type.list.list'(sK0),sK1) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X14),s('type.list.list'(sK0),'const.list.NIL_0')))) ) <=> ~$spl28),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl28])])).
fof(f7942,plain,(
  ( ! [X14] : (s('type.list.list'(sK0),sK1) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X14),s('type.list.list'(sK0),'const.list.NIL_0'))) | s('type.list.list'(sK0),'const.list.NIL_0') = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK2),s('type.list.list'(sK0),'const.list.NIL_0'))) | s('type.list.list'(sK0),'const.list.NIL_0') = s('type.list.list'(sK0),sK3)) ) | ($spl0 | $spl24)),
  inference(superposition,[],[f398,f7840])).
fof(f398,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.NIL_0'))) != s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),X1))) | s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1) | s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X2)) )),
  inference(cnf_transformation,[],[f270])).
fof(f270,plain,(
  ! [X0,X1,X2,X3] : ((s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.NIL_0'))) != s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),X1))) | (s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.NIL_0'))) & s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1)) | (s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X2) & s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.NIL_0'))))) & (((s('type.list.list'(X0),X2) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.NIL_0'))) | s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),X1)) & (s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),X2) | s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.NIL_0'))))) | s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.NIL_0'))) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),X1)))))),
  inference(flattening,[],[f269])).
fof(f269,plain,(
  ! [X0,X1,X2,X3] : ((s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.NIL_0'))) != s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),X1))) | ((s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.NIL_0'))) & s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1)) | (s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X2) & s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.NIL_0')))))) & (((s('type.list.list'(X0),X2) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.NIL_0'))) | s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),X1)) & (s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),X2) | s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.NIL_0'))))) | s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.NIL_0'))) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),X1)))))),
  inference(nnf_transformation,[],[f147])).
fof(f147,plain,(
  ! [X0,X1,X2,X3] : (s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.NIL_0'))) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),X1))) <=> ((s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.NIL_0'))) & s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1)) | (s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X2) & s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.NIL_0'))))))),
  inference(flattening,[],[f146])).
fof(f146,plain,(
  ! [X0] : ! [X1,X2,X3] : (s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.NIL_0'))) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),X1))) <=> ((s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.NIL_0'))) & s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1)) | (s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X2) & s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.NIL_0'))))))),
  inference(rectify,[],[f65])).
fof(f65,axiom,(
  ! [X6] : ! [X18,X17,X12] : (s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X12),s('type.list.list'(X6),'const.list.NIL_0'))) = s('type.list.list'(X6),'const.list.APPEND_2'(s('type.list.list'(X6),X17),s('type.list.list'(X6),X18))) <=> ((s('type.list.list'(X6),X17) = s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X12),s('type.list.list'(X6),'const.list.NIL_0'))) & s('type.list.list'(X6),'const.list.NIL_0') = s('type.list.list'(X6),X18)) | (s('type.list.list'(X6),'const.list.NIL_0') = s('type.list.list'(X6),X17) & s('type.list.list'(X6),X18) = s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X12),s('type.list.list'(X6),'const.list.NIL_0'))))))),
  file('thm.rich_list.MEM_SING_APPEND','thm.list.APPEND_EQ_SING')).
fof(f7975,plain,(
  ( ! [X13] : (s('type.list.list'(sK0),sK1) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.NIL_0'))) | s('type.list.list'(sK0),sK3) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.NIL_0')))) ) | $spl36),
  inference(cnf_transformation,[],[f7975_D])).
fof(f7975_D,plain,(
  ( ! [X13] : (s('type.list.list'(sK0),sK1) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.NIL_0'))) | s('type.list.list'(sK0),sK3) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.NIL_0')))) ) <=> ~$spl36),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl36])])).
fof(f7941,plain,(
  ( ! [X13] : (s('type.list.list'(sK0),sK1) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.NIL_0'))) | s('type.list.list'(sK0),sK3) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.NIL_0'))) | s('type.list.list'(sK0),'const.list.NIL_0') = s('type.list.list'(sK0),sK3)) ) | ($spl0 | $spl24)),
  inference(superposition,[],[f397,f7840])).
fof(f397,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.NIL_0'))) != s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),X1))) | s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.NIL_0'))) | s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X2)) )),
  inference(cnf_transformation,[],[f270])).
fof(f7972,plain,(
  ( ! [X12] : (s('type.list.list'(sK0),sK1) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.NIL_0'))) | s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK2),s('type.list.list'(sK0),'const.list.NIL_0'))) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.NIL_0')))) ) | $spl32),
  inference(cnf_transformation,[],[f7972_D])).
fof(f7972_D,plain,(
  ( ! [X12] : (s('type.list.list'(sK0),sK1) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.NIL_0'))) | s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK2),s('type.list.list'(sK0),'const.list.NIL_0'))) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.NIL_0')))) ) <=> ~$spl32),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl32])])).
fof(f7940,plain,(
  ( ! [X12] : (s('type.list.list'(sK0),sK1) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.NIL_0'))) | s('type.list.list'(sK0),'const.list.NIL_0') = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK2),s('type.list.list'(sK0),'const.list.NIL_0'))) | s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK2),s('type.list.list'(sK0),'const.list.NIL_0'))) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.NIL_0')))) ) | ($spl0 | $spl24)),
  inference(superposition,[],[f400,f7840])).
fof(f400,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.NIL_0'))) != s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),X1))) | s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1) | s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.NIL_0')))) )),
  inference(cnf_transformation,[],[f270])).
fof(f7696,plain,(
  s('type.list.list'(sK0),'const.list.NIL_0') = s('type.list.list'(sK0),sK4) | $spl24),
  inference(cnf_transformation,[],[f7696_D])).
fof(f7696_D,plain,(
  s('type.list.list'(sK0),'const.list.NIL_0') = s('type.list.list'(sK0),sK4) <=> ~$spl24),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl24])])).
fof(f7699,plain,(
  ( ! [X14] : (s('type.list.list'(sK0),sK1) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X14),s('type.list.list'(sK0),'const.list.NIL_0'))) | s('type.list.list'(sK0),'const.list.NIL_0') = s('type.list.list'(sK0),sK4)) ) | ($spl0 | $spl15)),
  inference(subsumption_resolution,[],[f7667,f1506])).
fof(f7667,plain,(
  ( ! [X14] : (s('type.list.list'(sK0),sK1) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X14),s('type.list.list'(sK0),'const.list.NIL_0'))) | s('type.list.list'(sK0),'const.list.NIL_0') = s('type.list.list'(sK0),sK4) | s('type.list.list'(sK0),'const.list.NIL_0') = s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK2),s('type.list.list'(sK0),'const.list.NIL_0')))))) ) | $spl0),
  inference(superposition,[],[f398,f483])).
fof(f7697,plain,(
  ( ! [X12] : (s('type.list.list'(sK0),sK1) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.NIL_0'))) | s('type.list.list'(sK0),sK4) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.NIL_0')))) ) | $spl26),
  inference(cnf_transformation,[],[f7697_D])).
fof(f7697_D,plain,(
  ( ! [X12] : (s('type.list.list'(sK0),sK1) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.NIL_0'))) | s('type.list.list'(sK0),sK4) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.NIL_0')))) ) <=> ~$spl26),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl26])])).
fof(f7665,plain,(
  ( ! [X12] : (s('type.list.list'(sK0),sK1) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.NIL_0'))) | s('type.list.list'(sK0),'const.list.NIL_0') = s('type.list.list'(sK0),sK4) | s('type.list.list'(sK0),sK4) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.NIL_0')))) ) | $spl0),
  inference(superposition,[],[f400,f483])).
fof(f7420,plain,(
  $false | ($spl3 | $spl22)),
  inference(global_subsumption,[],[f288,f287,f289,f487,f296,f297,f299,f304,f303,f308,f307,f358,f359,f360,f368,f383,f382,f381,f390,f391,f392,f393,f402,f401,f400,f399,f398,f397,f413,f412,f411,f410,f409,f408,f417,f414,f427,f430,f437,f473,f492,f532,f535,f575,f639,f675,f696,f727,f728,f730,f732,f753,f756,f769,f785,f787,f1345,f1344,f1377,f1378,f1406,f1408,f1489,f1492,f1493,f1495,f803,f791,f790,f802,f808,f789,f389,f388,f387,f372,f371,f395,f407,f406,f405,f404,f403,f396,f394,f380,f379,f378,f377,f376,f375,f1320,f1708,f1709,f1713,f1723,f1721,f1724,f1747,f1781,f1790,f1792,f1775,f1778,f1801,f1804,f1816,f1903,f1905,f1918,f1920,f1921,f1931,f2108,f2109,f2130,f2060,f2061,f2134,f2144,f2079,f2080,f2148,f2161,f2179,f2178,f2260,f2263,f2300,f2283,f2284,f2305,f2313,f2334,f2331,f2335,f2333,f2380,f2365,f2366,f2381,f2382,f2383,f2384,f2385,f2386,f2387,f2388,f2390,f2391,f2393,f2415,f2418,f2536,f2538,f2560,f2561,f2544,f2562,f2563,f2564,f2565,f2566,f2567,f2568,f2569,f2570,f2572,f2573,f2576,f2588,f2589,f2748,f2763,f2776,f2797,f2806,f2835,f2844,f2920,f2960,f2961,f3384,f3385,f3011,f3389,f3026,f3028,f3029,f3415,f3416,f3417,f3418,f3419,f3420,f3085,f3421,f3422,f3090,f3146,f3151,f3462,f3464,f3466,f3473,f3477,f3478,f3479,f3480,f3481,f3482,f3184,f3186,f3494,f3495,f3496,f3497,f3498,f3499,f3500,f3501,f3511,f3513,f3515,f3517,f3518,f3520,f3521,f3522,f3524,f3264,f3527,f3528,f3269,f3292,f3280,f3569,f3585,f3586,f3554,f3637,f3642,f3666,f3781,f3790,f3742,f3745,f3746,f3764,f3798,f3799,f3800,f3803,f3853,f3854,f3896,f3897,f3963,f3924,f3947,f4038,f4096,f4138,f4142,f4144,f4145,f4104,f4156,f4172,f4177,f4247,f4206,f4209,f4210,f4235,f4251,f4230,f4231,f2543,f4324,f4345,f4326,f4349,f4362,f4476,f4501,f4478,f4507,f4521,f4596,f4595,f4597,f4598,f4599,f4773,f4601,f4634,f4635,f4636,f4640,f4641,f4642,f4643,f4644,f4645,f4650,f4651,f4652,f4653,f4654,f4656,f4657,f4658,f4659,f4660,f4661,f4676,f4679,f4680,f4684,f4685,f4686,f4703,f4704,f4705,f4709,f4710,f4711,f4712,f4713,f4714,f4715,f4723,f4724,f4725,f4726,f4727,f4729,f4730,f4731,f4733,f4734,f4749,f4752,f4753,f4757,f4758,f4759,f4855,f4858,f4885,f4886,f4878,f4879,f4880,f4887,f4889,f4884,f5023,f5024,f5026,f5027,f5028,f5029,f5030,f5031,f5033,f5034,f5035,f5036,f5039,f5090,f5135,f5092,f5149,f5106,f5107,f5108,f5162,f5110,f5169,f5124,f5125,f5131,f5132,f5182,f5244,f5278,f5285,f5259,f5260,f5261,f5262,f5264,f5265,f5266,f5267,f5277,f5354,f5388,f5395,f5369,f5370,f5378,f5379,f5381,f5382,f5383,f5384,f5387,f5509,f5510,f5511,f5624,f5625,f5626,f5784,f6101,f6102,f6280,f6281,f6240,f6241,f6242,f6282,f6245,f6284,f6291,f6292,f6293,f6294,f6295,f6296,f6297,f6298,f6299,f6300,f6301,f6302,f6303,f6266,f6267,f6309,f4252,f6314,f484,f4670,f4743,f1770,f754,f369,f6104,f4744,f4671,f4745,f4672,f5767,f5766,f3635,f1970,f5782,f3899,f367,f3634,f1972,f1969,f366,f365,f806,f807,f5780,f805,f804,f5777,f4646,f4741,f4668,f4667,f4742,f4666,f4669,f4739,f4740,f1795,f1794,f1769,f4856,f4832,f4831,f4853,f370,f1327,f5778,f4719,f4718,f4637,f4717,f4716,f4706,f4854,f4732,f6870,f6933,f6938,f6945,f6952,f6967,f6988,f6989,f6996,f7001,f7012,f7026,f7058,f7060,f7063,f7084,f7094,f7112,f7114,f7116,f7126,f7140,f7162,f7193,f7195,f7197,f7199,f7216,f7231,f7233,f7235,f7237,f7273,f7280,f7283,f7343,f7348,f7357,f7365,f7370,f7379,f7419])).
fof(f7419,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | ($spl3 | $spl22)),
  inference(subsumption_resolution,[],[f7418,f6870])).
fof(f7418,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,X0) | ~p(s(bool,X0))) ) | ($spl3 | $spl22)),
  inference(forward_demodulation,[],[f307,f6870])).
fof(f7379,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0)) ) | ($spl3 | $spl22)),
  inference(subsumption_resolution,[],[f7378,f289])).
fof(f7378,plain,(
  ( ! [X0] : (~p(s(bool,'T_0')) | s(bool,'F_0') = s(bool,X0)) ) | ($spl3 | $spl22)),
  inference(forward_demodulation,[],[f7377,f6870])).
fof(f7377,plain,(
  ( ! [X2,X0] : (~p(s(bool,'const.bool.IN_2'(s(bool,X0),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),X2)))))) | s(bool,'F_0') = s(bool,X0)) ) | ($spl3 | $spl22)),
  inference(subsumption_resolution,[],[f7376,f289])).
fof(f7376,plain,(
  ( ! [X2,X0] : (~p(s(bool,'T_0')) | ~p(s(bool,'const.bool.IN_2'(s(bool,X0),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),X2)))))) | s(bool,'F_0') = s(bool,X0)) ) | ($spl3 | $spl22)),
  inference(forward_demodulation,[],[f2380,f6870])).
fof(f7370,plain,(
  ( ! [X11] : (s(bool,'F_0') = s(bool,X11)) ) | ($spl3 | $spl22)),
  inference(subsumption_resolution,[],[f7369,f289])).
fof(f7369,plain,(
  ( ! [X11] : (~p(s(bool,'T_0')) | s(bool,'F_0') = s(bool,X11)) ) | ($spl3 | $spl22)),
  inference(forward_demodulation,[],[f7368,f6870])).
fof(f7368,plain,(
  ( ! [X12,X11] : (~p(s(bool,'const.bool.IN_2'(s(bool,'T_0'),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),sK11('const.marker.Cong_1'(s(bool,X11)),X12,bool))))))) | s(bool,'F_0') = s(bool,X11)) ) | ($spl3 | $spl22)),
  inference(subsumption_resolution,[],[f7367,f289])).
fof(f7367,plain,(
  ( ! [X12,X11] : (~p(s(bool,'T_0')) | ~p(s(bool,'const.bool.IN_2'(s(bool,'T_0'),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),sK11('const.marker.Cong_1'(s(bool,X11)),X12,bool))))))) | s(bool,'F_0') = s(bool,X11)) ) | ($spl3 | $spl22)),
  inference(forward_demodulation,[],[f2383,f6870])).
fof(f7365,plain,(
  ( ! [X16] : (s(bool,'F_0') = s(bool,X16)) ) | ($spl3 | $spl22)),
  inference(subsumption_resolution,[],[f7364,f289])).
fof(f7364,plain,(
  ( ! [X16] : (~p(s(bool,'T_0')) | s(bool,'F_0') = s(bool,X16)) ) | ($spl3 | $spl22)),
  inference(forward_demodulation,[],[f7363,f6870])).
fof(f7363,plain,(
  ( ! [X17,X15,X16] : (~p(s(bool,'const.bool.IN_2'(s(bool,X16),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),sK11('const.bool.BOUNDED_1'(s(bool,X15)),X17,bool))))))) | s(bool,'F_0') = s(bool,X16)) ) | ($spl3 | $spl22)),
  inference(subsumption_resolution,[],[f7362,f289])).
fof(f7362,plain,(
  ( ! [X17,X15,X16] : (~p(s(bool,'T_0')) | ~p(s(bool,'const.bool.IN_2'(s(bool,X16),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),sK11('const.bool.BOUNDED_1'(s(bool,X15)),X17,bool))))))) | s(bool,'F_0') = s(bool,X16)) ) | ($spl3 | $spl22)),
  inference(forward_demodulation,[],[f2385,f6870])).
fof(f7357,plain,(
  ( ! [X2] : (s(bool,'F_0') = s(bool,X2)) ) | ($spl3 | $spl22)),
  inference(subsumption_resolution,[],[f7356,f289])).
fof(f7356,plain,(
  ( ! [X2] : (~p(s(bool,'T_0')) | s(bool,'F_0') = s(bool,X2)) ) | ($spl3 | $spl22)),
  inference(forward_demodulation,[],[f7355,f6870])).
fof(f7355,plain,(
  ( ! [X4,X2] : (~p(s(bool,'const.bool.IN_2'(s(bool,X2),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),X4)))))) | s(bool,'F_0') = s(bool,X2)) ) | ($spl3 | $spl22)),
  inference(subsumption_resolution,[],[f7354,f289])).
fof(f7354,plain,(
  ( ! [X4,X2] : (~p(s(bool,'T_0')) | ~p(s(bool,'const.bool.IN_2'(s(bool,X2),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),X4)))))) | s(bool,'F_0') = s(bool,X2)) ) | ($spl3 | $spl22)),
  inference(forward_demodulation,[],[f2561,f6870])).
fof(f7348,plain,(
  ( ! [X15] : (s(bool,'F_0') = s(bool,X15)) ) | ($spl3 | $spl22)),
  inference(subsumption_resolution,[],[f7347,f289])).
fof(f7347,plain,(
  ( ! [X15] : (~p(s(bool,'T_0')) | s(bool,'F_0') = s(bool,X15)) ) | ($spl3 | $spl22)),
  inference(forward_demodulation,[],[f7346,f6870])).
fof(f7346,plain,(
  ( ! [X15,X16] : (~p(s(bool,'const.bool.IN_2'(s(bool,'T_0'),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),sK14('const.marker.Cong_1'(s(bool,X15)),X16,bool))))))) | s(bool,'F_0') = s(bool,X15)) ) | ($spl3 | $spl22)),
  inference(subsumption_resolution,[],[f7345,f289])).
fof(f7345,plain,(
  ( ! [X15,X16] : (~p(s(bool,'T_0')) | ~p(s(bool,'const.bool.IN_2'(s(bool,'T_0'),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),sK14('const.marker.Cong_1'(s(bool,X15)),X16,bool))))))) | s(bool,'F_0') = s(bool,X15)) ) | ($spl3 | $spl22)),
  inference(forward_demodulation,[],[f2565,f6870])).
fof(f7343,plain,(
  ( ! [X20] : (s(bool,'F_0') = s(bool,X20)) ) | ($spl3 | $spl22)),
  inference(subsumption_resolution,[],[f7342,f289])).
fof(f7342,plain,(
  ( ! [X20] : (~p(s(bool,'T_0')) | s(bool,'F_0') = s(bool,X20)) ) | ($spl3 | $spl22)),
  inference(forward_demodulation,[],[f7341,f6870])).
fof(f7341,plain,(
  ( ! [X21,X19,X20] : (~p(s(bool,'const.bool.IN_2'(s(bool,X20),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),sK14('const.bool.BOUNDED_1'(s(bool,X19)),X21,bool))))))) | s(bool,'F_0') = s(bool,X20)) ) | ($spl3 | $spl22)),
  inference(subsumption_resolution,[],[f7340,f289])).
fof(f7340,plain,(
  ( ! [X21,X19,X20] : (~p(s(bool,'T_0')) | ~p(s(bool,'const.bool.IN_2'(s(bool,X20),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),sK14('const.bool.BOUNDED_1'(s(bool,X19)),X21,bool))))))) | s(bool,'F_0') = s(bool,X20)) ) | ($spl3 | $spl22)),
  inference(forward_demodulation,[],[f2567,f6870])).
fof(f7283,plain,(
  ( ! [X33,X34,X32] : (s('type.list.list'(bool),X34) = s('type.list.list'(bool),'const.list.APPEND_2'(s('type.list.list'(bool),'const.list.APPEND_2'(s('type.list.list'(bool),sK11('const.bool.IN_2'(s(X32,X33),s(fun(X32,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X32),'const.list.NIL_0')))),X34,bool)),s('type.list.list'(bool),'const.list.CONS_2'(s(bool,'T_0'),s('type.list.list'(bool),'const.list.NIL_0'))))),s('type.list.list'(bool),sK12('const.bool.IN_2'(s(X32,X33),s(fun(X32,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X32),'const.list.NIL_0')))),X34,bool))))) ) | ($spl3 | $spl22)),
  inference(subsumption_resolution,[],[f7282,f289])).
fof(f7282,plain,(
  ( ! [X33,X34,X32] : (~p(s(bool,'T_0')) | s('type.list.list'(bool),X34) = s('type.list.list'(bool),'const.list.APPEND_2'(s('type.list.list'(bool),'const.list.APPEND_2'(s('type.list.list'(bool),sK11('const.bool.IN_2'(s(X32,X33),s(fun(X32,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X32),'const.list.NIL_0')))),X34,bool)),s('type.list.list'(bool),'const.list.CONS_2'(s(bool,'T_0'),s('type.list.list'(bool),'const.list.NIL_0'))))),s('type.list.list'(bool),sK12('const.bool.IN_2'(s(X32,X33),s(fun(X32,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X32),'const.list.NIL_0')))),X34,bool))))) ) | ($spl3 | $spl22)),
  inference(forward_demodulation,[],[f7281,f6870])).
fof(f7281,plain,(
  ( ! [X33,X34,X32] : (s('type.list.list'(bool),X34) = s('type.list.list'(bool),'const.list.APPEND_2'(s('type.list.list'(bool),'const.list.APPEND_2'(s('type.list.list'(bool),sK11('const.bool.IN_2'(s(X32,X33),s(fun(X32,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X32),'const.list.NIL_0')))),X34,bool)),s('type.list.list'(bool),'const.list.CONS_2'(s(bool,'T_0'),s('type.list.list'(bool),'const.list.NIL_0'))))),s('type.list.list'(bool),sK12('const.bool.IN_2'(s(X32,X33),s(fun(X32,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X32),'const.list.NIL_0')))),X34,bool)))) | ~p(s(bool,'const.bool.IN_2'(s(bool,'F_0'),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),X34))))))) ) | ($spl3 | $spl22)),
  inference(forward_demodulation,[],[f6284,f6870])).
fof(f7280,plain,(
  ( ! [X2,X0,X1] : (s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),sK11(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.NIL_0'))))),s('type.list.list'(X0),sK12(X2,X1,X0))))) ) | ($spl3 | $spl22)),
  inference(subsumption_resolution,[],[f7279,f289])).
fof(f7279,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'T_0')) | s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),sK11(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.NIL_0'))))),s('type.list.list'(X0),sK12(X2,X1,X0))))) ) | ($spl3 | $spl22)),
  inference(forward_demodulation,[],[f375,f6870])).
fof(f7273,plain,(
  ( ! [X2,X0,X1] : (s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),sK13(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.NIL_0'))))),s('type.list.list'(X0),sK14(X2,X1,X0))))) ) | ($spl3 | $spl22)),
  inference(subsumption_resolution,[],[f7272,f289])).
fof(f7272,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'T_0')) | s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),sK13(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.NIL_0'))))),s('type.list.list'(X0),sK14(X2,X1,X0))))) ) | ($spl3 | $spl22)),
  inference(forward_demodulation,[],[f378,f6870])).
fof(f7237,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.list.list'(X0),X3) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),sK11('const.ind_type.FCONS_3'(s(X0,X1),s(fun('type.num.num',X0),X2),s('type.num.num','const.num.|48|_0')),X3,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X1),s('type.list.list'(X0),'const.list.NIL_0'))))),s('type.list.list'(X0),sK12('const.ind_type.FCONS_3'(s(X0,X1),s(fun('type.num.num',X0),X2),s('type.num.num','const.num.|48|_0')),X3,X0))))) ) | ($spl3 | $spl22)),
  inference(subsumption_resolution,[],[f7236,f289])).
fof(f7236,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,'T_0')) | s('type.list.list'(X0),X3) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),sK11('const.ind_type.FCONS_3'(s(X0,X1),s(fun('type.num.num',X0),X2),s('type.num.num','const.num.|48|_0')),X3,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X1),s('type.list.list'(X0),'const.list.NIL_0'))))),s('type.list.list'(X0),sK12('const.ind_type.FCONS_3'(s(X0,X1),s(fun('type.num.num',X0),X2),s('type.num.num','const.num.|48|_0')),X3,X0))))) ) | ($spl3 | $spl22)),
  inference(forward_demodulation,[],[f6280,f6870])).
fof(f7235,plain,(
  ( ! [X2,X0,X1] : (s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),sK11(X2,'const.list.APPEND_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),'const.list.NIL_0')),X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.NIL_0'))))),s('type.list.list'(X0),sK12(X2,'const.list.APPEND_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),'const.list.NIL_0')),X0))))) ) | ($spl3 | $spl22)),
  inference(subsumption_resolution,[],[f7234,f289])).
fof(f7234,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'T_0')) | s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),sK11(X2,'const.list.APPEND_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),'const.list.NIL_0')),X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.NIL_0'))))),s('type.list.list'(X0),sK12(X2,'const.list.APPEND_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),'const.list.NIL_0')),X0))))) ) | ($spl3 | $spl22)),
  inference(forward_demodulation,[],[f6299,f6870])).
fof(f7233,plain,(
  ( ! [X4,X5,X3] : (s('type.list.list'(X3),X4) = s('type.list.list'(X3),'const.list.APPEND_2'(s('type.list.list'(X3),'const.list.APPEND_2'(s('type.list.list'(X3),sK11(X5,'const.list.APPEND_2'(s('type.list.list'(X3),'const.list.NIL_0'),s('type.list.list'(X3),X4)),X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,X5),s('type.list.list'(X3),'const.list.NIL_0'))))),s('type.list.list'(X3),sK12(X5,'const.list.APPEND_2'(s('type.list.list'(X3),'const.list.NIL_0'),s('type.list.list'(X3),X4)),X3))))) ) | ($spl3 | $spl22)),
  inference(subsumption_resolution,[],[f7232,f289])).
fof(f7232,plain,(
  ( ! [X4,X5,X3] : (~p(s(bool,'T_0')) | s('type.list.list'(X3),X4) = s('type.list.list'(X3),'const.list.APPEND_2'(s('type.list.list'(X3),'const.list.APPEND_2'(s('type.list.list'(X3),sK11(X5,'const.list.APPEND_2'(s('type.list.list'(X3),'const.list.NIL_0'),s('type.list.list'(X3),X4)),X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,X5),s('type.list.list'(X3),'const.list.NIL_0'))))),s('type.list.list'(X3),sK12(X5,'const.list.APPEND_2'(s('type.list.list'(X3),'const.list.NIL_0'),s('type.list.list'(X3),X4)),X3))))) ) | ($spl3 | $spl22)),
  inference(forward_demodulation,[],[f6300,f6870])).
fof(f7231,plain,(
  ( ! [X14,X12,X13,X11] : (s('type.list.list'(X11),X12) = s('type.list.list'(X11),'const.list.APPEND_2'(s('type.list.list'(X11),'const.list.APPEND_2'(s('type.list.list'(X11),sK11(X14,'const.ind_type.FCONS_3'(s('type.list.list'(X11),X12),s(fun('type.num.num','type.list.list'(X11)),X13),s('type.num.num','const.num.|48|_0')),X11)),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,X14),s('type.list.list'(X11),'const.list.NIL_0'))))),s('type.list.list'(X11),sK12(X14,'const.ind_type.FCONS_3'(s('type.list.list'(X11),X12),s(fun('type.num.num','type.list.list'(X11)),X13),s('type.num.num','const.num.|48|_0')),X11))))) ) | ($spl3 | $spl22)),
  inference(subsumption_resolution,[],[f7230,f289])).
fof(f7230,plain,(
  ( ! [X14,X12,X13,X11] : (~p(s(bool,'T_0')) | s('type.list.list'(X11),X12) = s('type.list.list'(X11),'const.list.APPEND_2'(s('type.list.list'(X11),'const.list.APPEND_2'(s('type.list.list'(X11),sK11(X14,'const.ind_type.FCONS_3'(s('type.list.list'(X11),X12),s(fun('type.num.num','type.list.list'(X11)),X13),s('type.num.num','const.num.|48|_0')),X11)),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,X14),s('type.list.list'(X11),'const.list.NIL_0'))))),s('type.list.list'(X11),sK12(X14,'const.ind_type.FCONS_3'(s('type.list.list'(X11),X12),s(fun('type.num.num','type.list.list'(X11)),X13),s('type.num.num','const.num.|48|_0')),X11))))) ) | ($spl3 | $spl22)),
  inference(forward_demodulation,[],[f6302,f6870])).
fof(f7216,plain,(
  ( ! [X6,X10,X8,X7,X9] : (s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X7),s('type.list.list'(X6),'const.list.APPEND_2'(s('type.list.list'(X6),X8),s('type.list.list'(X6),X9))))) = s('type.list.list'(X6),'const.list.APPEND_2'(s('type.list.list'(X6),'const.list.APPEND_2'(s('type.list.list'(X6),sK11(X10,'const.list.APPEND_2'(s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X7),s('type.list.list'(X6),X8))),s('type.list.list'(X6),X9)),X6)),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X10),s('type.list.list'(X6),'const.list.NIL_0'))))),s('type.list.list'(X6),sK12(X10,'const.list.APPEND_2'(s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X7),s('type.list.list'(X6),X8))),s('type.list.list'(X6),X9)),X6))))) ) | ($spl3 | $spl22)),
  inference(subsumption_resolution,[],[f7215,f289])).
fof(f7215,plain,(
  ( ! [X6,X10,X8,X7,X9] : (~p(s(bool,'T_0')) | s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X7),s('type.list.list'(X6),'const.list.APPEND_2'(s('type.list.list'(X6),X8),s('type.list.list'(X6),X9))))) = s('type.list.list'(X6),'const.list.APPEND_2'(s('type.list.list'(X6),'const.list.APPEND_2'(s('type.list.list'(X6),sK11(X10,'const.list.APPEND_2'(s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X7),s('type.list.list'(X6),X8))),s('type.list.list'(X6),X9)),X6)),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X10),s('type.list.list'(X6),'const.list.NIL_0'))))),s('type.list.list'(X6),sK12(X10,'const.list.APPEND_2'(s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X7),s('type.list.list'(X6),X8))),s('type.list.list'(X6),X9)),X6))))) ) | ($spl3 | $spl22)),
  inference(forward_demodulation,[],[f6301,f6870])).
fof(f7199,plain,(
  ( ! [X26,X24,X23,X21,X25,X22,X20] : (s('type.list.list'(X20),happ(s(fun(X21,'type.list.list'(X20)),X22),s(X21,happ(s(fun(X23,X21),X24),s(X23,X25))))) = s('type.list.list'(X20),'const.list.APPEND_2'(s('type.list.list'(X20),'const.list.APPEND_2'(s('type.list.list'(X20),sK11(X26,happ(s(fun(X21,'type.list.list'(X20)),X22),s(X21,happ(s(fun(X23,X21),X24),s(X23,X25)))),X20)),s('type.list.list'(X20),'const.list.CONS_2'(s(X20,X26),s('type.list.list'(X20),'const.list.NIL_0'))))),s('type.list.list'(X20),sK12(X26,happ(s(fun(X21,'type.list.list'(X20)),X22),s(X21,happ(s(fun(X23,X21),X24),s(X23,X25)))),X20))))) ) | ($spl3 | $spl22)),
  inference(subsumption_resolution,[],[f7198,f289])).
fof(f7198,plain,(
  ( ! [X26,X24,X23,X21,X25,X22,X20] : (~p(s(bool,'T_0')) | s('type.list.list'(X20),happ(s(fun(X21,'type.list.list'(X20)),X22),s(X21,happ(s(fun(X23,X21),X24),s(X23,X25))))) = s('type.list.list'(X20),'const.list.APPEND_2'(s('type.list.list'(X20),'const.list.APPEND_2'(s('type.list.list'(X20),sK11(X26,happ(s(fun(X21,'type.list.list'(X20)),X22),s(X21,happ(s(fun(X23,X21),X24),s(X23,X25)))),X20)),s('type.list.list'(X20),'const.list.CONS_2'(s(X20,X26),s('type.list.list'(X20),'const.list.NIL_0'))))),s('type.list.list'(X20),sK12(X26,happ(s(fun(X21,'type.list.list'(X20)),X22),s(X21,happ(s(fun(X23,X21),X24),s(X23,X25)))),X20))))) ) | ($spl3 | $spl22)),
  inference(forward_demodulation,[],[f6266,f6870])).
fof(f7197,plain,(
  ( ! [X30,X28,X33,X31,X29,X27,X32] : (s('type.list.list'(X27),happ(s(fun(X28,'type.list.list'(X27)),'_dst_x0x1_2'(s(fun(X29,'type.list.list'(X27)),X30),s(fun(X28,X29),X31))),s(X28,X32))) = s('type.list.list'(X27),'const.list.APPEND_2'(s('type.list.list'(X27),'const.list.APPEND_2'(s('type.list.list'(X27),sK11(X33,happ(s(fun(X28,'type.list.list'(X27)),'_dst_x0x1_2'(s(fun(X29,'type.list.list'(X27)),X30),s(fun(X28,X29),X31))),s(X28,X32)),X27)),s('type.list.list'(X27),'const.list.CONS_2'(s(X27,X33),s('type.list.list'(X27),'const.list.NIL_0'))))),s('type.list.list'(X27),sK12(X33,happ(s(fun(X28,'type.list.list'(X27)),'_dst_x0x1_2'(s(fun(X29,'type.list.list'(X27)),X30),s(fun(X28,X29),X31))),s(X28,X32)),X27))))) ) | ($spl3 | $spl22)),
  inference(subsumption_resolution,[],[f7196,f289])).
fof(f7196,plain,(
  ( ! [X30,X28,X33,X31,X29,X27,X32] : (~p(s(bool,'T_0')) | s('type.list.list'(X27),happ(s(fun(X28,'type.list.list'(X27)),'_dst_x0x1_2'(s(fun(X29,'type.list.list'(X27)),X30),s(fun(X28,X29),X31))),s(X28,X32))) = s('type.list.list'(X27),'const.list.APPEND_2'(s('type.list.list'(X27),'const.list.APPEND_2'(s('type.list.list'(X27),sK11(X33,happ(s(fun(X28,'type.list.list'(X27)),'_dst_x0x1_2'(s(fun(X29,'type.list.list'(X27)),X30),s(fun(X28,X29),X31))),s(X28,X32)),X27)),s('type.list.list'(X27),'const.list.CONS_2'(s(X27,X33),s('type.list.list'(X27),'const.list.NIL_0'))))),s('type.list.list'(X27),sK12(X33,happ(s(fun(X28,'type.list.list'(X27)),'_dst_x0x1_2'(s(fun(X29,'type.list.list'(X27)),X30),s(fun(X28,X29),X31))),s(X28,X32)),X27))))) ) | ($spl3 | $spl22)),
  inference(forward_demodulation,[],[f6267,f6870])).
fof(f7195,plain,(
  ( ! [X19,X17,X15,X18,X16] : (s('type.list.list'(X15),happ(s(fun('type.num.num','type.list.list'(X15)),X17),s('type.num.num',X18))) = s('type.list.list'(X15),'const.list.APPEND_2'(s('type.list.list'(X15),'const.list.APPEND_2'(s('type.list.list'(X15),sK11(X19,'const.ind_type.FCONS_3'(s('type.list.list'(X15),X16),s(fun('type.num.num','type.list.list'(X15)),X17),s('type.num.num','const.num.SUC_1'(s('type.num.num',X18)))),X15)),s('type.list.list'(X15),'const.list.CONS_2'(s(X15,X19),s('type.list.list'(X15),'const.list.NIL_0'))))),s('type.list.list'(X15),sK12(X19,'const.ind_type.FCONS_3'(s('type.list.list'(X15),X16),s(fun('type.num.num','type.list.list'(X15)),X17),s('type.num.num','const.num.SUC_1'(s('type.num.num',X18)))),X15))))) ) | ($spl3 | $spl22)),
  inference(subsumption_resolution,[],[f7194,f289])).
fof(f7194,plain,(
  ( ! [X19,X17,X15,X18,X16] : (~p(s(bool,'T_0')) | s('type.list.list'(X15),happ(s(fun('type.num.num','type.list.list'(X15)),X17),s('type.num.num',X18))) = s('type.list.list'(X15),'const.list.APPEND_2'(s('type.list.list'(X15),'const.list.APPEND_2'(s('type.list.list'(X15),sK11(X19,'const.ind_type.FCONS_3'(s('type.list.list'(X15),X16),s(fun('type.num.num','type.list.list'(X15)),X17),s('type.num.num','const.num.SUC_1'(s('type.num.num',X18)))),X15)),s('type.list.list'(X15),'const.list.CONS_2'(s(X15,X19),s('type.list.list'(X15),'const.list.NIL_0'))))),s('type.list.list'(X15),sK12(X19,'const.ind_type.FCONS_3'(s('type.list.list'(X15),X16),s(fun('type.num.num','type.list.list'(X15)),X17),s('type.num.num','const.num.SUC_1'(s('type.num.num',X18)))),X15))))) ) | ($spl3 | $spl22)),
  inference(forward_demodulation,[],[f6303,f6870])).
fof(f7193,plain,(
  ( ! [X6,X4,X8,X7,X5] : (s('type.list.list'(X4),X8) = s('type.list.list'(X4),'const.list.APPEND_2'(s('type.list.list'(X4),'const.list.APPEND_2'(s('type.list.list'(X4),sK11('const.ind_type.FCONS_3'(s(X4,X5),s(fun('type.num.num',X4),X6),s('type.num.num','const.num.SUC_1'(s('type.num.num',X7)))),X8,X4)),s('type.list.list'(X4),'const.list.CONS_2'(s(X4,happ(s(fun('type.num.num',X4),X6),s('type.num.num',X7))),s('type.list.list'(X4),'const.list.NIL_0'))))),s('type.list.list'(X4),sK12('const.ind_type.FCONS_3'(s(X4,X5),s(fun('type.num.num',X4),X6),s('type.num.num','const.num.SUC_1'(s('type.num.num',X7)))),X8,X4))))) ) | ($spl3 | $spl22)),
  inference(subsumption_resolution,[],[f7192,f289])).
fof(f7192,plain,(
  ( ! [X6,X4,X8,X7,X5] : (~p(s(bool,'T_0')) | s('type.list.list'(X4),X8) = s('type.list.list'(X4),'const.list.APPEND_2'(s('type.list.list'(X4),'const.list.APPEND_2'(s('type.list.list'(X4),sK11('const.ind_type.FCONS_3'(s(X4,X5),s(fun('type.num.num',X4),X6),s('type.num.num','const.num.SUC_1'(s('type.num.num',X7)))),X8,X4)),s('type.list.list'(X4),'const.list.CONS_2'(s(X4,happ(s(fun('type.num.num',X4),X6),s('type.num.num',X7))),s('type.list.list'(X4),'const.list.NIL_0'))))),s('type.list.list'(X4),sK12('const.ind_type.FCONS_3'(s(X4,X5),s(fun('type.num.num',X4),X6),s('type.num.num','const.num.SUC_1'(s('type.num.num',X7)))),X8,X4))))) ) | ($spl3 | $spl22)),
  inference(forward_demodulation,[],[f6281,f6870])).
fof(f7162,plain,(
  ( ! [X21,X19,X17,X22,X20,X18,X16] : (s('type.list.list'(X16),X22) = s('type.list.list'(X16),'const.list.APPEND_2'(s('type.list.list'(X16),'const.list.APPEND_2'(s('type.list.list'(X16),sK11(happ(s(fun(X17,X16),'_dst_x0x1_2'(s(fun(X18,X16),X19),s(fun(X17,X18),X20))),s(X17,X21)),X22,X16)),s('type.list.list'(X16),'const.list.CONS_2'(s(X16,happ(s(fun(X17,X16),'_dst_x0x1_2'(s(fun(X18,X16),X19),s(fun(X17,X18),X20))),s(X17,X21))),s('type.list.list'(X16),'const.list.NIL_0'))))),s('type.list.list'(X16),sK12(happ(s(fun(X17,X16),'_dst_x0x1_2'(s(fun(X18,X16),X19),s(fun(X17,X18),X20))),s(X17,X21)),X22,X16))))) ) | ($spl3 | $spl22)),
  inference(subsumption_resolution,[],[f7161,f289])).
fof(f7161,plain,(
  ( ! [X21,X19,X17,X22,X20,X18,X16] : (~p(s(bool,'T_0')) | s('type.list.list'(X16),X22) = s('type.list.list'(X16),'const.list.APPEND_2'(s('type.list.list'(X16),'const.list.APPEND_2'(s('type.list.list'(X16),sK11(happ(s(fun(X17,X16),'_dst_x0x1_2'(s(fun(X18,X16),X19),s(fun(X17,X18),X20))),s(X17,X21)),X22,X16)),s('type.list.list'(X16),'const.list.CONS_2'(s(X16,happ(s(fun(X17,X16),'_dst_x0x1_2'(s(fun(X18,X16),X19),s(fun(X17,X18),X20))),s(X17,X21))),s('type.list.list'(X16),'const.list.NIL_0'))))),s('type.list.list'(X16),sK12(happ(s(fun(X17,X16),'_dst_x0x1_2'(s(fun(X18,X16),X19),s(fun(X17,X18),X20))),s(X17,X21)),X22,X16))))) ) | ($spl3 | $spl22)),
  inference(forward_demodulation,[],[f6241,f6870])).
fof(f7140,plain,(
  ( ! [X14,X12,X10,X15,X13,X11,X9] : (s('type.list.list'(X9),X15) = s('type.list.list'(X9),'const.list.APPEND_2'(s('type.list.list'(X9),'const.list.APPEND_2'(s('type.list.list'(X9),sK11(happ(s(fun(X10,X9),X11),s(X10,happ(s(fun(X12,X10),X13),s(X12,X14)))),X15,X9)),s('type.list.list'(X9),'const.list.CONS_2'(s(X9,happ(s(fun(X10,X9),X11),s(X10,happ(s(fun(X12,X10),X13),s(X12,X14))))),s('type.list.list'(X9),'const.list.NIL_0'))))),s('type.list.list'(X9),sK12(happ(s(fun(X10,X9),X11),s(X10,happ(s(fun(X12,X10),X13),s(X12,X14)))),X15,X9))))) ) | ($spl3 | $spl22)),
  inference(subsumption_resolution,[],[f7139,f289])).
fof(f7139,plain,(
  ( ! [X14,X12,X10,X15,X13,X11,X9] : (~p(s(bool,'T_0')) | s('type.list.list'(X9),X15) = s('type.list.list'(X9),'const.list.APPEND_2'(s('type.list.list'(X9),'const.list.APPEND_2'(s('type.list.list'(X9),sK11(happ(s(fun(X10,X9),X11),s(X10,happ(s(fun(X12,X10),X13),s(X12,X14)))),X15,X9)),s('type.list.list'(X9),'const.list.CONS_2'(s(X9,happ(s(fun(X10,X9),X11),s(X10,happ(s(fun(X12,X10),X13),s(X12,X14))))),s('type.list.list'(X9),'const.list.NIL_0'))))),s('type.list.list'(X9),sK12(happ(s(fun(X10,X9),X11),s(X10,happ(s(fun(X12,X10),X13),s(X12,X14)))),X15,X9))))) ) | ($spl3 | $spl22)),
  inference(forward_demodulation,[],[f6240,f6870])).
fof(f7126,plain,(
  ( ! [X52,X51] : (s('type.list.list'(bool),X52) = s('type.list.list'(bool),'const.list.APPEND_2'(s('type.list.list'(bool),'const.list.APPEND_2'(s('type.list.list'(bool),sK11('const.bool.BOUNDED_1'(s(bool,X51)),X52,bool)),s('type.list.list'(bool),'const.list.CONS_2'(s(bool,'T_0'),s('type.list.list'(bool),'const.list.NIL_0'))))),s('type.list.list'(bool),sK12('const.bool.BOUNDED_1'(s(bool,X51)),X52,bool))))) ) | ($spl3 | $spl22)),
  inference(subsumption_resolution,[],[f7125,f289])).
fof(f7125,plain,(
  ( ! [X52,X51] : (~p(s(bool,'T_0')) | s('type.list.list'(bool),X52) = s('type.list.list'(bool),'const.list.APPEND_2'(s('type.list.list'(bool),'const.list.APPEND_2'(s('type.list.list'(bool),sK11('const.bool.BOUNDED_1'(s(bool,X51)),X52,bool)),s('type.list.list'(bool),'const.list.CONS_2'(s(bool,'T_0'),s('type.list.list'(bool),'const.list.NIL_0'))))),s('type.list.list'(bool),sK12('const.bool.BOUNDED_1'(s(bool,X51)),X52,bool))))) ) | ($spl3 | $spl22)),
  inference(forward_demodulation,[],[f6294,f6870])).
fof(f7116,plain,(
  ( ! [X47,X46] : (s('type.list.list'(bool),X47) = s('type.list.list'(bool),'const.list.APPEND_2'(s('type.list.list'(bool),'const.list.APPEND_2'(s('type.list.list'(bool),sK11('const.marker.Cong_1'(s(bool,X46)),X47,bool)),s('type.list.list'(bool),'const.list.CONS_2'(s(bool,X46),s('type.list.list'(bool),'const.list.NIL_0'))))),s('type.list.list'(bool),sK12('const.marker.Cong_1'(s(bool,X46)),X47,bool))))) ) | ($spl3 | $spl22)),
  inference(subsumption_resolution,[],[f7115,f289])).
fof(f7115,plain,(
  ( ! [X47,X46] : (~p(s(bool,'T_0')) | s('type.list.list'(bool),X47) = s('type.list.list'(bool),'const.list.APPEND_2'(s('type.list.list'(bool),'const.list.APPEND_2'(s('type.list.list'(bool),sK11('const.marker.Cong_1'(s(bool,X46)),X47,bool)),s('type.list.list'(bool),'const.list.CONS_2'(s(bool,X46),s('type.list.list'(bool),'const.list.NIL_0'))))),s('type.list.list'(bool),sK12('const.marker.Cong_1'(s(bool,X46)),X47,bool))))) ) | ($spl3 | $spl22)),
  inference(forward_demodulation,[],[f6292,f6870])).
fof(f7114,plain,(
  ( ! [X57,X58,X56] : (s('type.list.list'('type.list.list'(X56)),X58) = s('type.list.list'('type.list.list'(X56)),'const.list.APPEND_2'(s('type.list.list'('type.list.list'(X56)),'const.list.APPEND_2'(s('type.list.list'('type.list.list'(X56)),sK11('const.list.APPEND_2'(s('type.list.list'(X56),'const.list.NIL_0'),s('type.list.list'(X56),X57)),X58,'type.list.list'(X56))),s('type.list.list'('type.list.list'(X56)),'const.list.CONS_2'(s('type.list.list'(X56),X57),s('type.list.list'('type.list.list'(X56)),'const.list.NIL_0'))))),s('type.list.list'('type.list.list'(X56)),sK12('const.list.APPEND_2'(s('type.list.list'(X56),'const.list.NIL_0'),s('type.list.list'(X56),X57)),X58,'type.list.list'(X56)))))) ) | ($spl3 | $spl22)),
  inference(subsumption_resolution,[],[f7113,f289])).
fof(f7113,plain,(
  ( ! [X57,X58,X56] : (~p(s(bool,'T_0')) | s('type.list.list'('type.list.list'(X56)),X58) = s('type.list.list'('type.list.list'(X56)),'const.list.APPEND_2'(s('type.list.list'('type.list.list'(X56)),'const.list.APPEND_2'(s('type.list.list'('type.list.list'(X56)),sK11('const.list.APPEND_2'(s('type.list.list'(X56),'const.list.NIL_0'),s('type.list.list'(X56),X57)),X58,'type.list.list'(X56))),s('type.list.list'('type.list.list'(X56)),'const.list.CONS_2'(s('type.list.list'(X56),X57),s('type.list.list'('type.list.list'(X56)),'const.list.NIL_0'))))),s('type.list.list'('type.list.list'(X56)),sK12('const.list.APPEND_2'(s('type.list.list'(X56),'const.list.NIL_0'),s('type.list.list'(X56),X57)),X58,'type.list.list'(X56)))))) ) | ($spl3 | $spl22)),
  inference(forward_demodulation,[],[f6296,f6870])).
fof(f7112,plain,(
  ( ! [X54,X55,X53] : (s('type.list.list'('type.list.list'(X53)),X55) = s('type.list.list'('type.list.list'(X53)),'const.list.APPEND_2'(s('type.list.list'('type.list.list'(X53)),'const.list.APPEND_2'(s('type.list.list'('type.list.list'(X53)),sK11('const.list.APPEND_2'(s('type.list.list'(X53),X54),s('type.list.list'(X53),'const.list.NIL_0')),X55,'type.list.list'(X53))),s('type.list.list'('type.list.list'(X53)),'const.list.CONS_2'(s('type.list.list'(X53),X54),s('type.list.list'('type.list.list'(X53)),'const.list.NIL_0'))))),s('type.list.list'('type.list.list'(X53)),sK12('const.list.APPEND_2'(s('type.list.list'(X53),X54),s('type.list.list'(X53),'const.list.NIL_0')),X55,'type.list.list'(X53)))))) ) | ($spl3 | $spl22)),
  inference(subsumption_resolution,[],[f7111,f289])).
fof(f7111,plain,(
  ( ! [X54,X55,X53] : (~p(s(bool,'T_0')) | s('type.list.list'('type.list.list'(X53)),X55) = s('type.list.list'('type.list.list'(X53)),'const.list.APPEND_2'(s('type.list.list'('type.list.list'(X53)),'const.list.APPEND_2'(s('type.list.list'('type.list.list'(X53)),sK11('const.list.APPEND_2'(s('type.list.list'(X53),X54),s('type.list.list'(X53),'const.list.NIL_0')),X55,'type.list.list'(X53))),s('type.list.list'('type.list.list'(X53)),'const.list.CONS_2'(s('type.list.list'(X53),X54),s('type.list.list'('type.list.list'(X53)),'const.list.NIL_0'))))),s('type.list.list'('type.list.list'(X53)),sK12('const.list.APPEND_2'(s('type.list.list'(X53),X54),s('type.list.list'(X53),'const.list.NIL_0')),X55,'type.list.list'(X53)))))) ) | ($spl3 | $spl22)),
  inference(forward_demodulation,[],[f6295,f6870])).
fof(f7094,plain,(
  ( ! [X61,X59,X62,X60,X63] : (s('type.list.list'('type.list.list'(X59)),X63) = s('type.list.list'('type.list.list'(X59)),'const.list.APPEND_2'(s('type.list.list'('type.list.list'(X59)),'const.list.APPEND_2'(s('type.list.list'('type.list.list'(X59)),sK11('const.list.APPEND_2'(s('type.list.list'(X59),'const.list.CONS_2'(s(X59,X60),s('type.list.list'(X59),X61))),s('type.list.list'(X59),X62)),X63,'type.list.list'(X59))),s('type.list.list'('type.list.list'(X59)),'const.list.CONS_2'(s('type.list.list'(X59),'const.list.CONS_2'(s(X59,X60),s('type.list.list'(X59),'const.list.APPEND_2'(s('type.list.list'(X59),X61),s('type.list.list'(X59),X62))))),s('type.list.list'('type.list.list'(X59)),'const.list.NIL_0'))))),s('type.list.list'('type.list.list'(X59)),sK12('const.list.APPEND_2'(s('type.list.list'(X59),'const.list.CONS_2'(s(X59,X60),s('type.list.list'(X59),X61))),s('type.list.list'(X59),X62)),X63,'type.list.list'(X59)))))) ) | ($spl3 | $spl22)),
  inference(subsumption_resolution,[],[f7093,f289])).
fof(f7093,plain,(
  ( ! [X61,X59,X62,X60,X63] : (~p(s(bool,'T_0')) | s('type.list.list'('type.list.list'(X59)),X63) = s('type.list.list'('type.list.list'(X59)),'const.list.APPEND_2'(s('type.list.list'('type.list.list'(X59)),'const.list.APPEND_2'(s('type.list.list'('type.list.list'(X59)),sK11('const.list.APPEND_2'(s('type.list.list'(X59),'const.list.CONS_2'(s(X59,X60),s('type.list.list'(X59),X61))),s('type.list.list'(X59),X62)),X63,'type.list.list'(X59))),s('type.list.list'('type.list.list'(X59)),'const.list.CONS_2'(s('type.list.list'(X59),'const.list.CONS_2'(s(X59,X60),s('type.list.list'(X59),'const.list.APPEND_2'(s('type.list.list'(X59),X61),s('type.list.list'(X59),X62))))),s('type.list.list'('type.list.list'(X59)),'const.list.NIL_0'))))),s('type.list.list'('type.list.list'(X59)),sK12('const.list.APPEND_2'(s('type.list.list'(X59),'const.list.CONS_2'(s(X59,X60),s('type.list.list'(X59),X61))),s('type.list.list'(X59),X62)),X63,'type.list.list'(X59)))))) ) | ($spl3 | $spl22)),
  inference(forward_demodulation,[],[f6297,f6870])).
fof(f7084,plain,(
  ( ! [X68,X66,X64,X67,X65] : (s('type.list.list'('type.ind_type.recspace'(X64)),X68) = s('type.list.list'('type.ind_type.recspace'(X64)),'const.list.APPEND_2'(s('type.list.list'('type.ind_type.recspace'(X64)),'const.list.APPEND_2'(s('type.list.list'('type.ind_type.recspace'(X64)),sK11(happ(s(fun(fun('type.num.num','type.ind_type.recspace'(X64)),'type.ind_type.recspace'(X64)),happ(s(fun(X64,fun(fun('type.num.num','type.ind_type.recspace'(X64)),'type.ind_type.recspace'(X64))),'const.ind_type.CONSTR_1'(s('type.num.num',X65))),s(X64,X66))),s(fun('type.num.num','type.ind_type.recspace'(X64)),X67)),X68,'type.ind_type.recspace'(X64))),s('type.list.list'('type.ind_type.recspace'(X64)),'const.list.CONS_2'(s('type.ind_type.recspace'(X64),'const.ind_type.CONSTR_3'(s('type.num.num',X65),s(X64,X66),s(fun('type.num.num','type.ind_type.recspace'(X64)),X67))),s('type.list.list'('type.ind_type.recspace'(X64)),'const.list.NIL_0'))))),s('type.list.list'('type.ind_type.recspace'(X64)),sK12(happ(s(fun(fun('type.num.num','type.ind_type.recspace'(X64)),'type.ind_type.recspace'(X64)),happ(s(fun(X64,fun(fun('type.num.num','type.ind_type.recspace'(X64)),'type.ind_type.recspace'(X64))),'const.ind_type.CONSTR_1'(s('type.num.num',X65))),s(X64,X66))),s(fun('type.num.num','type.ind_type.recspace'(X64)),X67)),X68,'type.ind_type.recspace'(X64)))))) ) | ($spl3 | $spl22)),
  inference(subsumption_resolution,[],[f7083,f289])).
fof(f7083,plain,(
  ( ! [X68,X66,X64,X67,X65] : (~p(s(bool,'T_0')) | s('type.list.list'('type.ind_type.recspace'(X64)),X68) = s('type.list.list'('type.ind_type.recspace'(X64)),'const.list.APPEND_2'(s('type.list.list'('type.ind_type.recspace'(X64)),'const.list.APPEND_2'(s('type.list.list'('type.ind_type.recspace'(X64)),sK11(happ(s(fun(fun('type.num.num','type.ind_type.recspace'(X64)),'type.ind_type.recspace'(X64)),happ(s(fun(X64,fun(fun('type.num.num','type.ind_type.recspace'(X64)),'type.ind_type.recspace'(X64))),'const.ind_type.CONSTR_1'(s('type.num.num',X65))),s(X64,X66))),s(fun('type.num.num','type.ind_type.recspace'(X64)),X67)),X68,'type.ind_type.recspace'(X64))),s('type.list.list'('type.ind_type.recspace'(X64)),'const.list.CONS_2'(s('type.ind_type.recspace'(X64),'const.ind_type.CONSTR_3'(s('type.num.num',X65),s(X64,X66),s(fun('type.num.num','type.ind_type.recspace'(X64)),X67))),s('type.list.list'('type.ind_type.recspace'(X64)),'const.list.NIL_0'))))),s('type.list.list'('type.ind_type.recspace'(X64)),sK12(happ(s(fun(fun('type.num.num','type.ind_type.recspace'(X64)),'type.ind_type.recspace'(X64)),happ(s(fun(X64,fun(fun('type.num.num','type.ind_type.recspace'(X64)),'type.ind_type.recspace'(X64))),'const.ind_type.CONSTR_1'(s('type.num.num',X65))),s(X64,X66))),s(fun('type.num.num','type.ind_type.recspace'(X64)),X67)),X68,'type.ind_type.recspace'(X64)))))) ) | ($spl3 | $spl22)),
  inference(forward_demodulation,[],[f6298,f6870])).
fof(f7063,plain,(
  ( ! [X2,X0,X1] : (s(X0,X2) = s(X0,sK15(X2,X1,X0))) ) | ($spl3 | $spl22)),
  inference(subsumption_resolution,[],[f7062,f289])).
fof(f7062,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'T_0')) | s(X0,X2) = s(X0,sK15(X2,X1,X0))) ) | ($spl3 | $spl22)),
  inference(forward_demodulation,[],[f388,f6870])).
fof(f7060,plain,(
  ( ! [X2,X0,X3,X1] : (s(X0,X3) = s(X0,sK15(X3,'const.ind_type.FCONS_3'(s(fun(X0,bool),X1),s(fun('type.num.num',fun(X0,bool)),X2),s('type.num.num','const.num.|48|_0')),X0))) ) | ($spl3 | $spl22)),
  inference(subsumption_resolution,[],[f7059,f289])).
fof(f7059,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,'T_0')) | s(X0,X3) = s(X0,sK15(X3,'const.ind_type.FCONS_3'(s(fun(X0,bool),X1),s(fun('type.num.num',fun(X0,bool)),X2),s('type.num.num','const.num.|48|_0')),X0))) ) | ($spl3 | $spl22)),
  inference(forward_demodulation,[],[f789,f6870])).
fof(f7058,plain,(
  ( ! [X23,X21,X22,X20] : (s(X20,X21) = s(X20,sK15('const.ind_type.FCONS_3'(s(X20,X21),s(fun('type.num.num',X20),X22),s('type.num.num','const.num.|48|_0')),X23,X20))) ) | ($spl3 | $spl22)),
  inference(subsumption_resolution,[],[f7057,f289])).
fof(f7057,plain,(
  ( ! [X23,X21,X22,X20] : (~p(s(bool,'T_0')) | s(X20,X21) = s(X20,sK15('const.ind_type.FCONS_3'(s(X20,X21),s(fun('type.num.num',X20),X22),s('type.num.num','const.num.|48|_0')),X23,X20))) ) | ($spl3 | $spl22)),
  inference(forward_demodulation,[],[f808,f6870])).
fof(f7026,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s(X0,happ(s(fun('type.num.num',X0),X2),s('type.num.num',X3))) = s(X0,sK15('const.ind_type.FCONS_3'(s(X0,X1),s(fun('type.num.num',X0),X2),s('type.num.num','const.num.SUC_1'(s('type.num.num',X3)))),X4,X0))) ) | ($spl3 | $spl22)),
  inference(subsumption_resolution,[],[f7025,f289])).
fof(f7025,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~p(s(bool,'T_0')) | s(X0,happ(s(fun('type.num.num',X0),X2),s('type.num.num',X3))) = s(X0,sK15('const.ind_type.FCONS_3'(s(X0,X1),s(fun('type.num.num',X0),X2),s('type.num.num','const.num.SUC_1'(s('type.num.num',X3)))),X4,X0))) ) | ($spl3 | $spl22)),
  inference(forward_demodulation,[],[f1781,f6870])).
fof(f7012,plain,(
  ( ! [X116,X114,X112,X115,X113] : (s(X112,X116) = s(X112,sK15(X116,'_dst_x0x1_2'(s(fun(X113,bool),X114),s(fun(X112,X113),X115)),X112))) ) | ($spl3 | $spl22)),
  inference(subsumption_resolution,[],[f7011,f289])).
fof(f7011,plain,(
  ( ! [X116,X114,X112,X115,X113] : (~p(s(bool,'T_0')) | s(X112,X116) = s(X112,sK15(X116,'_dst_x0x1_2'(s(fun(X113,bool),X114),s(fun(X112,X113),X115)),X112))) ) | ($spl3 | $spl22)),
  inference(forward_demodulation,[],[f4715,f6870])).
fof(f7001,plain,(
  ( ! [X52,X50,X53,X51,X49] : (s('type.ind_type.recspace'(X49),'const.ind_type.CONSTR_3'(s('type.num.num',X50),s(X49,X51),s(fun('type.num.num','type.ind_type.recspace'(X49)),X52))) = s('type.ind_type.recspace'(X49),sK15(happ(s(fun(fun('type.num.num','type.ind_type.recspace'(X49)),'type.ind_type.recspace'(X49)),happ(s(fun(X49,fun(fun('type.num.num','type.ind_type.recspace'(X49)),'type.ind_type.recspace'(X49))),'const.ind_type.CONSTR_1'(s('type.num.num',X50))),s(X49,X51))),s(fun('type.num.num','type.ind_type.recspace'(X49)),X52)),X53,'type.ind_type.recspace'(X49)))) ) | ($spl3 | $spl22)),
  inference(subsumption_resolution,[],[f6920,f289])).
fof(f6920,plain,(
  ( ! [X52,X50,X53,X51,X49] : (~p(s(bool,'T_0')) | s('type.ind_type.recspace'(X49),'const.ind_type.CONSTR_3'(s('type.num.num',X50),s(X49,X51),s(fun('type.num.num','type.ind_type.recspace'(X49)),X52))) = s('type.ind_type.recspace'(X49),sK15(happ(s(fun(fun('type.num.num','type.ind_type.recspace'(X49)),'type.ind_type.recspace'(X49)),happ(s(fun(X49,fun(fun('type.num.num','type.ind_type.recspace'(X49)),'type.ind_type.recspace'(X49))),'const.ind_type.CONSTR_1'(s('type.num.num',X50))),s(X49,X51))),s(fun('type.num.num','type.ind_type.recspace'(X49)),X52)),X53,'type.ind_type.recspace'(X49)))) ) | ($spl3 | $spl22)),
  inference(backward_demodulation,[],[f6870,f6104])).
fof(f6996,plain,(
  ( ! [X142,X140,X143,X141,X139] : (s('type.list.list'(X139),'const.list.CONS_2'(s(X139,X140),s('type.list.list'(X139),'const.list.APPEND_2'(s('type.list.list'(X139),X141),s('type.list.list'(X139),X142))))) = s('type.list.list'(X139),sK15('const.list.APPEND_2'(s('type.list.list'(X139),'const.list.CONS_2'(s(X139,X140),s('type.list.list'(X139),X141))),s('type.list.list'(X139),X142)),X143,'type.list.list'(X139)))) ) | ($spl3 | $spl22)),
  inference(subsumption_resolution,[],[f6917,f289])).
fof(f6917,plain,(
  ( ! [X142,X140,X143,X141,X139] : (~p(s(bool,'T_0')) | s('type.list.list'(X139),'const.list.CONS_2'(s(X139,X140),s('type.list.list'(X139),'const.list.APPEND_2'(s('type.list.list'(X139),X141),s('type.list.list'(X139),X142))))) = s('type.list.list'(X139),sK15('const.list.APPEND_2'(s('type.list.list'(X139),'const.list.CONS_2'(s(X139,X140),s('type.list.list'(X139),X141))),s('type.list.list'(X139),X142)),X143,'type.list.list'(X139)))) ) | ($spl3 | $spl22)),
  inference(backward_demodulation,[],[f6870,f3899])).
fof(f6989,plain,(
  ( ! [X14,X15,X16] : (s('type.list.list'(X14),X15) = s('type.list.list'(X14),sK15('const.list.APPEND_2'(s('type.list.list'(X14),X15),s('type.list.list'(X14),'const.list.NIL_0')),X16,'type.list.list'(X14)))) ) | ($spl3 | $spl22)),
  inference(subsumption_resolution,[],[f6912,f289])).
fof(f6912,plain,(
  ( ! [X14,X15,X16] : (~p(s(bool,'T_0')) | s('type.list.list'(X14),X15) = s('type.list.list'(X14),sK15('const.list.APPEND_2'(s('type.list.list'(X14),X15),s('type.list.list'(X14),'const.list.NIL_0')),X16,'type.list.list'(X14)))) ) | ($spl3 | $spl22)),
  inference(backward_demodulation,[],[f6870,f806])).
fof(f6988,plain,(
  ( ! [X19,X17,X18] : (s('type.list.list'(X17),X18) = s('type.list.list'(X17),sK15('const.list.APPEND_2'(s('type.list.list'(X17),'const.list.NIL_0'),s('type.list.list'(X17),X18)),X19,'type.list.list'(X17)))) ) | ($spl3 | $spl22)),
  inference(subsumption_resolution,[],[f6911,f289])).
fof(f6911,plain,(
  ( ! [X19,X17,X18] : (~p(s(bool,'T_0')) | s('type.list.list'(X17),X18) = s('type.list.list'(X17),sK15('const.list.APPEND_2'(s('type.list.list'(X17),'const.list.NIL_0'),s('type.list.list'(X17),X18)),X19,'type.list.list'(X17)))) ) | ($spl3 | $spl22)),
  inference(backward_demodulation,[],[f6870,f807])).
fof(f6967,plain,(
  ( ! [X10,X11] : (s(bool,X10) = s(bool,sK15('const.marker.Cong_1'(s(bool,X10)),X11,bool))) ) | ($spl3 | $spl22)),
  inference(subsumption_resolution,[],[f6900,f289])).
fof(f6900,plain,(
  ( ! [X10,X11] : (~p(s(bool,'T_0')) | s(bool,X10) = s(bool,sK15('const.marker.Cong_1'(s(bool,X10)),X11,bool))) ) | ($spl3 | $spl22)),
  inference(backward_demodulation,[],[f6870,f804])).
fof(f6952,plain,(
  ( ! [X80,X83,X81,X84,X82] : (s(X80,X84) = s(X80,sK15(X84,'const.ind_type.FCONS_3'(s(fun(X80,bool),X81),s(fun('type.num.num',fun(X80,bool)),X82),s('type.num.num','const.num.SUC_1'(s('type.num.num',X83)))),X80))) ) | ($spl3 | $spl22)),
  inference(subsumption_resolution,[],[f6888,f289])).
fof(f6888,plain,(
  ( ! [X80,X83,X81,X84,X82] : (~p(s(bool,'T_0')) | s(X80,X84) = s(X80,sK15(X84,'const.ind_type.FCONS_3'(s(fun(X80,bool),X81),s(fun('type.num.num',fun(X80,bool)),X82),s('type.num.num','const.num.SUC_1'(s('type.num.num',X83)))),X80))) ) | ($spl3 | $spl22)),
  inference(backward_demodulation,[],[f6870,f1769])).
fof(f6945,plain,(
  ( ! [X253,X251,X249,X252,X250,X248,X247] : (s(X247,X253) = s(X247,sK15(X253,happ(s(fun(X248,fun(X247,bool)),X249),s(X248,happ(s(fun(X250,X248),X251),s(X250,X252)))),X247))) ) | ($spl3 | $spl22)),
  inference(subsumption_resolution,[],[f6884,f289])).
fof(f6884,plain,(
  ( ! [X253,X251,X249,X252,X250,X248,X247] : (~p(s(bool,'T_0')) | s(X247,X253) = s(X247,sK15(X253,happ(s(fun(X248,fun(X247,bool)),X249),s(X248,happ(s(fun(X250,X248),X251),s(X250,X252)))),X247))) ) | ($spl3 | $spl22)),
  inference(backward_demodulation,[],[f6870,f4669])).
fof(f6938,plain,(
  ( ! [X269,X271,X267,X273,X268,X270,X272] : (s(X267,X273) = s(X267,sK15(X273,happ(s(fun(X268,fun(X267,bool)),'_dst_x0x1_2'(s(fun(X269,fun(X267,bool)),X270),s(fun(X268,X269),X271))),s(X268,X272)),X267))) ) | ($spl3 | $spl22)),
  inference(subsumption_resolution,[],[f6880,f289])).
fof(f6880,plain,(
  ( ! [X269,X271,X267,X273,X268,X270,X272] : (~p(s(bool,'T_0')) | s(X267,X273) = s(X267,sK15(X273,happ(s(fun(X268,fun(X267,bool)),'_dst_x0x1_2'(s(fun(X269,fun(X267,bool)),X270),s(fun(X268,X269),X271))),s(X268,X272)),X267))) ) | ($spl3 | $spl22)),
  inference(backward_demodulation,[],[f6870,f4742])).
fof(f6933,plain,(
  ( ! [X116,X114,X112,X115,X113] : (s(X112,happ(s(fun(X114,X112),X115),s(X114,X116))) = s(X112,sK15(happ(s(fun(X114,X112),X115),s(X114,X116)),X113,X112))) ) | ($spl3 | $spl22)),
  inference(subsumption_resolution,[],[f6875,f289])).
fof(f6875,plain,(
  ( ! [X116,X114,X112,X115,X113] : (~p(s(bool,'T_0')) | s(X112,happ(s(fun(X114,X112),X115),s(X114,X116))) = s(X112,sK15(happ(s(fun(X114,X112),X115),s(X114,X116)),X113,X112))) ) | ($spl3 | $spl22)),
  inference(backward_demodulation,[],[f6870,f4646])).
fof(f6870,plain,(
  ( ! [X206] : (s(bool,'T_0') = s(bool,X206)) ) | ($spl3 | $spl22)),
  inference(global_subsumption,[],[f288,f287,f289,f487,f296,f297,f299,f304,f303,f308,f307,f358,f359,f360,f368,f383,f382,f381,f390,f391,f392,f393,f402,f401,f400,f399,f398,f397,f413,f412,f411,f410,f409,f408,f417,f414,f427,f430,f437,f473,f492,f532,f535,f575,f639,f675,f696,f727,f728,f730,f732,f753,f756,f769,f785,f787,f1345,f1344,f1377,f1378,f1406,f1408,f1489,f1492,f1493,f1495,f803,f791,f790,f802,f808,f789,f389,f388,f387,f372,f371,f395,f407,f406,f405,f404,f403,f396,f394,f380,f379,f378,f377,f376,f375,f1320,f1708,f1709,f1713,f1723,f1721,f1724,f1747,f1781,f1790,f1792,f1775,f1778,f1801,f1804,f1816,f1903,f1905,f1918,f1920,f1921,f1931,f2108,f2109,f2130,f2060,f2061,f2134,f2144,f2079,f2080,f2148,f2161,f2179,f2178,f2260,f2263,f2300,f2283,f2284,f2305,f2313,f2334,f2331,f2335,f2333,f2380,f2365,f2366,f2381,f2382,f2383,f2384,f2385,f2386,f2387,f2388,f2390,f2391,f2393,f2415,f2418,f2536,f2538,f2560,f2561,f2544,f2562,f2563,f2564,f2565,f2566,f2567,f2568,f2569,f2570,f2572,f2573,f2576,f2588,f2589,f2748,f2763,f2776,f2797,f2806,f2835,f2844,f2920,f2960,f2961,f3384,f3385,f3011,f3389,f3026,f3028,f3029,f3415,f3416,f3417,f3418,f3419,f3420,f3085,f3421,f3422,f3090,f3146,f3151,f3462,f3464,f3466,f3473,f3477,f3478,f3479,f3480,f3481,f3482,f3184,f3186,f3494,f3495,f3496,f3497,f3498,f3499,f3500,f3501,f3511,f3513,f3515,f3517,f3518,f3520,f3521,f3522,f3524,f3264,f3527,f3528,f3269,f3292,f3280,f3569,f3585,f3586,f3554,f3637,f3642,f3666,f3781,f3790,f3742,f3745,f3746,f3764,f3798,f3799,f3800,f3803,f3853,f3854,f3896,f3897,f3963,f3924,f3947,f4038,f4096,f4138,f4142,f4144,f4145,f4104,f4156,f4172,f4177,f4247,f4206,f4209,f4210,f4235,f4251,f4230,f4231,f2543,f4324,f4345,f4326,f4349,f4362,f4476,f4501,f4478,f4507,f4521,f4596,f4595,f4597,f4598,f4599,f4773,f4601,f4634,f4635,f4636,f4640,f4641,f4642,f4643,f4644,f4645,f4650,f4651,f4652,f4653,f4654,f4656,f4657,f4658,f4659,f4660,f4661,f4676,f4679,f4680,f4684,f4685,f4686,f4703,f4704,f4705,f4709,f4710,f4711,f4712,f4713,f4714,f4715,f4723,f4724,f4725,f4726,f4727,f4729,f4730,f4731,f4733,f4734,f4749,f4752,f4753,f4757,f4758,f4759,f4855,f4858,f4885,f4886,f4878,f4879,f4880,f4887,f4889,f4884,f5023,f5024,f5026,f5027,f5028,f5029,f5030,f5031,f5033,f5034,f5035,f5036,f5039,f5090,f5135,f5092,f5149,f5106,f5107,f5108,f5162,f5110,f5169,f5124,f5125,f5131,f5132,f5182,f5244,f5278,f5285,f5259,f5260,f5261,f5262,f5264,f5265,f5266,f5267,f5277,f5354,f5388,f5395,f5369,f5370,f5378,f5379,f5381,f5382,f5383,f5384,f5387,f5509,f5510,f5511,f5624,f5625,f5626,f5784,f6101,f6102,f6280,f6281,f6240,f6241,f6242,f6282,f6245,f6284,f6291,f6292,f6293,f6294,f6295,f6296,f6297,f6298,f6299,f6300,f6301,f6302,f6303,f6266,f6267,f6309,f4252,f6314,f484,f4670,f4743,f1770,f754,f369,f6104,f4744,f4671,f4745,f4672,f5767,f5766,f3635,f1970,f5782,f3899,f367,f3634,f1972,f1969,f366,f365,f806,f807,f5780,f805,f804,f5777,f4646,f4741,f4668,f4667,f4742,f4666,f4669,f4739,f4740,f1795,f1794,f1769,f4856,f4832,f4831,f4853,f370,f1327,f5778,f4719,f4718,f4637,f4717,f4716,f4706,f4854,f4732])).
fof(f4732,plain,(
  ( ! [X206,X204,X202,X205,X203,X201] : (p(s(bool,happ(s(fun(X202,bool),X203),s(X202,happ(s(fun(X201,X202),X204),s(X201,X205)))))) | s(bool,X206) = s(bool,happ(s(fun(X201,bool),'_dst_x0x1_2'(s(fun(X202,bool),X203),s(fun(X201,X202),X204))),s(X201,X205))) | s(bool,'T_0') = s(bool,X206)) )),
  inference(superposition,[],[f575,f437])).
fof(f4854,plain,(
  ( ! [X19,X17,X15,X20,X18,X16] : (~p(s(bool,happ(s(fun(X16,bool),X17),s(X16,happ(s(fun(X15,X16),X18),s(X15,X19)))))) | p(s(bool,happ(s(fun(X15,bool),X20),s(X15,sK10('_dst_x0x1_2'(s(fun(X16,bool),X17),s(fun(X15,X16),X18)),X20,X15))))) | p(s(bool,happ(s(fun(X15,bool),'_dst_x0x1_2'(s(fun(X16,bool),X17),s(fun(X15,X16),X18))),s(X15,sK9('_dst_x0x1_2'(s(fun(X16,bool),X17),s(fun(X15,X16),X18)),X20,X15)))))) )),
  inference(superposition,[],[f371,f437])).
fof(f4706,plain,(
  ( ! [X47,X45,X43,X48,X46,X44,X49] : (~p(s(bool,happ(s(fun(X43,bool),X49),s(X43,happ(s(fun(X45,X43),X46),s(X45,happ(s(fun(X44,X45),X47),s(X44,X48)))))))) | s(X43,happ(s(fun(X44,X43),'_dst_x0x1_2'(s(fun(X45,X43),X46),s(fun(X44,X45),X47))),s(X44,X48))) = s(X43,sK15(happ(s(fun(X44,X43),'_dst_x0x1_2'(s(fun(X45,X43),X46),s(fun(X44,X45),X47))),s(X44,X48)),X49,X43))) )),
  inference(superposition,[],[f388,f437])).
fof(f4716,plain,(
  ( ! [X121,X118,X120,X119,X117] : (~p(s(bool,happ(s(fun(X118,bool),X119),s(X118,happ(s(fun(X117,X118),X120),s(X117,sK8(X121,'_dst_x0x1_2'(s(fun(X118,bool),X119),s(fun(X117,X118),X120)),X117))))))) | p(s(bool,'|dollar|exists_1'(s(fun(X117,bool),'_dst_x0x1_2'(s(fun(X118,bool),X119),s(fun(X117,X118),X120))))))) )),
  inference(superposition,[],[f370,f437])).
fof(f4717,plain,(
  ( ! [X125,X123,X126,X124,X122] : (p(s(bool,happ(s(fun(X123,bool),X124),s(X123,happ(s(fun(X122,X123),X125),s(X122,sK15(X126,'_dst_x0x1_2'(s(fun(X123,bool),X124),s(fun(X122,X123),X125)),X122))))))) | ~p(s(bool,happ(s(fun(X122,bool),'_dst_x0x1_2'(s(fun(X123,bool),X124),s(fun(X122,X123),X125))),s(X122,X126))))) )),
  inference(superposition,[],[f389,f437])).
fof(f4637,plain,(
  ( ! [X47,X45,X43,X48,X46,X44,X49] : (~p(s(bool,happ(s(fun(X43,bool),X49),s(X43,happ(s(fun(X46,X43),'_dst_x0x1_2'(s(fun(X44,X43),X45),s(fun(X46,X44),X47))),s(X46,X48)))))) | s(X43,happ(s(fun(X44,X43),X45),s(X44,happ(s(fun(X46,X44),X47),s(X46,X48))))) = s(X43,sK15(happ(s(fun(X44,X43),X45),s(X44,happ(s(fun(X46,X44),X47),s(X46,X48)))),X49,X43))) )),
  inference(superposition,[],[f388,f437])).
fof(f4718,plain,(
  ( ! [X127,X130,X128,X129] : (p(s(bool,happ(s(fun(X128,bool),X129),s(X128,happ(s(fun('type.list.list'(X127),X128),X130),s('type.list.list'(X127),sK7('_dst_x0x1_2'(s(fun(X128,bool),X129),s(fun('type.list.list'(X127),X128),X130)),X127))))))) | ~p(s(bool,happ(s(fun('type.list.list'(X127),bool),'_dst_x0x1_2'(s(fun(X128,bool),X129),s(fun('type.list.list'(X127),X128),X130))),s('type.list.list'(X127),'const.list.NIL_0'))))) )),
  inference(superposition,[],[f366,f437])).
fof(f4719,plain,(
  ( ! [X134,X132,X136,X135,X133,X131] : (~p(s(bool,happ(s(fun(X132,bool),X133),s(X132,happ(s(fun('type.list.list'(X131),X132),X134),s('type.list.list'(X131),'const.list.CONS_2'(s(X131,X135),s('type.list.list'(X131),X136)))))))) | p(s(bool,happ(s(fun('type.list.list'(X131),bool),'_dst_x0x1_2'(s(fun(X132,bool),X133),s(fun('type.list.list'(X131),X132),X134))),s('type.list.list'(X131),sK7('_dst_x0x1_2'(s(fun(X132,bool),X133),s(fun('type.list.list'(X131),X132),X134)),X131)))))) )),
  inference(superposition,[],[f367,f437])).
fof(f5778,plain,(
  ( ! [X14,X12,X15,X13,X16] : (~p(s(bool,happ(s(fun(X13,bool),X14),s(X13,happ(s(fun('type.list.list'(X12),X13),X15),s('type.list.list'(X12),X16)))))) | p(s(bool,happ(s(fun('type.list.list'(X12),bool),'_dst_x0x1_2'(s(fun(X13,bool),X14),s(fun('type.list.list'(X12),X13),X15))),s('type.list.list'(X12),'const.list.NIL_0')))) | p(s(bool,happ(s(fun('type.list.list'(X12),bool),'_dst_x0x1_2'(s(fun(X13,bool),X14),s(fun('type.list.list'(X12),X13),X15))),s('type.list.list'(X12),'const.list.CONS_2'(s(X12,sK5('_dst_x0x1_2'(s(fun(X13,bool),X14),s(fun('type.list.list'(X12),X13),X15)),X12)),s('type.list.list'(X12),sK6('_dst_x0x1_2'(s(fun(X13,bool),X14),s(fun('type.list.list'(X12),X13),X15)),X12)))))))) )),
  inference(superposition,[],[f365,f437])).
fof(f1327,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,'|dollar|exists_1'(s(fun(X0,bool),X1)))) | ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,sK8(X3,'const.ind_type.FCONS_3'(s(fun(X0,bool),X1),s(fun('type.num.num',fun(X0,bool)),X2),s('type.num.num','const.num.|48|_0')),X0)))))) )),
  inference(forward_demodulation,[],[f1314,f368])).
fof(f1314,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,sK8(X3,'const.ind_type.FCONS_3'(s(fun(X0,bool),X1),s(fun('type.num.num',fun(X0,bool)),X2),s('type.num.num','const.num.|48|_0')),X0))))) | p(s(bool,'|dollar|exists_1'(s(fun(X0,bool),'const.ind_type.FCONS_3'(s(fun(X0,bool),X1),s(fun('type.num.num',fun(X0,bool)),X2),s('type.num.num','const.num.|48|_0'))))))) )),
  inference(superposition,[],[f370,f368])).
fof(f370,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,sK8(X2,X1,X0))))) | p(s(bool,'|dollar|exists_1'(s(fun(X0,bool),X1))))) )),
  inference(cnf_transformation,[],[f250])).
fof(f250,plain,(
  ! [X0,X1,X2] : ((s(X0,X2) = s(X0,sK8(X2,X1,X0)) & ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,sK8(X2,X1,X0)))))) | p(s(bool,'|dollar|exists_1'(s(fun(X0,bool),X1)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK8])],[f183])).
fof(f183,plain,(
  ! [X0,X1,X2] : (? [X3] : (s(X0,X2) = s(X0,X3) & ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3))))) | p(s(bool,'|dollar|exists_1'(s(fun(X0,bool),X1)))))),
  inference(ennf_transformation,[],[f121])).
fof(f121,plain,(
  ! [X0,X1,X2] : (! [X3] : (s(X0,X2) = s(X0,X3) => p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3))))) => p(s(bool,'|dollar|exists_1'(s(fun(X0,bool),X1)))))),
  inference(flattening,[],[f120])).
fof(f120,plain,(
  ! [X0] : ! [X1,X2] : (! [X3] : (s(X0,X2) = s(X0,X3) => p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3))))) => p(s(bool,'|dollar|exists_1'(s(fun(X0,bool),X1)))))),
  inference(rectify,[],[f16])).
fof(f16,axiom,(
  ! [X6] : ! [X24,X16] : (! [X15] : (s(X6,X15) = s(X6,X16) => p(s(bool,happ(s(fun(X6,bool),X24),s(X6,X15))))) => p(s(bool,'|dollar|exists_1'(s(fun(X6,bool),X24)))))),
  file('thm.rich_list.MEM_SING_APPEND','thm.bool.JRH_INDUCT_UTIL')).
fof(f4853,plain,(
  ( ! [X14,X12,X10,X13,X11,X9] : (~p(s(bool,happ(s(fun(X11,bool),'_dst_x0x1_2'(s(fun(X9,bool),X10),s(fun(X11,X9),X12))),s(X11,X13)))) | p(s(bool,happ(s(fun(X9,bool),X14),s(X9,sK10(X10,X14,X9))))) | p(s(bool,happ(s(fun(X9,bool),X10),s(X9,sK9(X10,X14,X9)))))) )),
  inference(superposition,[],[f371,f437])).
fof(f4831,plain,(
  ( ! [X14,X12,X17,X15,X13,X11,X18,X16] : (~p(s(bool,happ(s(fun(X11,bool),happ(s(fun(X14,fun(X11,bool)),'_dst_x0x1_2'(s(fun(X12,fun(X11,bool)),X13),s(fun(X14,X12),X15))),s(X14,X16))),s(X11,X17)))) | p(s(bool,happ(s(fun(X11,bool),X18),s(X11,sK10(happ(s(fun(X12,fun(X11,bool)),X13),s(X12,happ(s(fun(X14,X12),X15),s(X14,X16)))),X18,X11))))) | p(s(bool,happ(s(fun(X11,bool),happ(s(fun(X12,fun(X11,bool)),X13),s(X12,happ(s(fun(X14,X12),X15),s(X14,X16))))),s(X11,sK9(happ(s(fun(X12,fun(X11,bool)),X13),s(X12,happ(s(fun(X14,X12),X15),s(X14,X16)))),X18,X11)))))) )),
  inference(superposition,[],[f371,f437])).
fof(f4832,plain,(
  ( ! [X26,X24,X23,X21,X19,X25,X22,X20] : (~p(s(bool,happ(s(fun(X19,bool),happ(s(fun(X21,fun(X19,bool)),X22),s(X21,happ(s(fun(X20,X21),X23),s(X20,X24))))),s(X19,X25)))) | p(s(bool,happ(s(fun(X19,bool),X26),s(X19,sK10(happ(s(fun(X20,fun(X19,bool)),'_dst_x0x1_2'(s(fun(X21,fun(X19,bool)),X22),s(fun(X20,X21),X23))),s(X20,X24)),X26,X19))))) | p(s(bool,happ(s(fun(X19,bool),happ(s(fun(X20,fun(X19,bool)),'_dst_x0x1_2'(s(fun(X21,fun(X19,bool)),X22),s(fun(X20,X21),X23))),s(X20,X24))),s(X19,sK9(happ(s(fun(X20,fun(X19,bool)),'_dst_x0x1_2'(s(fun(X21,fun(X19,bool)),X22),s(fun(X20,X21),X23))),s(X20,X24)),X26,X19)))))) )),
  inference(superposition,[],[f371,f437])).
fof(f4856,plain,(
  ( ! [X6,X10,X8,X7,X5,X9] : (p(s(bool,happ(s(fun(X5,bool),happ(s(fun('type.num.num',fun(X5,bool)),X7),s('type.num.num',X8))),s(X5,sK9('const.ind_type.FCONS_3'(s(fun(X5,bool),X6),s(fun('type.num.num',fun(X5,bool)),X7),s('type.num.num','const.num.SUC_1'(s('type.num.num',X8)))),X10,X5))))) | ~p(s(bool,happ(s(fun(X5,bool),happ(s(fun('type.num.num',fun(X5,bool)),X7),s('type.num.num',X8))),s(X5,X9)))) | p(s(bool,happ(s(fun(X5,bool),X10),s(X5,sK10('const.ind_type.FCONS_3'(s(fun(X5,bool),X6),s(fun('type.num.num',fun(X5,bool)),X7),s('type.num.num','const.num.SUC_1'(s('type.num.num',X8)))),X10,X5)))))) )),
  inference(forward_demodulation,[],[f4830,f390])).
fof(f4830,plain,(
  ( ! [X6,X10,X8,X7,X5,X9] : (~p(s(bool,happ(s(fun(X5,bool),happ(s(fun('type.num.num',fun(X5,bool)),X7),s('type.num.num',X8))),s(X5,X9)))) | p(s(bool,happ(s(fun(X5,bool),X10),s(X5,sK10('const.ind_type.FCONS_3'(s(fun(X5,bool),X6),s(fun('type.num.num',fun(X5,bool)),X7),s('type.num.num','const.num.SUC_1'(s('type.num.num',X8)))),X10,X5))))) | p(s(bool,happ(s(fun(X5,bool),'const.ind_type.FCONS_3'(s(fun(X5,bool),X6),s(fun('type.num.num',fun(X5,bool)),X7),s('type.num.num','const.num.SUC_1'(s('type.num.num',X8))))),s(X5,sK9('const.ind_type.FCONS_3'(s(fun(X5,bool),X6),s(fun('type.num.num',fun(X5,bool)),X7),s('type.num.num','const.num.SUC_1'(s('type.num.num',X8)))),X10,X5)))))) )),
  inference(superposition,[],[f371,f390])).
fof(f1769,plain,(
  ( ! [X80,X83,X81,X84,X82] : (~p(s(bool,happ(s(fun(X80,bool),happ(s(fun('type.num.num',fun(X80,bool)),X82),s('type.num.num',X83))),s(X80,X84)))) | s(X80,X84) = s(X80,sK15(X84,'const.ind_type.FCONS_3'(s(fun(X80,bool),X81),s(fun('type.num.num',fun(X80,bool)),X82),s('type.num.num','const.num.SUC_1'(s('type.num.num',X83)))),X80))) )),
  inference(superposition,[],[f388,f390])).
fof(f1794,plain,(
  ( ! [X70,X74,X72,X71,X73] : (~p(s(bool,happ(s(fun(X70,bool),happ(s(fun('type.num.num',fun(X70,bool)),X72),s('type.num.num',X73))),s(X70,X74)))) | p(s(bool,happ(s(fun(X70,bool),happ(s(fun('type.num.num',fun(X70,bool)),X72),s('type.num.num',X73))),s(X70,sK15(X74,'const.ind_type.FCONS_3'(s(fun(X70,bool),X71),s(fun('type.num.num',fun(X70,bool)),X72),s('type.num.num','const.num.SUC_1'(s('type.num.num',X73)))),X70)))))) )),
  inference(forward_demodulation,[],[f1767,f390])).
fof(f1767,plain,(
  ( ! [X70,X74,X72,X71,X73] : (p(s(bool,happ(s(fun(X70,bool),happ(s(fun('type.num.num',fun(X70,bool)),X72),s('type.num.num',X73))),s(X70,sK15(X74,'const.ind_type.FCONS_3'(s(fun(X70,bool),X71),s(fun('type.num.num',fun(X70,bool)),X72),s('type.num.num','const.num.SUC_1'(s('type.num.num',X73)))),X70))))) | ~p(s(bool,happ(s(fun(X70,bool),'const.ind_type.FCONS_3'(s(fun(X70,bool),X71),s(fun('type.num.num',fun(X70,bool)),X72),s('type.num.num','const.num.SUC_1'(s('type.num.num',X73))))),s(X70,X74))))) )),
  inference(superposition,[],[f389,f390])).
fof(f1795,plain,(
  ( ! [X78,X76,X79,X77,X75] : (p(s(bool,'|dollar|exists_1'(s(fun(X75,bool),happ(s(fun('type.num.num',fun(X75,bool)),X77),s('type.num.num',X78)))))) | ~p(s(bool,happ(s(fun(X75,bool),happ(s(fun('type.num.num',fun(X75,bool)),X77),s('type.num.num',X78))),s(X75,sK8(X79,'const.ind_type.FCONS_3'(s(fun(X75,bool),X76),s(fun('type.num.num',fun(X75,bool)),X77),s('type.num.num','const.num.SUC_1'(s('type.num.num',X78)))),X75)))))) )),
  inference(forward_demodulation,[],[f1768,f390])).
fof(f1768,plain,(
  ( ! [X78,X76,X79,X77,X75] : (~p(s(bool,happ(s(fun(X75,bool),happ(s(fun('type.num.num',fun(X75,bool)),X77),s('type.num.num',X78))),s(X75,sK8(X79,'const.ind_type.FCONS_3'(s(fun(X75,bool),X76),s(fun('type.num.num',fun(X75,bool)),X77),s('type.num.num','const.num.SUC_1'(s('type.num.num',X78)))),X75))))) | p(s(bool,'|dollar|exists_1'(s(fun(X75,bool),'const.ind_type.FCONS_3'(s(fun(X75,bool),X76),s(fun('type.num.num',fun(X75,bool)),X77),s('type.num.num','const.num.SUC_1'(s('type.num.num',X78))))))))) )),
  inference(superposition,[],[f370,f390])).
fof(f4740,plain,(
  ( ! [X255,X253,X257,X259,X254,X256,X258] : (p(s(bool,happ(s(fun(X253,bool),happ(s(fun(X255,fun(X253,bool)),X256),s(X255,happ(s(fun(X254,X255),X257),s(X254,X258))))),s(X253,sK15(X259,happ(s(fun(X254,fun(X253,bool)),'_dst_x0x1_2'(s(fun(X255,fun(X253,bool)),X256),s(fun(X254,X255),X257))),s(X254,X258)),X253))))) | ~p(s(bool,happ(s(fun(X253,bool),happ(s(fun(X254,fun(X253,bool)),'_dst_x0x1_2'(s(fun(X255,fun(X253,bool)),X256),s(fun(X254,X255),X257))),s(X254,X258))),s(X253,X259))))) )),
  inference(superposition,[],[f389,f437])).
fof(f4739,plain,(
  ( ! [X251,X249,X246,X252,X250,X248,X247,X245] : (~p(s(bool,happ(s(fun(X245,bool),happ(s(fun(X247,fun(X245,bool)),X248),s(X247,happ(s(fun(X246,X247),X249),s(X246,X250))))),s(X245,X251)))) | p(s(bool,happ(s(fun(X245,bool),happ(s(fun(X246,fun(X245,bool)),'_dst_x0x1_2'(s(fun(X247,fun(X245,bool)),X248),s(fun(X246,X247),X249))),s(X246,X250))),s(X245,X252)))) | s(X245,X251) != s(X245,X252)) )),
  inference(superposition,[],[f387,f437])).
fof(f4669,plain,(
  ( ! [X253,X251,X249,X252,X250,X248,X247] : (~p(s(bool,happ(s(fun(X247,bool),happ(s(fun(X250,fun(X247,bool)),'_dst_x0x1_2'(s(fun(X248,fun(X247,bool)),X249),s(fun(X250,X248),X251))),s(X250,X252))),s(X247,X253)))) | s(X247,X253) = s(X247,sK15(X253,happ(s(fun(X248,fun(X247,bool)),X249),s(X248,happ(s(fun(X250,X248),X251),s(X250,X252)))),X247))) )),
  inference(superposition,[],[f388,f437])).
fof(f4666,plain,(
  ( ! [X231,X229,X227,X225,X230,X228,X226,X232] : (~p(s(bool,happ(s(fun(X225,bool),happ(s(fun(X228,fun(X225,bool)),'_dst_x0x1_2'(s(fun(X226,fun(X225,bool)),X227),s(fun(X228,X226),X229))),s(X228,X230))),s(X225,X231)))) | p(s(bool,happ(s(fun(X225,bool),happ(s(fun(X226,fun(X225,bool)),X227),s(X226,happ(s(fun(X228,X226),X229),s(X228,X230))))),s(X225,X232)))) | s(X225,X231) != s(X225,X232)) )),
  inference(superposition,[],[f387,f437])).
fof(f4742,plain,(
  ( ! [X269,X271,X267,X273,X268,X270,X272] : (~p(s(bool,happ(s(fun(X267,bool),happ(s(fun(X269,fun(X267,bool)),X270),s(X269,happ(s(fun(X268,X269),X271),s(X268,X272))))),s(X267,X273)))) | s(X267,X273) = s(X267,sK15(X273,happ(s(fun(X268,fun(X267,bool)),'_dst_x0x1_2'(s(fun(X269,fun(X267,bool)),X270),s(fun(X268,X269),X271))),s(X268,X272)),X267))) )),
  inference(superposition,[],[f388,f437])).
fof(f4667,plain,(
  ( ! [X239,X237,X235,X233,X238,X236,X234] : (p(s(bool,happ(s(fun(X233,bool),happ(s(fun(X236,fun(X233,bool)),'_dst_x0x1_2'(s(fun(X234,fun(X233,bool)),X235),s(fun(X236,X234),X237))),s(X236,X238))),s(X233,sK15(X239,happ(s(fun(X234,fun(X233,bool)),X235),s(X234,happ(s(fun(X236,X234),X237),s(X236,X238)))),X233))))) | ~p(s(bool,happ(s(fun(X233,bool),happ(s(fun(X234,fun(X233,bool)),X235),s(X234,happ(s(fun(X236,X234),X237),s(X236,X238))))),s(X233,X239))))) )),
  inference(superposition,[],[f389,f437])).
fof(f4668,plain,(
  ( ! [X243,X241,X246,X244,X242,X240,X245] : (~p(s(bool,happ(s(fun(X240,bool),happ(s(fun(X243,fun(X240,bool)),'_dst_x0x1_2'(s(fun(X241,fun(X240,bool)),X242),s(fun(X243,X241),X244))),s(X243,X245))),s(X240,sK8(X246,happ(s(fun(X241,fun(X240,bool)),X242),s(X241,happ(s(fun(X243,X241),X244),s(X243,X245)))),X240))))) | p(s(bool,'|dollar|exists_1'(s(fun(X240,bool),happ(s(fun(X241,fun(X240,bool)),X242),s(X241,happ(s(fun(X243,X241),X244),s(X243,X245))))))))) )),
  inference(superposition,[],[f370,f437])).
fof(f4741,plain,(
  ( ! [X261,X263,X265,X260,X262,X264,X266] : (~p(s(bool,happ(s(fun(X260,bool),happ(s(fun(X262,fun(X260,bool)),X263),s(X262,happ(s(fun(X261,X262),X264),s(X261,X265))))),s(X260,sK8(X266,happ(s(fun(X261,fun(X260,bool)),'_dst_x0x1_2'(s(fun(X262,fun(X260,bool)),X263),s(fun(X261,X262),X264))),s(X261,X265)),X260))))) | p(s(bool,'|dollar|exists_1'(s(fun(X260,bool),happ(s(fun(X261,fun(X260,bool)),'_dst_x0x1_2'(s(fun(X262,fun(X260,bool)),X263),s(fun(X261,X262),X264))),s(X261,X265))))))) )),
  inference(superposition,[],[f370,f437])).
fof(f4646,plain,(
  ( ! [X116,X114,X112,X115,X113] : (~p(s(bool,happ(s(fun(X114,bool),'_dst_x0x1_2'(s(fun(X112,bool),X113),s(fun(X114,X112),X115))),s(X114,X116)))) | s(X112,happ(s(fun(X114,X112),X115),s(X114,X116))) = s(X112,sK15(happ(s(fun(X114,X112),X115),s(X114,X116)),X113,X112))) )),
  inference(superposition,[],[f388,f437])).
fof(f5777,plain,(
  ( ! [X10,X8,X7,X11,X9] : (~p(s(bool,happ(s(fun(X9,bool),'_dst_x0x1_2'(s(fun('type.list.list'(X7),bool),X8),s(fun(X9,'type.list.list'(X7)),X10))),s(X9,X11)))) | p(s(bool,happ(s(fun('type.list.list'(X7),bool),X8),s('type.list.list'(X7),'const.list.NIL_0')))) | p(s(bool,happ(s(fun('type.list.list'(X7),bool),X8),s('type.list.list'(X7),'const.list.CONS_2'(s(X7,sK5(X8,X7)),s('type.list.list'(X7),sK6(X8,X7)))))))) )),
  inference(superposition,[],[f365,f437])).
fof(f804,plain,(
  ( ! [X10,X11] : (s(bool,X10) = s(bool,sK15('const.marker.Cong_1'(s(bool,X10)),X11,bool)) | ~p(s(bool,happ(s(fun(bool,bool),X11),s(bool,X10))))) )),
  inference(forward_demodulation,[],[f795,f297])).
fof(f795,plain,(
  ( ! [X10,X11] : (~p(s(bool,happ(s(fun(bool,bool),X11),s(bool,X10)))) | s(bool,'const.marker.Cong_1'(s(bool,X10))) = s(bool,sK15('const.marker.Cong_1'(s(bool,X10)),X11,bool))) )),
  inference(superposition,[],[f388,f297])).
fof(f805,plain,(
  ( ! [X12,X13] : (s(bool,'T_0') = s(bool,sK15('const.bool.BOUNDED_1'(s(bool,X12)),X13,bool)) | ~p(s(bool,happ(s(fun(bool,bool),X13),s(bool,'T_0'))))) )),
  inference(forward_demodulation,[],[f796,f296])).
fof(f796,plain,(
  ( ! [X12,X13] : (~p(s(bool,happ(s(fun(bool,bool),X13),s(bool,'T_0')))) | s(bool,'const.bool.BOUNDED_1'(s(bool,X12))) = s(bool,sK15('const.bool.BOUNDED_1'(s(bool,X12)),X13,bool))) )),
  inference(superposition,[],[f388,f296])).
fof(f5780,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,happ(s(fun('type.list.list'(X0),bool),X1),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK5('const.ind_type.FCONS_3'(s(fun('type.list.list'(X0),bool),X1),s(fun('type.num.num',fun('type.list.list'(X0),bool)),X2),s('type.num.num','const.num.|48|_0')),X0)),s('type.list.list'(X0),sK6('const.ind_type.FCONS_3'(s(fun('type.list.list'(X0),bool),X1),s(fun('type.num.num',fun('type.list.list'(X0),bool)),X2),s('type.num.num','const.num.|48|_0')),X0))))))) | p(s(bool,happ(s(fun('type.list.list'(X0),bool),X1),s('type.list.list'(X0),'const.list.NIL_0')))) | ~p(s(bool,happ(s(fun('type.list.list'(X0),bool),X1),s('type.list.list'(X0),X3))))) )),
  inference(forward_demodulation,[],[f5779,f368])).
fof(f5779,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,happ(s(fun('type.list.list'(X0),bool),X1),s('type.list.list'(X0),'const.list.NIL_0')))) | ~p(s(bool,happ(s(fun('type.list.list'(X0),bool),X1),s('type.list.list'(X0),X3)))) | p(s(bool,happ(s(fun('type.list.list'(X0),bool),'const.ind_type.FCONS_3'(s(fun('type.list.list'(X0),bool),X1),s(fun('type.num.num',fun('type.list.list'(X0),bool)),X2),s('type.num.num','const.num.|48|_0'))),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK5('const.ind_type.FCONS_3'(s(fun('type.list.list'(X0),bool),X1),s(fun('type.num.num',fun('type.list.list'(X0),bool)),X2),s('type.num.num','const.num.|48|_0')),X0)),s('type.list.list'(X0),sK6('const.ind_type.FCONS_3'(s(fun('type.list.list'(X0),bool),X1),s(fun('type.num.num',fun('type.list.list'(X0),bool)),X2),s('type.num.num','const.num.|48|_0')),X0)))))))) )),
  inference(forward_demodulation,[],[f5764,f368])).
fof(f5764,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,happ(s(fun('type.list.list'(X0),bool),X1),s('type.list.list'(X0),X3)))) | p(s(bool,happ(s(fun('type.list.list'(X0),bool),'const.ind_type.FCONS_3'(s(fun('type.list.list'(X0),bool),X1),s(fun('type.num.num',fun('type.list.list'(X0),bool)),X2),s('type.num.num','const.num.|48|_0'))),s('type.list.list'(X0),'const.list.NIL_0')))) | p(s(bool,happ(s(fun('type.list.list'(X0),bool),'const.ind_type.FCONS_3'(s(fun('type.list.list'(X0),bool),X1),s(fun('type.num.num',fun('type.list.list'(X0),bool)),X2),s('type.num.num','const.num.|48|_0'))),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK5('const.ind_type.FCONS_3'(s(fun('type.list.list'(X0),bool),X1),s(fun('type.num.num',fun('type.list.list'(X0),bool)),X2),s('type.num.num','const.num.|48|_0')),X0)),s('type.list.list'(X0),sK6('const.ind_type.FCONS_3'(s(fun('type.list.list'(X0),bool),X1),s(fun('type.num.num',fun('type.list.list'(X0),bool)),X2),s('type.num.num','const.num.|48|_0')),X0)))))))) )),
  inference(superposition,[],[f365,f368])).
fof(f807,plain,(
  ( ! [X19,X17,X18] : (s('type.list.list'(X17),X18) = s('type.list.list'(X17),sK15('const.list.APPEND_2'(s('type.list.list'(X17),'const.list.NIL_0'),s('type.list.list'(X17),X18)),X19,'type.list.list'(X17))) | ~p(s(bool,happ(s(fun('type.list.list'(X17),bool),X19),s('type.list.list'(X17),X18))))) )),
  inference(forward_demodulation,[],[f798,f359])).
fof(f798,plain,(
  ( ! [X19,X17,X18] : (~p(s(bool,happ(s(fun('type.list.list'(X17),bool),X19),s('type.list.list'(X17),X18)))) | s('type.list.list'(X17),'const.list.APPEND_2'(s('type.list.list'(X17),'const.list.NIL_0'),s('type.list.list'(X17),X18))) = s('type.list.list'(X17),sK15('const.list.APPEND_2'(s('type.list.list'(X17),'const.list.NIL_0'),s('type.list.list'(X17),X18)),X19,'type.list.list'(X17)))) )),
  inference(superposition,[],[f388,f359])).
fof(f806,plain,(
  ( ! [X14,X15,X16] : (s('type.list.list'(X14),X15) = s('type.list.list'(X14),sK15('const.list.APPEND_2'(s('type.list.list'(X14),X15),s('type.list.list'(X14),'const.list.NIL_0')),X16,'type.list.list'(X14))) | ~p(s(bool,happ(s(fun('type.list.list'(X14),bool),X16),s('type.list.list'(X14),X15))))) )),
  inference(forward_demodulation,[],[f797,f358])).
fof(f797,plain,(
  ( ! [X14,X15,X16] : (~p(s(bool,happ(s(fun('type.list.list'(X14),bool),X16),s('type.list.list'(X14),X15)))) | s('type.list.list'(X14),'const.list.APPEND_2'(s('type.list.list'(X14),X15),s('type.list.list'(X14),'const.list.NIL_0'))) = s('type.list.list'(X14),sK15('const.list.APPEND_2'(s('type.list.list'(X14),X15),s('type.list.list'(X14),'const.list.NIL_0')),X16,'type.list.list'(X14)))) )),
  inference(superposition,[],[f388,f358])).
fof(f365,plain,(
  ( ! [X0,X7,X1] : (~p(s(bool,happ(s(fun('type.list.list'(X0),bool),X1),s('type.list.list'(X0),X7)))) | p(s(bool,happ(s(fun('type.list.list'(X0),bool),X1),s('type.list.list'(X0),'const.list.NIL_0')))) | p(s(bool,happ(s(fun('type.list.list'(X0),bool),X1),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK5(X1,X0)),s('type.list.list'(X0),sK6(X1,X0)))))))) )),
  inference(cnf_transformation,[],[f249])).
fof(f249,plain,(
  ! [X0,X1] : ((! [X7] : ~p(s(bool,happ(s(fun('type.list.list'(X0),bool),X1),s('type.list.list'(X0),X7)))) | p(s(bool,happ(s(fun('type.list.list'(X0),bool),X1),s('type.list.list'(X0),'const.list.NIL_0')))) | p(s(bool,happ(s(fun('type.list.list'(X0),bool),X1),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK5(X1,X0)),s('type.list.list'(X0),sK6(X1,X0)))))))) & ((~p(s(bool,happ(s(fun('type.list.list'(X0),bool),X1),s('type.list.list'(X0),'const.list.NIL_0')))) & ! [X3,X4] : ~p(s(bool,happ(s(fun('type.list.list'(X0),bool),X1),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),X4))))))) | p(s(bool,happ(s(fun('type.list.list'(X0),bool),X1),s('type.list.list'(X0),sK7(X1,X0)))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK5,sK6,sK7])],[f248])).
fof(f248,plain,(
  ! [X0,X1] : ((! [X7] : ~p(s(bool,happ(s(fun('type.list.list'(X0),bool),X1),s('type.list.list'(X0),X7)))) | p(s(bool,happ(s(fun('type.list.list'(X0),bool),X1),s('type.list.list'(X0),'const.list.NIL_0')))) | ? [X5,X6] : p(s(bool,happ(s(fun('type.list.list'(X0),bool),X1),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),X6))))))) & ((~p(s(bool,happ(s(fun('type.list.list'(X0),bool),X1),s('type.list.list'(X0),'const.list.NIL_0')))) & ! [X3,X4] : ~p(s(bool,happ(s(fun('type.list.list'(X0),bool),X1),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),X4))))))) | ? [X2] : p(s(bool,happ(s(fun('type.list.list'(X0),bool),X1),s('type.list.list'(X0),X2))))))),
  inference(rectify,[],[f247])).
fof(f247,plain,(
  ! [X0,X1] : ((! [X2] : ~p(s(bool,happ(s(fun('type.list.list'(X0),bool),X1),s('type.list.list'(X0),X2)))) | p(s(bool,happ(s(fun('type.list.list'(X0),bool),X1),s('type.list.list'(X0),'const.list.NIL_0')))) | ? [X3,X4] : p(s(bool,happ(s(fun('type.list.list'(X0),bool),X1),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),X4))))))) & ((~p(s(bool,happ(s(fun('type.list.list'(X0),bool),X1),s('type.list.list'(X0),'const.list.NIL_0')))) & ! [X3,X4] : ~p(s(bool,happ(s(fun('type.list.list'(X0),bool),X1),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),X4))))))) | ? [X2] : p(s(bool,happ(s(fun('type.list.list'(X0),bool),X1),s('type.list.list'(X0),X2))))))),
  inference(flattening,[],[f246])).
fof(f246,plain,(
  ! [X0,X1] : ((! [X2] : ~p(s(bool,happ(s(fun('type.list.list'(X0),bool),X1),s('type.list.list'(X0),X2)))) | (p(s(bool,happ(s(fun('type.list.list'(X0),bool),X1),s('type.list.list'(X0),'const.list.NIL_0')))) | ? [X3,X4] : p(s(bool,happ(s(fun('type.list.list'(X0),bool),X1),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),X4)))))))) & ((~p(s(bool,happ(s(fun('type.list.list'(X0),bool),X1),s('type.list.list'(X0),'const.list.NIL_0')))) & ! [X3,X4] : ~p(s(bool,happ(s(fun('type.list.list'(X0),bool),X1),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),X4))))))) | ? [X2] : p(s(bool,happ(s(fun('type.list.list'(X0),bool),X1),s('type.list.list'(X0),X2))))))),
  inference(nnf_transformation,[],[f117])).
fof(f117,plain,(
  ! [X0,X1] : (? [X2] : p(s(bool,happ(s(fun('type.list.list'(X0),bool),X1),s('type.list.list'(X0),X2)))) <=> (p(s(bool,happ(s(fun('type.list.list'(X0),bool),X1),s('type.list.list'(X0),'const.list.NIL_0')))) | ? [X3,X4] : p(s(bool,happ(s(fun('type.list.list'(X0),bool),X1),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),X4))))))))),
  inference(flattening,[],[f116])).
fof(f116,plain,(
  ! [X0] : ! [X1] : (? [X2] : p(s(bool,happ(s(fun('type.list.list'(X0),bool),X1),s('type.list.list'(X0),X2)))) <=> (p(s(bool,happ(s(fun('type.list.list'(X0),bool),X1),s('type.list.list'(X0),'const.list.NIL_0')))) | ? [X3,X4] : p(s(bool,happ(s(fun('type.list.list'(X0),bool),X1),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),X4))))))))),
  inference(rectify,[],[f61])).
fof(f61,axiom,(
  ! [X6] : ! [X24] : (? [X11] : p(s(bool,happ(s(fun('type.list.list'(X6),bool),X24),s('type.list.list'(X6),X11)))) <=> (p(s(bool,happ(s(fun('type.list.list'(X6),bool),X24),s('type.list.list'(X6),'const.list.NIL_0')))) | ? [X27,X16] : p(s(bool,happ(s(fun('type.list.list'(X6),bool),X24),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X27),s('type.list.list'(X6),X16))))))))),
  file('thm.rich_list.MEM_SING_APPEND','thm.list.EXISTS_LIST')).
fof(f366,plain,(
  ( ! [X0,X1] : (p(s(bool,happ(s(fun('type.list.list'(X0),bool),X1),s('type.list.list'(X0),sK7(X1,X0))))) | ~p(s(bool,happ(s(fun('type.list.list'(X0),bool),X1),s('type.list.list'(X0),'const.list.NIL_0'))))) )),
  inference(cnf_transformation,[],[f249])).
fof(f1969,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,happ(s(fun('type.list.list'(X0),bool),X1),s('type.list.list'(X0),'const.list.NIL_0')))) | p(s(bool,happ(s(fun('type.list.list'(X0),bool),X1),s('type.list.list'(X0),sK7('const.ind_type.FCONS_3'(s(fun('type.list.list'(X0),bool),X1),s(fun('type.num.num',fun('type.list.list'(X0),bool)),X2),s('type.num.num','const.num.|48|_0')),X0)))))) )),
  inference(forward_demodulation,[],[f1965,f368])).
fof(f1965,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,happ(s(fun('type.list.list'(X0),bool),X1),s('type.list.list'(X0),sK7('const.ind_type.FCONS_3'(s(fun('type.list.list'(X0),bool),X1),s(fun('type.num.num',fun('type.list.list'(X0),bool)),X2),s('type.num.num','const.num.|48|_0')),X0))))) | ~p(s(bool,happ(s(fun('type.list.list'(X0),bool),'const.ind_type.FCONS_3'(s(fun('type.list.list'(X0),bool),X1),s(fun('type.num.num',fun('type.list.list'(X0),bool)),X2),s('type.num.num','const.num.|48|_0'))),s('type.list.list'(X0),'const.list.NIL_0'))))) )),
  inference(superposition,[],[f366,f368])).
fof(f1972,plain,(
  ( ! [X4,X3] : (~p(s(bool,happ(s(fun('type.list.list'(X3),bool),X4),s('type.list.list'(X3),'const.list.NIL_0')))) | s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'(X3),bool),X4),s('type.list.list'(X3),sK7(X4,X3))))) )),
  inference(subsumption_resolution,[],[f1968,f487])).
fof(f1968,plain,(
  ( ! [X4,X3] : (p(s(bool,'F_0')) | ~p(s(bool,happ(s(fun('type.list.list'(X3),bool),X4),s('type.list.list'(X3),'const.list.NIL_0')))) | s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'(X3),bool),X4),s('type.list.list'(X3),sK7(X4,X3))))) )),
  inference(superposition,[],[f366,f299])).
fof(f3634,plain,(
  ( ! [X4,X2,X0,X3,X1] : (p(s(bool,happ(s(fun('type.list.list'(X0),bool),X1),s('type.list.list'(X0),sK7('const.ind_type.FCONS_3'(s(fun('type.list.list'(X0),bool),X1),s(fun('type.num.num',fun('type.list.list'(X0),bool)),X2),s('type.num.num','const.num.|48|_0')),X0))))) | ~p(s(bool,happ(s(fun('type.list.list'(X0),bool),X1),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),X4))))))) )),
  inference(forward_demodulation,[],[f3594,f368])).
fof(f3594,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~p(s(bool,happ(s(fun('type.list.list'(X0),bool),X1),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),X4)))))) | p(s(bool,happ(s(fun('type.list.list'(X0),bool),'const.ind_type.FCONS_3'(s(fun('type.list.list'(X0),bool),X1),s(fun('type.num.num',fun('type.list.list'(X0),bool)),X2),s('type.num.num','const.num.|48|_0'))),s('type.list.list'(X0),sK7('const.ind_type.FCONS_3'(s(fun('type.list.list'(X0),bool),X1),s(fun('type.num.num',fun('type.list.list'(X0),bool)),X2),s('type.num.num','const.num.|48|_0')),X0)))))) )),
  inference(superposition,[],[f367,f368])).
fof(f367,plain,(
  ( ! [X4,X0,X3,X1] : (~p(s(bool,happ(s(fun('type.list.list'(X0),bool),X1),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),X4)))))) | p(s(bool,happ(s(fun('type.list.list'(X0),bool),X1),s('type.list.list'(X0),sK7(X1,X0)))))) )),
  inference(cnf_transformation,[],[f249])).
fof(f3899,plain,(
  ( ! [X142,X140,X143,X141,X139] : (s('type.list.list'(X139),'const.list.CONS_2'(s(X139,X140),s('type.list.list'(X139),'const.list.APPEND_2'(s('type.list.list'(X139),X141),s('type.list.list'(X139),X142))))) = s('type.list.list'(X139),sK15('const.list.APPEND_2'(s('type.list.list'(X139),'const.list.CONS_2'(s(X139,X140),s('type.list.list'(X139),X141))),s('type.list.list'(X139),X142)),X143,'type.list.list'(X139))) | ~p(s(bool,happ(s(fun('type.list.list'(X139),bool),X143),s('type.list.list'(X139),'const.list.CONS_2'(s(X139,X140),s('type.list.list'(X139),'const.list.APPEND_2'(s('type.list.list'(X139),X141),s('type.list.list'(X139),X142))))))))) )),
  inference(forward_demodulation,[],[f3885,f391])).
fof(f3885,plain,(
  ( ! [X142,X140,X143,X141,X139] : (~p(s(bool,happ(s(fun('type.list.list'(X139),bool),X143),s('type.list.list'(X139),'const.list.CONS_2'(s(X139,X140),s('type.list.list'(X139),'const.list.APPEND_2'(s('type.list.list'(X139),X141),s('type.list.list'(X139),X142)))))))) | s('type.list.list'(X139),'const.list.APPEND_2'(s('type.list.list'(X139),'const.list.CONS_2'(s(X139,X140),s('type.list.list'(X139),X141))),s('type.list.list'(X139),X142))) = s('type.list.list'(X139),sK15('const.list.APPEND_2'(s('type.list.list'(X139),'const.list.CONS_2'(s(X139,X140),s('type.list.list'(X139),X141))),s('type.list.list'(X139),X142)),X143,'type.list.list'(X139)))) )),
  inference(superposition,[],[f388,f391])).
fof(f5782,plain,(
  ( ! [X6,X4,X8,X7,X5] : (p(s(bool,happ(s(fun('type.list.list'(X4),bool),happ(s(fun('type.num.num',fun('type.list.list'(X4),bool)),X6),s('type.num.num',X7))),s('type.list.list'(X4),'const.list.CONS_2'(s(X4,sK5('const.ind_type.FCONS_3'(s(fun('type.list.list'(X4),bool),X5),s(fun('type.num.num',fun('type.list.list'(X4),bool)),X6),s('type.num.num','const.num.SUC_1'(s('type.num.num',X7)))),X4)),s('type.list.list'(X4),sK6('const.ind_type.FCONS_3'(s(fun('type.list.list'(X4),bool),X5),s(fun('type.num.num',fun('type.list.list'(X4),bool)),X6),s('type.num.num','const.num.SUC_1'(s('type.num.num',X7)))),X4))))))) | p(s(bool,happ(s(fun('type.list.list'(X4),bool),happ(s(fun('type.num.num',fun('type.list.list'(X4),bool)),X6),s('type.num.num',X7))),s('type.list.list'(X4),'const.list.NIL_0')))) | ~p(s(bool,happ(s(fun('type.list.list'(X4),bool),happ(s(fun('type.num.num',fun('type.list.list'(X4),bool)),X6),s('type.num.num',X7))),s('type.list.list'(X4),X8))))) )),
  inference(forward_demodulation,[],[f5781,f390])).
fof(f5781,plain,(
  ( ! [X6,X4,X8,X7,X5] : (p(s(bool,happ(s(fun('type.list.list'(X4),bool),happ(s(fun('type.num.num',fun('type.list.list'(X4),bool)),X6),s('type.num.num',X7))),s('type.list.list'(X4),'const.list.NIL_0')))) | ~p(s(bool,happ(s(fun('type.list.list'(X4),bool),happ(s(fun('type.num.num',fun('type.list.list'(X4),bool)),X6),s('type.num.num',X7))),s('type.list.list'(X4),X8)))) | p(s(bool,happ(s(fun('type.list.list'(X4),bool),'const.ind_type.FCONS_3'(s(fun('type.list.list'(X4),bool),X5),s(fun('type.num.num',fun('type.list.list'(X4),bool)),X6),s('type.num.num','const.num.SUC_1'(s('type.num.num',X7))))),s('type.list.list'(X4),'const.list.CONS_2'(s(X4,sK5('const.ind_type.FCONS_3'(s(fun('type.list.list'(X4),bool),X5),s(fun('type.num.num',fun('type.list.list'(X4),bool)),X6),s('type.num.num','const.num.SUC_1'(s('type.num.num',X7)))),X4)),s('type.list.list'(X4),sK6('const.ind_type.FCONS_3'(s(fun('type.list.list'(X4),bool),X5),s(fun('type.num.num',fun('type.list.list'(X4),bool)),X6),s('type.num.num','const.num.SUC_1'(s('type.num.num',X7)))),X4)))))))) )),
  inference(forward_demodulation,[],[f5765,f390])).
fof(f5765,plain,(
  ( ! [X6,X4,X8,X7,X5] : (~p(s(bool,happ(s(fun('type.list.list'(X4),bool),happ(s(fun('type.num.num',fun('type.list.list'(X4),bool)),X6),s('type.num.num',X7))),s('type.list.list'(X4),X8)))) | p(s(bool,happ(s(fun('type.list.list'(X4),bool),'const.ind_type.FCONS_3'(s(fun('type.list.list'(X4),bool),X5),s(fun('type.num.num',fun('type.list.list'(X4),bool)),X6),s('type.num.num','const.num.SUC_1'(s('type.num.num',X7))))),s('type.list.list'(X4),'const.list.NIL_0')))) | p(s(bool,happ(s(fun('type.list.list'(X4),bool),'const.ind_type.FCONS_3'(s(fun('type.list.list'(X4),bool),X5),s(fun('type.num.num',fun('type.list.list'(X4),bool)),X6),s('type.num.num','const.num.SUC_1'(s('type.num.num',X7))))),s('type.list.list'(X4),'const.list.CONS_2'(s(X4,sK5('const.ind_type.FCONS_3'(s(fun('type.list.list'(X4),bool),X5),s(fun('type.num.num',fun('type.list.list'(X4),bool)),X6),s('type.num.num','const.num.SUC_1'(s('type.num.num',X7)))),X4)),s('type.list.list'(X4),sK6('const.ind_type.FCONS_3'(s(fun('type.list.list'(X4),bool),X5),s(fun('type.num.num',fun('type.list.list'(X4),bool)),X6),s('type.num.num','const.num.SUC_1'(s('type.num.num',X7)))),X4)))))))) )),
  inference(superposition,[],[f365,f390])).
fof(f1970,plain,(
  ( ! [X6,X4,X5,X3] : (~p(s(bool,happ(s(fun('type.list.list'(X3),bool),happ(s(fun('type.num.num',fun('type.list.list'(X3),bool)),X5),s('type.num.num',X6))),s('type.list.list'(X3),'const.list.NIL_0')))) | p(s(bool,happ(s(fun('type.list.list'(X3),bool),happ(s(fun('type.num.num',fun('type.list.list'(X3),bool)),X5),s('type.num.num',X6))),s('type.list.list'(X3),sK7('const.ind_type.FCONS_3'(s(fun('type.list.list'(X3),bool),X4),s(fun('type.num.num',fun('type.list.list'(X3),bool)),X5),s('type.num.num','const.num.SUC_1'(s('type.num.num',X6)))),X3)))))) )),
  inference(forward_demodulation,[],[f1966,f390])).
fof(f1966,plain,(
  ( ! [X6,X4,X5,X3] : (p(s(bool,happ(s(fun('type.list.list'(X3),bool),happ(s(fun('type.num.num',fun('type.list.list'(X3),bool)),X5),s('type.num.num',X6))),s('type.list.list'(X3),sK7('const.ind_type.FCONS_3'(s(fun('type.list.list'(X3),bool),X4),s(fun('type.num.num',fun('type.list.list'(X3),bool)),X5),s('type.num.num','const.num.SUC_1'(s('type.num.num',X6)))),X3))))) | ~p(s(bool,happ(s(fun('type.list.list'(X3),bool),'const.ind_type.FCONS_3'(s(fun('type.list.list'(X3),bool),X4),s(fun('type.num.num',fun('type.list.list'(X3),bool)),X5),s('type.num.num','const.num.SUC_1'(s('type.num.num',X6))))),s('type.list.list'(X3),'const.list.NIL_0'))))) )),
  inference(superposition,[],[f366,f390])).
fof(f3635,plain,(
  ( ! [X6,X10,X8,X7,X5,X9] : (p(s(bool,happ(s(fun('type.list.list'(X5),bool),happ(s(fun('type.num.num',fun('type.list.list'(X5),bool)),X7),s('type.num.num',X8))),s('type.list.list'(X5),sK7('const.ind_type.FCONS_3'(s(fun('type.list.list'(X5),bool),X6),s(fun('type.num.num',fun('type.list.list'(X5),bool)),X7),s('type.num.num','const.num.SUC_1'(s('type.num.num',X8)))),X5))))) | ~p(s(bool,happ(s(fun('type.list.list'(X5),bool),happ(s(fun('type.num.num',fun('type.list.list'(X5),bool)),X7),s('type.num.num',X8))),s('type.list.list'(X5),'const.list.CONS_2'(s(X5,X9),s('type.list.list'(X5),X10))))))) )),
  inference(forward_demodulation,[],[f3595,f390])).
fof(f3595,plain,(
  ( ! [X6,X10,X8,X7,X5,X9] : (~p(s(bool,happ(s(fun('type.list.list'(X5),bool),happ(s(fun('type.num.num',fun('type.list.list'(X5),bool)),X7),s('type.num.num',X8))),s('type.list.list'(X5),'const.list.CONS_2'(s(X5,X9),s('type.list.list'(X5),X10)))))) | p(s(bool,happ(s(fun('type.list.list'(X5),bool),'const.ind_type.FCONS_3'(s(fun('type.list.list'(X5),bool),X6),s(fun('type.num.num',fun('type.list.list'(X5),bool)),X7),s('type.num.num','const.num.SUC_1'(s('type.num.num',X8))))),s('type.list.list'(X5),sK7('const.ind_type.FCONS_3'(s(fun('type.list.list'(X5),bool),X6),s(fun('type.num.num',fun('type.list.list'(X5),bool)),X7),s('type.num.num','const.num.SUC_1'(s('type.num.num',X8)))),X5)))))) )),
  inference(superposition,[],[f367,f390])).
fof(f5766,plain,(
  ( ! [X14,X12,X10,X15,X13,X11,X9] : (~p(s(bool,happ(s(fun('type.list.list'(X9),bool),happ(s(fun(X12,fun('type.list.list'(X9),bool)),'_dst_x0x1_2'(s(fun(X10,fun('type.list.list'(X9),bool)),X11),s(fun(X12,X10),X13))),s(X12,X14))),s('type.list.list'(X9),X15)))) | p(s(bool,happ(s(fun('type.list.list'(X9),bool),happ(s(fun(X10,fun('type.list.list'(X9),bool)),X11),s(X10,happ(s(fun(X12,X10),X13),s(X12,X14))))),s('type.list.list'(X9),'const.list.NIL_0')))) | p(s(bool,happ(s(fun('type.list.list'(X9),bool),happ(s(fun(X10,fun('type.list.list'(X9),bool)),X11),s(X10,happ(s(fun(X12,X10),X13),s(X12,X14))))),s('type.list.list'(X9),'const.list.CONS_2'(s(X9,sK5(happ(s(fun(X10,fun('type.list.list'(X9),bool)),X11),s(X10,happ(s(fun(X12,X10),X13),s(X12,X14)))),X9)),s('type.list.list'(X9),sK6(happ(s(fun(X10,fun('type.list.list'(X9),bool)),X11),s(X10,happ(s(fun(X12,X10),X13),s(X12,X14)))),X9)))))))) )),
  inference(superposition,[],[f365,f437])).
fof(f5767,plain,(
  ( ! [X21,X19,X17,X22,X20,X18,X16] : (~p(s(bool,happ(s(fun('type.list.list'(X16),bool),happ(s(fun(X18,fun('type.list.list'(X16),bool)),X19),s(X18,happ(s(fun(X17,X18),X20),s(X17,X21))))),s('type.list.list'(X16),X22)))) | p(s(bool,happ(s(fun('type.list.list'(X16),bool),happ(s(fun(X17,fun('type.list.list'(X16),bool)),'_dst_x0x1_2'(s(fun(X18,fun('type.list.list'(X16),bool)),X19),s(fun(X17,X18),X20))),s(X17,X21))),s('type.list.list'(X16),'const.list.NIL_0')))) | p(s(bool,happ(s(fun('type.list.list'(X16),bool),happ(s(fun(X17,fun('type.list.list'(X16),bool)),'_dst_x0x1_2'(s(fun(X18,fun('type.list.list'(X16),bool)),X19),s(fun(X17,X18),X20))),s(X17,X21))),s('type.list.list'(X16),'const.list.CONS_2'(s(X16,sK5(happ(s(fun(X17,fun('type.list.list'(X16),bool)),'_dst_x0x1_2'(s(fun(X18,fun('type.list.list'(X16),bool)),X19),s(fun(X17,X18),X20))),s(X17,X21)),X16)),s('type.list.list'(X16),sK6(happ(s(fun(X17,fun('type.list.list'(X16),bool)),'_dst_x0x1_2'(s(fun(X18,fun('type.list.list'(X16),bool)),X19),s(fun(X17,X18),X20))),s(X17,X21)),X16)))))))) )),
  inference(superposition,[],[f365,f437])).
fof(f4672,plain,(
  ( ! [X269,X271,X273,X270,X272,X274] : (p(s(bool,happ(s(fun('type.list.list'(X269),bool),happ(s(fun(X272,fun('type.list.list'(X269),bool)),'_dst_x0x1_2'(s(fun(X270,fun('type.list.list'(X269),bool)),X271),s(fun(X272,X270),X273))),s(X272,X274))),s('type.list.list'(X269),sK7(happ(s(fun(X270,fun('type.list.list'(X269),bool)),X271),s(X270,happ(s(fun(X272,X270),X273),s(X272,X274)))),X269))))) | ~p(s(bool,happ(s(fun('type.list.list'(X269),bool),happ(s(fun(X270,fun('type.list.list'(X269),bool)),X271),s(X270,happ(s(fun(X272,X270),X273),s(X272,X274))))),s('type.list.list'(X269),'const.list.NIL_0'))))) )),
  inference(superposition,[],[f366,f437])).
fof(f4745,plain,(
  ( ! [X292,X294,X290,X293,X289,X291] : (p(s(bool,happ(s(fun('type.list.list'(X289),bool),happ(s(fun(X291,fun('type.list.list'(X289),bool)),X292),s(X291,happ(s(fun(X290,X291),X293),s(X290,X294))))),s('type.list.list'(X289),sK7(happ(s(fun(X290,fun('type.list.list'(X289),bool)),'_dst_x0x1_2'(s(fun(X291,fun('type.list.list'(X289),bool)),X292),s(fun(X290,X291),X293))),s(X290,X294)),X289))))) | ~p(s(bool,happ(s(fun('type.list.list'(X289),bool),happ(s(fun(X290,fun('type.list.list'(X289),bool)),'_dst_x0x1_2'(s(fun(X291,fun('type.list.list'(X289),bool)),X292),s(fun(X290,X291),X293))),s(X290,X294))),s('type.list.list'(X289),'const.list.NIL_0'))))) )),
  inference(superposition,[],[f366,f437])).
fof(f4671,plain,(
  ( ! [X261,X263,X265,X267,X262,X268,X264,X266] : (~p(s(bool,happ(s(fun('type.list.list'(X261),bool),happ(s(fun(X264,fun('type.list.list'(X261),bool)),'_dst_x0x1_2'(s(fun(X262,fun('type.list.list'(X261),bool)),X263),s(fun(X264,X262),X265))),s(X264,X266))),s('type.list.list'(X261),'const.list.CONS_2'(s(X261,X267),s('type.list.list'(X261),X268)))))) | p(s(bool,happ(s(fun('type.list.list'(X261),bool),happ(s(fun(X262,fun('type.list.list'(X261),bool)),X263),s(X262,happ(s(fun(X264,X262),X265),s(X264,X266))))),s('type.list.list'(X261),sK7(happ(s(fun(X262,fun('type.list.list'(X261),bool)),X263),s(X262,happ(s(fun(X264,X262),X265),s(X264,X266)))),X261)))))) )),
  inference(superposition,[],[f367,f437])).
fof(f4744,plain,(
  ( ! [X282,X288,X285,X287,X281,X283,X284,X286] : (~p(s(bool,happ(s(fun('type.list.list'(X281),bool),happ(s(fun(X283,fun('type.list.list'(X281),bool)),X284),s(X283,happ(s(fun(X282,X283),X285),s(X282,X286))))),s('type.list.list'(X281),'const.list.CONS_2'(s(X281,X287),s('type.list.list'(X281),X288)))))) | p(s(bool,happ(s(fun('type.list.list'(X281),bool),happ(s(fun(X282,fun('type.list.list'(X281),bool)),'_dst_x0x1_2'(s(fun(X283,fun('type.list.list'(X281),bool)),X284),s(fun(X282,X283),X285))),s(X282,X286))),s('type.list.list'(X281),sK7(happ(s(fun(X282,fun('type.list.list'(X281),bool)),'_dst_x0x1_2'(s(fun(X283,fun('type.list.list'(X281),bool)),X284),s(fun(X282,X283),X285))),s(X282,X286)),X281)))))) )),
  inference(superposition,[],[f367,f437])).
fof(f6104,plain,(
  ( ! [X52,X50,X53,X51,X49] : (s('type.ind_type.recspace'(X49),'const.ind_type.CONSTR_3'(s('type.num.num',X50),s(X49,X51),s(fun('type.num.num','type.ind_type.recspace'(X49)),X52))) = s('type.ind_type.recspace'(X49),sK15(happ(s(fun(fun('type.num.num','type.ind_type.recspace'(X49)),'type.ind_type.recspace'(X49)),happ(s(fun(X49,fun(fun('type.num.num','type.ind_type.recspace'(X49)),'type.ind_type.recspace'(X49))),'const.ind_type.CONSTR_1'(s('type.num.num',X50))),s(X49,X51))),s(fun('type.num.num','type.ind_type.recspace'(X49)),X52)),X53,'type.ind_type.recspace'(X49))) | ~p(s(bool,happ(s(fun('type.ind_type.recspace'(X49),bool),X53),s('type.ind_type.recspace'(X49),'const.ind_type.CONSTR_3'(s('type.num.num',X50),s(X49,X51),s(fun('type.num.num','type.ind_type.recspace'(X49)),X52))))))) )),
  inference(forward_demodulation,[],[f6085,f392])).
fof(f6085,plain,(
  ( ! [X52,X50,X53,X51,X49] : (~p(s(bool,happ(s(fun('type.ind_type.recspace'(X49),bool),X53),s('type.ind_type.recspace'(X49),'const.ind_type.CONSTR_3'(s('type.num.num',X50),s(X49,X51),s(fun('type.num.num','type.ind_type.recspace'(X49)),X52)))))) | s('type.ind_type.recspace'(X49),happ(s(fun(fun('type.num.num','type.ind_type.recspace'(X49)),'type.ind_type.recspace'(X49)),happ(s(fun(X49,fun(fun('type.num.num','type.ind_type.recspace'(X49)),'type.ind_type.recspace'(X49))),'const.ind_type.CONSTR_1'(s('type.num.num',X50))),s(X49,X51))),s(fun('type.num.num','type.ind_type.recspace'(X49)),X52))) = s('type.ind_type.recspace'(X49),sK15(happ(s(fun(fun('type.num.num','type.ind_type.recspace'(X49)),'type.ind_type.recspace'(X49)),happ(s(fun(X49,fun(fun('type.num.num','type.ind_type.recspace'(X49)),'type.ind_type.recspace'(X49))),'const.ind_type.CONSTR_1'(s('type.num.num',X50))),s(X49,X51))),s(fun('type.num.num','type.ind_type.recspace'(X49)),X52)),X53,'type.ind_type.recspace'(X49)))) )),
  inference(superposition,[],[f388,f392])).
fof(f369,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,'|dollar|exists_1'(s(fun(X0,bool),X1)))) | s(X0,X2) = s(X0,sK8(X2,X1,X0))) )),
  inference(cnf_transformation,[],[f250])).
fof(f754,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,'|dollar|exists_1'(s(fun(X0,bool),X1)))) | s(X0,X3) = s(X0,sK8(X3,'const.ind_type.FCONS_3'(s(fun(X0,bool),X1),s(fun('type.num.num',fun(X0,bool)),X2),s('type.num.num','const.num.|48|_0')),X0))) )),
  inference(superposition,[],[f369,f368])).
fof(f1770,plain,(
  ( ! [X88,X87,X85,X89,X86] : (p(s(bool,'|dollar|exists_1'(s(fun(X85,bool),happ(s(fun('type.num.num',fun(X85,bool)),X87),s('type.num.num',X88)))))) | s(X85,X89) = s(X85,sK8(X89,'const.ind_type.FCONS_3'(s(fun(X85,bool),X86),s(fun('type.num.num',fun(X85,bool)),X87),s('type.num.num','const.num.SUC_1'(s('type.num.num',X88)))),X85))) )),
  inference(superposition,[],[f369,f390])).
fof(f4743,plain,(
  ( ! [X280,X277,X279,X275,X276,X278,X274] : (p(s(bool,'|dollar|exists_1'(s(fun(X274,bool),happ(s(fun(X276,fun(X274,bool)),X277),s(X276,happ(s(fun(X275,X276),X278),s(X275,X279)))))))) | s(X274,X280) = s(X274,sK8(X280,happ(s(fun(X275,fun(X274,bool)),'_dst_x0x1_2'(s(fun(X276,fun(X274,bool)),X277),s(fun(X275,X276),X278))),s(X275,X279)),X274))) )),
  inference(superposition,[],[f369,f437])).
fof(f4670,plain,(
  ( ! [X255,X257,X259,X260,X254,X256,X258] : (p(s(bool,'|dollar|exists_1'(s(fun(X254,bool),happ(s(fun(X257,fun(X254,bool)),'_dst_x0x1_2'(s(fun(X255,fun(X254,bool)),X256),s(fun(X257,X255),X258))),s(X257,X259)))))) | s(X254,X260) = s(X254,sK8(X260,happ(s(fun(X255,fun(X254,bool)),X256),s(X255,happ(s(fun(X257,X255),X258),s(X257,X259)))),X254))) )),
  inference(superposition,[],[f369,f437])).
fof(f6314,plain,(
  ( ! [X12,X13] : (s(bool,X12) = s(bool,'const.bool.BOUNDED_1'(s(bool,X13)))) ) | $spl22),
  inference(subsumption_resolution,[],[f6311,f492])).
fof(f6311,plain,(
  ( ! [X12,X13] : (s(bool,'T_0') = s(bool,'F_0') | s(bool,X12) = s(bool,'const.bool.BOUNDED_1'(s(bool,X13)))) ) | $spl22),
  inference(backward_demodulation,[],[f4252,f1801])).
fof(f6309,plain,(
  ( ! [X10,X8,X9] : (s('type.list.list'(X8),X10) = s('type.list.list'(X8),'const.list.APPEND_2'(s('type.list.list'(X8),'const.list.APPEND_2'(s('type.list.list'(X8),sK11(X9,X10,X8)),s('type.list.list'(X8),'const.list.CONS_2'(s(X8,X9),s('type.list.list'(X8),'const.list.NIL_0'))))),s('type.list.list'(X8),sK12(X9,X10,X8)))) | s(bool,'F_0') = s(bool,'const.bool.IN_2'(s(X8,X9),s(fun(X8,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X8),X10)))))) )),
  inference(subsumption_resolution,[],[f6308,f289])).
fof(f6308,plain,(
  ( ! [X10,X8,X9] : (~p(s(bool,'T_0')) | s('type.list.list'(X8),X10) = s('type.list.list'(X8),'const.list.APPEND_2'(s('type.list.list'(X8),'const.list.APPEND_2'(s('type.list.list'(X8),sK11(X9,X10,X8)),s('type.list.list'(X8),'const.list.CONS_2'(s(X8,X9),s('type.list.list'(X8),'const.list.NIL_0'))))),s('type.list.list'(X8),sK12(X9,X10,X8)))) | s(bool,'F_0') = s(bool,'const.bool.IN_2'(s(X8,X9),s(fun(X8,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X8),X10)))))) )),
  inference(forward_demodulation,[],[f6276,f296])).
fof(f6276,plain,(
  ( ! [X10,X8,X11,X9] : (~p(s(bool,'const.bool.BOUNDED_1'(s(bool,X11)))) | s('type.list.list'(X8),X10) = s('type.list.list'(X8),'const.list.APPEND_2'(s('type.list.list'(X8),'const.list.APPEND_2'(s('type.list.list'(X8),sK11(X9,X10,X8)),s('type.list.list'(X8),'const.list.CONS_2'(s(X8,X9),s('type.list.list'(X8),'const.list.NIL_0'))))),s('type.list.list'(X8),sK12(X9,X10,X8)))) | s(bool,'F_0') = s(bool,'const.bool.IN_2'(s(X8,X9),s(fun(X8,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X8),X10)))))) )),
  inference(superposition,[],[f375,f787])).
fof(f6267,plain,(
  ( ! [X30,X28,X33,X31,X29,X27,X32] : (~p(s(bool,'const.bool.IN_2'(s(X27,X33),s(fun(X27,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X27),happ(s(fun(X29,'type.list.list'(X27)),X30),s(X29,happ(s(fun(X28,X29),X31),s(X28,X32)))))))))) | s('type.list.list'(X27),happ(s(fun(X28,'type.list.list'(X27)),'_dst_x0x1_2'(s(fun(X29,'type.list.list'(X27)),X30),s(fun(X28,X29),X31))),s(X28,X32))) = s('type.list.list'(X27),'const.list.APPEND_2'(s('type.list.list'(X27),'const.list.APPEND_2'(s('type.list.list'(X27),sK11(X33,happ(s(fun(X28,'type.list.list'(X27)),'_dst_x0x1_2'(s(fun(X29,'type.list.list'(X27)),X30),s(fun(X28,X29),X31))),s(X28,X32)),X27)),s('type.list.list'(X27),'const.list.CONS_2'(s(X27,X33),s('type.list.list'(X27),'const.list.NIL_0'))))),s('type.list.list'(X27),sK12(X33,happ(s(fun(X28,'type.list.list'(X27)),'_dst_x0x1_2'(s(fun(X29,'type.list.list'(X27)),X30),s(fun(X28,X29),X31))),s(X28,X32)),X27))))) )),
  inference(superposition,[],[f375,f437])).
fof(f6266,plain,(
  ( ! [X26,X24,X23,X21,X25,X22,X20] : (~p(s(bool,'const.bool.IN_2'(s(X20,X26),s(fun(X20,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X20),happ(s(fun(X23,'type.list.list'(X20)),'_dst_x0x1_2'(s(fun(X21,'type.list.list'(X20)),X22),s(fun(X23,X21),X24))),s(X23,X25)))))))) | s('type.list.list'(X20),happ(s(fun(X21,'type.list.list'(X20)),X22),s(X21,happ(s(fun(X23,X21),X24),s(X23,X25))))) = s('type.list.list'(X20),'const.list.APPEND_2'(s('type.list.list'(X20),'const.list.APPEND_2'(s('type.list.list'(X20),sK11(X26,happ(s(fun(X21,'type.list.list'(X20)),X22),s(X21,happ(s(fun(X23,X21),X24),s(X23,X25)))),X20)),s('type.list.list'(X20),'const.list.CONS_2'(s(X20,X26),s('type.list.list'(X20),'const.list.NIL_0'))))),s('type.list.list'(X20),sK12(X26,happ(s(fun(X21,'type.list.list'(X20)),X22),s(X21,happ(s(fun(X23,X21),X24),s(X23,X25)))),X20))))) )),
  inference(superposition,[],[f375,f437])).
fof(f6303,plain,(
  ( ! [X19,X17,X15,X18,X16] : (s('type.list.list'(X15),happ(s(fun('type.num.num','type.list.list'(X15)),X17),s('type.num.num',X18))) = s('type.list.list'(X15),'const.list.APPEND_2'(s('type.list.list'(X15),'const.list.APPEND_2'(s('type.list.list'(X15),sK11(X19,'const.ind_type.FCONS_3'(s('type.list.list'(X15),X16),s(fun('type.num.num','type.list.list'(X15)),X17),s('type.num.num','const.num.SUC_1'(s('type.num.num',X18)))),X15)),s('type.list.list'(X15),'const.list.CONS_2'(s(X15,X19),s('type.list.list'(X15),'const.list.NIL_0'))))),s('type.list.list'(X15),sK12(X19,'const.ind_type.FCONS_3'(s('type.list.list'(X15),X16),s(fun('type.num.num','type.list.list'(X15)),X17),s('type.num.num','const.num.SUC_1'(s('type.num.num',X18)))),X15)))) | ~p(s(bool,'const.bool.IN_2'(s(X15,X19),s(fun(X15,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X15),happ(s(fun('type.num.num','type.list.list'(X15)),X17),s('type.num.num',X18))))))))) )),
  inference(forward_demodulation,[],[f6265,f390])).
fof(f6265,plain,(
  ( ! [X19,X17,X15,X18,X16] : (~p(s(bool,'const.bool.IN_2'(s(X15,X19),s(fun(X15,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X15),happ(s(fun('type.num.num','type.list.list'(X15)),X17),s('type.num.num',X18)))))))) | s('type.list.list'(X15),'const.ind_type.FCONS_3'(s('type.list.list'(X15),X16),s(fun('type.num.num','type.list.list'(X15)),X17),s('type.num.num','const.num.SUC_1'(s('type.num.num',X18))))) = s('type.list.list'(X15),'const.list.APPEND_2'(s('type.list.list'(X15),'const.list.APPEND_2'(s('type.list.list'(X15),sK11(X19,'const.ind_type.FCONS_3'(s('type.list.list'(X15),X16),s(fun('type.num.num','type.list.list'(X15)),X17),s('type.num.num','const.num.SUC_1'(s('type.num.num',X18)))),X15)),s('type.list.list'(X15),'const.list.CONS_2'(s(X15,X19),s('type.list.list'(X15),'const.list.NIL_0'))))),s('type.list.list'(X15),sK12(X19,'const.ind_type.FCONS_3'(s('type.list.list'(X15),X16),s(fun('type.num.num','type.list.list'(X15)),X17),s('type.num.num','const.num.SUC_1'(s('type.num.num',X18)))),X15))))) )),
  inference(superposition,[],[f375,f390])).
fof(f6302,plain,(
  ( ! [X14,X12,X13,X11] : (s('type.list.list'(X11),X12) = s('type.list.list'(X11),'const.list.APPEND_2'(s('type.list.list'(X11),'const.list.APPEND_2'(s('type.list.list'(X11),sK11(X14,'const.ind_type.FCONS_3'(s('type.list.list'(X11),X12),s(fun('type.num.num','type.list.list'(X11)),X13),s('type.num.num','const.num.|48|_0')),X11)),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,X14),s('type.list.list'(X11),'const.list.NIL_0'))))),s('type.list.list'(X11),sK12(X14,'const.ind_type.FCONS_3'(s('type.list.list'(X11),X12),s(fun('type.num.num','type.list.list'(X11)),X13),s('type.num.num','const.num.|48|_0')),X11)))) | ~p(s(bool,'const.bool.IN_2'(s(X11,X14),s(fun(X11,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X11),X12))))))) )),
  inference(forward_demodulation,[],[f6264,f368])).
fof(f6264,plain,(
  ( ! [X14,X12,X13,X11] : (~p(s(bool,'const.bool.IN_2'(s(X11,X14),s(fun(X11,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X11),X12)))))) | s('type.list.list'(X11),'const.ind_type.FCONS_3'(s('type.list.list'(X11),X12),s(fun('type.num.num','type.list.list'(X11)),X13),s('type.num.num','const.num.|48|_0'))) = s('type.list.list'(X11),'const.list.APPEND_2'(s('type.list.list'(X11),'const.list.APPEND_2'(s('type.list.list'(X11),sK11(X14,'const.ind_type.FCONS_3'(s('type.list.list'(X11),X12),s(fun('type.num.num','type.list.list'(X11)),X13),s('type.num.num','const.num.|48|_0')),X11)),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,X14),s('type.list.list'(X11),'const.list.NIL_0'))))),s('type.list.list'(X11),sK12(X14,'const.ind_type.FCONS_3'(s('type.list.list'(X11),X12),s(fun('type.num.num','type.list.list'(X11)),X13),s('type.num.num','const.num.|48|_0')),X11))))) )),
  inference(superposition,[],[f375,f368])).
fof(f6301,plain,(
  ( ! [X6,X10,X8,X7,X9] : (s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X7),s('type.list.list'(X6),'const.list.APPEND_2'(s('type.list.list'(X6),X8),s('type.list.list'(X6),X9))))) = s('type.list.list'(X6),'const.list.APPEND_2'(s('type.list.list'(X6),'const.list.APPEND_2'(s('type.list.list'(X6),sK11(X10,'const.list.APPEND_2'(s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X7),s('type.list.list'(X6),X8))),s('type.list.list'(X6),X9)),X6)),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X10),s('type.list.list'(X6),'const.list.NIL_0'))))),s('type.list.list'(X6),sK12(X10,'const.list.APPEND_2'(s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X7),s('type.list.list'(X6),X8))),s('type.list.list'(X6),X9)),X6)))) | ~p(s(bool,'const.bool.IN_2'(s(X6,X10),s(fun(X6,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X7),s('type.list.list'(X6),'const.list.APPEND_2'(s('type.list.list'(X6),X8),s('type.list.list'(X6),X9))))))))))) )),
  inference(forward_demodulation,[],[f6263,f391])).
fof(f6263,plain,(
  ( ! [X6,X10,X8,X7,X9] : (~p(s(bool,'const.bool.IN_2'(s(X6,X10),s(fun(X6,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X7),s('type.list.list'(X6),'const.list.APPEND_2'(s('type.list.list'(X6),X8),s('type.list.list'(X6),X9)))))))))) | s('type.list.list'(X6),'const.list.APPEND_2'(s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X7),s('type.list.list'(X6),X8))),s('type.list.list'(X6),X9))) = s('type.list.list'(X6),'const.list.APPEND_2'(s('type.list.list'(X6),'const.list.APPEND_2'(s('type.list.list'(X6),sK11(X10,'const.list.APPEND_2'(s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X7),s('type.list.list'(X6),X8))),s('type.list.list'(X6),X9)),X6)),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X10),s('type.list.list'(X6),'const.list.NIL_0'))))),s('type.list.list'(X6),sK12(X10,'const.list.APPEND_2'(s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X7),s('type.list.list'(X6),X8))),s('type.list.list'(X6),X9)),X6))))) )),
  inference(superposition,[],[f375,f391])).
fof(f6300,plain,(
  ( ! [X4,X5,X3] : (s('type.list.list'(X3),X4) = s('type.list.list'(X3),'const.list.APPEND_2'(s('type.list.list'(X3),'const.list.APPEND_2'(s('type.list.list'(X3),sK11(X5,'const.list.APPEND_2'(s('type.list.list'(X3),'const.list.NIL_0'),s('type.list.list'(X3),X4)),X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,X5),s('type.list.list'(X3),'const.list.NIL_0'))))),s('type.list.list'(X3),sK12(X5,'const.list.APPEND_2'(s('type.list.list'(X3),'const.list.NIL_0'),s('type.list.list'(X3),X4)),X3)))) | ~p(s(bool,'const.bool.IN_2'(s(X3,X5),s(fun(X3,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X3),X4))))))) )),
  inference(forward_demodulation,[],[f6262,f359])).
fof(f6262,plain,(
  ( ! [X4,X5,X3] : (~p(s(bool,'const.bool.IN_2'(s(X3,X5),s(fun(X3,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X3),X4)))))) | s('type.list.list'(X3),'const.list.APPEND_2'(s('type.list.list'(X3),'const.list.NIL_0'),s('type.list.list'(X3),X4))) = s('type.list.list'(X3),'const.list.APPEND_2'(s('type.list.list'(X3),'const.list.APPEND_2'(s('type.list.list'(X3),sK11(X5,'const.list.APPEND_2'(s('type.list.list'(X3),'const.list.NIL_0'),s('type.list.list'(X3),X4)),X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,X5),s('type.list.list'(X3),'const.list.NIL_0'))))),s('type.list.list'(X3),sK12(X5,'const.list.APPEND_2'(s('type.list.list'(X3),'const.list.NIL_0'),s('type.list.list'(X3),X4)),X3))))) )),
  inference(superposition,[],[f375,f359])).
fof(f6299,plain,(
  ( ! [X2,X0,X1] : (s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),sK11(X2,'const.list.APPEND_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),'const.list.NIL_0')),X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.NIL_0'))))),s('type.list.list'(X0),sK12(X2,'const.list.APPEND_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),'const.list.NIL_0')),X0)))) | ~p(s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),X1))))))) )),
  inference(forward_demodulation,[],[f6261,f358])).
fof(f6261,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),X1)))))) | s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),'const.list.NIL_0'))) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),sK11(X2,'const.list.APPEND_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),'const.list.NIL_0')),X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.NIL_0'))))),s('type.list.list'(X0),sK12(X2,'const.list.APPEND_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),'const.list.NIL_0')),X0))))) )),
  inference(superposition,[],[f375,f358])).
fof(f6298,plain,(
  ( ! [X68,X66,X64,X67,X65] : (s('type.list.list'('type.ind_type.recspace'(X64)),X68) = s('type.list.list'('type.ind_type.recspace'(X64)),'const.list.APPEND_2'(s('type.list.list'('type.ind_type.recspace'(X64)),'const.list.APPEND_2'(s('type.list.list'('type.ind_type.recspace'(X64)),sK11(happ(s(fun(fun('type.num.num','type.ind_type.recspace'(X64)),'type.ind_type.recspace'(X64)),happ(s(fun(X64,fun(fun('type.num.num','type.ind_type.recspace'(X64)),'type.ind_type.recspace'(X64))),'const.ind_type.CONSTR_1'(s('type.num.num',X65))),s(X64,X66))),s(fun('type.num.num','type.ind_type.recspace'(X64)),X67)),X68,'type.ind_type.recspace'(X64))),s('type.list.list'('type.ind_type.recspace'(X64)),'const.list.CONS_2'(s('type.ind_type.recspace'(X64),'const.ind_type.CONSTR_3'(s('type.num.num',X65),s(X64,X66),s(fun('type.num.num','type.ind_type.recspace'(X64)),X67))),s('type.list.list'('type.ind_type.recspace'(X64)),'const.list.NIL_0'))))),s('type.list.list'('type.ind_type.recspace'(X64)),sK12(happ(s(fun(fun('type.num.num','type.ind_type.recspace'(X64)),'type.ind_type.recspace'(X64)),happ(s(fun(X64,fun(fun('type.num.num','type.ind_type.recspace'(X64)),'type.ind_type.recspace'(X64))),'const.ind_type.CONSTR_1'(s('type.num.num',X65))),s(X64,X66))),s(fun('type.num.num','type.ind_type.recspace'(X64)),X67)),X68,'type.ind_type.recspace'(X64))))) | ~p(s(bool,'const.bool.IN_2'(s('type.ind_type.recspace'(X64),'const.ind_type.CONSTR_3'(s('type.num.num',X65),s(X64,X66),s(fun('type.num.num','type.ind_type.recspace'(X64)),X67))),s(fun('type.ind_type.recspace'(X64),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.ind_type.recspace'(X64)),X68))))))) )),
  inference(forward_demodulation,[],[f6260,f392])).
fof(f6260,plain,(
  ( ! [X68,X66,X64,X67,X65] : (~p(s(bool,'const.bool.IN_2'(s('type.ind_type.recspace'(X64),'const.ind_type.CONSTR_3'(s('type.num.num',X65),s(X64,X66),s(fun('type.num.num','type.ind_type.recspace'(X64)),X67))),s(fun('type.ind_type.recspace'(X64),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.ind_type.recspace'(X64)),X68)))))) | s('type.list.list'('type.ind_type.recspace'(X64)),X68) = s('type.list.list'('type.ind_type.recspace'(X64)),'const.list.APPEND_2'(s('type.list.list'('type.ind_type.recspace'(X64)),'const.list.APPEND_2'(s('type.list.list'('type.ind_type.recspace'(X64)),sK11(happ(s(fun(fun('type.num.num','type.ind_type.recspace'(X64)),'type.ind_type.recspace'(X64)),happ(s(fun(X64,fun(fun('type.num.num','type.ind_type.recspace'(X64)),'type.ind_type.recspace'(X64))),'const.ind_type.CONSTR_1'(s('type.num.num',X65))),s(X64,X66))),s(fun('type.num.num','type.ind_type.recspace'(X64)),X67)),X68,'type.ind_type.recspace'(X64))),s('type.list.list'('type.ind_type.recspace'(X64)),'const.list.CONS_2'(s('type.ind_type.recspace'(X64),happ(s(fun(fun('type.num.num','type.ind_type.recspace'(X64)),'type.ind_type.recspace'(X64)),happ(s(fun(X64,fun(fun('type.num.num','type.ind_type.recspace'(X64)),'type.ind_type.recspace'(X64))),'const.ind_type.CONSTR_1'(s('type.num.num',X65))),s(X64,X66))),s(fun('type.num.num','type.ind_type.recspace'(X64)),X67))),s('type.list.list'('type.ind_type.recspace'(X64)),'const.list.NIL_0'))))),s('type.list.list'('type.ind_type.recspace'(X64)),sK12(happ(s(fun(fun('type.num.num','type.ind_type.recspace'(X64)),'type.ind_type.recspace'(X64)),happ(s(fun(X64,fun(fun('type.num.num','type.ind_type.recspace'(X64)),'type.ind_type.recspace'(X64))),'const.ind_type.CONSTR_1'(s('type.num.num',X65))),s(X64,X66))),s(fun('type.num.num','type.ind_type.recspace'(X64)),X67)),X68,'type.ind_type.recspace'(X64)))))) )),
  inference(superposition,[],[f375,f392])).
fof(f6297,plain,(
  ( ! [X61,X59,X62,X60,X63] : (s('type.list.list'('type.list.list'(X59)),X63) = s('type.list.list'('type.list.list'(X59)),'const.list.APPEND_2'(s('type.list.list'('type.list.list'(X59)),'const.list.APPEND_2'(s('type.list.list'('type.list.list'(X59)),sK11('const.list.APPEND_2'(s('type.list.list'(X59),'const.list.CONS_2'(s(X59,X60),s('type.list.list'(X59),X61))),s('type.list.list'(X59),X62)),X63,'type.list.list'(X59))),s('type.list.list'('type.list.list'(X59)),'const.list.CONS_2'(s('type.list.list'(X59),'const.list.CONS_2'(s(X59,X60),s('type.list.list'(X59),'const.list.APPEND_2'(s('type.list.list'(X59),X61),s('type.list.list'(X59),X62))))),s('type.list.list'('type.list.list'(X59)),'const.list.NIL_0'))))),s('type.list.list'('type.list.list'(X59)),sK12('const.list.APPEND_2'(s('type.list.list'(X59),'const.list.CONS_2'(s(X59,X60),s('type.list.list'(X59),X61))),s('type.list.list'(X59),X62)),X63,'type.list.list'(X59))))) | ~p(s(bool,'const.bool.IN_2'(s('type.list.list'(X59),'const.list.CONS_2'(s(X59,X60),s('type.list.list'(X59),'const.list.APPEND_2'(s('type.list.list'(X59),X61),s('type.list.list'(X59),X62))))),s(fun('type.list.list'(X59),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'(X59)),X63))))))) )),
  inference(forward_demodulation,[],[f6259,f391])).
fof(f6259,plain,(
  ( ! [X61,X59,X62,X60,X63] : (~p(s(bool,'const.bool.IN_2'(s('type.list.list'(X59),'const.list.CONS_2'(s(X59,X60),s('type.list.list'(X59),'const.list.APPEND_2'(s('type.list.list'(X59),X61),s('type.list.list'(X59),X62))))),s(fun('type.list.list'(X59),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'(X59)),X63)))))) | s('type.list.list'('type.list.list'(X59)),X63) = s('type.list.list'('type.list.list'(X59)),'const.list.APPEND_2'(s('type.list.list'('type.list.list'(X59)),'const.list.APPEND_2'(s('type.list.list'('type.list.list'(X59)),sK11('const.list.APPEND_2'(s('type.list.list'(X59),'const.list.CONS_2'(s(X59,X60),s('type.list.list'(X59),X61))),s('type.list.list'(X59),X62)),X63,'type.list.list'(X59))),s('type.list.list'('type.list.list'(X59)),'const.list.CONS_2'(s('type.list.list'(X59),'const.list.APPEND_2'(s('type.list.list'(X59),'const.list.CONS_2'(s(X59,X60),s('type.list.list'(X59),X61))),s('type.list.list'(X59),X62))),s('type.list.list'('type.list.list'(X59)),'const.list.NIL_0'))))),s('type.list.list'('type.list.list'(X59)),sK12('const.list.APPEND_2'(s('type.list.list'(X59),'const.list.CONS_2'(s(X59,X60),s('type.list.list'(X59),X61))),s('type.list.list'(X59),X62)),X63,'type.list.list'(X59)))))) )),
  inference(superposition,[],[f375,f391])).
fof(f6296,plain,(
  ( ! [X57,X58,X56] : (s('type.list.list'('type.list.list'(X56)),X58) = s('type.list.list'('type.list.list'(X56)),'const.list.APPEND_2'(s('type.list.list'('type.list.list'(X56)),'const.list.APPEND_2'(s('type.list.list'('type.list.list'(X56)),sK11('const.list.APPEND_2'(s('type.list.list'(X56),'const.list.NIL_0'),s('type.list.list'(X56),X57)),X58,'type.list.list'(X56))),s('type.list.list'('type.list.list'(X56)),'const.list.CONS_2'(s('type.list.list'(X56),X57),s('type.list.list'('type.list.list'(X56)),'const.list.NIL_0'))))),s('type.list.list'('type.list.list'(X56)),sK12('const.list.APPEND_2'(s('type.list.list'(X56),'const.list.NIL_0'),s('type.list.list'(X56),X57)),X58,'type.list.list'(X56))))) | ~p(s(bool,'const.bool.IN_2'(s('type.list.list'(X56),X57),s(fun('type.list.list'(X56),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'(X56)),X58))))))) )),
  inference(forward_demodulation,[],[f6258,f359])).
fof(f6258,plain,(
  ( ! [X57,X58,X56] : (~p(s(bool,'const.bool.IN_2'(s('type.list.list'(X56),X57),s(fun('type.list.list'(X56),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'(X56)),X58)))))) | s('type.list.list'('type.list.list'(X56)),X58) = s('type.list.list'('type.list.list'(X56)),'const.list.APPEND_2'(s('type.list.list'('type.list.list'(X56)),'const.list.APPEND_2'(s('type.list.list'('type.list.list'(X56)),sK11('const.list.APPEND_2'(s('type.list.list'(X56),'const.list.NIL_0'),s('type.list.list'(X56),X57)),X58,'type.list.list'(X56))),s('type.list.list'('type.list.list'(X56)),'const.list.CONS_2'(s('type.list.list'(X56),'const.list.APPEND_2'(s('type.list.list'(X56),'const.list.NIL_0'),s('type.list.list'(X56),X57))),s('type.list.list'('type.list.list'(X56)),'const.list.NIL_0'))))),s('type.list.list'('type.list.list'(X56)),sK12('const.list.APPEND_2'(s('type.list.list'(X56),'const.list.NIL_0'),s('type.list.list'(X56),X57)),X58,'type.list.list'(X56)))))) )),
  inference(superposition,[],[f375,f359])).
fof(f6295,plain,(
  ( ! [X54,X55,X53] : (s('type.list.list'('type.list.list'(X53)),X55) = s('type.list.list'('type.list.list'(X53)),'const.list.APPEND_2'(s('type.list.list'('type.list.list'(X53)),'const.list.APPEND_2'(s('type.list.list'('type.list.list'(X53)),sK11('const.list.APPEND_2'(s('type.list.list'(X53),X54),s('type.list.list'(X53),'const.list.NIL_0')),X55,'type.list.list'(X53))),s('type.list.list'('type.list.list'(X53)),'const.list.CONS_2'(s('type.list.list'(X53),X54),s('type.list.list'('type.list.list'(X53)),'const.list.NIL_0'))))),s('type.list.list'('type.list.list'(X53)),sK12('const.list.APPEND_2'(s('type.list.list'(X53),X54),s('type.list.list'(X53),'const.list.NIL_0')),X55,'type.list.list'(X53))))) | ~p(s(bool,'const.bool.IN_2'(s('type.list.list'(X53),X54),s(fun('type.list.list'(X53),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'(X53)),X55))))))) )),
  inference(forward_demodulation,[],[f6257,f358])).
fof(f6257,plain,(
  ( ! [X54,X55,X53] : (~p(s(bool,'const.bool.IN_2'(s('type.list.list'(X53),X54),s(fun('type.list.list'(X53),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'(X53)),X55)))))) | s('type.list.list'('type.list.list'(X53)),X55) = s('type.list.list'('type.list.list'(X53)),'const.list.APPEND_2'(s('type.list.list'('type.list.list'(X53)),'const.list.APPEND_2'(s('type.list.list'('type.list.list'(X53)),sK11('const.list.APPEND_2'(s('type.list.list'(X53),X54),s('type.list.list'(X53),'const.list.NIL_0')),X55,'type.list.list'(X53))),s('type.list.list'('type.list.list'(X53)),'const.list.CONS_2'(s('type.list.list'(X53),'const.list.APPEND_2'(s('type.list.list'(X53),X54),s('type.list.list'(X53),'const.list.NIL_0'))),s('type.list.list'('type.list.list'(X53)),'const.list.NIL_0'))))),s('type.list.list'('type.list.list'(X53)),sK12('const.list.APPEND_2'(s('type.list.list'(X53),X54),s('type.list.list'(X53),'const.list.NIL_0')),X55,'type.list.list'(X53)))))) )),
  inference(superposition,[],[f375,f358])).
fof(f6294,plain,(
  ( ! [X52,X51] : (s('type.list.list'(bool),X52) = s('type.list.list'(bool),'const.list.APPEND_2'(s('type.list.list'(bool),'const.list.APPEND_2'(s('type.list.list'(bool),sK11('const.bool.BOUNDED_1'(s(bool,X51)),X52,bool)),s('type.list.list'(bool),'const.list.CONS_2'(s(bool,'T_0'),s('type.list.list'(bool),'const.list.NIL_0'))))),s('type.list.list'(bool),sK12('const.bool.BOUNDED_1'(s(bool,X51)),X52,bool)))) | ~p(s(bool,'const.bool.IN_2'(s(bool,'T_0'),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),X52))))))) )),
  inference(forward_demodulation,[],[f6256,f296])).
fof(f6256,plain,(
  ( ! [X52,X51] : (~p(s(bool,'const.bool.IN_2'(s(bool,'T_0'),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),X52)))))) | s('type.list.list'(bool),X52) = s('type.list.list'(bool),'const.list.APPEND_2'(s('type.list.list'(bool),'const.list.APPEND_2'(s('type.list.list'(bool),sK11('const.bool.BOUNDED_1'(s(bool,X51)),X52,bool)),s('type.list.list'(bool),'const.list.CONS_2'(s(bool,'const.bool.BOUNDED_1'(s(bool,X51))),s('type.list.list'(bool),'const.list.NIL_0'))))),s('type.list.list'(bool),sK12('const.bool.BOUNDED_1'(s(bool,X51)),X52,bool))))) )),
  inference(superposition,[],[f375,f296])).
fof(f6293,plain,(
  ( ! [X50,X48,X49] : (s('type.list.list'(bool),X50) = s('type.list.list'(bool),'const.list.APPEND_2'(s('type.list.list'(bool),'const.list.APPEND_2'(s('type.list.list'(bool),sK11('const.bool.BOUNDED_1'(s(bool,X48)),X50,bool)),s('type.list.list'(bool),'const.list.CONS_2'(s(bool,'T_0'),s('type.list.list'(bool),'const.list.NIL_0'))))),s('type.list.list'(bool),sK12('const.bool.BOUNDED_1'(s(bool,X48)),X50,bool)))) | ~p(s(bool,'const.bool.IN_2'(s(bool,X49),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),X50)))))) | s(bool,'F_0') = s(bool,X49)) )),
  inference(forward_demodulation,[],[f6255,f296])).
fof(f6255,plain,(
  ( ! [X50,X48,X49] : (~p(s(bool,'const.bool.IN_2'(s(bool,X49),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),X50)))))) | s('type.list.list'(bool),X50) = s('type.list.list'(bool),'const.list.APPEND_2'(s('type.list.list'(bool),'const.list.APPEND_2'(s('type.list.list'(bool),sK11('const.bool.BOUNDED_1'(s(bool,X48)),X50,bool)),s('type.list.list'(bool),'const.list.CONS_2'(s(bool,'const.bool.BOUNDED_1'(s(bool,X48))),s('type.list.list'(bool),'const.list.NIL_0'))))),s('type.list.list'(bool),sK12('const.bool.BOUNDED_1'(s(bool,X48)),X50,bool)))) | s(bool,'F_0') = s(bool,X49)) )),
  inference(superposition,[],[f375,f787])).
fof(f6292,plain,(
  ( ! [X47,X46] : (s('type.list.list'(bool),X47) = s('type.list.list'(bool),'const.list.APPEND_2'(s('type.list.list'(bool),'const.list.APPEND_2'(s('type.list.list'(bool),sK11('const.marker.Cong_1'(s(bool,X46)),X47,bool)),s('type.list.list'(bool),'const.list.CONS_2'(s(bool,X46),s('type.list.list'(bool),'const.list.NIL_0'))))),s('type.list.list'(bool),sK12('const.marker.Cong_1'(s(bool,X46)),X47,bool)))) | ~p(s(bool,'const.bool.IN_2'(s(bool,X46),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),X47))))))) )),
  inference(forward_demodulation,[],[f6254,f297])).
fof(f6254,plain,(
  ( ! [X47,X46] : (~p(s(bool,'const.bool.IN_2'(s(bool,X46),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),X47)))))) | s('type.list.list'(bool),X47) = s('type.list.list'(bool),'const.list.APPEND_2'(s('type.list.list'(bool),'const.list.APPEND_2'(s('type.list.list'(bool),sK11('const.marker.Cong_1'(s(bool,X46)),X47,bool)),s('type.list.list'(bool),'const.list.CONS_2'(s(bool,'const.marker.Cong_1'(s(bool,X46))),s('type.list.list'(bool),'const.list.NIL_0'))))),s('type.list.list'(bool),sK12('const.marker.Cong_1'(s(bool,X46)),X47,bool))))) )),
  inference(superposition,[],[f375,f297])).
fof(f6291,plain,(
  ( ! [X45,X44] : (s('type.list.list'(bool),X45) = s('type.list.list'(bool),'const.list.APPEND_2'(s('type.list.list'(bool),'const.list.APPEND_2'(s('type.list.list'(bool),sK11('const.marker.Cong_1'(s(bool,X44)),X45,bool)),s('type.list.list'(bool),'const.list.CONS_2'(s(bool,X44),s('type.list.list'(bool),'const.list.NIL_0'))))),s('type.list.list'(bool),sK12('const.marker.Cong_1'(s(bool,X44)),X45,bool)))) | ~p(s(bool,'const.bool.IN_2'(s(bool,'T_0'),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),X45)))))) | s(bool,'F_0') = s(bool,X44)) )),
  inference(forward_demodulation,[],[f6253,f297])).
fof(f6253,plain,(
  ( ! [X45,X44] : (~p(s(bool,'const.bool.IN_2'(s(bool,'T_0'),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),X45)))))) | s('type.list.list'(bool),X45) = s('type.list.list'(bool),'const.list.APPEND_2'(s('type.list.list'(bool),'const.list.APPEND_2'(s('type.list.list'(bool),sK11('const.marker.Cong_1'(s(bool,X44)),X45,bool)),s('type.list.list'(bool),'const.list.CONS_2'(s(bool,'const.marker.Cong_1'(s(bool,X44))),s('type.list.list'(bool),'const.list.NIL_0'))))),s('type.list.list'(bool),sK12('const.marker.Cong_1'(s(bool,X44)),X45,bool)))) | s(bool,'F_0') = s(bool,X44)) )),
  inference(superposition,[],[f375,f535])).
fof(f6284,plain,(
  ( ! [X33,X34,X32] : (s('type.list.list'(bool),X34) = s('type.list.list'(bool),'const.list.APPEND_2'(s('type.list.list'(bool),'const.list.APPEND_2'(s('type.list.list'(bool),sK11('const.bool.IN_2'(s(X32,X33),s(fun(X32,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X32),'const.list.NIL_0')))),X34,bool)),s('type.list.list'(bool),'const.list.CONS_2'(s(bool,'F_0'),s('type.list.list'(bool),'const.list.NIL_0'))))),s('type.list.list'(bool),sK12('const.bool.IN_2'(s(X32,X33),s(fun(X32,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X32),'const.list.NIL_0')))),X34,bool)))) | ~p(s(bool,'const.bool.IN_2'(s(bool,'F_0'),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),X34))))))) )),
  inference(forward_demodulation,[],[f6246,f360])).
fof(f6246,plain,(
  ( ! [X33,X34,X32] : (~p(s(bool,'const.bool.IN_2'(s(bool,'F_0'),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),X34)))))) | s('type.list.list'(bool),X34) = s('type.list.list'(bool),'const.list.APPEND_2'(s('type.list.list'(bool),'const.list.APPEND_2'(s('type.list.list'(bool),sK11('const.bool.IN_2'(s(X32,X33),s(fun(X32,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X32),'const.list.NIL_0')))),X34,bool)),s('type.list.list'(bool),'const.list.CONS_2'(s(bool,'const.bool.IN_2'(s(X32,X33),s(fun(X32,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X32),'const.list.NIL_0'))))),s('type.list.list'(bool),'const.list.NIL_0'))))),s('type.list.list'(bool),sK12('const.bool.IN_2'(s(X32,X33),s(fun(X32,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X32),'const.list.NIL_0')))),X34,bool))))) )),
  inference(superposition,[],[f375,f360])).
fof(f6245,plain,(
  ( ! [X30,X31] : (~p(s(bool,'const.bool.IN_2'(s(bool,X30),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),X31)))))) | s('type.list.list'(bool),X31) = s('type.list.list'(bool),'const.list.APPEND_2'(s('type.list.list'(bool),'const.list.APPEND_2'(s('type.list.list'(bool),sK11('F_0',X31,bool)),s('type.list.list'(bool),'const.list.CONS_2'(s(bool,'F_0'),s('type.list.list'(bool),'const.list.NIL_0'))))),s('type.list.list'(bool),sK12('F_0',X31,bool)))) | s(bool,'T_0') = s(bool,X30)) )),
  inference(superposition,[],[f375,f299])).
fof(f6282,plain,(
  ( ! [X27,X25] : (~p(s(bool,'const.bool.IN_2'(s(bool,'T_0'),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),X27)))))) | s('type.list.list'(bool),X27) = s('type.list.list'(bool),'const.list.APPEND_2'(s('type.list.list'(bool),'const.list.APPEND_2'(s('type.list.list'(bool),sK11(X25,X27,bool)),s('type.list.list'(bool),'const.list.CONS_2'(s(bool,X25),s('type.list.list'(bool),'const.list.NIL_0'))))),s('type.list.list'(bool),sK12(X25,X27,bool)))) | s(bool,'F_0') = s(bool,X25)) )),
  inference(forward_demodulation,[],[f6243,f296])).
fof(f6243,plain,(
  ( ! [X26,X27,X25] : (~p(s(bool,'const.bool.IN_2'(s(bool,'const.bool.BOUNDED_1'(s(bool,X26))),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),X27)))))) | s('type.list.list'(bool),X27) = s('type.list.list'(bool),'const.list.APPEND_2'(s('type.list.list'(bool),'const.list.APPEND_2'(s('type.list.list'(bool),sK11(X25,X27,bool)),s('type.list.list'(bool),'const.list.CONS_2'(s(bool,X25),s('type.list.list'(bool),'const.list.NIL_0'))))),s('type.list.list'(bool),sK12(X25,X27,bool)))) | s(bool,'F_0') = s(bool,X25)) )),
  inference(superposition,[],[f375,f787])).
fof(f6242,plain,(
  ( ! [X24,X23] : (~p(s(bool,'const.bool.IN_2'(s(bool,'F_0'),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),X24)))))) | s('type.list.list'(bool),X24) = s('type.list.list'(bool),'const.list.APPEND_2'(s('type.list.list'(bool),'const.list.APPEND_2'(s('type.list.list'(bool),sK11(X23,X24,bool)),s('type.list.list'(bool),'const.list.CONS_2'(s(bool,X23),s('type.list.list'(bool),'const.list.NIL_0'))))),s('type.list.list'(bool),sK12(X23,X24,bool)))) | s(bool,'T_0') = s(bool,X23)) )),
  inference(superposition,[],[f375,f299])).
fof(f6241,plain,(
  ( ! [X21,X19,X17,X22,X20,X18,X16] : (~p(s(bool,'const.bool.IN_2'(s(X16,happ(s(fun(X18,X16),X19),s(X18,happ(s(fun(X17,X18),X20),s(X17,X21))))),s(fun(X16,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X16),X22)))))) | s('type.list.list'(X16),X22) = s('type.list.list'(X16),'const.list.APPEND_2'(s('type.list.list'(X16),'const.list.APPEND_2'(s('type.list.list'(X16),sK11(happ(s(fun(X17,X16),'_dst_x0x1_2'(s(fun(X18,X16),X19),s(fun(X17,X18),X20))),s(X17,X21)),X22,X16)),s('type.list.list'(X16),'const.list.CONS_2'(s(X16,happ(s(fun(X17,X16),'_dst_x0x1_2'(s(fun(X18,X16),X19),s(fun(X17,X18),X20))),s(X17,X21))),s('type.list.list'(X16),'const.list.NIL_0'))))),s('type.list.list'(X16),sK12(happ(s(fun(X17,X16),'_dst_x0x1_2'(s(fun(X18,X16),X19),s(fun(X17,X18),X20))),s(X17,X21)),X22,X16))))) )),
  inference(superposition,[],[f375,f437])).
fof(f6240,plain,(
  ( ! [X14,X12,X10,X15,X13,X11,X9] : (~p(s(bool,'const.bool.IN_2'(s(X9,happ(s(fun(X12,X9),'_dst_x0x1_2'(s(fun(X10,X9),X11),s(fun(X12,X10),X13))),s(X12,X14))),s(fun(X9,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X9),X15)))))) | s('type.list.list'(X9),X15) = s('type.list.list'(X9),'const.list.APPEND_2'(s('type.list.list'(X9),'const.list.APPEND_2'(s('type.list.list'(X9),sK11(happ(s(fun(X10,X9),X11),s(X10,happ(s(fun(X12,X10),X13),s(X12,X14)))),X15,X9)),s('type.list.list'(X9),'const.list.CONS_2'(s(X9,happ(s(fun(X10,X9),X11),s(X10,happ(s(fun(X12,X10),X13),s(X12,X14))))),s('type.list.list'(X9),'const.list.NIL_0'))))),s('type.list.list'(X9),sK12(happ(s(fun(X10,X9),X11),s(X10,happ(s(fun(X12,X10),X13),s(X12,X14)))),X15,X9))))) )),
  inference(superposition,[],[f375,f437])).
fof(f6281,plain,(
  ( ! [X6,X4,X8,X7,X5] : (s('type.list.list'(X4),X8) = s('type.list.list'(X4),'const.list.APPEND_2'(s('type.list.list'(X4),'const.list.APPEND_2'(s('type.list.list'(X4),sK11('const.ind_type.FCONS_3'(s(X4,X5),s(fun('type.num.num',X4),X6),s('type.num.num','const.num.SUC_1'(s('type.num.num',X7)))),X8,X4)),s('type.list.list'(X4),'const.list.CONS_2'(s(X4,happ(s(fun('type.num.num',X4),X6),s('type.num.num',X7))),s('type.list.list'(X4),'const.list.NIL_0'))))),s('type.list.list'(X4),sK12('const.ind_type.FCONS_3'(s(X4,X5),s(fun('type.num.num',X4),X6),s('type.num.num','const.num.SUC_1'(s('type.num.num',X7)))),X8,X4)))) | ~p(s(bool,'const.bool.IN_2'(s(X4,happ(s(fun('type.num.num',X4),X6),s('type.num.num',X7))),s(fun(X4,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X4),X8))))))) )),
  inference(forward_demodulation,[],[f6239,f390])).
fof(f6239,plain,(
  ( ! [X6,X4,X8,X7,X5] : (~p(s(bool,'const.bool.IN_2'(s(X4,happ(s(fun('type.num.num',X4),X6),s('type.num.num',X7))),s(fun(X4,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X4),X8)))))) | s('type.list.list'(X4),X8) = s('type.list.list'(X4),'const.list.APPEND_2'(s('type.list.list'(X4),'const.list.APPEND_2'(s('type.list.list'(X4),sK11('const.ind_type.FCONS_3'(s(X4,X5),s(fun('type.num.num',X4),X6),s('type.num.num','const.num.SUC_1'(s('type.num.num',X7)))),X8,X4)),s('type.list.list'(X4),'const.list.CONS_2'(s(X4,'const.ind_type.FCONS_3'(s(X4,X5),s(fun('type.num.num',X4),X6),s('type.num.num','const.num.SUC_1'(s('type.num.num',X7))))),s('type.list.list'(X4),'const.list.NIL_0'))))),s('type.list.list'(X4),sK12('const.ind_type.FCONS_3'(s(X4,X5),s(fun('type.num.num',X4),X6),s('type.num.num','const.num.SUC_1'(s('type.num.num',X7)))),X8,X4))))) )),
  inference(superposition,[],[f375,f390])).
fof(f6280,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.list.list'(X0),X3) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),sK11('const.ind_type.FCONS_3'(s(X0,X1),s(fun('type.num.num',X0),X2),s('type.num.num','const.num.|48|_0')),X3,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X1),s('type.list.list'(X0),'const.list.NIL_0'))))),s('type.list.list'(X0),sK12('const.ind_type.FCONS_3'(s(X0,X1),s(fun('type.num.num',X0),X2),s('type.num.num','const.num.|48|_0')),X3,X0)))) | ~p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),X3))))))) )),
  inference(forward_demodulation,[],[f6238,f368])).
fof(f6238,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),X3)))))) | s('type.list.list'(X0),X3) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),sK11('const.ind_type.FCONS_3'(s(X0,X1),s(fun('type.num.num',X0),X2),s('type.num.num','const.num.|48|_0')),X3,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,'const.ind_type.FCONS_3'(s(X0,X1),s(fun('type.num.num',X0),X2),s('type.num.num','const.num.|48|_0'))),s('type.list.list'(X0),'const.list.NIL_0'))))),s('type.list.list'(X0),sK12('const.ind_type.FCONS_3'(s(X0,X1),s(fun('type.num.num',X0),X2),s('type.num.num','const.num.|48|_0')),X3,X0))))) )),
  inference(superposition,[],[f375,f368])).
fof(f6102,plain,(
  ( ! [X39,X41,X38,X42,X40] : (~p(s(bool,'const.bool.IN_2'(s('type.ind_type.recspace'(X38),'const.ind_type.CONSTR_3'(s('type.num.num',X39),s(X38,X40),s(fun('type.num.num','type.ind_type.recspace'(X38)),X41))),s(fun('type.ind_type.recspace'(X38),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.ind_type.recspace'(X38)),X42)))))) | ~p(s(bool,'const.bool.IN_2'(s('type.ind_type.recspace'(X38),'const.ind_type.CONSTR_3'(s('type.num.num',X39),s(X38,X40),s(fun('type.num.num','type.ind_type.recspace'(X38)),X41))),s(fun('type.ind_type.recspace'(X38),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.ind_type.recspace'(X38)),sK14(happ(s(fun(fun('type.num.num','type.ind_type.recspace'(X38)),'type.ind_type.recspace'(X38)),happ(s(fun(X38,fun(fun('type.num.num','type.ind_type.recspace'(X38)),'type.ind_type.recspace'(X38))),'const.ind_type.CONSTR_1'(s('type.num.num',X39))),s(X38,X40))),s(fun('type.num.num','type.ind_type.recspace'(X38)),X41)),X42,'type.ind_type.recspace'(X38))))))))) )),
  inference(forward_demodulation,[],[f6083,f392])).
fof(f6083,plain,(
  ( ! [X39,X41,X38,X42,X40] : (~p(s(bool,'const.bool.IN_2'(s('type.ind_type.recspace'(X38),'const.ind_type.CONSTR_3'(s('type.num.num',X39),s(X38,X40),s(fun('type.num.num','type.ind_type.recspace'(X38)),X41))),s(fun('type.ind_type.recspace'(X38),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.ind_type.recspace'(X38)),sK14(happ(s(fun(fun('type.num.num','type.ind_type.recspace'(X38)),'type.ind_type.recspace'(X38)),happ(s(fun(X38,fun(fun('type.num.num','type.ind_type.recspace'(X38)),'type.ind_type.recspace'(X38))),'const.ind_type.CONSTR_1'(s('type.num.num',X39))),s(X38,X40))),s(fun('type.num.num','type.ind_type.recspace'(X38)),X41)),X42,'type.ind_type.recspace'(X38)))))))) | ~p(s(bool,'const.bool.IN_2'(s('type.ind_type.recspace'(X38),happ(s(fun(fun('type.num.num','type.ind_type.recspace'(X38)),'type.ind_type.recspace'(X38)),happ(s(fun(X38,fun(fun('type.num.num','type.ind_type.recspace'(X38)),'type.ind_type.recspace'(X38))),'const.ind_type.CONSTR_1'(s('type.num.num',X39))),s(X38,X40))),s(fun('type.num.num','type.ind_type.recspace'(X38)),X41))),s(fun('type.ind_type.recspace'(X38),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.ind_type.recspace'(X38)),X42))))))) )),
  inference(superposition,[],[f379,f392])).
fof(f6101,plain,(
  ( ! [X37,X35,X33,X36,X34] : (~p(s(bool,'const.bool.IN_2'(s('type.ind_type.recspace'(X33),'const.ind_type.CONSTR_3'(s('type.num.num',X34),s(X33,X35),s(fun('type.num.num','type.ind_type.recspace'(X33)),X36))),s(fun('type.ind_type.recspace'(X33),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.ind_type.recspace'(X33)),X37)))))) | ~p(s(bool,'const.bool.IN_2'(s('type.ind_type.recspace'(X33),'const.ind_type.CONSTR_3'(s('type.num.num',X34),s(X33,X35),s(fun('type.num.num','type.ind_type.recspace'(X33)),X36))),s(fun('type.ind_type.recspace'(X33),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.ind_type.recspace'(X33)),sK11(happ(s(fun(fun('type.num.num','type.ind_type.recspace'(X33)),'type.ind_type.recspace'(X33)),happ(s(fun(X33,fun(fun('type.num.num','type.ind_type.recspace'(X33)),'type.ind_type.recspace'(X33))),'const.ind_type.CONSTR_1'(s('type.num.num',X34))),s(X33,X35))),s(fun('type.num.num','type.ind_type.recspace'(X33)),X36)),X37,'type.ind_type.recspace'(X33))))))))) )),
  inference(forward_demodulation,[],[f6082,f392])).
fof(f6082,plain,(
  ( ! [X37,X35,X33,X36,X34] : (~p(s(bool,'const.bool.IN_2'(s('type.ind_type.recspace'(X33),'const.ind_type.CONSTR_3'(s('type.num.num',X34),s(X33,X35),s(fun('type.num.num','type.ind_type.recspace'(X33)),X36))),s(fun('type.ind_type.recspace'(X33),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.ind_type.recspace'(X33)),sK11(happ(s(fun(fun('type.num.num','type.ind_type.recspace'(X33)),'type.ind_type.recspace'(X33)),happ(s(fun(X33,fun(fun('type.num.num','type.ind_type.recspace'(X33)),'type.ind_type.recspace'(X33))),'const.ind_type.CONSTR_1'(s('type.num.num',X34))),s(X33,X35))),s(fun('type.num.num','type.ind_type.recspace'(X33)),X36)),X37,'type.ind_type.recspace'(X33)))))))) | ~p(s(bool,'const.bool.IN_2'(s('type.ind_type.recspace'(X33),happ(s(fun(fun('type.num.num','type.ind_type.recspace'(X33)),'type.ind_type.recspace'(X33)),happ(s(fun(X33,fun(fun('type.num.num','type.ind_type.recspace'(X33)),'type.ind_type.recspace'(X33))),'const.ind_type.CONSTR_1'(s('type.num.num',X34))),s(X33,X35))),s(fun('type.num.num','type.ind_type.recspace'(X33)),X36))),s(fun('type.ind_type.recspace'(X33),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.ind_type.recspace'(X33)),X37))))))) )),
  inference(superposition,[],[f376,f392])).
fof(f5784,plain,(
  ( ! [X4,X5,X3] : (p(s(bool,happ(s(fun('type.list.list'(X3),bool),X4),s('type.list.list'(X3),'const.list.NIL_0')))) | p(s(bool,happ(s(fun('type.list.list'(X3),bool),X4),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK5(X4,X3)),s('type.list.list'(X3),sK6(X4,X3))))))) | s(bool,'F_0') = s(bool,happ(s(fun('type.list.list'(X3),bool),X4),s('type.list.list'(X3),X5)))) )),
  inference(subsumption_resolution,[],[f5783,f289])).
fof(f5783,plain,(
  ( ! [X4,X5,X3] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'(X3),bool),X4),s('type.list.list'(X3),'const.list.NIL_0')))) | p(s(bool,happ(s(fun('type.list.list'(X3),bool),X4),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK5(X4,X3)),s('type.list.list'(X3),sK6(X4,X3))))))) | s(bool,'F_0') = s(bool,happ(s(fun('type.list.list'(X3),bool),X4),s('type.list.list'(X3),X5)))) )),
  inference(forward_demodulation,[],[f5776,f296])).
fof(f5776,plain,(
  ( ! [X6,X4,X5,X3] : (~p(s(bool,'const.bool.BOUNDED_1'(s(bool,X6)))) | p(s(bool,happ(s(fun('type.list.list'(X3),bool),X4),s('type.list.list'(X3),'const.list.NIL_0')))) | p(s(bool,happ(s(fun('type.list.list'(X3),bool),X4),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK5(X4,X3)),s('type.list.list'(X3),sK6(X4,X3))))))) | s(bool,'F_0') = s(bool,happ(s(fun('type.list.list'(X3),bool),X4),s('type.list.list'(X3),X5)))) )),
  inference(superposition,[],[f365,f787])).
fof(f5626,plain,(
  ( ! [X2,X0,X1] : (s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.NIL_0'))) | s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.NIL_0'))) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.NIL_0'),s('type.list.list'(X0),X1)))) )),
  inference(equality_resolution,[],[f402])).
fof(f5625,plain,(
  ( ! [X39,X37,X35,X33,X38,X36,X34,X40] : (s('type.list.list'(X33),'const.list.NIL_0') != s('type.list.list'(X33),happ(s(fun(X35,'type.list.list'(X33)),X36),s(X35,happ(s(fun(X34,X35),X37),s(X34,X38))))) | s('type.list.list'(X33),X39) != s('type.list.list'(X33),'const.list.CONS_2'(s(X33,X40),s('type.list.list'(X33),'const.list.NIL_0'))) | s('type.list.list'(X33),'const.list.CONS_2'(s(X33,X40),s('type.list.list'(X33),'const.list.NIL_0'))) = s('type.list.list'(X33),'const.list.APPEND_2'(s('type.list.list'(X33),happ(s(fun(X34,'type.list.list'(X33)),'_dst_x0x1_2'(s(fun(X35,'type.list.list'(X33)),X36),s(fun(X34,X35),X37))),s(X34,X38))),s('type.list.list'(X33),X39)))) )),
  inference(superposition,[],[f402,f437])).
fof(f5624,plain,(
  ( ! [X30,X28,X26,X31,X29,X27,X25,X32] : (s('type.list.list'(X25),'const.list.NIL_0') != s('type.list.list'(X25),happ(s(fun(X28,'type.list.list'(X25)),'_dst_x0x1_2'(s(fun(X26,'type.list.list'(X25)),X27),s(fun(X28,X26),X29))),s(X28,X30))) | s('type.list.list'(X25),X31) != s('type.list.list'(X25),'const.list.CONS_2'(s(X25,X32),s('type.list.list'(X25),'const.list.NIL_0'))) | s('type.list.list'(X25),'const.list.CONS_2'(s(X25,X32),s('type.list.list'(X25),'const.list.NIL_0'))) = s('type.list.list'(X25),'const.list.APPEND_2'(s('type.list.list'(X25),happ(s(fun(X26,'type.list.list'(X25)),X27),s(X26,happ(s(fun(X28,X26),X29),s(X28,X30))))),s('type.list.list'(X25),X31)))) )),
  inference(superposition,[],[f402,f437])).
fof(f5511,plain,(
  ( ! [X2,X0,X1] : (s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X1),s('type.list.list'(X0),'const.list.NIL_0'))) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),'const.list.NIL_0'))) | s('type.list.list'(X0),X2) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X1),s('type.list.list'(X0),'const.list.NIL_0')))) )),
  inference(equality_resolution,[],[f401])).
fof(f5510,plain,(
  ( ! [X39,X37,X35,X33,X38,X36,X34,X40] : (s('type.list.list'(X33),'const.list.NIL_0') != s('type.list.list'(X33),happ(s(fun(X35,'type.list.list'(X33)),X36),s(X35,happ(s(fun(X34,X35),X37),s(X34,X38))))) | s('type.list.list'(X33),'const.list.CONS_2'(s(X33,X39),s('type.list.list'(X33),'const.list.NIL_0'))) = s('type.list.list'(X33),'const.list.APPEND_2'(s('type.list.list'(X33),X40),s('type.list.list'(X33),happ(s(fun(X34,'type.list.list'(X33)),'_dst_x0x1_2'(s(fun(X35,'type.list.list'(X33)),X36),s(fun(X34,X35),X37))),s(X34,X38))))) | s('type.list.list'(X33),X40) != s('type.list.list'(X33),'const.list.CONS_2'(s(X33,X39),s('type.list.list'(X33),'const.list.NIL_0')))) )),
  inference(superposition,[],[f401,f437])).
fof(f5509,plain,(
  ( ! [X30,X28,X26,X31,X29,X27,X25,X32] : (s('type.list.list'(X25),'const.list.NIL_0') != s('type.list.list'(X25),happ(s(fun(X28,'type.list.list'(X25)),'_dst_x0x1_2'(s(fun(X26,'type.list.list'(X25)),X27),s(fun(X28,X26),X29))),s(X28,X30))) | s('type.list.list'(X25),'const.list.CONS_2'(s(X25,X31),s('type.list.list'(X25),'const.list.NIL_0'))) = s('type.list.list'(X25),'const.list.APPEND_2'(s('type.list.list'(X25),X32),s('type.list.list'(X25),happ(s(fun(X26,'type.list.list'(X25)),X27),s(X26,happ(s(fun(X28,X26),X29),s(X28,X30))))))) | s('type.list.list'(X25),X32) != s('type.list.list'(X25),'const.list.CONS_2'(s(X25,X31),s('type.list.list'(X25),'const.list.NIL_0')))) )),
  inference(superposition,[],[f401,f437])).
fof(f5387,plain,(
  ( ! [X6,X10,X8,X7,X9] : (s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X10),s('type.list.list'(X6),'const.list.NIL_0'))) != s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X7),s('type.list.list'(X6),'const.list.APPEND_2'(s('type.list.list'(X6),X8),s('type.list.list'(X6),X9))))) | s('type.list.list'(X6),'const.list.NIL_0') = s('type.list.list'(X6),X9) | s('type.list.list'(X6),X9) = s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X10),s('type.list.list'(X6),'const.list.NIL_0')))) )),
  inference(superposition,[],[f400,f391])).
fof(f5384,plain,(
  ( ! [X39,X37,X35,X33,X38,X36,X34,X40] : (s('type.list.list'(X33),'const.list.CONS_2'(s(X33,X39),s('type.list.list'(X33),'const.list.NIL_0'))) != s('type.list.list'(X33),'const.list.APPEND_2'(s('type.list.list'(X33),X40),s('type.list.list'(X33),happ(s(fun(X35,'type.list.list'(X33)),X36),s(X35,happ(s(fun(X34,X35),X37),s(X34,X38))))))) | s('type.list.list'(X33),'const.list.NIL_0') = s('type.list.list'(X33),happ(s(fun(X34,'type.list.list'(X33)),'_dst_x0x1_2'(s(fun(X35,'type.list.list'(X33)),X36),s(fun(X34,X35),X37))),s(X34,X38))) | s('type.list.list'(X33),'const.list.CONS_2'(s(X33,X39),s('type.list.list'(X33),'const.list.NIL_0'))) = s('type.list.list'(X33),happ(s(fun(X34,'type.list.list'(X33)),'_dst_x0x1_2'(s(fun(X35,'type.list.list'(X33)),X36),s(fun(X34,X35),X37))),s(X34,X38)))) )),
  inference(superposition,[],[f400,f437])).
fof(f5383,plain,(
  ( ! [X30,X28,X26,X31,X29,X27,X25,X32] : (s('type.list.list'(X25),'const.list.CONS_2'(s(X25,X31),s('type.list.list'(X25),'const.list.NIL_0'))) != s('type.list.list'(X25),'const.list.APPEND_2'(s('type.list.list'(X25),X32),s('type.list.list'(X25),happ(s(fun(X28,'type.list.list'(X25)),'_dst_x0x1_2'(s(fun(X26,'type.list.list'(X25)),X27),s(fun(X28,X26),X29))),s(X28,X30))))) | s('type.list.list'(X25),'const.list.NIL_0') = s('type.list.list'(X25),happ(s(fun(X26,'type.list.list'(X25)),X27),s(X26,happ(s(fun(X28,X26),X29),s(X28,X30))))) | s('type.list.list'(X25),'const.list.CONS_2'(s(X25,X31),s('type.list.list'(X25),'const.list.NIL_0'))) = s('type.list.list'(X25),happ(s(fun(X26,'type.list.list'(X25)),X27),s(X26,happ(s(fun(X28,X26),X29),s(X28,X30)))))) )),
  inference(superposition,[],[f400,f437])).
fof(f5382,plain,(
  ( ! [X24,X23,X21,X19,X22,X20] : (s('type.list.list'(X19),'const.list.CONS_2'(s(X19,X23),s('type.list.list'(X19),'const.list.NIL_0'))) != s('type.list.list'(X19),'const.list.APPEND_2'(s('type.list.list'(X19),X24),s('type.list.list'(X19),happ(s(fun('type.num.num','type.list.list'(X19)),X21),s('type.num.num',X22))))) | s('type.list.list'(X19),'const.list.NIL_0') = s('type.list.list'(X19),'const.ind_type.FCONS_3'(s('type.list.list'(X19),X20),s(fun('type.num.num','type.list.list'(X19)),X21),s('type.num.num','const.num.SUC_1'(s('type.num.num',X22))))) | s('type.list.list'(X19),'const.list.CONS_2'(s(X19,X23),s('type.list.list'(X19),'const.list.NIL_0'))) = s('type.list.list'(X19),'const.ind_type.FCONS_3'(s('type.list.list'(X19),X20),s(fun('type.num.num','type.list.list'(X19)),X21),s('type.num.num','const.num.SUC_1'(s('type.num.num',X22)))))) )),
  inference(superposition,[],[f400,f390])).
fof(f5381,plain,(
  ( ! [X14,X17,X15,X18,X16] : (s('type.list.list'(X14),'const.list.CONS_2'(s(X14,X17),s('type.list.list'(X14),'const.list.NIL_0'))) != s('type.list.list'(X14),'const.list.APPEND_2'(s('type.list.list'(X14),X18),s('type.list.list'(X14),X15))) | s('type.list.list'(X14),'const.list.NIL_0') = s('type.list.list'(X14),'const.ind_type.FCONS_3'(s('type.list.list'(X14),X15),s(fun('type.num.num','type.list.list'(X14)),X16),s('type.num.num','const.num.|48|_0'))) | s('type.list.list'(X14),'const.list.CONS_2'(s(X14,X17),s('type.list.list'(X14),'const.list.NIL_0'))) = s('type.list.list'(X14),'const.ind_type.FCONS_3'(s('type.list.list'(X14),X15),s(fun('type.num.num','type.list.list'(X14)),X16),s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f400,f368])).
fof(f5379,plain,(
  ( ! [X6,X4,X7,X5] : (s('type.list.list'(X4),'const.list.CONS_2'(s(X4,X6),s('type.list.list'(X4),'const.list.NIL_0'))) != s('type.list.list'(X4),'const.list.APPEND_2'(s('type.list.list'(X4),X7),s('type.list.list'(X4),X5))) | s('type.list.list'(X4),'const.list.NIL_0') = s('type.list.list'(X4),'const.list.APPEND_2'(s('type.list.list'(X4),'const.list.NIL_0'),s('type.list.list'(X4),X5))) | s('type.list.list'(X4),'const.list.CONS_2'(s(X4,X6),s('type.list.list'(X4),'const.list.NIL_0'))) = s('type.list.list'(X4),'const.list.APPEND_2'(s('type.list.list'(X4),'const.list.NIL_0'),s('type.list.list'(X4),X5)))) )),
  inference(superposition,[],[f400,f359])).
fof(f5378,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.NIL_0'))) != s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X3),s('type.list.list'(X0),X1))) | s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),'const.list.NIL_0'))) | s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.NIL_0'))) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),'const.list.NIL_0')))) )),
  inference(superposition,[],[f400,f358])).
fof(f5370,plain,(
  ( ! [X70,X68,X66,X72,X71,X69,X67,X73] : (s('type.list.list'(X66),'const.list.APPEND_2'(s('type.list.list'(X66),X72),s('type.list.list'(X66),X73))) != s('type.list.list'(X66),'const.list.CONS_2'(s(X66,happ(s(fun(X68,X66),X69),s(X68,happ(s(fun(X67,X68),X70),s(X67,X71))))),s('type.list.list'(X66),'const.list.NIL_0'))) | s('type.list.list'(X66),'const.list.NIL_0') = s('type.list.list'(X66),X73) | s('type.list.list'(X66),X73) = s('type.list.list'(X66),'const.list.CONS_2'(s(X66,happ(s(fun(X67,X66),'_dst_x0x1_2'(s(fun(X68,X66),X69),s(fun(X67,X68),X70))),s(X67,X71))),s('type.list.list'(X66),'const.list.NIL_0')))) )),
  inference(superposition,[],[f400,f437])).
fof(f5369,plain,(
  ( ! [X61,X59,X64,X62,X60,X58,X65,X63] : (s('type.list.list'(X58),'const.list.APPEND_2'(s('type.list.list'(X58),X64),s('type.list.list'(X58),X65))) != s('type.list.list'(X58),'const.list.CONS_2'(s(X58,happ(s(fun(X61,X58),'_dst_x0x1_2'(s(fun(X59,X58),X60),s(fun(X61,X59),X62))),s(X61,X63))),s('type.list.list'(X58),'const.list.NIL_0'))) | s('type.list.list'(X58),'const.list.NIL_0') = s('type.list.list'(X58),X65) | s('type.list.list'(X58),X65) = s('type.list.list'(X58),'const.list.CONS_2'(s(X58,happ(s(fun(X59,X58),X60),s(X59,happ(s(fun(X61,X59),X62),s(X61,X63))))),s('type.list.list'(X58),'const.list.NIL_0')))) )),
  inference(superposition,[],[f400,f437])).
fof(f5395,plain,(
  ( ! [X28,X29,X27] : (s('type.list.list'(bool),X29) = s('type.list.list'(bool),'const.list.CONS_2'(s(bool,'T_0'),s('type.list.list'(bool),'const.list.NIL_0'))) | s('type.list.list'(bool),'const.list.CONS_2'(s(bool,X27),s('type.list.list'(bool),'const.list.NIL_0'))) != s('type.list.list'(bool),'const.list.APPEND_2'(s('type.list.list'(bool),X28),s('type.list.list'(bool),X29))) | s('type.list.list'(bool),'const.list.NIL_0') = s('type.list.list'(bool),X29) | s(bool,'F_0') = s(bool,X27)) )),
  inference(forward_demodulation,[],[f5362,f296])).
fof(f5362,plain,(
  ( ! [X28,X26,X29,X27] : (s('type.list.list'(bool),'const.list.CONS_2'(s(bool,X27),s('type.list.list'(bool),'const.list.NIL_0'))) != s('type.list.list'(bool),'const.list.APPEND_2'(s('type.list.list'(bool),X28),s('type.list.list'(bool),X29))) | s('type.list.list'(bool),'const.list.NIL_0') = s('type.list.list'(bool),X29) | s('type.list.list'(bool),X29) = s('type.list.list'(bool),'const.list.CONS_2'(s(bool,'const.bool.BOUNDED_1'(s(bool,X26))),s('type.list.list'(bool),'const.list.NIL_0'))) | s(bool,'F_0') = s(bool,X27)) )),
  inference(superposition,[],[f400,f787])).
fof(f5388,plain,(
  ( ! [X6,X5,X3] : (s('type.list.list'(bool),'const.list.CONS_2'(s(bool,'T_0'),s('type.list.list'(bool),'const.list.NIL_0'))) != s('type.list.list'(bool),'const.list.APPEND_2'(s('type.list.list'(bool),X5),s('type.list.list'(bool),X6))) | s('type.list.list'(bool),'const.list.NIL_0') = s('type.list.list'(bool),X6) | s('type.list.list'(bool),X6) = s('type.list.list'(bool),'const.list.CONS_2'(s(bool,X3),s('type.list.list'(bool),'const.list.NIL_0'))) | s(bool,'F_0') = s(bool,X3)) )),
  inference(forward_demodulation,[],[f5355,f296])).
fof(f5355,plain,(
  ( ! [X6,X4,X5,X3] : (s('type.list.list'(bool),'const.list.APPEND_2'(s('type.list.list'(bool),X5),s('type.list.list'(bool),X6))) != s('type.list.list'(bool),'const.list.CONS_2'(s(bool,'const.bool.BOUNDED_1'(s(bool,X4))),s('type.list.list'(bool),'const.list.NIL_0'))) | s('type.list.list'(bool),'const.list.NIL_0') = s('type.list.list'(bool),X6) | s('type.list.list'(bool),X6) = s('type.list.list'(bool),'const.list.CONS_2'(s(bool,X3),s('type.list.list'(bool),'const.list.NIL_0'))) | s(bool,'F_0') = s(bool,X3)) )),
  inference(superposition,[],[f400,f787])).
fof(f5354,plain,(
  ( ! [X2,X0,X1] : (s('type.list.list'(bool),'const.list.CONS_2'(s(bool,'F_0'),s('type.list.list'(bool),'const.list.NIL_0'))) != s('type.list.list'(bool),'const.list.APPEND_2'(s('type.list.list'(bool),X1),s('type.list.list'(bool),X2))) | s('type.list.list'(bool),'const.list.NIL_0') = s('type.list.list'(bool),X2) | s('type.list.list'(bool),X2) = s('type.list.list'(bool),'const.list.CONS_2'(s(bool,X0),s('type.list.list'(bool),'const.list.NIL_0'))) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f400,f299])).
fof(f5277,plain,(
  ( ! [X6,X10,X8,X7,X9] : (s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X10),s('type.list.list'(X6),'const.list.NIL_0'))) != s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X7),s('type.list.list'(X6),'const.list.APPEND_2'(s('type.list.list'(X6),X8),s('type.list.list'(X6),X9))))) | s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X10),s('type.list.list'(X6),'const.list.NIL_0'))) = s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X7),s('type.list.list'(X6),X8))) | s('type.list.list'(X6),'const.list.NIL_0') = s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X7),s('type.list.list'(X6),X8)))) )),
  inference(superposition,[],[f397,f391])).
fof(f5267,plain,(
  ( ! [X39,X37,X35,X33,X38,X36,X34,X40] : (s('type.list.list'(X33),'const.list.CONS_2'(s(X33,X39),s('type.list.list'(X33),'const.list.NIL_0'))) != s('type.list.list'(X33),'const.list.APPEND_2'(s('type.list.list'(X33),happ(s(fun(X35,'type.list.list'(X33)),X36),s(X35,happ(s(fun(X34,X35),X37),s(X34,X38))))),s('type.list.list'(X33),X40))) | s('type.list.list'(X33),'const.list.CONS_2'(s(X33,X39),s('type.list.list'(X33),'const.list.NIL_0'))) = s('type.list.list'(X33),happ(s(fun(X34,'type.list.list'(X33)),'_dst_x0x1_2'(s(fun(X35,'type.list.list'(X33)),X36),s(fun(X34,X35),X37))),s(X34,X38))) | s('type.list.list'(X33),'const.list.NIL_0') = s('type.list.list'(X33),happ(s(fun(X34,'type.list.list'(X33)),'_dst_x0x1_2'(s(fun(X35,'type.list.list'(X33)),X36),s(fun(X34,X35),X37))),s(X34,X38)))) )),
  inference(superposition,[],[f397,f437])).
fof(f5266,plain,(
  ( ! [X30,X28,X26,X31,X29,X27,X25,X32] : (s('type.list.list'(X25),'const.list.CONS_2'(s(X25,X31),s('type.list.list'(X25),'const.list.NIL_0'))) != s('type.list.list'(X25),'const.list.APPEND_2'(s('type.list.list'(X25),happ(s(fun(X28,'type.list.list'(X25)),'_dst_x0x1_2'(s(fun(X26,'type.list.list'(X25)),X27),s(fun(X28,X26),X29))),s(X28,X30))),s('type.list.list'(X25),X32))) | s('type.list.list'(X25),'const.list.CONS_2'(s(X25,X31),s('type.list.list'(X25),'const.list.NIL_0'))) = s('type.list.list'(X25),happ(s(fun(X26,'type.list.list'(X25)),X27),s(X26,happ(s(fun(X28,X26),X29),s(X28,X30))))) | s('type.list.list'(X25),'const.list.NIL_0') = s('type.list.list'(X25),happ(s(fun(X26,'type.list.list'(X25)),X27),s(X26,happ(s(fun(X28,X26),X29),s(X28,X30)))))) )),
  inference(superposition,[],[f397,f437])).
fof(f5265,plain,(
  ( ! [X24,X23,X21,X19,X22,X20] : (s('type.list.list'(X19),'const.list.CONS_2'(s(X19,X23),s('type.list.list'(X19),'const.list.NIL_0'))) != s('type.list.list'(X19),'const.list.APPEND_2'(s('type.list.list'(X19),happ(s(fun('type.num.num','type.list.list'(X19)),X21),s('type.num.num',X22))),s('type.list.list'(X19),X24))) | s('type.list.list'(X19),'const.list.CONS_2'(s(X19,X23),s('type.list.list'(X19),'const.list.NIL_0'))) = s('type.list.list'(X19),'const.ind_type.FCONS_3'(s('type.list.list'(X19),X20),s(fun('type.num.num','type.list.list'(X19)),X21),s('type.num.num','const.num.SUC_1'(s('type.num.num',X22))))) | s('type.list.list'(X19),'const.list.NIL_0') = s('type.list.list'(X19),'const.ind_type.FCONS_3'(s('type.list.list'(X19),X20),s(fun('type.num.num','type.list.list'(X19)),X21),s('type.num.num','const.num.SUC_1'(s('type.num.num',X22)))))) )),
  inference(superposition,[],[f397,f390])).
fof(f5264,plain,(
  ( ! [X14,X17,X15,X18,X16] : (s('type.list.list'(X14),'const.list.CONS_2'(s(X14,X17),s('type.list.list'(X14),'const.list.NIL_0'))) != s('type.list.list'(X14),'const.list.APPEND_2'(s('type.list.list'(X14),X15),s('type.list.list'(X14),X18))) | s('type.list.list'(X14),'const.list.CONS_2'(s(X14,X17),s('type.list.list'(X14),'const.list.NIL_0'))) = s('type.list.list'(X14),'const.ind_type.FCONS_3'(s('type.list.list'(X14),X15),s(fun('type.num.num','type.list.list'(X14)),X16),s('type.num.num','const.num.|48|_0'))) | s('type.list.list'(X14),'const.list.NIL_0') = s('type.list.list'(X14),'const.ind_type.FCONS_3'(s('type.list.list'(X14),X15),s(fun('type.num.num','type.list.list'(X14)),X16),s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f397,f368])).
fof(f5262,plain,(
  ( ! [X6,X4,X7,X5] : (s('type.list.list'(X4),'const.list.CONS_2'(s(X4,X6),s('type.list.list'(X4),'const.list.NIL_0'))) != s('type.list.list'(X4),'const.list.APPEND_2'(s('type.list.list'(X4),X5),s('type.list.list'(X4),X7))) | s('type.list.list'(X4),'const.list.CONS_2'(s(X4,X6),s('type.list.list'(X4),'const.list.NIL_0'))) = s('type.list.list'(X4),'const.list.APPEND_2'(s('type.list.list'(X4),'const.list.NIL_0'),s('type.list.list'(X4),X5))) | s('type.list.list'(X4),'const.list.NIL_0') = s('type.list.list'(X4),'const.list.APPEND_2'(s('type.list.list'(X4),'const.list.NIL_0'),s('type.list.list'(X4),X5)))) )),
  inference(superposition,[],[f397,f359])).
fof(f5261,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.NIL_0'))) != s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),X3))) | s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.NIL_0'))) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),'const.list.NIL_0'))) | s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),'const.list.NIL_0')))) )),
  inference(superposition,[],[f397,f358])).
fof(f5260,plain,(
  ( ! [X70,X68,X66,X72,X71,X69,X67,X73] : (s('type.list.list'(X66),'const.list.APPEND_2'(s('type.list.list'(X66),X72),s('type.list.list'(X66),X73))) != s('type.list.list'(X66),'const.list.CONS_2'(s(X66,happ(s(fun(X68,X66),X69),s(X68,happ(s(fun(X67,X68),X70),s(X67,X71))))),s('type.list.list'(X66),'const.list.NIL_0'))) | s('type.list.list'(X66),X72) = s('type.list.list'(X66),'const.list.CONS_2'(s(X66,happ(s(fun(X67,X66),'_dst_x0x1_2'(s(fun(X68,X66),X69),s(fun(X67,X68),X70))),s(X67,X71))),s('type.list.list'(X66),'const.list.NIL_0'))) | s('type.list.list'(X66),'const.list.NIL_0') = s('type.list.list'(X66),X72)) )),
  inference(superposition,[],[f397,f437])).
fof(f5259,plain,(
  ( ! [X61,X59,X64,X62,X60,X58,X65,X63] : (s('type.list.list'(X58),'const.list.APPEND_2'(s('type.list.list'(X58),X64),s('type.list.list'(X58),X65))) != s('type.list.list'(X58),'const.list.CONS_2'(s(X58,happ(s(fun(X61,X58),'_dst_x0x1_2'(s(fun(X59,X58),X60),s(fun(X61,X59),X62))),s(X61,X63))),s('type.list.list'(X58),'const.list.NIL_0'))) | s('type.list.list'(X58),X64) = s('type.list.list'(X58),'const.list.CONS_2'(s(X58,happ(s(fun(X59,X58),X60),s(X59,happ(s(fun(X61,X59),X62),s(X61,X63))))),s('type.list.list'(X58),'const.list.NIL_0'))) | s('type.list.list'(X58),'const.list.NIL_0') = s('type.list.list'(X58),X64)) )),
  inference(superposition,[],[f397,f437])).
fof(f5285,plain,(
  ( ! [X28,X29,X27] : (s('type.list.list'(bool),X28) = s('type.list.list'(bool),'const.list.CONS_2'(s(bool,'T_0'),s('type.list.list'(bool),'const.list.NIL_0'))) | s('type.list.list'(bool),'const.list.CONS_2'(s(bool,X27),s('type.list.list'(bool),'const.list.NIL_0'))) != s('type.list.list'(bool),'const.list.APPEND_2'(s('type.list.list'(bool),X28),s('type.list.list'(bool),X29))) | s('type.list.list'(bool),'const.list.NIL_0') = s('type.list.list'(bool),X28) | s(bool,'F_0') = s(bool,X27)) )),
  inference(forward_demodulation,[],[f5252,f296])).
fof(f5252,plain,(
  ( ! [X28,X26,X29,X27] : (s('type.list.list'(bool),'const.list.CONS_2'(s(bool,X27),s('type.list.list'(bool),'const.list.NIL_0'))) != s('type.list.list'(bool),'const.list.APPEND_2'(s('type.list.list'(bool),X28),s('type.list.list'(bool),X29))) | s('type.list.list'(bool),X28) = s('type.list.list'(bool),'const.list.CONS_2'(s(bool,'const.bool.BOUNDED_1'(s(bool,X26))),s('type.list.list'(bool),'const.list.NIL_0'))) | s('type.list.list'(bool),'const.list.NIL_0') = s('type.list.list'(bool),X28) | s(bool,'F_0') = s(bool,X27)) )),
  inference(superposition,[],[f397,f787])).
fof(f5278,plain,(
  ( ! [X6,X5,X3] : (s('type.list.list'(bool),'const.list.CONS_2'(s(bool,'T_0'),s('type.list.list'(bool),'const.list.NIL_0'))) != s('type.list.list'(bool),'const.list.APPEND_2'(s('type.list.list'(bool),X5),s('type.list.list'(bool),X6))) | s('type.list.list'(bool),X5) = s('type.list.list'(bool),'const.list.CONS_2'(s(bool,X3),s('type.list.list'(bool),'const.list.NIL_0'))) | s('type.list.list'(bool),'const.list.NIL_0') = s('type.list.list'(bool),X5) | s(bool,'F_0') = s(bool,X3)) )),
  inference(forward_demodulation,[],[f5245,f296])).
fof(f5245,plain,(
  ( ! [X6,X4,X5,X3] : (s('type.list.list'(bool),'const.list.APPEND_2'(s('type.list.list'(bool),X5),s('type.list.list'(bool),X6))) != s('type.list.list'(bool),'const.list.CONS_2'(s(bool,'const.bool.BOUNDED_1'(s(bool,X4))),s('type.list.list'(bool),'const.list.NIL_0'))) | s('type.list.list'(bool),X5) = s('type.list.list'(bool),'const.list.CONS_2'(s(bool,X3),s('type.list.list'(bool),'const.list.NIL_0'))) | s('type.list.list'(bool),'const.list.NIL_0') = s('type.list.list'(bool),X5) | s(bool,'F_0') = s(bool,X3)) )),
  inference(superposition,[],[f397,f787])).
fof(f5244,plain,(
  ( ! [X2,X0,X1] : (s('type.list.list'(bool),'const.list.CONS_2'(s(bool,'F_0'),s('type.list.list'(bool),'const.list.NIL_0'))) != s('type.list.list'(bool),'const.list.APPEND_2'(s('type.list.list'(bool),X1),s('type.list.list'(bool),X2))) | s('type.list.list'(bool),X1) = s('type.list.list'(bool),'const.list.CONS_2'(s(bool,X0),s('type.list.list'(bool),'const.list.NIL_0'))) | s('type.list.list'(bool),'const.list.NIL_0') = s('type.list.list'(bool),X1) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f397,f299])).
fof(f5182,plain,(
  ( ! [X6,X4,X7,X5] : (s(X4,X5) = s(X4,X6) | p(s(bool,'const.bool.IN_2'(s(X4,X5),s(fun(X4,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X4),X7)))))) | s(bool,'F_0') = s(bool,'const.bool.IN_2'(s(X4,X5),s(fun(X4,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X4),'const.list.CONS_2'(s(X4,X6),s('type.list.list'(X4),X7)))))))) )),
  inference(subsumption_resolution,[],[f5181,f289])).
fof(f5181,plain,(
  ( ! [X6,X4,X7,X5] : (~p(s(bool,'T_0')) | s(X4,X5) = s(X4,X6) | p(s(bool,'const.bool.IN_2'(s(X4,X5),s(fun(X4,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X4),X7)))))) | s(bool,'F_0') = s(bool,'const.bool.IN_2'(s(X4,X5),s(fun(X4,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X4),'const.list.CONS_2'(s(X4,X6),s('type.list.list'(X4),X7)))))))) )),
  inference(forward_demodulation,[],[f5134,f296])).
fof(f5134,plain,(
  ( ! [X6,X4,X8,X7,X5] : (~p(s(bool,'const.bool.BOUNDED_1'(s(bool,X8)))) | s(X4,X5) = s(X4,X6) | p(s(bool,'const.bool.IN_2'(s(X4,X5),s(fun(X4,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X4),X7)))))) | s(bool,'F_0') = s(bool,'const.bool.IN_2'(s(X4,X5),s(fun(X4,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X4),'const.list.CONS_2'(s(X4,X6),s('type.list.list'(X4),X7)))))))) )),
  inference(superposition,[],[f394,f787])).
fof(f5132,plain,(
  ( ! [X39,X37,X35,X33,X38,X36,X34,X40] : (~p(s(bool,'const.bool.IN_2'(s(X33,X39),s(fun(X33,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X33),'const.list.CONS_2'(s(X33,X40),s('type.list.list'(X33),happ(s(fun(X35,'type.list.list'(X33)),X36),s(X35,happ(s(fun(X34,X35),X37),s(X34,X38)))))))))))) | s(X33,X39) = s(X33,X40) | p(s(bool,'const.bool.IN_2'(s(X33,X39),s(fun(X33,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X33),happ(s(fun(X34,'type.list.list'(X33)),'_dst_x0x1_2'(s(fun(X35,'type.list.list'(X33)),X36),s(fun(X34,X35),X37))),s(X34,X38))))))))) )),
  inference(superposition,[],[f394,f437])).
fof(f5131,plain,(
  ( ! [X30,X28,X26,X31,X29,X27,X25,X32] : (~p(s(bool,'const.bool.IN_2'(s(X25,X31),s(fun(X25,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X25),'const.list.CONS_2'(s(X25,X32),s('type.list.list'(X25),happ(s(fun(X28,'type.list.list'(X25)),'_dst_x0x1_2'(s(fun(X26,'type.list.list'(X25)),X27),s(fun(X28,X26),X29))),s(X28,X30)))))))))) | s(X25,X31) = s(X25,X32) | p(s(bool,'const.bool.IN_2'(s(X25,X31),s(fun(X25,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X25),happ(s(fun(X26,'type.list.list'(X25)),X27),s(X26,happ(s(fun(X28,X26),X29),s(X28,X30))))))))))) )),
  inference(superposition,[],[f394,f437])).
fof(f5125,plain,(
  ( ! [X70,X68,X66,X72,X71,X69,X67,X73] : (~p(s(bool,'const.bool.IN_2'(s(X66,X72),s(fun(X66,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X66),'const.list.CONS_2'(s(X66,happ(s(fun(X68,X66),X69),s(X68,happ(s(fun(X67,X68),X70),s(X67,X71))))),s('type.list.list'(X66),X73)))))))) | s(X66,X72) = s(X66,happ(s(fun(X67,X66),'_dst_x0x1_2'(s(fun(X68,X66),X69),s(fun(X67,X68),X70))),s(X67,X71))) | p(s(bool,'const.bool.IN_2'(s(X66,X72),s(fun(X66,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X66),X73))))))) )),
  inference(superposition,[],[f394,f437])).
fof(f5124,plain,(
  ( ! [X61,X59,X64,X62,X60,X58,X65,X63] : (~p(s(bool,'const.bool.IN_2'(s(X58,X64),s(fun(X58,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X58),'const.list.CONS_2'(s(X58,happ(s(fun(X61,X58),'_dst_x0x1_2'(s(fun(X59,X58),X60),s(fun(X61,X59),X62))),s(X61,X63))),s('type.list.list'(X58),X65)))))))) | s(X58,X64) = s(X58,happ(s(fun(X59,X58),X60),s(X59,happ(s(fun(X61,X59),X62),s(X61,X63))))) | p(s(bool,'const.bool.IN_2'(s(X58,X64),s(fun(X58,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X58),X65))))))) )),
  inference(superposition,[],[f394,f437])).
fof(f5169,plain,(
  ( ! [X28,X29,X27] : (s(bool,'T_0') = s(bool,X28) | ~p(s(bool,'const.bool.IN_2'(s(bool,X28),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),'const.list.CONS_2'(s(bool,X27),s('type.list.list'(bool),X29)))))))) | p(s(bool,'const.bool.IN_2'(s(bool,X28),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),X29)))))) | s(bool,'F_0') = s(bool,X27)) )),
  inference(forward_demodulation,[],[f5117,f296])).
fof(f5117,plain,(
  ( ! [X28,X26,X29,X27] : (~p(s(bool,'const.bool.IN_2'(s(bool,X28),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),'const.list.CONS_2'(s(bool,X27),s('type.list.list'(bool),X29)))))))) | s(bool,X28) = s(bool,'const.bool.BOUNDED_1'(s(bool,X26))) | p(s(bool,'const.bool.IN_2'(s(bool,X28),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),X29)))))) | s(bool,'F_0') = s(bool,X27)) )),
  inference(superposition,[],[f394,f787])).
fof(f5110,plain,(
  ( ! [X8,X7,X9] : (~p(s(bool,'const.bool.IN_2'(s(bool,X8),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),'const.list.CONS_2'(s(bool,X7),s('type.list.list'(bool),X9)))))))) | s(bool,'F_0') = s(bool,X8) | p(s(bool,'const.bool.IN_2'(s(bool,X8),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),X9)))))) | s(bool,'T_0') = s(bool,X7)) )),
  inference(superposition,[],[f394,f299])).
fof(f5162,plain,(
  ( ! [X6,X5,X3] : (~p(s(bool,'const.bool.IN_2'(s(bool,X5),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),'const.list.CONS_2'(s(bool,'T_0'),s('type.list.list'(bool),X6)))))))) | s(bool,X3) = s(bool,X5) | p(s(bool,'const.bool.IN_2'(s(bool,X5),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),X6)))))) | s(bool,'F_0') = s(bool,X3)) )),
  inference(forward_demodulation,[],[f5109,f296])).
fof(f5109,plain,(
  ( ! [X6,X4,X5,X3] : (~p(s(bool,'const.bool.IN_2'(s(bool,X5),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),'const.list.CONS_2'(s(bool,'const.bool.BOUNDED_1'(s(bool,X4))),s('type.list.list'(bool),X6)))))))) | s(bool,X3) = s(bool,X5) | p(s(bool,'const.bool.IN_2'(s(bool,X5),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),X6)))))) | s(bool,'F_0') = s(bool,X3)) )),
  inference(superposition,[],[f394,f787])).
fof(f5108,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.bool.IN_2'(s(bool,X1),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),'const.list.CONS_2'(s(bool,'F_0'),s('type.list.list'(bool),X2)))))))) | s(bool,X0) = s(bool,X1) | p(s(bool,'const.bool.IN_2'(s(bool,X1),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),X2)))))) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f394,f299])).
fof(f5107,plain,(
  ( ! [X70,X68,X66,X72,X71,X69,X67,X73] : (~p(s(bool,'const.bool.IN_2'(s(X66,happ(s(fun(X68,X66),X69),s(X68,happ(s(fun(X67,X68),X70),s(X67,X71))))),s(fun(X66,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X66),'const.list.CONS_2'(s(X66,X72),s('type.list.list'(X66),X73)))))))) | s(X66,X72) = s(X66,happ(s(fun(X67,X66),'_dst_x0x1_2'(s(fun(X68,X66),X69),s(fun(X67,X68),X70))),s(X67,X71))) | p(s(bool,'const.bool.IN_2'(s(X66,happ(s(fun(X67,X66),'_dst_x0x1_2'(s(fun(X68,X66),X69),s(fun(X67,X68),X70))),s(X67,X71))),s(fun(X66,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X66),X73))))))) )),
  inference(superposition,[],[f394,f437])).
fof(f5106,plain,(
  ( ! [X61,X59,X64,X62,X60,X58,X65,X63] : (~p(s(bool,'const.bool.IN_2'(s(X58,happ(s(fun(X61,X58),'_dst_x0x1_2'(s(fun(X59,X58),X60),s(fun(X61,X59),X62))),s(X61,X63))),s(fun(X58,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X58),'const.list.CONS_2'(s(X58,X64),s('type.list.list'(X58),X65)))))))) | s(X58,X64) = s(X58,happ(s(fun(X59,X58),X60),s(X59,happ(s(fun(X61,X59),X62),s(X61,X63))))) | p(s(bool,'const.bool.IN_2'(s(X58,happ(s(fun(X59,X58),X60),s(X59,happ(s(fun(X61,X59),X62),s(X61,X63))))),s(fun(X58,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X58),X65))))))) )),
  inference(superposition,[],[f394,f437])).
fof(f5149,plain,(
  ( ! [X28,X29,X27] : (p(s(bool,'const.bool.IN_2'(s(bool,'T_0'),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),X29)))))) | s(bool,'T_0') = s(bool,X28) | ~p(s(bool,'const.bool.IN_2'(s(bool,X27),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),'const.list.CONS_2'(s(bool,X28),s('type.list.list'(bool),X29)))))))) | s(bool,'F_0') = s(bool,X27)) )),
  inference(forward_demodulation,[],[f5148,f296])).
fof(f5148,plain,(
  ( ! [X28,X26,X29,X27] : (s(bool,'T_0') = s(bool,X28) | ~p(s(bool,'const.bool.IN_2'(s(bool,X27),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),'const.list.CONS_2'(s(bool,X28),s('type.list.list'(bool),X29)))))))) | p(s(bool,'const.bool.IN_2'(s(bool,'const.bool.BOUNDED_1'(s(bool,X26))),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),X29)))))) | s(bool,'F_0') = s(bool,X27)) )),
  inference(forward_demodulation,[],[f5099,f296])).
fof(f5099,plain,(
  ( ! [X28,X26,X29,X27] : (~p(s(bool,'const.bool.IN_2'(s(bool,X27),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),'const.list.CONS_2'(s(bool,X28),s('type.list.list'(bool),X29)))))))) | s(bool,X28) = s(bool,'const.bool.BOUNDED_1'(s(bool,X26))) | p(s(bool,'const.bool.IN_2'(s(bool,'const.bool.BOUNDED_1'(s(bool,X26))),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),X29)))))) | s(bool,'F_0') = s(bool,X27)) )),
  inference(superposition,[],[f394,f787])).
fof(f5092,plain,(
  ( ! [X8,X7,X9] : (~p(s(bool,'const.bool.IN_2'(s(bool,X7),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),'const.list.CONS_2'(s(bool,X8),s('type.list.list'(bool),X9)))))))) | s(bool,'F_0') = s(bool,X8) | p(s(bool,'const.bool.IN_2'(s(bool,'F_0'),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),X9)))))) | s(bool,'T_0') = s(bool,X7)) )),
  inference(superposition,[],[f394,f299])).
fof(f5135,plain,(
  ( ! [X6,X5,X3] : (~p(s(bool,'const.bool.IN_2'(s(bool,'T_0'),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),'const.list.CONS_2'(s(bool,X5),s('type.list.list'(bool),X6)))))))) | s(bool,X3) = s(bool,X5) | p(s(bool,'const.bool.IN_2'(s(bool,X3),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),X6)))))) | s(bool,'F_0') = s(bool,X3)) )),
  inference(forward_demodulation,[],[f5091,f296])).
fof(f5091,plain,(
  ( ! [X6,X4,X5,X3] : (~p(s(bool,'const.bool.IN_2'(s(bool,'const.bool.BOUNDED_1'(s(bool,X4))),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),'const.list.CONS_2'(s(bool,X5),s('type.list.list'(bool),X6)))))))) | s(bool,X3) = s(bool,X5) | p(s(bool,'const.bool.IN_2'(s(bool,X3),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),X6)))))) | s(bool,'F_0') = s(bool,X3)) )),
  inference(superposition,[],[f394,f787])).
fof(f5090,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.bool.IN_2'(s(bool,'F_0'),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),'const.list.CONS_2'(s(bool,X1),s('type.list.list'(bool),X2)))))))) | s(bool,X0) = s(bool,X1) | p(s(bool,'const.bool.IN_2'(s(bool,X0),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),X2)))))) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f394,f299])).
fof(f5039,plain,(
  ( ! [X6,X10,X8,X7,X9] : (s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X10),s('type.list.list'(X6),'const.list.NIL_0'))) != s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X7),s('type.list.list'(X6),'const.list.APPEND_2'(s('type.list.list'(X6),X8),s('type.list.list'(X6),X9))))) | s('type.list.list'(X6),'const.list.NIL_0') = s('type.list.list'(X6),X9) | s('type.list.list'(X6),'const.list.NIL_0') = s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X7),s('type.list.list'(X6),X8)))) )),
  inference(superposition,[],[f398,f391])).
fof(f5036,plain,(
  ( ! [X39,X37,X35,X33,X38,X36,X34,X40] : (s('type.list.list'(X33),'const.list.CONS_2'(s(X33,X39),s('type.list.list'(X33),'const.list.NIL_0'))) != s('type.list.list'(X33),'const.list.APPEND_2'(s('type.list.list'(X33),X40),s('type.list.list'(X33),happ(s(fun(X35,'type.list.list'(X33)),X36),s(X35,happ(s(fun(X34,X35),X37),s(X34,X38))))))) | s('type.list.list'(X33),'const.list.NIL_0') = s('type.list.list'(X33),happ(s(fun(X34,'type.list.list'(X33)),'_dst_x0x1_2'(s(fun(X35,'type.list.list'(X33)),X36),s(fun(X34,X35),X37))),s(X34,X38))) | s('type.list.list'(X33),'const.list.NIL_0') = s('type.list.list'(X33),X40)) )),
  inference(superposition,[],[f398,f437])).
fof(f5035,plain,(
  ( ! [X30,X28,X26,X31,X29,X27,X25,X32] : (s('type.list.list'(X25),'const.list.CONS_2'(s(X25,X31),s('type.list.list'(X25),'const.list.NIL_0'))) != s('type.list.list'(X25),'const.list.APPEND_2'(s('type.list.list'(X25),X32),s('type.list.list'(X25),happ(s(fun(X28,'type.list.list'(X25)),'_dst_x0x1_2'(s(fun(X26,'type.list.list'(X25)),X27),s(fun(X28,X26),X29))),s(X28,X30))))) | s('type.list.list'(X25),'const.list.NIL_0') = s('type.list.list'(X25),happ(s(fun(X26,'type.list.list'(X25)),X27),s(X26,happ(s(fun(X28,X26),X29),s(X28,X30))))) | s('type.list.list'(X25),'const.list.NIL_0') = s('type.list.list'(X25),X32)) )),
  inference(superposition,[],[f398,f437])).
fof(f5034,plain,(
  ( ! [X24,X23,X21,X19,X22,X20] : (s('type.list.list'(X19),'const.list.CONS_2'(s(X19,X23),s('type.list.list'(X19),'const.list.NIL_0'))) != s('type.list.list'(X19),'const.list.APPEND_2'(s('type.list.list'(X19),X24),s('type.list.list'(X19),happ(s(fun('type.num.num','type.list.list'(X19)),X21),s('type.num.num',X22))))) | s('type.list.list'(X19),'const.list.NIL_0') = s('type.list.list'(X19),'const.ind_type.FCONS_3'(s('type.list.list'(X19),X20),s(fun('type.num.num','type.list.list'(X19)),X21),s('type.num.num','const.num.SUC_1'(s('type.num.num',X22))))) | s('type.list.list'(X19),'const.list.NIL_0') = s('type.list.list'(X19),X24)) )),
  inference(superposition,[],[f398,f390])).
fof(f5033,plain,(
  ( ! [X14,X17,X15,X18,X16] : (s('type.list.list'(X14),'const.list.CONS_2'(s(X14,X17),s('type.list.list'(X14),'const.list.NIL_0'))) != s('type.list.list'(X14),'const.list.APPEND_2'(s('type.list.list'(X14),X18),s('type.list.list'(X14),X15))) | s('type.list.list'(X14),'const.list.NIL_0') = s('type.list.list'(X14),'const.ind_type.FCONS_3'(s('type.list.list'(X14),X15),s(fun('type.num.num','type.list.list'(X14)),X16),s('type.num.num','const.num.|48|_0'))) | s('type.list.list'(X14),'const.list.NIL_0') = s('type.list.list'(X14),X18)) )),
  inference(superposition,[],[f398,f368])).
fof(f5031,plain,(
  ( ! [X6,X4,X7,X5] : (s('type.list.list'(X4),'const.list.CONS_2'(s(X4,X6),s('type.list.list'(X4),'const.list.NIL_0'))) != s('type.list.list'(X4),'const.list.APPEND_2'(s('type.list.list'(X4),X7),s('type.list.list'(X4),X5))) | s('type.list.list'(X4),'const.list.NIL_0') = s('type.list.list'(X4),'const.list.APPEND_2'(s('type.list.list'(X4),'const.list.NIL_0'),s('type.list.list'(X4),X5))) | s('type.list.list'(X4),'const.list.NIL_0') = s('type.list.list'(X4),X7)) )),
  inference(superposition,[],[f398,f359])).
fof(f5030,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.NIL_0'))) != s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X3),s('type.list.list'(X0),X1))) | s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),'const.list.NIL_0'))) | s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X3)) )),
  inference(superposition,[],[f398,f358])).
fof(f5029,plain,(
  ( ! [X39,X37,X35,X33,X38,X36,X34,X40] : (s('type.list.list'(X33),'const.list.CONS_2'(s(X33,X39),s('type.list.list'(X33),'const.list.NIL_0'))) != s('type.list.list'(X33),'const.list.APPEND_2'(s('type.list.list'(X33),happ(s(fun(X35,'type.list.list'(X33)),X36),s(X35,happ(s(fun(X34,X35),X37),s(X34,X38))))),s('type.list.list'(X33),X40))) | s('type.list.list'(X33),'const.list.NIL_0') = s('type.list.list'(X33),X40) | s('type.list.list'(X33),'const.list.NIL_0') = s('type.list.list'(X33),happ(s(fun(X34,'type.list.list'(X33)),'_dst_x0x1_2'(s(fun(X35,'type.list.list'(X33)),X36),s(fun(X34,X35),X37))),s(X34,X38)))) )),
  inference(superposition,[],[f398,f437])).
fof(f5028,plain,(
  ( ! [X30,X28,X26,X31,X29,X27,X25,X32] : (s('type.list.list'(X25),'const.list.CONS_2'(s(X25,X31),s('type.list.list'(X25),'const.list.NIL_0'))) != s('type.list.list'(X25),'const.list.APPEND_2'(s('type.list.list'(X25),happ(s(fun(X28,'type.list.list'(X25)),'_dst_x0x1_2'(s(fun(X26,'type.list.list'(X25)),X27),s(fun(X28,X26),X29))),s(X28,X30))),s('type.list.list'(X25),X32))) | s('type.list.list'(X25),'const.list.NIL_0') = s('type.list.list'(X25),X32) | s('type.list.list'(X25),'const.list.NIL_0') = s('type.list.list'(X25),happ(s(fun(X26,'type.list.list'(X25)),X27),s(X26,happ(s(fun(X28,X26),X29),s(X28,X30)))))) )),
  inference(superposition,[],[f398,f437])).
fof(f5027,plain,(
  ( ! [X24,X23,X21,X19,X22,X20] : (s('type.list.list'(X19),'const.list.CONS_2'(s(X19,X23),s('type.list.list'(X19),'const.list.NIL_0'))) != s('type.list.list'(X19),'const.list.APPEND_2'(s('type.list.list'(X19),happ(s(fun('type.num.num','type.list.list'(X19)),X21),s('type.num.num',X22))),s('type.list.list'(X19),X24))) | s('type.list.list'(X19),'const.list.NIL_0') = s('type.list.list'(X19),X24) | s('type.list.list'(X19),'const.list.NIL_0') = s('type.list.list'(X19),'const.ind_type.FCONS_3'(s('type.list.list'(X19),X20),s(fun('type.num.num','type.list.list'(X19)),X21),s('type.num.num','const.num.SUC_1'(s('type.num.num',X22)))))) )),
  inference(superposition,[],[f398,f390])).
fof(f5026,plain,(
  ( ! [X14,X17,X15,X18,X16] : (s('type.list.list'(X14),'const.list.CONS_2'(s(X14,X17),s('type.list.list'(X14),'const.list.NIL_0'))) != s('type.list.list'(X14),'const.list.APPEND_2'(s('type.list.list'(X14),X15),s('type.list.list'(X14),X18))) | s('type.list.list'(X14),'const.list.NIL_0') = s('type.list.list'(X14),X18) | s('type.list.list'(X14),'const.list.NIL_0') = s('type.list.list'(X14),'const.ind_type.FCONS_3'(s('type.list.list'(X14),X15),s(fun('type.num.num','type.list.list'(X14)),X16),s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f398,f368])).
fof(f5024,plain,(
  ( ! [X6,X4,X7,X5] : (s('type.list.list'(X4),'const.list.CONS_2'(s(X4,X6),s('type.list.list'(X4),'const.list.NIL_0'))) != s('type.list.list'(X4),'const.list.APPEND_2'(s('type.list.list'(X4),X5),s('type.list.list'(X4),X7))) | s('type.list.list'(X4),'const.list.NIL_0') = s('type.list.list'(X4),X7) | s('type.list.list'(X4),'const.list.NIL_0') = s('type.list.list'(X4),'const.list.APPEND_2'(s('type.list.list'(X4),'const.list.NIL_0'),s('type.list.list'(X4),X5)))) )),
  inference(superposition,[],[f398,f359])).
fof(f5023,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.NIL_0'))) != s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),X3))) | s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X3) | s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),'const.list.NIL_0')))) )),
  inference(superposition,[],[f398,f358])).
fof(f4884,plain,(
  ( ! [X14,X12,X10,X13,X11,X9] : (~p(s(bool,happ(s(fun(X10,bool),X11),s(X10,happ(s(fun(X9,X10),X12),s(X9,sK9(X13,'_dst_x0x1_2'(s(fun(X10,bool),X11),s(fun(X9,X10),X12)),X9))))))) | ~p(s(bool,happ(s(fun(X9,bool),X13),s(X9,X14)))) | p(s(bool,happ(s(fun(X9,bool),'_dst_x0x1_2'(s(fun(X10,bool),X11),s(fun(X9,X10),X12))),s(X9,sK10(X13,'_dst_x0x1_2'(s(fun(X10,bool),X11),s(fun(X9,X10),X12)),X9)))))) )),
  inference(superposition,[],[f372,f437])).
fof(f4889,plain,(
  ( ! [X6,X4,X8,X5] : (~p(s(bool,happ(s(fun(X4,bool),X6),s(X4,X8)))) | p(s(bool,happ(s(fun(X4,bool),X5),s(X4,sK10(X6,X5,X4))))) | s(bool,'F_0') = s(bool,happ(s(fun(X4,bool),X5),s(X4,sK9(X6,X5,X4))))) )),
  inference(subsumption_resolution,[],[f4888,f289])).
fof(f4888,plain,(
  ( ! [X6,X4,X8,X5] : (~p(s(bool,'T_0')) | ~p(s(bool,happ(s(fun(X4,bool),X6),s(X4,X8)))) | p(s(bool,happ(s(fun(X4,bool),X5),s(X4,sK10(X6,X5,X4))))) | s(bool,'F_0') = s(bool,happ(s(fun(X4,bool),X5),s(X4,sK9(X6,X5,X4))))) )),
  inference(forward_demodulation,[],[f4883,f296])).
fof(f4883,plain,(
  ( ! [X6,X4,X8,X7,X5] : (~p(s(bool,'const.bool.BOUNDED_1'(s(bool,X7)))) | ~p(s(bool,happ(s(fun(X4,bool),X6),s(X4,X8)))) | p(s(bool,happ(s(fun(X4,bool),X5),s(X4,sK10(X6,X5,X4))))) | s(bool,'F_0') = s(bool,happ(s(fun(X4,bool),X5),s(X4,sK9(X6,X5,X4))))) )),
  inference(superposition,[],[f372,f787])).
fof(f4887,plain,(
  ( ! [X6,X4,X3] : (~p(s(bool,happ(s(fun(bool,bool),X4),s(bool,'T_0')))) | ~p(s(bool,happ(s(fun(bool,bool),X3),s(bool,X6)))) | p(s(bool,happ(s(fun(bool,bool),X4),s(bool,sK10(X3,X4,bool))))) | s(bool,'F_0') = s(bool,sK9(X3,X4,bool))) )),
  inference(forward_demodulation,[],[f4881,f296])).
fof(f4881,plain,(
  ( ! [X6,X4,X5,X3] : (~p(s(bool,happ(s(fun(bool,bool),X4),s(bool,'const.bool.BOUNDED_1'(s(bool,X5)))))) | ~p(s(bool,happ(s(fun(bool,bool),X3),s(bool,X6)))) | p(s(bool,happ(s(fun(bool,bool),X4),s(bool,sK10(X3,X4,bool))))) | s(bool,'F_0') = s(bool,sK9(X3,X4,bool))) )),
  inference(superposition,[],[f372,f787])).
fof(f4880,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,happ(s(fun(bool,bool),X1),s(bool,'F_0')))) | ~p(s(bool,happ(s(fun(bool,bool),X0),s(bool,X2)))) | p(s(bool,happ(s(fun(bool,bool),X1),s(bool,sK10(X0,X1,bool))))) | s(bool,'T_0') = s(bool,sK9(X0,X1,bool))) )),
  inference(superposition,[],[f372,f299])).
fof(f4879,plain,(
  ( ! [X26,X24,X23,X21,X19,X25,X22,X20] : (~p(s(bool,happ(s(fun(X19,bool),happ(s(fun(X21,fun(X19,bool)),X22),s(X21,happ(s(fun(X20,X21),X23),s(X20,X24))))),s(X19,sK9(X25,happ(s(fun(X20,fun(X19,bool)),'_dst_x0x1_2'(s(fun(X21,fun(X19,bool)),X22),s(fun(X20,X21),X23))),s(X20,X24)),X19))))) | ~p(s(bool,happ(s(fun(X19,bool),X25),s(X19,X26)))) | p(s(bool,happ(s(fun(X19,bool),happ(s(fun(X20,fun(X19,bool)),'_dst_x0x1_2'(s(fun(X21,fun(X19,bool)),X22),s(fun(X20,X21),X23))),s(X20,X24))),s(X19,sK10(X25,happ(s(fun(X20,fun(X19,bool)),'_dst_x0x1_2'(s(fun(X21,fun(X19,bool)),X22),s(fun(X20,X21),X23))),s(X20,X24)),X19)))))) )),
  inference(superposition,[],[f372,f437])).
fof(f4878,plain,(
  ( ! [X14,X12,X17,X15,X13,X11,X18,X16] : (~p(s(bool,happ(s(fun(X11,bool),happ(s(fun(X14,fun(X11,bool)),'_dst_x0x1_2'(s(fun(X12,fun(X11,bool)),X13),s(fun(X14,X12),X15))),s(X14,X16))),s(X11,sK9(X17,happ(s(fun(X12,fun(X11,bool)),X13),s(X12,happ(s(fun(X14,X12),X15),s(X14,X16)))),X11))))) | ~p(s(bool,happ(s(fun(X11,bool),X17),s(X11,X18)))) | p(s(bool,happ(s(fun(X11,bool),happ(s(fun(X12,fun(X11,bool)),X13),s(X12,happ(s(fun(X14,X12),X15),s(X14,X16))))),s(X11,sK10(X17,happ(s(fun(X12,fun(X11,bool)),X13),s(X12,happ(s(fun(X14,X12),X15),s(X14,X16)))),X11)))))) )),
  inference(superposition,[],[f372,f437])).
fof(f4886,plain,(
  ( ! [X6,X10,X8,X7,X5,X9] : (p(s(bool,happ(s(fun(X5,bool),happ(s(fun('type.num.num',fun(X5,bool)),X7),s('type.num.num',X8))),s(X5,sK10(X9,'const.ind_type.FCONS_3'(s(fun(X5,bool),X6),s(fun('type.num.num',fun(X5,bool)),X7),s('type.num.num','const.num.SUC_1'(s('type.num.num',X8)))),X5))))) | ~p(s(bool,happ(s(fun(X5,bool),happ(s(fun('type.num.num',fun(X5,bool)),X7),s('type.num.num',X8))),s(X5,sK9(X9,'const.ind_type.FCONS_3'(s(fun(X5,bool),X6),s(fun('type.num.num',fun(X5,bool)),X7),s('type.num.num','const.num.SUC_1'(s('type.num.num',X8)))),X5))))) | ~p(s(bool,happ(s(fun(X5,bool),X9),s(X5,X10))))) )),
  inference(forward_demodulation,[],[f4877,f390])).
fof(f4877,plain,(
  ( ! [X6,X10,X8,X7,X5,X9] : (~p(s(bool,happ(s(fun(X5,bool),happ(s(fun('type.num.num',fun(X5,bool)),X7),s('type.num.num',X8))),s(X5,sK9(X9,'const.ind_type.FCONS_3'(s(fun(X5,bool),X6),s(fun('type.num.num',fun(X5,bool)),X7),s('type.num.num','const.num.SUC_1'(s('type.num.num',X8)))),X5))))) | ~p(s(bool,happ(s(fun(X5,bool),X9),s(X5,X10)))) | p(s(bool,happ(s(fun(X5,bool),'const.ind_type.FCONS_3'(s(fun(X5,bool),X6),s(fun('type.num.num',fun(X5,bool)),X7),s('type.num.num','const.num.SUC_1'(s('type.num.num',X8))))),s(X5,sK10(X9,'const.ind_type.FCONS_3'(s(fun(X5,bool),X6),s(fun('type.num.num',fun(X5,bool)),X7),s('type.num.num','const.num.SUC_1'(s('type.num.num',X8)))),X5)))))) )),
  inference(superposition,[],[f372,f390])).
fof(f4885,plain,(
  ( ! [X4,X2,X0,X3,X1] : (p(s(bool,happ(s(fun(X0,bool),X1),s(X0,sK10(X3,'const.ind_type.FCONS_3'(s(fun(X0,bool),X1),s(fun('type.num.num',fun(X0,bool)),X2),s('type.num.num','const.num.|48|_0')),X0))))) | ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,sK9(X3,'const.ind_type.FCONS_3'(s(fun(X0,bool),X1),s(fun('type.num.num',fun(X0,bool)),X2),s('type.num.num','const.num.|48|_0')),X0))))) | ~p(s(bool,happ(s(fun(X0,bool),X3),s(X0,X4))))) )),
  inference(forward_demodulation,[],[f4876,f368])).
fof(f4876,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,sK9(X3,'const.ind_type.FCONS_3'(s(fun(X0,bool),X1),s(fun('type.num.num',fun(X0,bool)),X2),s('type.num.num','const.num.|48|_0')),X0))))) | ~p(s(bool,happ(s(fun(X0,bool),X3),s(X0,X4)))) | p(s(bool,happ(s(fun(X0,bool),'const.ind_type.FCONS_3'(s(fun(X0,bool),X1),s(fun('type.num.num',fun(X0,bool)),X2),s('type.num.num','const.num.|48|_0'))),s(X0,sK10(X3,'const.ind_type.FCONS_3'(s(fun(X0,bool),X1),s(fun('type.num.num',fun(X0,bool)),X2),s('type.num.num','const.num.|48|_0')),X0)))))) )),
  inference(superposition,[],[f372,f368])).
fof(f4858,plain,(
  ( ! [X6,X4,X8,X5] : (p(s(bool,happ(s(fun(X4,bool),X8),s(X4,sK10(X5,X8,X4))))) | p(s(bool,happ(s(fun(X4,bool),X5),s(X4,sK9(X5,X8,X4))))) | s(bool,'F_0') = s(bool,happ(s(fun(X4,bool),X5),s(X4,X6)))) )),
  inference(subsumption_resolution,[],[f4857,f289])).
fof(f4857,plain,(
  ( ! [X6,X4,X8,X5] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun(X4,bool),X8),s(X4,sK10(X5,X8,X4))))) | p(s(bool,happ(s(fun(X4,bool),X5),s(X4,sK9(X5,X8,X4))))) | s(bool,'F_0') = s(bool,happ(s(fun(X4,bool),X5),s(X4,X6)))) )),
  inference(forward_demodulation,[],[f4852,f296])).
fof(f4852,plain,(
  ( ! [X6,X4,X8,X7,X5] : (~p(s(bool,'const.bool.BOUNDED_1'(s(bool,X7)))) | p(s(bool,happ(s(fun(X4,bool),X8),s(X4,sK10(X5,X8,X4))))) | p(s(bool,happ(s(fun(X4,bool),X5),s(X4,sK9(X5,X8,X4))))) | s(bool,'F_0') = s(bool,happ(s(fun(X4,bool),X5),s(X4,X6)))) )),
  inference(superposition,[],[f371,f787])).
fof(f4855,plain,(
  ( ! [X4,X2,X0,X3,X1] : (p(s(bool,happ(s(fun(X0,bool),X1),s(X0,sK9('const.ind_type.FCONS_3'(s(fun(X0,bool),X1),s(fun('type.num.num',fun(X0,bool)),X2),s('type.num.num','const.num.|48|_0')),X4,X0))))) | ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3)))) | p(s(bool,happ(s(fun(X0,bool),X4),s(X0,sK10('const.ind_type.FCONS_3'(s(fun(X0,bool),X1),s(fun('type.num.num',fun(X0,bool)),X2),s('type.num.num','const.num.|48|_0')),X4,X0)))))) )),
  inference(forward_demodulation,[],[f4829,f368])).
fof(f4829,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3)))) | p(s(bool,happ(s(fun(X0,bool),X4),s(X0,sK10('const.ind_type.FCONS_3'(s(fun(X0,bool),X1),s(fun('type.num.num',fun(X0,bool)),X2),s('type.num.num','const.num.|48|_0')),X4,X0))))) | p(s(bool,happ(s(fun(X0,bool),'const.ind_type.FCONS_3'(s(fun(X0,bool),X1),s(fun('type.num.num',fun(X0,bool)),X2),s('type.num.num','const.num.|48|_0'))),s(X0,sK9('const.ind_type.FCONS_3'(s(fun(X0,bool),X1),s(fun('type.num.num',fun(X0,bool)),X2),s('type.num.num','const.num.|48|_0')),X4,X0)))))) )),
  inference(superposition,[],[f371,f368])).
fof(f4759,plain,(
  ( ! [X391,X397,X393,X395,X390,X396,X392,X394] : (~p(s(bool,'const.bool.IN_2'(s(X390,X396),s(fun(X390,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X390),happ(s(fun(X392,'type.list.list'(X390)),X393),s(X392,happ(s(fun(X391,X392),X394),s(X391,X395)))))))))) | p(s(bool,'const.bool.IN_2'(s(X390,X396),s(fun(X390,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X390),'const.list.APPEND_2'(s('type.list.list'(X390),X397),s('type.list.list'(X390),happ(s(fun(X391,'type.list.list'(X390)),'_dst_x0x1_2'(s(fun(X392,'type.list.list'(X390)),X393),s(fun(X391,X392),X394))),s(X391,X395))))))))))) )),
  inference(superposition,[],[f405,f437])).
fof(f4758,plain,(
  ( ! [X383,X389,X385,X387,X382,X388,X384,X386] : (~p(s(bool,'const.bool.IN_2'(s(X382,X388),s(fun(X382,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X382),happ(s(fun(X384,'type.list.list'(X382)),X385),s(X384,happ(s(fun(X383,X384),X386),s(X383,X387)))))))))) | p(s(bool,'const.bool.IN_2'(s(X382,X388),s(fun(X382,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X382),'const.list.APPEND_2'(s('type.list.list'(X382),happ(s(fun(X383,'type.list.list'(X382)),'_dst_x0x1_2'(s(fun(X384,'type.list.list'(X382)),X385),s(fun(X383,X384),X386))),s(X383,X387))),s('type.list.list'(X382),X389))))))))) )),
  inference(superposition,[],[f404,f437])).
fof(f4757,plain,(
  ( ! [X377,X379,X374,X380,X376,X378,X375,X381] : (~p(s(bool,'const.bool.IN_2'(s(X374,X380),s(fun(X374,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X374),happ(s(fun(X376,'type.list.list'(X374)),X377),s(X376,happ(s(fun(X375,X376),X378),s(X375,X379)))))))))) | p(s(bool,'const.bool.IN_2'(s(X374,X380),s(fun(X374,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X374),'const.list.CONS_2'(s(X374,X381),s('type.list.list'(X374),happ(s(fun(X375,'type.list.list'(X374)),'_dst_x0x1_2'(s(fun(X376,'type.list.list'(X374)),X377),s(fun(X375,X376),X378))),s(X375,X379))))))))))) )),
  inference(superposition,[],[f396,f437])).
fof(f4753,plain,(
  ( ! [X344,X346,X343,X349,X345,X347,X348] : (s('type.list.list'(X343),'const.list.NIL_0') != s('type.list.list'(X343),happ(s(fun(X345,'type.list.list'(X343)),X346),s(X345,happ(s(fun(X344,X345),X347),s(X344,X348))))) | s('type.list.list'(X343),'const.list.NIL_0') != s('type.list.list'(X343),X349) | s('type.list.list'(X343),'const.list.NIL_0') = s('type.list.list'(X343),'const.list.APPEND_2'(s('type.list.list'(X343),happ(s(fun(X344,'type.list.list'(X343)),'_dst_x0x1_2'(s(fun(X345,'type.list.list'(X343)),X346),s(fun(X344,X345),X347))),s(X344,X348))),s('type.list.list'(X343),X349)))) )),
  inference(superposition,[],[f383,f437])).
fof(f4752,plain,(
  ( ! [X341,X337,X339,X340,X342,X336,X338] : (s('type.list.list'(X336),'const.list.NIL_0') != s('type.list.list'(X336),'const.list.APPEND_2'(s('type.list.list'(X336),X342),s('type.list.list'(X336),happ(s(fun(X338,'type.list.list'(X336)),X339),s(X338,happ(s(fun(X337,X338),X340),s(X337,X341))))))) | s('type.list.list'(X336),'const.list.NIL_0') = s('type.list.list'(X336),happ(s(fun(X337,'type.list.list'(X336)),'_dst_x0x1_2'(s(fun(X338,'type.list.list'(X336)),X339),s(fun(X337,X338),X340))),s(X337,X341)))) )),
  inference(superposition,[],[f382,f437])).
fof(f4749,plain,(
  ( ! [X315,X321,X316,X318,X320,X317,X319] : (s('type.list.list'(X315),'const.list.NIL_0') != s('type.list.list'(X315),'const.list.APPEND_2'(s('type.list.list'(X315),happ(s(fun(X317,'type.list.list'(X315)),X318),s(X317,happ(s(fun(X316,X317),X319),s(X316,X320))))),s('type.list.list'(X315),X321))) | s('type.list.list'(X315),'const.list.NIL_0') = s('type.list.list'(X315),happ(s(fun(X316,'type.list.list'(X315)),'_dst_x0x1_2'(s(fun(X317,'type.list.list'(X315)),X318),s(fun(X316,X317),X319))),s(X316,X320)))) )),
  inference(superposition,[],[f381,f437])).
fof(f4734,plain,(
  ( ! [X212,X216,X215,X213,X217,X214] : (~p(s(bool,happ(s(fun(X213,bool),X214),s(X213,happ(s(fun(X212,X213),X215),s(X212,X216)))))) | s(bool,X217) = s(bool,happ(s(fun(X212,bool),'_dst_x0x1_2'(s(fun(X213,bool),X214),s(fun(X212,X213),X215))),s(X212,X216))) | s(bool,'F_0') = s(bool,X217)) )),
  inference(superposition,[],[f730,f437])).
fof(f4733,plain,(
  ( ! [X210,X208,X211,X209,X207] : (s(bool,'F_0') != s(bool,'const.marker.Cong_1'(s(bool,happ(s(fun(X208,bool),X209),s(X208,happ(s(fun(X207,X208),X210),s(X207,X211))))))) | s(bool,'F_0') = s(bool,happ(s(fun(X207,bool),'_dst_x0x1_2'(s(fun(X208,bool),X209),s(fun(X207,X208),X210))),s(X207,X211)))) )),
  inference(superposition,[],[f728,f437])).
fof(f4731,plain,(
  ( ! [X198,X196,X200,X199,X197] : (s(bool,'T_0') = s(bool,'const.marker.Cong_1'(s(bool,happ(s(fun(X197,bool),X198),s(X197,happ(s(fun(X196,X197),X199),s(X196,X200))))))) | s(bool,'F_0') = s(bool,happ(s(fun(X196,bool),'_dst_x0x1_2'(s(fun(X197,bool),X198),s(fun(X196,X197),X199))),s(X196,X200)))) )),
  inference(superposition,[],[f535,f437])).
fof(f4730,plain,(
  ( ! [X191,X194,X192,X190,X195,X193] : (~p(s(bool,happ(s(fun(X191,bool),X192),s(X191,happ(s(fun(X190,X191),X193),s(X190,X194)))))) | s(bool,X195) != s(bool,happ(s(fun(X190,bool),'_dst_x0x1_2'(s(fun(X191,bool),X192),s(fun(X190,X191),X193))),s(X190,X194))) | p(s(bool,X195))) )),
  inference(superposition,[],[f473,f437])).
fof(f4729,plain,(
  ( ! [X189,X187,X185,X188,X186,X184] : (~p(s(bool,happ(s(fun(X185,bool),X186),s(X185,happ(s(fun(X184,X185),X187),s(X184,X188)))))) | ~p(s(bool,X189)) | s(bool,X189) = s(bool,happ(s(fun(X184,bool),'_dst_x0x1_2'(s(fun(X185,bool),X186),s(fun(X184,X185),X187))),s(X184,X188)))) )),
  inference(superposition,[],[f417,f437])).
fof(f4727,plain,(
  ( ! [X177,X175,X173,X176,X174,X172] : (p(s(bool,happ(s(fun(X173,bool),X174),s(X173,happ(s(fun(X172,X173),X175),s(X172,X176)))))) | p(s(bool,X177)) | s(bool,X177) = s(bool,happ(s(fun(X172,bool),'_dst_x0x1_2'(s(fun(X173,bool),X174),s(fun(X172,X173),X175))),s(X172,X176)))) )),
  inference(superposition,[],[f414,f437])).
fof(f4726,plain,(
  ( ! [X167,X171,X169,X170,X168] : (p(s(bool,happ(s(fun(X168,bool),X169),s(X168,happ(s(fun(X167,X168),X170),s(X167,X171)))))) | s(bool,'F_0') = s(bool,happ(s(fun(X167,bool),'_dst_x0x1_2'(s(fun(X168,bool),X169),s(fun(X167,X168),X170))),s(X167,X171)))) )),
  inference(superposition,[],[f308,f437])).
fof(f4725,plain,(
  ( ! [X165,X163,X166,X164,X162] : (~p(s(bool,happ(s(fun(X163,bool),X164),s(X163,happ(s(fun(X162,X163),X165),s(X162,X166)))))) | s(bool,'F_0') != s(bool,happ(s(fun(X162,bool),'_dst_x0x1_2'(s(fun(X163,bool),X164),s(fun(X162,X163),X165))),s(X162,X166)))) )),
  inference(superposition,[],[f307,f437])).
fof(f4724,plain,(
  ( ! [X158,X161,X159,X157,X160] : (~p(s(bool,happ(s(fun(X158,bool),X159),s(X158,happ(s(fun(X157,X158),X160),s(X157,X161)))))) | s(bool,'T_0') = s(bool,happ(s(fun(X157,bool),'_dst_x0x1_2'(s(fun(X158,bool),X159),s(fun(X157,X158),X160))),s(X157,X161)))) )),
  inference(superposition,[],[f304,f437])).
fof(f4723,plain,(
  ( ! [X156,X154,X152,X155,X153] : (p(s(bool,happ(s(fun(X153,bool),X154),s(X153,happ(s(fun(X152,X153),X155),s(X152,X156)))))) | s(bool,'T_0') != s(bool,happ(s(fun(X152,bool),'_dst_x0x1_2'(s(fun(X153,bool),X154),s(fun(X152,X153),X155))),s(X152,X156)))) )),
  inference(superposition,[],[f303,f437])).
fof(f4715,plain,(
  ( ! [X116,X114,X112,X115,X113] : (~p(s(bool,happ(s(fun(X113,bool),X114),s(X113,happ(s(fun(X112,X113),X115),s(X112,X116)))))) | s(X112,X116) = s(X112,sK15(X116,'_dst_x0x1_2'(s(fun(X113,bool),X114),s(fun(X112,X113),X115)),X112))) )),
  inference(superposition,[],[f388,f437])).
fof(f4714,plain,(
  ( ! [X111,X109,X107,X110,X108,X106] : (~p(s(bool,happ(s(fun(X107,bool),X108),s(X107,happ(s(fun(X106,X107),X109),s(X106,X110)))))) | p(s(bool,happ(s(fun(X106,bool),'_dst_x0x1_2'(s(fun(X107,bool),X108),s(fun(X106,X107),X109))),s(X106,X111)))) | s(X106,X110) != s(X106,X111)) )),
  inference(superposition,[],[f387,f437])).
fof(f4713,plain,(
  ( ! [X103,X101,X99,X105,X102,X100,X98,X104] : (~p(s(bool,'const.bool.IN_2'(s(X98,happ(s(fun(X100,X98),X101),s(X100,happ(s(fun(X99,X100),X102),s(X99,X103))))),s(fun(X98,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X98),X104)))))) | p(s(bool,'const.bool.IN_2'(s(X98,happ(s(fun(X99,X98),'_dst_x0x1_2'(s(fun(X100,X98),X101),s(fun(X99,X100),X102))),s(X99,X103))),s(fun(X98,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X98),'const.list.APPEND_2'(s('type.list.list'(X98),X105),s('type.list.list'(X98),X104))))))))) )),
  inference(superposition,[],[f405,f437])).
fof(f4712,plain,(
  ( ! [X94,X92,X90,X97,X95,X93,X91,X96] : (~p(s(bool,'const.bool.IN_2'(s(X90,happ(s(fun(X92,X90),X93),s(X92,happ(s(fun(X91,X92),X94),s(X91,X95))))),s(fun(X90,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X90),X96)))))) | p(s(bool,'const.bool.IN_2'(s(X90,happ(s(fun(X91,X90),'_dst_x0x1_2'(s(fun(X92,X90),X93),s(fun(X91,X92),X94))),s(X91,X95))),s(fun(X90,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X90),'const.list.APPEND_2'(s('type.list.list'(X90),X96),s('type.list.list'(X90),X97))))))))) )),
  inference(superposition,[],[f404,f437])).
fof(f4711,plain,(
  ( ! [X88,X87,X85,X83,X89,X86,X84,X82] : (~p(s(bool,'const.bool.IN_2'(s(X82,happ(s(fun(X84,X82),X85),s(X84,happ(s(fun(X83,X84),X86),s(X83,X87))))),s(fun(X82,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X82),X88)))))) | p(s(bool,'const.bool.IN_2'(s(X82,happ(s(fun(X83,X82),'_dst_x0x1_2'(s(fun(X84,X82),X85),s(fun(X83,X84),X86))),s(X83,X87))),s(fun(X82,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X82),'const.list.CONS_2'(s(X82,X89),s('type.list.list'(X82),X88))))))))) )),
  inference(superposition,[],[f396,f437])).
fof(f4710,plain,(
  ( ! [X80,X78,X76,X74,X81,X79,X77,X75] : (p(s(bool,'const.bool.IN_2'(s(X74,happ(s(fun(X76,X74),X77),s(X76,happ(s(fun(X75,X76),X78),s(X75,X79))))),s(fun(X74,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X74),'const.list.CONS_2'(s(X74,X80),s('type.list.list'(X74),X81)))))))) | s(X74,X80) != s(X74,happ(s(fun(X75,X74),'_dst_x0x1_2'(s(fun(X76,X74),X77),s(fun(X75,X76),X78))),s(X75,X79)))) )),
  inference(superposition,[],[f395,f437])).
fof(f4709,plain,(
  ( ! [X70,X68,X66,X72,X71,X69,X67,X73] : (p(s(bool,'const.bool.IN_2'(s(X66,X72),s(fun(X66,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X66),'const.list.CONS_2'(s(X66,happ(s(fun(X68,X66),X69),s(X68,happ(s(fun(X67,X68),X70),s(X67,X71))))),s('type.list.list'(X66),X73)))))))) | s(X66,X72) != s(X66,happ(s(fun(X67,X66),'_dst_x0x1_2'(s(fun(X68,X66),X69),s(fun(X67,X68),X70))),s(X67,X71)))) )),
  inference(superposition,[],[f395,f437])).
fof(f4705,plain,(
  ( ! [X39,X37,X35,X41,X38,X36,X42,X40] : (~p(s(bool,happ(s(fun(X35,bool),X41),s(X35,happ(s(fun(X37,X35),X38),s(X37,happ(s(fun(X36,X37),X39),s(X36,X40)))))))) | p(s(bool,happ(s(fun(X35,bool),X41),s(X35,X42)))) | s(X35,X42) != s(X35,happ(s(fun(X36,X35),'_dst_x0x1_2'(s(fun(X37,X35),X38),s(fun(X36,X37),X39))),s(X36,X40)))) )),
  inference(superposition,[],[f387,f437])).
fof(f4704,plain,(
  ( ! [X30,X28,X33,X31,X29,X34,X32] : (~p(s(bool,'const.bool.IN_2'(s(X28,happ(s(fun(X30,X28),X31),s(X30,happ(s(fun(X29,X30),X32),s(X29,X33))))),s(fun(X28,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X28),sK14(happ(s(fun(X29,X28),'_dst_x0x1_2'(s(fun(X30,X28),X31),s(fun(X29,X30),X32))),s(X29,X33)),X34,X28))))))) | ~p(s(bool,'const.bool.IN_2'(s(X28,happ(s(fun(X29,X28),'_dst_x0x1_2'(s(fun(X30,X28),X31),s(fun(X29,X30),X32))),s(X29,X33))),s(fun(X28,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X28),X34))))))) )),
  inference(superposition,[],[f379,f437])).
fof(f4703,plain,(
  ( ! [X26,X24,X23,X21,X27,X25,X22] : (~p(s(bool,'const.bool.IN_2'(s(X21,happ(s(fun(X23,X21),X24),s(X23,happ(s(fun(X22,X23),X25),s(X22,X26))))),s(fun(X21,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X21),sK11(happ(s(fun(X22,X21),'_dst_x0x1_2'(s(fun(X23,X21),X24),s(fun(X22,X23),X25))),s(X22,X26)),X27,X21))))))) | ~p(s(bool,'const.bool.IN_2'(s(X21,happ(s(fun(X22,X21),'_dst_x0x1_2'(s(fun(X23,X21),X24),s(fun(X22,X23),X25))),s(X22,X26))),s(fun(X21,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X21),X27))))))) )),
  inference(superposition,[],[f376,f437])).
fof(f4686,plain,(
  ( ! [X377,X372,X374,X370,X376,X373,X375,X371] : (~p(s(bool,'const.bool.IN_2'(s(X370,X376),s(fun(X370,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X370),happ(s(fun(X373,'type.list.list'(X370)),'_dst_x0x1_2'(s(fun(X371,'type.list.list'(X370)),X372),s(fun(X373,X371),X374))),s(X373,X375)))))))) | p(s(bool,'const.bool.IN_2'(s(X370,X376),s(fun(X370,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X370),'const.list.APPEND_2'(s('type.list.list'(X370),X377),s('type.list.list'(X370),happ(s(fun(X371,'type.list.list'(X370)),X372),s(X371,happ(s(fun(X373,X371),X374),s(X373,X375))))))))))))) )),
  inference(superposition,[],[f405,f437])).
fof(f4685,plain,(
  ( ! [X364,X366,X362,X368,X365,X367,X363,X369] : (~p(s(bool,'const.bool.IN_2'(s(X362,X368),s(fun(X362,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X362),happ(s(fun(X365,'type.list.list'(X362)),'_dst_x0x1_2'(s(fun(X363,'type.list.list'(X362)),X364),s(fun(X365,X363),X366))),s(X365,X367)))))))) | p(s(bool,'const.bool.IN_2'(s(X362,X368),s(fun(X362,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X362),'const.list.APPEND_2'(s('type.list.list'(X362),happ(s(fun(X363,'type.list.list'(X362)),X364),s(X363,happ(s(fun(X365,X363),X366),s(X365,X367))))),s('type.list.list'(X362),X369))))))))) )),
  inference(superposition,[],[f404,f437])).
fof(f4684,plain,(
  ( ! [X356,X358,X354,X360,X357,X359,X355,X361] : (~p(s(bool,'const.bool.IN_2'(s(X354,X360),s(fun(X354,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X354),happ(s(fun(X357,'type.list.list'(X354)),'_dst_x0x1_2'(s(fun(X355,'type.list.list'(X354)),X356),s(fun(X357,X355),X358))),s(X357,X359)))))))) | p(s(bool,'const.bool.IN_2'(s(X354,X360),s(fun(X354,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X354),'const.list.CONS_2'(s(X354,X361),s('type.list.list'(X354),happ(s(fun(X355,'type.list.list'(X354)),X356),s(X355,happ(s(fun(X357,X355),X358),s(X357,X359))))))))))))) )),
  inference(superposition,[],[f396,f437])).
fof(f4680,plain,(
  ( ! [X325,X327,X323,X329,X324,X326,X328] : (s('type.list.list'(X323),'const.list.NIL_0') != s('type.list.list'(X323),happ(s(fun(X326,'type.list.list'(X323)),'_dst_x0x1_2'(s(fun(X324,'type.list.list'(X323)),X325),s(fun(X326,X324),X327))),s(X326,X328))) | s('type.list.list'(X323),'const.list.NIL_0') != s('type.list.list'(X323),X329) | s('type.list.list'(X323),'const.list.NIL_0') = s('type.list.list'(X323),'const.list.APPEND_2'(s('type.list.list'(X323),happ(s(fun(X324,'type.list.list'(X323)),X325),s(X324,happ(s(fun(X326,X324),X327),s(X326,X328))))),s('type.list.list'(X323),X329)))) )),
  inference(superposition,[],[f383,f437])).
fof(f4679,plain,(
  ( ! [X321,X316,X318,X320,X322,X317,X319] : (s('type.list.list'(X316),'const.list.NIL_0') != s('type.list.list'(X316),'const.list.APPEND_2'(s('type.list.list'(X316),X322),s('type.list.list'(X316),happ(s(fun(X319,'type.list.list'(X316)),'_dst_x0x1_2'(s(fun(X317,'type.list.list'(X316)),X318),s(fun(X319,X317),X320))),s(X319,X321))))) | s('type.list.list'(X316),'const.list.NIL_0') = s('type.list.list'(X316),happ(s(fun(X317,'type.list.list'(X316)),X318),s(X317,happ(s(fun(X319,X317),X320),s(X319,X321)))))) )),
  inference(superposition,[],[f382,f437])).
fof(f4676,plain,(
  ( ! [X300,X296,X298,X295,X301,X297,X299] : (s('type.list.list'(X295),'const.list.NIL_0') != s('type.list.list'(X295),'const.list.APPEND_2'(s('type.list.list'(X295),happ(s(fun(X298,'type.list.list'(X295)),'_dst_x0x1_2'(s(fun(X296,'type.list.list'(X295)),X297),s(fun(X298,X296),X299))),s(X298,X300))),s('type.list.list'(X295),X301))) | s('type.list.list'(X295),'const.list.NIL_0') = s('type.list.list'(X295),happ(s(fun(X296,'type.list.list'(X295)),X297),s(X296,happ(s(fun(X298,X296),X299),s(X298,X300)))))) )),
  inference(superposition,[],[f381,f437])).
fof(f4661,plain,(
  ( ! [X196,X194,X192,X197,X195,X193] : (~p(s(bool,happ(s(fun(X194,bool),'_dst_x0x1_2'(s(fun(X192,bool),X193),s(fun(X194,X192),X195))),s(X194,X196)))) | s(bool,X197) = s(bool,happ(s(fun(X192,bool),X193),s(X192,happ(s(fun(X194,X192),X195),s(X194,X196))))) | s(bool,'F_0') = s(bool,X197)) )),
  inference(superposition,[],[f730,f437])).
fof(f4660,plain,(
  ( ! [X191,X189,X187,X190,X188] : (s(bool,'F_0') != s(bool,'const.marker.Cong_1'(s(bool,happ(s(fun(X189,bool),'_dst_x0x1_2'(s(fun(X187,bool),X188),s(fun(X189,X187),X190))),s(X189,X191))))) | s(bool,'F_0') = s(bool,happ(s(fun(X187,bool),X188),s(X187,happ(s(fun(X189,X187),X190),s(X189,X191)))))) )),
  inference(superposition,[],[f728,f437])).
fof(f4659,plain,(
  ( ! [X185,X182,X186,X184,X183,X181] : (p(s(bool,happ(s(fun(X183,bool),'_dst_x0x1_2'(s(fun(X181,bool),X182),s(fun(X183,X181),X184))),s(X183,X185)))) | s(bool,X186) = s(bool,happ(s(fun(X181,bool),X182),s(X181,happ(s(fun(X183,X181),X184),s(X183,X185))))) | s(bool,'T_0') = s(bool,X186)) )),
  inference(superposition,[],[f575,f437])).
fof(f4658,plain,(
  ( ! [X177,X180,X178,X176,X179] : (s(bool,'T_0') = s(bool,'const.marker.Cong_1'(s(bool,happ(s(fun(X178,bool),'_dst_x0x1_2'(s(fun(X176,bool),X177),s(fun(X178,X176),X179))),s(X178,X180))))) | s(bool,'F_0') = s(bool,happ(s(fun(X176,bool),X177),s(X176,happ(s(fun(X178,X176),X179),s(X178,X180)))))) )),
  inference(superposition,[],[f535,f437])).
fof(f4657,plain,(
  ( ! [X175,X173,X171,X174,X172,X170] : (~p(s(bool,happ(s(fun(X172,bool),'_dst_x0x1_2'(s(fun(X170,bool),X171),s(fun(X172,X170),X173))),s(X172,X174)))) | s(bool,X175) != s(bool,happ(s(fun(X170,bool),X171),s(X170,happ(s(fun(X172,X170),X173),s(X172,X174))))) | p(s(bool,X175))) )),
  inference(superposition,[],[f473,f437])).
fof(f4656,plain,(
  ( ! [X167,X165,X169,X166,X164,X168] : (~p(s(bool,happ(s(fun(X166,bool),'_dst_x0x1_2'(s(fun(X164,bool),X165),s(fun(X166,X164),X167))),s(X166,X168)))) | ~p(s(bool,X169)) | s(bool,X169) = s(bool,happ(s(fun(X164,bool),X165),s(X164,happ(s(fun(X166,X164),X167),s(X166,X168)))))) )),
  inference(superposition,[],[f417,f437])).
fof(f4654,plain,(
  ( ! [X156,X154,X152,X157,X155,X153] : (p(s(bool,happ(s(fun(X154,bool),'_dst_x0x1_2'(s(fun(X152,bool),X153),s(fun(X154,X152),X155))),s(X154,X156)))) | p(s(bool,X157)) | s(bool,X157) = s(bool,happ(s(fun(X152,bool),X153),s(X152,happ(s(fun(X154,X152),X155),s(X154,X156)))))) )),
  inference(superposition,[],[f414,f437])).
fof(f4653,plain,(
  ( ! [X151,X149,X147,X150,X148] : (p(s(bool,happ(s(fun(X149,bool),'_dst_x0x1_2'(s(fun(X147,bool),X148),s(fun(X149,X147),X150))),s(X149,X151)))) | s(bool,'F_0') = s(bool,happ(s(fun(X147,bool),X148),s(X147,happ(s(fun(X149,X147),X150),s(X149,X151)))))) )),
  inference(superposition,[],[f308,f437])).
fof(f4652,plain,(
  ( ! [X146,X144,X142,X145,X143] : (~p(s(bool,happ(s(fun(X144,bool),'_dst_x0x1_2'(s(fun(X142,bool),X143),s(fun(X144,X142),X145))),s(X144,X146)))) | s(bool,'F_0') != s(bool,happ(s(fun(X142,bool),X143),s(X142,happ(s(fun(X144,X142),X145),s(X144,X146)))))) )),
  inference(superposition,[],[f307,f437])).
fof(f4651,plain,(
  ( ! [X140,X138,X141,X139,X137] : (~p(s(bool,happ(s(fun(X139,bool),'_dst_x0x1_2'(s(fun(X137,bool),X138),s(fun(X139,X137),X140))),s(X139,X141)))) | s(bool,'T_0') = s(bool,happ(s(fun(X137,bool),X138),s(X137,happ(s(fun(X139,X137),X140),s(X139,X141)))))) )),
  inference(superposition,[],[f304,f437])).
fof(f4650,plain,(
  ( ! [X134,X132,X136,X135,X133] : (p(s(bool,happ(s(fun(X134,bool),'_dst_x0x1_2'(s(fun(X132,bool),X133),s(fun(X134,X132),X135))),s(X134,X136)))) | s(bool,'T_0') != s(bool,happ(s(fun(X132,bool),X133),s(X132,happ(s(fun(X134,X132),X135),s(X134,X136)))))) )),
  inference(superposition,[],[f303,f437])).
fof(f4645,plain,(
  ( ! [X111,X109,X107,X110,X108,X106] : (~p(s(bool,happ(s(fun(X108,bool),'_dst_x0x1_2'(s(fun(X106,bool),X107),s(fun(X108,X106),X109))),s(X108,X110)))) | p(s(bool,happ(s(fun(X106,bool),X107),s(X106,X111)))) | s(X106,X111) != s(X106,happ(s(fun(X108,X106),X109),s(X108,X110)))) )),
  inference(superposition,[],[f387,f437])).
fof(f4644,plain,(
  ( ! [X103,X101,X99,X105,X102,X100,X98,X104] : (~p(s(bool,'const.bool.IN_2'(s(X98,happ(s(fun(X101,X98),'_dst_x0x1_2'(s(fun(X99,X98),X100),s(fun(X101,X99),X102))),s(X101,X103))),s(fun(X98,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X98),X104)))))) | p(s(bool,'const.bool.IN_2'(s(X98,happ(s(fun(X99,X98),X100),s(X99,happ(s(fun(X101,X99),X102),s(X101,X103))))),s(fun(X98,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X98),'const.list.APPEND_2'(s('type.list.list'(X98),X105),s('type.list.list'(X98),X104))))))))) )),
  inference(superposition,[],[f405,f437])).
fof(f4643,plain,(
  ( ! [X94,X92,X90,X97,X95,X93,X91,X96] : (~p(s(bool,'const.bool.IN_2'(s(X90,happ(s(fun(X93,X90),'_dst_x0x1_2'(s(fun(X91,X90),X92),s(fun(X93,X91),X94))),s(X93,X95))),s(fun(X90,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X90),X96)))))) | p(s(bool,'const.bool.IN_2'(s(X90,happ(s(fun(X91,X90),X92),s(X91,happ(s(fun(X93,X91),X94),s(X93,X95))))),s(fun(X90,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X90),'const.list.APPEND_2'(s('type.list.list'(X90),X96),s('type.list.list'(X90),X97))))))))) )),
  inference(superposition,[],[f404,f437])).
fof(f4642,plain,(
  ( ! [X88,X87,X85,X83,X89,X86,X84,X82] : (~p(s(bool,'const.bool.IN_2'(s(X82,happ(s(fun(X85,X82),'_dst_x0x1_2'(s(fun(X83,X82),X84),s(fun(X85,X83),X86))),s(X85,X87))),s(fun(X82,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X82),X88)))))) | p(s(bool,'const.bool.IN_2'(s(X82,happ(s(fun(X83,X82),X84),s(X83,happ(s(fun(X85,X83),X86),s(X85,X87))))),s(fun(X82,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X82),'const.list.CONS_2'(s(X82,X89),s('type.list.list'(X82),X88))))))))) )),
  inference(superposition,[],[f396,f437])).
fof(f4641,plain,(
  ( ! [X80,X78,X76,X74,X81,X79,X77,X75] : (p(s(bool,'const.bool.IN_2'(s(X74,happ(s(fun(X77,X74),'_dst_x0x1_2'(s(fun(X75,X74),X76),s(fun(X77,X75),X78))),s(X77,X79))),s(fun(X74,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X74),'const.list.CONS_2'(s(X74,X80),s('type.list.list'(X74),X81)))))))) | s(X74,X80) != s(X74,happ(s(fun(X75,X74),X76),s(X75,happ(s(fun(X77,X75),X78),s(X77,X79)))))) )),
  inference(superposition,[],[f395,f437])).
fof(f4640,plain,(
  ( ! [X70,X68,X66,X72,X71,X69,X67,X73] : (p(s(bool,'const.bool.IN_2'(s(X66,X72),s(fun(X66,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X66),'const.list.CONS_2'(s(X66,happ(s(fun(X69,X66),'_dst_x0x1_2'(s(fun(X67,X66),X68),s(fun(X69,X67),X70))),s(X69,X71))),s('type.list.list'(X66),X73)))))))) | s(X66,X72) != s(X66,happ(s(fun(X67,X66),X68),s(X67,happ(s(fun(X69,X67),X70),s(X69,X71)))))) )),
  inference(superposition,[],[f395,f437])).
fof(f4636,plain,(
  ( ! [X39,X37,X35,X41,X38,X36,X42,X40] : (~p(s(bool,happ(s(fun(X35,bool),X41),s(X35,happ(s(fun(X38,X35),'_dst_x0x1_2'(s(fun(X36,X35),X37),s(fun(X38,X36),X39))),s(X38,X40)))))) | p(s(bool,happ(s(fun(X35,bool),X41),s(X35,X42)))) | s(X35,X42) != s(X35,happ(s(fun(X36,X35),X37),s(X36,happ(s(fun(X38,X36),X39),s(X38,X40)))))) )),
  inference(superposition,[],[f387,f437])).
fof(f4635,plain,(
  ( ! [X30,X28,X33,X31,X29,X34,X32] : (~p(s(bool,'const.bool.IN_2'(s(X28,happ(s(fun(X31,X28),'_dst_x0x1_2'(s(fun(X29,X28),X30),s(fun(X31,X29),X32))),s(X31,X33))),s(fun(X28,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X28),sK14(happ(s(fun(X29,X28),X30),s(X29,happ(s(fun(X31,X29),X32),s(X31,X33)))),X34,X28))))))) | ~p(s(bool,'const.bool.IN_2'(s(X28,happ(s(fun(X29,X28),X30),s(X29,happ(s(fun(X31,X29),X32),s(X31,X33))))),s(fun(X28,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X28),X34))))))) )),
  inference(superposition,[],[f379,f437])).
fof(f4634,plain,(
  ( ! [X26,X24,X23,X21,X27,X25,X22] : (~p(s(bool,'const.bool.IN_2'(s(X21,happ(s(fun(X24,X21),'_dst_x0x1_2'(s(fun(X22,X21),X23),s(fun(X24,X22),X25))),s(X24,X26))),s(fun(X21,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X21),sK11(happ(s(fun(X22,X21),X23),s(X22,happ(s(fun(X24,X22),X25),s(X24,X26)))),X27,X21))))))) | ~p(s(bool,'const.bool.IN_2'(s(X21,happ(s(fun(X22,X21),X23),s(X22,happ(s(fun(X24,X22),X25),s(X24,X26))))),s(fun(X21,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X21),X27))))))) )),
  inference(superposition,[],[f376,f437])).
fof(f4601,plain,(
  ( ! [X24,X23,X21,X19,X17,X22,X20,X18] : (s(X17,happ(s(fun(X19,X17),X20),s(X19,happ(s(fun(X18,X19),X21),s(X18,happ(s(fun(X22,X18),X23),s(X22,X24))))))) = s(X17,happ(s(fun(X22,X17),'_dst_x0x1_2'(s(fun(X18,X17),'_dst_x0x1_2'(s(fun(X19,X17),X20),s(fun(X18,X19),X21))),s(fun(X22,X18),X23))),s(X22,X24)))) )),
  inference(superposition,[],[f437,f437])).
fof(f4773,plain,(
  ( ! [X6,X8,X7,X5,X9] : (s(bool,'T_0') = s(bool,happ(s(fun(X7,bool),'_dst_x0x1_2'(s(fun(X5,bool),X6),s(fun(X7,X5),X8))),s(X7,X9))) | s(bool,'F_0') = s(bool,happ(s(fun(X5,bool),X6),s(X5,happ(s(fun(X7,X5),X8),s(X7,X9)))))) )),
  inference(forward_demodulation,[],[f4600,f296])).
fof(f4600,plain,(
  ( ! [X6,X10,X8,X7,X5,X9] : (s(bool,'const.bool.BOUNDED_1'(s(bool,X10))) = s(bool,happ(s(fun(X7,bool),'_dst_x0x1_2'(s(fun(X5,bool),X6),s(fun(X7,X5),X8))),s(X7,X9))) | s(bool,'F_0') = s(bool,happ(s(fun(X5,bool),X6),s(X5,happ(s(fun(X7,X5),X8),s(X7,X9)))))) )),
  inference(superposition,[],[f437,f787])).
fof(f4599,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s(bool,'F_0') = s(bool,happ(s(fun(X2,bool),'_dst_x0x1_2'(s(fun(X0,bool),X1),s(fun(X2,X0),X3))),s(X2,X4))) | s(bool,'T_0') = s(bool,happ(s(fun(X0,bool),X1),s(X0,happ(s(fun(X2,X0),X3),s(X2,X4)))))) )),
  inference(superposition,[],[f437,f299])).
fof(f4598,plain,(
  ( ! [X26,X24,X23,X21,X19,X25,X22,X20] : (s(X25,happ(s(fun(X19,X25),X26),s(X19,happ(s(fun(X21,X19),X22),s(X21,happ(s(fun(X20,X21),X23),s(X20,X24))))))) = s(X25,happ(s(fun(X20,X25),'_dst_x0x1_2'(s(fun(X19,X25),X26),s(fun(X20,X19),'_dst_x0x1_2'(s(fun(X21,X19),X22),s(fun(X20,X21),X23))))),s(X20,X24)))) )),
  inference(superposition,[],[f437,f437])).
fof(f4597,plain,(
  ( ! [X14,X12,X17,X15,X13,X11,X18,X16] : (s(X17,happ(s(fun(X11,X17),X18),s(X11,happ(s(fun(X14,X11),'_dst_x0x1_2'(s(fun(X12,X11),X13),s(fun(X14,X12),X15))),s(X14,X16))))) = s(X17,happ(s(fun(X12,X17),'_dst_x0x1_2'(s(fun(X11,X17),X18),s(fun(X12,X11),X13))),s(X12,happ(s(fun(X14,X12),X15),s(X14,X16)))))) )),
  inference(superposition,[],[f437,f437])).
fof(f4595,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (p(s(bool,'const.bool.IN_2'(s(X0,happ(s(fun(X1,X0),X2),s(X1,happ(s(fun(X3,X1),X4),s(X3,X5))))),s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),'const.list.CONS_2'(s(X0,happ(s(fun(X3,X0),'_dst_x0x1_2'(s(fun(X1,X0),X2),s(fun(X3,X1),X4))),s(X3,X5))),s('type.list.list'(X0),X6))))))))) )),
  inference(unit_resulting_resolution,[],[f437,f395])).
fof(f4596,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (p(s(bool,'const.bool.IN_2'(s(X0,happ(s(fun(X1,X0),'_dst_x0x1_2'(s(fun(X2,X0),X3),s(fun(X1,X2),X4))),s(X1,X5))),s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),'const.list.CONS_2'(s(X0,happ(s(fun(X2,X0),X3),s(X2,happ(s(fun(X1,X2),X4),s(X1,X5))))),s('type.list.list'(X0),X6))))))))) )),
  inference(unit_resulting_resolution,[],[f437,f395])).
fof(f4521,plain,(
  ( ! [X10,X13,X11,X9] : (p(s(bool,'const.bool.IN_2'(s(X9,X10),s(fun(X9,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X9),'const.list.APPEND_2'(s('type.list.list'(X9),X13),s('type.list.list'(X9),X11)))))))) | s(bool,'F_0') = s(bool,'const.bool.IN_2'(s(X9,X10),s(fun(X9,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X9),X11)))))) )),
  inference(subsumption_resolution,[],[f4520,f289])).
fof(f4520,plain,(
  ( ! [X10,X13,X11,X9] : (~p(s(bool,'T_0')) | p(s(bool,'const.bool.IN_2'(s(X9,X10),s(fun(X9,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X9),'const.list.APPEND_2'(s('type.list.list'(X9),X13),s('type.list.list'(X9),X11)))))))) | s(bool,'F_0') = s(bool,'const.bool.IN_2'(s(X9,X10),s(fun(X9,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X9),X11)))))) )),
  inference(forward_demodulation,[],[f4500,f296])).
fof(f4500,plain,(
  ( ! [X12,X10,X13,X11,X9] : (~p(s(bool,'const.bool.BOUNDED_1'(s(bool,X12)))) | p(s(bool,'const.bool.IN_2'(s(X9,X10),s(fun(X9,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X9),'const.list.APPEND_2'(s('type.list.list'(X9),X13),s('type.list.list'(X9),X11)))))))) | s(bool,'F_0') = s(bool,'const.bool.IN_2'(s(X9,X10),s(fun(X9,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X9),X11)))))) )),
  inference(superposition,[],[f405,f787])).
fof(f4507,plain,(
  ( ! [X26,X27,X25] : (p(s(bool,'const.bool.IN_2'(s(bool,'T_0'),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),'const.list.APPEND_2'(s('type.list.list'(bool),X27),s('type.list.list'(bool),X26)))))))) | ~p(s(bool,'const.bool.IN_2'(s(bool,X25),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),X26)))))) | s(bool,'F_0') = s(bool,X25)) )),
  inference(forward_demodulation,[],[f4484,f296])).
fof(f4484,plain,(
  ( ! [X26,X24,X27,X25] : (~p(s(bool,'const.bool.IN_2'(s(bool,X25),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),X26)))))) | p(s(bool,'const.bool.IN_2'(s(bool,'const.bool.BOUNDED_1'(s(bool,X24))),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),'const.list.APPEND_2'(s('type.list.list'(bool),X27),s('type.list.list'(bool),X26)))))))) | s(bool,'F_0') = s(bool,X25)) )),
  inference(superposition,[],[f405,f787])).
fof(f4478,plain,(
  ( ! [X8,X7,X9] : (~p(s(bool,'const.bool.IN_2'(s(bool,X7),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),X8)))))) | p(s(bool,'const.bool.IN_2'(s(bool,'F_0'),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),'const.list.APPEND_2'(s('type.list.list'(bool),X9),s('type.list.list'(bool),X8)))))))) | s(bool,'T_0') = s(bool,X7)) )),
  inference(superposition,[],[f405,f299])).
fof(f4501,plain,(
  ( ! [X6,X5,X3] : (~p(s(bool,'const.bool.IN_2'(s(bool,'T_0'),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),X5)))))) | p(s(bool,'const.bool.IN_2'(s(bool,X3),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),'const.list.APPEND_2'(s('type.list.list'(bool),X6),s('type.list.list'(bool),X5)))))))) | s(bool,'F_0') = s(bool,X3)) )),
  inference(forward_demodulation,[],[f4477,f296])).
fof(f4477,plain,(
  ( ! [X6,X4,X5,X3] : (~p(s(bool,'const.bool.IN_2'(s(bool,'const.bool.BOUNDED_1'(s(bool,X4))),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),X5)))))) | p(s(bool,'const.bool.IN_2'(s(bool,X3),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),'const.list.APPEND_2'(s('type.list.list'(bool),X6),s('type.list.list'(bool),X5)))))))) | s(bool,'F_0') = s(bool,X3)) )),
  inference(superposition,[],[f405,f787])).
fof(f4476,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.bool.IN_2'(s(bool,'F_0'),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),X1)))))) | p(s(bool,'const.bool.IN_2'(s(bool,X0),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),'const.list.APPEND_2'(s('type.list.list'(bool),X2),s('type.list.list'(bool),X1)))))))) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f405,f299])).
fof(f4362,plain,(
  ( ! [X8,X7,X11,X9] : (p(s(bool,'const.bool.IN_2'(s(X7,X8),s(fun(X7,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X7),'const.list.APPEND_2'(s('type.list.list'(X7),X9),s('type.list.list'(X7),X11)))))))) | s(bool,'F_0') = s(bool,'const.bool.IN_2'(s(X7,X8),s(fun(X7,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X7),X9)))))) )),
  inference(subsumption_resolution,[],[f4361,f289])).
fof(f4361,plain,(
  ( ! [X8,X7,X11,X9] : (~p(s(bool,'T_0')) | p(s(bool,'const.bool.IN_2'(s(X7,X8),s(fun(X7,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X7),'const.list.APPEND_2'(s('type.list.list'(X7),X9),s('type.list.list'(X7),X11)))))))) | s(bool,'F_0') = s(bool,'const.bool.IN_2'(s(X7,X8),s(fun(X7,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X7),X9)))))) )),
  inference(forward_demodulation,[],[f4344,f296])).
fof(f4344,plain,(
  ( ! [X10,X8,X7,X11,X9] : (~p(s(bool,'const.bool.BOUNDED_1'(s(bool,X10)))) | p(s(bool,'const.bool.IN_2'(s(X7,X8),s(fun(X7,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X7),'const.list.APPEND_2'(s('type.list.list'(X7),X9),s('type.list.list'(X7),X11)))))))) | s(bool,'F_0') = s(bool,'const.bool.IN_2'(s(X7,X8),s(fun(X7,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X7),X9)))))) )),
  inference(superposition,[],[f404,f787])).
fof(f4349,plain,(
  ( ! [X23,X21,X22] : (p(s(bool,'const.bool.IN_2'(s(bool,'T_0'),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),'const.list.APPEND_2'(s('type.list.list'(bool),X22),s('type.list.list'(bool),X23)))))))) | ~p(s(bool,'const.bool.IN_2'(s(bool,X21),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),X22)))))) | s(bool,'F_0') = s(bool,X21)) )),
  inference(forward_demodulation,[],[f4330,f296])).
fof(f4330,plain,(
  ( ! [X23,X21,X22,X20] : (~p(s(bool,'const.bool.IN_2'(s(bool,X21),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),X22)))))) | p(s(bool,'const.bool.IN_2'(s(bool,'const.bool.BOUNDED_1'(s(bool,X20))),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),'const.list.APPEND_2'(s('type.list.list'(bool),X22),s('type.list.list'(bool),X23)))))))) | s(bool,'F_0') = s(bool,X21)) )),
  inference(superposition,[],[f404,f787])).
fof(f4326,plain,(
  ( ! [X8,X7,X9] : (~p(s(bool,'const.bool.IN_2'(s(bool,X7),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),X8)))))) | p(s(bool,'const.bool.IN_2'(s(bool,'F_0'),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),'const.list.APPEND_2'(s('type.list.list'(bool),X8),s('type.list.list'(bool),X9)))))))) | s(bool,'T_0') = s(bool,X7)) )),
  inference(superposition,[],[f404,f299])).
fof(f4345,plain,(
  ( ! [X6,X5,X3] : (~p(s(bool,'const.bool.IN_2'(s(bool,'T_0'),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),X5)))))) | p(s(bool,'const.bool.IN_2'(s(bool,X3),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),'const.list.APPEND_2'(s('type.list.list'(bool),X5),s('type.list.list'(bool),X6)))))))) | s(bool,'F_0') = s(bool,X3)) )),
  inference(forward_demodulation,[],[f4325,f296])).
fof(f4325,plain,(
  ( ! [X6,X4,X5,X3] : (~p(s(bool,'const.bool.IN_2'(s(bool,'const.bool.BOUNDED_1'(s(bool,X4))),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),X5)))))) | p(s(bool,'const.bool.IN_2'(s(bool,X3),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),'const.list.APPEND_2'(s('type.list.list'(bool),X5),s('type.list.list'(bool),X6)))))))) | s(bool,'F_0') = s(bool,X3)) )),
  inference(superposition,[],[f404,f787])).
fof(f4324,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.bool.IN_2'(s(bool,'F_0'),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),X1)))))) | p(s(bool,'const.bool.IN_2'(s(bool,X0),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),'const.list.APPEND_2'(s('type.list.list'(bool),X1),s('type.list.list'(bool),X2)))))))) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f404,f299])).
fof(f2543,plain,(
  ( ! [X6,X5] : (~p(s(bool,'const.bool.IN_2'(s(bool,'F_0'),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),sK14(X5,X6,bool))))))) | ~p(s(bool,'const.bool.IN_2'(s(bool,X5),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),X6)))))) | s(bool,'T_0') = s(bool,X5)) )),
  inference(superposition,[],[f379,f299])).
fof(f4231,plain,(
  ( ! [X47,X50,X48,X49] : (s(bool,X50) != s(bool,happ(s(fun('type.num.num',bool),X48),s('type.num.num',X49))) | s(bool,'T_0') = s(bool,'const.ind_type.FCONS_3'(s(bool,X47),s(fun('type.num.num',bool),X48),s('type.num.num','const.num.SUC_1'(s('type.num.num',X49))))) | s(bool,'F_0') = s(bool,X50)) ) | $spl3),
  inference(superposition,[],[f3947,f390])).
fof(f4230,plain,(
  ( ! [X45,X46,X44] : (s(bool,X44) != s(bool,X46) | s(bool,'T_0') = s(bool,'const.ind_type.FCONS_3'(s(bool,X44),s(fun('type.num.num',bool),X45),s('type.num.num','const.num.|48|_0'))) | s(bool,'F_0') = s(bool,X46)) ) | $spl3),
  inference(superposition,[],[f3947,f368])).
fof(f4210,plain,(
  ( ! [X50,X48,X51,X49] : (s(bool,X51) != s(bool,happ(s(fun('type.num.num',bool),X49),s('type.num.num',X50))) | s(bool,'T_0') = s(bool,X51) | s(bool,'F_0') = s(bool,'const.ind_type.FCONS_3'(s(bool,X48),s(fun('type.num.num',bool),X49),s('type.num.num','const.num.SUC_1'(s('type.num.num',X50)))))) ) | $spl3),
  inference(superposition,[],[f3947,f390])).
fof(f4209,plain,(
  ( ! [X47,X45,X46] : (s(bool,X45) != s(bool,X47) | s(bool,'T_0') = s(bool,X47) | s(bool,'F_0') = s(bool,'const.ind_type.FCONS_3'(s(bool,X45),s(fun('type.num.num',bool),X46),s('type.num.num','const.num.|48|_0')))) ) | $spl3),
  inference(superposition,[],[f3947,f368])).
fof(f4206,plain,(
  ( ! [X39,X38] : (s(bool,X38) != s(bool,X39) | s(bool,'T_0') = s(bool,X39) | s(bool,'F_0') = s(bool,'const.marker.Cong_1'(s(bool,X38)))) ) | $spl3),
  inference(superposition,[],[f3947,f297])).
fof(f4247,plain,(
  ( ! [X19,X20,X18] : (s(bool,X18) != s(bool,X19) | s(bool,'T_0') = s(bool,X19) | s(bool,X18) = s(bool,X20) | s(bool,'T_0') = s(bool,'const.marker.Cong_1'(s(bool,X20)))) ) | $spl3),
  inference(subsumption_resolution,[],[f4197,f492])).
fof(f4197,plain,(
  ( ! [X19,X20,X18] : (s(bool,X18) != s(bool,X19) | s(bool,'T_0') = s(bool,X19) | s(bool,'T_0') = s(bool,'F_0') | s(bool,X18) = s(bool,X20) | s(bool,'T_0') = s(bool,'const.marker.Cong_1'(s(bool,X20)))) ) | $spl3),
  inference(superposition,[],[f3947,f2589])).
fof(f4177,plain,(
  ( ! [X39,X37,X35,X38,X36] : (s(bool,'T_0') = s(bool,X39) | p(s(bool,'const.bool.IN_2'(s(X35,X36),s(fun(X35,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X35),'const.list.CONS_2'(s(X35,X38),s('type.list.list'(X35),X37)))))))) | s(bool,X39) = s(bool,'const.bool.IN_2'(s(X35,X36),s(fun(X35,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X35),X37)))))) ) | $spl3),
  inference(forward_demodulation,[],[f4176,f297])).
fof(f4176,plain,(
  ( ! [X39,X37,X35,X38,X36] : (p(s(bool,'const.bool.IN_2'(s(X35,X36),s(fun(X35,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X35),'const.list.CONS_2'(s(X35,X38),s('type.list.list'(X35),X37)))))))) | s(bool,X39) = s(bool,'const.bool.IN_2'(s(X35,X36),s(fun(X35,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X35),X37))))) | s(bool,'T_0') = s(bool,'const.marker.Cong_1'(s(bool,X39)))) ) | $spl3),
  inference(subsumption_resolution,[],[f4137,f289])).
fof(f4137,plain,(
  ( ! [X39,X37,X35,X38,X36] : (~p(s(bool,'T_0')) | p(s(bool,'const.bool.IN_2'(s(X35,X36),s(fun(X35,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X35),'const.list.CONS_2'(s(X35,X38),s('type.list.list'(X35),X37)))))))) | s(bool,X39) = s(bool,'const.bool.IN_2'(s(X35,X36),s(fun(X35,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X35),X37))))) | s(bool,'T_0') = s(bool,'const.marker.Cong_1'(s(bool,X39)))) ) | $spl3),
  inference(superposition,[],[f396,f2589])).
fof(f4172,plain,(
  ( ! [X14,X12,X13,X16] : (p(s(bool,'const.bool.IN_2'(s(X12,X13),s(fun(X12,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X12),'const.list.CONS_2'(s(X12,X16),s('type.list.list'(X12),X14)))))))) | s(bool,'F_0') = s(bool,'const.bool.IN_2'(s(X12,X13),s(fun(X12,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X12),X14)))))) )),
  inference(subsumption_resolution,[],[f4171,f289])).
fof(f4171,plain,(
  ( ! [X14,X12,X13,X16] : (~p(s(bool,'T_0')) | p(s(bool,'const.bool.IN_2'(s(X12,X13),s(fun(X12,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X12),'const.list.CONS_2'(s(X12,X16),s('type.list.list'(X12),X14)))))))) | s(bool,'F_0') = s(bool,'const.bool.IN_2'(s(X12,X13),s(fun(X12,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X12),X14)))))) )),
  inference(forward_demodulation,[],[f4132,f296])).
fof(f4132,plain,(
  ( ! [X14,X12,X15,X13,X16] : (~p(s(bool,'const.bool.BOUNDED_1'(s(bool,X15)))) | p(s(bool,'const.bool.IN_2'(s(X12,X13),s(fun(X12,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X12),'const.list.CONS_2'(s(X12,X16),s('type.list.list'(X12),X14)))))))) | s(bool,'F_0') = s(bool,'const.bool.IN_2'(s(X12,X13),s(fun(X12,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X12),X14)))))) )),
  inference(superposition,[],[f396,f787])).
fof(f4156,plain,(
  ( ! [X59,X60,X58] : (p(s(bool,'const.bool.IN_2'(s(bool,'T_0'),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),'const.list.CONS_2'(s(bool,X60),s('type.list.list'(bool),X59)))))))) | ~p(s(bool,'const.bool.IN_2'(s(bool,X58),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),X59)))))) | s(bool,'F_0') = s(bool,X58)) )),
  inference(forward_demodulation,[],[f4113,f296])).
fof(f4113,plain,(
  ( ! [X59,X57,X60,X58] : (~p(s(bool,'const.bool.IN_2'(s(bool,X58),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),X59)))))) | p(s(bool,'const.bool.IN_2'(s(bool,'const.bool.BOUNDED_1'(s(bool,X57))),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),'const.list.CONS_2'(s(bool,X60),s('type.list.list'(bool),X59)))))))) | s(bool,'F_0') = s(bool,X58)) )),
  inference(superposition,[],[f396,f787])).
fof(f4104,plain,(
  ( ! [X30,X31,X29] : (~p(s(bool,'const.bool.IN_2'(s(bool,X29),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),X30)))))) | p(s(bool,'const.bool.IN_2'(s(bool,'F_0'),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),'const.list.CONS_2'(s(bool,X31),s('type.list.list'(bool),X30)))))))) | s(bool,'T_0') = s(bool,X29)) )),
  inference(superposition,[],[f396,f299])).
fof(f4145,plain,(
  ( ! [X28,X26,X27,X25] : (s(bool,'T_0') = s(bool,X28) | ~p(s(bool,'const.bool.IN_2'(s(bool,X25),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),X26)))))) | p(s(bool,'const.bool.IN_2'(s(bool,'T_0'),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),'const.list.CONS_2'(s(bool,X27),s('type.list.list'(bool),X26)))))))) | s(bool,X25) = s(bool,X28)) ) | $spl3),
  inference(forward_demodulation,[],[f4103,f297])).
fof(f4103,plain,(
  ( ! [X28,X26,X27,X25] : (~p(s(bool,'const.bool.IN_2'(s(bool,X25),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),X26)))))) | p(s(bool,'const.bool.IN_2'(s(bool,'T_0'),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),'const.list.CONS_2'(s(bool,X27),s('type.list.list'(bool),X26)))))))) | s(bool,X25) = s(bool,X28) | s(bool,'T_0') = s(bool,'const.marker.Cong_1'(s(bool,X28)))) ) | $spl3),
  inference(superposition,[],[f396,f2589])).
fof(f4144,plain,(
  ( ! [X24,X23,X21,X22] : (s(bool,'T_0') = s(bool,X24) | ~p(s(bool,'const.bool.IN_2'(s(bool,'T_0'),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),X22)))))) | p(s(bool,'const.bool.IN_2'(s(bool,X21),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),'const.list.CONS_2'(s(bool,X23),s('type.list.list'(bool),X22)))))))) | s(bool,X21) = s(bool,X24)) ) | $spl3),
  inference(forward_demodulation,[],[f4102,f297])).
fof(f4102,plain,(
  ( ! [X24,X23,X21,X22] : (~p(s(bool,'const.bool.IN_2'(s(bool,'T_0'),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),X22)))))) | p(s(bool,'const.bool.IN_2'(s(bool,X21),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),'const.list.CONS_2'(s(bool,X23),s('type.list.list'(bool),X22)))))))) | s(bool,X21) = s(bool,X24) | s(bool,'T_0') = s(bool,'const.marker.Cong_1'(s(bool,X24)))) ) | $spl3),
  inference(superposition,[],[f396,f2589])).
fof(f4142,plain,(
  ( ! [X14,X15,X13,X16] : (s(bool,'T_0') = s(bool,X14) | ~p(s(bool,'const.bool.IN_2'(s(bool,X14),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),X15)))))) | p(s(bool,'const.bool.IN_2'(s(bool,X13),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),'const.list.CONS_2'(s(bool,X16),s('type.list.list'(bool),X15)))))))) | s(bool,'T_0') = s(bool,X13)) ) | $spl3),
  inference(forward_demodulation,[],[f4100,f297])).
fof(f4100,plain,(
  ( ! [X14,X15,X13,X16] : (~p(s(bool,'const.bool.IN_2'(s(bool,X14),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),X15)))))) | p(s(bool,'const.bool.IN_2'(s(bool,X13),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),'const.list.CONS_2'(s(bool,X16),s('type.list.list'(bool),X15)))))))) | s(bool,'T_0') = s(bool,'const.marker.Cong_1'(s(bool,X14))) | s(bool,'T_0') = s(bool,X13)) ) | $spl3),
  inference(superposition,[],[f396,f2589])).
fof(f4138,plain,(
  ( ! [X6,X5,X3] : (~p(s(bool,'const.bool.IN_2'(s(bool,'T_0'),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),X5)))))) | p(s(bool,'const.bool.IN_2'(s(bool,X3),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),'const.list.CONS_2'(s(bool,X6),s('type.list.list'(bool),X5)))))))) | s(bool,'F_0') = s(bool,X3)) )),
  inference(forward_demodulation,[],[f4097,f296])).
fof(f4097,plain,(
  ( ! [X6,X4,X5,X3] : (~p(s(bool,'const.bool.IN_2'(s(bool,'const.bool.BOUNDED_1'(s(bool,X4))),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),X5)))))) | p(s(bool,'const.bool.IN_2'(s(bool,X3),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),'const.list.CONS_2'(s(bool,X6),s('type.list.list'(bool),X5)))))))) | s(bool,'F_0') = s(bool,X3)) )),
  inference(superposition,[],[f396,f787])).
fof(f4096,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.bool.IN_2'(s(bool,'F_0'),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),X1)))))) | p(s(bool,'const.bool.IN_2'(s(bool,X0),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),'const.list.CONS_2'(s(bool,X2),s('type.list.list'(bool),X1)))))))) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f396,f299])).
fof(f4038,plain,(
  ( ! [X2,X1] : (s(bool,X1) != s(bool,X2) | s(bool,'T_0') = s(bool,'const.marker.Cong_1'(s(bool,X2))) | s(bool,'F_0') = s(bool,X1)) ) | $spl3),
  inference(superposition,[],[f3963,f787])).
fof(f3947,plain,(
  ( ! [X2,X1] : (s(bool,X1) != s(bool,X2) | s(bool,'T_0') = s(bool,X2) | s(bool,'F_0') = s(bool,X1)) ) | $spl3),
  inference(superposition,[],[f3803,f787])).
fof(f3924,plain,(
  ( ! [X45,X46,X44] : (s(bool,X44) != s(bool,'const.bool.BOUNDED_1'(s(bool,X46))) | s(bool,'T_0') = s(bool,'const.ind_type.FCONS_3'(s(bool,X44),s(fun('type.num.num',bool),X45),s('type.num.num','const.num.|48|_0')))) ) | $spl3),
  inference(superposition,[],[f3803,f368])).
fof(f3963,plain,(
  ( ! [X0,X1] : (s(bool,X0) != s(bool,'const.bool.BOUNDED_1'(s(bool,X1))) | s(bool,'T_0') = s(bool,'const.marker.Cong_1'(s(bool,X0)))) ) | $spl3),
  inference(condensation,[],[f3962])).
fof(f3962,plain,(
  ( ! [X10,X11,X9] : (s(bool,X10) != s(bool,'const.bool.BOUNDED_1'(s(bool,X11))) | s(bool,'T_0') = s(bool,X9) | s(bool,'T_0') = s(bool,'const.marker.Cong_1'(s(bool,X10)))) ) | $spl3),
  inference(duplicate_literal_removal,[],[f3911])).
fof(f3911,plain,(
  ( ! [X10,X11,X9] : (s(bool,X10) != s(bool,'const.bool.BOUNDED_1'(s(bool,X11))) | s(bool,'T_0') = s(bool,X9) | s(bool,'T_0') = s(bool,'const.marker.Cong_1'(s(bool,X10))) | s(bool,'T_0') = s(bool,X9)) ) | $spl3),
  inference(superposition,[],[f3803,f2589])).
fof(f3897,plain,(
  ( ! [X132,X130,X128,X131,X129] : (~p(s(bool,'const.bool.IN_2'(s('type.list.list'(X128),'const.list.CONS_2'(s(X128,X129),s('type.list.list'(X128),'const.list.APPEND_2'(s('type.list.list'(X128),X130),s('type.list.list'(X128),X131))))),s(fun('type.list.list'(X128),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'(X128)),X132)))))) | ~p(s(bool,'const.bool.IN_2'(s('type.list.list'(X128),'const.list.CONS_2'(s(X128,X129),s('type.list.list'(X128),'const.list.APPEND_2'(s('type.list.list'(X128),X130),s('type.list.list'(X128),X131))))),s(fun('type.list.list'(X128),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'(X128)),sK14('const.list.APPEND_2'(s('type.list.list'(X128),'const.list.CONS_2'(s(X128,X129),s('type.list.list'(X128),X130))),s('type.list.list'(X128),X131)),X132,'type.list.list'(X128))))))))) )),
  inference(forward_demodulation,[],[f3883,f391])).
fof(f3883,plain,(
  ( ! [X132,X130,X128,X131,X129] : (~p(s(bool,'const.bool.IN_2'(s('type.list.list'(X128),'const.list.CONS_2'(s(X128,X129),s('type.list.list'(X128),'const.list.APPEND_2'(s('type.list.list'(X128),X130),s('type.list.list'(X128),X131))))),s(fun('type.list.list'(X128),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'(X128)),sK14('const.list.APPEND_2'(s('type.list.list'(X128),'const.list.CONS_2'(s(X128,X129),s('type.list.list'(X128),X130))),s('type.list.list'(X128),X131)),X132,'type.list.list'(X128)))))))) | ~p(s(bool,'const.bool.IN_2'(s('type.list.list'(X128),'const.list.APPEND_2'(s('type.list.list'(X128),'const.list.CONS_2'(s(X128,X129),s('type.list.list'(X128),X130))),s('type.list.list'(X128),X131))),s(fun('type.list.list'(X128),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'(X128)),X132))))))) )),
  inference(superposition,[],[f379,f391])).
fof(f3896,plain,(
  ( ! [X127,X125,X123,X126,X124] : (~p(s(bool,'const.bool.IN_2'(s('type.list.list'(X123),'const.list.CONS_2'(s(X123,X124),s('type.list.list'(X123),'const.list.APPEND_2'(s('type.list.list'(X123),X125),s('type.list.list'(X123),X126))))),s(fun('type.list.list'(X123),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'(X123)),X127)))))) | ~p(s(bool,'const.bool.IN_2'(s('type.list.list'(X123),'const.list.CONS_2'(s(X123,X124),s('type.list.list'(X123),'const.list.APPEND_2'(s('type.list.list'(X123),X125),s('type.list.list'(X123),X126))))),s(fun('type.list.list'(X123),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'(X123)),sK11('const.list.APPEND_2'(s('type.list.list'(X123),'const.list.CONS_2'(s(X123,X124),s('type.list.list'(X123),X125))),s('type.list.list'(X123),X126)),X127,'type.list.list'(X123))))))))) )),
  inference(forward_demodulation,[],[f3882,f391])).
fof(f3882,plain,(
  ( ! [X127,X125,X123,X126,X124] : (~p(s(bool,'const.bool.IN_2'(s('type.list.list'(X123),'const.list.CONS_2'(s(X123,X124),s('type.list.list'(X123),'const.list.APPEND_2'(s('type.list.list'(X123),X125),s('type.list.list'(X123),X126))))),s(fun('type.list.list'(X123),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'(X123)),sK11('const.list.APPEND_2'(s('type.list.list'(X123),'const.list.CONS_2'(s(X123,X124),s('type.list.list'(X123),X125))),s('type.list.list'(X123),X126)),X127,'type.list.list'(X123)))))))) | ~p(s(bool,'const.bool.IN_2'(s('type.list.list'(X123),'const.list.APPEND_2'(s('type.list.list'(X123),'const.list.CONS_2'(s(X123,X124),s('type.list.list'(X123),X125))),s('type.list.list'(X123),X126))),s(fun('type.list.list'(X123),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'(X123)),X127))))))) )),
  inference(superposition,[],[f376,f391])).
fof(f3854,plain,(
  ( ! [X10,X8,X7,X9] : (s('type.list.list'(X7),'const.list.NIL_0') != s('type.list.list'(X7),'const.list.CONS_2'(s(X7,X8),s('type.list.list'(X7),'const.list.APPEND_2'(s('type.list.list'(X7),X9),s('type.list.list'(X7),X10))))) | s('type.list.list'(X7),'const.list.NIL_0') = s('type.list.list'(X7),'const.list.CONS_2'(s(X7,X8),s('type.list.list'(X7),X9)))) )),
  inference(superposition,[],[f381,f391])).
fof(f3853,plain,(
  ( ! [X6,X4,X5,X3] : (s('type.list.list'(X3),'const.list.NIL_0') != s('type.list.list'(X3),'const.list.CONS_2'(s(X3,X4),s('type.list.list'(X3),'const.list.APPEND_2'(s('type.list.list'(X3),X5),s('type.list.list'(X3),X6))))) | s('type.list.list'(X3),'const.list.NIL_0') = s('type.list.list'(X3),X6)) )),
  inference(superposition,[],[f382,f391])).
fof(f3803,plain,(
  ( ! [X0,X1] : (s(bool,X0) != s(bool,'const.bool.BOUNDED_1'(s(bool,X1))) | s(bool,'T_0') = s(bool,X0)) ) | $spl3),
  inference(condensation,[],[f3802])).
fof(f3802,plain,(
  ( ! [X12,X13,X11] : (s(bool,X13) != s(bool,'const.bool.BOUNDED_1'(s(bool,X12))) | s(bool,X11) = s(bool,X13) | s(bool,'T_0') = s(bool,X13)) ) | $spl3),
  inference(subsumption_resolution,[],[f3773,f3462])).
fof(f3773,plain,(
  ( ! [X12,X13,X11] : (s(bool,X13) != s(bool,'const.bool.BOUNDED_1'(s(bool,X12))) | s(bool,X11) = s(bool,X13) | s(bool,'T_0') = s(bool,X13) | s(bool,'F_0') = s(bool,'const.marker.Cong_1'(s(bool,X11)))) ) | $spl3),
  inference(superposition,[],[f3280,f787])).
fof(f3800,plain,(
  ( ! [X50,X48,X51,X49] : (s(bool,X51) != s(bool,happ(s(fun('type.num.num',bool),X49),s('type.num.num',X50))) | s(bool,X51) = s(bool,'const.ind_type.FCONS_3'(s(bool,X48),s(fun('type.num.num',bool),X49),s('type.num.num','const.num.SUC_1'(s('type.num.num',X50))))) | s(bool,'T_0') = s(bool,X51)) ) | $spl3),
  inference(forward_demodulation,[],[f3767,f297])).
fof(f3767,plain,(
  ( ! [X50,X48,X51,X49] : (s(bool,X51) != s(bool,'const.marker.Cong_1'(s(bool,happ(s(fun('type.num.num',bool),X49),s('type.num.num',X50))))) | s(bool,X51) = s(bool,'const.ind_type.FCONS_3'(s(bool,X48),s(fun('type.num.num',bool),X49),s('type.num.num','const.num.SUC_1'(s('type.num.num',X50))))) | s(bool,'T_0') = s(bool,X51)) ) | $spl3),
  inference(superposition,[],[f3280,f390])).
fof(f3799,plain,(
  ( ! [X47,X45,X46] : (s(bool,X45) != s(bool,X47) | s(bool,X47) = s(bool,'const.ind_type.FCONS_3'(s(bool,X45),s(fun('type.num.num',bool),X46),s('type.num.num','const.num.|48|_0'))) | s(bool,'T_0') = s(bool,X47)) ) | $spl3),
  inference(forward_demodulation,[],[f3766,f297])).
fof(f3766,plain,(
  ( ! [X47,X45,X46] : (s(bool,X47) != s(bool,'const.marker.Cong_1'(s(bool,X45))) | s(bool,X47) = s(bool,'const.ind_type.FCONS_3'(s(bool,X45),s(fun('type.num.num',bool),X46),s('type.num.num','const.num.|48|_0'))) | s(bool,'T_0') = s(bool,X47)) ) | $spl3),
  inference(superposition,[],[f3280,f368])).
fof(f3798,plain,(
  ( ! [X41,X42] : (s(bool,'F_0') = s(bool,X41) | s(bool,'T_0') = s(bool,X42) | s(bool,X42) != s(bool,'const.marker.Cong_1'(s(bool,X41)))) ) | $spl3),
  inference(global_subsumption,[],[f288,f287,f289,f487,f296,f297,f299,f304,f303,f308,f307,f358,f359,f360,f368,f383,f382,f381,f390,f391,f392,f393,f402,f401,f400,f399,f398,f397,f413,f412,f411,f410,f409,f408,f417,f414,f427,f430,f437,f473,f492,f532,f535,f575,f639,f675,f696,f727,f728,f730,f732,f753,f756,f769,f785,f787,f1345,f1344,f1377,f1378,f1406,f1408,f1489,f1492,f1493,f1495,f803,f805,f791,f804,f790,f802,f808,f789,f389,f388,f387,f372,f371,f367,f366,f365,f806,f807,f395,f407,f406,f405,f404,f403,f396,f394,f380,f379,f378,f377,f376,f375,f1320,f754,f1327,f370,f369,f1708,f1709,f1713,f1723,f1721,f1724,f1747,f1781,f1790,f1792,f1794,f1795,f1769,f1770,f1775,f1778,f1801,f1804,f1816,f1903,f1905,f1918,f1920,f1921,f1931,f1969,f1970,f1972,f2108,f2109,f2130,f2060,f2061,f2134,f2144,f2079,f2080,f2148,f2161,f484,f2179,f2178,f2260,f2263,f2300,f2283,f2284,f2305,f2313,f2334,f2331,f2335,f2333,f2380,f2365,f2366,f2381,f2382,f2383,f2384,f2385,f2386,f2387,f2388,f2390,f2391,f2393,f2415,f2418,f2536,f2538,f2560,f2561,f2544,f2562,f2563,f2564,f2565,f2566,f2567,f2568,f2569,f2570,f2572,f2573,f2576,f2588,f2589,f2748,f2763,f2776,f2797,f2806,f2835,f2844,f2920,f2960,f2961,f3384,f3385,f3011,f3389,f3026,f3028,f3029,f3415,f3416,f3417,f3418,f3419,f3420,f3085,f3421,f3422,f3090,f3146,f3151,f3462,f3464,f3466,f3473,f3477,f3478,f3479,f3480,f3481,f3482,f3184,f3186,f3494,f3495,f3496,f3497,f3498,f3499,f3500,f3501,f3511,f3513,f3515,f3517,f3518,f3520,f3521,f3522,f3524,f3264,f3527,f3528,f3269,f3292,f3280,f3569,f3585,f3586,f3554,f3634,f3635,f3637,f3642,f3666,f3781,f3790,f3742,f3745,f3746,f3764])).
fof(f3764,plain,(
  ( ! [X41,X42,X40] : (s(bool,X42) != s(bool,'const.marker.Cong_1'(s(bool,X41))) | s(bool,X42) = s(bool,'const.bool.BOUNDED_1'(s(bool,X40))) | s(bool,'T_0') = s(bool,X42) | s(bool,'F_0') = s(bool,X41)) ) | $spl3),
  inference(superposition,[],[f3280,f787])).
fof(f3746,plain,(
  ( ! [X47,X50,X48,X49] : (s(bool,'const.marker.Cong_1'(s(bool,X50))) != s(bool,happ(s(fun('type.num.num',bool),X48),s('type.num.num',X49))) | s(bool,X50) = s(bool,'const.ind_type.FCONS_3'(s(bool,X47),s(fun('type.num.num',bool),X48),s('type.num.num','const.num.SUC_1'(s('type.num.num',X49))))) | s(bool,'T_0') = s(bool,'const.ind_type.FCONS_3'(s(bool,X47),s(fun('type.num.num',bool),X48),s('type.num.num','const.num.SUC_1'(s('type.num.num',X49)))))) ) | $spl3),
  inference(superposition,[],[f3280,f390])).
fof(f3745,plain,(
  ( ! [X45,X46,X44] : (s(bool,X44) != s(bool,'const.marker.Cong_1'(s(bool,X46))) | s(bool,X46) = s(bool,'const.ind_type.FCONS_3'(s(bool,X44),s(fun('type.num.num',bool),X45),s('type.num.num','const.num.|48|_0'))) | s(bool,'T_0') = s(bool,'const.ind_type.FCONS_3'(s(bool,X44),s(fun('type.num.num',bool),X45),s('type.num.num','const.num.|48|_0')))) ) | $spl3),
  inference(superposition,[],[f3280,f368])).
fof(f3742,plain,(
  ( ! [X37,X38] : (s(bool,X37) != s(bool,'const.marker.Cong_1'(s(bool,X38))) | s(bool,X38) = s(bool,'const.marker.Cong_1'(s(bool,X37))) | s(bool,'T_0') = s(bool,'const.marker.Cong_1'(s(bool,X37)))) ) | $spl3),
  inference(superposition,[],[f3280,f297])).
fof(f3790,plain,(
  ( ! [X28,X27] : (s(bool,X27) != s(bool,'const.marker.Cong_1'(s(bool,X28))) | s(bool,X28) = s(bool,'const.bool.IN_2'(s(sK0,sK2),s(fun(sK0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(sK0),sK1))))) | s(bool,'T_0') = s(bool,X27)) ) | $spl3),
  inference(subsumption_resolution,[],[f3737,f2179])).
fof(f3737,plain,(
  ( ! [X28,X27] : (s(bool,X27) != s(bool,'const.marker.Cong_1'(s(bool,X28))) | s(bool,X28) = s(bool,'const.bool.IN_2'(s(sK0,sK2),s(fun(sK0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(sK0),sK1))))) | s(bool,'T_0') = s(bool,'const.bool.IN_2'(s(sK0,sK2),s(fun(sK0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(sK0),sK1))))) | s(bool,'T_0') = s(bool,X27)) ) | $spl3),
  inference(superposition,[],[f3280,f2260])).
fof(f3781,plain,(
  ( ! [X10,X11,X9] : (s(bool,X10) != s(bool,'const.marker.Cong_1'(s(bool,X11))) | s(bool,X9) = s(bool,X11) | s(bool,'T_0') = s(bool,X9) | s(bool,'T_0') = s(bool,'const.marker.Cong_1'(s(bool,X10)))) ) | $spl3),
  inference(duplicate_literal_removal,[],[f3732])).
fof(f3732,plain,(
  ( ! [X10,X11,X9] : (s(bool,X10) != s(bool,'const.marker.Cong_1'(s(bool,X11))) | s(bool,X9) = s(bool,X11) | s(bool,'T_0') = s(bool,X9) | s(bool,'T_0') = s(bool,'const.marker.Cong_1'(s(bool,X10))) | s(bool,'T_0') = s(bool,X9)) ) | $spl3),
  inference(superposition,[],[f3280,f2589])).
fof(f3666,plain,(
  ( ! [X2,X0,X1] : (s(bool,X1) != s(bool,'const.marker.Cong_1'(s(bool,X0))) | s(bool,'T_0') = s(bool,'const.marker.Cong_1'(s(bool,X1))) | s(bool,X0) = s(bool,X2) | s(bool,'T_0') = s(bool,'const.marker.Cong_1'(s(bool,X2)))) ) | $spl3),
  inference(superposition,[],[f3569,f2589])).
fof(f3642,plain,(
  ( ! [X30,X28,X31,X29,X27] : (s(bool,'T_0') = s(bool,X31) | p(s(bool,happ(s(fun('type.list.list'(X27),bool),X28),s('type.list.list'(X27),sK7(X28,X27))))) | s(bool,X31) = s(bool,happ(s(fun('type.list.list'(X27),bool),X28),s('type.list.list'(X27),'const.list.CONS_2'(s(X27,X29),s('type.list.list'(X27),X30)))))) ) | $spl3),
  inference(forward_demodulation,[],[f3641,f297])).
fof(f3641,plain,(
  ( ! [X30,X28,X31,X29,X27] : (p(s(bool,happ(s(fun('type.list.list'(X27),bool),X28),s('type.list.list'(X27),sK7(X28,X27))))) | s(bool,X31) = s(bool,happ(s(fun('type.list.list'(X27),bool),X28),s('type.list.list'(X27),'const.list.CONS_2'(s(X27,X29),s('type.list.list'(X27),X30))))) | s(bool,'T_0') = s(bool,'const.marker.Cong_1'(s(bool,X31)))) ) | $spl3),
  inference(subsumption_resolution,[],[f3631,f289])).
fof(f3631,plain,(
  ( ! [X30,X28,X31,X29,X27] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'(X27),bool),X28),s('type.list.list'(X27),sK7(X28,X27))))) | s(bool,X31) = s(bool,happ(s(fun('type.list.list'(X27),bool),X28),s('type.list.list'(X27),'const.list.CONS_2'(s(X27,X29),s('type.list.list'(X27),X30))))) | s(bool,'T_0') = s(bool,'const.marker.Cong_1'(s(bool,X31)))) ) | $spl3),
  inference(superposition,[],[f367,f2589])).
fof(f3637,plain,(
  ( ! [X6,X4,X7,X5] : (p(s(bool,happ(s(fun('type.list.list'(X4),bool),X5),s('type.list.list'(X4),sK7(X5,X4))))) | s(bool,'F_0') = s(bool,happ(s(fun('type.list.list'(X4),bool),X5),s('type.list.list'(X4),'const.list.CONS_2'(s(X4,X6),s('type.list.list'(X4),X7)))))) )),
  inference(subsumption_resolution,[],[f3636,f289])).
fof(f3636,plain,(
  ( ! [X6,X4,X7,X5] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'(X4),bool),X5),s('type.list.list'(X4),sK7(X5,X4))))) | s(bool,'F_0') = s(bool,happ(s(fun('type.list.list'(X4),bool),X5),s('type.list.list'(X4),'const.list.CONS_2'(s(X4,X6),s('type.list.list'(X4),X7)))))) )),
  inference(forward_demodulation,[],[f3626,f296])).
fof(f3626,plain,(
  ( ! [X6,X4,X8,X7,X5] : (~p(s(bool,'const.bool.BOUNDED_1'(s(bool,X8)))) | p(s(bool,happ(s(fun('type.list.list'(X4),bool),X5),s('type.list.list'(X4),sK7(X5,X4))))) | s(bool,'F_0') = s(bool,happ(s(fun('type.list.list'(X4),bool),X5),s('type.list.list'(X4),'const.list.CONS_2'(s(X4,X6),s('type.list.list'(X4),X7)))))) )),
  inference(superposition,[],[f367,f787])).
fof(f3554,plain,(
  ( ! [X2,X0,X1] : (s(bool,X1) != s(bool,'const.marker.Cong_1'(s(bool,X0))) | s(bool,'T_0') = s(bool,X1) | s(bool,X0) = s(bool,X2) | s(bool,'T_0') = s(bool,'const.marker.Cong_1'(s(bool,X2)))) ) | $spl3),
  inference(superposition,[],[f3292,f2589])).
fof(f3586,plain,(
  ( ! [X28,X29,X27] : (s(bool,'T_0') != s(bool,happ(s(fun('type.num.num',bool),X28),s('type.num.num',X29))) | s(bool,'T_0') = s(bool,'const.ind_type.FCONS_3'(s(bool,X27),s(fun('type.num.num',bool),X28),s('type.num.num','const.num.SUC_1'(s('type.num.num',X29)))))) ) | $spl3),
  inference(forward_demodulation,[],[f3553,f297])).
fof(f3553,plain,(
  ( ! [X28,X29,X27] : (s(bool,'const.marker.Cong_1'(s(bool,'T_0'))) != s(bool,happ(s(fun('type.num.num',bool),X28),s('type.num.num',X29))) | s(bool,'T_0') = s(bool,'const.ind_type.FCONS_3'(s(bool,X27),s(fun('type.num.num',bool),X28),s('type.num.num','const.num.SUC_1'(s('type.num.num',X29)))))) ) | $spl3),
  inference(superposition,[],[f3292,f390])).
fof(f3585,plain,(
  ( ! [X26,X25] : (s(bool,'T_0') != s(bool,X25) | s(bool,'T_0') = s(bool,'const.ind_type.FCONS_3'(s(bool,X25),s(fun('type.num.num',bool),X26),s('type.num.num','const.num.|48|_0')))) ) | $spl3),
  inference(forward_demodulation,[],[f3552,f297])).
fof(f3552,plain,(
  ( ! [X26,X25] : (s(bool,X25) != s(bool,'const.marker.Cong_1'(s(bool,'T_0'))) | s(bool,'T_0') = s(bool,'const.ind_type.FCONS_3'(s(bool,X25),s(fun('type.num.num',bool),X26),s('type.num.num','const.num.|48|_0')))) ) | $spl3),
  inference(superposition,[],[f3292,f368])).
fof(f3569,plain,(
  ( ! [X0] : (s(bool,X0) != s(bool,'const.marker.Cong_1'(s(bool,'T_0'))) | s(bool,'T_0') = s(bool,'const.marker.Cong_1'(s(bool,X0)))) ) | $spl3),
  inference(condensation,[],[f3568])).
fof(f3568,plain,(
  ( ! [X6,X5] : (s(bool,X6) != s(bool,'const.marker.Cong_1'(s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X5) | s(bool,'T_0') = s(bool,'const.marker.Cong_1'(s(bool,X6)))) ) | $spl3),
  inference(duplicate_literal_removal,[],[f3538])).
fof(f3538,plain,(
  ( ! [X6,X5] : (s(bool,X6) != s(bool,'const.marker.Cong_1'(s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X5) | s(bool,'T_0') = s(bool,'const.marker.Cong_1'(s(bool,X6))) | s(bool,'T_0') = s(bool,X5)) ) | $spl3),
  inference(superposition,[],[f3292,f2589])).
fof(f3280,plain,(
  ( ! [X0,X1] : (s(bool,X0) != s(bool,'const.marker.Cong_1'(s(bool,X1))) | s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X0)) ) | $spl3),
  inference(equality_factoring,[],[f2589])).
fof(f3292,plain,(
  ( ! [X0] : (s(bool,X0) != s(bool,'const.marker.Cong_1'(s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X0)) ) | $spl3),
  inference(duplicate_literal_removal,[],[f3273])).
fof(f3273,plain,(
  ( ! [X0] : (s(bool,X0) != s(bool,'const.marker.Cong_1'(s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) ) | $spl3),
  inference(equality_factoring,[],[f2589])).
fof(f3269,plain,(
  ( ! [X167,X165,X166,X164] : (s(X166,f(s(bool,'T_0'))) != s(X166,g(s(bool,'T_0'))) | s(fun(bool,X166),X164) = s(fun(bool,X166),X165) | s(bool,X167) = s(bool,sK19(X164,X165,X166,bool)) | s(bool,'T_0') = s(bool,'const.marker.Cong_1'(s(bool,X167)))) ) | $spl3),
  inference(superposition,[],[f430,f2589])).
fof(f3528,plain,(
  ( ! [X163,X161,X162] : (s(bool,'T_0') = s(bool,X163) | p(s(bool,happ(s(fun(bool,bool),X162),s(bool,'T_0')))) | ~p(s(bool,happ(s(fun(bool,bool),X162),s(bool,X161)))) | s(bool,X163) = s(bool,sK15(X161,X162,bool))) ) | $spl3),
  inference(forward_demodulation,[],[f3268,f297])).
fof(f3268,plain,(
  ( ! [X163,X161,X162] : (p(s(bool,happ(s(fun(bool,bool),X162),s(bool,'T_0')))) | ~p(s(bool,happ(s(fun(bool,bool),X162),s(bool,X161)))) | s(bool,X163) = s(bool,sK15(X161,X162,bool)) | s(bool,'T_0') = s(bool,'const.marker.Cong_1'(s(bool,X163)))) ) | $spl3),
  inference(superposition,[],[f389,f2589])).
fof(f3527,plain,(
  ( ! [X158,X159,X160] : (s(bool,'T_0') = s(bool,X160) | ~p(s(bool,happ(s(fun(bool,bool),X159),s(bool,'T_0')))) | p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X159)))) | s(bool,X160) = s(bool,sK8(X158,X159,bool))) ) | $spl3),
  inference(forward_demodulation,[],[f3267,f297])).
fof(f3267,plain,(
  ( ! [X158,X159,X160] : (~p(s(bool,happ(s(fun(bool,bool),X159),s(bool,'T_0')))) | p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X159)))) | s(bool,X160) = s(bool,sK8(X158,X159,bool)) | s(bool,'T_0') = s(bool,'const.marker.Cong_1'(s(bool,X160)))) ) | $spl3),
  inference(superposition,[],[f370,f2589])).
fof(f3264,plain,(
  ( ! [X149,X147,X150,X148] : (s(bool,'T_0') != s(bool,f(s(X147,sK19(X148,X149,bool,X147)))) | s(fun(X147,bool),X148) = s(fun(X147,bool),X149) | s(bool,X150) = s(bool,g(s(X147,sK19(X148,X149,bool,X147)))) | s(bool,'T_0') = s(bool,'const.marker.Cong_1'(s(bool,X150)))) ) | $spl3),
  inference(superposition,[],[f430,f2589])).
fof(f3524,plain,(
  ( ! [X130,X131,X129] : (s(bool,'T_0') = s(bool,X131) | ~p(s(bool,happ(s(fun(bool,bool),X130),s(bool,'T_0')))) | s(bool,X129) = s(bool,sK15(X129,X130,bool)) | s(bool,X129) = s(bool,X131)) ) | $spl3),
  inference(forward_demodulation,[],[f3260,f297])).
fof(f3260,plain,(
  ( ! [X130,X131,X129] : (~p(s(bool,happ(s(fun(bool,bool),X130),s(bool,'T_0')))) | s(bool,X129) = s(bool,sK15(X129,X130,bool)) | s(bool,X129) = s(bool,X131) | s(bool,'T_0') = s(bool,'const.marker.Cong_1'(s(bool,X131)))) ) | $spl3),
  inference(superposition,[],[f388,f2589])).
fof(f3522,plain,(
  ( ! [X123,X124,X122] : (s(bool,'T_0') = s(bool,X124) | ~p(s(bool,'const.bool.IN_2'(s(bool,'T_0'),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),sK14(X122,X123,bool))))))) | ~p(s(bool,'const.bool.IN_2'(s(bool,X122),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),X123)))))) | s(bool,X122) = s(bool,X124)) ) | $spl3),
  inference(forward_demodulation,[],[f3258,f297])).
fof(f3258,plain,(
  ( ! [X123,X124,X122] : (~p(s(bool,'const.bool.IN_2'(s(bool,'T_0'),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),sK14(X122,X123,bool))))))) | ~p(s(bool,'const.bool.IN_2'(s(bool,X122),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),X123)))))) | s(bool,X122) = s(bool,X124) | s(bool,'T_0') = s(bool,'const.marker.Cong_1'(s(bool,X124)))) ) | $spl3),
  inference(superposition,[],[f379,f2589])).
fof(f3521,plain,(
  ( ! [X121,X120,X119] : (s(bool,'T_0') = s(bool,X121) | ~p(s(bool,'const.bool.IN_2'(s(bool,'T_0'),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),sK11(X119,X120,bool))))))) | ~p(s(bool,'const.bool.IN_2'(s(bool,X119),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),X120)))))) | s(bool,X119) = s(bool,X121)) ) | $spl3),
  inference(forward_demodulation,[],[f3257,f297])).
fof(f3257,plain,(
  ( ! [X121,X120,X119] : (~p(s(bool,'const.bool.IN_2'(s(bool,'T_0'),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),sK11(X119,X120,bool))))))) | ~p(s(bool,'const.bool.IN_2'(s(bool,X119),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),X120)))))) | s(bool,X119) = s(bool,X121) | s(bool,'T_0') = s(bool,'const.marker.Cong_1'(s(bool,X121)))) ) | $spl3),
  inference(superposition,[],[f376,f2589])).
fof(f3520,plain,(
  ( ! [X92,X90,X91,X89] : (s(bool,'T_0') = s(bool,X92) | p(s(bool,'|dollar|exists_1'(s(fun(X89,bool),X90)))) | s(bool,X92) = s(bool,happ(s(fun(X89,bool),X90),s(X89,sK8(X91,X90,X89))))) ) | $spl3),
  inference(forward_demodulation,[],[f3519,f297])).
fof(f3519,plain,(
  ( ! [X92,X90,X91,X89] : (p(s(bool,'|dollar|exists_1'(s(fun(X89,bool),X90)))) | s(bool,X92) = s(bool,happ(s(fun(X89,bool),X90),s(X89,sK8(X91,X90,X89)))) | s(bool,'T_0') = s(bool,'const.marker.Cong_1'(s(bool,X92)))) ) | $spl3),
  inference(subsumption_resolution,[],[f3248,f289])).
fof(f3248,plain,(
  ( ! [X92,X90,X91,X89] : (~p(s(bool,'T_0')) | p(s(bool,'|dollar|exists_1'(s(fun(X89,bool),X90)))) | s(bool,X92) = s(bool,happ(s(fun(X89,bool),X90),s(X89,sK8(X91,X90,X89)))) | s(bool,'T_0') = s(bool,'const.marker.Cong_1'(s(bool,X92)))) ) | $spl3),
  inference(superposition,[],[f370,f2589])).
fof(f3518,plain,(
  ( ! [X88,X87,X85,X86] : (s(X85,X87) = s(X85,sK15(X87,X86,X85)) | s(bool,X88) = s(bool,happ(s(fun(X85,bool),X86),s(X85,X87))) | s(bool,'T_0') = s(bool,'const.marker.Cong_1'(s(bool,X88)))) ) | $spl3),
  inference(subsumption_resolution,[],[f3247,f289])).
fof(f3247,plain,(
  ( ! [X88,X87,X85,X86] : (~p(s(bool,'T_0')) | s(X85,X87) = s(X85,sK15(X87,X86,X85)) | s(bool,X88) = s(bool,happ(s(fun(X85,bool),X86),s(X85,X87))) | s(bool,'T_0') = s(bool,'const.marker.Cong_1'(s(bool,X88)))) ) | $spl3),
  inference(superposition,[],[f388,f2589])).
fof(f3517,plain,(
  ( ! [X80,X83,X81,X84,X82] : (s(bool,'T_0') = s(bool,X84) | p(s(bool,happ(s(fun(X80,bool),X81),s(X80,X83)))) | s(X80,X82) != s(X80,X83) | s(bool,X84) = s(bool,happ(s(fun(X80,bool),X81),s(X80,X82)))) ) | $spl3),
  inference(forward_demodulation,[],[f3516,f297])).
fof(f3516,plain,(
  ( ! [X80,X83,X81,X84,X82] : (p(s(bool,happ(s(fun(X80,bool),X81),s(X80,X83)))) | s(X80,X82) != s(X80,X83) | s(bool,X84) = s(bool,happ(s(fun(X80,bool),X81),s(X80,X82))) | s(bool,'T_0') = s(bool,'const.marker.Cong_1'(s(bool,X84)))) ) | $spl3),
  inference(subsumption_resolution,[],[f3246,f289])).
fof(f3246,plain,(
  ( ! [X80,X83,X81,X84,X82] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun(X80,bool),X81),s(X80,X83)))) | s(X80,X82) != s(X80,X83) | s(bool,X84) = s(bool,happ(s(fun(X80,bool),X81),s(X80,X82))) | s(bool,'T_0') = s(bool,'const.marker.Cong_1'(s(bool,X84)))) ) | $spl3),
  inference(superposition,[],[f387,f2589])).
fof(f3515,plain,(
  ( ! [X70,X72,X71,X73] : (s(bool,'T_0') = s(bool,X73) | ~p(s(bool,'const.bool.IN_2'(s(X70,X71),s(fun(X70,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X70),X72)))))) | s(bool,X73) = s(bool,'const.bool.IN_2'(s(X70,X71),s(fun(X70,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X70),sK14(X71,X72,X70))))))) ) | $spl3),
  inference(forward_demodulation,[],[f3514,f297])).
fof(f3514,plain,(
  ( ! [X70,X72,X71,X73] : (~p(s(bool,'const.bool.IN_2'(s(X70,X71),s(fun(X70,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X70),X72)))))) | s(bool,X73) = s(bool,'const.bool.IN_2'(s(X70,X71),s(fun(X70,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X70),sK14(X71,X72,X70)))))) | s(bool,'T_0') = s(bool,'const.marker.Cong_1'(s(bool,X73)))) ) | $spl3),
  inference(subsumption_resolution,[],[f3241,f289])).
fof(f3241,plain,(
  ( ! [X70,X72,X71,X73] : (~p(s(bool,'T_0')) | ~p(s(bool,'const.bool.IN_2'(s(X70,X71),s(fun(X70,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X70),X72)))))) | s(bool,X73) = s(bool,'const.bool.IN_2'(s(X70,X71),s(fun(X70,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X70),sK14(X71,X72,X70)))))) | s(bool,'T_0') = s(bool,'const.marker.Cong_1'(s(bool,X73)))) ) | $spl3),
  inference(superposition,[],[f379,f2589])).
fof(f3513,plain,(
  ( ! [X68,X66,X69,X67] : (s(bool,'T_0') = s(bool,X69) | ~p(s(bool,'const.bool.IN_2'(s(X66,X67),s(fun(X66,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X66),X68)))))) | s(bool,X69) = s(bool,'const.bool.IN_2'(s(X66,X67),s(fun(X66,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X66),sK11(X67,X68,X66))))))) ) | $spl3),
  inference(forward_demodulation,[],[f3512,f297])).
fof(f3512,plain,(
  ( ! [X68,X66,X69,X67] : (~p(s(bool,'const.bool.IN_2'(s(X66,X67),s(fun(X66,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X66),X68)))))) | s(bool,X69) = s(bool,'const.bool.IN_2'(s(X66,X67),s(fun(X66,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X66),sK11(X67,X68,X66)))))) | s(bool,'T_0') = s(bool,'const.marker.Cong_1'(s(bool,X69)))) ) | $spl3),
  inference(subsumption_resolution,[],[f3240,f289])).
fof(f3240,plain,(
  ( ! [X68,X66,X69,X67] : (~p(s(bool,'T_0')) | ~p(s(bool,'const.bool.IN_2'(s(X66,X67),s(fun(X66,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X66),X68)))))) | s(bool,X69) = s(bool,'const.bool.IN_2'(s(X66,X67),s(fun(X66,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X66),sK11(X67,X68,X66)))))) | s(bool,'T_0') = s(bool,'const.marker.Cong_1'(s(bool,X69)))) ) | $spl3),
  inference(superposition,[],[f376,f2589])).
fof(f3511,plain,(
  ( ! [X35,X33,X34] : (s(bool,X33) = s(bool,X34) | s(bool,'F_0') = s(bool,X34) | s(bool,X33) = s(bool,X35) | s(bool,'T_0') = s(bool,'const.marker.Cong_1'(s(bool,X35)))) ) | $spl3),
  inference(subsumption_resolution,[],[f3226,f289])).
fof(f3226,plain,(
  ( ! [X35,X33,X34] : (~p(s(bool,'T_0')) | s(bool,X33) = s(bool,X34) | s(bool,'F_0') = s(bool,X34) | s(bool,X33) = s(bool,X35) | s(bool,'T_0') = s(bool,'const.marker.Cong_1'(s(bool,X35)))) ) | $spl3),
  inference(superposition,[],[f730,f2589])).
fof(f3501,plain,(
  ( ! [X10,X11] : (s(bool,'F_0') != s(bool,X10) | s(bool,X10) = s(bool,X11) | s(bool,'T_0') = s(bool,'const.marker.Cong_1'(s(bool,X11)))) ) | $spl3),
  inference(subsumption_resolution,[],[f3217,f289])).
fof(f3217,plain,(
  ( ! [X10,X11] : (~p(s(bool,'T_0')) | s(bool,'F_0') != s(bool,X10) | s(bool,X10) = s(bool,X11) | s(bool,'T_0') = s(bool,'const.marker.Cong_1'(s(bool,X11)))) ) | $spl3),
  inference(superposition,[],[f307,f2589])).
fof(f3500,plain,(
  ( ! [X80,X78,X81,X79] : (s(bool,'T_0') = s(bool,X81) | p(s(bool,'const.bool.IN_2'(s(bool,X78),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),'const.list.CONS_2'(s(bool,X79),s('type.list.list'(bool),X80)))))))) | s(bool,'T_0') != s(bool,X79) | s(bool,X78) = s(bool,X81)) ) | $spl3),
  inference(forward_demodulation,[],[f3211,f297])).
fof(f3211,plain,(
  ( ! [X80,X78,X81,X79] : (p(s(bool,'const.bool.IN_2'(s(bool,X78),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),'const.list.CONS_2'(s(bool,X79),s('type.list.list'(bool),X80)))))))) | s(bool,'T_0') != s(bool,X79) | s(bool,X78) = s(bool,X81) | s(bool,'T_0') = s(bool,'const.marker.Cong_1'(s(bool,X81)))) ) | $spl3),
  inference(superposition,[],[f395,f2589])).
fof(f3499,plain,(
  ( ! [X76,X74,X77,X75] : (s(bool,'T_0') = s(bool,X77) | p(s(bool,'const.bool.IN_2'(s(bool,X75),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),'const.list.CONS_2'(s(bool,X74),s('type.list.list'(bool),X76)))))))) | s(bool,'T_0') != s(bool,X75) | s(bool,X74) = s(bool,X77)) ) | $spl3),
  inference(forward_demodulation,[],[f3210,f297])).
fof(f3210,plain,(
  ( ! [X76,X74,X77,X75] : (p(s(bool,'const.bool.IN_2'(s(bool,X75),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),'const.list.CONS_2'(s(bool,X74),s('type.list.list'(bool),X76)))))))) | s(bool,'T_0') != s(bool,X75) | s(bool,X74) = s(bool,X77) | s(bool,'T_0') = s(bool,'const.marker.Cong_1'(s(bool,X77)))) ) | $spl3),
  inference(superposition,[],[f395,f2589])).
fof(f3498,plain,(
  ( ! [X68,X69,X67] : (s(bool,'T_0') = s(bool,X69) | ~p(s(bool,happ(s(fun(bool,bool),X68),s(bool,X67)))) | s(bool,'T_0') = s(bool,sK15('T_0',X68,bool)) | s(bool,X67) = s(bool,X69)) ) | $spl3),
  inference(forward_demodulation,[],[f3208,f297])).
fof(f3208,plain,(
  ( ! [X68,X69,X67] : (~p(s(bool,happ(s(fun(bool,bool),X68),s(bool,X67)))) | s(bool,'T_0') = s(bool,sK15('T_0',X68,bool)) | s(bool,X67) = s(bool,X69) | s(bool,'T_0') = s(bool,'const.marker.Cong_1'(s(bool,X69)))) ) | $spl3),
  inference(superposition,[],[f388,f2589])).
fof(f3497,plain,(
  ( ! [X66,X64,X65,X63] : (s(bool,'T_0') = s(bool,X66) | ~p(s(bool,happ(s(fun(bool,bool),X64),s(bool,X63)))) | p(s(bool,happ(s(fun(bool,bool),X64),s(bool,X65)))) | s(bool,'T_0') != s(bool,X65) | s(bool,X63) = s(bool,X66)) ) | $spl3),
  inference(forward_demodulation,[],[f3207,f297])).
fof(f3207,plain,(
  ( ! [X66,X64,X65,X63] : (~p(s(bool,happ(s(fun(bool,bool),X64),s(bool,X63)))) | p(s(bool,happ(s(fun(bool,bool),X64),s(bool,X65)))) | s(bool,'T_0') != s(bool,X65) | s(bool,X63) = s(bool,X66) | s(bool,'T_0') = s(bool,'const.marker.Cong_1'(s(bool,X66)))) ) | $spl3),
  inference(superposition,[],[f387,f2589])).
fof(f3496,plain,(
  ( ! [X61,X62,X60] : (s(bool,'T_0') = s(bool,X62) | ~p(s(bool,'const.bool.IN_2'(s(bool,X60),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),sK14('T_0',X61,bool))))))) | ~p(s(bool,'const.bool.IN_2'(s(bool,'T_0'),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),X61)))))) | s(bool,X60) = s(bool,X62)) ) | $spl3),
  inference(forward_demodulation,[],[f3206,f297])).
fof(f3206,plain,(
  ( ! [X61,X62,X60] : (~p(s(bool,'const.bool.IN_2'(s(bool,X60),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),sK14('T_0',X61,bool))))))) | ~p(s(bool,'const.bool.IN_2'(s(bool,'T_0'),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),X61)))))) | s(bool,X60) = s(bool,X62) | s(bool,'T_0') = s(bool,'const.marker.Cong_1'(s(bool,X62)))) ) | $spl3),
  inference(superposition,[],[f379,f2589])).
fof(f3495,plain,(
  ( ! [X59,X57,X58] : (s(bool,'T_0') = s(bool,X59) | ~p(s(bool,'const.bool.IN_2'(s(bool,X57),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),sK11('T_0',X58,bool))))))) | ~p(s(bool,'const.bool.IN_2'(s(bool,'T_0'),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),X58)))))) | s(bool,X57) = s(bool,X59)) ) | $spl3),
  inference(forward_demodulation,[],[f3205,f297])).
fof(f3205,plain,(
  ( ! [X59,X57,X58] : (~p(s(bool,'const.bool.IN_2'(s(bool,X57),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),sK11('T_0',X58,bool))))))) | ~p(s(bool,'const.bool.IN_2'(s(bool,'T_0'),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),X58)))))) | s(bool,X57) = s(bool,X59) | s(bool,'T_0') = s(bool,'const.marker.Cong_1'(s(bool,X59)))) ) | $spl3),
  inference(superposition,[],[f376,f2589])).
fof(f3494,plain,(
  ( ! [X37,X36] : (s(bool,'F_0') != s(bool,'const.marker.Cong_1'(s(bool,X36))) | s(bool,X36) = s(bool,X37) | s(bool,'T_0') = s(bool,'const.marker.Cong_1'(s(bool,X37)))) ) | $spl3),
  inference(subsumption_resolution,[],[f3198,f492])).
fof(f3198,plain,(
  ( ! [X37,X36] : (s(bool,'F_0') != s(bool,'const.marker.Cong_1'(s(bool,X36))) | s(bool,'T_0') = s(bool,'F_0') | s(bool,X36) = s(bool,X37) | s(bool,'T_0') = s(bool,'const.marker.Cong_1'(s(bool,X37)))) ) | $spl3),
  inference(superposition,[],[f728,f2589])).
fof(f3186,plain,(
  ( ! [X8,X7] : (s(bool,X7) = s(bool,'const.bool.BOUNDED_1'(s(bool,X7))) | s(bool,X7) = s(bool,X8) | s(bool,'T_0') = s(bool,'const.marker.Cong_1'(s(bool,X8)))) ) | $spl3),
  inference(superposition,[],[f296,f2589])).
fof(f3184,plain,(
  ( ! [X2,X0,X1] : (s(bool,X0) != s(bool,X1) | s(bool,'T_0') = s(bool,'const.marker.Cong_1'(s(bool,X1))) | s(bool,X0) = s(bool,X2) | s(bool,'T_0') = s(bool,'const.marker.Cong_1'(s(bool,X2)))) ) | $spl3),
  inference(superposition,[],[f2748,f2589])).
fof(f3482,plain,(
  ( ! [X85,X83,X84,X82] : (s(bool,X82) != s(bool,X83) | p(s(bool,'const.bool.IN_2'(s(bool,'T_0'),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),'const.list.CONS_2'(s(bool,X83),s('type.list.list'(bool),X84)))))))) | s(bool,X82) = s(bool,X85) | s(bool,'T_0') = s(bool,X85)) ) | $spl3),
  inference(forward_demodulation,[],[f3183,f297])).
fof(f3183,plain,(
  ( ! [X85,X83,X84,X82] : (p(s(bool,'const.bool.IN_2'(s(bool,'T_0'),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),'const.list.CONS_2'(s(bool,X83),s('type.list.list'(bool),X84)))))))) | s(bool,X83) != s(bool,'const.marker.Cong_1'(s(bool,X82))) | s(bool,X82) = s(bool,X85) | s(bool,'T_0') = s(bool,X85)) ) | $spl3),
  inference(superposition,[],[f395,f2589])).
fof(f3481,plain,(
  ( ! [X80,X78,X81,X79] : (s(bool,X78) != s(bool,X79) | p(s(bool,'const.bool.IN_2'(s(bool,X79),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),'const.list.CONS_2'(s(bool,'T_0'),s('type.list.list'(bool),X80)))))))) | s(bool,X78) = s(bool,X81) | s(bool,'T_0') = s(bool,X81)) ) | $spl3),
  inference(forward_demodulation,[],[f3182,f297])).
fof(f3182,plain,(
  ( ! [X80,X78,X81,X79] : (p(s(bool,'const.bool.IN_2'(s(bool,X79),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),'const.list.CONS_2'(s(bool,'T_0'),s('type.list.list'(bool),X80)))))))) | s(bool,X79) != s(bool,'const.marker.Cong_1'(s(bool,X78))) | s(bool,X78) = s(bool,X81) | s(bool,'T_0') = s(bool,X81)) ) | $spl3),
  inference(superposition,[],[f395,f2589])).
fof(f3480,plain,(
  ( ! [X72,X71,X73] : (s(bool,X71) = s(bool,sK15('const.marker.Cong_1'(s(bool,X71)),X72,bool)) | ~p(s(bool,happ(s(fun(bool,bool),X72),s(bool,'T_0')))) | s(bool,X71) = s(bool,X73) | s(bool,'T_0') = s(bool,X73)) ) | $spl3),
  inference(forward_demodulation,[],[f3180,f297])).
fof(f3180,plain,(
  ( ! [X72,X71,X73] : (~p(s(bool,happ(s(fun(bool,bool),X72),s(bool,'T_0')))) | s(bool,'const.marker.Cong_1'(s(bool,X71))) = s(bool,sK15('const.marker.Cong_1'(s(bool,X71)),X72,bool)) | s(bool,X71) = s(bool,X73) | s(bool,'T_0') = s(bool,X73)) ) | $spl3),
  inference(superposition,[],[f388,f2589])).
fof(f3479,plain,(
  ( ! [X70,X68,X69,X67] : (s(bool,X67) != s(bool,X69) | ~p(s(bool,happ(s(fun(bool,bool),X68),s(bool,'T_0')))) | p(s(bool,happ(s(fun(bool,bool),X68),s(bool,X69)))) | s(bool,X67) = s(bool,X70) | s(bool,'T_0') = s(bool,X70)) ) | $spl3),
  inference(forward_demodulation,[],[f3179,f297])).
fof(f3179,plain,(
  ( ! [X70,X68,X69,X67] : (~p(s(bool,happ(s(fun(bool,bool),X68),s(bool,'T_0')))) | p(s(bool,happ(s(fun(bool,bool),X68),s(bool,X69)))) | s(bool,X69) != s(bool,'const.marker.Cong_1'(s(bool,X67))) | s(bool,X67) = s(bool,X70) | s(bool,'T_0') = s(bool,X70)) ) | $spl3),
  inference(superposition,[],[f387,f2589])).
fof(f3478,plain,(
  ( ! [X66,X64,X65] : (~p(s(bool,'const.bool.IN_2'(s(bool,X64),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),X65)))))) | ~p(s(bool,'const.bool.IN_2'(s(bool,'T_0'),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),sK14('const.marker.Cong_1'(s(bool,X64)),X65,bool))))))) | s(bool,X64) = s(bool,X66) | s(bool,'T_0') = s(bool,X66)) ) | $spl3),
  inference(forward_demodulation,[],[f3178,f297])).
fof(f3178,plain,(
  ( ! [X66,X64,X65] : (~p(s(bool,'const.bool.IN_2'(s(bool,'T_0'),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),sK14('const.marker.Cong_1'(s(bool,X64)),X65,bool))))))) | ~p(s(bool,'const.bool.IN_2'(s(bool,'const.marker.Cong_1'(s(bool,X64))),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),X65)))))) | s(bool,X64) = s(bool,X66) | s(bool,'T_0') = s(bool,X66)) ) | $spl3),
  inference(superposition,[],[f379,f2589])).
fof(f3477,plain,(
  ( ! [X61,X62,X63] : (~p(s(bool,'const.bool.IN_2'(s(bool,X61),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),X62)))))) | ~p(s(bool,'const.bool.IN_2'(s(bool,'T_0'),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),sK11('const.marker.Cong_1'(s(bool,X61)),X62,bool))))))) | s(bool,X61) = s(bool,X63) | s(bool,'T_0') = s(bool,X63)) ) | $spl3),
  inference(forward_demodulation,[],[f3177,f297])).
fof(f3177,plain,(
  ( ! [X61,X62,X63] : (~p(s(bool,'const.bool.IN_2'(s(bool,'T_0'),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),sK11('const.marker.Cong_1'(s(bool,X61)),X62,bool))))))) | ~p(s(bool,'const.bool.IN_2'(s(bool,'const.marker.Cong_1'(s(bool,X61))),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),X62)))))) | s(bool,X61) = s(bool,X63) | s(bool,'T_0') = s(bool,X63)) ) | $spl3),
  inference(superposition,[],[f376,f2589])).
fof(f3473,plain,(
  ( ! [X39,X41,X40] : (s(bool,X40) = s(bool,'const.marker.Cong_1'(s(bool,X39))) | s(bool,'F_0') = s(bool,X40) | s(bool,X39) = s(bool,X41) | s(bool,'T_0') = s(bool,X41)) ) | $spl3),
  inference(subsumption_resolution,[],[f3168,f289])).
fof(f3168,plain,(
  ( ! [X39,X41,X40] : (~p(s(bool,'T_0')) | s(bool,X40) = s(bool,'const.marker.Cong_1'(s(bool,X39))) | s(bool,'F_0') = s(bool,X40) | s(bool,X39) = s(bool,X41) | s(bool,'T_0') = s(bool,X41)) ) | $spl3),
  inference(superposition,[],[f730,f2589])).
fof(f3466,plain,(
  ( ! [X30,X31,X29] : (s(bool,X29) != s(bool,X30) | p(s(bool,X30)) | s(bool,X29) = s(bool,X31) | s(bool,'T_0') = s(bool,X31)) ) | $spl3),
  inference(forward_demodulation,[],[f3465,f297])).
fof(f3465,plain,(
  ( ! [X30,X31,X29] : (s(bool,X30) != s(bool,'const.marker.Cong_1'(s(bool,X29))) | p(s(bool,X30)) | s(bool,X29) = s(bool,X31) | s(bool,'T_0') = s(bool,X31)) ) | $spl3),
  inference(subsumption_resolution,[],[f3164,f289])).
fof(f3164,plain,(
  ( ! [X30,X31,X29] : (~p(s(bool,'T_0')) | s(bool,X30) != s(bool,'const.marker.Cong_1'(s(bool,X29))) | p(s(bool,X30)) | s(bool,X29) = s(bool,X31) | s(bool,'T_0') = s(bool,X31)) ) | $spl3),
  inference(superposition,[],[f473,f2589])).
fof(f3464,plain,(
  ( ! [X28,X26,X27] : (s(bool,X26) = s(bool,X27) | ~p(s(bool,X27)) | s(bool,X26) = s(bool,X28) | s(bool,'T_0') = s(bool,X28)) ) | $spl3),
  inference(forward_demodulation,[],[f3463,f297])).
fof(f3463,plain,(
  ( ! [X28,X26,X27] : (~p(s(bool,X27)) | s(bool,X27) = s(bool,'const.marker.Cong_1'(s(bool,X26))) | s(bool,X26) = s(bool,X28) | s(bool,'T_0') = s(bool,X28)) ) | $spl3),
  inference(subsumption_resolution,[],[f3163,f289])).
fof(f3163,plain,(
  ( ! [X28,X26,X27] : (~p(s(bool,'T_0')) | ~p(s(bool,X27)) | s(bool,X27) = s(bool,'const.marker.Cong_1'(s(bool,X26))) | s(bool,X26) = s(bool,X28) | s(bool,'T_0') = s(bool,X28)) ) | $spl3),
  inference(superposition,[],[f417,f2589])).
fof(f3462,plain,(
  ( ! [X17,X16] : (s(bool,'F_0') != s(bool,'const.marker.Cong_1'(s(bool,X16))) | s(bool,X16) = s(bool,X17) | s(bool,'T_0') = s(bool,X17)) ) | $spl3),
  inference(subsumption_resolution,[],[f3159,f289])).
fof(f3159,plain,(
  ( ! [X17,X16] : (~p(s(bool,'T_0')) | s(bool,'F_0') != s(bool,'const.marker.Cong_1'(s(bool,X16))) | s(bool,X16) = s(bool,X17) | s(bool,'T_0') = s(bool,X17)) ) | $spl3),
  inference(superposition,[],[f307,f2589])).
fof(f3151,plain,(
  ( ! [X173,X171,X174,X172] : (s(X173,f(s(bool,X174))) != s(X173,g(s(bool,X174))) | s(fun(bool,X173),X171) = s(fun(bool,X173),X172) | s(bool,'T_0') = s(bool,'const.marker.Cong_1'(s(bool,sK19(X171,X172,X173,bool)))) | s(bool,'T_0') = s(bool,X174)) ) | $spl3),
  inference(superposition,[],[f430,f2589])).
fof(f3146,plain,(
  ( ! [X156,X154,X157,X155] : (s(bool,X157) != s(bool,f(s(X154,sK19(X155,X156,bool,X154)))) | s(fun(X154,bool),X155) = s(fun(X154,bool),X156) | s(bool,'T_0') = s(bool,'const.marker.Cong_1'(s(bool,g(s(X154,sK19(X155,X156,bool,X154)))))) | s(bool,'T_0') = s(bool,X157)) ) | $spl3),
  inference(superposition,[],[f430,f2589])).
fof(f3090,plain,(
  ( ! [X173,X171,X174,X172] : (s(X173,f(s(bool,X174))) != s(X173,g(s(bool,X174))) | s(fun(bool,X173),X171) = s(fun(bool,X173),X172) | s(bool,'T_0') = s(bool,'const.marker.Cong_1'(s(bool,X174))) | s(bool,'T_0') = s(bool,sK19(X171,X172,X173,bool))) ) | $spl3),
  inference(superposition,[],[f430,f2589])).
fof(f3422,plain,(
  ( ! [X169,X170,X168] : (s(bool,'T_0') = s(bool,X170) | p(s(bool,happ(s(fun(bool,bool),X169),s(bool,X170)))) | ~p(s(bool,happ(s(fun(bool,bool),X169),s(bool,X168)))) | s(bool,'T_0') = s(bool,sK15(X168,X169,bool))) ) | $spl3),
  inference(forward_demodulation,[],[f3089,f297])).
fof(f3089,plain,(
  ( ! [X169,X170,X168] : (p(s(bool,happ(s(fun(bool,bool),X169),s(bool,X170)))) | ~p(s(bool,happ(s(fun(bool,bool),X169),s(bool,X168)))) | s(bool,'T_0') = s(bool,'const.marker.Cong_1'(s(bool,X170))) | s(bool,'T_0') = s(bool,sK15(X168,X169,bool))) ) | $spl3),
  inference(superposition,[],[f389,f2589])).
fof(f3421,plain,(
  ( ! [X167,X165,X166] : (s(bool,'T_0') = s(bool,X167) | ~p(s(bool,happ(s(fun(bool,bool),X166),s(bool,X167)))) | p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X166)))) | s(bool,'T_0') = s(bool,sK8(X165,X166,bool))) ) | $spl3),
  inference(forward_demodulation,[],[f3088,f297])).
fof(f3088,plain,(
  ( ! [X167,X165,X166] : (~p(s(bool,happ(s(fun(bool,bool),X166),s(bool,X167)))) | p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X166)))) | s(bool,'T_0') = s(bool,'const.marker.Cong_1'(s(bool,X167))) | s(bool,'T_0') = s(bool,sK8(X165,X166,bool))) ) | $spl3),
  inference(superposition,[],[f370,f2589])).
fof(f3085,plain,(
  ( ! [X156,X154,X157,X155] : (s(bool,X157) != s(bool,f(s(X154,sK19(X155,X156,bool,X154)))) | s(fun(X154,bool),X155) = s(fun(X154,bool),X156) | s(bool,'T_0') = s(bool,'const.marker.Cong_1'(s(bool,X157))) | s(bool,'T_0') = s(bool,g(s(X154,sK19(X155,X156,bool,X154))))) ) | $spl3),
  inference(superposition,[],[f430,f2589])).
fof(f3420,plain,(
  ( ! [X146,X149,X147,X148] : (s(bool,'T_0') = s(bool,X147) | p(s(bool,'const.bool.IN_2'(s(bool,X147),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),'const.list.CONS_2'(s(bool,X148),s('type.list.list'(bool),X149)))))))) | s(bool,X146) != s(bool,X148) | s(bool,'T_0') = s(bool,X146)) ) | $spl3),
  inference(forward_demodulation,[],[f3084,f297])).
fof(f3084,plain,(
  ( ! [X146,X149,X147,X148] : (p(s(bool,'const.bool.IN_2'(s(bool,X147),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),'const.list.CONS_2'(s(bool,X148),s('type.list.list'(bool),X149)))))))) | s(bool,X146) != s(bool,X148) | s(bool,'T_0') = s(bool,'const.marker.Cong_1'(s(bool,X147))) | s(bool,'T_0') = s(bool,X146)) ) | $spl3),
  inference(superposition,[],[f395,f2589])).
fof(f3419,plain,(
  ( ! [X144,X142,X145,X143] : (s(bool,'T_0') = s(bool,X143) | p(s(bool,'const.bool.IN_2'(s(bool,X144),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),'const.list.CONS_2'(s(bool,X143),s('type.list.list'(bool),X145)))))))) | s(bool,X142) != s(bool,X144) | s(bool,'T_0') = s(bool,X142)) ) | $spl3),
  inference(forward_demodulation,[],[f3083,f297])).
fof(f3083,plain,(
  ( ! [X144,X142,X145,X143] : (p(s(bool,'const.bool.IN_2'(s(bool,X144),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),'const.list.CONS_2'(s(bool,X143),s('type.list.list'(bool),X145)))))))) | s(bool,X142) != s(bool,X144) | s(bool,'T_0') = s(bool,'const.marker.Cong_1'(s(bool,X143))) | s(bool,'T_0') = s(bool,X142)) ) | $spl3),
  inference(superposition,[],[f395,f2589])).
fof(f3418,plain,(
  ( ! [X136,X135,X137] : (s(bool,'T_0') = s(bool,X136) | ~p(s(bool,happ(s(fun(bool,bool),X137),s(bool,X136)))) | s(bool,X135) = s(bool,sK15(X135,X137,bool)) | s(bool,'T_0') = s(bool,X135)) ) | $spl3),
  inference(forward_demodulation,[],[f3081,f297])).
fof(f3081,plain,(
  ( ! [X136,X135,X137] : (~p(s(bool,happ(s(fun(bool,bool),X137),s(bool,X136)))) | s(bool,X135) = s(bool,sK15(X135,X137,bool)) | s(bool,'T_0') = s(bool,'const.marker.Cong_1'(s(bool,X136))) | s(bool,'T_0') = s(bool,X135)) ) | $spl3),
  inference(superposition,[],[f388,f2589])).
fof(f3417,plain,(
  ( ! [X134,X132,X133,X131] : (s(bool,'T_0') = s(bool,X132) | ~p(s(bool,happ(s(fun(bool,bool),X133),s(bool,X132)))) | p(s(bool,happ(s(fun(bool,bool),X133),s(bool,X134)))) | s(bool,X131) != s(bool,X134) | s(bool,'T_0') = s(bool,X131)) ) | $spl3),
  inference(forward_demodulation,[],[f3080,f297])).
fof(f3080,plain,(
  ( ! [X134,X132,X133,X131] : (~p(s(bool,happ(s(fun(bool,bool),X133),s(bool,X132)))) | p(s(bool,happ(s(fun(bool,bool),X133),s(bool,X134)))) | s(bool,X131) != s(bool,X134) | s(bool,'T_0') = s(bool,'const.marker.Cong_1'(s(bool,X132))) | s(bool,'T_0') = s(bool,X131)) ) | $spl3),
  inference(superposition,[],[f387,f2589])).
fof(f3416,plain,(
  ( ! [X130,X128,X129] : (s(bool,'T_0') = s(bool,X129) | ~p(s(bool,'const.bool.IN_2'(s(bool,X129),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),sK14(X128,X130,bool))))))) | ~p(s(bool,'const.bool.IN_2'(s(bool,X128),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),X130)))))) | s(bool,'T_0') = s(bool,X128)) ) | $spl3),
  inference(forward_demodulation,[],[f3079,f297])).
fof(f3079,plain,(
  ( ! [X130,X128,X129] : (~p(s(bool,'const.bool.IN_2'(s(bool,X129),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),sK14(X128,X130,bool))))))) | ~p(s(bool,'const.bool.IN_2'(s(bool,X128),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),X130)))))) | s(bool,'T_0') = s(bool,'const.marker.Cong_1'(s(bool,X129))) | s(bool,'T_0') = s(bool,X128)) ) | $spl3),
  inference(superposition,[],[f379,f2589])).
fof(f3415,plain,(
  ( ! [X127,X125,X126] : (s(bool,'T_0') = s(bool,X126) | ~p(s(bool,'const.bool.IN_2'(s(bool,X126),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),sK11(X125,X127,bool))))))) | ~p(s(bool,'const.bool.IN_2'(s(bool,X125),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),X127)))))) | s(bool,'T_0') = s(bool,X125)) ) | $spl3),
  inference(forward_demodulation,[],[f3078,f297])).
fof(f3078,plain,(
  ( ! [X127,X125,X126] : (~p(s(bool,'const.bool.IN_2'(s(bool,X126),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),sK11(X125,X127,bool))))))) | ~p(s(bool,'const.bool.IN_2'(s(bool,X125),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),X127)))))) | s(bool,'T_0') = s(bool,'const.marker.Cong_1'(s(bool,X126))) | s(bool,'T_0') = s(bool,X125)) ) | $spl3),
  inference(superposition,[],[f376,f2589])).
fof(f3029,plain,(
  ( ! [X39,X41,X42,X40] : (s(bool,'T_0') = s(bool,happ(s(fun('type.num.num',bool),X40),s('type.num.num',X41))) | s(bool,X42) = s(bool,'const.ind_type.FCONS_3'(s(bool,X39),s(fun('type.num.num',bool),X40),s('type.num.num','const.num.SUC_1'(s('type.num.num',X41))))) | s(bool,'T_0') = s(bool,'const.marker.Cong_1'(s(bool,X42)))) ) | $spl3),
  inference(superposition,[],[f2589,f390])).
fof(f3028,plain,(
  ( ! [X37,X38,X36] : (s(bool,'T_0') = s(bool,X36) | s(bool,X38) = s(bool,'const.ind_type.FCONS_3'(s(bool,X36),s(fun('type.num.num',bool),X37),s('type.num.num','const.num.|48|_0'))) | s(bool,'T_0') = s(bool,'const.marker.Cong_1'(s(bool,X38)))) ) | $spl3),
  inference(superposition,[],[f2589,f368])).
fof(f3026,plain,(
  ( ! [X30,X31] : (s(bool,'T_0') = s(bool,X30) | s(bool,X31) = s(bool,'const.marker.Cong_1'(s(bool,X30))) | s(bool,'T_0') = s(bool,'const.marker.Cong_1'(s(bool,X31)))) ) | $spl3),
  inference(superposition,[],[f2589,f297])).
fof(f3389,plain,(
  ( ! [X21,X19,X20] : (s(bool,X21) = s(bool,'const.bool.IN_2'(s(X19,X20),s(fun(X19,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X19),'const.list.NIL_0'))))) | s(bool,'T_0') = s(bool,'const.marker.Cong_1'(s(bool,X21)))) ) | $spl3),
  inference(subsumption_resolution,[],[f3022,f492])).
fof(f3022,plain,(
  ( ! [X21,X19,X20] : (s(bool,'T_0') = s(bool,'F_0') | s(bool,X21) = s(bool,'const.bool.IN_2'(s(X19,X20),s(fun(X19,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X19),'const.list.NIL_0'))))) | s(bool,'T_0') = s(bool,'const.marker.Cong_1'(s(bool,X21)))) ) | $spl3),
  inference(superposition,[],[f2589,f360])).
fof(f3011,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,X0) = s(bool,X1) | s(bool,X1) = s(bool,X2) | s(bool,'T_0') = s(bool,'const.marker.Cong_1'(s(bool,X2))) | s(bool,X0) = s(bool,X3) | s(bool,'T_0') = s(bool,'const.marker.Cong_1'(s(bool,X3)))) ) | $spl3),
  inference(superposition,[],[f2589,f2589])).
fof(f3385,plain,(
  ( ! [X50,X48,X51,X49] : (s(bool,'T_0') = s(bool,happ(s(fun('type.num.num',bool),X49),s('type.num.num',X50))) | s(bool,X51) = s(bool,'const.ind_type.FCONS_3'(s(bool,X48),s(fun('type.num.num',bool),X49),s('type.num.num','const.num.SUC_1'(s('type.num.num',X50))))) | s(bool,'T_0') = s(bool,X51)) ) | $spl3),
  inference(forward_demodulation,[],[f3003,f297])).
fof(f3003,plain,(
  ( ! [X50,X48,X51,X49] : (s(bool,'T_0') = s(bool,'const.marker.Cong_1'(s(bool,happ(s(fun('type.num.num',bool),X49),s('type.num.num',X50))))) | s(bool,X51) = s(bool,'const.ind_type.FCONS_3'(s(bool,X48),s(fun('type.num.num',bool),X49),s('type.num.num','const.num.SUC_1'(s('type.num.num',X50))))) | s(bool,'T_0') = s(bool,X51)) ) | $spl3),
  inference(superposition,[],[f2589,f390])).
fof(f3384,plain,(
  ( ! [X47,X45,X46] : (s(bool,'T_0') = s(bool,X45) | s(bool,X47) = s(bool,'const.ind_type.FCONS_3'(s(bool,X45),s(fun('type.num.num',bool),X46),s('type.num.num','const.num.|48|_0'))) | s(bool,'T_0') = s(bool,X47)) ) | $spl3),
  inference(forward_demodulation,[],[f3002,f297])).
fof(f3002,plain,(
  ( ! [X47,X45,X46] : (s(bool,'T_0') = s(bool,'const.marker.Cong_1'(s(bool,X45))) | s(bool,X47) = s(bool,'const.ind_type.FCONS_3'(s(bool,X45),s(fun('type.num.num',bool),X46),s('type.num.num','const.num.|48|_0'))) | s(bool,'T_0') = s(bool,X47)) ) | $spl3),
  inference(superposition,[],[f2589,f368])).
fof(f2961,plain,(
  ( ! [X47,X50,X48,X49] : (s(bool,X50) = s(bool,happ(s(fun('type.num.num',bool),X48),s('type.num.num',X49))) | s(bool,'T_0') = s(bool,'const.marker.Cong_1'(s(bool,X50))) | s(bool,'T_0') = s(bool,'const.ind_type.FCONS_3'(s(bool,X47),s(fun('type.num.num',bool),X48),s('type.num.num','const.num.SUC_1'(s('type.num.num',X49)))))) ) | $spl3),
  inference(superposition,[],[f2589,f390])).
fof(f2960,plain,(
  ( ! [X45,X46,X44] : (s(bool,X44) = s(bool,X46) | s(bool,'T_0') = s(bool,'const.marker.Cong_1'(s(bool,X46))) | s(bool,'T_0') = s(bool,'const.ind_type.FCONS_3'(s(bool,X44),s(fun('type.num.num',bool),X45),s('type.num.num','const.num.|48|_0')))) ) | $spl3),
  inference(superposition,[],[f2589,f368])).
fof(f2920,plain,(
  ( ! [X0,X1] : (s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),X1) | s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.NIL_0'),s('type.list.list'(X0),X1)))) )),
  inference(equality_resolution,[],[f383])).
fof(f2844,plain,(
  ( ! [X23,X22] : (s(bool,X23) = s(bool,'const.marker.Cong_1'(s(bool,X22))) | s(bool,'F_0') = s(bool,X23) | s(bool,X22) = s(bool,'const.bool.IN_2'(s(sK0,sK2),s(fun(sK0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(sK0),sK1)))))) ) | $spl3),
  inference(subsumption_resolution,[],[f2711,f289])).
fof(f2711,plain,(
  ( ! [X23,X22] : (~p(s(bool,'T_0')) | s(bool,X23) = s(bool,'const.marker.Cong_1'(s(bool,X22))) | s(bool,'F_0') = s(bool,X23) | s(bool,X22) = s(bool,'const.bool.IN_2'(s(sK0,sK2),s(fun(sK0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(sK0),sK1)))))) ) | $spl3),
  inference(superposition,[],[f730,f2415])).
fof(f2835,plain,(
  ( ! [X8] : (s(bool,'F_0') != s(bool,'const.marker.Cong_1'(s(bool,X8))) | s(bool,X8) = s(bool,'const.bool.IN_2'(s(sK0,sK2),s(fun(sK0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(sK0),sK1)))))) ) | $spl3),
  inference(subsumption_resolution,[],[f2702,f289])).
fof(f2702,plain,(
  ( ! [X8] : (~p(s(bool,'T_0')) | s(bool,'F_0') != s(bool,'const.marker.Cong_1'(s(bool,X8))) | s(bool,X8) = s(bool,'const.bool.IN_2'(s(sK0,sK2),s(fun(sK0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(sK0),sK1)))))) ) | $spl3),
  inference(superposition,[],[f307,f2415])).
fof(f2806,plain,(
  ( ! [X101,X99,X100] : (s(X101,f(s(bool,'F_0'))) != s(X101,g(s(bool,'F_0'))) | s(fun(bool,X101),X99) = s(fun(bool,X101),X100) | s(bool,'T_0') = s(bool,'const.marker.Cong_1'(s(bool,sK19(X99,X100,X101,bool))))) ) | $spl3),
  inference(forward_demodulation,[],[f2665,f2178])).
fof(f2665,plain,(
  ( ! [X101,X99,X100] : (s(X101,f(s(bool,'const.bool.IN_2'(s(sK0,sK2),s(fun(sK0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(sK0),sK1))))))) != s(X101,g(s(bool,'const.bool.IN_2'(s(sK0,sK2),s(fun(sK0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(sK0),sK1))))))) | s(fun(bool,X101),X99) = s(fun(bool,X101),X100) | s(bool,'T_0') = s(bool,'const.marker.Cong_1'(s(bool,sK19(X99,X100,X101,bool))))) ) | $spl3),
  inference(superposition,[],[f430,f2415])).
fof(f2797,plain,(
  ( ! [X88,X87,X89] : (s(bool,'F_0') != s(bool,f(s(X87,sK19(X88,X89,bool,X87)))) | s(fun(X87,bool),X88) = s(fun(X87,bool),X89) | s(bool,'T_0') = s(bool,'const.marker.Cong_1'(s(bool,g(s(X87,sK19(X88,X89,bool,X87))))))) ) | $spl3),
  inference(forward_demodulation,[],[f2660,f2178])).
fof(f2660,plain,(
  ( ! [X88,X87,X89] : (s(bool,f(s(X87,sK19(X88,X89,bool,X87)))) != s(bool,'const.bool.IN_2'(s(sK0,sK2),s(fun(sK0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(sK0),sK1))))) | s(fun(X87,bool),X88) = s(fun(X87,bool),X89) | s(bool,'T_0') = s(bool,'const.marker.Cong_1'(s(bool,g(s(X87,sK19(X88,X89,bool,X87))))))) ) | $spl3),
  inference(superposition,[],[f430,f2415])).
fof(f2776,plain,(
  ( ! [X54,X56,X55] : (s(X54,X56) = s(X54,sK8(X56,X55,X54)) | s(bool,'T_0') = s(bool,'const.marker.Cong_1'(s(bool,'|dollar|exists_1'(s(fun(X54,bool),X55)))))) ) | $spl3),
  inference(subsumption_resolution,[],[f2775,f487])).
fof(f2775,plain,(
  ( ! [X54,X56,X55] : (p(s(bool,'F_0')) | s(X54,X56) = s(X54,sK8(X56,X55,X54)) | s(bool,'T_0') = s(bool,'const.marker.Cong_1'(s(bool,'|dollar|exists_1'(s(fun(X54,bool),X55)))))) ) | $spl3),
  inference(forward_demodulation,[],[f2645,f2178])).
fof(f2645,plain,(
  ( ! [X54,X56,X55] : (p(s(bool,'const.bool.IN_2'(s(sK0,sK2),s(fun(sK0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(sK0),sK1)))))) | s(X54,X56) = s(X54,sK8(X56,X55,X54)) | s(bool,'T_0') = s(bool,'const.marker.Cong_1'(s(bool,'|dollar|exists_1'(s(fun(X54,bool),X55)))))) ) | $spl3),
  inference(superposition,[],[f369,f2415])).
fof(f2763,plain,(
  ( ! [X30,X28,X31,X29] : (s(X28,X29) != s(X28,X30) | s(bool,'T_0') = s(bool,'const.marker.Cong_1'(s(bool,'const.bool.IN_2'(s(X28,X29),s(fun(X28,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X28),'const.list.CONS_2'(s(X28,X30),s('type.list.list'(X28),X31)))))))))) ) | $spl3),
  inference(subsumption_resolution,[],[f2762,f487])).
fof(f2762,plain,(
  ( ! [X30,X28,X31,X29] : (p(s(bool,'F_0')) | s(X28,X29) != s(X28,X30) | s(bool,'T_0') = s(bool,'const.marker.Cong_1'(s(bool,'const.bool.IN_2'(s(X28,X29),s(fun(X28,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X28),'const.list.CONS_2'(s(X28,X30),s('type.list.list'(X28),X31)))))))))) ) | $spl3),
  inference(forward_demodulation,[],[f2634,f2178])).
fof(f2634,plain,(
  ( ! [X30,X28,X31,X29] : (p(s(bool,'const.bool.IN_2'(s(sK0,sK2),s(fun(sK0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(sK0),sK1)))))) | s(X28,X29) != s(X28,X30) | s(bool,'T_0') = s(bool,'const.marker.Cong_1'(s(bool,'const.bool.IN_2'(s(X28,X29),s(fun(X28,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X28),'const.list.CONS_2'(s(X28,X30),s('type.list.list'(X28),X31)))))))))) ) | $spl3),
  inference(superposition,[],[f395,f2415])).
fof(f2748,plain,(
  ( ! [X3] : (s(bool,'T_0') != s(bool,X3) | s(bool,'T_0') = s(bool,'const.marker.Cong_1'(s(bool,X3)))) ) | $spl3),
  inference(subsumption_resolution,[],[f2747,f487])).
fof(f2747,plain,(
  ( ! [X3] : (p(s(bool,'F_0')) | s(bool,'T_0') != s(bool,X3) | s(bool,'T_0') = s(bool,'const.marker.Cong_1'(s(bool,X3)))) ) | $spl3),
  inference(forward_demodulation,[],[f2619,f2178])).
fof(f2619,plain,(
  ( ! [X3] : (p(s(bool,'const.bool.IN_2'(s(sK0,sK2),s(fun(sK0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(sK0),sK1)))))) | s(bool,'T_0') != s(bool,X3) | s(bool,'T_0') = s(bool,'const.marker.Cong_1'(s(bool,X3)))) ) | $spl3),
  inference(superposition,[],[f303,f2415])).
fof(f2589,plain,(
  ( ! [X2,X3] : (s(bool,X2) = s(bool,X3) | s(bool,'T_0') = s(bool,'const.marker.Cong_1'(s(bool,X3))) | s(bool,'T_0') = s(bool,X2)) ) | $spl3),
  inference(superposition,[],[f2415,f2260])).
fof(f2588,plain,(
  ( ! [X0,X1] : (s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,'const.marker.Cong_1'(s(bool,X1))) | s(bool,'T_0') = s(bool,'const.marker.Cong_1'(s(bool,X0)))) ) | $spl3),
  inference(superposition,[],[f2415,f2415])).
fof(f2576,plain,(
  ( ! [X4,X5,X3] : (~p(s(bool,'const.bool.IN_2'(s(X3,X4),s(fun(X3,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X3),X5)))))) | s(bool,'F_0') = s(bool,'const.bool.IN_2'(s(X3,X4),s(fun(X3,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X3),sK14(X4,X5,X3))))))) )),
  inference(subsumption_resolution,[],[f2575,f289])).
fof(f2575,plain,(
  ( ! [X4,X5,X3] : (~p(s(bool,'T_0')) | ~p(s(bool,'const.bool.IN_2'(s(X3,X4),s(fun(X3,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X3),X5)))))) | s(bool,'F_0') = s(bool,'const.bool.IN_2'(s(X3,X4),s(fun(X3,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X3),sK14(X4,X5,X3))))))) )),
  inference(forward_demodulation,[],[f2558,f296])).
fof(f2558,plain,(
  ( ! [X6,X4,X5,X3] : (~p(s(bool,'const.bool.BOUNDED_1'(s(bool,X6)))) | ~p(s(bool,'const.bool.IN_2'(s(X3,X4),s(fun(X3,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X3),X5)))))) | s(bool,'F_0') = s(bool,'const.bool.IN_2'(s(X3,X4),s(fun(X3,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X3),sK14(X4,X5,X3))))))) )),
  inference(superposition,[],[f379,f787])).
fof(f2573,plain,(
  ( ! [X39,X37,X35,X38,X36] : (~p(s(bool,'const.bool.IN_2'(s(X35,happ(s(fun('type.num.num',X35),X37),s('type.num.num',X38))),s(fun(X35,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X35),X39)))))) | ~p(s(bool,'const.bool.IN_2'(s(X35,happ(s(fun('type.num.num',X35),X37),s('type.num.num',X38))),s(fun(X35,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X35),sK14('const.ind_type.FCONS_3'(s(X35,X36),s(fun('type.num.num',X35),X37),s('type.num.num','const.num.SUC_1'(s('type.num.num',X38)))),X39,X35)))))))) )),
  inference(forward_demodulation,[],[f2556,f390])).
fof(f2556,plain,(
  ( ! [X39,X37,X35,X38,X36] : (~p(s(bool,'const.bool.IN_2'(s(X35,happ(s(fun('type.num.num',X35),X37),s('type.num.num',X38))),s(fun(X35,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X35),sK14('const.ind_type.FCONS_3'(s(X35,X36),s(fun('type.num.num',X35),X37),s('type.num.num','const.num.SUC_1'(s('type.num.num',X38)))),X39,X35))))))) | ~p(s(bool,'const.bool.IN_2'(s(X35,'const.ind_type.FCONS_3'(s(X35,X36),s(fun('type.num.num',X35),X37),s('type.num.num','const.num.SUC_1'(s('type.num.num',X38))))),s(fun(X35,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X35),X39))))))) )),
  inference(superposition,[],[f379,f390])).
fof(f2572,plain,(
  ( ! [X33,X31,X34,X32] : (~p(s(bool,'const.bool.IN_2'(s(X31,X32),s(fun(X31,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X31),X34)))))) | ~p(s(bool,'const.bool.IN_2'(s(X31,X32),s(fun(X31,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X31),sK14('const.ind_type.FCONS_3'(s(X31,X32),s(fun('type.num.num',X31),X33),s('type.num.num','const.num.|48|_0')),X34,X31)))))))) )),
  inference(forward_demodulation,[],[f2555,f368])).
fof(f2555,plain,(
  ( ! [X33,X31,X34,X32] : (~p(s(bool,'const.bool.IN_2'(s(X31,X32),s(fun(X31,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X31),sK14('const.ind_type.FCONS_3'(s(X31,X32),s(fun('type.num.num',X31),X33),s('type.num.num','const.num.|48|_0')),X34,X31))))))) | ~p(s(bool,'const.bool.IN_2'(s(X31,'const.ind_type.FCONS_3'(s(X31,X32),s(fun('type.num.num',X31),X33),s('type.num.num','const.num.|48|_0'))),s(fun(X31,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X31),X34))))))) )),
  inference(superposition,[],[f379,f368])).
fof(f2570,plain,(
  ( ! [X28,X29,X27] : (~p(s(bool,'const.bool.IN_2'(s('type.list.list'(X27),X28),s(fun('type.list.list'(X27),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'(X27)),X29)))))) | ~p(s(bool,'const.bool.IN_2'(s('type.list.list'(X27),X28),s(fun('type.list.list'(X27),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'(X27)),sK14('const.list.APPEND_2'(s('type.list.list'(X27),'const.list.NIL_0'),s('type.list.list'(X27),X28)),X29,'type.list.list'(X27))))))))) )),
  inference(forward_demodulation,[],[f2553,f359])).
fof(f2553,plain,(
  ( ! [X28,X29,X27] : (~p(s(bool,'const.bool.IN_2'(s('type.list.list'(X27),X28),s(fun('type.list.list'(X27),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'(X27)),sK14('const.list.APPEND_2'(s('type.list.list'(X27),'const.list.NIL_0'),s('type.list.list'(X27),X28)),X29,'type.list.list'(X27)))))))) | ~p(s(bool,'const.bool.IN_2'(s('type.list.list'(X27),'const.list.APPEND_2'(s('type.list.list'(X27),'const.list.NIL_0'),s('type.list.list'(X27),X28))),s(fun('type.list.list'(X27),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'(X27)),X29))))))) )),
  inference(superposition,[],[f379,f359])).
fof(f2569,plain,(
  ( ! [X26,X24,X25] : (~p(s(bool,'const.bool.IN_2'(s('type.list.list'(X24),X25),s(fun('type.list.list'(X24),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'(X24)),X26)))))) | ~p(s(bool,'const.bool.IN_2'(s('type.list.list'(X24),X25),s(fun('type.list.list'(X24),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'(X24)),sK14('const.list.APPEND_2'(s('type.list.list'(X24),X25),s('type.list.list'(X24),'const.list.NIL_0')),X26,'type.list.list'(X24))))))))) )),
  inference(forward_demodulation,[],[f2552,f358])).
fof(f2552,plain,(
  ( ! [X26,X24,X25] : (~p(s(bool,'const.bool.IN_2'(s('type.list.list'(X24),X25),s(fun('type.list.list'(X24),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'(X24)),sK14('const.list.APPEND_2'(s('type.list.list'(X24),X25),s('type.list.list'(X24),'const.list.NIL_0')),X26,'type.list.list'(X24)))))))) | ~p(s(bool,'const.bool.IN_2'(s('type.list.list'(X24),'const.list.APPEND_2'(s('type.list.list'(X24),X25),s('type.list.list'(X24),'const.list.NIL_0'))),s(fun('type.list.list'(X24),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'(X24)),X26))))))) )),
  inference(superposition,[],[f379,f358])).
fof(f2568,plain,(
  ( ! [X23,X22] : (~p(s(bool,'const.bool.IN_2'(s(bool,'T_0'),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),X23)))))) | ~p(s(bool,'const.bool.IN_2'(s(bool,'T_0'),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),sK14('const.bool.BOUNDED_1'(s(bool,X22)),X23,bool)))))))) )),
  inference(forward_demodulation,[],[f2551,f296])).
fof(f2551,plain,(
  ( ! [X23,X22] : (~p(s(bool,'const.bool.IN_2'(s(bool,'T_0'),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),sK14('const.bool.BOUNDED_1'(s(bool,X22)),X23,bool))))))) | ~p(s(bool,'const.bool.IN_2'(s(bool,'const.bool.BOUNDED_1'(s(bool,X22))),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),X23))))))) )),
  inference(superposition,[],[f379,f296])).
fof(f2567,plain,(
  ( ! [X21,X19,X20] : (~p(s(bool,'const.bool.IN_2'(s(bool,'T_0'),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),X21)))))) | ~p(s(bool,'const.bool.IN_2'(s(bool,X20),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),sK14('const.bool.BOUNDED_1'(s(bool,X19)),X21,bool))))))) | s(bool,'F_0') = s(bool,X20)) )),
  inference(forward_demodulation,[],[f2550,f296])).
fof(f2550,plain,(
  ( ! [X21,X19,X20] : (~p(s(bool,'const.bool.IN_2'(s(bool,X20),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),sK14('const.bool.BOUNDED_1'(s(bool,X19)),X21,bool))))))) | ~p(s(bool,'const.bool.IN_2'(s(bool,'const.bool.BOUNDED_1'(s(bool,X19))),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),X21)))))) | s(bool,'F_0') = s(bool,X20)) )),
  inference(superposition,[],[f379,f787])).
fof(f2566,plain,(
  ( ! [X17,X18] : (~p(s(bool,'const.bool.IN_2'(s(bool,X17),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),X18)))))) | ~p(s(bool,'const.bool.IN_2'(s(bool,X17),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),sK14('const.marker.Cong_1'(s(bool,X17)),X18,bool)))))))) )),
  inference(forward_demodulation,[],[f2549,f297])).
fof(f2549,plain,(
  ( ! [X17,X18] : (~p(s(bool,'const.bool.IN_2'(s(bool,X17),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),sK14('const.marker.Cong_1'(s(bool,X17)),X18,bool))))))) | ~p(s(bool,'const.bool.IN_2'(s(bool,'const.marker.Cong_1'(s(bool,X17))),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),X18))))))) )),
  inference(superposition,[],[f379,f297])).
fof(f2565,plain,(
  ( ! [X15,X16] : (~p(s(bool,'const.bool.IN_2'(s(bool,X15),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),X16)))))) | ~p(s(bool,'const.bool.IN_2'(s(bool,'T_0'),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),sK14('const.marker.Cong_1'(s(bool,X15)),X16,bool))))))) | s(bool,'F_0') = s(bool,X15)) )),
  inference(forward_demodulation,[],[f2548,f297])).
fof(f2548,plain,(
  ( ! [X15,X16] : (~p(s(bool,'const.bool.IN_2'(s(bool,'T_0'),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),sK14('const.marker.Cong_1'(s(bool,X15)),X16,bool))))))) | ~p(s(bool,'const.bool.IN_2'(s(bool,'const.marker.Cong_1'(s(bool,X15))),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),X16)))))) | s(bool,'F_0') = s(bool,X15)) )),
  inference(superposition,[],[f379,f535])).
fof(f2564,plain,(
  ( ! [X14] : (~p(s(bool,'const.bool.IN_2'(s(bool,'F_0'),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),X14)))))) | ~p(s(bool,'const.bool.IN_2'(s(bool,'F_0'),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),sK14('const.bool.IN_2'(s(sK0,sK2),s(fun(sK0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(sK0),sK1)))),X14,bool)))))))) ) | $spl3),
  inference(forward_demodulation,[],[f2547,f2178])).
fof(f2547,plain,(
  ( ! [X14] : (~p(s(bool,'const.bool.IN_2'(s(bool,'F_0'),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),sK14('const.bool.IN_2'(s(sK0,sK2),s(fun(sK0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(sK0),sK1)))),X14,bool))))))) | ~p(s(bool,'const.bool.IN_2'(s(bool,'const.bool.IN_2'(s(sK0,sK2),s(fun(sK0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(sK0),sK1))))),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),X14))))))) ) | $spl3),
  inference(superposition,[],[f379,f2178])).
fof(f2563,plain,(
  ( ! [X12,X13] : (~p(s(bool,'const.bool.IN_2'(s(bool,'F_0'),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),X13)))))) | ~p(s(bool,'const.bool.IN_2'(s(bool,X12),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),sK14('const.bool.IN_2'(s(sK0,sK2),s(fun(sK0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(sK0),sK1)))),X13,bool))))))) | s(bool,'T_0') = s(bool,X12)) ) | $spl3),
  inference(forward_demodulation,[],[f2546,f2178])).
fof(f2546,plain,(
  ( ! [X12,X13] : (~p(s(bool,'const.bool.IN_2'(s(bool,X12),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),sK14('const.bool.IN_2'(s(sK0,sK2),s(fun(sK0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(sK0),sK1)))),X13,bool))))))) | ~p(s(bool,'const.bool.IN_2'(s(bool,'const.bool.IN_2'(s(sK0,sK2),s(fun(sK0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(sK0),sK1))))),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),X13)))))) | s(bool,'T_0') = s(bool,X12)) ) | $spl3),
  inference(superposition,[],[f379,f2260])).
fof(f2562,plain,(
  ( ! [X10,X11,X9] : (~p(s(bool,'const.bool.IN_2'(s(bool,'F_0'),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),X11)))))) | ~p(s(bool,'const.bool.IN_2'(s(bool,'F_0'),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),sK14('const.bool.IN_2'(s(X9,X10),s(fun(X9,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X9),'const.list.NIL_0')))),X11,bool)))))))) )),
  inference(forward_demodulation,[],[f2545,f360])).
fof(f2545,plain,(
  ( ! [X10,X11,X9] : (~p(s(bool,'const.bool.IN_2'(s(bool,'F_0'),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),sK14('const.bool.IN_2'(s(X9,X10),s(fun(X9,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X9),'const.list.NIL_0')))),X11,bool))))))) | ~p(s(bool,'const.bool.IN_2'(s(bool,'const.bool.IN_2'(s(X9,X10),s(fun(X9,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X9),'const.list.NIL_0'))))),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),X11))))))) )),
  inference(superposition,[],[f379,f360])).
fof(f2544,plain,(
  ( ! [X8,X7] : (~p(s(bool,'const.bool.IN_2'(s(bool,X7),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),sK14('F_0',X8,bool))))))) | ~p(s(bool,'const.bool.IN_2'(s(bool,'F_0'),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),X8)))))) | s(bool,'T_0') = s(bool,X7)) )),
  inference(superposition,[],[f379,f299])).
fof(f2561,plain,(
  ( ! [X4,X2] : (~p(s(bool,'const.bool.IN_2'(s(bool,'T_0'),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),sK14(X2,X4,bool))))))) | ~p(s(bool,'const.bool.IN_2'(s(bool,X2),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),X4)))))) | s(bool,'F_0') = s(bool,X2)) )),
  inference(forward_demodulation,[],[f2542,f296])).
fof(f2542,plain,(
  ( ! [X4,X2,X3] : (~p(s(bool,'const.bool.IN_2'(s(bool,'const.bool.BOUNDED_1'(s(bool,X3))),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),sK14(X2,X4,bool))))))) | ~p(s(bool,'const.bool.IN_2'(s(bool,X2),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),X4)))))) | s(bool,'F_0') = s(bool,X2)) )),
  inference(superposition,[],[f379,f787])).
fof(f2560,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.bool.IN_2'(s(bool,'F_0'),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),sK14(X0,X1,bool))))))) | ~p(s(bool,'const.bool.IN_2'(s(bool,X0),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),X1)))))) | s(bool,'T_0') = s(bool,X0)) ) | $spl3),
  inference(forward_demodulation,[],[f2541,f2178])).
fof(f2541,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.bool.IN_2'(s(bool,'const.bool.IN_2'(s(sK0,sK2),s(fun(sK0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(sK0),sK1))))),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),sK14(X0,X1,bool))))))) | ~p(s(bool,'const.bool.IN_2'(s(bool,X0),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),X1)))))) | s(bool,'T_0') = s(bool,X0)) ) | $spl3),
  inference(superposition,[],[f379,f2260])).
fof(f2538,plain,(
  ( ! [X35,X36] : (s(bool,'F_0') = s(bool,sK15('const.bool.IN_2'(s(sK0,sK2),s(fun(sK0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(sK0),sK1)))),X36,bool)) | ~p(s(bool,happ(s(fun(bool,bool),X36),s(bool,X35)))) | s(bool,'T_0') = s(bool,X35)) ) | $spl3),
  inference(forward_demodulation,[],[f2495,f2178])).
fof(f2495,plain,(
  ( ! [X35,X36] : (~p(s(bool,happ(s(fun(bool,bool),X36),s(bool,X35)))) | s(bool,'const.bool.IN_2'(s(sK0,sK2),s(fun(sK0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(sK0),sK1))))) = s(bool,sK15('const.bool.IN_2'(s(sK0,sK2),s(fun(sK0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(sK0),sK1)))),X36,bool)) | s(bool,'T_0') = s(bool,X35)) ) | $spl3),
  inference(superposition,[],[f388,f2260])).
fof(f2536,plain,(
  ( ! [X30,X31] : (~p(s(bool,'const.bool.IN_2'(s(bool,'F_0'),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),X31)))))) | ~p(s(bool,'const.bool.IN_2'(s(bool,X30),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),sK11('const.bool.IN_2'(s(sK0,sK2),s(fun(sK0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(sK0),sK1)))),X31,bool))))))) | s(bool,'T_0') = s(bool,X30)) ) | $spl3),
  inference(forward_demodulation,[],[f2493,f2178])).
fof(f2493,plain,(
  ( ! [X30,X31] : (~p(s(bool,'const.bool.IN_2'(s(bool,X30),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),sK11('const.bool.IN_2'(s(sK0,sK2),s(fun(sK0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(sK0),sK1)))),X31,bool))))))) | ~p(s(bool,'const.bool.IN_2'(s(bool,'const.bool.IN_2'(s(sK0,sK2),s(fun(sK0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(sK0),sK1))))),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),X31)))))) | s(bool,'T_0') = s(bool,X30)) ) | $spl3),
  inference(superposition,[],[f376,f2260])).
fof(f2418,plain,(
  ( ! [X14,X13] : (s(bool,X13) = s(bool,'const.bool.IN_2'(s(sK0,sK2),s(fun(sK0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(sK0),sK1))))) | s(bool,'T_0') = s(bool,'const.ind_type.FCONS_3'(s(bool,X13),s(fun('type.num.num',bool),X14),s('type.num.num','const.num.|48|_0')))) ) | $spl3),
  inference(superposition,[],[f2260,f368])).
fof(f2415,plain,(
  ( ! [X9] : (s(bool,X9) = s(bool,'const.bool.IN_2'(s(sK0,sK2),s(fun(sK0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(sK0),sK1))))) | s(bool,'T_0') = s(bool,'const.marker.Cong_1'(s(bool,X9)))) ) | $spl3),
  inference(superposition,[],[f2260,f297])).
fof(f2393,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),X2)))))) | s(bool,'F_0') = s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),sK11(X1,X2,X0))))))) )),
  inference(subsumption_resolution,[],[f2392,f289])).
fof(f2392,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'T_0')) | ~p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),X2)))))) | s(bool,'F_0') = s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),sK11(X1,X2,X0))))))) )),
  inference(forward_demodulation,[],[f2378,f296])).
fof(f2378,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,'const.bool.BOUNDED_1'(s(bool,X3)))) | ~p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),X2)))))) | s(bool,'F_0') = s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),sK11(X1,X2,X0))))))) )),
  inference(superposition,[],[f376,f787])).
fof(f2391,plain,(
  ( ! [X35,X33,X31,X34,X32] : (~p(s(bool,'const.bool.IN_2'(s(X31,happ(s(fun('type.num.num',X31),X33),s('type.num.num',X34))),s(fun(X31,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X31),X35)))))) | ~p(s(bool,'const.bool.IN_2'(s(X31,happ(s(fun('type.num.num',X31),X33),s('type.num.num',X34))),s(fun(X31,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X31),sK11('const.ind_type.FCONS_3'(s(X31,X32),s(fun('type.num.num',X31),X33),s('type.num.num','const.num.SUC_1'(s('type.num.num',X34)))),X35,X31)))))))) )),
  inference(forward_demodulation,[],[f2377,f390])).
fof(f2377,plain,(
  ( ! [X35,X33,X31,X34,X32] : (~p(s(bool,'const.bool.IN_2'(s(X31,happ(s(fun('type.num.num',X31),X33),s('type.num.num',X34))),s(fun(X31,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X31),sK11('const.ind_type.FCONS_3'(s(X31,X32),s(fun('type.num.num',X31),X33),s('type.num.num','const.num.SUC_1'(s('type.num.num',X34)))),X35,X31))))))) | ~p(s(bool,'const.bool.IN_2'(s(X31,'const.ind_type.FCONS_3'(s(X31,X32),s(fun('type.num.num',X31),X33),s('type.num.num','const.num.SUC_1'(s('type.num.num',X34))))),s(fun(X31,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X31),X35))))))) )),
  inference(superposition,[],[f376,f390])).
fof(f2390,plain,(
  ( ! [X30,X28,X29,X27] : (~p(s(bool,'const.bool.IN_2'(s(X27,X28),s(fun(X27,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X27),X30)))))) | ~p(s(bool,'const.bool.IN_2'(s(X27,X28),s(fun(X27,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X27),sK11('const.ind_type.FCONS_3'(s(X27,X28),s(fun('type.num.num',X27),X29),s('type.num.num','const.num.|48|_0')),X30,X27)))))))) )),
  inference(forward_demodulation,[],[f2376,f368])).
fof(f2376,plain,(
  ( ! [X30,X28,X29,X27] : (~p(s(bool,'const.bool.IN_2'(s(X27,X28),s(fun(X27,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X27),sK11('const.ind_type.FCONS_3'(s(X27,X28),s(fun('type.num.num',X27),X29),s('type.num.num','const.num.|48|_0')),X30,X27))))))) | ~p(s(bool,'const.bool.IN_2'(s(X27,'const.ind_type.FCONS_3'(s(X27,X28),s(fun('type.num.num',X27),X29),s('type.num.num','const.num.|48|_0'))),s(fun(X27,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X27),X30))))))) )),
  inference(superposition,[],[f376,f368])).
fof(f2388,plain,(
  ( ! [X24,X23,X25] : (~p(s(bool,'const.bool.IN_2'(s('type.list.list'(X23),X24),s(fun('type.list.list'(X23),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'(X23)),X25)))))) | ~p(s(bool,'const.bool.IN_2'(s('type.list.list'(X23),X24),s(fun('type.list.list'(X23),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'(X23)),sK11('const.list.APPEND_2'(s('type.list.list'(X23),'const.list.NIL_0'),s('type.list.list'(X23),X24)),X25,'type.list.list'(X23))))))))) )),
  inference(forward_demodulation,[],[f2374,f359])).
fof(f2374,plain,(
  ( ! [X24,X23,X25] : (~p(s(bool,'const.bool.IN_2'(s('type.list.list'(X23),X24),s(fun('type.list.list'(X23),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'(X23)),sK11('const.list.APPEND_2'(s('type.list.list'(X23),'const.list.NIL_0'),s('type.list.list'(X23),X24)),X25,'type.list.list'(X23)))))))) | ~p(s(bool,'const.bool.IN_2'(s('type.list.list'(X23),'const.list.APPEND_2'(s('type.list.list'(X23),'const.list.NIL_0'),s('type.list.list'(X23),X24))),s(fun('type.list.list'(X23),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'(X23)),X25))))))) )),
  inference(superposition,[],[f376,f359])).
fof(f2387,plain,(
  ( ! [X21,X22,X20] : (~p(s(bool,'const.bool.IN_2'(s('type.list.list'(X20),X21),s(fun('type.list.list'(X20),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'(X20)),X22)))))) | ~p(s(bool,'const.bool.IN_2'(s('type.list.list'(X20),X21),s(fun('type.list.list'(X20),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'(X20)),sK11('const.list.APPEND_2'(s('type.list.list'(X20),X21),s('type.list.list'(X20),'const.list.NIL_0')),X22,'type.list.list'(X20))))))))) )),
  inference(forward_demodulation,[],[f2373,f358])).
fof(f2373,plain,(
  ( ! [X21,X22,X20] : (~p(s(bool,'const.bool.IN_2'(s('type.list.list'(X20),X21),s(fun('type.list.list'(X20),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'(X20)),sK11('const.list.APPEND_2'(s('type.list.list'(X20),X21),s('type.list.list'(X20),'const.list.NIL_0')),X22,'type.list.list'(X20)))))))) | ~p(s(bool,'const.bool.IN_2'(s('type.list.list'(X20),'const.list.APPEND_2'(s('type.list.list'(X20),X21),s('type.list.list'(X20),'const.list.NIL_0'))),s(fun('type.list.list'(X20),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'(X20)),X22))))))) )),
  inference(superposition,[],[f376,f358])).
fof(f2386,plain,(
  ( ! [X19,X18] : (~p(s(bool,'const.bool.IN_2'(s(bool,'T_0'),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),X19)))))) | ~p(s(bool,'const.bool.IN_2'(s(bool,'T_0'),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),sK11('const.bool.BOUNDED_1'(s(bool,X18)),X19,bool)))))))) )),
  inference(forward_demodulation,[],[f2372,f296])).
fof(f2372,plain,(
  ( ! [X19,X18] : (~p(s(bool,'const.bool.IN_2'(s(bool,'T_0'),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),sK11('const.bool.BOUNDED_1'(s(bool,X18)),X19,bool))))))) | ~p(s(bool,'const.bool.IN_2'(s(bool,'const.bool.BOUNDED_1'(s(bool,X18))),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),X19))))))) )),
  inference(superposition,[],[f376,f296])).
fof(f2385,plain,(
  ( ! [X17,X15,X16] : (~p(s(bool,'const.bool.IN_2'(s(bool,'T_0'),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),X17)))))) | ~p(s(bool,'const.bool.IN_2'(s(bool,X16),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),sK11('const.bool.BOUNDED_1'(s(bool,X15)),X17,bool))))))) | s(bool,'F_0') = s(bool,X16)) )),
  inference(forward_demodulation,[],[f2371,f296])).
fof(f2371,plain,(
  ( ! [X17,X15,X16] : (~p(s(bool,'const.bool.IN_2'(s(bool,X16),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),sK11('const.bool.BOUNDED_1'(s(bool,X15)),X17,bool))))))) | ~p(s(bool,'const.bool.IN_2'(s(bool,'const.bool.BOUNDED_1'(s(bool,X15))),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),X17)))))) | s(bool,'F_0') = s(bool,X16)) )),
  inference(superposition,[],[f376,f787])).
fof(f2384,plain,(
  ( ! [X14,X13] : (~p(s(bool,'const.bool.IN_2'(s(bool,X13),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),X14)))))) | ~p(s(bool,'const.bool.IN_2'(s(bool,X13),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),sK11('const.marker.Cong_1'(s(bool,X13)),X14,bool)))))))) )),
  inference(forward_demodulation,[],[f2370,f297])).
fof(f2370,plain,(
  ( ! [X14,X13] : (~p(s(bool,'const.bool.IN_2'(s(bool,X13),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),sK11('const.marker.Cong_1'(s(bool,X13)),X14,bool))))))) | ~p(s(bool,'const.bool.IN_2'(s(bool,'const.marker.Cong_1'(s(bool,X13))),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),X14))))))) )),
  inference(superposition,[],[f376,f297])).
fof(f2383,plain,(
  ( ! [X12,X11] : (~p(s(bool,'const.bool.IN_2'(s(bool,X11),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),X12)))))) | ~p(s(bool,'const.bool.IN_2'(s(bool,'T_0'),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),sK11('const.marker.Cong_1'(s(bool,X11)),X12,bool))))))) | s(bool,'F_0') = s(bool,X11)) )),
  inference(forward_demodulation,[],[f2369,f297])).
fof(f2369,plain,(
  ( ! [X12,X11] : (~p(s(bool,'const.bool.IN_2'(s(bool,'T_0'),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),sK11('const.marker.Cong_1'(s(bool,X11)),X12,bool))))))) | ~p(s(bool,'const.bool.IN_2'(s(bool,'const.marker.Cong_1'(s(bool,X11))),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),X12)))))) | s(bool,'F_0') = s(bool,X11)) )),
  inference(superposition,[],[f376,f535])).
fof(f2382,plain,(
  ( ! [X10] : (~p(s(bool,'const.bool.IN_2'(s(bool,'F_0'),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),X10)))))) | ~p(s(bool,'const.bool.IN_2'(s(bool,'F_0'),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),sK11('const.bool.IN_2'(s(sK0,sK2),s(fun(sK0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(sK0),sK1)))),X10,bool)))))))) ) | $spl3),
  inference(forward_demodulation,[],[f2368,f2178])).
fof(f2368,plain,(
  ( ! [X10] : (~p(s(bool,'const.bool.IN_2'(s(bool,'F_0'),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),sK11('const.bool.IN_2'(s(sK0,sK2),s(fun(sK0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(sK0),sK1)))),X10,bool))))))) | ~p(s(bool,'const.bool.IN_2'(s(bool,'const.bool.IN_2'(s(sK0,sK2),s(fun(sK0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(sK0),sK1))))),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),X10))))))) ) | $spl3),
  inference(superposition,[],[f376,f2178])).
fof(f2381,plain,(
  ( ! [X8,X7,X9] : (~p(s(bool,'const.bool.IN_2'(s(bool,'F_0'),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),X9)))))) | ~p(s(bool,'const.bool.IN_2'(s(bool,'F_0'),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),sK11('const.bool.IN_2'(s(X7,X8),s(fun(X7,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X7),'const.list.NIL_0')))),X9,bool)))))))) )),
  inference(forward_demodulation,[],[f2367,f360])).
fof(f2367,plain,(
  ( ! [X8,X7,X9] : (~p(s(bool,'const.bool.IN_2'(s(bool,'F_0'),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),sK11('const.bool.IN_2'(s(X7,X8),s(fun(X7,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X7),'const.list.NIL_0')))),X9,bool))))))) | ~p(s(bool,'const.bool.IN_2'(s(bool,'const.bool.IN_2'(s(X7,X8),s(fun(X7,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X7),'const.list.NIL_0'))))),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),X9))))))) )),
  inference(superposition,[],[f376,f360])).
fof(f2366,plain,(
  ( ! [X6,X5] : (~p(s(bool,'const.bool.IN_2'(s(bool,X5),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),sK11('F_0',X6,bool))))))) | ~p(s(bool,'const.bool.IN_2'(s(bool,'F_0'),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),X6)))))) | s(bool,'T_0') = s(bool,X5)) )),
  inference(superposition,[],[f376,f299])).
fof(f2365,plain,(
  ( ! [X4,X3] : (~p(s(bool,'const.bool.IN_2'(s(bool,'F_0'),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),sK11(X3,X4,bool))))))) | ~p(s(bool,'const.bool.IN_2'(s(bool,X3),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),X4)))))) | s(bool,'T_0') = s(bool,X3)) )),
  inference(superposition,[],[f376,f299])).
fof(f2380,plain,(
  ( ! [X2,X0] : (~p(s(bool,'const.bool.IN_2'(s(bool,'T_0'),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),sK11(X0,X2,bool))))))) | ~p(s(bool,'const.bool.IN_2'(s(bool,X0),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),X2)))))) | s(bool,'F_0') = s(bool,X0)) )),
  inference(forward_demodulation,[],[f2364,f296])).
fof(f2364,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.bool.IN_2'(s(bool,'const.bool.BOUNDED_1'(s(bool,X1))),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),sK11(X0,X2,bool))))))) | ~p(s(bool,'const.bool.IN_2'(s(bool,X0),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),X2)))))) | s(bool,'F_0') = s(bool,X0)) )),
  inference(superposition,[],[f376,f787])).
fof(f2333,plain,(
  ( ! [X6,X4,X5] : (s(bool,'F_0') != s(bool,f(s(X4,sK19(X5,X6,bool,X4)))) | s(fun(X4,bool),X5) = s(fun(X4,bool),X6) | s(bool,'T_0') = s(bool,g(s(X4,sK19(X5,X6,bool,X4))))) )),
  inference(superposition,[],[f430,f299])).
fof(f2335,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') != s(bool,f(s(X0,sK19(X1,X2,bool,X0)))) | s(fun(X0,bool),X1) = s(fun(X0,bool),X2) | s(bool,'F_0') = s(bool,g(s(X0,sK19(X1,X2,bool,X0))))) )),
  inference(forward_demodulation,[],[f2332,f296])).
fof(f2332,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'const.bool.BOUNDED_1'(s(bool,X3))) != s(bool,f(s(X0,sK19(X1,X2,bool,X0)))) | s(fun(X0,bool),X1) = s(fun(X0,bool),X2) | s(bool,'F_0') = s(bool,g(s(X0,sK19(X1,X2,bool,X0))))) )),
  inference(superposition,[],[f430,f787])).
fof(f2331,plain,(
  ( ! [X6,X4,X5] : (s(X6,f(s(bool,'F_0'))) != s(X6,g(s(bool,'F_0'))) | s(fun(bool,X6),X4) = s(fun(bool,X6),X5) | s(bool,'T_0') = s(bool,sK19(X4,X5,X6,bool))) )),
  inference(superposition,[],[f430,f299])).
fof(f2334,plain,(
  ( ! [X2,X0,X1] : (s(X2,f(s(bool,'T_0'))) != s(X2,g(s(bool,'T_0'))) | s(fun(bool,X2),X0) = s(fun(bool,X2),X1) | s(bool,'F_0') = s(bool,sK19(X0,X1,X2,bool))) )),
  inference(forward_demodulation,[],[f2330,f296])).
fof(f2330,plain,(
  ( ! [X2,X0,X3,X1] : (s(X2,f(s(bool,'const.bool.BOUNDED_1'(s(bool,X3))))) != s(X2,g(s(bool,'const.bool.BOUNDED_1'(s(bool,X3))))) | s(fun(bool,X2),X0) = s(fun(bool,X2),X1) | s(bool,'F_0') = s(bool,sK19(X0,X1,X2,bool))) )),
  inference(superposition,[],[f430,f787])).
fof(f2313,plain,(
  ( ! [X4,X2,X0,X1] : (p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X4)))) | s(X0,X2) != s(X0,X4) | s(bool,'F_0') = s(bool,happ(s(fun(X0,bool),X1),s(X0,X2)))) )),
  inference(subsumption_resolution,[],[f2312,f289])).
fof(f2312,plain,(
  ( ! [X4,X2,X0,X1] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X4)))) | s(X0,X2) != s(X0,X4) | s(bool,'F_0') = s(bool,happ(s(fun(X0,bool),X1),s(X0,X2)))) )),
  inference(forward_demodulation,[],[f2296,f296])).
fof(f2296,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~p(s(bool,'const.bool.BOUNDED_1'(s(bool,X3)))) | p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X4)))) | s(X0,X2) != s(X0,X4) | s(bool,'F_0') = s(bool,happ(s(fun(X0,bool),X1),s(X0,X2)))) )),
  inference(superposition,[],[f387,f787])).
fof(f2305,plain,(
  ( ! [X24,X23,X25] : (s(bool,'T_0') != s(bool,X25) | ~p(s(bool,happ(s(fun(bool,bool),X24),s(bool,X23)))) | p(s(bool,happ(s(fun(bool,bool),X24),s(bool,X25)))) | s(bool,'F_0') = s(bool,X23)) )),
  inference(forward_demodulation,[],[f2289,f296])).
fof(f2289,plain,(
  ( ! [X24,X23,X25,X22] : (~p(s(bool,happ(s(fun(bool,bool),X24),s(bool,X23)))) | p(s(bool,happ(s(fun(bool,bool),X24),s(bool,X25)))) | s(bool,X25) != s(bool,'const.bool.BOUNDED_1'(s(bool,X22))) | s(bool,'F_0') = s(bool,X23)) )),
  inference(superposition,[],[f387,f787])).
fof(f2284,plain,(
  ( ! [X8,X7,X9] : (~p(s(bool,happ(s(fun(bool,bool),X8),s(bool,X7)))) | p(s(bool,happ(s(fun(bool,bool),X8),s(bool,X9)))) | s(bool,'F_0') != s(bool,X9) | s(bool,'T_0') = s(bool,X7)) )),
  inference(superposition,[],[f387,f299])).
fof(f2283,plain,(
  ( ! [X6,X4,X5] : (~p(s(bool,happ(s(fun(bool,bool),X5),s(bool,'F_0')))) | p(s(bool,happ(s(fun(bool,bool),X5),s(bool,X6)))) | s(bool,X4) != s(bool,X6) | s(bool,'T_0') = s(bool,X4)) )),
  inference(superposition,[],[f387,f299])).
fof(f2300,plain,(
  ( ! [X2,X0,X3] : (~p(s(bool,happ(s(fun(bool,bool),X2),s(bool,'T_0')))) | p(s(bool,happ(s(fun(bool,bool),X2),s(bool,X3)))) | s(bool,X0) != s(bool,X3) | s(bool,'F_0') = s(bool,X0)) )),
  inference(forward_demodulation,[],[f2282,f296])).
fof(f2282,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,happ(s(fun(bool,bool),X2),s(bool,'const.bool.BOUNDED_1'(s(bool,X1)))))) | p(s(bool,happ(s(fun(bool,bool),X2),s(bool,X3)))) | s(bool,X0) != s(bool,X3) | s(bool,'F_0') = s(bool,X0)) )),
  inference(superposition,[],[f387,f787])).
fof(f2263,plain,(
  ( ! [X14] : (s(bool,'F_0') = s(bool,sK15('const.bool.IN_2'(s(sK0,sK2),s(fun(sK0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(sK0),sK1)))),X14,bool)) | ~p(s(bool,happ(s(fun(bool,bool),X14),s(bool,'F_0'))))) ) | $spl3),
  inference(forward_demodulation,[],[f2249,f2178])).
fof(f2249,plain,(
  ( ! [X14] : (~p(s(bool,happ(s(fun(bool,bool),X14),s(bool,'F_0')))) | s(bool,'const.bool.IN_2'(s(sK0,sK2),s(fun(sK0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(sK0),sK1))))) = s(bool,sK15('const.bool.IN_2'(s(sK0,sK2),s(fun(sK0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(sK0),sK1)))),X14,bool))) ) | $spl3),
  inference(superposition,[],[f388,f2178])).
fof(f2260,plain,(
  ( ! [X4] : (s(bool,X4) = s(bool,'const.bool.IN_2'(s(sK0,sK2),s(fun(sK0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(sK0),sK1))))) | s(bool,'T_0') = s(bool,X4)) ) | $spl3),
  inference(subsumption_resolution,[],[f2241,f487])).
fof(f2241,plain,(
  ( ! [X4] : (p(s(bool,'F_0')) | s(bool,X4) = s(bool,'const.bool.IN_2'(s(sK0,sK2),s(fun(sK0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(sK0),sK1))))) | s(bool,'T_0') = s(bool,X4)) ) | $spl3),
  inference(superposition,[],[f575,f2178])).
fof(f2178,plain,(
  s(bool,'F_0') = s(bool,'const.bool.IN_2'(s(sK0,sK2),s(fun(sK0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(sK0),sK1))))) | $spl3),
  inference(unit_resulting_resolution,[],[f484,f308])).
fof(f2179,plain,(
  s(bool,'T_0') != s(bool,'const.bool.IN_2'(s(sK0,sK2),s(fun(sK0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(sK0),sK1))))) | $spl3),
  inference(unit_resulting_resolution,[],[f484,f303])).
fof(f2161,plain,(
  ( ! [X6,X8,X7,X5] : (s(X5,X6) != s(X5,X7) | s(bool,'T_0') = s(bool,'const.bool.IN_2'(s(X5,X6),s(fun(X5,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X5),'const.list.CONS_2'(s(X5,X7),s('type.list.list'(X5),X8)))))))) )),
  inference(subsumption_resolution,[],[f2107,f487])).
fof(f2107,plain,(
  ( ! [X6,X8,X7,X5] : (p(s(bool,'F_0')) | s(X5,X6) != s(X5,X7) | s(bool,'T_0') = s(bool,'const.bool.IN_2'(s(X5,X6),s(fun(X5,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X5),'const.list.CONS_2'(s(X5,X7),s('type.list.list'(X5),X8)))))))) )),
  inference(superposition,[],[f395,f299])).
fof(f2148,plain,(
  ( ! [X30,X31,X32] : (s(bool,'T_0') != s(bool,X31) | p(s(bool,'const.bool.IN_2'(s(bool,X31),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),'const.list.CONS_2'(s(bool,X30),s('type.list.list'(bool),X32)))))))) | s(bool,'F_0') = s(bool,X30)) )),
  inference(forward_demodulation,[],[f2087,f296])).
fof(f2087,plain,(
  ( ! [X30,X31,X29,X32] : (p(s(bool,'const.bool.IN_2'(s(bool,X31),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),'const.list.CONS_2'(s(bool,X30),s('type.list.list'(bool),X32)))))))) | s(bool,X31) != s(bool,'const.bool.BOUNDED_1'(s(bool,X29))) | s(bool,'F_0') = s(bool,X30)) )),
  inference(superposition,[],[f395,f787])).
fof(f2080,plain,(
  ( ! [X8,X7,X9] : (p(s(bool,'const.bool.IN_2'(s(bool,X8),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),'const.list.CONS_2'(s(bool,X7),s('type.list.list'(bool),X9)))))))) | s(bool,'F_0') != s(bool,X8) | s(bool,'T_0') = s(bool,X7)) )),
  inference(superposition,[],[f395,f299])).
fof(f2079,plain,(
  ( ! [X6,X4,X5] : (p(s(bool,'const.bool.IN_2'(s(bool,X5),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),'const.list.CONS_2'(s(bool,'F_0'),s('type.list.list'(bool),X6)))))))) | s(bool,X4) != s(bool,X5) | s(bool,'T_0') = s(bool,X4)) )),
  inference(superposition,[],[f395,f299])).
fof(f2144,plain,(
  ( ! [X2,X0,X3] : (p(s(bool,'const.bool.IN_2'(s(bool,X2),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),'const.list.CONS_2'(s(bool,'T_0'),s('type.list.list'(bool),X3)))))))) | s(bool,X0) != s(bool,X2) | s(bool,'F_0') = s(bool,X0)) )),
  inference(forward_demodulation,[],[f2078,f296])).
fof(f2078,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,'const.bool.IN_2'(s(bool,X2),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),'const.list.CONS_2'(s(bool,'const.bool.BOUNDED_1'(s(bool,X1))),s('type.list.list'(bool),X3)))))))) | s(bool,X0) != s(bool,X2) | s(bool,'F_0') = s(bool,X0)) )),
  inference(superposition,[],[f395,f787])).
fof(f2134,plain,(
  ( ! [X30,X31,X32] : (s(bool,'T_0') != s(bool,X31) | p(s(bool,'const.bool.IN_2'(s(bool,X30),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),'const.list.CONS_2'(s(bool,X31),s('type.list.list'(bool),X32)))))))) | s(bool,'F_0') = s(bool,X30)) )),
  inference(forward_demodulation,[],[f2068,f296])).
fof(f2068,plain,(
  ( ! [X30,X31,X29,X32] : (p(s(bool,'const.bool.IN_2'(s(bool,X30),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),'const.list.CONS_2'(s(bool,X31),s('type.list.list'(bool),X32)))))))) | s(bool,X31) != s(bool,'const.bool.BOUNDED_1'(s(bool,X29))) | s(bool,'F_0') = s(bool,X30)) )),
  inference(superposition,[],[f395,f787])).
fof(f2061,plain,(
  ( ! [X8,X7,X9] : (p(s(bool,'const.bool.IN_2'(s(bool,X7),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),'const.list.CONS_2'(s(bool,X8),s('type.list.list'(bool),X9)))))))) | s(bool,'F_0') != s(bool,X8) | s(bool,'T_0') = s(bool,X7)) )),
  inference(superposition,[],[f395,f299])).
fof(f2060,plain,(
  ( ! [X6,X4,X5] : (p(s(bool,'const.bool.IN_2'(s(bool,'F_0'),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),'const.list.CONS_2'(s(bool,X5),s('type.list.list'(bool),X6)))))))) | s(bool,X4) != s(bool,X5) | s(bool,'T_0') = s(bool,X4)) )),
  inference(superposition,[],[f395,f299])).
fof(f2130,plain,(
  ( ! [X2,X0,X3] : (p(s(bool,'const.bool.IN_2'(s(bool,'T_0'),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),'const.list.CONS_2'(s(bool,X2),s('type.list.list'(bool),X3)))))))) | s(bool,X0) != s(bool,X2) | s(bool,'F_0') = s(bool,X0)) )),
  inference(forward_demodulation,[],[f2059,f296])).
fof(f2059,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,'const.bool.IN_2'(s(bool,'const.bool.BOUNDED_1'(s(bool,X1))),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),'const.list.CONS_2'(s(bool,X2),s('type.list.list'(bool),X3)))))))) | s(bool,X0) != s(bool,X2) | s(bool,'F_0') = s(bool,X0)) )),
  inference(superposition,[],[f395,f787])).
fof(f2109,plain,(
  ( ! [X0,X3,X1] : (p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X1),s('type.list.list'(X0),X3))))))))) )),
  inference(forward_demodulation,[],[f2057,f368])).
fof(f2057,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,'const.bool.IN_2'(s(X0,'const.ind_type.FCONS_3'(s(X0,X1),s(fun('type.num.num',X0),X2),s('type.num.num','const.num.|48|_0'))),s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X1),s('type.list.list'(X0),X3))))))))) )),
  inference(unit_resulting_resolution,[],[f368,f395])).
fof(f2108,plain,(
  ( ! [X4,X2,X0,X3] : (p(s(bool,'const.bool.IN_2'(s(X0,happ(s(fun('type.num.num',X0),X2),s('type.num.num',X3))),s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),'const.list.CONS_2'(s(X0,happ(s(fun('type.num.num',X0),X2),s('type.num.num',X3))),s('type.list.list'(X0),X4))))))))) )),
  inference(forward_demodulation,[],[f2058,f390])).
fof(f2058,plain,(
  ( ! [X4,X2,X0,X3,X1] : (p(s(bool,'const.bool.IN_2'(s(X0,'const.ind_type.FCONS_3'(s(X0,X1),s(fun('type.num.num',X0),X2),s('type.num.num','const.num.SUC_1'(s('type.num.num',X3))))),s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),'const.list.CONS_2'(s(X0,happ(s(fun('type.num.num',X0),X2),s('type.num.num',X3))),s('type.list.list'(X0),X4))))))))) )),
  inference(unit_resulting_resolution,[],[f390,f395])).
fof(f1931,plain,(
  ( ! [X43,X44,X42] : (s(bool,'T_0') = s(bool,sK15('const.bool.BOUNDED_1'(s(bool,X42)),X44,bool)) | ~p(s(bool,happ(s(fun(bool,bool),X44),s(bool,X43)))) | s(bool,'F_0') = s(bool,X43)) )),
  inference(forward_demodulation,[],[f1873,f296])).
fof(f1873,plain,(
  ( ! [X43,X44,X42] : (~p(s(bool,happ(s(fun(bool,bool),X44),s(bool,X43)))) | s(bool,'const.bool.BOUNDED_1'(s(bool,X42))) = s(bool,sK15('const.bool.BOUNDED_1'(s(bool,X42)),X44,bool)) | s(bool,'F_0') = s(bool,X43)) )),
  inference(superposition,[],[f388,f787])).
fof(f1921,plain,(
  ( ! [X99,X100] : (p(s(bool,happ(s(fun(bool,bool),X100),s(bool,'T_0')))) | ~p(s(bool,happ(s(fun(bool,bool),X100),s(bool,X99)))) | s(bool,'F_0') = s(bool,sK15(X99,X100,bool))) )),
  inference(forward_demodulation,[],[f1855,f296])).
fof(f1855,plain,(
  ( ! [X101,X99,X100] : (p(s(bool,happ(s(fun(bool,bool),X100),s(bool,'const.bool.BOUNDED_1'(s(bool,X101)))))) | ~p(s(bool,happ(s(fun(bool,bool),X100),s(bool,X99)))) | s(bool,'F_0') = s(bool,sK15(X99,X100,bool))) )),
  inference(superposition,[],[f389,f787])).
fof(f1920,plain,(
  ( ! [X97,X96] : (~p(s(bool,happ(s(fun(bool,bool),X97),s(bool,'T_0')))) | p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X97)))) | s(bool,'F_0') = s(bool,sK8(X96,X97,bool))) )),
  inference(forward_demodulation,[],[f1854,f296])).
fof(f1854,plain,(
  ( ! [X97,X98,X96] : (~p(s(bool,happ(s(fun(bool,bool),X97),s(bool,'const.bool.BOUNDED_1'(s(bool,X98)))))) | p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X97)))) | s(bool,'F_0') = s(bool,sK8(X96,X97,bool))) )),
  inference(superposition,[],[f370,f787])).
fof(f1918,plain,(
  ( ! [X83,X81] : (~p(s(bool,happ(s(fun(bool,bool),X83),s(bool,'T_0')))) | s(bool,X81) = s(bool,sK15(X81,X83,bool)) | s(bool,'F_0') = s(bool,X81)) )),
  inference(forward_demodulation,[],[f1849,f296])).
fof(f1849,plain,(
  ( ! [X83,X81,X82] : (~p(s(bool,happ(s(fun(bool,bool),X83),s(bool,'const.bool.BOUNDED_1'(s(bool,X82)))))) | s(bool,X81) = s(bool,sK15(X81,X83,bool)) | s(bool,'F_0') = s(bool,X81)) )),
  inference(superposition,[],[f388,f787])).
fof(f1905,plain,(
  ( ! [X50,X51,X49] : (p(s(bool,'|dollar|exists_1'(s(fun(X49,bool),X50)))) | s(bool,'F_0') = s(bool,happ(s(fun(X49,bool),X50),s(X49,sK8(X51,X50,X49))))) )),
  inference(subsumption_resolution,[],[f1904,f289])).
fof(f1904,plain,(
  ( ! [X50,X51,X49] : (~p(s(bool,'T_0')) | p(s(bool,'|dollar|exists_1'(s(fun(X49,bool),X50)))) | s(bool,'F_0') = s(bool,happ(s(fun(X49,bool),X50),s(X49,sK8(X51,X50,X49))))) )),
  inference(forward_demodulation,[],[f1837,f296])).
fof(f1837,plain,(
  ( ! [X52,X50,X51,X49] : (~p(s(bool,'const.bool.BOUNDED_1'(s(bool,X52)))) | p(s(bool,'|dollar|exists_1'(s(fun(X49,bool),X50)))) | s(bool,'F_0') = s(bool,happ(s(fun(X49,bool),X50),s(X49,sK8(X51,X50,X49))))) )),
  inference(superposition,[],[f370,f787])).
fof(f1903,plain,(
  ( ! [X47,X45,X46] : (s(X45,X47) = s(X45,sK15(X47,X46,X45)) | s(bool,'F_0') = s(bool,happ(s(fun(X45,bool),X46),s(X45,X47)))) )),
  inference(subsumption_resolution,[],[f1902,f289])).
fof(f1902,plain,(
  ( ! [X47,X45,X46] : (~p(s(bool,'T_0')) | s(X45,X47) = s(X45,sK15(X47,X46,X45)) | s(bool,'F_0') = s(bool,happ(s(fun(X45,bool),X46),s(X45,X47)))) )),
  inference(forward_demodulation,[],[f1836,f296])).
fof(f1836,plain,(
  ( ! [X47,X45,X48,X46] : (~p(s(bool,'const.bool.BOUNDED_1'(s(bool,X48)))) | s(X45,X47) = s(X45,sK15(X47,X46,X45)) | s(bool,'F_0') = s(bool,happ(s(fun(X45,bool),X46),s(X45,X47)))) )),
  inference(superposition,[],[f388,f787])).
fof(f1816,plain,(
  ( ! [X2,X1] : (s(bool,X1) = s(bool,X2) | s(bool,'F_0') = s(bool,X2) | s(bool,'F_0') = s(bool,X1)) )),
  inference(superposition,[],[f787,f787])).
fof(f1804,plain,(
  ( ! [X21,X19,X20] : (s(bool,X19) = s(bool,'const.bool.BOUNDED_1'(s(bool,X21))) | s(bool,'F_0') = s(bool,'const.ind_type.FCONS_3'(s(bool,X19),s(fun('type.num.num',bool),X20),s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f787,f368])).
fof(f1801,plain,(
  ( ! [X12,X13] : (s(bool,X12) = s(bool,'const.bool.BOUNDED_1'(s(bool,X13))) | s(bool,'F_0') = s(bool,'const.marker.Cong_1'(s(bool,X12)))) )),
  inference(superposition,[],[f787,f297])).
fof(f1778,plain,(
  ( ! [X121,X118,X120,X119,X117] : (s('type.list.list'(X117),'const.list.NIL_0') != s('type.list.list'(X117),'const.list.APPEND_2'(s('type.list.list'(X117),happ(s(fun('type.num.num','type.list.list'(X117)),X119),s('type.num.num',X120))),s('type.list.list'(X117),X121))) | s('type.list.list'(X117),'const.list.NIL_0') = s('type.list.list'(X117),'const.ind_type.FCONS_3'(s('type.list.list'(X117),X118),s(fun('type.num.num','type.list.list'(X117)),X119),s('type.num.num','const.num.SUC_1'(s('type.num.num',X120)))))) )),
  inference(superposition,[],[f381,f390])).
fof(f1775,plain,(
  ( ! [X103,X105,X102,X106,X104] : (s('type.list.list'(X102),'const.list.NIL_0') != s('type.list.list'(X102),'const.list.APPEND_2'(s('type.list.list'(X102),X106),s('type.list.list'(X102),happ(s(fun('type.num.num','type.list.list'(X102)),X104),s('type.num.num',X105))))) | s('type.list.list'(X102),'const.list.NIL_0') = s('type.list.list'(X102),'const.ind_type.FCONS_3'(s('type.list.list'(X102),X103),s(fun('type.num.num','type.list.list'(X102)),X104),s('type.num.num','const.num.SUC_1'(s('type.num.num',X105)))))) )),
  inference(superposition,[],[f382,f390])).
fof(f1792,plain,(
  ( ! [X59,X60,X58] : (s(bool,'F_0') != s(bool,happ(s(fun('type.num.num',bool),X59),s('type.num.num',X60))) | s(bool,'F_0') = s(bool,'const.ind_type.FCONS_3'(s(bool,X58),s(fun('type.num.num',bool),X59),s('type.num.num','const.num.SUC_1'(s('type.num.num',X60)))))) )),
  inference(forward_demodulation,[],[f1764,f297])).
fof(f1764,plain,(
  ( ! [X59,X60,X58] : (s(bool,'F_0') != s(bool,'const.marker.Cong_1'(s(bool,happ(s(fun('type.num.num',bool),X59),s('type.num.num',X60))))) | s(bool,'F_0') = s(bool,'const.ind_type.FCONS_3'(s(bool,X58),s(fun('type.num.num',bool),X59),s('type.num.num','const.num.SUC_1'(s('type.num.num',X60)))))) )),
  inference(superposition,[],[f728,f390])).
fof(f1790,plain,(
  ( ! [X52,X53,X51] : (s(bool,'T_0') = s(bool,happ(s(fun('type.num.num',bool),X52),s('type.num.num',X53))) | s(bool,'F_0') = s(bool,'const.ind_type.FCONS_3'(s(bool,X51),s(fun('type.num.num',bool),X52),s('type.num.num','const.num.SUC_1'(s('type.num.num',X53)))))) )),
  inference(forward_demodulation,[],[f1762,f297])).
fof(f1762,plain,(
  ( ! [X52,X53,X51] : (s(bool,'T_0') = s(bool,'const.marker.Cong_1'(s(bool,happ(s(fun('type.num.num',bool),X52),s('type.num.num',X53))))) | s(bool,'F_0') = s(bool,'const.ind_type.FCONS_3'(s(bool,X51),s(fun('type.num.num',bool),X52),s('type.num.num','const.num.SUC_1'(s('type.num.num',X53)))))) )),
  inference(superposition,[],[f535,f390])).
fof(f1781,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s(X0,happ(s(fun('type.num.num',X0),X2),s('type.num.num',X3))) = s(X0,sK15('const.ind_type.FCONS_3'(s(X0,X1),s(fun('type.num.num',X0),X2),s('type.num.num','const.num.SUC_1'(s('type.num.num',X3)))),X4,X0)) | ~p(s(bool,happ(s(fun(X0,bool),X4),s(X0,happ(s(fun('type.num.num',X0),X2),s('type.num.num',X3))))))) )),
  inference(forward_demodulation,[],[f1748,f390])).
fof(f1748,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~p(s(bool,happ(s(fun(X0,bool),X4),s(X0,happ(s(fun('type.num.num',X0),X2),s('type.num.num',X3)))))) | s(X0,'const.ind_type.FCONS_3'(s(X0,X1),s(fun('type.num.num',X0),X2),s('type.num.num','const.num.SUC_1'(s('type.num.num',X3))))) = s(X0,sK15('const.ind_type.FCONS_3'(s(X0,X1),s(fun('type.num.num',X0),X2),s('type.num.num','const.num.SUC_1'(s('type.num.num',X3)))),X4,X0))) )),
  inference(superposition,[],[f388,f390])).
fof(f1747,plain,(
  ( ! [X2,X0,X1] : (s(bool,'F_0') = s(bool,happ(s(fun('type.num.num',bool),X1),s('type.num.num',X2))) | s(bool,'T_0') = s(bool,'const.ind_type.FCONS_3'(s(bool,X0),s(fun('type.num.num',bool),X1),s('type.num.num','const.num.SUC_1'(s('type.num.num',X2)))))) )),
  inference(superposition,[],[f390,f299])).
fof(f1724,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2)))) | s(bool,'T_0') = s(bool,happ(s(fun(X0,bool),X1),s(X0,sK15(X2,X1,X0))))) )),
  inference(subsumption_resolution,[],[f1722,f487])).
fof(f1722,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,'F_0')) | ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2)))) | s(bool,'T_0') = s(bool,happ(s(fun(X0,bool),X1),s(X0,sK15(X2,X1,X0))))) )),
  inference(superposition,[],[f389,f299])).
fof(f1721,plain,(
  ( ! [X0,X1] : (p(s(bool,happ(s(fun(bool,bool),X1),s(bool,'F_0')))) | ~p(s(bool,happ(s(fun(bool,bool),X1),s(bool,X0)))) | s(bool,'T_0') = s(bool,sK15(X0,X1,bool))) )),
  inference(superposition,[],[f389,f299])).
fof(f1723,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3)))) | p(s(bool,happ(s(fun(X0,bool),X1),s(X0,sK15(X3,'const.ind_type.FCONS_3'(s(fun(X0,bool),X1),s(fun('type.num.num',fun(X0,bool)),X2),s('type.num.num','const.num.|48|_0')),X0)))))) )),
  inference(forward_demodulation,[],[f1720,f368])).
fof(f1720,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,happ(s(fun(X0,bool),X1),s(X0,sK15(X3,'const.ind_type.FCONS_3'(s(fun(X0,bool),X1),s(fun('type.num.num',fun(X0,bool)),X2),s('type.num.num','const.num.|48|_0')),X0))))) | ~p(s(bool,happ(s(fun(X0,bool),'const.ind_type.FCONS_3'(s(fun(X0,bool),X1),s(fun('type.num.num',fun(X0,bool)),X2),s('type.num.num','const.num.|48|_0'))),s(X0,X3))))) )),
  inference(superposition,[],[f389,f368])).
fof(f1713,plain,(
  ( ! [X12,X10,X13,X11] : (s('type.list.list'(X10),'const.list.NIL_0') != s('type.list.list'(X10),'const.list.APPEND_2'(s('type.list.list'(X10),X13),s('type.list.list'(X10),X11))) | s('type.list.list'(X10),'const.list.NIL_0') = s('type.list.list'(X10),'const.ind_type.FCONS_3'(s('type.list.list'(X10),X11),s(fun('type.num.num','type.list.list'(X10)),X12),s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f382,f368])).
fof(f1709,plain,(
  ( ! [X6,X4,X5] : (s('type.list.list'(X4),'const.list.NIL_0') != s('type.list.list'(X4),'const.list.APPEND_2'(s('type.list.list'(X4),X6),s('type.list.list'(X4),X5))) | s('type.list.list'(X4),'const.list.NIL_0') = s('type.list.list'(X4),'const.list.APPEND_2'(s('type.list.list'(X4),'const.list.NIL_0'),s('type.list.list'(X4),X5)))) )),
  inference(superposition,[],[f382,f359])).
fof(f1708,plain,(
  ( ! [X2,X3,X1] : (s('type.list.list'(X1),'const.list.NIL_0') != s('type.list.list'(X1),'const.list.APPEND_2'(s('type.list.list'(X1),X3),s('type.list.list'(X1),X2))) | s('type.list.list'(X1),'const.list.NIL_0') = s('type.list.list'(X1),'const.list.APPEND_2'(s('type.list.list'(X1),X2),s('type.list.list'(X1),'const.list.NIL_0')))) )),
  inference(superposition,[],[f382,f358])).
fof(f1320,plain,(
  ( ! [X14,X15] : (~p(s(bool,happ(s(fun(bool,bool),X15),s(bool,'F_0')))) | p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X15)))) | s(bool,'T_0') = s(bool,sK8(X14,X15,bool))) )),
  inference(superposition,[],[f370,f299])).
fof(f375,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),X1)))))) | s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),sK11(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.NIL_0'))))),s('type.list.list'(X0),sK12(X2,X1,X0))))) )),
  inference(cnf_transformation,[],[f256])).
fof(f376,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),sK11(X2,X1,X0))))))) | ~p(s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),X1))))))) )),
  inference(cnf_transformation,[],[f256])).
fof(f378,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),X1)))))) | s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),sK13(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.NIL_0'))))),s('type.list.list'(X0),sK14(X2,X1,X0))))) )),
  inference(cnf_transformation,[],[f259])).
fof(f379,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),sK14(X2,X1,X0))))))) | ~p(s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),X1))))))) )),
  inference(cnf_transformation,[],[f259])).
fof(f394,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),X3)))))))) | s(X0,X1) = s(X0,X2) | p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),X3))))))) )),
  inference(cnf_transformation,[],[f268])).
fof(f396,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),X3)))))) | p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),X3))))))))) )),
  inference(cnf_transformation,[],[f268])).
fof(f403,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),X3)))))))) | p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),X2)))))) | p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),X3))))))) )),
  inference(cnf_transformation,[],[f272])).
fof(f404,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),X2)))))) | p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),X3))))))))) )),
  inference(cnf_transformation,[],[f272])).
fof(f406,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.list.list'(X0),X1) = s('type.list.list'(X0),X3) | p(s(bool,'const.bool.IN_2'(s(X0,X5),s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),X1)))))) | p(s(bool,'const.bool.IN_2'(s(X0,X5),s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),X2)))))) | s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.NIL_0'))))),s('type.list.list'(X0),X2))) != s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.NIL_0'))))),s('type.list.list'(X0),X4)))) )),
  inference(cnf_transformation,[],[f187])).
fof(f187,plain,(
  ! [X0,X1,X2,X3,X4,X5] : (s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.NIL_0'))))),s('type.list.list'(X0),X2))) != s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.NIL_0'))))),s('type.list.list'(X0),X4))) | p(s(bool,'const.bool.IN_2'(s(X0,X5),s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),X2)))))) | p(s(bool,'const.bool.IN_2'(s(X0,X5),s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),X1)))))) | (s('type.list.list'(X0),X1) = s('type.list.list'(X0),X3) & s('type.list.list'(X0),X2) = s('type.list.list'(X0),X4)))),
  inference(flattening,[],[f186])).
fof(f186,plain,(
  ! [X0,X1,X2,X3,X4,X5] : ((s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.NIL_0'))))),s('type.list.list'(X0),X2))) != s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.NIL_0'))))),s('type.list.list'(X0),X4))) | p(s(bool,'const.bool.IN_2'(s(X0,X5),s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),X2)))))) | p(s(bool,'const.bool.IN_2'(s(X0,X5),s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),X1))))))) | (s('type.list.list'(X0),X1) = s('type.list.list'(X0),X3) & s('type.list.list'(X0),X2) = s('type.list.list'(X0),X4)))),
  inference(ennf_transformation,[],[f151])).
fof(f151,plain,(
  ! [X0,X1,X2,X3,X4,X5] : ((s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.NIL_0'))))),s('type.list.list'(X0),X2))) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.NIL_0'))))),s('type.list.list'(X0),X4))) & ~p(s(bool,'const.bool.IN_2'(s(X0,X5),s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),X2)))))) & ~p(s(bool,'const.bool.IN_2'(s(X0,X5),s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),X1))))))) => (s('type.list.list'(X0),X1) = s('type.list.list'(X0),X3) & s('type.list.list'(X0),X2) = s('type.list.list'(X0),X4)))),
  inference(flattening,[],[f150])).
fof(f150,plain,(
  ! [X0] : ! [X1,X2,X3,X4,X5] : ((s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.NIL_0'))))),s('type.list.list'(X0),X2))) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.NIL_0'))))),s('type.list.list'(X0),X4))) & ~p(s(bool,'const.bool.IN_2'(s(X0,X5),s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),X2)))))) & ~p(s(bool,'const.bool.IN_2'(s(X0,X5),s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),X1))))))) => (s('type.list.list'(X0),X1) = s('type.list.list'(X0),X3) & s('type.list.list'(X0),X2) = s('type.list.list'(X0),X4)))),
  inference(rectify,[],[f8])).
fof(f8,axiom,(
  ! [X6] : ! [X9,X8,X10,X7,X15] : ((s('type.list.list'(X6),'const.list.APPEND_2'(s('type.list.list'(X6),'const.list.APPEND_2'(s('type.list.list'(X6),X9),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X15),s('type.list.list'(X6),'const.list.NIL_0'))))),s('type.list.list'(X6),X8))) = s('type.list.list'(X6),'const.list.APPEND_2'(s('type.list.list'(X6),'const.list.APPEND_2'(s('type.list.list'(X6),X10),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X15),s('type.list.list'(X6),'const.list.NIL_0'))))),s('type.list.list'(X6),X7))) & ~p(s(bool,'const.bool.IN_2'(s(X6,X15),s(fun(X6,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X6),X8)))))) & ~p(s(bool,'const.bool.IN_2'(s(X6,X15),s(fun(X6,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X6),X9))))))) => (s('type.list.list'(X6),X9) = s('type.list.list'(X6),X10) & s('type.list.list'(X6),X7) = s('type.list.list'(X6),X8)))),
  file('thm.rich_list.MEM_SING_APPEND','thm.list.MEM_APPEND_lemma')).
fof(f407,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.list.list'(X0),X2) = s('type.list.list'(X0),X4) | p(s(bool,'const.bool.IN_2'(s(X0,X5),s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),X1)))))) | p(s(bool,'const.bool.IN_2'(s(X0,X5),s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),X2)))))) | s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.NIL_0'))))),s('type.list.list'(X0),X2))) != s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.NIL_0'))))),s('type.list.list'(X0),X4)))) )),
  inference(cnf_transformation,[],[f187])).
fof(f371,plain,(
  ( ! [X4,X2,X0,X1] : (~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X4)))) | p(s(bool,happ(s(fun(X0,bool),X1),s(X0,sK10(X2,X1,X0))))) | p(s(bool,happ(s(fun(X0,bool),X2),s(X0,sK9(X2,X1,X0)))))) )),
  inference(cnf_transformation,[],[f252])).
fof(f252,plain,(
  ! [X0,X1,X2] : ((p(s(bool,happ(s(fun(X0,bool),X2),s(X0,sK9(X2,X1,X0))))) & ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,sK9(X2,X1,X0)))))) | ! [X4] : ~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X4)))) | p(s(bool,happ(s(fun(X0,bool),X1),s(X0,sK10(X2,X1,X0))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK9,sK10])],[f251])).
fof(f251,plain,(
  ! [X0,X1,X2] : (? [X5] : (p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X5)))) & ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X5))))) | ! [X4] : ~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X4)))) | ? [X3] : p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3)))))),
  inference(rectify,[],[f185])).
fof(f185,plain,(
  ! [X0,X1,X2] : (? [X3] : (p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X3)))) & ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3))))) | ! [X4] : ~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X4)))) | ? [X5] : p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X5)))))),
  inference(flattening,[],[f184])).
fof(f184,plain,(
  ! [X0,X1,X2] : (? [X3] : (p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X3)))) & ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3))))) | (! [X4] : ~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X4)))) | ? [X5] : p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X5))))))),
  inference(ennf_transformation,[],[f123])).
fof(f123,plain,(
  ! [X0,X1,X2] : (! [X3] : (p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X3)))) => p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3))))) => (? [X4] : p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X4)))) => ? [X5] : p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X5))))))),
  inference(flattening,[],[f122])).
fof(f122,plain,(
  ! [X0] : ! [X1,X2] : (! [X3] : (p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X3)))) => p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3))))) => (? [X4] : p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X4)))) => ? [X5] : p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X5))))))),
  inference(rectify,[],[f24])).
fof(f24,axiom,(
  ! [X6] : ! [X31,X24] : (! [X15] : (p(s(bool,happ(s(fun(X6,bool),X24),s(X6,X15)))) => p(s(bool,happ(s(fun(X6,bool),X31),s(X6,X15))))) => (? [X15] : p(s(bool,happ(s(fun(X6,bool),X24),s(X6,X15)))) => ? [X15] : p(s(bool,happ(s(fun(X6,bool),X31),s(X6,X15))))))),
  file('thm.rich_list.MEM_SING_APPEND','thm.bool.MONO_EXISTS')).
fof(f372,plain,(
  ( ! [X4,X2,X0,X1] : (~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,sK9(X2,X1,X0))))) | ~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X4)))) | p(s(bool,happ(s(fun(X0,bool),X1),s(X0,sK10(X2,X1,X0)))))) )),
  inference(cnf_transformation,[],[f252])).
fof(f387,plain,(
  ( ! [X4,X2,X0,X1] : (~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X4)))) | p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2)))) | s(X0,X2) != s(X0,X4)) )),
  inference(cnf_transformation,[],[f266])).
fof(f266,plain,(
  ! [X0,X1,X2] : ((! [X4] : (s(X0,X2) != s(X0,X4) | ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X4))))) | p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2))))) & (~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2)))) | (s(X0,X2) = s(X0,sK15(X2,X1,X0)) & p(s(bool,happ(s(fun(X0,bool),X1),s(X0,sK15(X2,X1,X0))))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK15])],[f265])).
fof(f265,plain,(
  ! [X0,X1,X2] : ((! [X4] : (s(X0,X2) != s(X0,X4) | ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X4))))) | p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2))))) & (~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2)))) | ? [X3] : (s(X0,X2) = s(X0,X3) & p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3)))))))),
  inference(rectify,[],[f264])).
fof(f264,plain,(
  ! [X0,X1,X2] : ((! [X3] : (s(X0,X2) != s(X0,X3) | ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3))))) | p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2))))) & (~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2)))) | ? [X3] : (s(X0,X2) = s(X0,X3) & p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3)))))))),
  inference(nnf_transformation,[],[f135])).
fof(f135,plain,(
  ! [X0,X1,X2] : (? [X3] : (s(X0,X2) = s(X0,X3) & p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3))))) <=> p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2)))))),
  inference(flattening,[],[f134])).
fof(f134,plain,(
  ! [X0] : ! [X1,X2] : (? [X3] : (s(X0,X2) = s(X0,X3) & p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3))))) <=> p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2)))))),
  inference(rectify,[],[f64])).
fof(f64,axiom,(
  ! [X6] : ! [X24,X9] : (? [X15] : (s(X6,X9) = s(X6,X15) & p(s(bool,happ(s(fun(X6,bool),X24),s(X6,X15))))) <=> p(s(bool,happ(s(fun(X6,bool),X24),s(X6,X9)))))),
  file('thm.rich_list.MEM_SING_APPEND','thm.bool.UNWIND_THM2')).
fof(f388,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2)))) | s(X0,X2) = s(X0,sK15(X2,X1,X0))) )),
  inference(cnf_transformation,[],[f266])).
fof(f389,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,happ(s(fun(X0,bool),X1),s(X0,sK15(X2,X1,X0))))) | ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2))))) )),
  inference(cnf_transformation,[],[f266])).
fof(f789,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3)))) | s(X0,X3) = s(X0,sK15(X3,'const.ind_type.FCONS_3'(s(fun(X0,bool),X1),s(fun('type.num.num',fun(X0,bool)),X2),s('type.num.num','const.num.|48|_0')),X0))) )),
  inference(superposition,[],[f388,f368])).
fof(f808,plain,(
  ( ! [X23,X21,X22,X20] : (s(X20,X21) = s(X20,sK15('const.ind_type.FCONS_3'(s(X20,X21),s(fun('type.num.num',X20),X22),s('type.num.num','const.num.|48|_0')),X23,X20)) | ~p(s(bool,happ(s(fun(X20,bool),X23),s(X20,X21))))) )),
  inference(forward_demodulation,[],[f799,f368])).
fof(f799,plain,(
  ( ! [X23,X21,X22,X20] : (~p(s(bool,happ(s(fun(X20,bool),X23),s(X20,X21)))) | s(X20,'const.ind_type.FCONS_3'(s(X20,X21),s(fun('type.num.num',X20),X22),s('type.num.num','const.num.|48|_0'))) = s(X20,sK15('const.ind_type.FCONS_3'(s(X20,X21),s(fun('type.num.num',X20),X22),s('type.num.num','const.num.|48|_0')),X23,X20))) )),
  inference(superposition,[],[f388,f368])).
fof(f802,plain,(
  ( ! [X6,X7,X5] : (s(bool,'F_0') = s(bool,sK15('const.bool.IN_2'(s(X5,X6),s(fun(X5,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X5),'const.list.NIL_0')))),X7,bool)) | ~p(s(bool,happ(s(fun(bool,bool),X7),s(bool,'F_0'))))) )),
  inference(forward_demodulation,[],[f793,f360])).
fof(f793,plain,(
  ( ! [X6,X7,X5] : (~p(s(bool,happ(s(fun(bool,bool),X7),s(bool,'F_0')))) | s(bool,'const.bool.IN_2'(s(X5,X6),s(fun(X5,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X5),'const.list.NIL_0'))))) = s(bool,sK15('const.bool.IN_2'(s(X5,X6),s(fun(X5,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X5),'const.list.NIL_0')))),X7,bool))) )),
  inference(superposition,[],[f388,f360])).
fof(f790,plain,(
  ( ! [X0,X1] : (~p(s(bool,happ(s(fun(bool,bool),X1),s(bool,'F_0')))) | s(bool,X0) = s(bool,sK15(X0,X1,bool)) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f388,f299])).
fof(f791,plain,(
  ( ! [X2,X3] : (~p(s(bool,happ(s(fun(bool,bool),X3),s(bool,X2)))) | s(bool,'F_0') = s(bool,sK15('F_0',X3,bool)) | s(bool,'T_0') = s(bool,X2)) )),
  inference(superposition,[],[f388,f299])).
fof(f803,plain,(
  ( ! [X8,X9] : (s(bool,X8) = s(bool,sK15('const.marker.Cong_1'(s(bool,X8)),X9,bool)) | ~p(s(bool,happ(s(fun(bool,bool),X9),s(bool,'T_0')))) | s(bool,'F_0') = s(bool,X8)) )),
  inference(forward_demodulation,[],[f794,f297])).
fof(f794,plain,(
  ( ! [X8,X9] : (~p(s(bool,happ(s(fun(bool,bool),X9),s(bool,'T_0')))) | s(bool,'const.marker.Cong_1'(s(bool,X8))) = s(bool,sK15('const.marker.Cong_1'(s(bool,X8)),X9,bool)) | s(bool,'F_0') = s(bool,X8)) )),
  inference(superposition,[],[f388,f535])).
fof(f1495,plain,(
  ( ! [X10,X8,X7,X9] : (s('type.list.list'(X7),'const.list.NIL_0') != s('type.list.list'(X7),'const.list.APPEND_2'(s('type.list.list'(X7),X8),s('type.list.list'(X7),X10))) | s('type.list.list'(X7),'const.list.NIL_0') = s('type.list.list'(X7),'const.ind_type.FCONS_3'(s('type.list.list'(X7),X8),s(fun('type.num.num','type.list.list'(X7)),X9),s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f381,f368])).
fof(f1493,plain,(
  ( ! [X4,X5,X3] : (s('type.list.list'(X3),'const.list.NIL_0') != s('type.list.list'(X3),'const.list.APPEND_2'(s('type.list.list'(X3),X4),s('type.list.list'(X3),X5))) | s('type.list.list'(X3),'const.list.NIL_0') = s('type.list.list'(X3),'const.list.APPEND_2'(s('type.list.list'(X3),'const.list.NIL_0'),s('type.list.list'(X3),X4)))) )),
  inference(superposition,[],[f381,f359])).
fof(f1492,plain,(
  ( ! [X2,X0,X1] : (s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),X2))) | s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),'const.list.NIL_0')))) )),
  inference(superposition,[],[f381,f358])).
fof(f1489,plain,(
  ( ! [X24,X23] : (s(bool,'F_0') = s(bool,sK15('const.bool.IN_2'(s(sK0,sK2),s(fun(sK0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(sK0),sK1)))),X24,bool)) | ~p(s(bool,happ(s(fun(bool,bool),X24),s(bool,X23)))) | s(bool,'T_0') = s(bool,X23)) ) | $spl3),
  inference(forward_demodulation,[],[f1460,f1344])).
fof(f1460,plain,(
  ( ! [X24,X23] : (~p(s(bool,happ(s(fun(bool,bool),X24),s(bool,X23)))) | s(bool,'const.bool.IN_2'(s(sK0,sK2),s(fun(sK0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(sK0),sK1))))) = s(bool,sK15('const.bool.IN_2'(s(sK0,sK2),s(fun(sK0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(sK0),sK1)))),X24,bool)) | s(bool,'T_0') = s(bool,X23)) ) | $spl3),
  inference(superposition,[],[f388,f1377])).
fof(f1408,plain,(
  ( ! [X10,X9] : (s(bool,X9) = s(bool,'const.bool.IN_2'(s(sK0,sK2),s(fun(sK0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(sK0),sK1))))) | s(bool,'T_0') = s(bool,'const.ind_type.FCONS_3'(s(bool,X9),s(fun('type.num.num',bool),X10),s('type.num.num','const.num.|48|_0')))) ) | $spl3),
  inference(superposition,[],[f1377,f368])).
fof(f1406,plain,(
  ( ! [X7] : (s(bool,X7) = s(bool,'const.bool.IN_2'(s(sK0,sK2),s(fun(sK0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(sK0),sK1))))) | s(bool,'T_0') = s(bool,'const.marker.Cong_1'(s(bool,X7)))) ) | $spl3),
  inference(superposition,[],[f1377,f297])).
fof(f1378,plain,(
  ( ! [X6] : (s(bool,'F_0') = s(bool,sK15('const.bool.IN_2'(s(sK0,sK2),s(fun(sK0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(sK0),sK1)))),X6,bool)) | ~p(s(bool,happ(s(fun(bool,bool),X6),s(bool,'F_0'))))) ) | $spl3),
  inference(forward_demodulation,[],[f1368,f1344])).
fof(f1368,plain,(
  ( ! [X6] : (~p(s(bool,happ(s(fun(bool,bool),X6),s(bool,'F_0')))) | s(bool,'const.bool.IN_2'(s(sK0,sK2),s(fun(sK0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(sK0),sK1))))) = s(bool,sK15('const.bool.IN_2'(s(sK0,sK2),s(fun(sK0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(sK0),sK1)))),X6,bool))) ) | $spl3),
  inference(superposition,[],[f388,f1344])).
fof(f1377,plain,(
  ( ! [X4] : (s(bool,X4) = s(bool,'const.bool.IN_2'(s(sK0,sK2),s(fun(sK0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(sK0),sK1))))) | s(bool,'T_0') = s(bool,X4)) ) | $spl3),
  inference(subsumption_resolution,[],[f1365,f487])).
fof(f1365,plain,(
  ( ! [X4] : (p(s(bool,'F_0')) | s(bool,X4) = s(bool,'const.bool.IN_2'(s(sK0,sK2),s(fun(sK0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(sK0),sK1))))) | s(bool,'T_0') = s(bool,X4)) ) | $spl3),
  inference(superposition,[],[f575,f1344])).
fof(f1344,plain,(
  s(bool,'F_0') = s(bool,'const.bool.IN_2'(s(sK0,sK2),s(fun(sK0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(sK0),sK1))))) | $spl3),
  inference(unit_resulting_resolution,[],[f484,f308])).
fof(f1345,plain,(
  s(bool,'T_0') != s(bool,'const.bool.IN_2'(s(sK0,sK2),s(fun(sK0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(sK0),sK1))))) | $spl3),
  inference(unit_resulting_resolution,[],[f484,f303])).
fof(f787,plain,(
  ( ! [X12,X13] : (s(bool,X13) = s(bool,'const.bool.BOUNDED_1'(s(bool,X12))) | s(bool,'F_0') = s(bool,X13)) )),
  inference(subsumption_resolution,[],[f781,f289])).
fof(f781,plain,(
  ( ! [X12,X13] : (~p(s(bool,'T_0')) | s(bool,X13) = s(bool,'const.bool.BOUNDED_1'(s(bool,X12))) | s(bool,'F_0') = s(bool,X13)) )),
  inference(superposition,[],[f730,f296])).
fof(f785,plain,(
  ( ! [X8,X9] : (s(bool,X9) = s(bool,'const.marker.Cong_1'(s(bool,X8))) | s(bool,'F_0') = s(bool,X9) | s(bool,'F_0') = s(bool,X8)) )),
  inference(subsumption_resolution,[],[f779,f289])).
fof(f779,plain,(
  ( ! [X8,X9] : (~p(s(bool,'T_0')) | s(bool,X9) = s(bool,'const.marker.Cong_1'(s(bool,X8))) | s(bool,'F_0') = s(bool,X9) | s(bool,'F_0') = s(bool,X8)) )),
  inference(superposition,[],[f730,f535])).
fof(f769,plain,(
  ( ! [X6,X7,X5] : (s(bool,X7) = s(bool,'const.bool.IN_2'(s(X5,X6),s(fun(X5,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X5),'const.list.NIL_0'))))) | s(bool,'T_0') = s(bool,X7)) )),
  inference(subsumption_resolution,[],[f763,f487])).
fof(f763,plain,(
  ( ! [X6,X7,X5] : (p(s(bool,'F_0')) | s(bool,X7) = s(bool,'const.bool.IN_2'(s(X5,X6),s(fun(X5,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X5),'const.list.NIL_0'))))) | s(bool,'T_0') = s(bool,X7)) )),
  inference(superposition,[],[f575,f360])).
fof(f756,plain,(
  ( ! [X2,X0,X1] : (s(X0,X2) = s(X0,sK8(X2,X1,X0)) | s(bool,'T_0') = s(bool,'|dollar|exists_1'(s(fun(X0,bool),X1)))) )),
  inference(subsumption_resolution,[],[f755,f487])).
fof(f755,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,'F_0')) | s(X0,X2) = s(X0,sK8(X2,X1,X0)) | s(bool,'T_0') = s(bool,'|dollar|exists_1'(s(fun(X0,bool),X1)))) )),
  inference(superposition,[],[f369,f299])).
fof(f753,plain,(
  ( ! [X8,X7] : (s(bool,'F_0') != s(bool,X7) | s(bool,'F_0') = s(bool,'const.ind_type.FCONS_3'(s(bool,X7),s(fun('type.num.num',bool),X8),s('type.num.num','const.num.|48|_0')))) )),
  inference(forward_demodulation,[],[f742,f297])).
fof(f742,plain,(
  ( ! [X8,X7] : (s(bool,'F_0') != s(bool,'const.marker.Cong_1'(s(bool,X7))) | s(bool,'F_0') = s(bool,'const.ind_type.FCONS_3'(s(bool,X7),s(fun('type.num.num',bool),X8),s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f728,f368])).
fof(f732,plain,(
  ( ! [X14,X15] : (s(bool,X14) != s(bool,X15) | p(s(bool,X15)) | s(bool,'F_0') = s(bool,X14)) )),
  inference(forward_demodulation,[],[f731,f297])).
fof(f731,plain,(
  ( ! [X14,X15] : (s(bool,X15) != s(bool,'const.marker.Cong_1'(s(bool,X14))) | p(s(bool,X15)) | s(bool,'F_0') = s(bool,X14)) )),
  inference(subsumption_resolution,[],[f723,f289])).
fof(f723,plain,(
  ( ! [X14,X15] : (~p(s(bool,'T_0')) | s(bool,X15) != s(bool,'const.marker.Cong_1'(s(bool,X14))) | p(s(bool,X15)) | s(bool,'F_0') = s(bool,X14)) )),
  inference(superposition,[],[f473,f535])).
fof(f730,plain,(
  ( ! [X12,X13] : (~p(s(bool,X13)) | s(bool,X12) = s(bool,X13) | s(bool,'F_0') = s(bool,X12)) )),
  inference(forward_demodulation,[],[f729,f297])).
fof(f729,plain,(
  ( ! [X12,X13] : (~p(s(bool,X13)) | s(bool,X13) = s(bool,'const.marker.Cong_1'(s(bool,X12))) | s(bool,'F_0') = s(bool,X12)) )),
  inference(subsumption_resolution,[],[f722,f289])).
fof(f722,plain,(
  ( ! [X12,X13] : (~p(s(bool,'T_0')) | ~p(s(bool,X13)) | s(bool,X13) = s(bool,'const.marker.Cong_1'(s(bool,X12))) | s(bool,'F_0') = s(bool,X12)) )),
  inference(superposition,[],[f417,f535])).
fof(f728,plain,(
  ( ! [X6] : (s(bool,'F_0') != s(bool,'const.marker.Cong_1'(s(bool,X6))) | s(bool,'F_0') = s(bool,X6)) )),
  inference(subsumption_resolution,[],[f718,f289])).
fof(f718,plain,(
  ( ! [X6] : (~p(s(bool,'T_0')) | s(bool,'F_0') != s(bool,'const.marker.Cong_1'(s(bool,X6))) | s(bool,'F_0') = s(bool,X6)) )),
  inference(superposition,[],[f307,f535])).
fof(f727,plain,(
  ( ! [X8,X7] : (s(bool,'T_0') = s(bool,X7) | s(bool,'F_0') = s(bool,'const.ind_type.FCONS_3'(s(bool,X7),s(fun('type.num.num',bool),X8),s('type.num.num','const.num.|48|_0')))) )),
  inference(forward_demodulation,[],[f709,f297])).
fof(f709,plain,(
  ( ! [X8,X7] : (s(bool,'T_0') = s(bool,'const.marker.Cong_1'(s(bool,X7))) | s(bool,'F_0') = s(bool,'const.ind_type.FCONS_3'(s(bool,X7),s(fun('type.num.num',bool),X8),s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f535,f368])).
fof(f696,plain,(
  ( ! [X6,X7] : (s(bool,'T_0') != s(bool,'const.bool.IN_2'(s(X6,X7),s(fun(X6,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X6),'const.list.NIL_0')))))) )),
  inference(subsumption_resolution,[],[f685,f487])).
fof(f685,plain,(
  ( ! [X6,X7] : (p(s(bool,'F_0')) | s(bool,'T_0') != s(bool,'const.bool.IN_2'(s(X6,X7),s(fun(X6,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X6),'const.list.NIL_0')))))) )),
  inference(superposition,[],[f303,f360])).
fof(f675,plain,(
  ( ! [X1] : (s(bool,X1) = s(bool,'const.bool.IN_2'(s(bool,X1),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),'const.list.NIL_0'))))) | s(bool,'T_0') = s(bool,X1)) )),
  inference(superposition,[],[f360,f299])).
fof(f639,plain,(
  ( ! [X0,X1] : (s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') = s(bool,'const.ind_type.FCONS_3'(s(bool,X0),s(fun('type.num.num',bool),X1),s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f368,f299])).
fof(f535,plain,(
  ( ! [X2] : (s(bool,'T_0') = s(bool,'const.marker.Cong_1'(s(bool,X2))) | s(bool,'F_0') = s(bool,X2)) )),
  inference(superposition,[],[f299,f297])).
fof(f532,plain,(
  ( ! [X0,X1] : (s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X1) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f299,f299])).
fof(f492,plain,(
  s(bool,'T_0') != s(bool,'F_0')),
  inference(unit_resulting_resolution,[],[f487,f303])).
fof(f473,plain,(
  ( ! [X0,X1] : (~p(s(bool,X0)) | s(bool,X0) != s(bool,X1) | p(s(bool,X1))) )),
  inference(condensation,[],[f472])).
fof(f472,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,X0)) | p(s(bool,X1)) | s(bool,X0) != s(bool,X1) | s(bool,X0) != s(bool,X2)) )),
  inference(condensation,[],[f445])).
fof(f445,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,X2)) | ~p(s(bool,X0)) | ~p(s(bool,X3)) | s(bool,X2) != s(bool,X3) | s(bool,X0) != s(bool,X1)) )),
  inference(cnf_transformation,[],[f286])).
fof(f286,plain,(
  ! [X0,X1,X2,X3] : (s(bool,X0) != s(bool,X1) | (p(s(bool,X1)) & s(bool,X2) != s(bool,X3)) | (((p(s(bool,X0)) & ~p(s(bool,X2))) | ~p(s(bool,X1)) | p(s(bool,X3))) & ((p(s(bool,X1)) & ~p(s(bool,X3))) | ~p(s(bool,X0)) | p(s(bool,X2)))))),
  inference(flattening,[],[f285])).
fof(f285,plain,(
  ! [X0,X1,X2,X3] : (s(bool,X0) != s(bool,X1) | (p(s(bool,X1)) & s(bool,X2) != s(bool,X3)) | (((p(s(bool,X0)) & ~p(s(bool,X2))) | (~p(s(bool,X1)) | p(s(bool,X3)))) & ((p(s(bool,X1)) & ~p(s(bool,X3))) | (~p(s(bool,X0)) | p(s(bool,X2))))))),
  inference(nnf_transformation,[],[f198])).
fof(f198,plain,(
  ! [X0,X1,X2,X3] : (s(bool,X0) != s(bool,X1) | (p(s(bool,X1)) & s(bool,X2) != s(bool,X3)) | ((~p(s(bool,X0)) | p(s(bool,X2))) <=> (~p(s(bool,X1)) | p(s(bool,X3)))))),
  inference(flattening,[],[f197])).
fof(f197,plain,(
  ! [X0,X1,X2,X3] : ((s(bool,X0) != s(bool,X1) | (p(s(bool,X1)) & s(bool,X2) != s(bool,X3))) | ((~p(s(bool,X0)) | p(s(bool,X2))) <=> (~p(s(bool,X1)) | p(s(bool,X3)))))),
  inference(ennf_transformation,[],[f172])).
fof(f172,plain,(
  ! [X0,X1,X2,X3] : ((s(bool,X0) = s(bool,X1) & (p(s(bool,X1)) => s(bool,X2) = s(bool,X3))) => ((p(s(bool,X0)) => p(s(bool,X2))) <=> (p(s(bool,X1)) => p(s(bool,X3)))))),
  inference(rectify,[],[f68])).
fof(f68,axiom,(
  ! [X15,X45,X23,X46] : ((s(bool,X15) = s(bool,X45) & (p(s(bool,X45)) => s(bool,X23) = s(bool,X46))) => ((p(s(bool,X15)) => p(s(bool,X23))) <=> (p(s(bool,X45)) => p(s(bool,X46)))))),
  file('thm.rich_list.MEM_SING_APPEND','thm.bool.IMP_CONG')).
fof(f437,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s(X0,happ(s(fun(X1,X0),X3),s(X1,happ(s(fun(X2,X1),X4),s(X2,X5))))) = s(X0,happ(s(fun(X2,X0),'_dst_x0x1_2'(s(fun(X1,X0),X3),s(fun(X2,X1),X4))),s(X2,X5)))) )),
  inference(cnf_transformation,[],[f171])).
fof(f171,plain,(
  ! [X0,X1,X2,X3,X4,X5] : s(X0,happ(s(fun(X1,X0),X3),s(X1,happ(s(fun(X2,X1),X4),s(X2,X5))))) = s(X0,happ(s(fun(X2,X0),'_dst_x0x1_2'(s(fun(X1,X0),X3),s(fun(X2,X1),X4))),s(X2,X5)))),
  inference(flattening,[],[f170])).
fof(f170,plain,(
  ! [X0,X1,X2] : ! [X3,X4,X5] : s(X0,happ(s(fun(X1,X0),X3),s(X1,happ(s(fun(X2,X1),X4),s(X2,X5))))) = s(X0,happ(s(fun(X2,X0),'_dst_x0x1_2'(s(fun(X1,X0),X3),s(fun(X2,X1),X4))),s(X2,X5)))),
  inference(rectify,[],[f54])).
fof(f54,axiom,(
  ! [X36,X37,X38] : ! [X39,X40,X41] : s(X36,happ(s(fun(X37,X36),X39),s(X37,happ(s(fun(X38,X37),X40),s(X38,X41))))) = s(X36,happ(s(fun(X38,X36),'_dst_x0x1_2'(s(fun(X37,X36),X39),s(fun(X38,X37),X40))),s(X38,X41)))),
  file('thm.rich_list.MEM_SING_APPEND','_dst_x0x1_ax')).
fof(f430,plain,(
  ( ! [X2,X0,X3,X1] : (s(X1,f(s(X0,sK19(X3,X2,X1,X0)))) != s(X1,g(s(X0,sK19(X3,X2,X1,X0)))) | s(fun(X0,X1),X2) = s(fun(X0,X1),X3)) )),
  inference(cnf_transformation,[],[f282])).
fof(f282,plain,(
  ! [X0,X1,X2,X3] : (s(X1,f(s(X0,sK19(X3,X2,X1,X0)))) != s(X1,g(s(X0,sK19(X3,X2,X1,X0)))) | s(fun(X0,X1),X2) = s(fun(X0,X1),X3))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK19])],[f194])).
fof(f194,plain,(
  ! [X0,X1,X2,X3] : (? [X4] : s(X1,f(s(X0,X4))) != s(X1,g(s(X0,X4))) | s(fun(X0,X1),X2) = s(fun(X0,X1),X3))),
  inference(ennf_transformation,[],[f168])).
fof(f168,plain,(
  ! [X0,X1,X2,X3] : (! [X4] : s(X1,f(s(X0,X4))) = s(X1,g(s(X0,X4))) => s(fun(X0,X1),X2) = s(fun(X0,X1),X3))),
  inference(flattening,[],[f167])).
fof(f167,plain,(
  ! [X0,X1] : ! [X2,X3] : (! [X4] : s(X1,f(s(X0,X4))) = s(X1,g(s(X0,X4))) => s(fun(X0,X1),X2) = s(fun(X0,X1),X3))),
  inference(rectify,[],[f4])).
fof(f4,axiom,(
  ! [X1,X2] : ! [X3,X4] : (! [X5] : s(X2,f(s(X1,X5))) = s(X2,g(s(X1,X5))) => s(fun(X1,X2),X3) = s(fun(X1,X2),X4))),
  file('thm.rich_list.MEM_SING_APPEND',aHL_EXT)).
fof(f427,plain,(
  ( ! [X6,X4,X2,X0,X5,X1] : (s(X0,happ(s(fun('type.ind_type.recspace'(X1),X0),sK18(X2,X1,X0)),s('type.ind_type.recspace'(X1),'const.ind_type.CONSTR_3'(s('type.num.num',X4),s(X1,X5),s(fun('type.num.num','type.ind_type.recspace'(X1)),X6))))) = s(X0,happ(s(fun(fun('type.num.num',X0),X0),happ(s(fun(fun('type.num.num','type.ind_type.recspace'(X1)),fun(fun('type.num.num',X0),X0)),happ(s(fun(X1,fun(fun('type.num.num','type.ind_type.recspace'(X1)),fun(fun('type.num.num',X0),X0))),happ(s(fun('type.num.num',fun(X1,fun(fun('type.num.num','type.ind_type.recspace'(X1)),fun(fun('type.num.num',X0),X0)))),X2),s('type.num.num',X4))),s(X1,X5))),s(fun('type.num.num','type.ind_type.recspace'(X1)),X6))),s(fun('type.num.num',X0),'_dst_x0x1_2'(s(fun('type.ind_type.recspace'(X1),X0),sK18(X2,X1,X0)),s(fun('type.num.num','type.ind_type.recspace'(X1)),X6)))))) )),
  inference(cnf_transformation,[],[f281])).
fof(f281,plain,(
  ! [X0,X1,X2] : ! [X4,X5,X6] : s(X0,happ(s(fun('type.ind_type.recspace'(X1),X0),sK18(X2,X1,X0)),s('type.ind_type.recspace'(X1),'const.ind_type.CONSTR_3'(s('type.num.num',X4),s(X1,X5),s(fun('type.num.num','type.ind_type.recspace'(X1)),X6))))) = s(X0,happ(s(fun(fun('type.num.num',X0),X0),happ(s(fun(fun('type.num.num','type.ind_type.recspace'(X1)),fun(fun('type.num.num',X0),X0)),happ(s(fun(X1,fun(fun('type.num.num','type.ind_type.recspace'(X1)),fun(fun('type.num.num',X0),X0))),happ(s(fun('type.num.num',fun(X1,fun(fun('type.num.num','type.ind_type.recspace'(X1)),fun(fun('type.num.num',X0),X0)))),X2),s('type.num.num',X4))),s(X1,X5))),s(fun('type.num.num','type.ind_type.recspace'(X1)),X6))),s(fun('type.num.num',X0),'_dst_x0x1_2'(s(fun('type.ind_type.recspace'(X1),X0),sK18(X2,X1,X0)),s(fun('type.num.num','type.ind_type.recspace'(X1)),X6)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK18])],[f162])).
fof(f162,plain,(
  ! [X0,X1,X2] : ? [X3] : ! [X4,X5,X6] : s(X0,happ(s(fun('type.ind_type.recspace'(X1),X0),X3),s('type.ind_type.recspace'(X1),'const.ind_type.CONSTR_3'(s('type.num.num',X4),s(X1,X5),s(fun('type.num.num','type.ind_type.recspace'(X1)),X6))))) = s(X0,happ(s(fun(fun('type.num.num',X0),X0),happ(s(fun(fun('type.num.num','type.ind_type.recspace'(X1)),fun(fun('type.num.num',X0),X0)),happ(s(fun(X1,fun(fun('type.num.num','type.ind_type.recspace'(X1)),fun(fun('type.num.num',X0),X0))),happ(s(fun('type.num.num',fun(X1,fun(fun('type.num.num','type.ind_type.recspace'(X1)),fun(fun('type.num.num',X0),X0)))),X2),s('type.num.num',X4))),s(X1,X5))),s(fun('type.num.num','type.ind_type.recspace'(X1)),X6))),s(fun('type.num.num',X0),'_dst_x0x1_2'(s(fun('type.ind_type.recspace'(X1),X0),X3),s(fun('type.num.num','type.ind_type.recspace'(X1)),X6)))))),
  inference(flattening,[],[f161])).
fof(f161,plain,(
  ! [X0,X1] : ! [X2] : ? [X3] : ! [X4,X5,X6] : s(X0,happ(s(fun('type.ind_type.recspace'(X1),X0),X3),s('type.ind_type.recspace'(X1),'const.ind_type.CONSTR_3'(s('type.num.num',X4),s(X1,X5),s(fun('type.num.num','type.ind_type.recspace'(X1)),X6))))) = s(X0,happ(s(fun(fun('type.num.num',X0),X0),happ(s(fun(fun('type.num.num','type.ind_type.recspace'(X1)),fun(fun('type.num.num',X0),X0)),happ(s(fun(X1,fun(fun('type.num.num','type.ind_type.recspace'(X1)),fun(fun('type.num.num',X0),X0))),happ(s(fun('type.num.num',fun(X1,fun(fun('type.num.num','type.ind_type.recspace'(X1)),fun(fun('type.num.num',X0),X0)))),X2),s('type.num.num',X4))),s(X1,X5))),s(fun('type.num.num','type.ind_type.recspace'(X1)),X6))),s(fun('type.num.num',X0),'_dst_x0x1_2'(s(fun('type.ind_type.recspace'(X1),X0),X3),s(fun('type.num.num','type.ind_type.recspace'(X1)),X6)))))),
  inference(rectify,[],[f48])).
fof(f48,axiom,(
  ! [X21,X6] : ! [X33] : ? [X22] : ! [X10,X34,X35] : s(X21,happ(s(fun('type.ind_type.recspace'(X6),X21),X22),s('type.ind_type.recspace'(X6),'const.ind_type.CONSTR_3'(s('type.num.num',X10),s(X6,X34),s(fun('type.num.num','type.ind_type.recspace'(X6)),X35))))) = s(X21,happ(s(fun(fun('type.num.num',X21),X21),happ(s(fun(fun('type.num.num','type.ind_type.recspace'(X6)),fun(fun('type.num.num',X21),X21)),happ(s(fun(X6,fun(fun('type.num.num','type.ind_type.recspace'(X6)),fun(fun('type.num.num',X21),X21))),happ(s(fun('type.num.num',fun(X6,fun(fun('type.num.num','type.ind_type.recspace'(X6)),fun(fun('type.num.num',X21),X21)))),X33),s('type.num.num',X10))),s(X6,X34))),s(fun('type.num.num','type.ind_type.recspace'(X6)),X35))),s(fun('type.num.num',X21),'_dst_x0x1_2'(s(fun('type.ind_type.recspace'(X6),X21),X22),s(fun('type.num.num','type.ind_type.recspace'(X6)),X35)))))),
  file('thm.rich_list.MEM_SING_APPEND','thm.ind_type.CONSTR_REC')).
fof(f417,plain,(
  ( ! [X0,X1] : (~p(s(bool,X1)) | ~p(s(bool,X0)) | s(bool,X0) = s(bool,X1)) )),
  inference(cnf_transformation,[],[f189])).
fof(f408,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.list.list'(X0),X4) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),sK17(X5,X4,X3,X2,X1,X0)))) | s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.NIL_0'))))),s('type.list.list'(X0),sK16(X5,X4,X3,X2,X1,X0)))) | s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),X1))) != s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.NIL_0'))))),s('type.list.list'(X0),X3)))) )),
  inference(cnf_transformation,[],[f276])).
fof(f276,plain,(
  ! [X0,X1,X2,X3,X4,X5] : ((s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),X1))) != s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.NIL_0'))))),s('type.list.list'(X0),X3))) | (s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.NIL_0'))))),s('type.list.list'(X0),sK16(X5,X4,X3,X2,X1,X0)))) & s('type.list.list'(X0),X3) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),sK16(X5,X4,X3,X2,X1,X0)),s('type.list.list'(X0),X1)))) | (s('type.list.list'(X0),X4) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),sK17(X5,X4,X3,X2,X1,X0)))) & s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),sK17(X5,X4,X3,X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.NIL_0'))))),s('type.list.list'(X0),X3))))) & ((! [X7] : (s('type.list.list'(X0),X2) != s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.NIL_0'))))),s('type.list.list'(X0),X7))) | s('type.list.list'(X0),X3) != s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X7),s('type.list.list'(X0),X1)))) & ! [X6] : (s('type.list.list'(X0),X4) != s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),X6))) | s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.NIL_0'))))),s('type.list.list'(X0),X3))))) | s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),X1))) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.NIL_0'))))),s('type.list.list'(X0),X3)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK16,sK17])],[f275])).
fof(f275,plain,(
  ! [X0,X1,X2,X3,X4,X5] : ((s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),X1))) != s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.NIL_0'))))),s('type.list.list'(X0),X3))) | ? [X9] : (s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.NIL_0'))))),s('type.list.list'(X0),X9))) & s('type.list.list'(X0),X3) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X9),s('type.list.list'(X0),X1)))) | ? [X8] : (s('type.list.list'(X0),X4) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),X8))) & s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.NIL_0'))))),s('type.list.list'(X0),X3))))) & ((! [X7] : (s('type.list.list'(X0),X2) != s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.NIL_0'))))),s('type.list.list'(X0),X7))) | s('type.list.list'(X0),X3) != s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X7),s('type.list.list'(X0),X1)))) & ! [X6] : (s('type.list.list'(X0),X4) != s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),X6))) | s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.NIL_0'))))),s('type.list.list'(X0),X3))))) | s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),X1))) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.NIL_0'))))),s('type.list.list'(X0),X3)))))),
  inference(rectify,[],[f274])).
fof(f274,plain,(
  ! [X0,X1,X2,X3,X4,X5] : ((s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),X1))) != s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.NIL_0'))))),s('type.list.list'(X0),X3))) | ? [X7] : (s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.NIL_0'))))),s('type.list.list'(X0),X7))) & s('type.list.list'(X0),X3) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X7),s('type.list.list'(X0),X1)))) | ? [X6] : (s('type.list.list'(X0),X4) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),X6))) & s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.NIL_0'))))),s('type.list.list'(X0),X3))))) & ((! [X7] : (s('type.list.list'(X0),X2) != s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.NIL_0'))))),s('type.list.list'(X0),X7))) | s('type.list.list'(X0),X3) != s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X7),s('type.list.list'(X0),X1)))) & ! [X6] : (s('type.list.list'(X0),X4) != s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),X6))) | s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.NIL_0'))))),s('type.list.list'(X0),X3))))) | s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),X1))) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.NIL_0'))))),s('type.list.list'(X0),X3)))))),
  inference(flattening,[],[f273])).
fof(f273,plain,(
  ! [X0,X1,X2,X3,X4,X5] : ((s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),X1))) != s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.NIL_0'))))),s('type.list.list'(X0),X3))) | (? [X7] : (s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.NIL_0'))))),s('type.list.list'(X0),X7))) & s('type.list.list'(X0),X3) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X7),s('type.list.list'(X0),X1)))) | ? [X6] : (s('type.list.list'(X0),X4) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),X6))) & s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.NIL_0'))))),s('type.list.list'(X0),X3)))))) & ((! [X7] : (s('type.list.list'(X0),X2) != s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.NIL_0'))))),s('type.list.list'(X0),X7))) | s('type.list.list'(X0),X3) != s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X7),s('type.list.list'(X0),X1)))) & ! [X6] : (s('type.list.list'(X0),X4) != s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),X6))) | s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.NIL_0'))))),s('type.list.list'(X0),X3))))) | s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),X1))) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.NIL_0'))))),s('type.list.list'(X0),X3)))))),
  inference(nnf_transformation,[],[f153])).
fof(f153,plain,(
  ! [X0,X1,X2,X3,X4,X5] : (s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),X1))) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.NIL_0'))))),s('type.list.list'(X0),X3))) <=> (? [X7] : (s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.NIL_0'))))),s('type.list.list'(X0),X7))) & s('type.list.list'(X0),X3) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X7),s('type.list.list'(X0),X1)))) | ? [X6] : (s('type.list.list'(X0),X4) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),X6))) & s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.NIL_0'))))),s('type.list.list'(X0),X3))))))),
  inference(flattening,[],[f152])).
fof(f152,plain,(
  ! [X0] : ! [X1,X2,X3,X4,X5] : (s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),X1))) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.NIL_0'))))),s('type.list.list'(X0),X3))) <=> (? [X7] : (s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.NIL_0'))))),s('type.list.list'(X0),X7))) & s('type.list.list'(X0),X3) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X7),s('type.list.list'(X0),X1)))) | ? [X6] : (s('type.list.list'(X0),X4) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),X6))) & s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.NIL_0'))))),s('type.list.list'(X0),X3))))))),
  inference(rectify,[],[f66])).
fof(f66,axiom,(
  ! [X6] : ! [X43,X44,X18,X17,X12] : (s('type.list.list'(X6),'const.list.APPEND_2'(s('type.list.list'(X6),X44),s('type.list.list'(X6),X43))) = s('type.list.list'(X6),'const.list.APPEND_2'(s('type.list.list'(X6),'const.list.APPEND_2'(s('type.list.list'(X6),X17),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X12),s('type.list.list'(X6),'const.list.NIL_0'))))),s('type.list.list'(X6),X18))) <=> (? [X11] : (s('type.list.list'(X6),X44) = s('type.list.list'(X6),'const.list.APPEND_2'(s('type.list.list'(X6),'const.list.APPEND_2'(s('type.list.list'(X6),X17),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X12),s('type.list.list'(X6),'const.list.NIL_0'))))),s('type.list.list'(X6),X11))) & s('type.list.list'(X6),X18) = s('type.list.list'(X6),'const.list.APPEND_2'(s('type.list.list'(X6),X11),s('type.list.list'(X6),X43)))) | ? [X11] : (s('type.list.list'(X6),X17) = s('type.list.list'(X6),'const.list.APPEND_2'(s('type.list.list'(X6),X44),s('type.list.list'(X6),X11))) & s('type.list.list'(X6),X43) = s('type.list.list'(X6),'const.list.APPEND_2'(s('type.list.list'(X6),'const.list.APPEND_2'(s('type.list.list'(X6),X11),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X12),s('type.list.list'(X6),'const.list.NIL_0'))))),s('type.list.list'(X6),X18))))))),
  file('thm.rich_list.MEM_SING_APPEND','thm.list.APPEND_EQ_APPEND_MID')).
fof(f409,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),X1))) != s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.NIL_0'))))),s('type.list.list'(X0),X3))) | s('type.list.list'(X0),X3) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),sK16(X5,X4,X3,X2,X1,X0)),s('type.list.list'(X0),X1))) | s('type.list.list'(X0),X4) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),sK17(X5,X4,X3,X2,X1,X0))))) )),
  inference(cnf_transformation,[],[f276])).
fof(f410,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),sK17(X5,X4,X3,X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.NIL_0'))))),s('type.list.list'(X0),X3))) | s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.NIL_0'))))),s('type.list.list'(X0),sK16(X5,X4,X3,X2,X1,X0)))) | s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),X1))) != s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.NIL_0'))))),s('type.list.list'(X0),X3)))) )),
  inference(cnf_transformation,[],[f276])).
fof(f411,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),sK17(X5,X4,X3,X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.NIL_0'))))),s('type.list.list'(X0),X3))) | s('type.list.list'(X0),X3) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),sK16(X5,X4,X3,X2,X1,X0)),s('type.list.list'(X0),X1))) | s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),X1))) != s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.NIL_0'))))),s('type.list.list'(X0),X3)))) )),
  inference(cnf_transformation,[],[f276])).
fof(f412,plain,(
  ( ! [X4,X2,X0,X7,X5,X3,X1] : (s('type.list.list'(X0),X3) != s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X7),s('type.list.list'(X0),X1))) | s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),X1))) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.NIL_0'))))),s('type.list.list'(X0),X3))) | s('type.list.list'(X0),X2) != s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.NIL_0'))))),s('type.list.list'(X0),X7)))) )),
  inference(cnf_transformation,[],[f276])).
fof(f413,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.list.list'(X0),X4) != s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),X6))) | s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.NIL_0'))))),s('type.list.list'(X0),X3))) | s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),X1))) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.NIL_0'))))),s('type.list.list'(X0),X3)))) )),
  inference(cnf_transformation,[],[f276])).
fof(f399,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.NIL_0'))) != s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),X1))) | s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.NIL_0'))) | s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.NIL_0')))) )),
  inference(cnf_transformation,[],[f270])).
fof(f401,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),X1) | s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.NIL_0'))) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),X1))) | s('type.list.list'(X0),X2) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.NIL_0')))) )),
  inference(cnf_transformation,[],[f270])).
fof(f402,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),X2) | s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.NIL_0'))) | s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.NIL_0'))) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),X1)))) )),
  inference(cnf_transformation,[],[f270])).
fof(f393,plain,(
  ( ! [X2,X0,X3,X1] : (s(X0,'const.ind_type.FCONS_3'(s(X0,X1),s(fun('type.num.num',X0),X2),s('type.num.num',X3))) = s(X0,happ(s(fun('type.num.num',X0),happ(s(fun(fun('type.num.num',X0),fun('type.num.num',X0)),happ(s(fun(X0,fun(fun('type.num.num',X0),fun('type.num.num',X0))),'const.ind_type.FCONS_0'),s(X0,X1))),s(fun('type.num.num',X0),X2))),s('type.num.num',X3)))) )),
  inference(cnf_transformation,[],[f143])).
fof(f143,plain,(
  ! [X0,X1,X2,X3] : s(X0,'const.ind_type.FCONS_3'(s(X0,X1),s(fun('type.num.num',X0),X2),s('type.num.num',X3))) = s(X0,happ(s(fun('type.num.num',X0),happ(s(fun(fun('type.num.num',X0),fun('type.num.num',X0)),happ(s(fun(X0,fun(fun('type.num.num',X0),fun('type.num.num',X0))),'const.ind_type.FCONS_0'),s(X0,X1))),s(fun('type.num.num',X0),X2))),s('type.num.num',X3)))),
  inference(flattening,[],[f142])).
fof(f142,plain,(
  ! [X0] : ! [X1,X2,X3] : s(X0,'const.ind_type.FCONS_3'(s(X0,X1),s(fun('type.num.num',X0),X2),s('type.num.num',X3))) = s(X0,happ(s(fun('type.num.num',X0),happ(s(fun(fun('type.num.num',X0),fun('type.num.num',X0)),happ(s(fun(X0,fun(fun('type.num.num',X0),fun('type.num.num',X0))),'const.ind_type.FCONS_0'),s(X0,X1))),s(fun('type.num.num',X0),X2))),s('type.num.num',X3)))),
  inference(rectify,[],[f22])).
fof(f22,axiom,(
  ! [X6] : ! [X28,X29,X30] : s(X6,'const.ind_type.FCONS_3'(s(X6,X28),s(fun('type.num.num',X6),X29),s('type.num.num',X30))) = s(X6,happ(s(fun('type.num.num',X6),happ(s(fun(fun('type.num.num',X6),fun('type.num.num',X6)),happ(s(fun(X6,fun(fun('type.num.num',X6),fun('type.num.num',X6))),'const.ind_type.FCONS_0'),s(X6,X28))),s(fun('type.num.num',X6),X29))),s('type.num.num',X30)))),
  file('thm.rich_list.MEM_SING_APPEND','ARITY_0_3_const.ind_type.FCONS')).
fof(f392,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.ind_type.recspace'(X0),'const.ind_type.CONSTR_3'(s('type.num.num',X1),s(X0,X2),s(fun('type.num.num','type.ind_type.recspace'(X0)),X3))) = s('type.ind_type.recspace'(X0),happ(s(fun(fun('type.num.num','type.ind_type.recspace'(X0)),'type.ind_type.recspace'(X0)),happ(s(fun(X0,fun(fun('type.num.num','type.ind_type.recspace'(X0)),'type.ind_type.recspace'(X0))),'const.ind_type.CONSTR_1'(s('type.num.num',X1))),s(X0,X2))),s(fun('type.num.num','type.ind_type.recspace'(X0)),X3)))) )),
  inference(cnf_transformation,[],[f141])).
fof(f141,plain,(
  ! [X0,X1,X2,X3] : s('type.ind_type.recspace'(X0),'const.ind_type.CONSTR_3'(s('type.num.num',X1),s(X0,X2),s(fun('type.num.num','type.ind_type.recspace'(X0)),X3))) = s('type.ind_type.recspace'(X0),happ(s(fun(fun('type.num.num','type.ind_type.recspace'(X0)),'type.ind_type.recspace'(X0)),happ(s(fun(X0,fun(fun('type.num.num','type.ind_type.recspace'(X0)),'type.ind_type.recspace'(X0))),'const.ind_type.CONSTR_1'(s('type.num.num',X1))),s(X0,X2))),s(fun('type.num.num','type.ind_type.recspace'(X0)),X3)))),
  inference(flattening,[],[f140])).
fof(f140,plain,(
  ! [X0] : ! [X1,X2,X3] : s('type.ind_type.recspace'(X0),'const.ind_type.CONSTR_3'(s('type.num.num',X1),s(X0,X2),s(fun('type.num.num','type.ind_type.recspace'(X0)),X3))) = s('type.ind_type.recspace'(X0),happ(s(fun(fun('type.num.num','type.ind_type.recspace'(X0)),'type.ind_type.recspace'(X0)),happ(s(fun(X0,fun(fun('type.num.num','type.ind_type.recspace'(X0)),'type.ind_type.recspace'(X0))),'const.ind_type.CONSTR_1'(s('type.num.num',X1))),s(X0,X2))),s(fun('type.num.num','type.ind_type.recspace'(X0)),X3)))),
  inference(rectify,[],[f30])).
fof(f30,axiom,(
  ! [X6] : ! [X28,X29,X30] : s('type.ind_type.recspace'(X6),'const.ind_type.CONSTR_3'(s('type.num.num',X28),s(X6,X29),s(fun('type.num.num','type.ind_type.recspace'(X6)),X30))) = s('type.ind_type.recspace'(X6),happ(s(fun(fun('type.num.num','type.ind_type.recspace'(X6)),'type.ind_type.recspace'(X6)),happ(s(fun(X6,fun(fun('type.num.num','type.ind_type.recspace'(X6)),'type.ind_type.recspace'(X6))),'const.ind_type.CONSTR_1'(s('type.num.num',X28))),s(X6,X29))),s(fun('type.num.num','type.ind_type.recspace'(X6)),X30)))),
  file('thm.rich_list.MEM_SING_APPEND','ARITY_1_3_const.ind_type.CONSTR')).
fof(f390,plain,(
  ( ! [X2,X0,X3,X1] : (s(X0,happ(s(fun('type.num.num',X0),X2),s('type.num.num',X3))) = s(X0,'const.ind_type.FCONS_3'(s(X0,X1),s(fun('type.num.num',X0),X2),s('type.num.num','const.num.SUC_1'(s('type.num.num',X3)))))) )),
  inference(cnf_transformation,[],[f137])).
fof(f137,plain,(
  ! [X0,X1,X2,X3] : s(X0,happ(s(fun('type.num.num',X0),X2),s('type.num.num',X3))) = s(X0,'const.ind_type.FCONS_3'(s(X0,X1),s(fun('type.num.num',X0),X2),s('type.num.num','const.num.SUC_1'(s('type.num.num',X3)))))),
  inference(flattening,[],[f136])).
fof(f136,plain,(
  ! [X0] : ! [X1,X2,X3] : s(X0,happ(s(fun('type.num.num',X0),X2),s('type.num.num',X3))) = s(X0,'const.ind_type.FCONS_3'(s(X0,X1),s(fun('type.num.num',X0),X2),s('type.num.num','const.num.SUC_1'(s('type.num.num',X3)))))),
  inference(rectify,[],[f45])).
fof(f45,axiom,(
  ! [X6] : ! [X9,X22,X32] : s(X6,happ(s(fun('type.num.num',X6),X22),s('type.num.num',X32))) = s(X6,'const.ind_type.FCONS_3'(s(X6,X9),s(fun('type.num.num',X6),X22),s('type.num.num','const.num.SUC_1'(s('type.num.num',X32)))))),
  file('thm.rich_list.MEM_SING_APPEND','thm.ind_type.FCONS|split|1')).
fof(f381,plain,(
  ( ! [X2,X0,X1] : (s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),X2))) | s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1)) )),
  inference(cnf_transformation,[],[f261])).
fof(f261,plain,(
  ! [X0,X1,X2] : ((s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),X2))) | (s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1) & s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X2))) & (s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),X1) | s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),X2) | s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),X2)))))),
  inference(flattening,[],[f260])).
fof(f260,plain,(
  ! [X0,X1,X2] : ((s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),X2))) | (s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1) & s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X2))) & ((s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),X1) | s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),X2)) | s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),X2)))))),
  inference(nnf_transformation,[],[f131])).
fof(f131,plain,(
  ! [X0,X1,X2] : (s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),X2))) <=> (s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1) & s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X2)))),
  inference(flattening,[],[f130])).
fof(f130,plain,(
  ! [X0] : ! [X1,X2] : (s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),X2))) <=> (s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1) & s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X2)))),
  inference(rectify,[],[f12])).
fof(f12,axiom,(
  ! [X6] : ! [X17,X18] : (s('type.list.list'(X6),'const.list.NIL_0') = s('type.list.list'(X6),'const.list.APPEND_2'(s('type.list.list'(X6),X17),s('type.list.list'(X6),X18))) <=> (s('type.list.list'(X6),'const.list.NIL_0') = s('type.list.list'(X6),X17) & s('type.list.list'(X6),'const.list.NIL_0') = s('type.list.list'(X6),X18)))),
  file('thm.rich_list.MEM_SING_APPEND','thm.list.APPEND_eq_NIL|split|1')).
fof(f382,plain,(
  ( ! [X2,X0,X1] : (s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),X2))) | s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X2)) )),
  inference(cnf_transformation,[],[f261])).
fof(f383,plain,(
  ( ! [X2,X0,X1] : (s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),X1) | s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),X2) | s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),X2)))) )),
  inference(cnf_transformation,[],[f261])).
fof(f360,plain,(
  ( ! [X0,X1] : (s(bool,'F_0') = s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),'const.list.NIL_0')))))) )),
  inference(cnf_transformation,[],[f112])).
fof(f112,plain,(
  ! [X0,X1] : s(bool,'F_0') = s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),'const.list.NIL_0')))))),
  inference(flattening,[],[f111])).
fof(f111,plain,(
  ! [X0] : ! [X1] : s(bool,'F_0') = s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),'const.list.NIL_0')))))),
  inference(rectify,[],[f19])).
fof(f19,axiom,(
  ! [X6] : ! [X15] : s(bool,'F_0') = s(bool,'const.bool.IN_2'(s(X6,X15),s(fun(X6,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X6),'const.list.NIL_0')))))),
  file('thm.rich_list.MEM_SING_APPEND','thm.list.MEM|split|0')).
fof(f307,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'F_0') != s(bool,X0)) )),
  inference(cnf_transformation,[],[f210])).
fof(f210,plain,(
  ! [X0] : ((s(bool,'F_0') != s(bool,X0) | ~p(s(bool,X0))) & (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f86])).
fof(f86,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(flattening,[],[f85])).
fof(f85,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(rectify,[],[f26])).
fof(f26,axiom,(
  ! [X16] : (s(bool,'F_0') = s(bool,X16) <=> ~p(s(bool,X16)))),
  file('thm.rich_list.MEM_SING_APPEND','thm.bool.EQ_CLAUSES|split|2')).
fof(f308,plain,(
  ( ! [X0] : (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f210])).
fof(f304,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f208])).
fof(f296,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,'const.bool.BOUNDED_1'(s(bool,X0)))) )),
  inference(cnf_transformation,[],[f76])).
fof(f76,plain,(
  ! [X0] : s(bool,'T_0') = s(bool,'const.bool.BOUNDED_1'(s(bool,X0)))),
  inference(rectify,[],[f63])).
fof(f63,axiom,(
  ! [X42] : s(bool,'T_0') = s(bool,'const.bool.BOUNDED_1'(s(bool,X42)))),
  file('thm.rich_list.MEM_SING_APPEND','thm.bool.BOUNDED_THM')).
fof(f7415,plain,(
  $false | ($spl3 | $spl22)),
  inference(subsumption_resolution,[],[f7414,f289])).
fof(f7414,plain,(
  ~p(s(bool,'T_0')) | ($spl3 | $spl22)),
  inference(forward_demodulation,[],[f487,f6870])).
fof(f7380,plain,(
  $false | ($spl3 | $spl22)),
  inference(global_subsumption,[],[f288,f287,f289,f487,f296,f297,f299,f304,f303,f308,f307,f358,f359,f360,f368,f383,f382,f381,f390,f391,f392,f393,f402,f401,f400,f399,f398,f397,f413,f412,f411,f410,f409,f408,f417,f414,f427,f430,f437,f473,f492,f532,f535,f575,f639,f675,f696,f727,f728,f730,f732,f753,f756,f769,f785,f787,f1345,f1344,f1377,f1378,f1406,f1408,f1489,f1492,f1493,f1495,f803,f791,f790,f802,f808,f789,f389,f388,f387,f372,f371,f395,f407,f406,f405,f404,f403,f396,f394,f380,f379,f378,f377,f376,f375,f1320,f1708,f1709,f1713,f1723,f1721,f1724,f1747,f1781,f1790,f1792,f1775,f1778,f1801,f1804,f1816,f1903,f1905,f1918,f1920,f1921,f1931,f2108,f2109,f2130,f2060,f2061,f2134,f2144,f2079,f2080,f2148,f2161,f2179,f2178,f2260,f2263,f2300,f2283,f2284,f2305,f2313,f2334,f2331,f2335,f2333,f2380,f2365,f2366,f2381,f2382,f2383,f2384,f2385,f2386,f2387,f2388,f2390,f2391,f2393,f2415,f2418,f2536,f2538,f2560,f2561,f2544,f2562,f2563,f2564,f2565,f2566,f2567,f2568,f2569,f2570,f2572,f2573,f2576,f2588,f2589,f2748,f2763,f2776,f2797,f2806,f2835,f2844,f2920,f2960,f2961,f3384,f3385,f3011,f3389,f3026,f3028,f3029,f3415,f3416,f3417,f3418,f3419,f3420,f3085,f3421,f3422,f3090,f3146,f3151,f3462,f3464,f3466,f3473,f3477,f3478,f3479,f3480,f3481,f3482,f3184,f3186,f3494,f3495,f3496,f3497,f3498,f3499,f3500,f3501,f3511,f3513,f3515,f3517,f3518,f3520,f3521,f3522,f3524,f3264,f3527,f3528,f3269,f3292,f3280,f3569,f3585,f3586,f3554,f3637,f3642,f3666,f3781,f3790,f3742,f3745,f3746,f3764,f3798,f3799,f3800,f3803,f3853,f3854,f3896,f3897,f3963,f3924,f3947,f4038,f4096,f4138,f4142,f4144,f4145,f4104,f4156,f4172,f4177,f4247,f4206,f4209,f4210,f4235,f4251,f4230,f4231,f2543,f4324,f4345,f4326,f4349,f4362,f4476,f4501,f4478,f4507,f4521,f4596,f4595,f4597,f4598,f4599,f4773,f4601,f4634,f4635,f4636,f4640,f4641,f4642,f4643,f4644,f4645,f4650,f4651,f4652,f4653,f4654,f4656,f4657,f4658,f4659,f4660,f4661,f4676,f4679,f4680,f4684,f4685,f4686,f4703,f4704,f4705,f4709,f4710,f4711,f4712,f4713,f4714,f4715,f4723,f4724,f4725,f4726,f4727,f4729,f4730,f4731,f4733,f4734,f4749,f4752,f4753,f4757,f4758,f4759,f4855,f4858,f4885,f4886,f4878,f4879,f4880,f4887,f4889,f4884,f5023,f5024,f5026,f5027,f5028,f5029,f5030,f5031,f5033,f5034,f5035,f5036,f5039,f5090,f5135,f5092,f5149,f5106,f5107,f5108,f5162,f5110,f5169,f5124,f5125,f5131,f5132,f5182,f5244,f5278,f5285,f5259,f5260,f5261,f5262,f5264,f5265,f5266,f5267,f5277,f5354,f5388,f5395,f5369,f5370,f5378,f5379,f5381,f5382,f5383,f5384,f5387,f5509,f5510,f5511,f5624,f5625,f5626,f5784,f6101,f6102,f6280,f6281,f6240,f6241,f6242,f6282,f6245,f6284,f6291,f6292,f6293,f6294,f6295,f6296,f6297,f6298,f6299,f6300,f6301,f6302,f6303,f6266,f6267,f6309,f4252,f6314,f484,f4670,f4743,f1770,f754,f369,f6104,f4744,f4671,f4745,f4672,f5767,f5766,f3635,f1970,f5782,f3899,f367,f3634,f1972,f1969,f366,f365,f806,f807,f5780,f805,f804,f5777,f4646,f4741,f4668,f4667,f4742,f4666,f4669,f4739,f4740,f1795,f1794,f1769,f4856,f4832,f4831,f4853,f370,f1327,f5778,f4719,f4718,f4637,f4717,f4716,f4706,f4854,f4732,f6870,f6933,f6938,f6945,f6952,f6967,f6988,f6989,f6996,f7001,f7012,f7026,f7058,f7060,f7063,f7084,f7094,f7112,f7114,f7116,f7126,f7140,f7162,f7193,f7195,f7197,f7199,f7216,f7231,f7233,f7235,f7237,f7273,f7280,f7283,f7343,f7348,f7357,f7365,f7370,f7379])).
fof(f7375,plain,(
  $false | ($spl3 | $spl22)),
  inference(subsumption_resolution,[],[f7374,f289])).
fof(f7374,plain,(
  ~p(s(bool,'T_0')) | ($spl3 | $spl22)),
  inference(forward_demodulation,[],[f7373,f6870])).
fof(f7373,plain,(
  ( ! [X8,X7,X9] : (~p(s(bool,'const.bool.IN_2'(s(bool,'F_0'),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),sK11('const.bool.IN_2'(s(X7,X8),s(fun(X7,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X7),'const.list.NIL_0')))),X9,bool)))))))) ) | ($spl3 | $spl22)),
  inference(subsumption_resolution,[],[f7372,f289])).
fof(f7372,plain,(
  ( ! [X8,X7,X9] : (~p(s(bool,'T_0')) | ~p(s(bool,'const.bool.IN_2'(s(bool,'F_0'),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),sK11('const.bool.IN_2'(s(X7,X8),s(fun(X7,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X7),'const.list.NIL_0')))),X9,bool)))))))) ) | ($spl3 | $spl22)),
  inference(forward_demodulation,[],[f2381,f6870])).
fof(f7371,plain,(
  $false | ($spl3 | $spl22)),
  inference(global_subsumption,[],[f288,f287,f289,f487,f296,f297,f299,f304,f303,f308,f307,f358,f359,f360,f368,f383,f382,f381,f390,f391,f392,f393,f402,f401,f400,f399,f398,f397,f413,f412,f411,f410,f409,f408,f417,f414,f427,f430,f437,f473,f492,f532,f535,f575,f639,f675,f696,f727,f728,f730,f732,f753,f756,f769,f785,f787,f1345,f1344,f1377,f1378,f1406,f1408,f1489,f1492,f1493,f1495,f803,f791,f790,f802,f808,f789,f389,f388,f387,f372,f371,f395,f407,f406,f405,f404,f403,f396,f394,f380,f379,f378,f377,f376,f375,f1320,f1708,f1709,f1713,f1723,f1721,f1724,f1747,f1781,f1790,f1792,f1775,f1778,f1801,f1804,f1816,f1903,f1905,f1918,f1920,f1921,f1931,f2108,f2109,f2130,f2060,f2061,f2134,f2144,f2079,f2080,f2148,f2161,f2179,f2178,f2260,f2263,f2300,f2283,f2284,f2305,f2313,f2334,f2331,f2335,f2333,f2380,f2365,f2366,f2381,f2382,f2383,f2384,f2385,f2386,f2387,f2388,f2390,f2391,f2393,f2415,f2418,f2536,f2538,f2560,f2561,f2544,f2562,f2563,f2564,f2565,f2566,f2567,f2568,f2569,f2570,f2572,f2573,f2576,f2588,f2589,f2748,f2763,f2776,f2797,f2806,f2835,f2844,f2920,f2960,f2961,f3384,f3385,f3011,f3389,f3026,f3028,f3029,f3415,f3416,f3417,f3418,f3419,f3420,f3085,f3421,f3422,f3090,f3146,f3151,f3462,f3464,f3466,f3473,f3477,f3478,f3479,f3480,f3481,f3482,f3184,f3186,f3494,f3495,f3496,f3497,f3498,f3499,f3500,f3501,f3511,f3513,f3515,f3517,f3518,f3520,f3521,f3522,f3524,f3264,f3527,f3528,f3269,f3292,f3280,f3569,f3585,f3586,f3554,f3637,f3642,f3666,f3781,f3790,f3742,f3745,f3746,f3764,f3798,f3799,f3800,f3803,f3853,f3854,f3896,f3897,f3963,f3924,f3947,f4038,f4096,f4138,f4142,f4144,f4145,f4104,f4156,f4172,f4177,f4247,f4206,f4209,f4210,f4235,f4251,f4230,f4231,f2543,f4324,f4345,f4326,f4349,f4362,f4476,f4501,f4478,f4507,f4521,f4596,f4595,f4597,f4598,f4599,f4773,f4601,f4634,f4635,f4636,f4640,f4641,f4642,f4643,f4644,f4645,f4650,f4651,f4652,f4653,f4654,f4656,f4657,f4658,f4659,f4660,f4661,f4676,f4679,f4680,f4684,f4685,f4686,f4703,f4704,f4705,f4709,f4710,f4711,f4712,f4713,f4714,f4715,f4723,f4724,f4725,f4726,f4727,f4729,f4730,f4731,f4733,f4734,f4749,f4752,f4753,f4757,f4758,f4759,f4855,f4858,f4885,f4886,f4878,f4879,f4880,f4887,f4889,f4884,f5023,f5024,f5026,f5027,f5028,f5029,f5030,f5031,f5033,f5034,f5035,f5036,f5039,f5090,f5135,f5092,f5149,f5106,f5107,f5108,f5162,f5110,f5169,f5124,f5125,f5131,f5132,f5182,f5244,f5278,f5285,f5259,f5260,f5261,f5262,f5264,f5265,f5266,f5267,f5277,f5354,f5388,f5395,f5369,f5370,f5378,f5379,f5381,f5382,f5383,f5384,f5387,f5509,f5510,f5511,f5624,f5625,f5626,f5784,f6101,f6102,f6280,f6281,f6240,f6241,f6242,f6282,f6245,f6284,f6291,f6292,f6293,f6294,f6295,f6296,f6297,f6298,f6299,f6300,f6301,f6302,f6303,f6266,f6267,f6309,f4252,f6314,f484,f4670,f4743,f1770,f754,f369,f6104,f4744,f4671,f4745,f4672,f5767,f5766,f3635,f1970,f5782,f3899,f367,f3634,f1972,f1969,f366,f365,f806,f807,f5780,f805,f804,f5777,f4646,f4741,f4668,f4667,f4742,f4666,f4669,f4739,f4740,f1795,f1794,f1769,f4856,f4832,f4831,f4853,f370,f1327,f5778,f4719,f4718,f4637,f4717,f4716,f4706,f4854,f4732,f6870,f6933,f6938,f6945,f6952,f6967,f6988,f6989,f6996,f7001,f7012,f7026,f7058,f7060,f7063,f7084,f7094,f7112,f7114,f7116,f7126,f7140,f7162,f7193,f7195,f7197,f7199,f7216,f7231,f7233,f7235,f7237,f7273,f7280,f7283,f7343,f7348,f7357,f7365,f7370])).
fof(f7366,plain,(
  $false | ($spl3 | $spl22)),
  inference(global_subsumption,[],[f288,f287,f289,f487,f296,f297,f299,f304,f303,f308,f307,f358,f359,f360,f368,f383,f382,f381,f390,f391,f392,f393,f402,f401,f400,f399,f398,f397,f413,f412,f411,f410,f409,f408,f417,f414,f427,f430,f437,f473,f492,f532,f535,f575,f639,f675,f696,f727,f728,f730,f732,f753,f756,f769,f785,f787,f1345,f1344,f1377,f1378,f1406,f1408,f1489,f1492,f1493,f1495,f803,f791,f790,f802,f808,f789,f389,f388,f387,f372,f371,f395,f407,f406,f405,f404,f403,f396,f394,f380,f379,f378,f377,f376,f375,f1320,f1708,f1709,f1713,f1723,f1721,f1724,f1747,f1781,f1790,f1792,f1775,f1778,f1801,f1804,f1816,f1903,f1905,f1918,f1920,f1921,f1931,f2108,f2109,f2130,f2060,f2061,f2134,f2144,f2079,f2080,f2148,f2161,f2179,f2178,f2260,f2263,f2300,f2283,f2284,f2305,f2313,f2334,f2331,f2335,f2333,f2380,f2365,f2366,f2381,f2382,f2383,f2384,f2385,f2386,f2387,f2388,f2390,f2391,f2393,f2415,f2418,f2536,f2538,f2560,f2561,f2544,f2562,f2563,f2564,f2565,f2566,f2567,f2568,f2569,f2570,f2572,f2573,f2576,f2588,f2589,f2748,f2763,f2776,f2797,f2806,f2835,f2844,f2920,f2960,f2961,f3384,f3385,f3011,f3389,f3026,f3028,f3029,f3415,f3416,f3417,f3418,f3419,f3420,f3085,f3421,f3422,f3090,f3146,f3151,f3462,f3464,f3466,f3473,f3477,f3478,f3479,f3480,f3481,f3482,f3184,f3186,f3494,f3495,f3496,f3497,f3498,f3499,f3500,f3501,f3511,f3513,f3515,f3517,f3518,f3520,f3521,f3522,f3524,f3264,f3527,f3528,f3269,f3292,f3280,f3569,f3585,f3586,f3554,f3637,f3642,f3666,f3781,f3790,f3742,f3745,f3746,f3764,f3798,f3799,f3800,f3803,f3853,f3854,f3896,f3897,f3963,f3924,f3947,f4038,f4096,f4138,f4142,f4144,f4145,f4104,f4156,f4172,f4177,f4247,f4206,f4209,f4210,f4235,f4251,f4230,f4231,f2543,f4324,f4345,f4326,f4349,f4362,f4476,f4501,f4478,f4507,f4521,f4596,f4595,f4597,f4598,f4599,f4773,f4601,f4634,f4635,f4636,f4640,f4641,f4642,f4643,f4644,f4645,f4650,f4651,f4652,f4653,f4654,f4656,f4657,f4658,f4659,f4660,f4661,f4676,f4679,f4680,f4684,f4685,f4686,f4703,f4704,f4705,f4709,f4710,f4711,f4712,f4713,f4714,f4715,f4723,f4724,f4725,f4726,f4727,f4729,f4730,f4731,f4733,f4734,f4749,f4752,f4753,f4757,f4758,f4759,f4855,f4858,f4885,f4886,f4878,f4879,f4880,f4887,f4889,f4884,f5023,f5024,f5026,f5027,f5028,f5029,f5030,f5031,f5033,f5034,f5035,f5036,f5039,f5090,f5135,f5092,f5149,f5106,f5107,f5108,f5162,f5110,f5169,f5124,f5125,f5131,f5132,f5182,f5244,f5278,f5285,f5259,f5260,f5261,f5262,f5264,f5265,f5266,f5267,f5277,f5354,f5388,f5395,f5369,f5370,f5378,f5379,f5381,f5382,f5383,f5384,f5387,f5509,f5510,f5511,f5624,f5625,f5626,f5784,f6101,f6102,f6280,f6281,f6240,f6241,f6242,f6282,f6245,f6284,f6291,f6292,f6293,f6294,f6295,f6296,f6297,f6298,f6299,f6300,f6301,f6302,f6303,f6266,f6267,f6309,f4252,f6314,f484,f4670,f4743,f1770,f754,f369,f6104,f4744,f4671,f4745,f4672,f5767,f5766,f3635,f1970,f5782,f3899,f367,f3634,f1972,f1969,f366,f365,f806,f807,f5780,f805,f804,f5777,f4646,f4741,f4668,f4667,f4742,f4666,f4669,f4739,f4740,f1795,f1794,f1769,f4856,f4832,f4831,f4853,f370,f1327,f5778,f4719,f4718,f4637,f4717,f4716,f4706,f4854,f4732,f6870,f6933,f6938,f6945,f6952,f6967,f6988,f6989,f6996,f7001,f7012,f7026,f7058,f7060,f7063,f7084,f7094,f7112,f7114,f7116,f7126,f7140,f7162,f7193,f7195,f7197,f7199,f7216,f7231,f7233,f7235,f7237,f7273,f7280,f7283,f7343,f7348,f7357,f7365])).
fof(f7358,plain,(
  $false | ($spl3 | $spl22)),
  inference(global_subsumption,[],[f288,f287,f289,f487,f296,f297,f299,f304,f303,f308,f307,f358,f359,f360,f368,f383,f382,f381,f390,f391,f392,f393,f402,f401,f400,f399,f398,f397,f413,f412,f411,f410,f409,f408,f417,f414,f427,f430,f437,f473,f492,f532,f535,f575,f639,f675,f696,f727,f728,f730,f732,f753,f756,f769,f785,f787,f1345,f1344,f1377,f1378,f1406,f1408,f1489,f1492,f1493,f1495,f803,f791,f790,f802,f808,f789,f389,f388,f387,f372,f371,f395,f407,f406,f405,f404,f403,f396,f394,f380,f379,f378,f377,f376,f375,f1320,f1708,f1709,f1713,f1723,f1721,f1724,f1747,f1781,f1790,f1792,f1775,f1778,f1801,f1804,f1816,f1903,f1905,f1918,f1920,f1921,f1931,f2108,f2109,f2130,f2060,f2061,f2134,f2144,f2079,f2080,f2148,f2161,f2179,f2178,f2260,f2263,f2300,f2283,f2284,f2305,f2313,f2334,f2331,f2335,f2333,f2380,f2365,f2366,f2381,f2382,f2383,f2384,f2385,f2386,f2387,f2388,f2390,f2391,f2393,f2415,f2418,f2536,f2538,f2560,f2561,f2544,f2562,f2563,f2564,f2565,f2566,f2567,f2568,f2569,f2570,f2572,f2573,f2576,f2588,f2589,f2748,f2763,f2776,f2797,f2806,f2835,f2844,f2920,f2960,f2961,f3384,f3385,f3011,f3389,f3026,f3028,f3029,f3415,f3416,f3417,f3418,f3419,f3420,f3085,f3421,f3422,f3090,f3146,f3151,f3462,f3464,f3466,f3473,f3477,f3478,f3479,f3480,f3481,f3482,f3184,f3186,f3494,f3495,f3496,f3497,f3498,f3499,f3500,f3501,f3511,f3513,f3515,f3517,f3518,f3520,f3521,f3522,f3524,f3264,f3527,f3528,f3269,f3292,f3280,f3569,f3585,f3586,f3554,f3637,f3642,f3666,f3781,f3790,f3742,f3745,f3746,f3764,f3798,f3799,f3800,f3803,f3853,f3854,f3896,f3897,f3963,f3924,f3947,f4038,f4096,f4138,f4142,f4144,f4145,f4104,f4156,f4172,f4177,f4247,f4206,f4209,f4210,f4235,f4251,f4230,f4231,f2543,f4324,f4345,f4326,f4349,f4362,f4476,f4501,f4478,f4507,f4521,f4596,f4595,f4597,f4598,f4599,f4773,f4601,f4634,f4635,f4636,f4640,f4641,f4642,f4643,f4644,f4645,f4650,f4651,f4652,f4653,f4654,f4656,f4657,f4658,f4659,f4660,f4661,f4676,f4679,f4680,f4684,f4685,f4686,f4703,f4704,f4705,f4709,f4710,f4711,f4712,f4713,f4714,f4715,f4723,f4724,f4725,f4726,f4727,f4729,f4730,f4731,f4733,f4734,f4749,f4752,f4753,f4757,f4758,f4759,f4855,f4858,f4885,f4886,f4878,f4879,f4880,f4887,f4889,f4884,f5023,f5024,f5026,f5027,f5028,f5029,f5030,f5031,f5033,f5034,f5035,f5036,f5039,f5090,f5135,f5092,f5149,f5106,f5107,f5108,f5162,f5110,f5169,f5124,f5125,f5131,f5132,f5182,f5244,f5278,f5285,f5259,f5260,f5261,f5262,f5264,f5265,f5266,f5267,f5277,f5354,f5388,f5395,f5369,f5370,f5378,f5379,f5381,f5382,f5383,f5384,f5387,f5509,f5510,f5511,f5624,f5625,f5626,f5784,f6101,f6102,f6280,f6281,f6240,f6241,f6242,f6282,f6245,f6284,f6291,f6292,f6293,f6294,f6295,f6296,f6297,f6298,f6299,f6300,f6301,f6302,f6303,f6266,f6267,f6309,f4252,f6314,f484,f4670,f4743,f1770,f754,f369,f6104,f4744,f4671,f4745,f4672,f5767,f5766,f3635,f1970,f5782,f3899,f367,f3634,f1972,f1969,f366,f365,f806,f807,f5780,f805,f804,f5777,f4646,f4741,f4668,f4667,f4742,f4666,f4669,f4739,f4740,f1795,f1794,f1769,f4856,f4832,f4831,f4853,f370,f1327,f5778,f4719,f4718,f4637,f4717,f4716,f4706,f4854,f4732,f6870,f6933,f6938,f6945,f6952,f6967,f6988,f6989,f6996,f7001,f7012,f7026,f7058,f7060,f7063,f7084,f7094,f7112,f7114,f7116,f7126,f7140,f7162,f7193,f7195,f7197,f7199,f7216,f7231,f7233,f7235,f7237,f7273,f7280,f7283,f7343,f7348,f7357])).
fof(f7353,plain,(
  $false | ($spl3 | $spl22)),
  inference(subsumption_resolution,[],[f7352,f289])).
fof(f7352,plain,(
  ~p(s(bool,'T_0')) | ($spl3 | $spl22)),
  inference(forward_demodulation,[],[f7351,f6870])).
fof(f7351,plain,(
  ( ! [X10,X11,X9] : (~p(s(bool,'const.bool.IN_2'(s(bool,'F_0'),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),sK14('const.bool.IN_2'(s(X9,X10),s(fun(X9,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X9),'const.list.NIL_0')))),X11,bool)))))))) ) | ($spl3 | $spl22)),
  inference(subsumption_resolution,[],[f7350,f289])).
fof(f7350,plain,(
  ( ! [X10,X11,X9] : (~p(s(bool,'T_0')) | ~p(s(bool,'const.bool.IN_2'(s(bool,'F_0'),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),sK14('const.bool.IN_2'(s(X9,X10),s(fun(X9,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X9),'const.list.NIL_0')))),X11,bool)))))))) ) | ($spl3 | $spl22)),
  inference(forward_demodulation,[],[f2562,f6870])).
fof(f7349,plain,(
  $false | ($spl3 | $spl22)),
  inference(global_subsumption,[],[f288,f287,f289,f487,f296,f297,f299,f304,f303,f308,f307,f358,f359,f360,f368,f383,f382,f381,f390,f391,f392,f393,f402,f401,f400,f399,f398,f397,f413,f412,f411,f410,f409,f408,f417,f414,f427,f430,f437,f473,f492,f532,f535,f575,f639,f675,f696,f727,f728,f730,f732,f753,f756,f769,f785,f787,f1345,f1344,f1377,f1378,f1406,f1408,f1489,f1492,f1493,f1495,f803,f791,f790,f802,f808,f789,f389,f388,f387,f372,f371,f395,f407,f406,f405,f404,f403,f396,f394,f380,f379,f378,f377,f376,f375,f1320,f1708,f1709,f1713,f1723,f1721,f1724,f1747,f1781,f1790,f1792,f1775,f1778,f1801,f1804,f1816,f1903,f1905,f1918,f1920,f1921,f1931,f2108,f2109,f2130,f2060,f2061,f2134,f2144,f2079,f2080,f2148,f2161,f2179,f2178,f2260,f2263,f2300,f2283,f2284,f2305,f2313,f2334,f2331,f2335,f2333,f2380,f2365,f2366,f2381,f2382,f2383,f2384,f2385,f2386,f2387,f2388,f2390,f2391,f2393,f2415,f2418,f2536,f2538,f2560,f2561,f2544,f2562,f2563,f2564,f2565,f2566,f2567,f2568,f2569,f2570,f2572,f2573,f2576,f2588,f2589,f2748,f2763,f2776,f2797,f2806,f2835,f2844,f2920,f2960,f2961,f3384,f3385,f3011,f3389,f3026,f3028,f3029,f3415,f3416,f3417,f3418,f3419,f3420,f3085,f3421,f3422,f3090,f3146,f3151,f3462,f3464,f3466,f3473,f3477,f3478,f3479,f3480,f3481,f3482,f3184,f3186,f3494,f3495,f3496,f3497,f3498,f3499,f3500,f3501,f3511,f3513,f3515,f3517,f3518,f3520,f3521,f3522,f3524,f3264,f3527,f3528,f3269,f3292,f3280,f3569,f3585,f3586,f3554,f3637,f3642,f3666,f3781,f3790,f3742,f3745,f3746,f3764,f3798,f3799,f3800,f3803,f3853,f3854,f3896,f3897,f3963,f3924,f3947,f4038,f4096,f4138,f4142,f4144,f4145,f4104,f4156,f4172,f4177,f4247,f4206,f4209,f4210,f4235,f4251,f4230,f4231,f2543,f4324,f4345,f4326,f4349,f4362,f4476,f4501,f4478,f4507,f4521,f4596,f4595,f4597,f4598,f4599,f4773,f4601,f4634,f4635,f4636,f4640,f4641,f4642,f4643,f4644,f4645,f4650,f4651,f4652,f4653,f4654,f4656,f4657,f4658,f4659,f4660,f4661,f4676,f4679,f4680,f4684,f4685,f4686,f4703,f4704,f4705,f4709,f4710,f4711,f4712,f4713,f4714,f4715,f4723,f4724,f4725,f4726,f4727,f4729,f4730,f4731,f4733,f4734,f4749,f4752,f4753,f4757,f4758,f4759,f4855,f4858,f4885,f4886,f4878,f4879,f4880,f4887,f4889,f4884,f5023,f5024,f5026,f5027,f5028,f5029,f5030,f5031,f5033,f5034,f5035,f5036,f5039,f5090,f5135,f5092,f5149,f5106,f5107,f5108,f5162,f5110,f5169,f5124,f5125,f5131,f5132,f5182,f5244,f5278,f5285,f5259,f5260,f5261,f5262,f5264,f5265,f5266,f5267,f5277,f5354,f5388,f5395,f5369,f5370,f5378,f5379,f5381,f5382,f5383,f5384,f5387,f5509,f5510,f5511,f5624,f5625,f5626,f5784,f6101,f6102,f6280,f6281,f6240,f6241,f6242,f6282,f6245,f6284,f6291,f6292,f6293,f6294,f6295,f6296,f6297,f6298,f6299,f6300,f6301,f6302,f6303,f6266,f6267,f6309,f4252,f6314,f484,f4670,f4743,f1770,f754,f369,f6104,f4744,f4671,f4745,f4672,f5767,f5766,f3635,f1970,f5782,f3899,f367,f3634,f1972,f1969,f366,f365,f806,f807,f5780,f805,f804,f5777,f4646,f4741,f4668,f4667,f4742,f4666,f4669,f4739,f4740,f1795,f1794,f1769,f4856,f4832,f4831,f4853,f370,f1327,f5778,f4719,f4718,f4637,f4717,f4716,f4706,f4854,f4732,f6870,f6933,f6938,f6945,f6952,f6967,f6988,f6989,f6996,f7001,f7012,f7026,f7058,f7060,f7063,f7084,f7094,f7112,f7114,f7116,f7126,f7140,f7162,f7193,f7195,f7197,f7199,f7216,f7231,f7233,f7235,f7237,f7273,f7280,f7283,f7343,f7348])).
fof(f7344,plain,(
  $false | ($spl3 | $spl22)),
  inference(global_subsumption,[],[f288,f287,f289,f487,f296,f297,f299,f304,f303,f308,f307,f358,f359,f360,f368,f383,f382,f381,f390,f391,f392,f393,f402,f401,f400,f399,f398,f397,f413,f412,f411,f410,f409,f408,f417,f414,f427,f430,f437,f473,f492,f532,f535,f575,f639,f675,f696,f727,f728,f730,f732,f753,f756,f769,f785,f787,f1345,f1344,f1377,f1378,f1406,f1408,f1489,f1492,f1493,f1495,f803,f791,f790,f802,f808,f789,f389,f388,f387,f372,f371,f395,f407,f406,f405,f404,f403,f396,f394,f380,f379,f378,f377,f376,f375,f1320,f1708,f1709,f1713,f1723,f1721,f1724,f1747,f1781,f1790,f1792,f1775,f1778,f1801,f1804,f1816,f1903,f1905,f1918,f1920,f1921,f1931,f2108,f2109,f2130,f2060,f2061,f2134,f2144,f2079,f2080,f2148,f2161,f2179,f2178,f2260,f2263,f2300,f2283,f2284,f2305,f2313,f2334,f2331,f2335,f2333,f2380,f2365,f2366,f2381,f2382,f2383,f2384,f2385,f2386,f2387,f2388,f2390,f2391,f2393,f2415,f2418,f2536,f2538,f2560,f2561,f2544,f2562,f2563,f2564,f2565,f2566,f2567,f2568,f2569,f2570,f2572,f2573,f2576,f2588,f2589,f2748,f2763,f2776,f2797,f2806,f2835,f2844,f2920,f2960,f2961,f3384,f3385,f3011,f3389,f3026,f3028,f3029,f3415,f3416,f3417,f3418,f3419,f3420,f3085,f3421,f3422,f3090,f3146,f3151,f3462,f3464,f3466,f3473,f3477,f3478,f3479,f3480,f3481,f3482,f3184,f3186,f3494,f3495,f3496,f3497,f3498,f3499,f3500,f3501,f3511,f3513,f3515,f3517,f3518,f3520,f3521,f3522,f3524,f3264,f3527,f3528,f3269,f3292,f3280,f3569,f3585,f3586,f3554,f3637,f3642,f3666,f3781,f3790,f3742,f3745,f3746,f3764,f3798,f3799,f3800,f3803,f3853,f3854,f3896,f3897,f3963,f3924,f3947,f4038,f4096,f4138,f4142,f4144,f4145,f4104,f4156,f4172,f4177,f4247,f4206,f4209,f4210,f4235,f4251,f4230,f4231,f2543,f4324,f4345,f4326,f4349,f4362,f4476,f4501,f4478,f4507,f4521,f4596,f4595,f4597,f4598,f4599,f4773,f4601,f4634,f4635,f4636,f4640,f4641,f4642,f4643,f4644,f4645,f4650,f4651,f4652,f4653,f4654,f4656,f4657,f4658,f4659,f4660,f4661,f4676,f4679,f4680,f4684,f4685,f4686,f4703,f4704,f4705,f4709,f4710,f4711,f4712,f4713,f4714,f4715,f4723,f4724,f4725,f4726,f4727,f4729,f4730,f4731,f4733,f4734,f4749,f4752,f4753,f4757,f4758,f4759,f4855,f4858,f4885,f4886,f4878,f4879,f4880,f4887,f4889,f4884,f5023,f5024,f5026,f5027,f5028,f5029,f5030,f5031,f5033,f5034,f5035,f5036,f5039,f5090,f5135,f5092,f5149,f5106,f5107,f5108,f5162,f5110,f5169,f5124,f5125,f5131,f5132,f5182,f5244,f5278,f5285,f5259,f5260,f5261,f5262,f5264,f5265,f5266,f5267,f5277,f5354,f5388,f5395,f5369,f5370,f5378,f5379,f5381,f5382,f5383,f5384,f5387,f5509,f5510,f5511,f5624,f5625,f5626,f5784,f6101,f6102,f6280,f6281,f6240,f6241,f6242,f6282,f6245,f6284,f6291,f6292,f6293,f6294,f6295,f6296,f6297,f6298,f6299,f6300,f6301,f6302,f6303,f6266,f6267,f6309,f4252,f6314,f484,f4670,f4743,f1770,f754,f369,f6104,f4744,f4671,f4745,f4672,f5767,f5766,f3635,f1970,f5782,f3899,f367,f3634,f1972,f1969,f366,f365,f806,f807,f5780,f805,f804,f5777,f4646,f4741,f4668,f4667,f4742,f4666,f4669,f4739,f4740,f1795,f1794,f1769,f4856,f4832,f4831,f4853,f370,f1327,f5778,f4719,f4718,f4637,f4717,f4716,f4706,f4854,f4732,f6870,f6933,f6938,f6945,f6952,f6967,f6988,f6989,f6996,f7001,f7012,f7026,f7058,f7060,f7063,f7084,f7094,f7112,f7114,f7116,f7126,f7140,f7162,f7193,f7195,f7197,f7199,f7216,f7231,f7233,f7235,f7237,f7273,f7280,f7283,f7343])).
fof(f7278,plain,(
  $false | ($spl3 | $spl22)),
  inference(subsumption_resolution,[],[f7277,f289])).
fof(f7277,plain,(
  ~p(s(bool,'T_0')) | ($spl3 | $spl22)),
  inference(forward_demodulation,[],[f7276,f6870])).
fof(f7276,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),X1))))))) ) | ($spl3 | $spl22)),
  inference(subsumption_resolution,[],[f7275,f289])).
fof(f7275,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'T_0')) | ~p(s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),X1))))))) ) | ($spl3 | $spl22)),
  inference(forward_demodulation,[],[f376,f6870])).
fof(f7271,plain,(
  $false | ($spl3 | $spl22)),
  inference(subsumption_resolution,[],[f7270,f289])).
fof(f7270,plain,(
  ~p(s(bool,'T_0')) | ($spl3 | $spl22)),
  inference(forward_demodulation,[],[f7269,f6870])).
fof(f7269,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),X1))))))) ) | ($spl3 | $spl22)),
  inference(subsumption_resolution,[],[f7268,f289])).
fof(f7268,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'T_0')) | ~p(s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),X1))))))) ) | ($spl3 | $spl22)),
  inference(forward_demodulation,[],[f379,f6870])).
fof(f7251,plain,(
  $false | ($spl3 | $spl22)),
  inference(subsumption_resolution,[],[f7250,f289])).
fof(f7250,plain,(
  ~p(s(bool,'T_0')) | ($spl3 | $spl22)),
  inference(forward_demodulation,[],[f7249,f6870])).
fof(f7249,plain,(
  ( ! [X30,X28,X29,X27] : (~p(s(bool,'const.bool.IN_2'(s(X27,X28),s(fun(X27,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X27),sK11('const.ind_type.FCONS_3'(s(X27,X28),s(fun('type.num.num',X27),X29),s('type.num.num','const.num.|48|_0')),X30,X27)))))))) ) | ($spl3 | $spl22)),
  inference(subsumption_resolution,[],[f7248,f289])).
fof(f7248,plain,(
  ( ! [X30,X28,X29,X27] : (~p(s(bool,'T_0')) | ~p(s(bool,'const.bool.IN_2'(s(X27,X28),s(fun(X27,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X27),sK11('const.ind_type.FCONS_3'(s(X27,X28),s(fun('type.num.num',X27),X29),s('type.num.num','const.num.|48|_0')),X30,X27)))))))) ) | ($spl3 | $spl22)),
  inference(forward_demodulation,[],[f2390,f6870])).
fof(f7247,plain,(
  $false | ($spl3 | $spl22)),
  inference(subsumption_resolution,[],[f7246,f289])).
fof(f7246,plain,(
  ~p(s(bool,'T_0')) | ($spl3 | $spl22)),
  inference(forward_demodulation,[],[f7245,f6870])).
fof(f7245,plain,(
  ( ! [X33,X31,X34,X32] : (~p(s(bool,'const.bool.IN_2'(s(X31,X32),s(fun(X31,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X31),sK14('const.ind_type.FCONS_3'(s(X31,X32),s(fun('type.num.num',X31),X33),s('type.num.num','const.num.|48|_0')),X34,X31)))))))) ) | ($spl3 | $spl22)),
  inference(subsumption_resolution,[],[f7244,f289])).
fof(f7244,plain,(
  ( ! [X33,X31,X34,X32] : (~p(s(bool,'T_0')) | ~p(s(bool,'const.bool.IN_2'(s(X31,X32),s(fun(X31,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X31),sK14('const.ind_type.FCONS_3'(s(X31,X32),s(fun('type.num.num',X31),X33),s('type.num.num','const.num.|48|_0')),X34,X31)))))))) ) | ($spl3 | $spl22)),
  inference(forward_demodulation,[],[f2572,f6870])).
fof(f7191,plain,(
  $false | ($spl3 | $spl22)),
  inference(subsumption_resolution,[],[f7190,f289])).
fof(f7190,plain,(
  ~p(s(bool,'T_0')) | ($spl3 | $spl22)),
  inference(forward_demodulation,[],[f7189,f6870])).
fof(f7189,plain,(
  ( ! [X39,X37,X35,X38,X36] : (~p(s(bool,'const.bool.IN_2'(s(X35,happ(s(fun('type.num.num',X35),X37),s('type.num.num',X38))),s(fun(X35,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X35),sK14('const.ind_type.FCONS_3'(s(X35,X36),s(fun('type.num.num',X35),X37),s('type.num.num','const.num.SUC_1'(s('type.num.num',X38)))),X39,X35)))))))) ) | ($spl3 | $spl22)),
  inference(subsumption_resolution,[],[f7188,f289])).
fof(f7188,plain,(
  ( ! [X39,X37,X35,X38,X36] : (~p(s(bool,'T_0')) | ~p(s(bool,'const.bool.IN_2'(s(X35,happ(s(fun('type.num.num',X35),X37),s('type.num.num',X38))),s(fun(X35,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X35),sK14('const.ind_type.FCONS_3'(s(X35,X36),s(fun('type.num.num',X35),X37),s('type.num.num','const.num.SUC_1'(s('type.num.num',X38)))),X39,X35)))))))) ) | ($spl3 | $spl22)),
  inference(forward_demodulation,[],[f2573,f6870])).
fof(f7187,plain,(
  $false | ($spl3 | $spl22)),
  inference(subsumption_resolution,[],[f7186,f289])).
fof(f7186,plain,(
  ~p(s(bool,'T_0')) | ($spl3 | $spl22)),
  inference(forward_demodulation,[],[f7185,f6870])).
fof(f7185,plain,(
  ( ! [X35,X33,X31,X34,X32] : (~p(s(bool,'const.bool.IN_2'(s(X31,happ(s(fun('type.num.num',X31),X33),s('type.num.num',X34))),s(fun(X31,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X31),sK11('const.ind_type.FCONS_3'(s(X31,X32),s(fun('type.num.num',X31),X33),s('type.num.num','const.num.SUC_1'(s('type.num.num',X34)))),X35,X31)))))))) ) | ($spl3 | $spl22)),
  inference(subsumption_resolution,[],[f7184,f289])).
fof(f7184,plain,(
  ( ! [X35,X33,X31,X34,X32] : (~p(s(bool,'T_0')) | ~p(s(bool,'const.bool.IN_2'(s(X31,happ(s(fun('type.num.num',X31),X33),s('type.num.num',X34))),s(fun(X31,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X31),sK11('const.ind_type.FCONS_3'(s(X31,X32),s(fun('type.num.num',X31),X33),s('type.num.num','const.num.SUC_1'(s('type.num.num',X34)))),X35,X31)))))))) ) | ($spl3 | $spl22)),
  inference(forward_demodulation,[],[f2391,f6870])).
fof(f7182,plain,(
  $false | ($spl3 | $spl22)),
  inference(subsumption_resolution,[],[f7181,f289])).
fof(f7181,plain,(
  ~p(s(bool,'T_0')) | ($spl3 | $spl22)),
  inference(forward_demodulation,[],[f7180,f6870])).
fof(f7180,plain,(
  ( ! [X26,X24,X23,X21,X27,X25,X22] : (~p(s(bool,'const.bool.IN_2'(s(X21,happ(s(fun(X22,X21),X23),s(X22,happ(s(fun(X24,X22),X25),s(X24,X26))))),s(fun(X21,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X21),X27))))))) ) | ($spl3 | $spl22)),
  inference(subsumption_resolution,[],[f7179,f289])).
fof(f7179,plain,(
  ( ! [X26,X24,X23,X21,X27,X25,X22] : (~p(s(bool,'T_0')) | ~p(s(bool,'const.bool.IN_2'(s(X21,happ(s(fun(X22,X21),X23),s(X22,happ(s(fun(X24,X22),X25),s(X24,X26))))),s(fun(X21,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X21),X27))))))) ) | ($spl3 | $spl22)),
  inference(forward_demodulation,[],[f4634,f6870])).
fof(f7178,plain,(
  $false | ($spl3 | $spl22)),
  inference(subsumption_resolution,[],[f7177,f289])).
fof(f7177,plain,(
  ~p(s(bool,'T_0')) | ($spl3 | $spl22)),
  inference(forward_demodulation,[],[f7176,f6870])).
fof(f7176,plain,(
  ( ! [X30,X28,X33,X31,X29,X34,X32] : (~p(s(bool,'const.bool.IN_2'(s(X28,happ(s(fun(X29,X28),X30),s(X29,happ(s(fun(X31,X29),X32),s(X31,X33))))),s(fun(X28,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X28),X34))))))) ) | ($spl3 | $spl22)),
  inference(subsumption_resolution,[],[f7175,f289])).
fof(f7175,plain,(
  ( ! [X30,X28,X33,X31,X29,X34,X32] : (~p(s(bool,'T_0')) | ~p(s(bool,'const.bool.IN_2'(s(X28,happ(s(fun(X29,X28),X30),s(X29,happ(s(fun(X31,X29),X32),s(X31,X33))))),s(fun(X28,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X28),X34))))))) ) | ($spl3 | $spl22)),
  inference(forward_demodulation,[],[f4635,f6870])).
fof(f7151,plain,(
  $false | ($spl3 | $spl22)),
  inference(subsumption_resolution,[],[f7150,f289])).
fof(f7150,plain,(
  ~p(s(bool,'T_0')) | ($spl3 | $spl22)),
  inference(forward_demodulation,[],[f7149,f6870])).
fof(f7149,plain,(
  ( ! [X26,X24,X23,X21,X27,X25,X22] : (~p(s(bool,'const.bool.IN_2'(s(X21,happ(s(fun(X22,X21),'_dst_x0x1_2'(s(fun(X23,X21),X24),s(fun(X22,X23),X25))),s(X22,X26))),s(fun(X21,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X21),X27))))))) ) | ($spl3 | $spl22)),
  inference(subsumption_resolution,[],[f7148,f289])).
fof(f7148,plain,(
  ( ! [X26,X24,X23,X21,X27,X25,X22] : (~p(s(bool,'T_0')) | ~p(s(bool,'const.bool.IN_2'(s(X21,happ(s(fun(X22,X21),'_dst_x0x1_2'(s(fun(X23,X21),X24),s(fun(X22,X23),X25))),s(X22,X26))),s(fun(X21,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X21),X27))))))) ) | ($spl3 | $spl22)),
  inference(forward_demodulation,[],[f4703,f6870])).
fof(f7147,plain,(
  $false | ($spl3 | $spl22)),
  inference(subsumption_resolution,[],[f7146,f289])).
fof(f7146,plain,(
  ~p(s(bool,'T_0')) | ($spl3 | $spl22)),
  inference(forward_demodulation,[],[f7145,f6870])).
fof(f7145,plain,(
  ( ! [X30,X28,X33,X31,X29,X34,X32] : (~p(s(bool,'const.bool.IN_2'(s(X28,happ(s(fun(X29,X28),'_dst_x0x1_2'(s(fun(X30,X28),X31),s(fun(X29,X30),X32))),s(X29,X33))),s(fun(X28,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X28),X34))))))) ) | ($spl3 | $spl22)),
  inference(subsumption_resolution,[],[f7144,f289])).
fof(f7144,plain,(
  ( ! [X30,X28,X33,X31,X29,X34,X32] : (~p(s(bool,'T_0')) | ~p(s(bool,'const.bool.IN_2'(s(X28,happ(s(fun(X29,X28),'_dst_x0x1_2'(s(fun(X30,X28),X31),s(fun(X29,X30),X32))),s(X29,X33))),s(fun(X28,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X28),X34))))))) ) | ($spl3 | $spl22)),
  inference(forward_demodulation,[],[f4704,f6870])).
fof(f7134,plain,(
  $false | ($spl3 | $spl22)),
  inference(subsumption_resolution,[],[f7133,f289])).
fof(f7133,plain,(
  ~p(s(bool,'T_0')) | ($spl3 | $spl22)),
  inference(forward_demodulation,[],[f7132,f6870])).
fof(f7132,plain,(
  ( ! [X19,X18] : (~p(s(bool,'const.bool.IN_2'(s(bool,'T_0'),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),sK11('const.bool.BOUNDED_1'(s(bool,X18)),X19,bool)))))))) ) | ($spl3 | $spl22)),
  inference(subsumption_resolution,[],[f7131,f289])).
fof(f7131,plain,(
  ( ! [X19,X18] : (~p(s(bool,'T_0')) | ~p(s(bool,'const.bool.IN_2'(s(bool,'T_0'),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),sK11('const.bool.BOUNDED_1'(s(bool,X18)),X19,bool)))))))) ) | ($spl3 | $spl22)),
  inference(forward_demodulation,[],[f2386,f6870])).
fof(f7130,plain,(
  $false | ($spl3 | $spl22)),
  inference(subsumption_resolution,[],[f7129,f289])).
fof(f7129,plain,(
  ~p(s(bool,'T_0')) | ($spl3 | $spl22)),
  inference(forward_demodulation,[],[f7128,f6870])).
fof(f7128,plain,(
  ( ! [X23,X22] : (~p(s(bool,'const.bool.IN_2'(s(bool,'T_0'),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),sK14('const.bool.BOUNDED_1'(s(bool,X22)),X23,bool)))))))) ) | ($spl3 | $spl22)),
  inference(subsumption_resolution,[],[f7127,f289])).
fof(f7127,plain,(
  ( ! [X23,X22] : (~p(s(bool,'T_0')) | ~p(s(bool,'const.bool.IN_2'(s(bool,'T_0'),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),sK14('const.bool.BOUNDED_1'(s(bool,X22)),X23,bool)))))))) ) | ($spl3 | $spl22)),
  inference(forward_demodulation,[],[f2568,f6870])).
fof(f7124,plain,(
  $false | ($spl3 | $spl22)),
  inference(subsumption_resolution,[],[f7123,f289])).
fof(f7123,plain,(
  ~p(s(bool,'T_0')) | ($spl3 | $spl22)),
  inference(forward_demodulation,[],[f7122,f6870])).
fof(f7122,plain,(
  ( ! [X14,X13] : (~p(s(bool,'const.bool.IN_2'(s(bool,X13),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),sK11('const.marker.Cong_1'(s(bool,X13)),X14,bool)))))))) ) | ($spl3 | $spl22)),
  inference(subsumption_resolution,[],[f7121,f289])).
fof(f7121,plain,(
  ( ! [X14,X13] : (~p(s(bool,'T_0')) | ~p(s(bool,'const.bool.IN_2'(s(bool,X13),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),sK11('const.marker.Cong_1'(s(bool,X13)),X14,bool)))))))) ) | ($spl3 | $spl22)),
  inference(forward_demodulation,[],[f2384,f6870])).
fof(f7120,plain,(
  $false | ($spl3 | $spl22)),
  inference(subsumption_resolution,[],[f7119,f289])).
fof(f7119,plain,(
  ~p(s(bool,'T_0')) | ($spl3 | $spl22)),
  inference(forward_demodulation,[],[f7118,f6870])).
fof(f7118,plain,(
  ( ! [X17,X18] : (~p(s(bool,'const.bool.IN_2'(s(bool,X17),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),sK14('const.marker.Cong_1'(s(bool,X17)),X18,bool)))))))) ) | ($spl3 | $spl22)),
  inference(subsumption_resolution,[],[f7117,f289])).
fof(f7117,plain,(
  ( ! [X17,X18] : (~p(s(bool,'T_0')) | ~p(s(bool,'const.bool.IN_2'(s(bool,X17),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),sK14('const.marker.Cong_1'(s(bool,X17)),X18,bool)))))))) ) | ($spl3 | $spl22)),
  inference(forward_demodulation,[],[f2566,f6870])).
fof(f7110,plain,(
  $false | ($spl3 | $spl22)),
  inference(subsumption_resolution,[],[f7109,f289])).
fof(f7109,plain,(
  ~p(s(bool,'T_0')) | ($spl3 | $spl22)),
  inference(forward_demodulation,[],[f7108,f6870])).
fof(f7108,plain,(
  ( ! [X28,X29,X27] : (~p(s(bool,'const.bool.IN_2'(s('type.list.list'(X27),X28),s(fun('type.list.list'(X27),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'(X27)),sK14('const.list.APPEND_2'(s('type.list.list'(X27),'const.list.NIL_0'),s('type.list.list'(X27),X28)),X29,'type.list.list'(X27))))))))) ) | ($spl3 | $spl22)),
  inference(subsumption_resolution,[],[f7107,f289])).
fof(f7107,plain,(
  ( ! [X28,X29,X27] : (~p(s(bool,'T_0')) | ~p(s(bool,'const.bool.IN_2'(s('type.list.list'(X27),X28),s(fun('type.list.list'(X27),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'(X27)),sK14('const.list.APPEND_2'(s('type.list.list'(X27),'const.list.NIL_0'),s('type.list.list'(X27),X28)),X29,'type.list.list'(X27))))))))) ) | ($spl3 | $spl22)),
  inference(forward_demodulation,[],[f2570,f6870])).
fof(f7106,plain,(
  $false | ($spl3 | $spl22)),
  inference(subsumption_resolution,[],[f7105,f289])).
fof(f7105,plain,(
  ~p(s(bool,'T_0')) | ($spl3 | $spl22)),
  inference(forward_demodulation,[],[f7104,f6870])).
fof(f7104,plain,(
  ( ! [X26,X24,X25] : (~p(s(bool,'const.bool.IN_2'(s('type.list.list'(X24),X25),s(fun('type.list.list'(X24),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'(X24)),sK14('const.list.APPEND_2'(s('type.list.list'(X24),X25),s('type.list.list'(X24),'const.list.NIL_0')),X26,'type.list.list'(X24))))))))) ) | ($spl3 | $spl22)),
  inference(subsumption_resolution,[],[f7103,f289])).
fof(f7103,plain,(
  ( ! [X26,X24,X25] : (~p(s(bool,'T_0')) | ~p(s(bool,'const.bool.IN_2'(s('type.list.list'(X24),X25),s(fun('type.list.list'(X24),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'(X24)),sK14('const.list.APPEND_2'(s('type.list.list'(X24),X25),s('type.list.list'(X24),'const.list.NIL_0')),X26,'type.list.list'(X24))))))))) ) | ($spl3 | $spl22)),
  inference(forward_demodulation,[],[f2569,f6870])).
fof(f7102,plain,(
  $false | ($spl3 | $spl22)),
  inference(subsumption_resolution,[],[f7101,f289])).
fof(f7101,plain,(
  ~p(s(bool,'T_0')) | ($spl3 | $spl22)),
  inference(forward_demodulation,[],[f7100,f6870])).
fof(f7100,plain,(
  ( ! [X24,X23,X25] : (~p(s(bool,'const.bool.IN_2'(s('type.list.list'(X23),X24),s(fun('type.list.list'(X23),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'(X23)),sK11('const.list.APPEND_2'(s('type.list.list'(X23),'const.list.NIL_0'),s('type.list.list'(X23),X24)),X25,'type.list.list'(X23))))))))) ) | ($spl3 | $spl22)),
  inference(subsumption_resolution,[],[f7099,f289])).
fof(f7099,plain,(
  ( ! [X24,X23,X25] : (~p(s(bool,'T_0')) | ~p(s(bool,'const.bool.IN_2'(s('type.list.list'(X23),X24),s(fun('type.list.list'(X23),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'(X23)),sK11('const.list.APPEND_2'(s('type.list.list'(X23),'const.list.NIL_0'),s('type.list.list'(X23),X24)),X25,'type.list.list'(X23))))))))) ) | ($spl3 | $spl22)),
  inference(forward_demodulation,[],[f2388,f6870])).
fof(f7098,plain,(
  $false | ($spl3 | $spl22)),
  inference(subsumption_resolution,[],[f7097,f289])).
fof(f7097,plain,(
  ~p(s(bool,'T_0')) | ($spl3 | $spl22)),
  inference(forward_demodulation,[],[f7096,f6870])).
fof(f7096,plain,(
  ( ! [X21,X22,X20] : (~p(s(bool,'const.bool.IN_2'(s('type.list.list'(X20),X21),s(fun('type.list.list'(X20),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'(X20)),sK11('const.list.APPEND_2'(s('type.list.list'(X20),X21),s('type.list.list'(X20),'const.list.NIL_0')),X22,'type.list.list'(X20))))))))) ) | ($spl3 | $spl22)),
  inference(subsumption_resolution,[],[f7095,f289])).
fof(f7095,plain,(
  ( ! [X21,X22,X20] : (~p(s(bool,'T_0')) | ~p(s(bool,'const.bool.IN_2'(s('type.list.list'(X20),X21),s(fun('type.list.list'(X20),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'(X20)),sK11('const.list.APPEND_2'(s('type.list.list'(X20),X21),s('type.list.list'(X20),'const.list.NIL_0')),X22,'type.list.list'(X20))))))))) ) | ($spl3 | $spl22)),
  inference(forward_demodulation,[],[f2387,f6870])).
fof(f7092,plain,(
  $false | ($spl3 | $spl22)),
  inference(subsumption_resolution,[],[f7091,f289])).
fof(f7091,plain,(
  ~p(s(bool,'T_0')) | ($spl3 | $spl22)),
  inference(forward_demodulation,[],[f7090,f6870])).
fof(f7090,plain,(
  ( ! [X132,X130,X128,X131,X129] : (~p(s(bool,'const.bool.IN_2'(s('type.list.list'(X128),'const.list.CONS_2'(s(X128,X129),s('type.list.list'(X128),'const.list.APPEND_2'(s('type.list.list'(X128),X130),s('type.list.list'(X128),X131))))),s(fun('type.list.list'(X128),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'(X128)),sK14('const.list.APPEND_2'(s('type.list.list'(X128),'const.list.CONS_2'(s(X128,X129),s('type.list.list'(X128),X130))),s('type.list.list'(X128),X131)),X132,'type.list.list'(X128))))))))) ) | ($spl3 | $spl22)),
  inference(subsumption_resolution,[],[f7089,f289])).
fof(f7089,plain,(
  ( ! [X132,X130,X128,X131,X129] : (~p(s(bool,'T_0')) | ~p(s(bool,'const.bool.IN_2'(s('type.list.list'(X128),'const.list.CONS_2'(s(X128,X129),s('type.list.list'(X128),'const.list.APPEND_2'(s('type.list.list'(X128),X130),s('type.list.list'(X128),X131))))),s(fun('type.list.list'(X128),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'(X128)),sK14('const.list.APPEND_2'(s('type.list.list'(X128),'const.list.CONS_2'(s(X128,X129),s('type.list.list'(X128),X130))),s('type.list.list'(X128),X131)),X132,'type.list.list'(X128))))))))) ) | ($spl3 | $spl22)),
  inference(forward_demodulation,[],[f3897,f6870])).
fof(f7088,plain,(
  $false | ($spl3 | $spl22)),
  inference(subsumption_resolution,[],[f7087,f289])).
fof(f7087,plain,(
  ~p(s(bool,'T_0')) | ($spl3 | $spl22)),
  inference(forward_demodulation,[],[f7086,f6870])).
fof(f7086,plain,(
  ( ! [X127,X125,X123,X126,X124] : (~p(s(bool,'const.bool.IN_2'(s('type.list.list'(X123),'const.list.CONS_2'(s(X123,X124),s('type.list.list'(X123),'const.list.APPEND_2'(s('type.list.list'(X123),X125),s('type.list.list'(X123),X126))))),s(fun('type.list.list'(X123),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'(X123)),sK11('const.list.APPEND_2'(s('type.list.list'(X123),'const.list.CONS_2'(s(X123,X124),s('type.list.list'(X123),X125))),s('type.list.list'(X123),X126)),X127,'type.list.list'(X123))))))))) ) | ($spl3 | $spl22)),
  inference(subsumption_resolution,[],[f7085,f289])).
fof(f7085,plain,(
  ( ! [X127,X125,X123,X126,X124] : (~p(s(bool,'T_0')) | ~p(s(bool,'const.bool.IN_2'(s('type.list.list'(X123),'const.list.CONS_2'(s(X123,X124),s('type.list.list'(X123),'const.list.APPEND_2'(s('type.list.list'(X123),X125),s('type.list.list'(X123),X126))))),s(fun('type.list.list'(X123),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'(X123)),sK11('const.list.APPEND_2'(s('type.list.list'(X123),'const.list.CONS_2'(s(X123,X124),s('type.list.list'(X123),X125))),s('type.list.list'(X123),X126)),X127,'type.list.list'(X123))))))))) ) | ($spl3 | $spl22)),
  inference(forward_demodulation,[],[f3896,f6870])).
fof(f7082,plain,(
  $false | ($spl3 | $spl22)),
  inference(subsumption_resolution,[],[f7081,f289])).
fof(f7081,plain,(
  ~p(s(bool,'T_0')) | ($spl3 | $spl22)),
  inference(forward_demodulation,[],[f7080,f6870])).
fof(f7080,plain,(
  ( ! [X39,X41,X38,X42,X40] : (~p(s(bool,'const.bool.IN_2'(s('type.ind_type.recspace'(X38),'const.ind_type.CONSTR_3'(s('type.num.num',X39),s(X38,X40),s(fun('type.num.num','type.ind_type.recspace'(X38)),X41))),s(fun('type.ind_type.recspace'(X38),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.ind_type.recspace'(X38)),sK14(happ(s(fun(fun('type.num.num','type.ind_type.recspace'(X38)),'type.ind_type.recspace'(X38)),happ(s(fun(X38,fun(fun('type.num.num','type.ind_type.recspace'(X38)),'type.ind_type.recspace'(X38))),'const.ind_type.CONSTR_1'(s('type.num.num',X39))),s(X38,X40))),s(fun('type.num.num','type.ind_type.recspace'(X38)),X41)),X42,'type.ind_type.recspace'(X38))))))))) ) | ($spl3 | $spl22)),
  inference(subsumption_resolution,[],[f7079,f289])).
fof(f7079,plain,(
  ( ! [X39,X41,X38,X42,X40] : (~p(s(bool,'T_0')) | ~p(s(bool,'const.bool.IN_2'(s('type.ind_type.recspace'(X38),'const.ind_type.CONSTR_3'(s('type.num.num',X39),s(X38,X40),s(fun('type.num.num','type.ind_type.recspace'(X38)),X41))),s(fun('type.ind_type.recspace'(X38),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.ind_type.recspace'(X38)),sK14(happ(s(fun(fun('type.num.num','type.ind_type.recspace'(X38)),'type.ind_type.recspace'(X38)),happ(s(fun(X38,fun(fun('type.num.num','type.ind_type.recspace'(X38)),'type.ind_type.recspace'(X38))),'const.ind_type.CONSTR_1'(s('type.num.num',X39))),s(X38,X40))),s(fun('type.num.num','type.ind_type.recspace'(X38)),X41)),X42,'type.ind_type.recspace'(X38))))))))) ) | ($spl3 | $spl22)),
  inference(forward_demodulation,[],[f6102,f6870])).
fof(f7078,plain,(
  $false | ($spl3 | $spl22)),
  inference(subsumption_resolution,[],[f7077,f289])).
fof(f7077,plain,(
  ~p(s(bool,'T_0')) | ($spl3 | $spl22)),
  inference(forward_demodulation,[],[f7076,f6870])).
fof(f7076,plain,(
  ( ! [X37,X35,X33,X36,X34] : (~p(s(bool,'const.bool.IN_2'(s('type.ind_type.recspace'(X33),'const.ind_type.CONSTR_3'(s('type.num.num',X34),s(X33,X35),s(fun('type.num.num','type.ind_type.recspace'(X33)),X36))),s(fun('type.ind_type.recspace'(X33),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.ind_type.recspace'(X33)),sK11(happ(s(fun(fun('type.num.num','type.ind_type.recspace'(X33)),'type.ind_type.recspace'(X33)),happ(s(fun(X33,fun(fun('type.num.num','type.ind_type.recspace'(X33)),'type.ind_type.recspace'(X33))),'const.ind_type.CONSTR_1'(s('type.num.num',X34))),s(X33,X35))),s(fun('type.num.num','type.ind_type.recspace'(X33)),X36)),X37,'type.ind_type.recspace'(X33))))))))) ) | ($spl3 | $spl22)),
  inference(subsumption_resolution,[],[f7075,f289])).
fof(f7075,plain,(
  ( ! [X37,X35,X33,X36,X34] : (~p(s(bool,'T_0')) | ~p(s(bool,'const.bool.IN_2'(s('type.ind_type.recspace'(X33),'const.ind_type.CONSTR_3'(s('type.num.num',X34),s(X33,X35),s(fun('type.num.num','type.ind_type.recspace'(X33)),X36))),s(fun('type.ind_type.recspace'(X33),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.ind_type.recspace'(X33)),sK11(happ(s(fun(fun('type.num.num','type.ind_type.recspace'(X33)),'type.ind_type.recspace'(X33)),happ(s(fun(X33,fun(fun('type.num.num','type.ind_type.recspace'(X33)),'type.ind_type.recspace'(X33))),'const.ind_type.CONSTR_1'(s('type.num.num',X34))),s(X33,X35))),s(fun('type.num.num','type.ind_type.recspace'(X33)),X36)),X37,'type.ind_type.recspace'(X33))))))))) ) | ($spl3 | $spl22)),
  inference(forward_demodulation,[],[f6101,f6870])).
fof(f6926,plain,(
  $false | ($spl3 | $spl22)),
  inference(subsumption_resolution,[],[f6871,f289])).
fof(f6871,plain,(
  ~p(s(bool,'T_0')) | ($spl3 | $spl22)),
  inference(backward_demodulation,[],[f6870,f484])).
fof(f6869,plain,(
  $false | ($spl0 | $spl18)),
  inference(global_subsumption,[],[f483,f288,f287,f289,f487,f296,f297,f299,f304,f303,f308,f307,f358,f359,f360,f368,f383,f382,f381,f390,f391,f392,f393,f402,f401,f400,f399,f398,f397,f413,f412,f411,f410,f409,f408,f417,f414,f427,f430,f437,f473,f492,f532,f535,f575,f639,f675,f696,f727,f728,f730,f732,f753,f756,f769,f785,f787,f1492,f1493,f1495,f803,f805,f791,f804,f790,f802,f808,f789,f389,f388,f387,f372,f371,f367,f366,f365,f806,f807,f395,f407,f406,f405,f404,f403,f396,f394,f380,f379,f378,f377,f376,f375,f1320,f754,f1327,f370,f369,f1708,f1709,f1713,f1723,f1721,f1724,f1747,f1781,f1790,f1792,f1794,f1795,f1769,f1770,f1775,f1778,f1801,f1804,f1816,f1903,f1905,f1918,f1920,f1921,f1931,f1969,f1970,f1972,f2108,f2109,f2130,f2060,f2061,f2134,f2144,f2079,f2080,f2148,f2161,f2300,f2283,f2284,f2305,f2313,f2334,f2331,f2335,f2333,f2380,f2365,f2366,f2381,f2383,f2384,f2385,f2386,f2387,f2388,f2390,f2391,f2393,f2561,f2544,f2562,f2565,f2566,f2567,f2568,f2569,f2570,f2572,f2573,f2576,f2920,f3634,f3635,f3637,f3853,f3854,f3896,f3897,f3899,f4096,f4138,f4104,f4156,f4172,f2543,f4324,f4345,f4326,f4349,f4362,f4476,f4501,f4478,f4507,f4521,f4596,f4595,f4597,f4598,f4599,f4773,f4601,f4634,f4635,f4636,f4637,f4640,f4641,f4642,f4643,f4644,f4645,f4646,f4650,f4651,f4652,f4653,f4654,f4656,f4657,f4658,f4659,f4660,f4661,f4666,f4667,f4668,f4669,f4670,f4671,f4672,f4676,f4679,f4680,f4684,f4685,f4686,f4703,f4704,f4705,f4706,f4709,f4710,f4711,f4712,f4713,f4714,f4715,f4716,f4717,f4718,f4719,f4723,f4724,f4725,f4726,f4727,f4729,f4730,f4731,f4732,f4733,f4734,f4739,f4740,f4741,f4742,f4743,f4744,f4745,f4749,f4752,f4753,f4757,f4758,f4759,f4855,f4856,f4831,f4832,f4858,f4853,f4854,f4885,f4886,f4878,f4879,f4880,f4887,f4889,f4884,f5023,f5024,f5026,f5027,f5028,f5029,f5030,f5031,f5033,f5034,f5035,f5036,f5039,f5090,f5135,f5092,f5149,f5106,f5107,f5108,f5162,f5110,f5169,f5124,f5125,f5131,f5132,f5182,f5244,f5278,f5285,f5259,f5260,f5261,f5262,f5264,f5265,f5266,f5267,f5277,f5354,f5388,f5395,f5369,f5370,f5378,f5379,f5381,f5382,f5383,f5384,f5387,f5509,f5510,f5511,f5624,f5625,f5626,f5780,f5782,f5766,f5767,f5784,f5777,f5778,f6101,f6102,f6104,f6280,f6281,f6240,f6241,f6242,f6282,f6245,f6284,f6291,f6292,f6293,f6294,f6295,f6296,f6297,f6298,f6299,f6300,f6301,f6302,f6303,f6266,f6267,f6309,f4249,f6592,f6614,f6616,f6621,f6638,f6640,f6642,f6644,f6650,f6652,f6654,f6656,f6658,f6678,f6692,f6700,f6708,f6710,f6712,f6726,f6734,f6748,f6752,f6754,f6776,f6781,f6789,f6793,f6803,f6811,f6815,f6823,f6827,f6831,f6833,f6845,f6865])).
fof(f6865,plain,(
  ( ! [X52,X50,X53,X51,X49] : (s('type.ind_type.recspace'(X49),'const.ind_type.CONSTR_3'(s('type.num.num',X50),s(X49,X51),s(fun('type.num.num','type.ind_type.recspace'(X49)),X52))) = s('type.ind_type.recspace'(X49),sK15(happ(s(fun(fun('type.num.num','type.ind_type.recspace'(X49)),'type.ind_type.recspace'(X49)),happ(s(fun(X49,fun(fun('type.num.num','type.ind_type.recspace'(X49)),'type.ind_type.recspace'(X49))),'const.ind_type.CONSTR_1'(s('type.num.num',X50))),s(X49,X51))),s(fun('type.num.num','type.ind_type.recspace'(X49)),X52)),X53,'type.ind_type.recspace'(X49)))) ) | $spl18),
  inference(subsumption_resolution,[],[f6584,f289])).
fof(f6584,plain,(
  ( ! [X52,X50,X53,X51,X49] : (~p(s(bool,'T_0')) | s('type.ind_type.recspace'(X49),'const.ind_type.CONSTR_3'(s('type.num.num',X50),s(X49,X51),s(fun('type.num.num','type.ind_type.recspace'(X49)),X52))) = s('type.ind_type.recspace'(X49),sK15(happ(s(fun(fun('type.num.num','type.ind_type.recspace'(X49)),'type.ind_type.recspace'(X49)),happ(s(fun(X49,fun(fun('type.num.num','type.ind_type.recspace'(X49)),'type.ind_type.recspace'(X49))),'const.ind_type.CONSTR_1'(s('type.num.num',X50))),s(X49,X51))),s(fun('type.num.num','type.ind_type.recspace'(X49)),X52)),X53,'type.ind_type.recspace'(X49)))) ) | $spl18),
  inference(backward_demodulation,[],[f4249,f6104])).
fof(f6845,plain,(
  ( ! [X142,X140,X143,X141,X139] : (s('type.list.list'(X139),'const.list.CONS_2'(s(X139,X140),s('type.list.list'(X139),'const.list.APPEND_2'(s('type.list.list'(X139),X141),s('type.list.list'(X139),X142))))) = s('type.list.list'(X139),sK15('const.list.APPEND_2'(s('type.list.list'(X139),'const.list.CONS_2'(s(X139,X140),s('type.list.list'(X139),X141))),s('type.list.list'(X139),X142)),X143,'type.list.list'(X139)))) ) | $spl18),
  inference(subsumption_resolution,[],[f6574,f289])).
fof(f6574,plain,(
  ( ! [X142,X140,X143,X141,X139] : (~p(s(bool,'T_0')) | s('type.list.list'(X139),'const.list.CONS_2'(s(X139,X140),s('type.list.list'(X139),'const.list.APPEND_2'(s('type.list.list'(X139),X141),s('type.list.list'(X139),X142))))) = s('type.list.list'(X139),sK15('const.list.APPEND_2'(s('type.list.list'(X139),'const.list.CONS_2'(s(X139,X140),s('type.list.list'(X139),X141))),s('type.list.list'(X139),X142)),X143,'type.list.list'(X139)))) ) | $spl18),
  inference(backward_demodulation,[],[f4249,f3899])).
fof(f6833,plain,(
  ( ! [X14,X15,X16] : (s('type.list.list'(X14),X15) = s('type.list.list'(X14),sK15('const.list.APPEND_2'(s('type.list.list'(X14),X15),s('type.list.list'(X14),'const.list.NIL_0')),X16,'type.list.list'(X14)))) ) | $spl18),
  inference(subsumption_resolution,[],[f6567,f289])).
fof(f6567,plain,(
  ( ! [X14,X15,X16] : (~p(s(bool,'T_0')) | s('type.list.list'(X14),X15) = s('type.list.list'(X14),sK15('const.list.APPEND_2'(s('type.list.list'(X14),X15),s('type.list.list'(X14),'const.list.NIL_0')),X16,'type.list.list'(X14)))) ) | $spl18),
  inference(backward_demodulation,[],[f4249,f806])).
fof(f6831,plain,(
  ( ! [X19,X17,X18] : (s('type.list.list'(X17),X18) = s('type.list.list'(X17),sK15('const.list.APPEND_2'(s('type.list.list'(X17),'const.list.NIL_0'),s('type.list.list'(X17),X18)),X19,'type.list.list'(X17)))) ) | $spl18),
  inference(subsumption_resolution,[],[f6566,f289])).
fof(f6566,plain,(
  ( ! [X19,X17,X18] : (~p(s(bool,'T_0')) | s('type.list.list'(X17),X18) = s('type.list.list'(X17),sK15('const.list.APPEND_2'(s('type.list.list'(X17),'const.list.NIL_0'),s('type.list.list'(X17),X18)),X19,'type.list.list'(X17)))) ) | $spl18),
  inference(backward_demodulation,[],[f4249,f807])).
fof(f6827,plain,(
  ( ! [X10,X11] : (s(bool,X10) = s(bool,sK15('const.marker.Cong_1'(s(bool,X10)),X11,bool))) ) | $spl18),
  inference(subsumption_resolution,[],[f6563,f289])).
fof(f6563,plain,(
  ( ! [X10,X11] : (~p(s(bool,'T_0')) | s(bool,X10) = s(bool,sK15('const.marker.Cong_1'(s(bool,X10)),X11,bool))) ) | $spl18),
  inference(backward_demodulation,[],[f4249,f804])).
fof(f6823,plain,(
  ( ! [X116,X114,X112,X115,X113] : (s(X112,happ(s(fun(X114,X112),X115),s(X114,X116))) = s(X112,sK15(happ(s(fun(X114,X112),X115),s(X114,X116)),X113,X112))) ) | $spl18),
  inference(subsumption_resolution,[],[f6561,f289])).
fof(f6561,plain,(
  ( ! [X116,X114,X112,X115,X113] : (~p(s(bool,'T_0')) | s(X112,happ(s(fun(X114,X112),X115),s(X114,X116))) = s(X112,sK15(happ(s(fun(X114,X112),X115),s(X114,X116)),X113,X112))) ) | $spl18),
  inference(backward_demodulation,[],[f4249,f4646])).
fof(f6815,plain,(
  ( ! [X269,X271,X267,X273,X268,X270,X272] : (s(X267,X273) = s(X267,sK15(X273,happ(s(fun(X268,fun(X267,bool)),'_dst_x0x1_2'(s(fun(X269,fun(X267,bool)),X270),s(fun(X268,X269),X271))),s(X268,X272)),X267))) ) | $spl18),
  inference(subsumption_resolution,[],[f6557,f289])).
fof(f6557,plain,(
  ( ! [X269,X271,X267,X273,X268,X270,X272] : (~p(s(bool,'T_0')) | s(X267,X273) = s(X267,sK15(X273,happ(s(fun(X268,fun(X267,bool)),'_dst_x0x1_2'(s(fun(X269,fun(X267,bool)),X270),s(fun(X268,X269),X271))),s(X268,X272)),X267))) ) | $spl18),
  inference(backward_demodulation,[],[f4249,f4742])).
fof(f6811,plain,(
  ( ! [X253,X251,X249,X252,X250,X248,X247] : (s(X247,X253) = s(X247,sK15(X253,happ(s(fun(X248,fun(X247,bool)),X249),s(X248,happ(s(fun(X250,X248),X251),s(X250,X252)))),X247))) ) | $spl18),
  inference(subsumption_resolution,[],[f6555,f289])).
fof(f6555,plain,(
  ( ! [X253,X251,X249,X252,X250,X248,X247] : (~p(s(bool,'T_0')) | s(X247,X253) = s(X247,sK15(X253,happ(s(fun(X248,fun(X247,bool)),X249),s(X248,happ(s(fun(X250,X248),X251),s(X250,X252)))),X247))) ) | $spl18),
  inference(backward_demodulation,[],[f4249,f4669])).
fof(f6803,plain,(
  ( ! [X80,X83,X81,X84,X82] : (s(X80,X84) = s(X80,sK15(X84,'const.ind_type.FCONS_3'(s(fun(X80,bool),X81),s(fun('type.num.num',fun(X80,bool)),X82),s('type.num.num','const.num.SUC_1'(s('type.num.num',X83)))),X80))) ) | $spl18),
  inference(subsumption_resolution,[],[f6550,f289])).
fof(f6550,plain,(
  ( ! [X80,X83,X81,X84,X82] : (~p(s(bool,'T_0')) | s(X80,X84) = s(X80,sK15(X84,'const.ind_type.FCONS_3'(s(fun(X80,bool),X81),s(fun('type.num.num',fun(X80,bool)),X82),s('type.num.num','const.num.SUC_1'(s('type.num.num',X83)))),X80))) ) | $spl18),
  inference(backward_demodulation,[],[f4249,f1769])).
fof(f6793,plain,(
  ( ! [X47,X45,X43,X48,X46,X44,X49] : (s(X43,happ(s(fun(X44,X43),X45),s(X44,happ(s(fun(X46,X44),X47),s(X46,X48))))) = s(X43,sK15(happ(s(fun(X44,X43),X45),s(X44,happ(s(fun(X46,X44),X47),s(X46,X48)))),X49,X43))) ) | $spl18),
  inference(subsumption_resolution,[],[f6540,f289])).
fof(f6540,plain,(
  ( ! [X47,X45,X43,X48,X46,X44,X49] : (~p(s(bool,'T_0')) | s(X43,happ(s(fun(X44,X43),X45),s(X44,happ(s(fun(X46,X44),X47),s(X46,X48))))) = s(X43,sK15(happ(s(fun(X44,X43),X45),s(X44,happ(s(fun(X46,X44),X47),s(X46,X48)))),X49,X43))) ) | $spl18),
  inference(backward_demodulation,[],[f4249,f4637])).
fof(f6789,plain,(
  ( ! [X47,X45,X43,X48,X46,X44,X49] : (s(X43,happ(s(fun(X44,X43),'_dst_x0x1_2'(s(fun(X45,X43),X46),s(fun(X44,X45),X47))),s(X44,X48))) = s(X43,sK15(happ(s(fun(X44,X43),'_dst_x0x1_2'(s(fun(X45,X43),X46),s(fun(X44,X45),X47))),s(X44,X48)),X49,X43))) ) | $spl18),
  inference(subsumption_resolution,[],[f6537,f289])).
fof(f6537,plain,(
  ( ! [X47,X45,X43,X48,X46,X44,X49] : (~p(s(bool,'T_0')) | s(X43,happ(s(fun(X44,X43),'_dst_x0x1_2'(s(fun(X45,X43),X46),s(fun(X44,X45),X47))),s(X44,X48))) = s(X43,sK15(happ(s(fun(X44,X43),'_dst_x0x1_2'(s(fun(X45,X43),X46),s(fun(X44,X45),X47))),s(X44,X48)),X49,X43))) ) | $spl18),
  inference(backward_demodulation,[],[f4249,f4706])).
fof(f6781,plain,(
  ( ! [X116,X114,X112,X115,X113] : (s(X112,X116) = s(X112,sK15(X116,'_dst_x0x1_2'(s(fun(X113,bool),X114),s(fun(X112,X113),X115)),X112))) ) | $spl18),
  inference(subsumption_resolution,[],[f6529,f289])).
fof(f6529,plain,(
  ( ! [X116,X114,X112,X115,X113] : (~p(s(bool,'T_0')) | s(X112,X116) = s(X112,sK15(X116,'_dst_x0x1_2'(s(fun(X113,bool),X114),s(fun(X112,X113),X115)),X112))) ) | $spl18),
  inference(backward_demodulation,[],[f4249,f4715])).
fof(f6776,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s(X0,happ(s(fun('type.num.num',X0),X2),s('type.num.num',X3))) = s(X0,sK15('const.ind_type.FCONS_3'(s(X0,X1),s(fun('type.num.num',X0),X2),s('type.num.num','const.num.SUC_1'(s('type.num.num',X3)))),X4,X0))) ) | $spl18),
  inference(subsumption_resolution,[],[f6522,f289])).
fof(f6522,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~p(s(bool,'T_0')) | s(X0,happ(s(fun('type.num.num',X0),X2),s('type.num.num',X3))) = s(X0,sK15('const.ind_type.FCONS_3'(s(X0,X1),s(fun('type.num.num',X0),X2),s('type.num.num','const.num.SUC_1'(s('type.num.num',X3)))),X4,X0))) ) | $spl18),
  inference(backward_demodulation,[],[f4249,f1781])).
fof(f6754,plain,(
  ( ! [X23,X21,X22,X20] : (s(X20,X21) = s(X20,sK15('const.ind_type.FCONS_3'(s(X20,X21),s(fun('type.num.num',X20),X22),s('type.num.num','const.num.|48|_0')),X23,X20))) ) | $spl18),
  inference(subsumption_resolution,[],[f6510,f289])).
fof(f6510,plain,(
  ( ! [X23,X21,X22,X20] : (~p(s(bool,'T_0')) | s(X20,X21) = s(X20,sK15('const.ind_type.FCONS_3'(s(X20,X21),s(fun('type.num.num',X20),X22),s('type.num.num','const.num.|48|_0')),X23,X20))) ) | $spl18),
  inference(backward_demodulation,[],[f4249,f808])).
fof(f6752,plain,(
  ( ! [X2,X0,X3,X1] : (s(X0,X3) = s(X0,sK15(X3,'const.ind_type.FCONS_3'(s(fun(X0,bool),X1),s(fun('type.num.num',fun(X0,bool)),X2),s('type.num.num','const.num.|48|_0')),X0))) ) | $spl18),
  inference(subsumption_resolution,[],[f6509,f289])).
fof(f6509,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,'T_0')) | s(X0,X3) = s(X0,sK15(X3,'const.ind_type.FCONS_3'(s(fun(X0,bool),X1),s(fun('type.num.num',fun(X0,bool)),X2),s('type.num.num','const.num.|48|_0')),X0))) ) | $spl18),
  inference(backward_demodulation,[],[f4249,f789])).
fof(f6748,plain,(
  ( ! [X2,X0,X1] : (s(X0,X2) = s(X0,sK15(X2,X1,X0))) ) | $spl18),
  inference(subsumption_resolution,[],[f6507,f289])).
fof(f6507,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'T_0')) | s(X0,X2) = s(X0,sK15(X2,X1,X0))) ) | $spl18),
  inference(backward_demodulation,[],[f4249,f388])).
fof(f6734,plain,(
  ( ! [X68,X66,X64,X67,X65] : (s('type.list.list'('type.ind_type.recspace'(X64)),X68) = s('type.list.list'('type.ind_type.recspace'(X64)),'const.list.APPEND_2'(s('type.list.list'('type.ind_type.recspace'(X64)),'const.list.APPEND_2'(s('type.list.list'('type.ind_type.recspace'(X64)),sK11(happ(s(fun(fun('type.num.num','type.ind_type.recspace'(X64)),'type.ind_type.recspace'(X64)),happ(s(fun(X64,fun(fun('type.num.num','type.ind_type.recspace'(X64)),'type.ind_type.recspace'(X64))),'const.ind_type.CONSTR_1'(s('type.num.num',X65))),s(X64,X66))),s(fun('type.num.num','type.ind_type.recspace'(X64)),X67)),X68,'type.ind_type.recspace'(X64))),s('type.list.list'('type.ind_type.recspace'(X64)),'const.list.CONS_2'(s('type.ind_type.recspace'(X64),'const.ind_type.CONSTR_3'(s('type.num.num',X65),s(X64,X66),s(fun('type.num.num','type.ind_type.recspace'(X64)),X67))),s('type.list.list'('type.ind_type.recspace'(X64)),'const.list.NIL_0'))))),s('type.list.list'('type.ind_type.recspace'(X64)),sK12(happ(s(fun(fun('type.num.num','type.ind_type.recspace'(X64)),'type.ind_type.recspace'(X64)),happ(s(fun(X64,fun(fun('type.num.num','type.ind_type.recspace'(X64)),'type.ind_type.recspace'(X64))),'const.ind_type.CONSTR_1'(s('type.num.num',X65))),s(X64,X66))),s(fun('type.num.num','type.ind_type.recspace'(X64)),X67)),X68,'type.ind_type.recspace'(X64)))))) ) | $spl18),
  inference(subsumption_resolution,[],[f6501,f289])).
fof(f6501,plain,(
  ( ! [X68,X66,X64,X67,X65] : (~p(s(bool,'T_0')) | s('type.list.list'('type.ind_type.recspace'(X64)),X68) = s('type.list.list'('type.ind_type.recspace'(X64)),'const.list.APPEND_2'(s('type.list.list'('type.ind_type.recspace'(X64)),'const.list.APPEND_2'(s('type.list.list'('type.ind_type.recspace'(X64)),sK11(happ(s(fun(fun('type.num.num','type.ind_type.recspace'(X64)),'type.ind_type.recspace'(X64)),happ(s(fun(X64,fun(fun('type.num.num','type.ind_type.recspace'(X64)),'type.ind_type.recspace'(X64))),'const.ind_type.CONSTR_1'(s('type.num.num',X65))),s(X64,X66))),s(fun('type.num.num','type.ind_type.recspace'(X64)),X67)),X68,'type.ind_type.recspace'(X64))),s('type.list.list'('type.ind_type.recspace'(X64)),'const.list.CONS_2'(s('type.ind_type.recspace'(X64),'const.ind_type.CONSTR_3'(s('type.num.num',X65),s(X64,X66),s(fun('type.num.num','type.ind_type.recspace'(X64)),X67))),s('type.list.list'('type.ind_type.recspace'(X64)),'const.list.NIL_0'))))),s('type.list.list'('type.ind_type.recspace'(X64)),sK12(happ(s(fun(fun('type.num.num','type.ind_type.recspace'(X64)),'type.ind_type.recspace'(X64)),happ(s(fun(X64,fun(fun('type.num.num','type.ind_type.recspace'(X64)),'type.ind_type.recspace'(X64))),'const.ind_type.CONSTR_1'(s('type.num.num',X65))),s(X64,X66))),s(fun('type.num.num','type.ind_type.recspace'(X64)),X67)),X68,'type.ind_type.recspace'(X64)))))) ) | $spl18),
  inference(backward_demodulation,[],[f4249,f6298])).
fof(f6726,plain,(
  ( ! [X61,X59,X62,X60,X63] : (s('type.list.list'('type.list.list'(X59)),X63) = s('type.list.list'('type.list.list'(X59)),'const.list.APPEND_2'(s('type.list.list'('type.list.list'(X59)),'const.list.APPEND_2'(s('type.list.list'('type.list.list'(X59)),sK11('const.list.APPEND_2'(s('type.list.list'(X59),'const.list.CONS_2'(s(X59,X60),s('type.list.list'(X59),X61))),s('type.list.list'(X59),X62)),X63,'type.list.list'(X59))),s('type.list.list'('type.list.list'(X59)),'const.list.CONS_2'(s('type.list.list'(X59),'const.list.CONS_2'(s(X59,X60),s('type.list.list'(X59),'const.list.APPEND_2'(s('type.list.list'(X59),X61),s('type.list.list'(X59),X62))))),s('type.list.list'('type.list.list'(X59)),'const.list.NIL_0'))))),s('type.list.list'('type.list.list'(X59)),sK12('const.list.APPEND_2'(s('type.list.list'(X59),'const.list.CONS_2'(s(X59,X60),s('type.list.list'(X59),X61))),s('type.list.list'(X59),X62)),X63,'type.list.list'(X59)))))) ) | $spl18),
  inference(subsumption_resolution,[],[f6498,f289])).
fof(f6498,plain,(
  ( ! [X61,X59,X62,X60,X63] : (~p(s(bool,'T_0')) | s('type.list.list'('type.list.list'(X59)),X63) = s('type.list.list'('type.list.list'(X59)),'const.list.APPEND_2'(s('type.list.list'('type.list.list'(X59)),'const.list.APPEND_2'(s('type.list.list'('type.list.list'(X59)),sK11('const.list.APPEND_2'(s('type.list.list'(X59),'const.list.CONS_2'(s(X59,X60),s('type.list.list'(X59),X61))),s('type.list.list'(X59),X62)),X63,'type.list.list'(X59))),s('type.list.list'('type.list.list'(X59)),'const.list.CONS_2'(s('type.list.list'(X59),'const.list.CONS_2'(s(X59,X60),s('type.list.list'(X59),'const.list.APPEND_2'(s('type.list.list'(X59),X61),s('type.list.list'(X59),X62))))),s('type.list.list'('type.list.list'(X59)),'const.list.NIL_0'))))),s('type.list.list'('type.list.list'(X59)),sK12('const.list.APPEND_2'(s('type.list.list'(X59),'const.list.CONS_2'(s(X59,X60),s('type.list.list'(X59),X61))),s('type.list.list'(X59),X62)),X63,'type.list.list'(X59)))))) ) | $spl18),
  inference(backward_demodulation,[],[f4249,f6297])).
fof(f6712,plain,(
  ( ! [X54,X55,X53] : (s('type.list.list'('type.list.list'(X53)),X55) = s('type.list.list'('type.list.list'(X53)),'const.list.APPEND_2'(s('type.list.list'('type.list.list'(X53)),'const.list.APPEND_2'(s('type.list.list'('type.list.list'(X53)),sK11('const.list.APPEND_2'(s('type.list.list'(X53),X54),s('type.list.list'(X53),'const.list.NIL_0')),X55,'type.list.list'(X53))),s('type.list.list'('type.list.list'(X53)),'const.list.CONS_2'(s('type.list.list'(X53),X54),s('type.list.list'('type.list.list'(X53)),'const.list.NIL_0'))))),s('type.list.list'('type.list.list'(X53)),sK12('const.list.APPEND_2'(s('type.list.list'(X53),X54),s('type.list.list'(X53),'const.list.NIL_0')),X55,'type.list.list'(X53)))))) ) | $spl18),
  inference(subsumption_resolution,[],[f6493,f289])).
fof(f6493,plain,(
  ( ! [X54,X55,X53] : (~p(s(bool,'T_0')) | s('type.list.list'('type.list.list'(X53)),X55) = s('type.list.list'('type.list.list'(X53)),'const.list.APPEND_2'(s('type.list.list'('type.list.list'(X53)),'const.list.APPEND_2'(s('type.list.list'('type.list.list'(X53)),sK11('const.list.APPEND_2'(s('type.list.list'(X53),X54),s('type.list.list'(X53),'const.list.NIL_0')),X55,'type.list.list'(X53))),s('type.list.list'('type.list.list'(X53)),'const.list.CONS_2'(s('type.list.list'(X53),X54),s('type.list.list'('type.list.list'(X53)),'const.list.NIL_0'))))),s('type.list.list'('type.list.list'(X53)),sK12('const.list.APPEND_2'(s('type.list.list'(X53),X54),s('type.list.list'(X53),'const.list.NIL_0')),X55,'type.list.list'(X53)))))) ) | $spl18),
  inference(backward_demodulation,[],[f4249,f6295])).
fof(f6710,plain,(
  ( ! [X57,X58,X56] : (s('type.list.list'('type.list.list'(X56)),X58) = s('type.list.list'('type.list.list'(X56)),'const.list.APPEND_2'(s('type.list.list'('type.list.list'(X56)),'const.list.APPEND_2'(s('type.list.list'('type.list.list'(X56)),sK11('const.list.APPEND_2'(s('type.list.list'(X56),'const.list.NIL_0'),s('type.list.list'(X56),X57)),X58,'type.list.list'(X56))),s('type.list.list'('type.list.list'(X56)),'const.list.CONS_2'(s('type.list.list'(X56),X57),s('type.list.list'('type.list.list'(X56)),'const.list.NIL_0'))))),s('type.list.list'('type.list.list'(X56)),sK12('const.list.APPEND_2'(s('type.list.list'(X56),'const.list.NIL_0'),s('type.list.list'(X56),X57)),X58,'type.list.list'(X56)))))) ) | $spl18),
  inference(subsumption_resolution,[],[f6492,f289])).
fof(f6492,plain,(
  ( ! [X57,X58,X56] : (~p(s(bool,'T_0')) | s('type.list.list'('type.list.list'(X56)),X58) = s('type.list.list'('type.list.list'(X56)),'const.list.APPEND_2'(s('type.list.list'('type.list.list'(X56)),'const.list.APPEND_2'(s('type.list.list'('type.list.list'(X56)),sK11('const.list.APPEND_2'(s('type.list.list'(X56),'const.list.NIL_0'),s('type.list.list'(X56),X57)),X58,'type.list.list'(X56))),s('type.list.list'('type.list.list'(X56)),'const.list.CONS_2'(s('type.list.list'(X56),X57),s('type.list.list'('type.list.list'(X56)),'const.list.NIL_0'))))),s('type.list.list'('type.list.list'(X56)),sK12('const.list.APPEND_2'(s('type.list.list'(X56),'const.list.NIL_0'),s('type.list.list'(X56),X57)),X58,'type.list.list'(X56)))))) ) | $spl18),
  inference(backward_demodulation,[],[f4249,f6296])).
fof(f6708,plain,(
  ( ! [X47,X46] : (s('type.list.list'(bool),X47) = s('type.list.list'(bool),'const.list.APPEND_2'(s('type.list.list'(bool),'const.list.APPEND_2'(s('type.list.list'(bool),sK11('const.marker.Cong_1'(s(bool,X46)),X47,bool)),s('type.list.list'(bool),'const.list.CONS_2'(s(bool,X46),s('type.list.list'(bool),'const.list.NIL_0'))))),s('type.list.list'(bool),sK12('const.marker.Cong_1'(s(bool,X46)),X47,bool))))) ) | $spl18),
  inference(subsumption_resolution,[],[f6491,f289])).
fof(f6491,plain,(
  ( ! [X47,X46] : (~p(s(bool,'T_0')) | s('type.list.list'(bool),X47) = s('type.list.list'(bool),'const.list.APPEND_2'(s('type.list.list'(bool),'const.list.APPEND_2'(s('type.list.list'(bool),sK11('const.marker.Cong_1'(s(bool,X46)),X47,bool)),s('type.list.list'(bool),'const.list.CONS_2'(s(bool,X46),s('type.list.list'(bool),'const.list.NIL_0'))))),s('type.list.list'(bool),sK12('const.marker.Cong_1'(s(bool,X46)),X47,bool))))) ) | $spl18),
  inference(backward_demodulation,[],[f4249,f6292])).
fof(f6700,plain,(
  ( ! [X52,X51] : (s('type.list.list'(bool),X52) = s('type.list.list'(bool),'const.list.APPEND_2'(s('type.list.list'(bool),'const.list.APPEND_2'(s('type.list.list'(bool),sK11('const.bool.BOUNDED_1'(s(bool,X51)),X52,bool)),s('type.list.list'(bool),'const.list.CONS_2'(s(bool,'T_0'),s('type.list.list'(bool),'const.list.NIL_0'))))),s('type.list.list'(bool),sK12('const.bool.BOUNDED_1'(s(bool,X51)),X52,bool))))) ) | $spl18),
  inference(subsumption_resolution,[],[f6488,f289])).
fof(f6488,plain,(
  ( ! [X52,X51] : (~p(s(bool,'T_0')) | s('type.list.list'(bool),X52) = s('type.list.list'(bool),'const.list.APPEND_2'(s('type.list.list'(bool),'const.list.APPEND_2'(s('type.list.list'(bool),sK11('const.bool.BOUNDED_1'(s(bool,X51)),X52,bool)),s('type.list.list'(bool),'const.list.CONS_2'(s(bool,'T_0'),s('type.list.list'(bool),'const.list.NIL_0'))))),s('type.list.list'(bool),sK12('const.bool.BOUNDED_1'(s(bool,X51)),X52,bool))))) ) | $spl18),
  inference(backward_demodulation,[],[f4249,f6294])).
fof(f6692,plain,(
  ( ! [X14,X12,X10,X15,X13,X11,X9] : (s('type.list.list'(X9),X15) = s('type.list.list'(X9),'const.list.APPEND_2'(s('type.list.list'(X9),'const.list.APPEND_2'(s('type.list.list'(X9),sK11(happ(s(fun(X10,X9),X11),s(X10,happ(s(fun(X12,X10),X13),s(X12,X14)))),X15,X9)),s('type.list.list'(X9),'const.list.CONS_2'(s(X9,happ(s(fun(X10,X9),X11),s(X10,happ(s(fun(X12,X10),X13),s(X12,X14))))),s('type.list.list'(X9),'const.list.NIL_0'))))),s('type.list.list'(X9),sK12(happ(s(fun(X10,X9),X11),s(X10,happ(s(fun(X12,X10),X13),s(X12,X14)))),X15,X9))))) ) | $spl18),
  inference(subsumption_resolution,[],[f6481,f289])).
fof(f6481,plain,(
  ( ! [X14,X12,X10,X15,X13,X11,X9] : (~p(s(bool,'T_0')) | s('type.list.list'(X9),X15) = s('type.list.list'(X9),'const.list.APPEND_2'(s('type.list.list'(X9),'const.list.APPEND_2'(s('type.list.list'(X9),sK11(happ(s(fun(X10,X9),X11),s(X10,happ(s(fun(X12,X10),X13),s(X12,X14)))),X15,X9)),s('type.list.list'(X9),'const.list.CONS_2'(s(X9,happ(s(fun(X10,X9),X11),s(X10,happ(s(fun(X12,X10),X13),s(X12,X14))))),s('type.list.list'(X9),'const.list.NIL_0'))))),s('type.list.list'(X9),sK12(happ(s(fun(X10,X9),X11),s(X10,happ(s(fun(X12,X10),X13),s(X12,X14)))),X15,X9))))) ) | $spl18),
  inference(backward_demodulation,[],[f4249,f6240])).
fof(f6678,plain,(
  ( ! [X21,X19,X17,X22,X20,X18,X16] : (s('type.list.list'(X16),X22) = s('type.list.list'(X16),'const.list.APPEND_2'(s('type.list.list'(X16),'const.list.APPEND_2'(s('type.list.list'(X16),sK11(happ(s(fun(X17,X16),'_dst_x0x1_2'(s(fun(X18,X16),X19),s(fun(X17,X18),X20))),s(X17,X21)),X22,X16)),s('type.list.list'(X16),'const.list.CONS_2'(s(X16,happ(s(fun(X17,X16),'_dst_x0x1_2'(s(fun(X18,X16),X19),s(fun(X17,X18),X20))),s(X17,X21))),s('type.list.list'(X16),'const.list.NIL_0'))))),s('type.list.list'(X16),sK12(happ(s(fun(X17,X16),'_dst_x0x1_2'(s(fun(X18,X16),X19),s(fun(X17,X18),X20))),s(X17,X21)),X22,X16))))) ) | $spl18),
  inference(subsumption_resolution,[],[f6474,f289])).
fof(f6474,plain,(
  ( ! [X21,X19,X17,X22,X20,X18,X16] : (~p(s(bool,'T_0')) | s('type.list.list'(X16),X22) = s('type.list.list'(X16),'const.list.APPEND_2'(s('type.list.list'(X16),'const.list.APPEND_2'(s('type.list.list'(X16),sK11(happ(s(fun(X17,X16),'_dst_x0x1_2'(s(fun(X18,X16),X19),s(fun(X17,X18),X20))),s(X17,X21)),X22,X16)),s('type.list.list'(X16),'const.list.CONS_2'(s(X16,happ(s(fun(X17,X16),'_dst_x0x1_2'(s(fun(X18,X16),X19),s(fun(X17,X18),X20))),s(X17,X21))),s('type.list.list'(X16),'const.list.NIL_0'))))),s('type.list.list'(X16),sK12(happ(s(fun(X17,X16),'_dst_x0x1_2'(s(fun(X18,X16),X19),s(fun(X17,X18),X20))),s(X17,X21)),X22,X16))))) ) | $spl18),
  inference(backward_demodulation,[],[f4249,f6241])).
fof(f6658,plain,(
  ( ! [X6,X4,X8,X7,X5] : (s('type.list.list'(X4),X8) = s('type.list.list'(X4),'const.list.APPEND_2'(s('type.list.list'(X4),'const.list.APPEND_2'(s('type.list.list'(X4),sK11('const.ind_type.FCONS_3'(s(X4,X5),s(fun('type.num.num',X4),X6),s('type.num.num','const.num.SUC_1'(s('type.num.num',X7)))),X8,X4)),s('type.list.list'(X4),'const.list.CONS_2'(s(X4,happ(s(fun('type.num.num',X4),X6),s('type.num.num',X7))),s('type.list.list'(X4),'const.list.NIL_0'))))),s('type.list.list'(X4),sK12('const.ind_type.FCONS_3'(s(X4,X5),s(fun('type.num.num',X4),X6),s('type.num.num','const.num.SUC_1'(s('type.num.num',X7)))),X8,X4))))) ) | $spl18),
  inference(subsumption_resolution,[],[f6464,f289])).
fof(f6464,plain,(
  ( ! [X6,X4,X8,X7,X5] : (~p(s(bool,'T_0')) | s('type.list.list'(X4),X8) = s('type.list.list'(X4),'const.list.APPEND_2'(s('type.list.list'(X4),'const.list.APPEND_2'(s('type.list.list'(X4),sK11('const.ind_type.FCONS_3'(s(X4,X5),s(fun('type.num.num',X4),X6),s('type.num.num','const.num.SUC_1'(s('type.num.num',X7)))),X8,X4)),s('type.list.list'(X4),'const.list.CONS_2'(s(X4,happ(s(fun('type.num.num',X4),X6),s('type.num.num',X7))),s('type.list.list'(X4),'const.list.NIL_0'))))),s('type.list.list'(X4),sK12('const.ind_type.FCONS_3'(s(X4,X5),s(fun('type.num.num',X4),X6),s('type.num.num','const.num.SUC_1'(s('type.num.num',X7)))),X8,X4))))) ) | $spl18),
  inference(backward_demodulation,[],[f4249,f6281])).
fof(f6656,plain,(
  ( ! [X19,X17,X15,X18,X16] : (s('type.list.list'(X15),happ(s(fun('type.num.num','type.list.list'(X15)),X17),s('type.num.num',X18))) = s('type.list.list'(X15),'const.list.APPEND_2'(s('type.list.list'(X15),'const.list.APPEND_2'(s('type.list.list'(X15),sK11(X19,'const.ind_type.FCONS_3'(s('type.list.list'(X15),X16),s(fun('type.num.num','type.list.list'(X15)),X17),s('type.num.num','const.num.SUC_1'(s('type.num.num',X18)))),X15)),s('type.list.list'(X15),'const.list.CONS_2'(s(X15,X19),s('type.list.list'(X15),'const.list.NIL_0'))))),s('type.list.list'(X15),sK12(X19,'const.ind_type.FCONS_3'(s('type.list.list'(X15),X16),s(fun('type.num.num','type.list.list'(X15)),X17),s('type.num.num','const.num.SUC_1'(s('type.num.num',X18)))),X15))))) ) | $spl18),
  inference(subsumption_resolution,[],[f6463,f289])).
fof(f6463,plain,(
  ( ! [X19,X17,X15,X18,X16] : (~p(s(bool,'T_0')) | s('type.list.list'(X15),happ(s(fun('type.num.num','type.list.list'(X15)),X17),s('type.num.num',X18))) = s('type.list.list'(X15),'const.list.APPEND_2'(s('type.list.list'(X15),'const.list.APPEND_2'(s('type.list.list'(X15),sK11(X19,'const.ind_type.FCONS_3'(s('type.list.list'(X15),X16),s(fun('type.num.num','type.list.list'(X15)),X17),s('type.num.num','const.num.SUC_1'(s('type.num.num',X18)))),X15)),s('type.list.list'(X15),'const.list.CONS_2'(s(X15,X19),s('type.list.list'(X15),'const.list.NIL_0'))))),s('type.list.list'(X15),sK12(X19,'const.ind_type.FCONS_3'(s('type.list.list'(X15),X16),s(fun('type.num.num','type.list.list'(X15)),X17),s('type.num.num','const.num.SUC_1'(s('type.num.num',X18)))),X15))))) ) | $spl18),
  inference(backward_demodulation,[],[f4249,f6303])).
fof(f6654,plain,(
  ( ! [X30,X28,X33,X31,X29,X27,X32] : (s('type.list.list'(X27),happ(s(fun(X28,'type.list.list'(X27)),'_dst_x0x1_2'(s(fun(X29,'type.list.list'(X27)),X30),s(fun(X28,X29),X31))),s(X28,X32))) = s('type.list.list'(X27),'const.list.APPEND_2'(s('type.list.list'(X27),'const.list.APPEND_2'(s('type.list.list'(X27),sK11(X33,happ(s(fun(X28,'type.list.list'(X27)),'_dst_x0x1_2'(s(fun(X29,'type.list.list'(X27)),X30),s(fun(X28,X29),X31))),s(X28,X32)),X27)),s('type.list.list'(X27),'const.list.CONS_2'(s(X27,X33),s('type.list.list'(X27),'const.list.NIL_0'))))),s('type.list.list'(X27),sK12(X33,happ(s(fun(X28,'type.list.list'(X27)),'_dst_x0x1_2'(s(fun(X29,'type.list.list'(X27)),X30),s(fun(X28,X29),X31))),s(X28,X32)),X27))))) ) | $spl18),
  inference(subsumption_resolution,[],[f6462,f289])).
fof(f6462,plain,(
  ( ! [X30,X28,X33,X31,X29,X27,X32] : (~p(s(bool,'T_0')) | s('type.list.list'(X27),happ(s(fun(X28,'type.list.list'(X27)),'_dst_x0x1_2'(s(fun(X29,'type.list.list'(X27)),X30),s(fun(X28,X29),X31))),s(X28,X32))) = s('type.list.list'(X27),'const.list.APPEND_2'(s('type.list.list'(X27),'const.list.APPEND_2'(s('type.list.list'(X27),sK11(X33,happ(s(fun(X28,'type.list.list'(X27)),'_dst_x0x1_2'(s(fun(X29,'type.list.list'(X27)),X30),s(fun(X28,X29),X31))),s(X28,X32)),X27)),s('type.list.list'(X27),'const.list.CONS_2'(s(X27,X33),s('type.list.list'(X27),'const.list.NIL_0'))))),s('type.list.list'(X27),sK12(X33,happ(s(fun(X28,'type.list.list'(X27)),'_dst_x0x1_2'(s(fun(X29,'type.list.list'(X27)),X30),s(fun(X28,X29),X31))),s(X28,X32)),X27))))) ) | $spl18),
  inference(backward_demodulation,[],[f4249,f6267])).
fof(f6652,plain,(
  ( ! [X26,X24,X23,X21,X25,X22,X20] : (s('type.list.list'(X20),happ(s(fun(X21,'type.list.list'(X20)),X22),s(X21,happ(s(fun(X23,X21),X24),s(X23,X25))))) = s('type.list.list'(X20),'const.list.APPEND_2'(s('type.list.list'(X20),'const.list.APPEND_2'(s('type.list.list'(X20),sK11(X26,happ(s(fun(X21,'type.list.list'(X20)),X22),s(X21,happ(s(fun(X23,X21),X24),s(X23,X25)))),X20)),s('type.list.list'(X20),'const.list.CONS_2'(s(X20,X26),s('type.list.list'(X20),'const.list.NIL_0'))))),s('type.list.list'(X20),sK12(X26,happ(s(fun(X21,'type.list.list'(X20)),X22),s(X21,happ(s(fun(X23,X21),X24),s(X23,X25)))),X20))))) ) | $spl18),
  inference(subsumption_resolution,[],[f6461,f289])).
fof(f6461,plain,(
  ( ! [X26,X24,X23,X21,X25,X22,X20] : (~p(s(bool,'T_0')) | s('type.list.list'(X20),happ(s(fun(X21,'type.list.list'(X20)),X22),s(X21,happ(s(fun(X23,X21),X24),s(X23,X25))))) = s('type.list.list'(X20),'const.list.APPEND_2'(s('type.list.list'(X20),'const.list.APPEND_2'(s('type.list.list'(X20),sK11(X26,happ(s(fun(X21,'type.list.list'(X20)),X22),s(X21,happ(s(fun(X23,X21),X24),s(X23,X25)))),X20)),s('type.list.list'(X20),'const.list.CONS_2'(s(X20,X26),s('type.list.list'(X20),'const.list.NIL_0'))))),s('type.list.list'(X20),sK12(X26,happ(s(fun(X21,'type.list.list'(X20)),X22),s(X21,happ(s(fun(X23,X21),X24),s(X23,X25)))),X20))))) ) | $spl18),
  inference(backward_demodulation,[],[f4249,f6266])).
fof(f6650,plain,(
  ( ! [X6,X10,X8,X7,X9] : (s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X7),s('type.list.list'(X6),'const.list.APPEND_2'(s('type.list.list'(X6),X8),s('type.list.list'(X6),X9))))) = s('type.list.list'(X6),'const.list.APPEND_2'(s('type.list.list'(X6),'const.list.APPEND_2'(s('type.list.list'(X6),sK11(X10,'const.list.APPEND_2'(s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X7),s('type.list.list'(X6),X8))),s('type.list.list'(X6),X9)),X6)),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X10),s('type.list.list'(X6),'const.list.NIL_0'))))),s('type.list.list'(X6),sK12(X10,'const.list.APPEND_2'(s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X7),s('type.list.list'(X6),X8))),s('type.list.list'(X6),X9)),X6))))) ) | $spl18),
  inference(subsumption_resolution,[],[f6453,f289])).
fof(f6453,plain,(
  ( ! [X6,X10,X8,X7,X9] : (~p(s(bool,'T_0')) | s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X7),s('type.list.list'(X6),'const.list.APPEND_2'(s('type.list.list'(X6),X8),s('type.list.list'(X6),X9))))) = s('type.list.list'(X6),'const.list.APPEND_2'(s('type.list.list'(X6),'const.list.APPEND_2'(s('type.list.list'(X6),sK11(X10,'const.list.APPEND_2'(s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X7),s('type.list.list'(X6),X8))),s('type.list.list'(X6),X9)),X6)),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X10),s('type.list.list'(X6),'const.list.NIL_0'))))),s('type.list.list'(X6),sK12(X10,'const.list.APPEND_2'(s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X7),s('type.list.list'(X6),X8))),s('type.list.list'(X6),X9)),X6))))) ) | $spl18),
  inference(backward_demodulation,[],[f4249,f6301])).
fof(f6644,plain,(
  ( ! [X14,X12,X13,X11] : (s('type.list.list'(X11),X12) = s('type.list.list'(X11),'const.list.APPEND_2'(s('type.list.list'(X11),'const.list.APPEND_2'(s('type.list.list'(X11),sK11(X14,'const.ind_type.FCONS_3'(s('type.list.list'(X11),X12),s(fun('type.num.num','type.list.list'(X11)),X13),s('type.num.num','const.num.|48|_0')),X11)),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,X14),s('type.list.list'(X11),'const.list.NIL_0'))))),s('type.list.list'(X11),sK12(X14,'const.ind_type.FCONS_3'(s('type.list.list'(X11),X12),s(fun('type.num.num','type.list.list'(X11)),X13),s('type.num.num','const.num.|48|_0')),X11))))) ) | $spl18),
  inference(subsumption_resolution,[],[f6447,f289])).
fof(f6447,plain,(
  ( ! [X14,X12,X13,X11] : (~p(s(bool,'T_0')) | s('type.list.list'(X11),X12) = s('type.list.list'(X11),'const.list.APPEND_2'(s('type.list.list'(X11),'const.list.APPEND_2'(s('type.list.list'(X11),sK11(X14,'const.ind_type.FCONS_3'(s('type.list.list'(X11),X12),s(fun('type.num.num','type.list.list'(X11)),X13),s('type.num.num','const.num.|48|_0')),X11)),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,X14),s('type.list.list'(X11),'const.list.NIL_0'))))),s('type.list.list'(X11),sK12(X14,'const.ind_type.FCONS_3'(s('type.list.list'(X11),X12),s(fun('type.num.num','type.list.list'(X11)),X13),s('type.num.num','const.num.|48|_0')),X11))))) ) | $spl18),
  inference(backward_demodulation,[],[f4249,f6302])).
fof(f6642,plain,(
  ( ! [X4,X5,X3] : (s('type.list.list'(X3),X4) = s('type.list.list'(X3),'const.list.APPEND_2'(s('type.list.list'(X3),'const.list.APPEND_2'(s('type.list.list'(X3),sK11(X5,'const.list.APPEND_2'(s('type.list.list'(X3),'const.list.NIL_0'),s('type.list.list'(X3),X4)),X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,X5),s('type.list.list'(X3),'const.list.NIL_0'))))),s('type.list.list'(X3),sK12(X5,'const.list.APPEND_2'(s('type.list.list'(X3),'const.list.NIL_0'),s('type.list.list'(X3),X4)),X3))))) ) | $spl18),
  inference(subsumption_resolution,[],[f6446,f289])).
fof(f6446,plain,(
  ( ! [X4,X5,X3] : (~p(s(bool,'T_0')) | s('type.list.list'(X3),X4) = s('type.list.list'(X3),'const.list.APPEND_2'(s('type.list.list'(X3),'const.list.APPEND_2'(s('type.list.list'(X3),sK11(X5,'const.list.APPEND_2'(s('type.list.list'(X3),'const.list.NIL_0'),s('type.list.list'(X3),X4)),X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,X5),s('type.list.list'(X3),'const.list.NIL_0'))))),s('type.list.list'(X3),sK12(X5,'const.list.APPEND_2'(s('type.list.list'(X3),'const.list.NIL_0'),s('type.list.list'(X3),X4)),X3))))) ) | $spl18),
  inference(backward_demodulation,[],[f4249,f6300])).
fof(f6640,plain,(
  ( ! [X2,X0,X1] : (s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),sK11(X2,'const.list.APPEND_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),'const.list.NIL_0')),X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.NIL_0'))))),s('type.list.list'(X0),sK12(X2,'const.list.APPEND_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),'const.list.NIL_0')),X0))))) ) | $spl18),
  inference(subsumption_resolution,[],[f6445,f289])).
fof(f6445,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'T_0')) | s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),sK11(X2,'const.list.APPEND_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),'const.list.NIL_0')),X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.NIL_0'))))),s('type.list.list'(X0),sK12(X2,'const.list.APPEND_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),'const.list.NIL_0')),X0))))) ) | $spl18),
  inference(backward_demodulation,[],[f4249,f6299])).
fof(f6638,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.list.list'(X0),X3) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),sK11('const.ind_type.FCONS_3'(s(X0,X1),s(fun('type.num.num',X0),X2),s('type.num.num','const.num.|48|_0')),X3,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X1),s('type.list.list'(X0),'const.list.NIL_0'))))),s('type.list.list'(X0),sK12('const.ind_type.FCONS_3'(s(X0,X1),s(fun('type.num.num',X0),X2),s('type.num.num','const.num.|48|_0')),X3,X0))))) ) | $spl18),
  inference(subsumption_resolution,[],[f6444,f289])).
fof(f6444,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,'T_0')) | s('type.list.list'(X0),X3) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),sK11('const.ind_type.FCONS_3'(s(X0,X1),s(fun('type.num.num',X0),X2),s('type.num.num','const.num.|48|_0')),X3,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X1),s('type.list.list'(X0),'const.list.NIL_0'))))),s('type.list.list'(X0),sK12('const.ind_type.FCONS_3'(s(X0,X1),s(fun('type.num.num',X0),X2),s('type.num.num','const.num.|48|_0')),X3,X0))))) ) | $spl18),
  inference(backward_demodulation,[],[f4249,f6280])).
fof(f6621,plain,(
  ( ! [X2,X0,X1] : (s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),sK13(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.NIL_0'))))),s('type.list.list'(X0),sK14(X2,X1,X0))))) ) | $spl18),
  inference(subsumption_resolution,[],[f6430,f289])).
fof(f6430,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'T_0')) | s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),sK13(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.NIL_0'))))),s('type.list.list'(X0),sK14(X2,X1,X0))))) ) | $spl18),
  inference(backward_demodulation,[],[f4249,f378])).
fof(f6616,plain,(
  ( ! [X2,X0,X1] : (s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),sK11(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.NIL_0'))))),s('type.list.list'(X0),sK12(X2,X1,X0))))) ) | $spl18),
  inference(subsumption_resolution,[],[f6427,f289])).
fof(f6427,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'T_0')) | s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),sK11(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.NIL_0'))))),s('type.list.list'(X0),sK12(X2,X1,X0))))) ) | $spl18),
  inference(backward_demodulation,[],[f4249,f375])).
fof(f6614,plain,(
  ( ! [X33,X34,X32] : (s('type.list.list'(bool),X34) = s('type.list.list'(bool),'const.list.APPEND_2'(s('type.list.list'(bool),'const.list.APPEND_2'(s('type.list.list'(bool),sK11('const.bool.IN_2'(s(X32,X33),s(fun(X32,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X32),'const.list.NIL_0')))),X34,bool)),s('type.list.list'(bool),'const.list.CONS_2'(s(bool,'T_0'),s('type.list.list'(bool),'const.list.NIL_0'))))),s('type.list.list'(bool),sK12('const.bool.IN_2'(s(X32,X33),s(fun(X32,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X32),'const.list.NIL_0')))),X34,bool))))) ) | $spl18),
  inference(subsumption_resolution,[],[f6613,f289])).
fof(f6613,plain,(
  ( ! [X33,X34,X32] : (~p(s(bool,'T_0')) | s('type.list.list'(bool),X34) = s('type.list.list'(bool),'const.list.APPEND_2'(s('type.list.list'(bool),'const.list.APPEND_2'(s('type.list.list'(bool),sK11('const.bool.IN_2'(s(X32,X33),s(fun(X32,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X32),'const.list.NIL_0')))),X34,bool)),s('type.list.list'(bool),'const.list.CONS_2'(s(bool,'T_0'),s('type.list.list'(bool),'const.list.NIL_0'))))),s('type.list.list'(bool),sK12('const.bool.IN_2'(s(X32,X33),s(fun(X32,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X32),'const.list.NIL_0')))),X34,bool))))) ) | $spl18),
  inference(forward_demodulation,[],[f6423,f4249])).
fof(f6423,plain,(
  ( ! [X33,X34,X32] : (s('type.list.list'(bool),X34) = s('type.list.list'(bool),'const.list.APPEND_2'(s('type.list.list'(bool),'const.list.APPEND_2'(s('type.list.list'(bool),sK11('const.bool.IN_2'(s(X32,X33),s(fun(X32,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X32),'const.list.NIL_0')))),X34,bool)),s('type.list.list'(bool),'const.list.CONS_2'(s(bool,'T_0'),s('type.list.list'(bool),'const.list.NIL_0'))))),s('type.list.list'(bool),sK12('const.bool.IN_2'(s(X32,X33),s(fun(X32,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X32),'const.list.NIL_0')))),X34,bool)))) | ~p(s(bool,'const.bool.IN_2'(s(bool,'F_0'),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),X34))))))) ) | $spl18),
  inference(backward_demodulation,[],[f4249,f6284])).
fof(f6592,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | $spl18),
  inference(subsumption_resolution,[],[f6315,f4249])).
fof(f6315,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,X0) | ~p(s(bool,X0))) ) | $spl18),
  inference(backward_demodulation,[],[f4249,f307])).
fof(f6868,plain,(
  $false | ($spl3 | $spl18)),
  inference(subsumption_resolution,[],[f6867,f289])).
fof(f6867,plain,(
  ~p(s(bool,'T_0')) | ($spl3 | $spl18)),
  inference(forward_demodulation,[],[f484,f4249])).
fof(f6866,plain,(
  $false | $spl18),
  inference(global_subsumption,[],[f288,f287,f289,f487,f296,f297,f299,f304,f303,f308,f307,f358,f359,f360,f368,f383,f382,f381,f390,f391,f392,f393,f402,f401,f400,f399,f398,f397,f413,f412,f411,f410,f409,f408,f417,f414,f427,f430,f437,f473,f492,f532,f535,f575,f639,f675,f696,f727,f728,f730,f732,f753,f756,f769,f785,f787,f1492,f1493,f1495,f803,f805,f791,f804,f790,f802,f808,f789,f389,f388,f387,f372,f371,f367,f366,f365,f806,f807,f395,f407,f406,f405,f404,f403,f396,f394,f380,f379,f378,f377,f376,f375,f1320,f754,f1327,f370,f369,f1708,f1709,f1713,f1723,f1721,f1724,f1747,f1781,f1790,f1792,f1794,f1795,f1769,f1770,f1775,f1778,f1801,f1804,f1816,f1903,f1905,f1918,f1920,f1921,f1931,f1969,f1970,f1972,f2108,f2109,f2130,f2060,f2061,f2134,f2144,f2079,f2080,f2148,f2161,f2300,f2283,f2284,f2305,f2313,f2334,f2331,f2335,f2333,f2380,f2365,f2366,f2381,f2383,f2384,f2385,f2386,f2387,f2388,f2390,f2391,f2393,f2561,f2544,f2562,f2565,f2566,f2567,f2568,f2569,f2570,f2572,f2573,f2576,f2920,f3634,f3635,f3637,f3853,f3854,f3896,f3897,f3899,f4096,f4138,f4104,f4156,f4172,f2543,f4324,f4345,f4326,f4349,f4362,f4476,f4501,f4478,f4507,f4521,f4596,f4595,f4597,f4598,f4599,f4773,f4601,f4634,f4635,f4636,f4637,f4640,f4641,f4642,f4643,f4644,f4645,f4646,f4650,f4651,f4652,f4653,f4654,f4656,f4657,f4658,f4659,f4660,f4661,f4666,f4667,f4668,f4669,f4670,f4671,f4672,f4676,f4679,f4680,f4684,f4685,f4686,f4703,f4704,f4705,f4706,f4709,f4710,f4711,f4712,f4713,f4714,f4715,f4716,f4717,f4718,f4719,f4723,f4724,f4725,f4726,f4727,f4729,f4730,f4731,f4732,f4733,f4734,f4739,f4740,f4741,f4742,f4743,f4744,f4745,f4749,f4752,f4753,f4757,f4758,f4759,f4855,f4856,f4831,f4832,f4858,f4853,f4854,f4885,f4886,f4878,f4879,f4880,f4887,f4889,f4884,f5023,f5024,f5026,f5027,f5028,f5029,f5030,f5031,f5033,f5034,f5035,f5036,f5039,f5090,f5135,f5092,f5149,f5106,f5107,f5108,f5162,f5110,f5169,f5124,f5125,f5131,f5132,f5182,f5244,f5278,f5285,f5259,f5260,f5261,f5262,f5264,f5265,f5266,f5267,f5277,f5354,f5388,f5395,f5369,f5370,f5378,f5379,f5381,f5382,f5383,f5384,f5387,f5509,f5510,f5511,f5624,f5625,f5626,f5780,f5782,f5766,f5767,f5784,f5777,f5778,f6101,f6102,f6104,f6280,f6281,f6240,f6241,f6242,f6282,f6245,f6284,f6291,f6292,f6293,f6294,f6295,f6296,f6297,f6298,f6299,f6300,f6301,f6302,f6303,f6266,f6267,f6309,f4249,f6592,f6614,f6616,f6621,f6638,f6640,f6642,f6644,f6650,f6652,f6654,f6656,f6658,f6678,f6692,f6700,f6708,f6710,f6712,f6726,f6734,f6748,f6752,f6754,f6776,f6781,f6789,f6793,f6803,f6811,f6815,f6823,f6827,f6831,f6833,f6845,f6865])).
fof(f6846,plain,(
  $false | $spl18),
  inference(global_subsumption,[],[f288,f287,f289,f487,f296,f297,f299,f304,f303,f308,f307,f358,f359,f360,f368,f383,f382,f381,f390,f391,f392,f393,f402,f401,f400,f399,f398,f397,f413,f412,f411,f410,f409,f408,f417,f414,f427,f430,f437,f473,f492,f532,f535,f575,f639,f675,f696,f727,f728,f730,f732,f753,f756,f769,f785,f787,f1492,f1493,f1495,f803,f805,f791,f804,f790,f802,f808,f789,f389,f388,f387,f372,f371,f367,f366,f365,f806,f807,f395,f407,f406,f405,f404,f403,f396,f394,f380,f379,f378,f377,f376,f375,f1320,f754,f1327,f370,f369,f1708,f1709,f1713,f1723,f1721,f1724,f1747,f1781,f1790,f1792,f1794,f1795,f1769,f1770,f1775,f1778,f1801,f1804,f1816,f1903,f1905,f1918,f1920,f1921,f1931,f1969,f1970,f1972,f2108,f2109,f2130,f2060,f2061,f2134,f2144,f2079,f2080,f2148,f2161,f2300,f2283,f2284,f2305,f2313,f2334,f2331,f2335,f2333,f2380,f2365,f2366,f2381,f2383,f2384,f2385,f2386,f2387,f2388,f2390,f2391,f2393,f2561,f2544,f2562,f2565,f2566,f2567,f2568,f2569,f2570,f2572,f2573,f2576,f2920,f3634,f3635,f3637,f3853,f3854,f3896,f3897,f3899,f4096,f4138,f4104,f4156,f4172,f2543,f4324,f4345,f4326,f4349,f4362,f4476,f4501,f4478,f4507,f4521,f4596,f4595,f4597,f4598,f4599,f4773,f4601,f4634,f4635,f4636,f4637,f4640,f4641,f4642,f4643,f4644,f4645,f4646,f4650,f4651,f4652,f4653,f4654,f4656,f4657,f4658,f4659,f4660,f4661,f4666,f4667,f4668,f4669,f4670,f4671,f4672,f4676,f4679,f4680,f4684,f4685,f4686,f4703,f4704,f4705,f4706,f4709,f4710,f4711,f4712,f4713,f4714,f4715,f4716,f4717,f4718,f4719,f4723,f4724,f4725,f4726,f4727,f4729,f4730,f4731,f4732,f4733,f4734,f4739,f4740,f4741,f4742,f4743,f4744,f4745,f4749,f4752,f4753,f4757,f4758,f4759,f4855,f4856,f4831,f4832,f4858,f4853,f4854,f4885,f4886,f4878,f4879,f4880,f4887,f4889,f4884,f5023,f5024,f5026,f5027,f5028,f5029,f5030,f5031,f5033,f5034,f5035,f5036,f5039,f5090,f5135,f5092,f5149,f5106,f5107,f5108,f5162,f5110,f5169,f5124,f5125,f5131,f5132,f5182,f5244,f5278,f5285,f5259,f5260,f5261,f5262,f5264,f5265,f5266,f5267,f5277,f5354,f5388,f5395,f5369,f5370,f5378,f5379,f5381,f5382,f5383,f5384,f5387,f5509,f5510,f5511,f5624,f5625,f5626,f5780,f5782,f5766,f5767,f5784,f5777,f5778,f6101,f6102,f6104,f6280,f6281,f6240,f6241,f6242,f6282,f6245,f6284,f6291,f6292,f6293,f6294,f6295,f6296,f6297,f6298,f6299,f6300,f6301,f6302,f6303,f6266,f6267,f6309,f4249,f6592,f6614,f6616,f6621,f6638,f6640,f6642,f6644,f6650,f6652,f6654,f6656,f6658,f6678,f6692,f6700,f6708,f6710,f6712,f6726,f6734,f6748,f6752,f6754,f6776,f6781,f6789,f6793,f6803,f6811,f6815,f6823,f6827,f6831,f6833,f6845])).
fof(f6834,plain,(
  $false | $spl18),
  inference(global_subsumption,[],[f288,f287,f289,f487,f296,f297,f299,f304,f303,f308,f307,f358,f359,f360,f368,f383,f382,f381,f390,f391,f392,f393,f402,f401,f400,f399,f398,f397,f413,f412,f411,f410,f409,f408,f417,f414,f427,f430,f437,f473,f492,f532,f535,f575,f639,f675,f696,f727,f728,f730,f732,f753,f756,f769,f785,f787,f1492,f1493,f1495,f803,f805,f791,f804,f790,f802,f808,f789,f389,f388,f387,f372,f371,f367,f366,f365,f806,f807,f395,f407,f406,f405,f404,f403,f396,f394,f380,f379,f378,f377,f376,f375,f1320,f754,f1327,f370,f369,f1708,f1709,f1713,f1723,f1721,f1724,f1747,f1781,f1790,f1792,f1794,f1795,f1769,f1770,f1775,f1778,f1801,f1804,f1816,f1903,f1905,f1918,f1920,f1921,f1931,f1969,f1970,f1972,f2108,f2109,f2130,f2060,f2061,f2134,f2144,f2079,f2080,f2148,f2161,f2300,f2283,f2284,f2305,f2313,f2334,f2331,f2335,f2333,f2380,f2365,f2366,f2381,f2383,f2384,f2385,f2386,f2387,f2388,f2390,f2391,f2393,f2561,f2544,f2562,f2565,f2566,f2567,f2568,f2569,f2570,f2572,f2573,f2576,f2920,f3634,f3635,f3637,f3853,f3854,f3896,f3897,f3899,f4096,f4138,f4104,f4156,f4172,f2543,f4324,f4345,f4326,f4349,f4362,f4476,f4501,f4478,f4507,f4521,f4596,f4595,f4597,f4598,f4599,f4773,f4601,f4634,f4635,f4636,f4637,f4640,f4641,f4642,f4643,f4644,f4645,f4646,f4650,f4651,f4652,f4653,f4654,f4656,f4657,f4658,f4659,f4660,f4661,f4666,f4667,f4668,f4669,f4670,f4671,f4672,f4676,f4679,f4680,f4684,f4685,f4686,f4703,f4704,f4705,f4706,f4709,f4710,f4711,f4712,f4713,f4714,f4715,f4716,f4717,f4718,f4719,f4723,f4724,f4725,f4726,f4727,f4729,f4730,f4731,f4732,f4733,f4734,f4739,f4740,f4741,f4742,f4743,f4744,f4745,f4749,f4752,f4753,f4757,f4758,f4759,f4855,f4856,f4831,f4832,f4858,f4853,f4854,f4885,f4886,f4878,f4879,f4880,f4887,f4889,f4884,f5023,f5024,f5026,f5027,f5028,f5029,f5030,f5031,f5033,f5034,f5035,f5036,f5039,f5090,f5135,f5092,f5149,f5106,f5107,f5108,f5162,f5110,f5169,f5124,f5125,f5131,f5132,f5182,f5244,f5278,f5285,f5259,f5260,f5261,f5262,f5264,f5265,f5266,f5267,f5277,f5354,f5388,f5395,f5369,f5370,f5378,f5379,f5381,f5382,f5383,f5384,f5387,f5509,f5510,f5511,f5624,f5625,f5626,f5780,f5782,f5766,f5767,f5784,f5777,f5778,f6101,f6102,f6104,f6280,f6281,f6240,f6241,f6242,f6282,f6245,f6284,f6291,f6292,f6293,f6294,f6295,f6296,f6297,f6298,f6299,f6300,f6301,f6302,f6303,f6266,f6267,f6309,f4249,f6592,f6614,f6616,f6621,f6638,f6640,f6642,f6644,f6650,f6652,f6654,f6656,f6658,f6678,f6692,f6700,f6708,f6710,f6712,f6726,f6734,f6748,f6752,f6754,f6776,f6781,f6789,f6793,f6803,f6811,f6815,f6823,f6827,f6831,f6833])).
fof(f6832,plain,(
  $false | $spl18),
  inference(global_subsumption,[],[f288,f287,f289,f487,f296,f297,f299,f304,f303,f308,f307,f358,f359,f360,f368,f383,f382,f381,f390,f391,f392,f393,f402,f401,f400,f399,f398,f397,f413,f412,f411,f410,f409,f408,f417,f414,f427,f430,f437,f473,f492,f532,f535,f575,f639,f675,f696,f727,f728,f730,f732,f753,f756,f769,f785,f787,f1492,f1493,f1495,f803,f805,f791,f804,f790,f802,f808,f789,f389,f388,f387,f372,f371,f367,f366,f365,f806,f807,f395,f407,f406,f405,f404,f403,f396,f394,f380,f379,f378,f377,f376,f375,f1320,f754,f1327,f370,f369,f1708,f1709,f1713,f1723,f1721,f1724,f1747,f1781,f1790,f1792,f1794,f1795,f1769,f1770,f1775,f1778,f1801,f1804,f1816,f1903,f1905,f1918,f1920,f1921,f1931,f1969,f1970,f1972,f2108,f2109,f2130,f2060,f2061,f2134,f2144,f2079,f2080,f2148,f2161,f2300,f2283,f2284,f2305,f2313,f2334,f2331,f2335,f2333,f2380,f2365,f2366,f2381,f2383,f2384,f2385,f2386,f2387,f2388,f2390,f2391,f2393,f2561,f2544,f2562,f2565,f2566,f2567,f2568,f2569,f2570,f2572,f2573,f2576,f2920,f3634,f3635,f3637,f3853,f3854,f3896,f3897,f3899,f4096,f4138,f4104,f4156,f4172,f2543,f4324,f4345,f4326,f4349,f4362,f4476,f4501,f4478,f4507,f4521,f4596,f4595,f4597,f4598,f4599,f4773,f4601,f4634,f4635,f4636,f4637,f4640,f4641,f4642,f4643,f4644,f4645,f4646,f4650,f4651,f4652,f4653,f4654,f4656,f4657,f4658,f4659,f4660,f4661,f4666,f4667,f4668,f4669,f4670,f4671,f4672,f4676,f4679,f4680,f4684,f4685,f4686,f4703,f4704,f4705,f4706,f4709,f4710,f4711,f4712,f4713,f4714,f4715,f4716,f4717,f4718,f4719,f4723,f4724,f4725,f4726,f4727,f4729,f4730,f4731,f4732,f4733,f4734,f4739,f4740,f4741,f4742,f4743,f4744,f4745,f4749,f4752,f4753,f4757,f4758,f4759,f4855,f4856,f4831,f4832,f4858,f4853,f4854,f4885,f4886,f4878,f4879,f4880,f4887,f4889,f4884,f5023,f5024,f5026,f5027,f5028,f5029,f5030,f5031,f5033,f5034,f5035,f5036,f5039,f5090,f5135,f5092,f5149,f5106,f5107,f5108,f5162,f5110,f5169,f5124,f5125,f5131,f5132,f5182,f5244,f5278,f5285,f5259,f5260,f5261,f5262,f5264,f5265,f5266,f5267,f5277,f5354,f5388,f5395,f5369,f5370,f5378,f5379,f5381,f5382,f5383,f5384,f5387,f5509,f5510,f5511,f5624,f5625,f5626,f5780,f5782,f5766,f5767,f5784,f5777,f5778,f6101,f6102,f6104,f6280,f6281,f6240,f6241,f6242,f6282,f6245,f6284,f6291,f6292,f6293,f6294,f6295,f6296,f6297,f6298,f6299,f6300,f6301,f6302,f6303,f6266,f6267,f6309,f4249,f6592,f6614,f6616,f6621,f6638,f6640,f6642,f6644,f6650,f6652,f6654,f6656,f6658,f6678,f6692,f6700,f6708,f6710,f6712,f6726,f6734,f6748,f6752,f6754,f6776,f6781,f6789,f6793,f6803,f6811,f6815,f6823,f6827,f6831])).
fof(f6828,plain,(
  $false | $spl18),
  inference(global_subsumption,[],[f288,f287,f289,f487,f296,f297,f299,f304,f303,f308,f307,f358,f359,f360,f368,f383,f382,f381,f390,f391,f392,f393,f402,f401,f400,f399,f398,f397,f413,f412,f411,f410,f409,f408,f417,f414,f427,f430,f437,f473,f492,f532,f535,f575,f639,f675,f696,f727,f728,f730,f732,f753,f756,f769,f785,f787,f1492,f1493,f1495,f803,f805,f791,f804,f790,f802,f808,f789,f389,f388,f387,f372,f371,f367,f366,f365,f806,f807,f395,f407,f406,f405,f404,f403,f396,f394,f380,f379,f378,f377,f376,f375,f1320,f754,f1327,f370,f369,f1708,f1709,f1713,f1723,f1721,f1724,f1747,f1781,f1790,f1792,f1794,f1795,f1769,f1770,f1775,f1778,f1801,f1804,f1816,f1903,f1905,f1918,f1920,f1921,f1931,f1969,f1970,f1972,f2108,f2109,f2130,f2060,f2061,f2134,f2144,f2079,f2080,f2148,f2161,f2300,f2283,f2284,f2305,f2313,f2334,f2331,f2335,f2333,f2380,f2365,f2366,f2381,f2383,f2384,f2385,f2386,f2387,f2388,f2390,f2391,f2393,f2561,f2544,f2562,f2565,f2566,f2567,f2568,f2569,f2570,f2572,f2573,f2576,f2920,f3634,f3635,f3637,f3853,f3854,f3896,f3897,f3899,f4096,f4138,f4104,f4156,f4172,f2543,f4324,f4345,f4326,f4349,f4362,f4476,f4501,f4478,f4507,f4521,f4596,f4595,f4597,f4598,f4599,f4773,f4601,f4634,f4635,f4636,f4637,f4640,f4641,f4642,f4643,f4644,f4645,f4646,f4650,f4651,f4652,f4653,f4654,f4656,f4657,f4658,f4659,f4660,f4661,f4666,f4667,f4668,f4669,f4670,f4671,f4672,f4676,f4679,f4680,f4684,f4685,f4686,f4703,f4704,f4705,f4706,f4709,f4710,f4711,f4712,f4713,f4714,f4715,f4716,f4717,f4718,f4719,f4723,f4724,f4725,f4726,f4727,f4729,f4730,f4731,f4732,f4733,f4734,f4739,f4740,f4741,f4742,f4743,f4744,f4745,f4749,f4752,f4753,f4757,f4758,f4759,f4855,f4856,f4831,f4832,f4858,f4853,f4854,f4885,f4886,f4878,f4879,f4880,f4887,f4889,f4884,f5023,f5024,f5026,f5027,f5028,f5029,f5030,f5031,f5033,f5034,f5035,f5036,f5039,f5090,f5135,f5092,f5149,f5106,f5107,f5108,f5162,f5110,f5169,f5124,f5125,f5131,f5132,f5182,f5244,f5278,f5285,f5259,f5260,f5261,f5262,f5264,f5265,f5266,f5267,f5277,f5354,f5388,f5395,f5369,f5370,f5378,f5379,f5381,f5382,f5383,f5384,f5387,f5509,f5510,f5511,f5624,f5625,f5626,f5780,f5782,f5766,f5767,f5784,f5777,f5778,f6101,f6102,f6104,f6280,f6281,f6240,f6241,f6242,f6282,f6245,f6284,f6291,f6292,f6293,f6294,f6295,f6296,f6297,f6298,f6299,f6300,f6301,f6302,f6303,f6266,f6267,f6309,f4249,f6592,f6614,f6616,f6621,f6638,f6640,f6642,f6644,f6650,f6652,f6654,f6656,f6658,f6678,f6692,f6700,f6708,f6710,f6712,f6726,f6734,f6748,f6752,f6754,f6776,f6781,f6789,f6793,f6803,f6811,f6815,f6823,f6827])).
fof(f6824,plain,(
  $false | $spl18),
  inference(global_subsumption,[],[f288,f287,f289,f487,f296,f297,f299,f304,f303,f308,f307,f358,f359,f360,f368,f383,f382,f381,f390,f391,f392,f393,f402,f401,f400,f399,f398,f397,f413,f412,f411,f410,f409,f408,f417,f414,f427,f430,f437,f473,f492,f532,f535,f575,f639,f675,f696,f727,f728,f730,f732,f753,f756,f769,f785,f787,f1492,f1493,f1495,f803,f805,f791,f804,f790,f802,f808,f789,f389,f388,f387,f372,f371,f367,f366,f365,f806,f807,f395,f407,f406,f405,f404,f403,f396,f394,f380,f379,f378,f377,f376,f375,f1320,f754,f1327,f370,f369,f1708,f1709,f1713,f1723,f1721,f1724,f1747,f1781,f1790,f1792,f1794,f1795,f1769,f1770,f1775,f1778,f1801,f1804,f1816,f1903,f1905,f1918,f1920,f1921,f1931,f1969,f1970,f1972,f2108,f2109,f2130,f2060,f2061,f2134,f2144,f2079,f2080,f2148,f2161,f2300,f2283,f2284,f2305,f2313,f2334,f2331,f2335,f2333,f2380,f2365,f2366,f2381,f2383,f2384,f2385,f2386,f2387,f2388,f2390,f2391,f2393,f2561,f2544,f2562,f2565,f2566,f2567,f2568,f2569,f2570,f2572,f2573,f2576,f2920,f3634,f3635,f3637,f3853,f3854,f3896,f3897,f3899,f4096,f4138,f4104,f4156,f4172,f2543,f4324,f4345,f4326,f4349,f4362,f4476,f4501,f4478,f4507,f4521,f4596,f4595,f4597,f4598,f4599,f4773,f4601,f4634,f4635,f4636,f4637,f4640,f4641,f4642,f4643,f4644,f4645,f4646,f4650,f4651,f4652,f4653,f4654,f4656,f4657,f4658,f4659,f4660,f4661,f4666,f4667,f4668,f4669,f4670,f4671,f4672,f4676,f4679,f4680,f4684,f4685,f4686,f4703,f4704,f4705,f4706,f4709,f4710,f4711,f4712,f4713,f4714,f4715,f4716,f4717,f4718,f4719,f4723,f4724,f4725,f4726,f4727,f4729,f4730,f4731,f4732,f4733,f4734,f4739,f4740,f4741,f4742,f4743,f4744,f4745,f4749,f4752,f4753,f4757,f4758,f4759,f4855,f4856,f4831,f4832,f4858,f4853,f4854,f4885,f4886,f4878,f4879,f4880,f4887,f4889,f4884,f5023,f5024,f5026,f5027,f5028,f5029,f5030,f5031,f5033,f5034,f5035,f5036,f5039,f5090,f5135,f5092,f5149,f5106,f5107,f5108,f5162,f5110,f5169,f5124,f5125,f5131,f5132,f5182,f5244,f5278,f5285,f5259,f5260,f5261,f5262,f5264,f5265,f5266,f5267,f5277,f5354,f5388,f5395,f5369,f5370,f5378,f5379,f5381,f5382,f5383,f5384,f5387,f5509,f5510,f5511,f5624,f5625,f5626,f5780,f5782,f5766,f5767,f5784,f5777,f5778,f6101,f6102,f6104,f6280,f6281,f6240,f6241,f6242,f6282,f6245,f6284,f6291,f6292,f6293,f6294,f6295,f6296,f6297,f6298,f6299,f6300,f6301,f6302,f6303,f6266,f6267,f6309,f4249,f6592,f6614,f6616,f6621,f6638,f6640,f6642,f6644,f6650,f6652,f6654,f6656,f6658,f6678,f6692,f6700,f6708,f6710,f6712,f6726,f6734,f6748,f6752,f6754,f6776,f6781,f6789,f6793,f6803,f6811,f6815,f6823])).
fof(f6816,plain,(
  $false | $spl18),
  inference(global_subsumption,[],[f288,f287,f289,f487,f296,f297,f299,f304,f303,f308,f307,f358,f359,f360,f368,f383,f382,f381,f390,f391,f392,f393,f402,f401,f400,f399,f398,f397,f413,f412,f411,f410,f409,f408,f417,f414,f427,f430,f437,f473,f492,f532,f535,f575,f639,f675,f696,f727,f728,f730,f732,f753,f756,f769,f785,f787,f1492,f1493,f1495,f803,f805,f791,f804,f790,f802,f808,f789,f389,f388,f387,f372,f371,f367,f366,f365,f806,f807,f395,f407,f406,f405,f404,f403,f396,f394,f380,f379,f378,f377,f376,f375,f1320,f754,f1327,f370,f369,f1708,f1709,f1713,f1723,f1721,f1724,f1747,f1781,f1790,f1792,f1794,f1795,f1769,f1770,f1775,f1778,f1801,f1804,f1816,f1903,f1905,f1918,f1920,f1921,f1931,f1969,f1970,f1972,f2108,f2109,f2130,f2060,f2061,f2134,f2144,f2079,f2080,f2148,f2161,f2300,f2283,f2284,f2305,f2313,f2334,f2331,f2335,f2333,f2380,f2365,f2366,f2381,f2383,f2384,f2385,f2386,f2387,f2388,f2390,f2391,f2393,f2561,f2544,f2562,f2565,f2566,f2567,f2568,f2569,f2570,f2572,f2573,f2576,f2920,f3634,f3635,f3637,f3853,f3854,f3896,f3897,f3899,f4096,f4138,f4104,f4156,f4172,f2543,f4324,f4345,f4326,f4349,f4362,f4476,f4501,f4478,f4507,f4521,f4596,f4595,f4597,f4598,f4599,f4773,f4601,f4634,f4635,f4636,f4637,f4640,f4641,f4642,f4643,f4644,f4645,f4646,f4650,f4651,f4652,f4653,f4654,f4656,f4657,f4658,f4659,f4660,f4661,f4666,f4667,f4668,f4669,f4670,f4671,f4672,f4676,f4679,f4680,f4684,f4685,f4686,f4703,f4704,f4705,f4706,f4709,f4710,f4711,f4712,f4713,f4714,f4715,f4716,f4717,f4718,f4719,f4723,f4724,f4725,f4726,f4727,f4729,f4730,f4731,f4732,f4733,f4734,f4739,f4740,f4741,f4742,f4743,f4744,f4745,f4749,f4752,f4753,f4757,f4758,f4759,f4855,f4856,f4831,f4832,f4858,f4853,f4854,f4885,f4886,f4878,f4879,f4880,f4887,f4889,f4884,f5023,f5024,f5026,f5027,f5028,f5029,f5030,f5031,f5033,f5034,f5035,f5036,f5039,f5090,f5135,f5092,f5149,f5106,f5107,f5108,f5162,f5110,f5169,f5124,f5125,f5131,f5132,f5182,f5244,f5278,f5285,f5259,f5260,f5261,f5262,f5264,f5265,f5266,f5267,f5277,f5354,f5388,f5395,f5369,f5370,f5378,f5379,f5381,f5382,f5383,f5384,f5387,f5509,f5510,f5511,f5624,f5625,f5626,f5780,f5782,f5766,f5767,f5784,f5777,f5778,f6101,f6102,f6104,f6280,f6281,f6240,f6241,f6242,f6282,f6245,f6284,f6291,f6292,f6293,f6294,f6295,f6296,f6297,f6298,f6299,f6300,f6301,f6302,f6303,f6266,f6267,f6309,f4249,f6592,f6614,f6616,f6621,f6638,f6640,f6642,f6644,f6650,f6652,f6654,f6656,f6658,f6678,f6692,f6700,f6708,f6710,f6712,f6726,f6734,f6748,f6752,f6754,f6776,f6781,f6789,f6793,f6803,f6811,f6815])).
fof(f6812,plain,(
  $false | $spl18),
  inference(global_subsumption,[],[f288,f287,f289,f487,f296,f297,f299,f304,f303,f308,f307,f358,f359,f360,f368,f383,f382,f381,f390,f391,f392,f393,f402,f401,f400,f399,f398,f397,f413,f412,f411,f410,f409,f408,f417,f414,f427,f430,f437,f473,f492,f532,f535,f575,f639,f675,f696,f727,f728,f730,f732,f753,f756,f769,f785,f787,f1492,f1493,f1495,f803,f805,f791,f804,f790,f802,f808,f789,f389,f388,f387,f372,f371,f367,f366,f365,f806,f807,f395,f407,f406,f405,f404,f403,f396,f394,f380,f379,f378,f377,f376,f375,f1320,f754,f1327,f370,f369,f1708,f1709,f1713,f1723,f1721,f1724,f1747,f1781,f1790,f1792,f1794,f1795,f1769,f1770,f1775,f1778,f1801,f1804,f1816,f1903,f1905,f1918,f1920,f1921,f1931,f1969,f1970,f1972,f2108,f2109,f2130,f2060,f2061,f2134,f2144,f2079,f2080,f2148,f2161,f2300,f2283,f2284,f2305,f2313,f2334,f2331,f2335,f2333,f2380,f2365,f2366,f2381,f2383,f2384,f2385,f2386,f2387,f2388,f2390,f2391,f2393,f2561,f2544,f2562,f2565,f2566,f2567,f2568,f2569,f2570,f2572,f2573,f2576,f2920,f3634,f3635,f3637,f3853,f3854,f3896,f3897,f3899,f4096,f4138,f4104,f4156,f4172,f2543,f4324,f4345,f4326,f4349,f4362,f4476,f4501,f4478,f4507,f4521,f4596,f4595,f4597,f4598,f4599,f4773,f4601,f4634,f4635,f4636,f4637,f4640,f4641,f4642,f4643,f4644,f4645,f4646,f4650,f4651,f4652,f4653,f4654,f4656,f4657,f4658,f4659,f4660,f4661,f4666,f4667,f4668,f4669,f4670,f4671,f4672,f4676,f4679,f4680,f4684,f4685,f4686,f4703,f4704,f4705,f4706,f4709,f4710,f4711,f4712,f4713,f4714,f4715,f4716,f4717,f4718,f4719,f4723,f4724,f4725,f4726,f4727,f4729,f4730,f4731,f4732,f4733,f4734,f4739,f4740,f4741,f4742,f4743,f4744,f4745,f4749,f4752,f4753,f4757,f4758,f4759,f4855,f4856,f4831,f4832,f4858,f4853,f4854,f4885,f4886,f4878,f4879,f4880,f4887,f4889,f4884,f5023,f5024,f5026,f5027,f5028,f5029,f5030,f5031,f5033,f5034,f5035,f5036,f5039,f5090,f5135,f5092,f5149,f5106,f5107,f5108,f5162,f5110,f5169,f5124,f5125,f5131,f5132,f5182,f5244,f5278,f5285,f5259,f5260,f5261,f5262,f5264,f5265,f5266,f5267,f5277,f5354,f5388,f5395,f5369,f5370,f5378,f5379,f5381,f5382,f5383,f5384,f5387,f5509,f5510,f5511,f5624,f5625,f5626,f5780,f5782,f5766,f5767,f5784,f5777,f5778,f6101,f6102,f6104,f6280,f6281,f6240,f6241,f6242,f6282,f6245,f6284,f6291,f6292,f6293,f6294,f6295,f6296,f6297,f6298,f6299,f6300,f6301,f6302,f6303,f6266,f6267,f6309,f4249,f6592,f6614,f6616,f6621,f6638,f6640,f6642,f6644,f6650,f6652,f6654,f6656,f6658,f6678,f6692,f6700,f6708,f6710,f6712,f6726,f6734,f6748,f6752,f6754,f6776,f6781,f6789,f6793,f6803,f6811])).
fof(f6804,plain,(
  $false | $spl18),
  inference(global_subsumption,[],[f288,f287,f289,f487,f296,f297,f299,f304,f303,f308,f307,f358,f359,f360,f368,f383,f382,f381,f390,f391,f392,f393,f402,f401,f400,f399,f398,f397,f413,f412,f411,f410,f409,f408,f417,f414,f427,f430,f437,f473,f492,f532,f535,f575,f639,f675,f696,f727,f728,f730,f732,f753,f756,f769,f785,f787,f1492,f1493,f1495,f803,f805,f791,f804,f790,f802,f808,f789,f389,f388,f387,f372,f371,f367,f366,f365,f806,f807,f395,f407,f406,f405,f404,f403,f396,f394,f380,f379,f378,f377,f376,f375,f1320,f754,f1327,f370,f369,f1708,f1709,f1713,f1723,f1721,f1724,f1747,f1781,f1790,f1792,f1794,f1795,f1769,f1770,f1775,f1778,f1801,f1804,f1816,f1903,f1905,f1918,f1920,f1921,f1931,f1969,f1970,f1972,f2108,f2109,f2130,f2060,f2061,f2134,f2144,f2079,f2080,f2148,f2161,f2300,f2283,f2284,f2305,f2313,f2334,f2331,f2335,f2333,f2380,f2365,f2366,f2381,f2383,f2384,f2385,f2386,f2387,f2388,f2390,f2391,f2393,f2561,f2544,f2562,f2565,f2566,f2567,f2568,f2569,f2570,f2572,f2573,f2576,f2920,f3634,f3635,f3637,f3853,f3854,f3896,f3897,f3899,f4096,f4138,f4104,f4156,f4172,f2543,f4324,f4345,f4326,f4349,f4362,f4476,f4501,f4478,f4507,f4521,f4596,f4595,f4597,f4598,f4599,f4773,f4601,f4634,f4635,f4636,f4637,f4640,f4641,f4642,f4643,f4644,f4645,f4646,f4650,f4651,f4652,f4653,f4654,f4656,f4657,f4658,f4659,f4660,f4661,f4666,f4667,f4668,f4669,f4670,f4671,f4672,f4676,f4679,f4680,f4684,f4685,f4686,f4703,f4704,f4705,f4706,f4709,f4710,f4711,f4712,f4713,f4714,f4715,f4716,f4717,f4718,f4719,f4723,f4724,f4725,f4726,f4727,f4729,f4730,f4731,f4732,f4733,f4734,f4739,f4740,f4741,f4742,f4743,f4744,f4745,f4749,f4752,f4753,f4757,f4758,f4759,f4855,f4856,f4831,f4832,f4858,f4853,f4854,f4885,f4886,f4878,f4879,f4880,f4887,f4889,f4884,f5023,f5024,f5026,f5027,f5028,f5029,f5030,f5031,f5033,f5034,f5035,f5036,f5039,f5090,f5135,f5092,f5149,f5106,f5107,f5108,f5162,f5110,f5169,f5124,f5125,f5131,f5132,f5182,f5244,f5278,f5285,f5259,f5260,f5261,f5262,f5264,f5265,f5266,f5267,f5277,f5354,f5388,f5395,f5369,f5370,f5378,f5379,f5381,f5382,f5383,f5384,f5387,f5509,f5510,f5511,f5624,f5625,f5626,f5780,f5782,f5766,f5767,f5784,f5777,f5778,f6101,f6102,f6104,f6280,f6281,f6240,f6241,f6242,f6282,f6245,f6284,f6291,f6292,f6293,f6294,f6295,f6296,f6297,f6298,f6299,f6300,f6301,f6302,f6303,f6266,f6267,f6309,f4249,f6592,f6614,f6616,f6621,f6638,f6640,f6642,f6644,f6650,f6652,f6654,f6656,f6658,f6678,f6692,f6700,f6708,f6710,f6712,f6726,f6734,f6748,f6752,f6754,f6776,f6781,f6789,f6793,f6803])).
fof(f6794,plain,(
  $false | $spl18),
  inference(global_subsumption,[],[f288,f287,f289,f487,f296,f297,f299,f304,f303,f308,f307,f358,f359,f360,f368,f383,f382,f381,f390,f391,f392,f393,f402,f401,f400,f399,f398,f397,f413,f412,f411,f410,f409,f408,f417,f414,f427,f430,f437,f473,f492,f532,f535,f575,f639,f675,f696,f727,f728,f730,f732,f753,f756,f769,f785,f787,f1492,f1493,f1495,f803,f805,f791,f804,f790,f802,f808,f789,f389,f388,f387,f372,f371,f367,f366,f365,f806,f807,f395,f407,f406,f405,f404,f403,f396,f394,f380,f379,f378,f377,f376,f375,f1320,f754,f1327,f370,f369,f1708,f1709,f1713,f1723,f1721,f1724,f1747,f1781,f1790,f1792,f1794,f1795,f1769,f1770,f1775,f1778,f1801,f1804,f1816,f1903,f1905,f1918,f1920,f1921,f1931,f1969,f1970,f1972,f2108,f2109,f2130,f2060,f2061,f2134,f2144,f2079,f2080,f2148,f2161,f2300,f2283,f2284,f2305,f2313,f2334,f2331,f2335,f2333,f2380,f2365,f2366,f2381,f2383,f2384,f2385,f2386,f2387,f2388,f2390,f2391,f2393,f2561,f2544,f2562,f2565,f2566,f2567,f2568,f2569,f2570,f2572,f2573,f2576,f2920,f3634,f3635,f3637,f3853,f3854,f3896,f3897,f3899,f4096,f4138,f4104,f4156,f4172,f2543,f4324,f4345,f4326,f4349,f4362,f4476,f4501,f4478,f4507,f4521,f4596,f4595,f4597,f4598,f4599,f4773,f4601,f4634,f4635,f4636,f4637,f4640,f4641,f4642,f4643,f4644,f4645,f4646,f4650,f4651,f4652,f4653,f4654,f4656,f4657,f4658,f4659,f4660,f4661,f4666,f4667,f4668,f4669,f4670,f4671,f4672,f4676,f4679,f4680,f4684,f4685,f4686,f4703,f4704,f4705,f4706,f4709,f4710,f4711,f4712,f4713,f4714,f4715,f4716,f4717,f4718,f4719,f4723,f4724,f4725,f4726,f4727,f4729,f4730,f4731,f4732,f4733,f4734,f4739,f4740,f4741,f4742,f4743,f4744,f4745,f4749,f4752,f4753,f4757,f4758,f4759,f4855,f4856,f4831,f4832,f4858,f4853,f4854,f4885,f4886,f4878,f4879,f4880,f4887,f4889,f4884,f5023,f5024,f5026,f5027,f5028,f5029,f5030,f5031,f5033,f5034,f5035,f5036,f5039,f5090,f5135,f5092,f5149,f5106,f5107,f5108,f5162,f5110,f5169,f5124,f5125,f5131,f5132,f5182,f5244,f5278,f5285,f5259,f5260,f5261,f5262,f5264,f5265,f5266,f5267,f5277,f5354,f5388,f5395,f5369,f5370,f5378,f5379,f5381,f5382,f5383,f5384,f5387,f5509,f5510,f5511,f5624,f5625,f5626,f5780,f5782,f5766,f5767,f5784,f5777,f5778,f6101,f6102,f6104,f6280,f6281,f6240,f6241,f6242,f6282,f6245,f6284,f6291,f6292,f6293,f6294,f6295,f6296,f6297,f6298,f6299,f6300,f6301,f6302,f6303,f6266,f6267,f6309,f4249,f6592,f6614,f6616,f6621,f6638,f6640,f6642,f6644,f6650,f6652,f6654,f6656,f6658,f6678,f6692,f6700,f6708,f6710,f6712,f6726,f6734,f6748,f6752,f6754,f6776,f6781,f6789,f6793])).
fof(f6790,plain,(
  $false | $spl18),
  inference(global_subsumption,[],[f288,f287,f289,f487,f296,f297,f299,f304,f303,f308,f307,f358,f359,f360,f368,f383,f382,f381,f390,f391,f392,f393,f402,f401,f400,f399,f398,f397,f413,f412,f411,f410,f409,f408,f417,f414,f427,f430,f437,f473,f492,f532,f535,f575,f639,f675,f696,f727,f728,f730,f732,f753,f756,f769,f785,f787,f1492,f1493,f1495,f803,f805,f791,f804,f790,f802,f808,f789,f389,f388,f387,f372,f371,f367,f366,f365,f806,f807,f395,f407,f406,f405,f404,f403,f396,f394,f380,f379,f378,f377,f376,f375,f1320,f754,f1327,f370,f369,f1708,f1709,f1713,f1723,f1721,f1724,f1747,f1781,f1790,f1792,f1794,f1795,f1769,f1770,f1775,f1778,f1801,f1804,f1816,f1903,f1905,f1918,f1920,f1921,f1931,f1969,f1970,f1972,f2108,f2109,f2130,f2060,f2061,f2134,f2144,f2079,f2080,f2148,f2161,f2300,f2283,f2284,f2305,f2313,f2334,f2331,f2335,f2333,f2380,f2365,f2366,f2381,f2383,f2384,f2385,f2386,f2387,f2388,f2390,f2391,f2393,f2561,f2544,f2562,f2565,f2566,f2567,f2568,f2569,f2570,f2572,f2573,f2576,f2920,f3634,f3635,f3637,f3853,f3854,f3896,f3897,f3899,f4096,f4138,f4104,f4156,f4172,f2543,f4324,f4345,f4326,f4349,f4362,f4476,f4501,f4478,f4507,f4521,f4596,f4595,f4597,f4598,f4599,f4773,f4601,f4634,f4635,f4636,f4637,f4640,f4641,f4642,f4643,f4644,f4645,f4646,f4650,f4651,f4652,f4653,f4654,f4656,f4657,f4658,f4659,f4660,f4661,f4666,f4667,f4668,f4669,f4670,f4671,f4672,f4676,f4679,f4680,f4684,f4685,f4686,f4703,f4704,f4705,f4706,f4709,f4710,f4711,f4712,f4713,f4714,f4715,f4716,f4717,f4718,f4719,f4723,f4724,f4725,f4726,f4727,f4729,f4730,f4731,f4732,f4733,f4734,f4739,f4740,f4741,f4742,f4743,f4744,f4745,f4749,f4752,f4753,f4757,f4758,f4759,f4855,f4856,f4831,f4832,f4858,f4853,f4854,f4885,f4886,f4878,f4879,f4880,f4887,f4889,f4884,f5023,f5024,f5026,f5027,f5028,f5029,f5030,f5031,f5033,f5034,f5035,f5036,f5039,f5090,f5135,f5092,f5149,f5106,f5107,f5108,f5162,f5110,f5169,f5124,f5125,f5131,f5132,f5182,f5244,f5278,f5285,f5259,f5260,f5261,f5262,f5264,f5265,f5266,f5267,f5277,f5354,f5388,f5395,f5369,f5370,f5378,f5379,f5381,f5382,f5383,f5384,f5387,f5509,f5510,f5511,f5624,f5625,f5626,f5780,f5782,f5766,f5767,f5784,f5777,f5778,f6101,f6102,f6104,f6280,f6281,f6240,f6241,f6242,f6282,f6245,f6284,f6291,f6292,f6293,f6294,f6295,f6296,f6297,f6298,f6299,f6300,f6301,f6302,f6303,f6266,f6267,f6309,f4249,f6592,f6614,f6616,f6621,f6638,f6640,f6642,f6644,f6650,f6652,f6654,f6656,f6658,f6678,f6692,f6700,f6708,f6710,f6712,f6726,f6734,f6748,f6752,f6754,f6776,f6781,f6789])).
fof(f6782,plain,(
  $false | $spl18),
  inference(global_subsumption,[],[f288,f287,f289,f487,f296,f297,f299,f304,f303,f308,f307,f358,f359,f360,f368,f383,f382,f381,f390,f391,f392,f393,f402,f401,f400,f399,f398,f397,f413,f412,f411,f410,f409,f408,f417,f414,f427,f430,f437,f473,f492,f532,f535,f575,f639,f675,f696,f727,f728,f730,f732,f753,f756,f769,f785,f787,f1492,f1493,f1495,f803,f805,f791,f804,f790,f802,f808,f789,f389,f388,f387,f372,f371,f367,f366,f365,f806,f807,f395,f407,f406,f405,f404,f403,f396,f394,f380,f379,f378,f377,f376,f375,f1320,f754,f1327,f370,f369,f1708,f1709,f1713,f1723,f1721,f1724,f1747,f1781,f1790,f1792,f1794,f1795,f1769,f1770,f1775,f1778,f1801,f1804,f1816,f1903,f1905,f1918,f1920,f1921,f1931,f1969,f1970,f1972,f2108,f2109,f2130,f2060,f2061,f2134,f2144,f2079,f2080,f2148,f2161,f2300,f2283,f2284,f2305,f2313,f2334,f2331,f2335,f2333,f2380,f2365,f2366,f2381,f2383,f2384,f2385,f2386,f2387,f2388,f2390,f2391,f2393,f2561,f2544,f2562,f2565,f2566,f2567,f2568,f2569,f2570,f2572,f2573,f2576,f2920,f3634,f3635,f3637,f3853,f3854,f3896,f3897,f3899,f4096,f4138,f4104,f4156,f4172,f2543,f4324,f4345,f4326,f4349,f4362,f4476,f4501,f4478,f4507,f4521,f4596,f4595,f4597,f4598,f4599,f4773,f4601,f4634,f4635,f4636,f4637,f4640,f4641,f4642,f4643,f4644,f4645,f4646,f4650,f4651,f4652,f4653,f4654,f4656,f4657,f4658,f4659,f4660,f4661,f4666,f4667,f4668,f4669,f4670,f4671,f4672,f4676,f4679,f4680,f4684,f4685,f4686,f4703,f4704,f4705,f4706,f4709,f4710,f4711,f4712,f4713,f4714,f4715,f4716,f4717,f4718,f4719,f4723,f4724,f4725,f4726,f4727,f4729,f4730,f4731,f4732,f4733,f4734,f4739,f4740,f4741,f4742,f4743,f4744,f4745,f4749,f4752,f4753,f4757,f4758,f4759,f4855,f4856,f4831,f4832,f4858,f4853,f4854,f4885,f4886,f4878,f4879,f4880,f4887,f4889,f4884,f5023,f5024,f5026,f5027,f5028,f5029,f5030,f5031,f5033,f5034,f5035,f5036,f5039,f5090,f5135,f5092,f5149,f5106,f5107,f5108,f5162,f5110,f5169,f5124,f5125,f5131,f5132,f5182,f5244,f5278,f5285,f5259,f5260,f5261,f5262,f5264,f5265,f5266,f5267,f5277,f5354,f5388,f5395,f5369,f5370,f5378,f5379,f5381,f5382,f5383,f5384,f5387,f5509,f5510,f5511,f5624,f5625,f5626,f5780,f5782,f5766,f5767,f5784,f5777,f5778,f6101,f6102,f6104,f6280,f6281,f6240,f6241,f6242,f6282,f6245,f6284,f6291,f6292,f6293,f6294,f6295,f6296,f6297,f6298,f6299,f6300,f6301,f6302,f6303,f6266,f6267,f6309,f4249,f6592,f6614,f6616,f6621,f6638,f6640,f6642,f6644,f6650,f6652,f6654,f6656,f6658,f6678,f6692,f6700,f6708,f6710,f6712,f6726,f6734,f6748,f6752,f6754,f6776,f6781])).
fof(f6777,plain,(
  $false | $spl18),
  inference(global_subsumption,[],[f288,f287,f289,f487,f296,f297,f299,f304,f303,f308,f307,f358,f359,f360,f368,f383,f382,f381,f390,f391,f392,f393,f402,f401,f400,f399,f398,f397,f413,f412,f411,f410,f409,f408,f417,f414,f427,f430,f437,f473,f492,f532,f535,f575,f639,f675,f696,f727,f728,f730,f732,f753,f756,f769,f785,f787,f1492,f1493,f1495,f803,f805,f791,f804,f790,f802,f808,f789,f389,f388,f387,f372,f371,f367,f366,f365,f806,f807,f395,f407,f406,f405,f404,f403,f396,f394,f380,f379,f378,f377,f376,f375,f1320,f754,f1327,f370,f369,f1708,f1709,f1713,f1723,f1721,f1724,f1747,f1781,f1790,f1792,f1794,f1795,f1769,f1770,f1775,f1778,f1801,f1804,f1816,f1903,f1905,f1918,f1920,f1921,f1931,f1969,f1970,f1972,f2108,f2109,f2130,f2060,f2061,f2134,f2144,f2079,f2080,f2148,f2161,f2300,f2283,f2284,f2305,f2313,f2334,f2331,f2335,f2333,f2380,f2365,f2366,f2381,f2383,f2384,f2385,f2386,f2387,f2388,f2390,f2391,f2393,f2561,f2544,f2562,f2565,f2566,f2567,f2568,f2569,f2570,f2572,f2573,f2576,f2920,f3634,f3635,f3637,f3853,f3854,f3896,f3897,f3899,f4096,f4138,f4104,f4156,f4172,f2543,f4324,f4345,f4326,f4349,f4362,f4476,f4501,f4478,f4507,f4521,f4596,f4595,f4597,f4598,f4599,f4773,f4601,f4634,f4635,f4636,f4637,f4640,f4641,f4642,f4643,f4644,f4645,f4646,f4650,f4651,f4652,f4653,f4654,f4656,f4657,f4658,f4659,f4660,f4661,f4666,f4667,f4668,f4669,f4670,f4671,f4672,f4676,f4679,f4680,f4684,f4685,f4686,f4703,f4704,f4705,f4706,f4709,f4710,f4711,f4712,f4713,f4714,f4715,f4716,f4717,f4718,f4719,f4723,f4724,f4725,f4726,f4727,f4729,f4730,f4731,f4732,f4733,f4734,f4739,f4740,f4741,f4742,f4743,f4744,f4745,f4749,f4752,f4753,f4757,f4758,f4759,f4855,f4856,f4831,f4832,f4858,f4853,f4854,f4885,f4886,f4878,f4879,f4880,f4887,f4889,f4884,f5023,f5024,f5026,f5027,f5028,f5029,f5030,f5031,f5033,f5034,f5035,f5036,f5039,f5090,f5135,f5092,f5149,f5106,f5107,f5108,f5162,f5110,f5169,f5124,f5125,f5131,f5132,f5182,f5244,f5278,f5285,f5259,f5260,f5261,f5262,f5264,f5265,f5266,f5267,f5277,f5354,f5388,f5395,f5369,f5370,f5378,f5379,f5381,f5382,f5383,f5384,f5387,f5509,f5510,f5511,f5624,f5625,f5626,f5780,f5782,f5766,f5767,f5784,f5777,f5778,f6101,f6102,f6104,f6280,f6281,f6240,f6241,f6242,f6282,f6245,f6284,f6291,f6292,f6293,f6294,f6295,f6296,f6297,f6298,f6299,f6300,f6301,f6302,f6303,f6266,f6267,f6309,f4249,f6592,f6614,f6616,f6621,f6638,f6640,f6642,f6644,f6650,f6652,f6654,f6656,f6658,f6678,f6692,f6700,f6708,f6710,f6712,f6726,f6734,f6748,f6752,f6754,f6776])).
fof(f6755,plain,(
  $false | $spl18),
  inference(global_subsumption,[],[f288,f287,f289,f487,f296,f297,f299,f304,f303,f308,f307,f358,f359,f360,f368,f383,f382,f381,f390,f391,f392,f393,f402,f401,f400,f399,f398,f397,f413,f412,f411,f410,f409,f408,f417,f414,f427,f430,f437,f473,f492,f532,f535,f575,f639,f675,f696,f727,f728,f730,f732,f753,f756,f769,f785,f787,f1492,f1493,f1495,f803,f805,f791,f804,f790,f802,f808,f789,f389,f388,f387,f372,f371,f367,f366,f365,f806,f807,f395,f407,f406,f405,f404,f403,f396,f394,f380,f379,f378,f377,f376,f375,f1320,f754,f1327,f370,f369,f1708,f1709,f1713,f1723,f1721,f1724,f1747,f1781,f1790,f1792,f1794,f1795,f1769,f1770,f1775,f1778,f1801,f1804,f1816,f1903,f1905,f1918,f1920,f1921,f1931,f1969,f1970,f1972,f2108,f2109,f2130,f2060,f2061,f2134,f2144,f2079,f2080,f2148,f2161,f2300,f2283,f2284,f2305,f2313,f2334,f2331,f2335,f2333,f2380,f2365,f2366,f2381,f2383,f2384,f2385,f2386,f2387,f2388,f2390,f2391,f2393,f2561,f2544,f2562,f2565,f2566,f2567,f2568,f2569,f2570,f2572,f2573,f2576,f2920,f3634,f3635,f3637,f3853,f3854,f3896,f3897,f3899,f4096,f4138,f4104,f4156,f4172,f2543,f4324,f4345,f4326,f4349,f4362,f4476,f4501,f4478,f4507,f4521,f4596,f4595,f4597,f4598,f4599,f4773,f4601,f4634,f4635,f4636,f4637,f4640,f4641,f4642,f4643,f4644,f4645,f4646,f4650,f4651,f4652,f4653,f4654,f4656,f4657,f4658,f4659,f4660,f4661,f4666,f4667,f4668,f4669,f4670,f4671,f4672,f4676,f4679,f4680,f4684,f4685,f4686,f4703,f4704,f4705,f4706,f4709,f4710,f4711,f4712,f4713,f4714,f4715,f4716,f4717,f4718,f4719,f4723,f4724,f4725,f4726,f4727,f4729,f4730,f4731,f4732,f4733,f4734,f4739,f4740,f4741,f4742,f4743,f4744,f4745,f4749,f4752,f4753,f4757,f4758,f4759,f4855,f4856,f4831,f4832,f4858,f4853,f4854,f4885,f4886,f4878,f4879,f4880,f4887,f4889,f4884,f5023,f5024,f5026,f5027,f5028,f5029,f5030,f5031,f5033,f5034,f5035,f5036,f5039,f5090,f5135,f5092,f5149,f5106,f5107,f5108,f5162,f5110,f5169,f5124,f5125,f5131,f5132,f5182,f5244,f5278,f5285,f5259,f5260,f5261,f5262,f5264,f5265,f5266,f5267,f5277,f5354,f5388,f5395,f5369,f5370,f5378,f5379,f5381,f5382,f5383,f5384,f5387,f5509,f5510,f5511,f5624,f5625,f5626,f5780,f5782,f5766,f5767,f5784,f5777,f5778,f6101,f6102,f6104,f6280,f6281,f6240,f6241,f6242,f6282,f6245,f6284,f6291,f6292,f6293,f6294,f6295,f6296,f6297,f6298,f6299,f6300,f6301,f6302,f6303,f6266,f6267,f6309,f4249,f6592,f6614,f6616,f6621,f6638,f6640,f6642,f6644,f6650,f6652,f6654,f6656,f6658,f6678,f6692,f6700,f6708,f6710,f6712,f6726,f6734,f6748,f6752,f6754])).
fof(f6753,plain,(
  $false | $spl18),
  inference(global_subsumption,[],[f288,f287,f289,f487,f296,f297,f299,f304,f303,f308,f307,f358,f359,f360,f368,f383,f382,f381,f390,f391,f392,f393,f402,f401,f400,f399,f398,f397,f413,f412,f411,f410,f409,f408,f417,f414,f427,f430,f437,f473,f492,f532,f535,f575,f639,f675,f696,f727,f728,f730,f732,f753,f756,f769,f785,f787,f1492,f1493,f1495,f803,f805,f791,f804,f790,f802,f808,f789,f389,f388,f387,f372,f371,f367,f366,f365,f806,f807,f395,f407,f406,f405,f404,f403,f396,f394,f380,f379,f378,f377,f376,f375,f1320,f754,f1327,f370,f369,f1708,f1709,f1713,f1723,f1721,f1724,f1747,f1781,f1790,f1792,f1794,f1795,f1769,f1770,f1775,f1778,f1801,f1804,f1816,f1903,f1905,f1918,f1920,f1921,f1931,f1969,f1970,f1972,f2108,f2109,f2130,f2060,f2061,f2134,f2144,f2079,f2080,f2148,f2161,f2300,f2283,f2284,f2305,f2313,f2334,f2331,f2335,f2333,f2380,f2365,f2366,f2381,f2383,f2384,f2385,f2386,f2387,f2388,f2390,f2391,f2393,f2561,f2544,f2562,f2565,f2566,f2567,f2568,f2569,f2570,f2572,f2573,f2576,f2920,f3634,f3635,f3637,f3853,f3854,f3896,f3897,f3899,f4096,f4138,f4104,f4156,f4172,f2543,f4324,f4345,f4326,f4349,f4362,f4476,f4501,f4478,f4507,f4521,f4596,f4595,f4597,f4598,f4599,f4773,f4601,f4634,f4635,f4636,f4637,f4640,f4641,f4642,f4643,f4644,f4645,f4646,f4650,f4651,f4652,f4653,f4654,f4656,f4657,f4658,f4659,f4660,f4661,f4666,f4667,f4668,f4669,f4670,f4671,f4672,f4676,f4679,f4680,f4684,f4685,f4686,f4703,f4704,f4705,f4706,f4709,f4710,f4711,f4712,f4713,f4714,f4715,f4716,f4717,f4718,f4719,f4723,f4724,f4725,f4726,f4727,f4729,f4730,f4731,f4732,f4733,f4734,f4739,f4740,f4741,f4742,f4743,f4744,f4745,f4749,f4752,f4753,f4757,f4758,f4759,f4855,f4856,f4831,f4832,f4858,f4853,f4854,f4885,f4886,f4878,f4879,f4880,f4887,f4889,f4884,f5023,f5024,f5026,f5027,f5028,f5029,f5030,f5031,f5033,f5034,f5035,f5036,f5039,f5090,f5135,f5092,f5149,f5106,f5107,f5108,f5162,f5110,f5169,f5124,f5125,f5131,f5132,f5182,f5244,f5278,f5285,f5259,f5260,f5261,f5262,f5264,f5265,f5266,f5267,f5277,f5354,f5388,f5395,f5369,f5370,f5378,f5379,f5381,f5382,f5383,f5384,f5387,f5509,f5510,f5511,f5624,f5625,f5626,f5780,f5782,f5766,f5767,f5784,f5777,f5778,f6101,f6102,f6104,f6280,f6281,f6240,f6241,f6242,f6282,f6245,f6284,f6291,f6292,f6293,f6294,f6295,f6296,f6297,f6298,f6299,f6300,f6301,f6302,f6303,f6266,f6267,f6309,f4249,f6592,f6614,f6616,f6621,f6638,f6640,f6642,f6644,f6650,f6652,f6654,f6656,f6658,f6678,f6692,f6700,f6708,f6710,f6712,f6726,f6734,f6748,f6752])).
fof(f6749,plain,(
  $false | $spl18),
  inference(global_subsumption,[],[f288,f287,f289,f487,f296,f297,f299,f304,f303,f308,f307,f358,f359,f360,f368,f383,f382,f381,f390,f391,f392,f393,f402,f401,f400,f399,f398,f397,f413,f412,f411,f410,f409,f408,f417,f414,f427,f430,f437,f473,f492,f532,f535,f575,f639,f675,f696,f727,f728,f730,f732,f753,f756,f769,f785,f787,f1492,f1493,f1495,f803,f805,f791,f804,f790,f802,f808,f789,f389,f388,f387,f372,f371,f367,f366,f365,f806,f807,f395,f407,f406,f405,f404,f403,f396,f394,f380,f379,f378,f377,f376,f375,f1320,f754,f1327,f370,f369,f1708,f1709,f1713,f1723,f1721,f1724,f1747,f1781,f1790,f1792,f1794,f1795,f1769,f1770,f1775,f1778,f1801,f1804,f1816,f1903,f1905,f1918,f1920,f1921,f1931,f1969,f1970,f1972,f2108,f2109,f2130,f2060,f2061,f2134,f2144,f2079,f2080,f2148,f2161,f2300,f2283,f2284,f2305,f2313,f2334,f2331,f2335,f2333,f2380,f2365,f2366,f2381,f2383,f2384,f2385,f2386,f2387,f2388,f2390,f2391,f2393,f2561,f2544,f2562,f2565,f2566,f2567,f2568,f2569,f2570,f2572,f2573,f2576,f2920,f3634,f3635,f3637,f3853,f3854,f3896,f3897,f3899,f4096,f4138,f4104,f4156,f4172,f2543,f4324,f4345,f4326,f4349,f4362,f4476,f4501,f4478,f4507,f4521,f4596,f4595,f4597,f4598,f4599,f4773,f4601,f4634,f4635,f4636,f4637,f4640,f4641,f4642,f4643,f4644,f4645,f4646,f4650,f4651,f4652,f4653,f4654,f4656,f4657,f4658,f4659,f4660,f4661,f4666,f4667,f4668,f4669,f4670,f4671,f4672,f4676,f4679,f4680,f4684,f4685,f4686,f4703,f4704,f4705,f4706,f4709,f4710,f4711,f4712,f4713,f4714,f4715,f4716,f4717,f4718,f4719,f4723,f4724,f4725,f4726,f4727,f4729,f4730,f4731,f4732,f4733,f4734,f4739,f4740,f4741,f4742,f4743,f4744,f4745,f4749,f4752,f4753,f4757,f4758,f4759,f4855,f4856,f4831,f4832,f4858,f4853,f4854,f4885,f4886,f4878,f4879,f4880,f4887,f4889,f4884,f5023,f5024,f5026,f5027,f5028,f5029,f5030,f5031,f5033,f5034,f5035,f5036,f5039,f5090,f5135,f5092,f5149,f5106,f5107,f5108,f5162,f5110,f5169,f5124,f5125,f5131,f5132,f5182,f5244,f5278,f5285,f5259,f5260,f5261,f5262,f5264,f5265,f5266,f5267,f5277,f5354,f5388,f5395,f5369,f5370,f5378,f5379,f5381,f5382,f5383,f5384,f5387,f5509,f5510,f5511,f5624,f5625,f5626,f5780,f5782,f5766,f5767,f5784,f5777,f5778,f6101,f6102,f6104,f6280,f6281,f6240,f6241,f6242,f6282,f6245,f6284,f6291,f6292,f6293,f6294,f6295,f6296,f6297,f6298,f6299,f6300,f6301,f6302,f6303,f6266,f6267,f6309,f4249,f6592,f6614,f6616,f6621,f6638,f6640,f6642,f6644,f6650,f6652,f6654,f6656,f6658,f6678,f6692,f6700,f6708,f6710,f6712,f6726,f6734,f6748])).
fof(f6741,plain,(
  $false | $spl18),
  inference(subsumption_resolution,[],[f6740,f289])).
fof(f6740,plain,(
  ~p(s(bool,'T_0')) | $spl18),
  inference(forward_demodulation,[],[f6739,f4249])).
fof(f6739,plain,(
  ( ! [X37,X35,X33,X36,X34] : (~p(s(bool,'const.bool.IN_2'(s('type.ind_type.recspace'(X33),'const.ind_type.CONSTR_3'(s('type.num.num',X34),s(X33,X35),s(fun('type.num.num','type.ind_type.recspace'(X33)),X36))),s(fun('type.ind_type.recspace'(X33),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.ind_type.recspace'(X33)),sK11(happ(s(fun(fun('type.num.num','type.ind_type.recspace'(X33)),'type.ind_type.recspace'(X33)),happ(s(fun(X33,fun(fun('type.num.num','type.ind_type.recspace'(X33)),'type.ind_type.recspace'(X33))),'const.ind_type.CONSTR_1'(s('type.num.num',X34))),s(X33,X35))),s(fun('type.num.num','type.ind_type.recspace'(X33)),X36)),X37,'type.ind_type.recspace'(X33))))))))) ) | $spl18),
  inference(subsumption_resolution,[],[f6503,f289])).
fof(f6503,plain,(
  ( ! [X37,X35,X33,X36,X34] : (~p(s(bool,'T_0')) | ~p(s(bool,'const.bool.IN_2'(s('type.ind_type.recspace'(X33),'const.ind_type.CONSTR_3'(s('type.num.num',X34),s(X33,X35),s(fun('type.num.num','type.ind_type.recspace'(X33)),X36))),s(fun('type.ind_type.recspace'(X33),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.ind_type.recspace'(X33)),sK11(happ(s(fun(fun('type.num.num','type.ind_type.recspace'(X33)),'type.ind_type.recspace'(X33)),happ(s(fun(X33,fun(fun('type.num.num','type.ind_type.recspace'(X33)),'type.ind_type.recspace'(X33))),'const.ind_type.CONSTR_1'(s('type.num.num',X34))),s(X33,X35))),s(fun('type.num.num','type.ind_type.recspace'(X33)),X36)),X37,'type.ind_type.recspace'(X33))))))))) ) | $spl18),
  inference(backward_demodulation,[],[f4249,f6101])).
fof(f6738,plain,(
  $false | $spl18),
  inference(subsumption_resolution,[],[f6737,f289])).
fof(f6737,plain,(
  ~p(s(bool,'T_0')) | $spl18),
  inference(forward_demodulation,[],[f6736,f4249])).
fof(f6736,plain,(
  ( ! [X39,X41,X38,X42,X40] : (~p(s(bool,'const.bool.IN_2'(s('type.ind_type.recspace'(X38),'const.ind_type.CONSTR_3'(s('type.num.num',X39),s(X38,X40),s(fun('type.num.num','type.ind_type.recspace'(X38)),X41))),s(fun('type.ind_type.recspace'(X38),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.ind_type.recspace'(X38)),sK14(happ(s(fun(fun('type.num.num','type.ind_type.recspace'(X38)),'type.ind_type.recspace'(X38)),happ(s(fun(X38,fun(fun('type.num.num','type.ind_type.recspace'(X38)),'type.ind_type.recspace'(X38))),'const.ind_type.CONSTR_1'(s('type.num.num',X39))),s(X38,X40))),s(fun('type.num.num','type.ind_type.recspace'(X38)),X41)),X42,'type.ind_type.recspace'(X38))))))))) ) | $spl18),
  inference(subsumption_resolution,[],[f6502,f289])).
fof(f6502,plain,(
  ( ! [X39,X41,X38,X42,X40] : (~p(s(bool,'T_0')) | ~p(s(bool,'const.bool.IN_2'(s('type.ind_type.recspace'(X38),'const.ind_type.CONSTR_3'(s('type.num.num',X39),s(X38,X40),s(fun('type.num.num','type.ind_type.recspace'(X38)),X41))),s(fun('type.ind_type.recspace'(X38),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.ind_type.recspace'(X38)),sK14(happ(s(fun(fun('type.num.num','type.ind_type.recspace'(X38)),'type.ind_type.recspace'(X38)),happ(s(fun(X38,fun(fun('type.num.num','type.ind_type.recspace'(X38)),'type.ind_type.recspace'(X38))),'const.ind_type.CONSTR_1'(s('type.num.num',X39))),s(X38,X40))),s(fun('type.num.num','type.ind_type.recspace'(X38)),X41)),X42,'type.ind_type.recspace'(X38))))))))) ) | $spl18),
  inference(backward_demodulation,[],[f4249,f6102])).
fof(f6735,plain,(
  $false | $spl18),
  inference(global_subsumption,[],[f288,f287,f289,f487,f296,f297,f299,f304,f303,f308,f307,f358,f359,f360,f368,f383,f382,f381,f390,f391,f392,f393,f402,f401,f400,f399,f398,f397,f413,f412,f411,f410,f409,f408,f417,f414,f427,f430,f437,f473,f492,f532,f535,f575,f639,f675,f696,f727,f728,f730,f732,f753,f756,f769,f785,f787,f1492,f1493,f1495,f803,f805,f791,f804,f790,f802,f808,f789,f389,f388,f387,f372,f371,f367,f366,f365,f806,f807,f395,f407,f406,f405,f404,f403,f396,f394,f380,f379,f378,f377,f376,f375,f1320,f754,f1327,f370,f369,f1708,f1709,f1713,f1723,f1721,f1724,f1747,f1781,f1790,f1792,f1794,f1795,f1769,f1770,f1775,f1778,f1801,f1804,f1816,f1903,f1905,f1918,f1920,f1921,f1931,f1969,f1970,f1972,f2108,f2109,f2130,f2060,f2061,f2134,f2144,f2079,f2080,f2148,f2161,f2300,f2283,f2284,f2305,f2313,f2334,f2331,f2335,f2333,f2380,f2365,f2366,f2381,f2383,f2384,f2385,f2386,f2387,f2388,f2390,f2391,f2393,f2561,f2544,f2562,f2565,f2566,f2567,f2568,f2569,f2570,f2572,f2573,f2576,f2920,f3634,f3635,f3637,f3853,f3854,f3896,f3897,f3899,f4096,f4138,f4104,f4156,f4172,f2543,f4324,f4345,f4326,f4349,f4362,f4476,f4501,f4478,f4507,f4521,f4596,f4595,f4597,f4598,f4599,f4773,f4601,f4634,f4635,f4636,f4637,f4640,f4641,f4642,f4643,f4644,f4645,f4646,f4650,f4651,f4652,f4653,f4654,f4656,f4657,f4658,f4659,f4660,f4661,f4666,f4667,f4668,f4669,f4670,f4671,f4672,f4676,f4679,f4680,f4684,f4685,f4686,f4703,f4704,f4705,f4706,f4709,f4710,f4711,f4712,f4713,f4714,f4715,f4716,f4717,f4718,f4719,f4723,f4724,f4725,f4726,f4727,f4729,f4730,f4731,f4732,f4733,f4734,f4739,f4740,f4741,f4742,f4743,f4744,f4745,f4749,f4752,f4753,f4757,f4758,f4759,f4855,f4856,f4831,f4832,f4858,f4853,f4854,f4885,f4886,f4878,f4879,f4880,f4887,f4889,f4884,f5023,f5024,f5026,f5027,f5028,f5029,f5030,f5031,f5033,f5034,f5035,f5036,f5039,f5090,f5135,f5092,f5149,f5106,f5107,f5108,f5162,f5110,f5169,f5124,f5125,f5131,f5132,f5182,f5244,f5278,f5285,f5259,f5260,f5261,f5262,f5264,f5265,f5266,f5267,f5277,f5354,f5388,f5395,f5369,f5370,f5378,f5379,f5381,f5382,f5383,f5384,f5387,f5509,f5510,f5511,f5624,f5625,f5626,f5780,f5782,f5766,f5767,f5784,f5777,f5778,f6101,f6102,f6104,f6280,f6281,f6240,f6241,f6242,f6282,f6245,f6284,f6291,f6292,f6293,f6294,f6295,f6296,f6297,f6298,f6299,f6300,f6301,f6302,f6303,f6266,f6267,f6309,f4249,f6592,f6614,f6616,f6621,f6638,f6640,f6642,f6644,f6650,f6652,f6654,f6656,f6658,f6678,f6692,f6700,f6708,f6710,f6712,f6726,f6734])).
fof(f6733,plain,(
  $false | $spl18),
  inference(subsumption_resolution,[],[f6732,f289])).
fof(f6732,plain,(
  ~p(s(bool,'T_0')) | $spl18),
  inference(forward_demodulation,[],[f6731,f4249])).
fof(f6731,plain,(
  ( ! [X127,X125,X123,X126,X124] : (~p(s(bool,'const.bool.IN_2'(s('type.list.list'(X123),'const.list.CONS_2'(s(X123,X124),s('type.list.list'(X123),'const.list.APPEND_2'(s('type.list.list'(X123),X125),s('type.list.list'(X123),X126))))),s(fun('type.list.list'(X123),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'(X123)),sK11('const.list.APPEND_2'(s('type.list.list'(X123),'const.list.CONS_2'(s(X123,X124),s('type.list.list'(X123),X125))),s('type.list.list'(X123),X126)),X127,'type.list.list'(X123))))))))) ) | $spl18),
  inference(subsumption_resolution,[],[f6500,f289])).
fof(f6500,plain,(
  ( ! [X127,X125,X123,X126,X124] : (~p(s(bool,'T_0')) | ~p(s(bool,'const.bool.IN_2'(s('type.list.list'(X123),'const.list.CONS_2'(s(X123,X124),s('type.list.list'(X123),'const.list.APPEND_2'(s('type.list.list'(X123),X125),s('type.list.list'(X123),X126))))),s(fun('type.list.list'(X123),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'(X123)),sK11('const.list.APPEND_2'(s('type.list.list'(X123),'const.list.CONS_2'(s(X123,X124),s('type.list.list'(X123),X125))),s('type.list.list'(X123),X126)),X127,'type.list.list'(X123))))))))) ) | $spl18),
  inference(backward_demodulation,[],[f4249,f3896])).
fof(f6730,plain,(
  $false | $spl18),
  inference(subsumption_resolution,[],[f6729,f289])).
fof(f6729,plain,(
  ~p(s(bool,'T_0')) | $spl18),
  inference(forward_demodulation,[],[f6728,f4249])).
fof(f6728,plain,(
  ( ! [X132,X130,X128,X131,X129] : (~p(s(bool,'const.bool.IN_2'(s('type.list.list'(X128),'const.list.CONS_2'(s(X128,X129),s('type.list.list'(X128),'const.list.APPEND_2'(s('type.list.list'(X128),X130),s('type.list.list'(X128),X131))))),s(fun('type.list.list'(X128),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'(X128)),sK14('const.list.APPEND_2'(s('type.list.list'(X128),'const.list.CONS_2'(s(X128,X129),s('type.list.list'(X128),X130))),s('type.list.list'(X128),X131)),X132,'type.list.list'(X128))))))))) ) | $spl18),
  inference(subsumption_resolution,[],[f6499,f289])).
fof(f6499,plain,(
  ( ! [X132,X130,X128,X131,X129] : (~p(s(bool,'T_0')) | ~p(s(bool,'const.bool.IN_2'(s('type.list.list'(X128),'const.list.CONS_2'(s(X128,X129),s('type.list.list'(X128),'const.list.APPEND_2'(s('type.list.list'(X128),X130),s('type.list.list'(X128),X131))))),s(fun('type.list.list'(X128),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'(X128)),sK14('const.list.APPEND_2'(s('type.list.list'(X128),'const.list.CONS_2'(s(X128,X129),s('type.list.list'(X128),X130))),s('type.list.list'(X128),X131)),X132,'type.list.list'(X128))))))))) ) | $spl18),
  inference(backward_demodulation,[],[f4249,f3897])).
fof(f6727,plain,(
  $false | $spl18),
  inference(global_subsumption,[],[f288,f287,f289,f487,f296,f297,f299,f304,f303,f308,f307,f358,f359,f360,f368,f383,f382,f381,f390,f391,f392,f393,f402,f401,f400,f399,f398,f397,f413,f412,f411,f410,f409,f408,f417,f414,f427,f430,f437,f473,f492,f532,f535,f575,f639,f675,f696,f727,f728,f730,f732,f753,f756,f769,f785,f787,f1492,f1493,f1495,f803,f805,f791,f804,f790,f802,f808,f789,f389,f388,f387,f372,f371,f367,f366,f365,f806,f807,f395,f407,f406,f405,f404,f403,f396,f394,f380,f379,f378,f377,f376,f375,f1320,f754,f1327,f370,f369,f1708,f1709,f1713,f1723,f1721,f1724,f1747,f1781,f1790,f1792,f1794,f1795,f1769,f1770,f1775,f1778,f1801,f1804,f1816,f1903,f1905,f1918,f1920,f1921,f1931,f1969,f1970,f1972,f2108,f2109,f2130,f2060,f2061,f2134,f2144,f2079,f2080,f2148,f2161,f2300,f2283,f2284,f2305,f2313,f2334,f2331,f2335,f2333,f2380,f2365,f2366,f2381,f2383,f2384,f2385,f2386,f2387,f2388,f2390,f2391,f2393,f2561,f2544,f2562,f2565,f2566,f2567,f2568,f2569,f2570,f2572,f2573,f2576,f2920,f3634,f3635,f3637,f3853,f3854,f3896,f3897,f3899,f4096,f4138,f4104,f4156,f4172,f2543,f4324,f4345,f4326,f4349,f4362,f4476,f4501,f4478,f4507,f4521,f4596,f4595,f4597,f4598,f4599,f4773,f4601,f4634,f4635,f4636,f4637,f4640,f4641,f4642,f4643,f4644,f4645,f4646,f4650,f4651,f4652,f4653,f4654,f4656,f4657,f4658,f4659,f4660,f4661,f4666,f4667,f4668,f4669,f4670,f4671,f4672,f4676,f4679,f4680,f4684,f4685,f4686,f4703,f4704,f4705,f4706,f4709,f4710,f4711,f4712,f4713,f4714,f4715,f4716,f4717,f4718,f4719,f4723,f4724,f4725,f4726,f4727,f4729,f4730,f4731,f4732,f4733,f4734,f4739,f4740,f4741,f4742,f4743,f4744,f4745,f4749,f4752,f4753,f4757,f4758,f4759,f4855,f4856,f4831,f4832,f4858,f4853,f4854,f4885,f4886,f4878,f4879,f4880,f4887,f4889,f4884,f5023,f5024,f5026,f5027,f5028,f5029,f5030,f5031,f5033,f5034,f5035,f5036,f5039,f5090,f5135,f5092,f5149,f5106,f5107,f5108,f5162,f5110,f5169,f5124,f5125,f5131,f5132,f5182,f5244,f5278,f5285,f5259,f5260,f5261,f5262,f5264,f5265,f5266,f5267,f5277,f5354,f5388,f5395,f5369,f5370,f5378,f5379,f5381,f5382,f5383,f5384,f5387,f5509,f5510,f5511,f5624,f5625,f5626,f5780,f5782,f5766,f5767,f5784,f5777,f5778,f6101,f6102,f6104,f6280,f6281,f6240,f6241,f6242,f6282,f6245,f6284,f6291,f6292,f6293,f6294,f6295,f6296,f6297,f6298,f6299,f6300,f6301,f6302,f6303,f6266,f6267,f6309,f4249,f6592,f6614,f6616,f6621,f6638,f6640,f6642,f6644,f6650,f6652,f6654,f6656,f6658,f6678,f6692,f6700,f6708,f6710,f6712,f6726])).
fof(f6725,plain,(
  $false | $spl18),
  inference(subsumption_resolution,[],[f6724,f289])).
fof(f6724,plain,(
  ~p(s(bool,'T_0')) | $spl18),
  inference(forward_demodulation,[],[f6723,f4249])).
fof(f6723,plain,(
  ( ! [X21,X22,X20] : (~p(s(bool,'const.bool.IN_2'(s('type.list.list'(X20),X21),s(fun('type.list.list'(X20),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'(X20)),sK11('const.list.APPEND_2'(s('type.list.list'(X20),X21),s('type.list.list'(X20),'const.list.NIL_0')),X22,'type.list.list'(X20))))))))) ) | $spl18),
  inference(subsumption_resolution,[],[f6497,f289])).
fof(f6497,plain,(
  ( ! [X21,X22,X20] : (~p(s(bool,'T_0')) | ~p(s(bool,'const.bool.IN_2'(s('type.list.list'(X20),X21),s(fun('type.list.list'(X20),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'(X20)),sK11('const.list.APPEND_2'(s('type.list.list'(X20),X21),s('type.list.list'(X20),'const.list.NIL_0')),X22,'type.list.list'(X20))))))))) ) | $spl18),
  inference(backward_demodulation,[],[f4249,f2387])).
fof(f6722,plain,(
  $false | $spl18),
  inference(subsumption_resolution,[],[f6721,f289])).
fof(f6721,plain,(
  ~p(s(bool,'T_0')) | $spl18),
  inference(forward_demodulation,[],[f6720,f4249])).
fof(f6720,plain,(
  ( ! [X24,X23,X25] : (~p(s(bool,'const.bool.IN_2'(s('type.list.list'(X23),X24),s(fun('type.list.list'(X23),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'(X23)),sK11('const.list.APPEND_2'(s('type.list.list'(X23),'const.list.NIL_0'),s('type.list.list'(X23),X24)),X25,'type.list.list'(X23))))))))) ) | $spl18),
  inference(subsumption_resolution,[],[f6496,f289])).
fof(f6496,plain,(
  ( ! [X24,X23,X25] : (~p(s(bool,'T_0')) | ~p(s(bool,'const.bool.IN_2'(s('type.list.list'(X23),X24),s(fun('type.list.list'(X23),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'(X23)),sK11('const.list.APPEND_2'(s('type.list.list'(X23),'const.list.NIL_0'),s('type.list.list'(X23),X24)),X25,'type.list.list'(X23))))))))) ) | $spl18),
  inference(backward_demodulation,[],[f4249,f2388])).
fof(f6719,plain,(
  $false | $spl18),
  inference(subsumption_resolution,[],[f6718,f289])).
fof(f6718,plain,(
  ~p(s(bool,'T_0')) | $spl18),
  inference(forward_demodulation,[],[f6717,f4249])).
fof(f6717,plain,(
  ( ! [X26,X24,X25] : (~p(s(bool,'const.bool.IN_2'(s('type.list.list'(X24),X25),s(fun('type.list.list'(X24),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'(X24)),sK14('const.list.APPEND_2'(s('type.list.list'(X24),X25),s('type.list.list'(X24),'const.list.NIL_0')),X26,'type.list.list'(X24))))))))) ) | $spl18),
  inference(subsumption_resolution,[],[f6495,f289])).
fof(f6495,plain,(
  ( ! [X26,X24,X25] : (~p(s(bool,'T_0')) | ~p(s(bool,'const.bool.IN_2'(s('type.list.list'(X24),X25),s(fun('type.list.list'(X24),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'(X24)),sK14('const.list.APPEND_2'(s('type.list.list'(X24),X25),s('type.list.list'(X24),'const.list.NIL_0')),X26,'type.list.list'(X24))))))))) ) | $spl18),
  inference(backward_demodulation,[],[f4249,f2569])).
fof(f6716,plain,(
  $false | $spl18),
  inference(subsumption_resolution,[],[f6715,f289])).
fof(f6715,plain,(
  ~p(s(bool,'T_0')) | $spl18),
  inference(forward_demodulation,[],[f6714,f4249])).
fof(f6714,plain,(
  ( ! [X28,X29,X27] : (~p(s(bool,'const.bool.IN_2'(s('type.list.list'(X27),X28),s(fun('type.list.list'(X27),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'(X27)),sK14('const.list.APPEND_2'(s('type.list.list'(X27),'const.list.NIL_0'),s('type.list.list'(X27),X28)),X29,'type.list.list'(X27))))))))) ) | $spl18),
  inference(subsumption_resolution,[],[f6494,f289])).
fof(f6494,plain,(
  ( ! [X28,X29,X27] : (~p(s(bool,'T_0')) | ~p(s(bool,'const.bool.IN_2'(s('type.list.list'(X27),X28),s(fun('type.list.list'(X27),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'(X27)),sK14('const.list.APPEND_2'(s('type.list.list'(X27),'const.list.NIL_0'),s('type.list.list'(X27),X28)),X29,'type.list.list'(X27))))))))) ) | $spl18),
  inference(backward_demodulation,[],[f4249,f2570])).
fof(f6713,plain,(
  $false | $spl18),
  inference(global_subsumption,[],[f288,f287,f289,f487,f296,f297,f299,f304,f303,f308,f307,f358,f359,f360,f368,f383,f382,f381,f390,f391,f392,f393,f402,f401,f400,f399,f398,f397,f413,f412,f411,f410,f409,f408,f417,f414,f427,f430,f437,f473,f492,f532,f535,f575,f639,f675,f696,f727,f728,f730,f732,f753,f756,f769,f785,f787,f1492,f1493,f1495,f803,f805,f791,f804,f790,f802,f808,f789,f389,f388,f387,f372,f371,f367,f366,f365,f806,f807,f395,f407,f406,f405,f404,f403,f396,f394,f380,f379,f378,f377,f376,f375,f1320,f754,f1327,f370,f369,f1708,f1709,f1713,f1723,f1721,f1724,f1747,f1781,f1790,f1792,f1794,f1795,f1769,f1770,f1775,f1778,f1801,f1804,f1816,f1903,f1905,f1918,f1920,f1921,f1931,f1969,f1970,f1972,f2108,f2109,f2130,f2060,f2061,f2134,f2144,f2079,f2080,f2148,f2161,f2300,f2283,f2284,f2305,f2313,f2334,f2331,f2335,f2333,f2380,f2365,f2366,f2381,f2383,f2384,f2385,f2386,f2387,f2388,f2390,f2391,f2393,f2561,f2544,f2562,f2565,f2566,f2567,f2568,f2569,f2570,f2572,f2573,f2576,f2920,f3634,f3635,f3637,f3853,f3854,f3896,f3897,f3899,f4096,f4138,f4104,f4156,f4172,f2543,f4324,f4345,f4326,f4349,f4362,f4476,f4501,f4478,f4507,f4521,f4596,f4595,f4597,f4598,f4599,f4773,f4601,f4634,f4635,f4636,f4637,f4640,f4641,f4642,f4643,f4644,f4645,f4646,f4650,f4651,f4652,f4653,f4654,f4656,f4657,f4658,f4659,f4660,f4661,f4666,f4667,f4668,f4669,f4670,f4671,f4672,f4676,f4679,f4680,f4684,f4685,f4686,f4703,f4704,f4705,f4706,f4709,f4710,f4711,f4712,f4713,f4714,f4715,f4716,f4717,f4718,f4719,f4723,f4724,f4725,f4726,f4727,f4729,f4730,f4731,f4732,f4733,f4734,f4739,f4740,f4741,f4742,f4743,f4744,f4745,f4749,f4752,f4753,f4757,f4758,f4759,f4855,f4856,f4831,f4832,f4858,f4853,f4854,f4885,f4886,f4878,f4879,f4880,f4887,f4889,f4884,f5023,f5024,f5026,f5027,f5028,f5029,f5030,f5031,f5033,f5034,f5035,f5036,f5039,f5090,f5135,f5092,f5149,f5106,f5107,f5108,f5162,f5110,f5169,f5124,f5125,f5131,f5132,f5182,f5244,f5278,f5285,f5259,f5260,f5261,f5262,f5264,f5265,f5266,f5267,f5277,f5354,f5388,f5395,f5369,f5370,f5378,f5379,f5381,f5382,f5383,f5384,f5387,f5509,f5510,f5511,f5624,f5625,f5626,f5780,f5782,f5766,f5767,f5784,f5777,f5778,f6101,f6102,f6104,f6280,f6281,f6240,f6241,f6242,f6282,f6245,f6284,f6291,f6292,f6293,f6294,f6295,f6296,f6297,f6298,f6299,f6300,f6301,f6302,f6303,f6266,f6267,f6309,f4249,f6592,f6614,f6616,f6621,f6638,f6640,f6642,f6644,f6650,f6652,f6654,f6656,f6658,f6678,f6692,f6700,f6708,f6710,f6712])).
fof(f6711,plain,(
  $false | $spl18),
  inference(global_subsumption,[],[f288,f287,f289,f487,f296,f297,f299,f304,f303,f308,f307,f358,f359,f360,f368,f383,f382,f381,f390,f391,f392,f393,f402,f401,f400,f399,f398,f397,f413,f412,f411,f410,f409,f408,f417,f414,f427,f430,f437,f473,f492,f532,f535,f575,f639,f675,f696,f727,f728,f730,f732,f753,f756,f769,f785,f787,f1492,f1493,f1495,f803,f805,f791,f804,f790,f802,f808,f789,f389,f388,f387,f372,f371,f367,f366,f365,f806,f807,f395,f407,f406,f405,f404,f403,f396,f394,f380,f379,f378,f377,f376,f375,f1320,f754,f1327,f370,f369,f1708,f1709,f1713,f1723,f1721,f1724,f1747,f1781,f1790,f1792,f1794,f1795,f1769,f1770,f1775,f1778,f1801,f1804,f1816,f1903,f1905,f1918,f1920,f1921,f1931,f1969,f1970,f1972,f2108,f2109,f2130,f2060,f2061,f2134,f2144,f2079,f2080,f2148,f2161,f2300,f2283,f2284,f2305,f2313,f2334,f2331,f2335,f2333,f2380,f2365,f2366,f2381,f2383,f2384,f2385,f2386,f2387,f2388,f2390,f2391,f2393,f2561,f2544,f2562,f2565,f2566,f2567,f2568,f2569,f2570,f2572,f2573,f2576,f2920,f3634,f3635,f3637,f3853,f3854,f3896,f3897,f3899,f4096,f4138,f4104,f4156,f4172,f2543,f4324,f4345,f4326,f4349,f4362,f4476,f4501,f4478,f4507,f4521,f4596,f4595,f4597,f4598,f4599,f4773,f4601,f4634,f4635,f4636,f4637,f4640,f4641,f4642,f4643,f4644,f4645,f4646,f4650,f4651,f4652,f4653,f4654,f4656,f4657,f4658,f4659,f4660,f4661,f4666,f4667,f4668,f4669,f4670,f4671,f4672,f4676,f4679,f4680,f4684,f4685,f4686,f4703,f4704,f4705,f4706,f4709,f4710,f4711,f4712,f4713,f4714,f4715,f4716,f4717,f4718,f4719,f4723,f4724,f4725,f4726,f4727,f4729,f4730,f4731,f4732,f4733,f4734,f4739,f4740,f4741,f4742,f4743,f4744,f4745,f4749,f4752,f4753,f4757,f4758,f4759,f4855,f4856,f4831,f4832,f4858,f4853,f4854,f4885,f4886,f4878,f4879,f4880,f4887,f4889,f4884,f5023,f5024,f5026,f5027,f5028,f5029,f5030,f5031,f5033,f5034,f5035,f5036,f5039,f5090,f5135,f5092,f5149,f5106,f5107,f5108,f5162,f5110,f5169,f5124,f5125,f5131,f5132,f5182,f5244,f5278,f5285,f5259,f5260,f5261,f5262,f5264,f5265,f5266,f5267,f5277,f5354,f5388,f5395,f5369,f5370,f5378,f5379,f5381,f5382,f5383,f5384,f5387,f5509,f5510,f5511,f5624,f5625,f5626,f5780,f5782,f5766,f5767,f5784,f5777,f5778,f6101,f6102,f6104,f6280,f6281,f6240,f6241,f6242,f6282,f6245,f6284,f6291,f6292,f6293,f6294,f6295,f6296,f6297,f6298,f6299,f6300,f6301,f6302,f6303,f6266,f6267,f6309,f4249,f6592,f6614,f6616,f6621,f6638,f6640,f6642,f6644,f6650,f6652,f6654,f6656,f6658,f6678,f6692,f6700,f6708,f6710])).
fof(f6709,plain,(
  $false | $spl18),
  inference(global_subsumption,[],[f288,f287,f289,f487,f296,f297,f299,f304,f303,f308,f307,f358,f359,f360,f368,f383,f382,f381,f390,f391,f392,f393,f402,f401,f400,f399,f398,f397,f413,f412,f411,f410,f409,f408,f417,f414,f427,f430,f437,f473,f492,f532,f535,f575,f639,f675,f696,f727,f728,f730,f732,f753,f756,f769,f785,f787,f1492,f1493,f1495,f803,f805,f791,f804,f790,f802,f808,f789,f389,f388,f387,f372,f371,f367,f366,f365,f806,f807,f395,f407,f406,f405,f404,f403,f396,f394,f380,f379,f378,f377,f376,f375,f1320,f754,f1327,f370,f369,f1708,f1709,f1713,f1723,f1721,f1724,f1747,f1781,f1790,f1792,f1794,f1795,f1769,f1770,f1775,f1778,f1801,f1804,f1816,f1903,f1905,f1918,f1920,f1921,f1931,f1969,f1970,f1972,f2108,f2109,f2130,f2060,f2061,f2134,f2144,f2079,f2080,f2148,f2161,f2300,f2283,f2284,f2305,f2313,f2334,f2331,f2335,f2333,f2380,f2365,f2366,f2381,f2383,f2384,f2385,f2386,f2387,f2388,f2390,f2391,f2393,f2561,f2544,f2562,f2565,f2566,f2567,f2568,f2569,f2570,f2572,f2573,f2576,f2920,f3634,f3635,f3637,f3853,f3854,f3896,f3897,f3899,f4096,f4138,f4104,f4156,f4172,f2543,f4324,f4345,f4326,f4349,f4362,f4476,f4501,f4478,f4507,f4521,f4596,f4595,f4597,f4598,f4599,f4773,f4601,f4634,f4635,f4636,f4637,f4640,f4641,f4642,f4643,f4644,f4645,f4646,f4650,f4651,f4652,f4653,f4654,f4656,f4657,f4658,f4659,f4660,f4661,f4666,f4667,f4668,f4669,f4670,f4671,f4672,f4676,f4679,f4680,f4684,f4685,f4686,f4703,f4704,f4705,f4706,f4709,f4710,f4711,f4712,f4713,f4714,f4715,f4716,f4717,f4718,f4719,f4723,f4724,f4725,f4726,f4727,f4729,f4730,f4731,f4732,f4733,f4734,f4739,f4740,f4741,f4742,f4743,f4744,f4745,f4749,f4752,f4753,f4757,f4758,f4759,f4855,f4856,f4831,f4832,f4858,f4853,f4854,f4885,f4886,f4878,f4879,f4880,f4887,f4889,f4884,f5023,f5024,f5026,f5027,f5028,f5029,f5030,f5031,f5033,f5034,f5035,f5036,f5039,f5090,f5135,f5092,f5149,f5106,f5107,f5108,f5162,f5110,f5169,f5124,f5125,f5131,f5132,f5182,f5244,f5278,f5285,f5259,f5260,f5261,f5262,f5264,f5265,f5266,f5267,f5277,f5354,f5388,f5395,f5369,f5370,f5378,f5379,f5381,f5382,f5383,f5384,f5387,f5509,f5510,f5511,f5624,f5625,f5626,f5780,f5782,f5766,f5767,f5784,f5777,f5778,f6101,f6102,f6104,f6280,f6281,f6240,f6241,f6242,f6282,f6245,f6284,f6291,f6292,f6293,f6294,f6295,f6296,f6297,f6298,f6299,f6300,f6301,f6302,f6303,f6266,f6267,f6309,f4249,f6592,f6614,f6616,f6621,f6638,f6640,f6642,f6644,f6650,f6652,f6654,f6656,f6658,f6678,f6692,f6700,f6708])).
fof(f6707,plain,(
  $false | $spl18),
  inference(subsumption_resolution,[],[f6706,f289])).
fof(f6706,plain,(
  ~p(s(bool,'T_0')) | $spl18),
  inference(forward_demodulation,[],[f6705,f4249])).
fof(f6705,plain,(
  ( ! [X17,X18] : (~p(s(bool,'const.bool.IN_2'(s(bool,X17),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),sK14('const.marker.Cong_1'(s(bool,X17)),X18,bool)))))))) ) | $spl18),
  inference(subsumption_resolution,[],[f6490,f289])).
fof(f6490,plain,(
  ( ! [X17,X18] : (~p(s(bool,'T_0')) | ~p(s(bool,'const.bool.IN_2'(s(bool,X17),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),sK14('const.marker.Cong_1'(s(bool,X17)),X18,bool)))))))) ) | $spl18),
  inference(backward_demodulation,[],[f4249,f2566])).
fof(f6704,plain,(
  $false | $spl18),
  inference(subsumption_resolution,[],[f6703,f289])).
fof(f6703,plain,(
  ~p(s(bool,'T_0')) | $spl18),
  inference(forward_demodulation,[],[f6702,f4249])).
fof(f6702,plain,(
  ( ! [X14,X13] : (~p(s(bool,'const.bool.IN_2'(s(bool,X13),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),sK11('const.marker.Cong_1'(s(bool,X13)),X14,bool)))))))) ) | $spl18),
  inference(subsumption_resolution,[],[f6489,f289])).
fof(f6489,plain,(
  ( ! [X14,X13] : (~p(s(bool,'T_0')) | ~p(s(bool,'const.bool.IN_2'(s(bool,X13),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),sK11('const.marker.Cong_1'(s(bool,X13)),X14,bool)))))))) ) | $spl18),
  inference(backward_demodulation,[],[f4249,f2384])).
fof(f6701,plain,(
  $false | $spl18),
  inference(global_subsumption,[],[f288,f287,f289,f487,f296,f297,f299,f304,f303,f308,f307,f358,f359,f360,f368,f383,f382,f381,f390,f391,f392,f393,f402,f401,f400,f399,f398,f397,f413,f412,f411,f410,f409,f408,f417,f414,f427,f430,f437,f473,f492,f532,f535,f575,f639,f675,f696,f727,f728,f730,f732,f753,f756,f769,f785,f787,f1492,f1493,f1495,f803,f805,f791,f804,f790,f802,f808,f789,f389,f388,f387,f372,f371,f367,f366,f365,f806,f807,f395,f407,f406,f405,f404,f403,f396,f394,f380,f379,f378,f377,f376,f375,f1320,f754,f1327,f370,f369,f1708,f1709,f1713,f1723,f1721,f1724,f1747,f1781,f1790,f1792,f1794,f1795,f1769,f1770,f1775,f1778,f1801,f1804,f1816,f1903,f1905,f1918,f1920,f1921,f1931,f1969,f1970,f1972,f2108,f2109,f2130,f2060,f2061,f2134,f2144,f2079,f2080,f2148,f2161,f2300,f2283,f2284,f2305,f2313,f2334,f2331,f2335,f2333,f2380,f2365,f2366,f2381,f2383,f2384,f2385,f2386,f2387,f2388,f2390,f2391,f2393,f2561,f2544,f2562,f2565,f2566,f2567,f2568,f2569,f2570,f2572,f2573,f2576,f2920,f3634,f3635,f3637,f3853,f3854,f3896,f3897,f3899,f4096,f4138,f4104,f4156,f4172,f2543,f4324,f4345,f4326,f4349,f4362,f4476,f4501,f4478,f4507,f4521,f4596,f4595,f4597,f4598,f4599,f4773,f4601,f4634,f4635,f4636,f4637,f4640,f4641,f4642,f4643,f4644,f4645,f4646,f4650,f4651,f4652,f4653,f4654,f4656,f4657,f4658,f4659,f4660,f4661,f4666,f4667,f4668,f4669,f4670,f4671,f4672,f4676,f4679,f4680,f4684,f4685,f4686,f4703,f4704,f4705,f4706,f4709,f4710,f4711,f4712,f4713,f4714,f4715,f4716,f4717,f4718,f4719,f4723,f4724,f4725,f4726,f4727,f4729,f4730,f4731,f4732,f4733,f4734,f4739,f4740,f4741,f4742,f4743,f4744,f4745,f4749,f4752,f4753,f4757,f4758,f4759,f4855,f4856,f4831,f4832,f4858,f4853,f4854,f4885,f4886,f4878,f4879,f4880,f4887,f4889,f4884,f5023,f5024,f5026,f5027,f5028,f5029,f5030,f5031,f5033,f5034,f5035,f5036,f5039,f5090,f5135,f5092,f5149,f5106,f5107,f5108,f5162,f5110,f5169,f5124,f5125,f5131,f5132,f5182,f5244,f5278,f5285,f5259,f5260,f5261,f5262,f5264,f5265,f5266,f5267,f5277,f5354,f5388,f5395,f5369,f5370,f5378,f5379,f5381,f5382,f5383,f5384,f5387,f5509,f5510,f5511,f5624,f5625,f5626,f5780,f5782,f5766,f5767,f5784,f5777,f5778,f6101,f6102,f6104,f6280,f6281,f6240,f6241,f6242,f6282,f6245,f6284,f6291,f6292,f6293,f6294,f6295,f6296,f6297,f6298,f6299,f6300,f6301,f6302,f6303,f6266,f6267,f6309,f4249,f6592,f6614,f6616,f6621,f6638,f6640,f6642,f6644,f6650,f6652,f6654,f6656,f6658,f6678,f6692,f6700])).
fof(f6699,plain,(
  $false | $spl18),
  inference(subsumption_resolution,[],[f6698,f289])).
fof(f6698,plain,(
  ~p(s(bool,'T_0')) | $spl18),
  inference(forward_demodulation,[],[f6697,f4249])).
fof(f6697,plain,(
  ( ! [X23,X22] : (~p(s(bool,'const.bool.IN_2'(s(bool,'T_0'),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),sK14('const.bool.BOUNDED_1'(s(bool,X22)),X23,bool)))))))) ) | $spl18),
  inference(subsumption_resolution,[],[f6487,f289])).
fof(f6487,plain,(
  ( ! [X23,X22] : (~p(s(bool,'T_0')) | ~p(s(bool,'const.bool.IN_2'(s(bool,'T_0'),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),sK14('const.bool.BOUNDED_1'(s(bool,X22)),X23,bool)))))))) ) | $spl18),
  inference(backward_demodulation,[],[f4249,f2568])).
fof(f6696,plain,(
  $false | $spl18),
  inference(subsumption_resolution,[],[f6695,f289])).
fof(f6695,plain,(
  ~p(s(bool,'T_0')) | $spl18),
  inference(forward_demodulation,[],[f6694,f4249])).
fof(f6694,plain,(
  ( ! [X19,X18] : (~p(s(bool,'const.bool.IN_2'(s(bool,'T_0'),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),sK11('const.bool.BOUNDED_1'(s(bool,X18)),X19,bool)))))))) ) | $spl18),
  inference(subsumption_resolution,[],[f6486,f289])).
fof(f6486,plain,(
  ( ! [X19,X18] : (~p(s(bool,'T_0')) | ~p(s(bool,'const.bool.IN_2'(s(bool,'T_0'),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),sK11('const.bool.BOUNDED_1'(s(bool,X18)),X19,bool)))))))) ) | $spl18),
  inference(backward_demodulation,[],[f4249,f2386])).
fof(f6693,plain,(
  $false | $spl18),
  inference(global_subsumption,[],[f288,f287,f289,f487,f296,f297,f299,f304,f303,f308,f307,f358,f359,f360,f368,f383,f382,f381,f390,f391,f392,f393,f402,f401,f400,f399,f398,f397,f413,f412,f411,f410,f409,f408,f417,f414,f427,f430,f437,f473,f492,f532,f535,f575,f639,f675,f696,f727,f728,f730,f732,f753,f756,f769,f785,f787,f1492,f1493,f1495,f803,f805,f791,f804,f790,f802,f808,f789,f389,f388,f387,f372,f371,f367,f366,f365,f806,f807,f395,f407,f406,f405,f404,f403,f396,f394,f380,f379,f378,f377,f376,f375,f1320,f754,f1327,f370,f369,f1708,f1709,f1713,f1723,f1721,f1724,f1747,f1781,f1790,f1792,f1794,f1795,f1769,f1770,f1775,f1778,f1801,f1804,f1816,f1903,f1905,f1918,f1920,f1921,f1931,f1969,f1970,f1972,f2108,f2109,f2130,f2060,f2061,f2134,f2144,f2079,f2080,f2148,f2161,f2300,f2283,f2284,f2305,f2313,f2334,f2331,f2335,f2333,f2380,f2365,f2366,f2381,f2383,f2384,f2385,f2386,f2387,f2388,f2390,f2391,f2393,f2561,f2544,f2562,f2565,f2566,f2567,f2568,f2569,f2570,f2572,f2573,f2576,f2920,f3634,f3635,f3637,f3853,f3854,f3896,f3897,f3899,f4096,f4138,f4104,f4156,f4172,f2543,f4324,f4345,f4326,f4349,f4362,f4476,f4501,f4478,f4507,f4521,f4596,f4595,f4597,f4598,f4599,f4773,f4601,f4634,f4635,f4636,f4637,f4640,f4641,f4642,f4643,f4644,f4645,f4646,f4650,f4651,f4652,f4653,f4654,f4656,f4657,f4658,f4659,f4660,f4661,f4666,f4667,f4668,f4669,f4670,f4671,f4672,f4676,f4679,f4680,f4684,f4685,f4686,f4703,f4704,f4705,f4706,f4709,f4710,f4711,f4712,f4713,f4714,f4715,f4716,f4717,f4718,f4719,f4723,f4724,f4725,f4726,f4727,f4729,f4730,f4731,f4732,f4733,f4734,f4739,f4740,f4741,f4742,f4743,f4744,f4745,f4749,f4752,f4753,f4757,f4758,f4759,f4855,f4856,f4831,f4832,f4858,f4853,f4854,f4885,f4886,f4878,f4879,f4880,f4887,f4889,f4884,f5023,f5024,f5026,f5027,f5028,f5029,f5030,f5031,f5033,f5034,f5035,f5036,f5039,f5090,f5135,f5092,f5149,f5106,f5107,f5108,f5162,f5110,f5169,f5124,f5125,f5131,f5132,f5182,f5244,f5278,f5285,f5259,f5260,f5261,f5262,f5264,f5265,f5266,f5267,f5277,f5354,f5388,f5395,f5369,f5370,f5378,f5379,f5381,f5382,f5383,f5384,f5387,f5509,f5510,f5511,f5624,f5625,f5626,f5780,f5782,f5766,f5767,f5784,f5777,f5778,f6101,f6102,f6104,f6280,f6281,f6240,f6241,f6242,f6282,f6245,f6284,f6291,f6292,f6293,f6294,f6295,f6296,f6297,f6298,f6299,f6300,f6301,f6302,f6303,f6266,f6267,f6309,f4249,f6592,f6614,f6616,f6621,f6638,f6640,f6642,f6644,f6650,f6652,f6654,f6656,f6658,f6678,f6692])).
fof(f6691,plain,(
  $false | $spl18),
  inference(subsumption_resolution,[],[f6690,f289])).
fof(f6690,plain,(
  ~p(s(bool,'T_0')) | $spl18),
  inference(forward_demodulation,[],[f6689,f4249])).
fof(f6689,plain,(
  ( ! [X30,X28,X33,X31,X29,X34,X32] : (~p(s(bool,'const.bool.IN_2'(s(X28,happ(s(fun(X30,X28),X31),s(X30,happ(s(fun(X29,X30),X32),s(X29,X33))))),s(fun(X28,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X28),sK14(happ(s(fun(X29,X28),'_dst_x0x1_2'(s(fun(X30,X28),X31),s(fun(X29,X30),X32))),s(X29,X33)),X34,X28)))))))) ) | $spl18),
  inference(subsumption_resolution,[],[f6479,f289])).
fof(f6479,plain,(
  ( ! [X30,X28,X33,X31,X29,X34,X32] : (~p(s(bool,'T_0')) | ~p(s(bool,'const.bool.IN_2'(s(X28,happ(s(fun(X30,X28),X31),s(X30,happ(s(fun(X29,X30),X32),s(X29,X33))))),s(fun(X28,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X28),sK14(happ(s(fun(X29,X28),'_dst_x0x1_2'(s(fun(X30,X28),X31),s(fun(X29,X30),X32))),s(X29,X33)),X34,X28)))))))) ) | $spl18),
  inference(backward_demodulation,[],[f4249,f4704])).
fof(f6688,plain,(
  $false | $spl18),
  inference(subsumption_resolution,[],[f6687,f289])).
fof(f6687,plain,(
  ~p(s(bool,'T_0')) | $spl18),
  inference(forward_demodulation,[],[f6686,f4249])).
fof(f6686,plain,(
  ( ! [X26,X24,X23,X21,X27,X25,X22] : (~p(s(bool,'const.bool.IN_2'(s(X21,happ(s(fun(X23,X21),X24),s(X23,happ(s(fun(X22,X23),X25),s(X22,X26))))),s(fun(X21,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X21),sK11(happ(s(fun(X22,X21),'_dst_x0x1_2'(s(fun(X23,X21),X24),s(fun(X22,X23),X25))),s(X22,X26)),X27,X21)))))))) ) | $spl18),
  inference(subsumption_resolution,[],[f6478,f289])).
fof(f6478,plain,(
  ( ! [X26,X24,X23,X21,X27,X25,X22] : (~p(s(bool,'T_0')) | ~p(s(bool,'const.bool.IN_2'(s(X21,happ(s(fun(X23,X21),X24),s(X23,happ(s(fun(X22,X23),X25),s(X22,X26))))),s(fun(X21,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X21),sK11(happ(s(fun(X22,X21),'_dst_x0x1_2'(s(fun(X23,X21),X24),s(fun(X22,X23),X25))),s(X22,X26)),X27,X21)))))))) ) | $spl18),
  inference(backward_demodulation,[],[f4249,f4703])).
fof(f6679,plain,(
  $false | $spl18),
  inference(global_subsumption,[],[f288,f287,f289,f487,f296,f297,f299,f304,f303,f308,f307,f358,f359,f360,f368,f383,f382,f381,f390,f391,f392,f393,f402,f401,f400,f399,f398,f397,f413,f412,f411,f410,f409,f408,f417,f414,f427,f430,f437,f473,f492,f532,f535,f575,f639,f675,f696,f727,f728,f730,f732,f753,f756,f769,f785,f787,f1492,f1493,f1495,f803,f805,f791,f804,f790,f802,f808,f789,f389,f388,f387,f372,f371,f367,f366,f365,f806,f807,f395,f407,f406,f405,f404,f403,f396,f394,f380,f379,f378,f377,f376,f375,f1320,f754,f1327,f370,f369,f1708,f1709,f1713,f1723,f1721,f1724,f1747,f1781,f1790,f1792,f1794,f1795,f1769,f1770,f1775,f1778,f1801,f1804,f1816,f1903,f1905,f1918,f1920,f1921,f1931,f1969,f1970,f1972,f2108,f2109,f2130,f2060,f2061,f2134,f2144,f2079,f2080,f2148,f2161,f2300,f2283,f2284,f2305,f2313,f2334,f2331,f2335,f2333,f2380,f2365,f2366,f2381,f2383,f2384,f2385,f2386,f2387,f2388,f2390,f2391,f2393,f2561,f2544,f2562,f2565,f2566,f2567,f2568,f2569,f2570,f2572,f2573,f2576,f2920,f3634,f3635,f3637,f3853,f3854,f3896,f3897,f3899,f4096,f4138,f4104,f4156,f4172,f2543,f4324,f4345,f4326,f4349,f4362,f4476,f4501,f4478,f4507,f4521,f4596,f4595,f4597,f4598,f4599,f4773,f4601,f4634,f4635,f4636,f4637,f4640,f4641,f4642,f4643,f4644,f4645,f4646,f4650,f4651,f4652,f4653,f4654,f4656,f4657,f4658,f4659,f4660,f4661,f4666,f4667,f4668,f4669,f4670,f4671,f4672,f4676,f4679,f4680,f4684,f4685,f4686,f4703,f4704,f4705,f4706,f4709,f4710,f4711,f4712,f4713,f4714,f4715,f4716,f4717,f4718,f4719,f4723,f4724,f4725,f4726,f4727,f4729,f4730,f4731,f4732,f4733,f4734,f4739,f4740,f4741,f4742,f4743,f4744,f4745,f4749,f4752,f4753,f4757,f4758,f4759,f4855,f4856,f4831,f4832,f4858,f4853,f4854,f4885,f4886,f4878,f4879,f4880,f4887,f4889,f4884,f5023,f5024,f5026,f5027,f5028,f5029,f5030,f5031,f5033,f5034,f5035,f5036,f5039,f5090,f5135,f5092,f5149,f5106,f5107,f5108,f5162,f5110,f5169,f5124,f5125,f5131,f5132,f5182,f5244,f5278,f5285,f5259,f5260,f5261,f5262,f5264,f5265,f5266,f5267,f5277,f5354,f5388,f5395,f5369,f5370,f5378,f5379,f5381,f5382,f5383,f5384,f5387,f5509,f5510,f5511,f5624,f5625,f5626,f5780,f5782,f5766,f5767,f5784,f5777,f5778,f6101,f6102,f6104,f6280,f6281,f6240,f6241,f6242,f6282,f6245,f6284,f6291,f6292,f6293,f6294,f6295,f6296,f6297,f6298,f6299,f6300,f6301,f6302,f6303,f6266,f6267,f6309,f4249,f6592,f6614,f6616,f6621,f6638,f6640,f6642,f6644,f6650,f6652,f6654,f6656,f6658,f6678])).
fof(f6671,plain,(
  $false | $spl18),
  inference(subsumption_resolution,[],[f6670,f289])).
fof(f6670,plain,(
  ~p(s(bool,'T_0')) | $spl18),
  inference(forward_demodulation,[],[f6669,f4249])).
fof(f6669,plain,(
  ( ! [X30,X28,X33,X31,X29,X34,X32] : (~p(s(bool,'const.bool.IN_2'(s(X28,happ(s(fun(X31,X28),'_dst_x0x1_2'(s(fun(X29,X28),X30),s(fun(X31,X29),X32))),s(X31,X33))),s(fun(X28,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X28),sK14(happ(s(fun(X29,X28),X30),s(X29,happ(s(fun(X31,X29),X32),s(X31,X33)))),X34,X28)))))))) ) | $spl18),
  inference(subsumption_resolution,[],[f6469,f289])).
fof(f6469,plain,(
  ( ! [X30,X28,X33,X31,X29,X34,X32] : (~p(s(bool,'T_0')) | ~p(s(bool,'const.bool.IN_2'(s(X28,happ(s(fun(X31,X28),'_dst_x0x1_2'(s(fun(X29,X28),X30),s(fun(X31,X29),X32))),s(X31,X33))),s(fun(X28,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X28),sK14(happ(s(fun(X29,X28),X30),s(X29,happ(s(fun(X31,X29),X32),s(X31,X33)))),X34,X28)))))))) ) | $spl18),
  inference(backward_demodulation,[],[f4249,f4635])).
fof(f6668,plain,(
  $false | $spl18),
  inference(subsumption_resolution,[],[f6667,f289])).
fof(f6667,plain,(
  ~p(s(bool,'T_0')) | $spl18),
  inference(forward_demodulation,[],[f6666,f4249])).
fof(f6666,plain,(
  ( ! [X26,X24,X23,X21,X27,X25,X22] : (~p(s(bool,'const.bool.IN_2'(s(X21,happ(s(fun(X24,X21),'_dst_x0x1_2'(s(fun(X22,X21),X23),s(fun(X24,X22),X25))),s(X24,X26))),s(fun(X21,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X21),sK11(happ(s(fun(X22,X21),X23),s(X22,happ(s(fun(X24,X22),X25),s(X24,X26)))),X27,X21)))))))) ) | $spl18),
  inference(subsumption_resolution,[],[f6468,f289])).
fof(f6468,plain,(
  ( ! [X26,X24,X23,X21,X27,X25,X22] : (~p(s(bool,'T_0')) | ~p(s(bool,'const.bool.IN_2'(s(X21,happ(s(fun(X24,X21),'_dst_x0x1_2'(s(fun(X22,X21),X23),s(fun(X24,X22),X25))),s(X24,X26))),s(fun(X21,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X21),sK11(happ(s(fun(X22,X21),X23),s(X22,happ(s(fun(X24,X22),X25),s(X24,X26)))),X27,X21)))))))) ) | $spl18),
  inference(backward_demodulation,[],[f4249,f4634])).
fof(f6665,plain,(
  $false | $spl18),
  inference(subsumption_resolution,[],[f6664,f289])).
fof(f6664,plain,(
  ~p(s(bool,'T_0')) | $spl18),
  inference(forward_demodulation,[],[f6663,f4249])).
fof(f6663,plain,(
  ( ! [X35,X33,X31,X34,X32] : (~p(s(bool,'const.bool.IN_2'(s(X31,happ(s(fun('type.num.num',X31),X33),s('type.num.num',X34))),s(fun(X31,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X31),sK11('const.ind_type.FCONS_3'(s(X31,X32),s(fun('type.num.num',X31),X33),s('type.num.num','const.num.SUC_1'(s('type.num.num',X34)))),X35,X31)))))))) ) | $spl18),
  inference(subsumption_resolution,[],[f6466,f289])).
fof(f6466,plain,(
  ( ! [X35,X33,X31,X34,X32] : (~p(s(bool,'T_0')) | ~p(s(bool,'const.bool.IN_2'(s(X31,happ(s(fun('type.num.num',X31),X33),s('type.num.num',X34))),s(fun(X31,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X31),sK11('const.ind_type.FCONS_3'(s(X31,X32),s(fun('type.num.num',X31),X33),s('type.num.num','const.num.SUC_1'(s('type.num.num',X34)))),X35,X31)))))))) ) | $spl18),
  inference(backward_demodulation,[],[f4249,f2391])).
fof(f6662,plain,(
  $false | $spl18),
  inference(subsumption_resolution,[],[f6661,f289])).
fof(f6661,plain,(
  ~p(s(bool,'T_0')) | $spl18),
  inference(forward_demodulation,[],[f6660,f4249])).
fof(f6660,plain,(
  ( ! [X39,X37,X35,X38,X36] : (~p(s(bool,'const.bool.IN_2'(s(X35,happ(s(fun('type.num.num',X35),X37),s('type.num.num',X38))),s(fun(X35,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X35),sK14('const.ind_type.FCONS_3'(s(X35,X36),s(fun('type.num.num',X35),X37),s('type.num.num','const.num.SUC_1'(s('type.num.num',X38)))),X39,X35)))))))) ) | $spl18),
  inference(subsumption_resolution,[],[f6465,f289])).
fof(f6465,plain,(
  ( ! [X39,X37,X35,X38,X36] : (~p(s(bool,'T_0')) | ~p(s(bool,'const.bool.IN_2'(s(X35,happ(s(fun('type.num.num',X35),X37),s('type.num.num',X38))),s(fun(X35,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X35),sK14('const.ind_type.FCONS_3'(s(X35,X36),s(fun('type.num.num',X35),X37),s('type.num.num','const.num.SUC_1'(s('type.num.num',X38)))),X39,X35)))))))) ) | $spl18),
  inference(backward_demodulation,[],[f4249,f2573])).
fof(f6659,plain,(
  $false | $spl18),
  inference(global_subsumption,[],[f288,f287,f289,f487,f296,f297,f299,f304,f303,f308,f307,f358,f359,f360,f368,f383,f382,f381,f390,f391,f392,f393,f402,f401,f400,f399,f398,f397,f413,f412,f411,f410,f409,f408,f417,f414,f427,f430,f437,f473,f492,f532,f535,f575,f639,f675,f696,f727,f728,f730,f732,f753,f756,f769,f785,f787,f1492,f1493,f1495,f803,f805,f791,f804,f790,f802,f808,f789,f389,f388,f387,f372,f371,f367,f366,f365,f806,f807,f395,f407,f406,f405,f404,f403,f396,f394,f380,f379,f378,f377,f376,f375,f1320,f754,f1327,f370,f369,f1708,f1709,f1713,f1723,f1721,f1724,f1747,f1781,f1790,f1792,f1794,f1795,f1769,f1770,f1775,f1778,f1801,f1804,f1816,f1903,f1905,f1918,f1920,f1921,f1931,f1969,f1970,f1972,f2108,f2109,f2130,f2060,f2061,f2134,f2144,f2079,f2080,f2148,f2161,f2300,f2283,f2284,f2305,f2313,f2334,f2331,f2335,f2333,f2380,f2365,f2366,f2381,f2383,f2384,f2385,f2386,f2387,f2388,f2390,f2391,f2393,f2561,f2544,f2562,f2565,f2566,f2567,f2568,f2569,f2570,f2572,f2573,f2576,f2920,f3634,f3635,f3637,f3853,f3854,f3896,f3897,f3899,f4096,f4138,f4104,f4156,f4172,f2543,f4324,f4345,f4326,f4349,f4362,f4476,f4501,f4478,f4507,f4521,f4596,f4595,f4597,f4598,f4599,f4773,f4601,f4634,f4635,f4636,f4637,f4640,f4641,f4642,f4643,f4644,f4645,f4646,f4650,f4651,f4652,f4653,f4654,f4656,f4657,f4658,f4659,f4660,f4661,f4666,f4667,f4668,f4669,f4670,f4671,f4672,f4676,f4679,f4680,f4684,f4685,f4686,f4703,f4704,f4705,f4706,f4709,f4710,f4711,f4712,f4713,f4714,f4715,f4716,f4717,f4718,f4719,f4723,f4724,f4725,f4726,f4727,f4729,f4730,f4731,f4732,f4733,f4734,f4739,f4740,f4741,f4742,f4743,f4744,f4745,f4749,f4752,f4753,f4757,f4758,f4759,f4855,f4856,f4831,f4832,f4858,f4853,f4854,f4885,f4886,f4878,f4879,f4880,f4887,f4889,f4884,f5023,f5024,f5026,f5027,f5028,f5029,f5030,f5031,f5033,f5034,f5035,f5036,f5039,f5090,f5135,f5092,f5149,f5106,f5107,f5108,f5162,f5110,f5169,f5124,f5125,f5131,f5132,f5182,f5244,f5278,f5285,f5259,f5260,f5261,f5262,f5264,f5265,f5266,f5267,f5277,f5354,f5388,f5395,f5369,f5370,f5378,f5379,f5381,f5382,f5383,f5384,f5387,f5509,f5510,f5511,f5624,f5625,f5626,f5780,f5782,f5766,f5767,f5784,f5777,f5778,f6101,f6102,f6104,f6280,f6281,f6240,f6241,f6242,f6282,f6245,f6284,f6291,f6292,f6293,f6294,f6295,f6296,f6297,f6298,f6299,f6300,f6301,f6302,f6303,f6266,f6267,f6309,f4249,f6592,f6614,f6616,f6621,f6638,f6640,f6642,f6644,f6650,f6652,f6654,f6656,f6658])).
fof(f6657,plain,(
  $false | $spl18),
  inference(global_subsumption,[],[f288,f287,f289,f487,f296,f297,f299,f304,f303,f308,f307,f358,f359,f360,f368,f383,f382,f381,f390,f391,f392,f393,f402,f401,f400,f399,f398,f397,f413,f412,f411,f410,f409,f408,f417,f414,f427,f430,f437,f473,f492,f532,f535,f575,f639,f675,f696,f727,f728,f730,f732,f753,f756,f769,f785,f787,f1492,f1493,f1495,f803,f805,f791,f804,f790,f802,f808,f789,f389,f388,f387,f372,f371,f367,f366,f365,f806,f807,f395,f407,f406,f405,f404,f403,f396,f394,f380,f379,f378,f377,f376,f375,f1320,f754,f1327,f370,f369,f1708,f1709,f1713,f1723,f1721,f1724,f1747,f1781,f1790,f1792,f1794,f1795,f1769,f1770,f1775,f1778,f1801,f1804,f1816,f1903,f1905,f1918,f1920,f1921,f1931,f1969,f1970,f1972,f2108,f2109,f2130,f2060,f2061,f2134,f2144,f2079,f2080,f2148,f2161,f2300,f2283,f2284,f2305,f2313,f2334,f2331,f2335,f2333,f2380,f2365,f2366,f2381,f2383,f2384,f2385,f2386,f2387,f2388,f2390,f2391,f2393,f2561,f2544,f2562,f2565,f2566,f2567,f2568,f2569,f2570,f2572,f2573,f2576,f2920,f3634,f3635,f3637,f3853,f3854,f3896,f3897,f3899,f4096,f4138,f4104,f4156,f4172,f2543,f4324,f4345,f4326,f4349,f4362,f4476,f4501,f4478,f4507,f4521,f4596,f4595,f4597,f4598,f4599,f4773,f4601,f4634,f4635,f4636,f4637,f4640,f4641,f4642,f4643,f4644,f4645,f4646,f4650,f4651,f4652,f4653,f4654,f4656,f4657,f4658,f4659,f4660,f4661,f4666,f4667,f4668,f4669,f4670,f4671,f4672,f4676,f4679,f4680,f4684,f4685,f4686,f4703,f4704,f4705,f4706,f4709,f4710,f4711,f4712,f4713,f4714,f4715,f4716,f4717,f4718,f4719,f4723,f4724,f4725,f4726,f4727,f4729,f4730,f4731,f4732,f4733,f4734,f4739,f4740,f4741,f4742,f4743,f4744,f4745,f4749,f4752,f4753,f4757,f4758,f4759,f4855,f4856,f4831,f4832,f4858,f4853,f4854,f4885,f4886,f4878,f4879,f4880,f4887,f4889,f4884,f5023,f5024,f5026,f5027,f5028,f5029,f5030,f5031,f5033,f5034,f5035,f5036,f5039,f5090,f5135,f5092,f5149,f5106,f5107,f5108,f5162,f5110,f5169,f5124,f5125,f5131,f5132,f5182,f5244,f5278,f5285,f5259,f5260,f5261,f5262,f5264,f5265,f5266,f5267,f5277,f5354,f5388,f5395,f5369,f5370,f5378,f5379,f5381,f5382,f5383,f5384,f5387,f5509,f5510,f5511,f5624,f5625,f5626,f5780,f5782,f5766,f5767,f5784,f5777,f5778,f6101,f6102,f6104,f6280,f6281,f6240,f6241,f6242,f6282,f6245,f6284,f6291,f6292,f6293,f6294,f6295,f6296,f6297,f6298,f6299,f6300,f6301,f6302,f6303,f6266,f6267,f6309,f4249,f6592,f6614,f6616,f6621,f6638,f6640,f6642,f6644,f6650,f6652,f6654,f6656])).
fof(f6655,plain,(
  $false | $spl18),
  inference(global_subsumption,[],[f288,f287,f289,f487,f296,f297,f299,f304,f303,f308,f307,f358,f359,f360,f368,f383,f382,f381,f390,f391,f392,f393,f402,f401,f400,f399,f398,f397,f413,f412,f411,f410,f409,f408,f417,f414,f427,f430,f437,f473,f492,f532,f535,f575,f639,f675,f696,f727,f728,f730,f732,f753,f756,f769,f785,f787,f1492,f1493,f1495,f803,f805,f791,f804,f790,f802,f808,f789,f389,f388,f387,f372,f371,f367,f366,f365,f806,f807,f395,f407,f406,f405,f404,f403,f396,f394,f380,f379,f378,f377,f376,f375,f1320,f754,f1327,f370,f369,f1708,f1709,f1713,f1723,f1721,f1724,f1747,f1781,f1790,f1792,f1794,f1795,f1769,f1770,f1775,f1778,f1801,f1804,f1816,f1903,f1905,f1918,f1920,f1921,f1931,f1969,f1970,f1972,f2108,f2109,f2130,f2060,f2061,f2134,f2144,f2079,f2080,f2148,f2161,f2300,f2283,f2284,f2305,f2313,f2334,f2331,f2335,f2333,f2380,f2365,f2366,f2381,f2383,f2384,f2385,f2386,f2387,f2388,f2390,f2391,f2393,f2561,f2544,f2562,f2565,f2566,f2567,f2568,f2569,f2570,f2572,f2573,f2576,f2920,f3634,f3635,f3637,f3853,f3854,f3896,f3897,f3899,f4096,f4138,f4104,f4156,f4172,f2543,f4324,f4345,f4326,f4349,f4362,f4476,f4501,f4478,f4507,f4521,f4596,f4595,f4597,f4598,f4599,f4773,f4601,f4634,f4635,f4636,f4637,f4640,f4641,f4642,f4643,f4644,f4645,f4646,f4650,f4651,f4652,f4653,f4654,f4656,f4657,f4658,f4659,f4660,f4661,f4666,f4667,f4668,f4669,f4670,f4671,f4672,f4676,f4679,f4680,f4684,f4685,f4686,f4703,f4704,f4705,f4706,f4709,f4710,f4711,f4712,f4713,f4714,f4715,f4716,f4717,f4718,f4719,f4723,f4724,f4725,f4726,f4727,f4729,f4730,f4731,f4732,f4733,f4734,f4739,f4740,f4741,f4742,f4743,f4744,f4745,f4749,f4752,f4753,f4757,f4758,f4759,f4855,f4856,f4831,f4832,f4858,f4853,f4854,f4885,f4886,f4878,f4879,f4880,f4887,f4889,f4884,f5023,f5024,f5026,f5027,f5028,f5029,f5030,f5031,f5033,f5034,f5035,f5036,f5039,f5090,f5135,f5092,f5149,f5106,f5107,f5108,f5162,f5110,f5169,f5124,f5125,f5131,f5132,f5182,f5244,f5278,f5285,f5259,f5260,f5261,f5262,f5264,f5265,f5266,f5267,f5277,f5354,f5388,f5395,f5369,f5370,f5378,f5379,f5381,f5382,f5383,f5384,f5387,f5509,f5510,f5511,f5624,f5625,f5626,f5780,f5782,f5766,f5767,f5784,f5777,f5778,f6101,f6102,f6104,f6280,f6281,f6240,f6241,f6242,f6282,f6245,f6284,f6291,f6292,f6293,f6294,f6295,f6296,f6297,f6298,f6299,f6300,f6301,f6302,f6303,f6266,f6267,f6309,f4249,f6592,f6614,f6616,f6621,f6638,f6640,f6642,f6644,f6650,f6652,f6654])).
fof(f6653,plain,(
  $false | $spl18),
  inference(global_subsumption,[],[f288,f287,f289,f487,f296,f297,f299,f304,f303,f308,f307,f358,f359,f360,f368,f383,f382,f381,f390,f391,f392,f393,f402,f401,f400,f399,f398,f397,f413,f412,f411,f410,f409,f408,f417,f414,f427,f430,f437,f473,f492,f532,f535,f575,f639,f675,f696,f727,f728,f730,f732,f753,f756,f769,f785,f787,f1492,f1493,f1495,f803,f805,f791,f804,f790,f802,f808,f789,f389,f388,f387,f372,f371,f367,f366,f365,f806,f807,f395,f407,f406,f405,f404,f403,f396,f394,f380,f379,f378,f377,f376,f375,f1320,f754,f1327,f370,f369,f1708,f1709,f1713,f1723,f1721,f1724,f1747,f1781,f1790,f1792,f1794,f1795,f1769,f1770,f1775,f1778,f1801,f1804,f1816,f1903,f1905,f1918,f1920,f1921,f1931,f1969,f1970,f1972,f2108,f2109,f2130,f2060,f2061,f2134,f2144,f2079,f2080,f2148,f2161,f2300,f2283,f2284,f2305,f2313,f2334,f2331,f2335,f2333,f2380,f2365,f2366,f2381,f2383,f2384,f2385,f2386,f2387,f2388,f2390,f2391,f2393,f2561,f2544,f2562,f2565,f2566,f2567,f2568,f2569,f2570,f2572,f2573,f2576,f2920,f3634,f3635,f3637,f3853,f3854,f3896,f3897,f3899,f4096,f4138,f4104,f4156,f4172,f2543,f4324,f4345,f4326,f4349,f4362,f4476,f4501,f4478,f4507,f4521,f4596,f4595,f4597,f4598,f4599,f4773,f4601,f4634,f4635,f4636,f4637,f4640,f4641,f4642,f4643,f4644,f4645,f4646,f4650,f4651,f4652,f4653,f4654,f4656,f4657,f4658,f4659,f4660,f4661,f4666,f4667,f4668,f4669,f4670,f4671,f4672,f4676,f4679,f4680,f4684,f4685,f4686,f4703,f4704,f4705,f4706,f4709,f4710,f4711,f4712,f4713,f4714,f4715,f4716,f4717,f4718,f4719,f4723,f4724,f4725,f4726,f4727,f4729,f4730,f4731,f4732,f4733,f4734,f4739,f4740,f4741,f4742,f4743,f4744,f4745,f4749,f4752,f4753,f4757,f4758,f4759,f4855,f4856,f4831,f4832,f4858,f4853,f4854,f4885,f4886,f4878,f4879,f4880,f4887,f4889,f4884,f5023,f5024,f5026,f5027,f5028,f5029,f5030,f5031,f5033,f5034,f5035,f5036,f5039,f5090,f5135,f5092,f5149,f5106,f5107,f5108,f5162,f5110,f5169,f5124,f5125,f5131,f5132,f5182,f5244,f5278,f5285,f5259,f5260,f5261,f5262,f5264,f5265,f5266,f5267,f5277,f5354,f5388,f5395,f5369,f5370,f5378,f5379,f5381,f5382,f5383,f5384,f5387,f5509,f5510,f5511,f5624,f5625,f5626,f5780,f5782,f5766,f5767,f5784,f5777,f5778,f6101,f6102,f6104,f6280,f6281,f6240,f6241,f6242,f6282,f6245,f6284,f6291,f6292,f6293,f6294,f6295,f6296,f6297,f6298,f6299,f6300,f6301,f6302,f6303,f6266,f6267,f6309,f4249,f6592,f6614,f6616,f6621,f6638,f6640,f6642,f6644,f6650,f6652])).
fof(f6651,plain,(
  $false | $spl18),
  inference(global_subsumption,[],[f288,f287,f289,f487,f296,f297,f299,f304,f303,f308,f307,f358,f359,f360,f368,f383,f382,f381,f390,f391,f392,f393,f402,f401,f400,f399,f398,f397,f413,f412,f411,f410,f409,f408,f417,f414,f427,f430,f437,f473,f492,f532,f535,f575,f639,f675,f696,f727,f728,f730,f732,f753,f756,f769,f785,f787,f1492,f1493,f1495,f803,f805,f791,f804,f790,f802,f808,f789,f389,f388,f387,f372,f371,f367,f366,f365,f806,f807,f395,f407,f406,f405,f404,f403,f396,f394,f380,f379,f378,f377,f376,f375,f1320,f754,f1327,f370,f369,f1708,f1709,f1713,f1723,f1721,f1724,f1747,f1781,f1790,f1792,f1794,f1795,f1769,f1770,f1775,f1778,f1801,f1804,f1816,f1903,f1905,f1918,f1920,f1921,f1931,f1969,f1970,f1972,f2108,f2109,f2130,f2060,f2061,f2134,f2144,f2079,f2080,f2148,f2161,f2300,f2283,f2284,f2305,f2313,f2334,f2331,f2335,f2333,f2380,f2365,f2366,f2381,f2383,f2384,f2385,f2386,f2387,f2388,f2390,f2391,f2393,f2561,f2544,f2562,f2565,f2566,f2567,f2568,f2569,f2570,f2572,f2573,f2576,f2920,f3634,f3635,f3637,f3853,f3854,f3896,f3897,f3899,f4096,f4138,f4104,f4156,f4172,f2543,f4324,f4345,f4326,f4349,f4362,f4476,f4501,f4478,f4507,f4521,f4596,f4595,f4597,f4598,f4599,f4773,f4601,f4634,f4635,f4636,f4637,f4640,f4641,f4642,f4643,f4644,f4645,f4646,f4650,f4651,f4652,f4653,f4654,f4656,f4657,f4658,f4659,f4660,f4661,f4666,f4667,f4668,f4669,f4670,f4671,f4672,f4676,f4679,f4680,f4684,f4685,f4686,f4703,f4704,f4705,f4706,f4709,f4710,f4711,f4712,f4713,f4714,f4715,f4716,f4717,f4718,f4719,f4723,f4724,f4725,f4726,f4727,f4729,f4730,f4731,f4732,f4733,f4734,f4739,f4740,f4741,f4742,f4743,f4744,f4745,f4749,f4752,f4753,f4757,f4758,f4759,f4855,f4856,f4831,f4832,f4858,f4853,f4854,f4885,f4886,f4878,f4879,f4880,f4887,f4889,f4884,f5023,f5024,f5026,f5027,f5028,f5029,f5030,f5031,f5033,f5034,f5035,f5036,f5039,f5090,f5135,f5092,f5149,f5106,f5107,f5108,f5162,f5110,f5169,f5124,f5125,f5131,f5132,f5182,f5244,f5278,f5285,f5259,f5260,f5261,f5262,f5264,f5265,f5266,f5267,f5277,f5354,f5388,f5395,f5369,f5370,f5378,f5379,f5381,f5382,f5383,f5384,f5387,f5509,f5510,f5511,f5624,f5625,f5626,f5780,f5782,f5766,f5767,f5784,f5777,f5778,f6101,f6102,f6104,f6280,f6281,f6240,f6241,f6242,f6282,f6245,f6284,f6291,f6292,f6293,f6294,f6295,f6296,f6297,f6298,f6299,f6300,f6301,f6302,f6303,f6266,f6267,f6309,f4249,f6592,f6614,f6616,f6621,f6638,f6640,f6642,f6644,f6650])).
fof(f6645,plain,(
  $false | $spl18),
  inference(global_subsumption,[],[f288,f287,f289,f487,f296,f297,f299,f304,f303,f308,f307,f358,f359,f360,f368,f383,f382,f381,f390,f391,f392,f393,f402,f401,f400,f399,f398,f397,f413,f412,f411,f410,f409,f408,f417,f414,f427,f430,f437,f473,f492,f532,f535,f575,f639,f675,f696,f727,f728,f730,f732,f753,f756,f769,f785,f787,f1492,f1493,f1495,f803,f805,f791,f804,f790,f802,f808,f789,f389,f388,f387,f372,f371,f367,f366,f365,f806,f807,f395,f407,f406,f405,f404,f403,f396,f394,f380,f379,f378,f377,f376,f375,f1320,f754,f1327,f370,f369,f1708,f1709,f1713,f1723,f1721,f1724,f1747,f1781,f1790,f1792,f1794,f1795,f1769,f1770,f1775,f1778,f1801,f1804,f1816,f1903,f1905,f1918,f1920,f1921,f1931,f1969,f1970,f1972,f2108,f2109,f2130,f2060,f2061,f2134,f2144,f2079,f2080,f2148,f2161,f2300,f2283,f2284,f2305,f2313,f2334,f2331,f2335,f2333,f2380,f2365,f2366,f2381,f2383,f2384,f2385,f2386,f2387,f2388,f2390,f2391,f2393,f2561,f2544,f2562,f2565,f2566,f2567,f2568,f2569,f2570,f2572,f2573,f2576,f2920,f3634,f3635,f3637,f3853,f3854,f3896,f3897,f3899,f4096,f4138,f4104,f4156,f4172,f2543,f4324,f4345,f4326,f4349,f4362,f4476,f4501,f4478,f4507,f4521,f4596,f4595,f4597,f4598,f4599,f4773,f4601,f4634,f4635,f4636,f4637,f4640,f4641,f4642,f4643,f4644,f4645,f4646,f4650,f4651,f4652,f4653,f4654,f4656,f4657,f4658,f4659,f4660,f4661,f4666,f4667,f4668,f4669,f4670,f4671,f4672,f4676,f4679,f4680,f4684,f4685,f4686,f4703,f4704,f4705,f4706,f4709,f4710,f4711,f4712,f4713,f4714,f4715,f4716,f4717,f4718,f4719,f4723,f4724,f4725,f4726,f4727,f4729,f4730,f4731,f4732,f4733,f4734,f4739,f4740,f4741,f4742,f4743,f4744,f4745,f4749,f4752,f4753,f4757,f4758,f4759,f4855,f4856,f4831,f4832,f4858,f4853,f4854,f4885,f4886,f4878,f4879,f4880,f4887,f4889,f4884,f5023,f5024,f5026,f5027,f5028,f5029,f5030,f5031,f5033,f5034,f5035,f5036,f5039,f5090,f5135,f5092,f5149,f5106,f5107,f5108,f5162,f5110,f5169,f5124,f5125,f5131,f5132,f5182,f5244,f5278,f5285,f5259,f5260,f5261,f5262,f5264,f5265,f5266,f5267,f5277,f5354,f5388,f5395,f5369,f5370,f5378,f5379,f5381,f5382,f5383,f5384,f5387,f5509,f5510,f5511,f5624,f5625,f5626,f5780,f5782,f5766,f5767,f5784,f5777,f5778,f6101,f6102,f6104,f6280,f6281,f6240,f6241,f6242,f6282,f6245,f6284,f6291,f6292,f6293,f6294,f6295,f6296,f6297,f6298,f6299,f6300,f6301,f6302,f6303,f6266,f6267,f6309,f4249,f6592,f6614,f6616,f6621,f6638,f6640,f6642,f6644])).
fof(f6643,plain,(
  $false | $spl18),
  inference(global_subsumption,[],[f288,f287,f289,f487,f296,f297,f299,f304,f303,f308,f307,f358,f359,f360,f368,f383,f382,f381,f390,f391,f392,f393,f402,f401,f400,f399,f398,f397,f413,f412,f411,f410,f409,f408,f417,f414,f427,f430,f437,f473,f492,f532,f535,f575,f639,f675,f696,f727,f728,f730,f732,f753,f756,f769,f785,f787,f1492,f1493,f1495,f803,f805,f791,f804,f790,f802,f808,f789,f389,f388,f387,f372,f371,f367,f366,f365,f806,f807,f395,f407,f406,f405,f404,f403,f396,f394,f380,f379,f378,f377,f376,f375,f1320,f754,f1327,f370,f369,f1708,f1709,f1713,f1723,f1721,f1724,f1747,f1781,f1790,f1792,f1794,f1795,f1769,f1770,f1775,f1778,f1801,f1804,f1816,f1903,f1905,f1918,f1920,f1921,f1931,f1969,f1970,f1972,f2108,f2109,f2130,f2060,f2061,f2134,f2144,f2079,f2080,f2148,f2161,f2300,f2283,f2284,f2305,f2313,f2334,f2331,f2335,f2333,f2380,f2365,f2366,f2381,f2383,f2384,f2385,f2386,f2387,f2388,f2390,f2391,f2393,f2561,f2544,f2562,f2565,f2566,f2567,f2568,f2569,f2570,f2572,f2573,f2576,f2920,f3634,f3635,f3637,f3853,f3854,f3896,f3897,f3899,f4096,f4138,f4104,f4156,f4172,f2543,f4324,f4345,f4326,f4349,f4362,f4476,f4501,f4478,f4507,f4521,f4596,f4595,f4597,f4598,f4599,f4773,f4601,f4634,f4635,f4636,f4637,f4640,f4641,f4642,f4643,f4644,f4645,f4646,f4650,f4651,f4652,f4653,f4654,f4656,f4657,f4658,f4659,f4660,f4661,f4666,f4667,f4668,f4669,f4670,f4671,f4672,f4676,f4679,f4680,f4684,f4685,f4686,f4703,f4704,f4705,f4706,f4709,f4710,f4711,f4712,f4713,f4714,f4715,f4716,f4717,f4718,f4719,f4723,f4724,f4725,f4726,f4727,f4729,f4730,f4731,f4732,f4733,f4734,f4739,f4740,f4741,f4742,f4743,f4744,f4745,f4749,f4752,f4753,f4757,f4758,f4759,f4855,f4856,f4831,f4832,f4858,f4853,f4854,f4885,f4886,f4878,f4879,f4880,f4887,f4889,f4884,f5023,f5024,f5026,f5027,f5028,f5029,f5030,f5031,f5033,f5034,f5035,f5036,f5039,f5090,f5135,f5092,f5149,f5106,f5107,f5108,f5162,f5110,f5169,f5124,f5125,f5131,f5132,f5182,f5244,f5278,f5285,f5259,f5260,f5261,f5262,f5264,f5265,f5266,f5267,f5277,f5354,f5388,f5395,f5369,f5370,f5378,f5379,f5381,f5382,f5383,f5384,f5387,f5509,f5510,f5511,f5624,f5625,f5626,f5780,f5782,f5766,f5767,f5784,f5777,f5778,f6101,f6102,f6104,f6280,f6281,f6240,f6241,f6242,f6282,f6245,f6284,f6291,f6292,f6293,f6294,f6295,f6296,f6297,f6298,f6299,f6300,f6301,f6302,f6303,f6266,f6267,f6309,f4249,f6592,f6614,f6616,f6621,f6638,f6640,f6642])).
fof(f6641,plain,(
  $false | $spl18),
  inference(global_subsumption,[],[f288,f287,f289,f487,f296,f297,f299,f304,f303,f308,f307,f358,f359,f360,f368,f383,f382,f381,f390,f391,f392,f393,f402,f401,f400,f399,f398,f397,f413,f412,f411,f410,f409,f408,f417,f414,f427,f430,f437,f473,f492,f532,f535,f575,f639,f675,f696,f727,f728,f730,f732,f753,f756,f769,f785,f787,f1492,f1493,f1495,f803,f805,f791,f804,f790,f802,f808,f789,f389,f388,f387,f372,f371,f367,f366,f365,f806,f807,f395,f407,f406,f405,f404,f403,f396,f394,f380,f379,f378,f377,f376,f375,f1320,f754,f1327,f370,f369,f1708,f1709,f1713,f1723,f1721,f1724,f1747,f1781,f1790,f1792,f1794,f1795,f1769,f1770,f1775,f1778,f1801,f1804,f1816,f1903,f1905,f1918,f1920,f1921,f1931,f1969,f1970,f1972,f2108,f2109,f2130,f2060,f2061,f2134,f2144,f2079,f2080,f2148,f2161,f2300,f2283,f2284,f2305,f2313,f2334,f2331,f2335,f2333,f2380,f2365,f2366,f2381,f2383,f2384,f2385,f2386,f2387,f2388,f2390,f2391,f2393,f2561,f2544,f2562,f2565,f2566,f2567,f2568,f2569,f2570,f2572,f2573,f2576,f2920,f3634,f3635,f3637,f3853,f3854,f3896,f3897,f3899,f4096,f4138,f4104,f4156,f4172,f2543,f4324,f4345,f4326,f4349,f4362,f4476,f4501,f4478,f4507,f4521,f4596,f4595,f4597,f4598,f4599,f4773,f4601,f4634,f4635,f4636,f4637,f4640,f4641,f4642,f4643,f4644,f4645,f4646,f4650,f4651,f4652,f4653,f4654,f4656,f4657,f4658,f4659,f4660,f4661,f4666,f4667,f4668,f4669,f4670,f4671,f4672,f4676,f4679,f4680,f4684,f4685,f4686,f4703,f4704,f4705,f4706,f4709,f4710,f4711,f4712,f4713,f4714,f4715,f4716,f4717,f4718,f4719,f4723,f4724,f4725,f4726,f4727,f4729,f4730,f4731,f4732,f4733,f4734,f4739,f4740,f4741,f4742,f4743,f4744,f4745,f4749,f4752,f4753,f4757,f4758,f4759,f4855,f4856,f4831,f4832,f4858,f4853,f4854,f4885,f4886,f4878,f4879,f4880,f4887,f4889,f4884,f5023,f5024,f5026,f5027,f5028,f5029,f5030,f5031,f5033,f5034,f5035,f5036,f5039,f5090,f5135,f5092,f5149,f5106,f5107,f5108,f5162,f5110,f5169,f5124,f5125,f5131,f5132,f5182,f5244,f5278,f5285,f5259,f5260,f5261,f5262,f5264,f5265,f5266,f5267,f5277,f5354,f5388,f5395,f5369,f5370,f5378,f5379,f5381,f5382,f5383,f5384,f5387,f5509,f5510,f5511,f5624,f5625,f5626,f5780,f5782,f5766,f5767,f5784,f5777,f5778,f6101,f6102,f6104,f6280,f6281,f6240,f6241,f6242,f6282,f6245,f6284,f6291,f6292,f6293,f6294,f6295,f6296,f6297,f6298,f6299,f6300,f6301,f6302,f6303,f6266,f6267,f6309,f4249,f6592,f6614,f6616,f6621,f6638,f6640])).
fof(f6639,plain,(
  $false | $spl18),
  inference(global_subsumption,[],[f288,f287,f289,f487,f296,f297,f299,f304,f303,f308,f307,f358,f359,f360,f368,f383,f382,f381,f390,f391,f392,f393,f402,f401,f400,f399,f398,f397,f413,f412,f411,f410,f409,f408,f417,f414,f427,f430,f437,f473,f492,f532,f535,f575,f639,f675,f696,f727,f728,f730,f732,f753,f756,f769,f785,f787,f1492,f1493,f1495,f803,f805,f791,f804,f790,f802,f808,f789,f389,f388,f387,f372,f371,f367,f366,f365,f806,f807,f395,f407,f406,f405,f404,f403,f396,f394,f380,f379,f378,f377,f376,f375,f1320,f754,f1327,f370,f369,f1708,f1709,f1713,f1723,f1721,f1724,f1747,f1781,f1790,f1792,f1794,f1795,f1769,f1770,f1775,f1778,f1801,f1804,f1816,f1903,f1905,f1918,f1920,f1921,f1931,f1969,f1970,f1972,f2108,f2109,f2130,f2060,f2061,f2134,f2144,f2079,f2080,f2148,f2161,f2300,f2283,f2284,f2305,f2313,f2334,f2331,f2335,f2333,f2380,f2365,f2366,f2381,f2383,f2384,f2385,f2386,f2387,f2388,f2390,f2391,f2393,f2561,f2544,f2562,f2565,f2566,f2567,f2568,f2569,f2570,f2572,f2573,f2576,f2920,f3634,f3635,f3637,f3853,f3854,f3896,f3897,f3899,f4096,f4138,f4104,f4156,f4172,f2543,f4324,f4345,f4326,f4349,f4362,f4476,f4501,f4478,f4507,f4521,f4596,f4595,f4597,f4598,f4599,f4773,f4601,f4634,f4635,f4636,f4637,f4640,f4641,f4642,f4643,f4644,f4645,f4646,f4650,f4651,f4652,f4653,f4654,f4656,f4657,f4658,f4659,f4660,f4661,f4666,f4667,f4668,f4669,f4670,f4671,f4672,f4676,f4679,f4680,f4684,f4685,f4686,f4703,f4704,f4705,f4706,f4709,f4710,f4711,f4712,f4713,f4714,f4715,f4716,f4717,f4718,f4719,f4723,f4724,f4725,f4726,f4727,f4729,f4730,f4731,f4732,f4733,f4734,f4739,f4740,f4741,f4742,f4743,f4744,f4745,f4749,f4752,f4753,f4757,f4758,f4759,f4855,f4856,f4831,f4832,f4858,f4853,f4854,f4885,f4886,f4878,f4879,f4880,f4887,f4889,f4884,f5023,f5024,f5026,f5027,f5028,f5029,f5030,f5031,f5033,f5034,f5035,f5036,f5039,f5090,f5135,f5092,f5149,f5106,f5107,f5108,f5162,f5110,f5169,f5124,f5125,f5131,f5132,f5182,f5244,f5278,f5285,f5259,f5260,f5261,f5262,f5264,f5265,f5266,f5267,f5277,f5354,f5388,f5395,f5369,f5370,f5378,f5379,f5381,f5382,f5383,f5384,f5387,f5509,f5510,f5511,f5624,f5625,f5626,f5780,f5782,f5766,f5767,f5784,f5777,f5778,f6101,f6102,f6104,f6280,f6281,f6240,f6241,f6242,f6282,f6245,f6284,f6291,f6292,f6293,f6294,f6295,f6296,f6297,f6298,f6299,f6300,f6301,f6302,f6303,f6266,f6267,f6309,f4249,f6592,f6614,f6616,f6621,f6638])).
fof(f6637,plain,(
  $false | $spl18),
  inference(subsumption_resolution,[],[f6636,f289])).
fof(f6636,plain,(
  ~p(s(bool,'T_0')) | $spl18),
  inference(forward_demodulation,[],[f6635,f4249])).
fof(f6635,plain,(
  ( ! [X33,X31,X34,X32] : (~p(s(bool,'const.bool.IN_2'(s(X31,X32),s(fun(X31,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X31),sK14('const.ind_type.FCONS_3'(s(X31,X32),s(fun('type.num.num',X31),X33),s('type.num.num','const.num.|48|_0')),X34,X31)))))))) ) | $spl18),
  inference(subsumption_resolution,[],[f6441,f289])).
fof(f6441,plain,(
  ( ! [X33,X31,X34,X32] : (~p(s(bool,'T_0')) | ~p(s(bool,'const.bool.IN_2'(s(X31,X32),s(fun(X31,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X31),sK14('const.ind_type.FCONS_3'(s(X31,X32),s(fun('type.num.num',X31),X33),s('type.num.num','const.num.|48|_0')),X34,X31)))))))) ) | $spl18),
  inference(backward_demodulation,[],[f4249,f2572])).
fof(f6634,plain,(
  $false | $spl18),
  inference(subsumption_resolution,[],[f6633,f289])).
fof(f6633,plain,(
  ~p(s(bool,'T_0')) | $spl18),
  inference(forward_demodulation,[],[f6632,f4249])).
fof(f6632,plain,(
  ( ! [X30,X28,X29,X27] : (~p(s(bool,'const.bool.IN_2'(s(X27,X28),s(fun(X27,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X27),sK11('const.ind_type.FCONS_3'(s(X27,X28),s(fun('type.num.num',X27),X29),s('type.num.num','const.num.|48|_0')),X30,X27)))))))) ) | $spl18),
  inference(subsumption_resolution,[],[f6440,f289])).
fof(f6440,plain,(
  ( ! [X30,X28,X29,X27] : (~p(s(bool,'T_0')) | ~p(s(bool,'const.bool.IN_2'(s(X27,X28),s(fun(X27,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X27),sK11('const.ind_type.FCONS_3'(s(X27,X28),s(fun('type.num.num',X27),X29),s('type.num.num','const.num.|48|_0')),X30,X27)))))))) ) | $spl18),
  inference(backward_demodulation,[],[f4249,f2390])).
fof(f6625,plain,(
  $false | $spl18),
  inference(subsumption_resolution,[],[f6624,f289])).
fof(f6624,plain,(
  ~p(s(bool,'T_0')) | $spl18),
  inference(forward_demodulation,[],[f6623,f4249])).
fof(f6623,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),sK14(X2,X1,X0)))))))) ) | $spl18),
  inference(subsumption_resolution,[],[f6431,f289])).
fof(f6431,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'T_0')) | ~p(s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),sK14(X2,X1,X0)))))))) ) | $spl18),
  inference(backward_demodulation,[],[f4249,f379])).
fof(f6622,plain,(
  $false | $spl18),
  inference(global_subsumption,[],[f288,f287,f289,f487,f296,f297,f299,f304,f303,f308,f307,f358,f359,f360,f368,f383,f382,f381,f390,f391,f392,f393,f402,f401,f400,f399,f398,f397,f413,f412,f411,f410,f409,f408,f417,f414,f427,f430,f437,f473,f492,f532,f535,f575,f639,f675,f696,f727,f728,f730,f732,f753,f756,f769,f785,f787,f1492,f1493,f1495,f803,f805,f791,f804,f790,f802,f808,f789,f389,f388,f387,f372,f371,f367,f366,f365,f806,f807,f395,f407,f406,f405,f404,f403,f396,f394,f380,f379,f378,f377,f376,f375,f1320,f754,f1327,f370,f369,f1708,f1709,f1713,f1723,f1721,f1724,f1747,f1781,f1790,f1792,f1794,f1795,f1769,f1770,f1775,f1778,f1801,f1804,f1816,f1903,f1905,f1918,f1920,f1921,f1931,f1969,f1970,f1972,f2108,f2109,f2130,f2060,f2061,f2134,f2144,f2079,f2080,f2148,f2161,f2300,f2283,f2284,f2305,f2313,f2334,f2331,f2335,f2333,f2380,f2365,f2366,f2381,f2383,f2384,f2385,f2386,f2387,f2388,f2390,f2391,f2393,f2561,f2544,f2562,f2565,f2566,f2567,f2568,f2569,f2570,f2572,f2573,f2576,f2920,f3634,f3635,f3637,f3853,f3854,f3896,f3897,f3899,f4096,f4138,f4104,f4156,f4172,f2543,f4324,f4345,f4326,f4349,f4362,f4476,f4501,f4478,f4507,f4521,f4596,f4595,f4597,f4598,f4599,f4773,f4601,f4634,f4635,f4636,f4637,f4640,f4641,f4642,f4643,f4644,f4645,f4646,f4650,f4651,f4652,f4653,f4654,f4656,f4657,f4658,f4659,f4660,f4661,f4666,f4667,f4668,f4669,f4670,f4671,f4672,f4676,f4679,f4680,f4684,f4685,f4686,f4703,f4704,f4705,f4706,f4709,f4710,f4711,f4712,f4713,f4714,f4715,f4716,f4717,f4718,f4719,f4723,f4724,f4725,f4726,f4727,f4729,f4730,f4731,f4732,f4733,f4734,f4739,f4740,f4741,f4742,f4743,f4744,f4745,f4749,f4752,f4753,f4757,f4758,f4759,f4855,f4856,f4831,f4832,f4858,f4853,f4854,f4885,f4886,f4878,f4879,f4880,f4887,f4889,f4884,f5023,f5024,f5026,f5027,f5028,f5029,f5030,f5031,f5033,f5034,f5035,f5036,f5039,f5090,f5135,f5092,f5149,f5106,f5107,f5108,f5162,f5110,f5169,f5124,f5125,f5131,f5132,f5182,f5244,f5278,f5285,f5259,f5260,f5261,f5262,f5264,f5265,f5266,f5267,f5277,f5354,f5388,f5395,f5369,f5370,f5378,f5379,f5381,f5382,f5383,f5384,f5387,f5509,f5510,f5511,f5624,f5625,f5626,f5780,f5782,f5766,f5767,f5784,f5777,f5778,f6101,f6102,f6104,f6280,f6281,f6240,f6241,f6242,f6282,f6245,f6284,f6291,f6292,f6293,f6294,f6295,f6296,f6297,f6298,f6299,f6300,f6301,f6302,f6303,f6266,f6267,f6309,f4249,f6592,f6614,f6616,f6621])).
fof(f6620,plain,(
  $false | $spl18),
  inference(subsumption_resolution,[],[f6619,f289])).
fof(f6619,plain,(
  ~p(s(bool,'T_0')) | $spl18),
  inference(forward_demodulation,[],[f6618,f4249])).
fof(f6618,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),sK11(X2,X1,X0)))))))) ) | $spl18),
  inference(subsumption_resolution,[],[f6428,f289])).
fof(f6428,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'T_0')) | ~p(s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),sK11(X2,X1,X0)))))))) ) | $spl18),
  inference(backward_demodulation,[],[f4249,f376])).
fof(f6617,plain,(
  $false | $spl18),
  inference(global_subsumption,[],[f288,f287,f289,f487,f296,f297,f299,f304,f303,f308,f307,f358,f359,f360,f368,f383,f382,f381,f390,f391,f392,f393,f402,f401,f400,f399,f398,f397,f413,f412,f411,f410,f409,f408,f417,f414,f427,f430,f437,f473,f492,f532,f535,f575,f639,f675,f696,f727,f728,f730,f732,f753,f756,f769,f785,f787,f1492,f1493,f1495,f803,f805,f791,f804,f790,f802,f808,f789,f389,f388,f387,f372,f371,f367,f366,f365,f806,f807,f395,f407,f406,f405,f404,f403,f396,f394,f380,f379,f378,f377,f376,f375,f1320,f754,f1327,f370,f369,f1708,f1709,f1713,f1723,f1721,f1724,f1747,f1781,f1790,f1792,f1794,f1795,f1769,f1770,f1775,f1778,f1801,f1804,f1816,f1903,f1905,f1918,f1920,f1921,f1931,f1969,f1970,f1972,f2108,f2109,f2130,f2060,f2061,f2134,f2144,f2079,f2080,f2148,f2161,f2300,f2283,f2284,f2305,f2313,f2334,f2331,f2335,f2333,f2380,f2365,f2366,f2381,f2383,f2384,f2385,f2386,f2387,f2388,f2390,f2391,f2393,f2561,f2544,f2562,f2565,f2566,f2567,f2568,f2569,f2570,f2572,f2573,f2576,f2920,f3634,f3635,f3637,f3853,f3854,f3896,f3897,f3899,f4096,f4138,f4104,f4156,f4172,f2543,f4324,f4345,f4326,f4349,f4362,f4476,f4501,f4478,f4507,f4521,f4596,f4595,f4597,f4598,f4599,f4773,f4601,f4634,f4635,f4636,f4637,f4640,f4641,f4642,f4643,f4644,f4645,f4646,f4650,f4651,f4652,f4653,f4654,f4656,f4657,f4658,f4659,f4660,f4661,f4666,f4667,f4668,f4669,f4670,f4671,f4672,f4676,f4679,f4680,f4684,f4685,f4686,f4703,f4704,f4705,f4706,f4709,f4710,f4711,f4712,f4713,f4714,f4715,f4716,f4717,f4718,f4719,f4723,f4724,f4725,f4726,f4727,f4729,f4730,f4731,f4732,f4733,f4734,f4739,f4740,f4741,f4742,f4743,f4744,f4745,f4749,f4752,f4753,f4757,f4758,f4759,f4855,f4856,f4831,f4832,f4858,f4853,f4854,f4885,f4886,f4878,f4879,f4880,f4887,f4889,f4884,f5023,f5024,f5026,f5027,f5028,f5029,f5030,f5031,f5033,f5034,f5035,f5036,f5039,f5090,f5135,f5092,f5149,f5106,f5107,f5108,f5162,f5110,f5169,f5124,f5125,f5131,f5132,f5182,f5244,f5278,f5285,f5259,f5260,f5261,f5262,f5264,f5265,f5266,f5267,f5277,f5354,f5388,f5395,f5369,f5370,f5378,f5379,f5381,f5382,f5383,f5384,f5387,f5509,f5510,f5511,f5624,f5625,f5626,f5780,f5782,f5766,f5767,f5784,f5777,f5778,f6101,f6102,f6104,f6280,f6281,f6240,f6241,f6242,f6282,f6245,f6284,f6291,f6292,f6293,f6294,f6295,f6296,f6297,f6298,f6299,f6300,f6301,f6302,f6303,f6266,f6267,f6309,f4249,f6592,f6614,f6616])).
fof(f6615,plain,(
  $false | $spl18),
  inference(global_subsumption,[],[f288,f287,f289,f487,f296,f297,f299,f304,f303,f308,f307,f358,f359,f360,f368,f383,f382,f381,f390,f391,f392,f393,f402,f401,f400,f399,f398,f397,f413,f412,f411,f410,f409,f408,f417,f414,f427,f430,f437,f473,f492,f532,f535,f575,f639,f675,f696,f727,f728,f730,f732,f753,f756,f769,f785,f787,f1492,f1493,f1495,f803,f805,f791,f804,f790,f802,f808,f789,f389,f388,f387,f372,f371,f367,f366,f365,f806,f807,f395,f407,f406,f405,f404,f403,f396,f394,f380,f379,f378,f377,f376,f375,f1320,f754,f1327,f370,f369,f1708,f1709,f1713,f1723,f1721,f1724,f1747,f1781,f1790,f1792,f1794,f1795,f1769,f1770,f1775,f1778,f1801,f1804,f1816,f1903,f1905,f1918,f1920,f1921,f1931,f1969,f1970,f1972,f2108,f2109,f2130,f2060,f2061,f2134,f2144,f2079,f2080,f2148,f2161,f2300,f2283,f2284,f2305,f2313,f2334,f2331,f2335,f2333,f2380,f2365,f2366,f2381,f2383,f2384,f2385,f2386,f2387,f2388,f2390,f2391,f2393,f2561,f2544,f2562,f2565,f2566,f2567,f2568,f2569,f2570,f2572,f2573,f2576,f2920,f3634,f3635,f3637,f3853,f3854,f3896,f3897,f3899,f4096,f4138,f4104,f4156,f4172,f2543,f4324,f4345,f4326,f4349,f4362,f4476,f4501,f4478,f4507,f4521,f4596,f4595,f4597,f4598,f4599,f4773,f4601,f4634,f4635,f4636,f4637,f4640,f4641,f4642,f4643,f4644,f4645,f4646,f4650,f4651,f4652,f4653,f4654,f4656,f4657,f4658,f4659,f4660,f4661,f4666,f4667,f4668,f4669,f4670,f4671,f4672,f4676,f4679,f4680,f4684,f4685,f4686,f4703,f4704,f4705,f4706,f4709,f4710,f4711,f4712,f4713,f4714,f4715,f4716,f4717,f4718,f4719,f4723,f4724,f4725,f4726,f4727,f4729,f4730,f4731,f4732,f4733,f4734,f4739,f4740,f4741,f4742,f4743,f4744,f4745,f4749,f4752,f4753,f4757,f4758,f4759,f4855,f4856,f4831,f4832,f4858,f4853,f4854,f4885,f4886,f4878,f4879,f4880,f4887,f4889,f4884,f5023,f5024,f5026,f5027,f5028,f5029,f5030,f5031,f5033,f5034,f5035,f5036,f5039,f5090,f5135,f5092,f5149,f5106,f5107,f5108,f5162,f5110,f5169,f5124,f5125,f5131,f5132,f5182,f5244,f5278,f5285,f5259,f5260,f5261,f5262,f5264,f5265,f5266,f5267,f5277,f5354,f5388,f5395,f5369,f5370,f5378,f5379,f5381,f5382,f5383,f5384,f5387,f5509,f5510,f5511,f5624,f5625,f5626,f5780,f5782,f5766,f5767,f5784,f5777,f5778,f6101,f6102,f6104,f6280,f6281,f6240,f6241,f6242,f6282,f6245,f6284,f6291,f6292,f6293,f6294,f6295,f6296,f6297,f6298,f6299,f6300,f6301,f6302,f6303,f6266,f6267,f6309,f4249,f6592,f6614])).
fof(f6611,plain,(
  $false | $spl18),
  inference(subsumption_resolution,[],[f6610,f289])).
fof(f6610,plain,(
  ~p(s(bool,'T_0')) | $spl18),
  inference(forward_demodulation,[],[f6609,f4249])).
fof(f6609,plain,(
  ( ! [X165,X163,X166,X164,X162] : (~p(s(bool,happ(s(fun(X163,bool),X164),s(X163,happ(s(fun(X162,X163),X165),s(X162,X166))))))) ) | $spl18),
  inference(subsumption_resolution,[],[f6395,f4249])).
fof(f6395,plain,(
  ( ! [X165,X163,X166,X164,X162] : (s(bool,'T_0') != s(bool,happ(s(fun(X162,bool),'_dst_x0x1_2'(s(fun(X163,bool),X164),s(fun(X162,X163),X165))),s(X162,X166))) | ~p(s(bool,happ(s(fun(X163,bool),X164),s(X163,happ(s(fun(X162,X163),X165),s(X162,X166))))))) ) | $spl18),
  inference(backward_demodulation,[],[f4249,f4725])).
fof(f6608,plain,(
  $false | $spl18),
  inference(subsumption_resolution,[],[f6607,f289])).
fof(f6607,plain,(
  ~p(s(bool,'T_0')) | $spl18),
  inference(forward_demodulation,[],[f6606,f4249])).
fof(f6606,plain,(
  ( ! [X146,X144,X142,X145,X143] : (~p(s(bool,happ(s(fun(X144,bool),'_dst_x0x1_2'(s(fun(X142,bool),X143),s(fun(X144,X142),X145))),s(X144,X146))))) ) | $spl18),
  inference(subsumption_resolution,[],[f6391,f4249])).
fof(f6391,plain,(
  ( ! [X146,X144,X142,X145,X143] : (s(bool,'T_0') != s(bool,happ(s(fun(X142,bool),X143),s(X142,happ(s(fun(X144,X142),X145),s(X144,X146))))) | ~p(s(bool,happ(s(fun(X144,bool),'_dst_x0x1_2'(s(fun(X142,bool),X143),s(fun(X144,X142),X145))),s(X144,X146))))) ) | $spl18),
  inference(backward_demodulation,[],[f4249,f4652])).
fof(f6605,plain,(
  $false | $spl18),
  inference(subsumption_resolution,[],[f6604,f289])).
fof(f6604,plain,(
  ~p(s(bool,'T_0')) | $spl18),
  inference(forward_demodulation,[],[f6603,f4249])).
fof(f6603,plain,(
  ( ! [X11] : (~p(s(bool,'const.bool.IN_2'(s(bool,'F_0'),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),X11))))))) ) | $spl18),
  inference(subsumption_resolution,[],[f6602,f289])).
fof(f6602,plain,(
  ( ! [X11] : (~p(s(bool,'T_0')) | ~p(s(bool,'const.bool.IN_2'(s(bool,'F_0'),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),X11))))))) ) | $spl18),
  inference(forward_demodulation,[],[f6370,f4249])).
fof(f6370,plain,(
  ( ! [X10,X11,X9] : (~p(s(bool,'const.bool.IN_2'(s(bool,'T_0'),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),sK14('const.bool.IN_2'(s(X9,X10),s(fun(X9,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X9),'const.list.NIL_0')))),X11,bool))))))) | ~p(s(bool,'const.bool.IN_2'(s(bool,'F_0'),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),X11))))))) ) | $spl18),
  inference(backward_demodulation,[],[f4249,f2562])).
fof(f6601,plain,(
  $false | $spl18),
  inference(subsumption_resolution,[],[f6600,f289])).
fof(f6600,plain,(
  ~p(s(bool,'T_0')) | $spl18),
  inference(forward_demodulation,[],[f6599,f4249])).
fof(f6599,plain,(
  ( ! [X9] : (~p(s(bool,'const.bool.IN_2'(s(bool,'F_0'),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),X9))))))) ) | $spl18),
  inference(subsumption_resolution,[],[f6598,f289])).
fof(f6598,plain,(
  ( ! [X9] : (~p(s(bool,'T_0')) | ~p(s(bool,'const.bool.IN_2'(s(bool,'F_0'),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),X9))))))) ) | $spl18),
  inference(forward_demodulation,[],[f6363,f4249])).
fof(f6363,plain,(
  ( ! [X8,X7,X9] : (~p(s(bool,'const.bool.IN_2'(s(bool,'T_0'),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),sK11('const.bool.IN_2'(s(X7,X8),s(fun(X7,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X7),'const.list.NIL_0')))),X9,bool))))))) | ~p(s(bool,'const.bool.IN_2'(s(bool,'F_0'),s(fun(bool,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(bool),X9))))))) ) | $spl18),
  inference(backward_demodulation,[],[f4249,f2381])).
fof(f6594,plain,(
  $false | $spl18),
  inference(subsumption_resolution,[],[f6318,f289])).
fof(f6318,plain,(
  ~p(s(bool,'T_0')) | $spl18),
  inference(backward_demodulation,[],[f4249,f487])).
fof(f6593,plain,(
  $false | $spl18),
  inference(global_subsumption,[],[f288,f287,f289,f487,f296,f297,f299,f304,f303,f308,f307,f358,f359,f360,f368,f383,f382,f381,f390,f391,f392,f393,f402,f401,f400,f399,f398,f397,f413,f412,f411,f410,f409,f408,f417,f414,f427,f430,f437,f473,f492,f532,f535,f575,f639,f675,f696,f727,f728,f730,f732,f753,f756,f769,f785,f787,f1492,f1493,f1495,f803,f805,f791,f804,f790,f802,f808,f789,f389,f388,f387,f372,f371,f367,f366,f365,f806,f807,f395,f407,f406,f405,f404,f403,f396,f394,f380,f379,f378,f377,f376,f375,f1320,f754,f1327,f370,f369,f1708,f1709,f1713,f1723,f1721,f1724,f1747,f1781,f1790,f1792,f1794,f1795,f1769,f1770,f1775,f1778,f1801,f1804,f1816,f1903,f1905,f1918,f1920,f1921,f1931,f1969,f1970,f1972,f2108,f2109,f2130,f2060,f2061,f2134,f2144,f2079,f2080,f2148,f2161,f2300,f2283,f2284,f2305,f2313,f2334,f2331,f2335,f2333,f2380,f2365,f2366,f2381,f2383,f2384,f2385,f2386,f2387,f2388,f2390,f2391,f2393,f2561,f2544,f2562,f2565,f2566,f2567,f2568,f2569,f2570,f2572,f2573,f2576,f2920,f3634,f3635,f3637,f3853,f3854,f3896,f3897,f3899,f4096,f4138,f4104,f4156,f4172,f2543,f4324,f4345,f4326,f4349,f4362,f4476,f4501,f4478,f4507,f4521,f4596,f4595,f4597,f4598,f4599,f4773,f4601,f4634,f4635,f4636,f4637,f4640,f4641,f4642,f4643,f4644,f4645,f4646,f4650,f4651,f4652,f4653,f4654,f4656,f4657,f4658,f4659,f4660,f4661,f4666,f4667,f4668,f4669,f4670,f4671,f4672,f4676,f4679,f4680,f4684,f4685,f4686,f4703,f4704,f4705,f4706,f4709,f4710,f4711,f4712,f4713,f4714,f4715,f4716,f4717,f4718,f4719,f4723,f4724,f4725,f4726,f4727,f4729,f4730,f4731,f4732,f4733,f4734,f4739,f4740,f4741,f4742,f4743,f4744,f4745,f4749,f4752,f4753,f4757,f4758,f4759,f4855,f4856,f4831,f4832,f4858,f4853,f4854,f4885,f4886,f4878,f4879,f4880,f4887,f4889,f4884,f5023,f5024,f5026,f5027,f5028,f5029,f5030,f5031,f5033,f5034,f5035,f5036,f5039,f5090,f5135,f5092,f5149,f5106,f5107,f5108,f5162,f5110,f5169,f5124,f5125,f5131,f5132,f5182,f5244,f5278,f5285,f5259,f5260,f5261,f5262,f5264,f5265,f5266,f5267,f5277,f5354,f5388,f5395,f5369,f5370,f5378,f5379,f5381,f5382,f5383,f5384,f5387,f5509,f5510,f5511,f5624,f5625,f5626,f5780,f5782,f5766,f5767,f5784,f5777,f5778,f6101,f6102,f6104,f6280,f6281,f6240,f6241,f6242,f6282,f6245,f6284,f6291,f6292,f6293,f6294,f6295,f6296,f6297,f6298,f6299,f6300,f6301,f6302,f6303,f6266,f6267,f6309,f4249,f6592])).
fof(f6279,plain,(
  $false | ($spl2 | $spl4)),
  inference(subsumption_resolution,[],[f6278,f289])).
fof(f6278,plain,(
  ~p(s(bool,'T_0')) | ($spl2 | $spl4)),
  inference(forward_demodulation,[],[f6237,f4266])).
fof(f4266,plain,(
  s(bool,'T_0') = s(bool,'const.bool.IN_2'(s(sK0,sK2),s(fun(sK0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(sK0),sK1))))) | $spl2),
  inference(unit_resulting_resolution,[],[f485,f304])).
fof(f6237,plain,(
  ~p(s(bool,'const.bool.IN_2'(s(sK0,sK2),s(fun(sK0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(sK0),sK1)))))) | $spl4),
  inference(unit_resulting_resolution,[],[f486,f375])).
fof(f4252,plain,(
  ( ! [X7] : (s(bool,'T_0') = s(bool,'const.marker.Cong_1'(s(bool,X7)))) ) | $spl22),
  inference(cnf_transformation,[],[f4252_D])).
fof(f4252_D,plain,(
  ( ! [X7] : (s(bool,'T_0') = s(bool,'const.marker.Cong_1'(s(bool,X7)))) ) <=> ~$spl22),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl22])])).
fof(f4250,plain,(
  ( ! [X6] : (s(bool,X6) != s(bool,'const.bool.IN_2'(s(sK0,sK2),s(fun(sK0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(sK0),sK1))))) | s(bool,'F_0') = s(bool,X6)) ) | $spl20),
  inference(cnf_transformation,[],[f4250_D])).
fof(f4250_D,plain,(
  ( ! [X6] : (s(bool,X6) != s(bool,'const.bool.IN_2'(s(sK0,sK2),s(fun(sK0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(sK0),sK1))))) | s(bool,'F_0') = s(bool,X6)) ) <=> ~$spl20),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl20])])).
fof(f4251,plain,(
  ( ! [X8,X7] : (s(bool,X8) != s(bool,'const.bool.IN_2'(s(sK0,sK2),s(fun(sK0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(sK0),sK1))))) | s(bool,'F_0') = s(bool,X8) | s(bool,'T_0') = s(bool,'const.marker.Cong_1'(s(bool,X7)))) ) | $spl3),
  inference(subsumption_resolution,[],[f4214,f2748])).
fof(f4214,plain,(
  ( ! [X8,X7] : (s(bool,X8) != s(bool,'const.bool.IN_2'(s(sK0,sK2),s(fun(sK0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(sK0),sK1))))) | s(bool,'T_0') = s(bool,X7) | s(bool,'F_0') = s(bool,X8) | s(bool,'T_0') = s(bool,'const.marker.Cong_1'(s(bool,X7)))) ) | $spl3),
  inference(superposition,[],[f3947,f2415])).
fof(f4235,plain,(
  ( ! [X6,X5] : (s(bool,X6) != s(bool,'const.bool.IN_2'(s(sK0,sK2),s(fun(sK0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(sK0),sK1))))) | s(bool,'T_0') = s(bool,X5) | s(bool,'F_0') = s(bool,X6)) ) | $spl3),
  inference(duplicate_literal_removal,[],[f4213])).
fof(f4213,plain,(
  ( ! [X6,X5] : (s(bool,X6) != s(bool,'const.bool.IN_2'(s(sK0,sK2),s(fun(sK0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(sK0),sK1))))) | s(bool,'T_0') = s(bool,X5) | s(bool,'F_0') = s(bool,X6) | s(bool,'T_0') = s(bool,X5)) ) | $spl3),
  inference(superposition,[],[f3947,f2260])).
fof(f2162,plain,(
  $false | $spl14),
  inference(unit_resulting_resolution,[],[f368,f2159])).
fof(f2159,plain,(
  ( ! [X0] : (s(sK0,sK2) != s(sK0,X0)) ) | $spl14),
  inference(subsumption_resolution,[],[f2158,f487])).
fof(f2158,plain,(
  ( ! [X0] : (p(s(bool,'F_0')) | s(sK0,sK2) != s(sK0,X0)) ) | $spl14),
  inference(forward_demodulation,[],[f2105,f360])).
fof(f2105,plain,(
  ( ! [X0] : (p(s(bool,'const.bool.IN_2'(s(sK0,X0),s(fun(sK0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(sK0),'const.list.NIL_0')))))) | s(sK0,sK2) != s(sK0,X0)) ) | $spl14),
  inference(superposition,[],[f395,f1675])).
fof(f1675,plain,(
  s('type.list.list'(sK0),'const.list.NIL_0') = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK2),s('type.list.list'(sK0),'const.list.NIL_0'))) | $spl14),
  inference(superposition,[],[f1658,f359])).
fof(f1658,plain,(
  s('type.list.list'(sK0),'const.list.NIL_0') = s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),'const.list.NIL_0'),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK2),s('type.list.list'(sK0),'const.list.NIL_0'))))) | $spl14),
  inference(backward_demodulation,[],[f1648,f1507])).
fof(f1648,plain,(
  s('type.list.list'(sK0),'const.list.NIL_0') = s('type.list.list'(sK0),sK3) | $spl14),
  inference(unit_resulting_resolution,[],[f1507,f381])).
fof(f2167,plain,(
  $false | $spl14),
  inference(equality_resolution,[],[f2159])).
fof(f1597,plain,(
  $false | $spl8),
  inference(subsumption_resolution,[],[f1532,f1593])).
fof(f1593,plain,(
  ( ! [X2,X0,X1] : (s(X0,X1) != s(X0,X2)) ) | $spl8),
  inference(subsumption_resolution,[],[f1572,f487])).
fof(f1572,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,'F_0')) | s(X0,X1) != s(X0,X2)) ) | $spl8),
  inference(backward_demodulation,[],[f1543,f395])).
fof(f1543,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0)) ) | $spl8),
  inference(unit_resulting_resolution,[],[f1331,f308])).
fof(f1532,plain,(
  ( ! [X0,X1] : (s(bool,X0) = s(bool,X1)) ) | $spl8),
  inference(unit_resulting_resolution,[],[f1331,f1331,f414])).
fof(f1596,plain,(
  $false | $spl8),
  inference(subsumption_resolution,[],[f1535,f487])).
fof(f1535,plain,(
  p(s(bool,'F_0')) | $spl8),
  inference(unit_resulting_resolution,[],[f492,f1331,f414])).
fof(f1595,plain,(
  $false | $spl8),
  inference(subsumption_resolution,[],[f1538,f1593])).
fof(f1538,plain,(
  ( ! [X0,X1] : (s(bool,X0) = s(bool,X1)) ) | $spl8),
  inference(unit_resulting_resolution,[],[f1331,f1331,f414])).
fof(f1594,plain,(
  $false | $spl8),
  inference(subsumption_resolution,[],[f1541,f487])).
fof(f1541,plain,(
  p(s(bool,'F_0')) | $spl8),
  inference(unit_resulting_resolution,[],[f492,f1331,f414])).
fof(f1546,plain,(
  $false | $spl8),
  inference(unit_resulting_resolution,[],[f296,f1331,f303])).
fof(f1544,plain,(
  $false | $spl8),
  inference(unit_resulting_resolution,[],[f492,f1331,f308])).
fof(f1542,plain,(
  $false | $spl8),
  inference(unit_resulting_resolution,[],[f487,f492,f1331,f414])).
fof(f1540,plain,(
  $false | $spl8),
  inference(unit_resulting_resolution,[],[f1331,f492,f1331,f414])).
fof(f1536,plain,(
  $false | $spl8),
  inference(unit_resulting_resolution,[],[f487,f492,f1331,f414])).
fof(f1534,plain,(
  $false | $spl8),
  inference(unit_resulting_resolution,[],[f1331,f492,f1331,f414])).
fof(f1526,plain,(
  $false | $spl8),
  inference(unit_resulting_resolution,[],[f289,f368,f1331,f473])).
fof(f1523,plain,(
  $false | $spl8),
  inference(unit_resulting_resolution,[],[f289,f297,f1331,f473])).
fof(f1521,plain,(
  $false | $spl8),
  inference(unit_resulting_resolution,[],[f289,f296,f1331,f473])).
fof(f1518,plain,(
  $false | $spl8),
  inference(unit_resulting_resolution,[],[f492,f492,f1331,f575])).
fof(f1514,plain,(
  $false | $spl8),
  inference(unit_resulting_resolution,[],[f289,f1331])).
fof(f1512,plain,(
  $false | ($spl0 | $spl10 | $spl17)),
  inference(subsumption_resolution,[],[f1511,f1509])).
fof(f1511,plain,(
  s('type.list.list'(sK0),'const.list.NIL_0') = s('type.list.list'(sK0),sK1) | ($spl0 | $spl10)),
  inference(forward_demodulation,[],[f483,f1504])).
fof(f1510,plain,(
  $false | ($spl2 | $spl8)),
  inference(subsumption_resolution,[],[f485,f1331])).
fof(f1507,plain,(
  s('type.list.list'(sK0),'const.list.NIL_0') = s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK2),s('type.list.list'(sK0),'const.list.NIL_0'))))) | $spl14),
  inference(cnf_transformation,[],[f1507_D])).
fof(f1507_D,plain,(
  s('type.list.list'(sK0),'const.list.NIL_0') = s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK2),s('type.list.list'(sK0),'const.list.NIL_0'))))) <=> ~$spl14),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl14])])).
fof(f1509,plain,(
  s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),sK1) | $spl17),
  inference(cnf_transformation,[],[f1509_D])).
fof(f1509_D,plain,(
  s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),sK1) <=> ~$spl17),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl17])])).
fof(f1502,plain,(
  s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),sK1) | s('type.list.list'(sK0),'const.list.NIL_0') = s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK2),s('type.list.list'(sK0),'const.list.NIL_0'))))) | $spl0),
  inference(superposition,[],[f381,f483])).
fof(f1504,plain,(
  s('type.list.list'(sK0),'const.list.NIL_0') = s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK2),s('type.list.list'(sK0),'const.list.NIL_0'))))),s('type.list.list'(sK0),sK4))) | $spl10),
  inference(cnf_transformation,[],[f1504_D])).
fof(f1504_D,plain,(
  s('type.list.list'(sK0),'const.list.NIL_0') = s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK2),s('type.list.list'(sK0),'const.list.NIL_0'))))),s('type.list.list'(sK0),sK4))) <=> ~$spl10),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl10])])).
fof(f1505,plain,(
  ( ! [X6] : (s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),sK1),s('type.list.list'(sK0),X6)))) ) | $spl12),
  inference(cnf_transformation,[],[f1505_D])).
fof(f1505_D,plain,(
  ( ! [X6] : (s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),sK1),s('type.list.list'(sK0),X6)))) ) <=> ~$spl12),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl12])])).
fof(f1494,plain,(
  ( ! [X6] : (s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),sK1),s('type.list.list'(sK0),X6))) | s('type.list.list'(sK0),'const.list.NIL_0') = s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK2),s('type.list.list'(sK0),'const.list.NIL_0'))))),s('type.list.list'(sK0),sK4)))) ) | $spl0),
  inference(superposition,[],[f381,f483])).
fof(f1335,plain,(
  $false | ($spl0 | $spl4)),
  inference(subsumption_resolution,[],[f483,f486])).
fof(f1330,plain,(
  ( ! [X10,X8,X9] : (p(s(bool,'|dollar|exists_1'(s(fun(X8,bool),X9)))) | s(bool,'F_0') = s(bool,happ(s(fun(X8,bool),X9),s(X8,sK8(X10,X9,X8))))) ) | $spl6),
  inference(cnf_transformation,[],[f1330_D])).
fof(f1330_D,plain,(
  ( ! [X10,X8,X9] : (p(s(bool,'|dollar|exists_1'(s(fun(X8,bool),X9)))) | s(bool,'F_0') = s(bool,happ(s(fun(X8,bool),X9),s(X8,sK8(X10,X9,X8))))) ) <=> ~$spl6),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl6])])).
fof(f1331,plain,(
  ( ! [X11] : (~p(s(bool,X11))) ) | $spl8),
  inference(cnf_transformation,[],[f1331_D])).
fof(f1331_D,plain,(
  ( ! [X11] : (~p(s(bool,X11))) ) <=> ~$spl8),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl8])])).
fof(f1332,plain,(
  ( ! [X14,X12,X15,X13] : (~p(s(bool,X15)) | p(s(bool,'|dollar|exists_1'(s(fun(X12,bool),X13)))) | s(bool,'F_0') = s(bool,happ(s(fun(X12,bool),X13),s(X12,sK8(X14,X13,X12))))) ) | $spl2),
  inference(subsumption_resolution,[],[f1324,f307])).
fof(f1324,plain,(
  ( ! [X14,X12,X15,X13] : (~p(s(bool,X15)) | p(s(bool,'|dollar|exists_1'(s(fun(X12,bool),X13)))) | s(bool,'F_0') = s(bool,X15) | s(bool,'F_0') = s(bool,happ(s(fun(X12,bool),X13),s(X12,sK8(X14,X13,X12))))) ) | $spl2),
  inference(superposition,[],[f370,f816])).
fof(f816,plain,(
  ( ! [X0,X1] : (s(bool,X0) = s(bool,X1) | s(bool,'F_0') = s(bool,X1) | s(bool,'F_0') = s(bool,X0)) ) | $spl2),
  inference(superposition,[],[f784,f784])).
fof(f784,plain,(
  ( ! [X4] : (s(bool,X4) = s(bool,'const.bool.IN_2'(s(sK0,sK2),s(fun(sK0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(sK0),sK1))))) | s(bool,'F_0') = s(bool,X4)) ) | $spl2),
  inference(subsumption_resolution,[],[f777,f289])).
fof(f777,plain,(
  ( ! [X4] : (~p(s(bool,'T_0')) | s(bool,X4) = s(bool,'const.bool.IN_2'(s(sK0,sK2),s(fun(sK0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(sK0),sK1))))) | s(bool,'F_0') = s(bool,X4)) ) | $spl2),
  inference(superposition,[],[f730,f501])).
fof(f501,plain,(
  s(bool,'T_0') = s(bool,'const.bool.IN_2'(s(sK0,sK2),s(fun(sK0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(sK0),sK1))))) | $spl2),
  inference(unit_resulting_resolution,[],[f485,f304])).
fof(f1329,plain,(
  ( ! [X10,X8,X11,X9] : (~p(s(bool,X11)) | p(s(bool,'|dollar|exists_1'(s(fun(X8,bool),X9)))) | s(bool,'F_0') = s(bool,happ(s(fun(X8,bool),X9),s(X8,sK8(X10,X9,X8))))) ) | $spl2),
  inference(subsumption_resolution,[],[f1323,f307])).
fof(f1323,plain,(
  ( ! [X10,X8,X11,X9] : (~p(s(bool,X11)) | p(s(bool,'|dollar|exists_1'(s(fun(X8,bool),X9)))) | s(bool,'F_0') = s(bool,happ(s(fun(X8,bool),X9),s(X8,sK8(X10,X9,X8)))) | s(bool,'F_0') = s(bool,X11)) ) | $spl2),
  inference(superposition,[],[f370,f816])).
fof(f486,plain,(
  ( ! [X6,X5] : (s('type.list.list'(sK0),sK1) != s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK2),s('type.list.list'(sK0),'const.list.NIL_0'))))),s('type.list.list'(sK0),X6)))) ) | $spl4),
  inference(cnf_transformation,[],[f486_D])).
fof(f486_D,plain,(
  ( ! [X6,X5] : (s('type.list.list'(sK0),sK1) != s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK2),s('type.list.list'(sK0),'const.list.NIL_0'))))),s('type.list.list'(sK0),X6)))) ) <=> ~$spl4),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl4])])).
fof(f484,plain,(
  ~p(s(bool,'const.bool.IN_2'(s(sK0,sK2),s(fun(sK0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(sK0),sK1)))))) | $spl3),
  inference(cnf_transformation,[],[f484_D])).
fof(f484_D,plain,(
  ~p(s(bool,'const.bool.IN_2'(s(sK0,sK2),s(fun(sK0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(sK0),sK1)))))) <=> ~$spl3),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl3])])).
fof(f287,plain,(
  ( ! [X6,X5] : (~p(s(bool,'const.bool.IN_2'(s(sK0,sK2),s(fun(sK0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(sK0),sK1)))))) | s('type.list.list'(sK0),sK1) != s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK2),s('type.list.list'(sK0),'const.list.NIL_0'))))),s('type.list.list'(sK0),X6)))) )),
  inference(cnf_transformation,[],[f205])).
fof(f205,plain,(
  (! [X5,X6] : s('type.list.list'(sK0),sK1) != s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK2),s('type.list.list'(sK0),'const.list.NIL_0'))))),s('type.list.list'(sK0),X6))) | ~p(s(bool,'const.bool.IN_2'(s(sK0,sK2),s(fun(sK0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(sK0),sK1))))))) & (s('type.list.list'(sK0),sK1) = s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK2),s('type.list.list'(sK0),'const.list.NIL_0'))))),s('type.list.list'(sK0),sK4))) | p(s(bool,'const.bool.IN_2'(s(sK0,sK2),s(fun(sK0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(sK0),sK1)))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2,sK3,sK4])],[f204])).
fof(f204,plain,(
  ? [X0,X1,X2] : ((! [X5,X6] : s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.NIL_0'))))),s('type.list.list'(X0),X6))) | ~p(s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),X1))))))) & (? [X3,X4] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.NIL_0'))))),s('type.list.list'(X0),X4))) | p(s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),X1))))))))),
  inference(rectify,[],[f203])).
fof(f203,plain,(
  ? [X0,X1,X2] : ((! [X3,X4] : s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.NIL_0'))))),s('type.list.list'(X0),X4))) | ~p(s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),X1))))))) & (? [X3,X4] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.NIL_0'))))),s('type.list.list'(X0),X4))) | p(s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),X1))))))))),
  inference(nnf_transformation,[],[f175])).
fof(f175,plain,(
  ? [X0,X1,X2] : (! [X3,X4] : s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.NIL_0'))))),s('type.list.list'(X0),X4))) <~> ~p(s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),X1)))))))),
  inference(ennf_transformation,[],[f72])).
fof(f72,plain,(
  ~! [X0,X1,X2] : (! [X3,X4] : s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.NIL_0'))))),s('type.list.list'(X0),X4))) <=> ~p(s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),X1)))))))),
  inference(flattening,[],[f71])).
fof(f71,plain,(
  ~! [X0] : ! [X1,X2] : (! [X3,X4] : ~s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.NIL_0'))))),s('type.list.list'(X0),X4))) <=> ~p(s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),X1)))))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : ! [X7,X8] : (! [X9,X10] : ~s('type.list.list'(X6),X7) = s('type.list.list'(X6),'const.list.APPEND_2'(s('type.list.list'(X6),'const.list.APPEND_2'(s('type.list.list'(X6),X9),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X8),s('type.list.list'(X6),'const.list.NIL_0'))))),s('type.list.list'(X6),X10))) <=> ~p(s(bool,'const.bool.IN_2'(s(X6,X8),s(fun(X6,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X6),X7)))))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : ! [X7,X8] : (! [X9,X10] : ~s('type.list.list'(X6),X7) = s('type.list.list'(X6),'const.list.APPEND_2'(s('type.list.list'(X6),'const.list.APPEND_2'(s('type.list.list'(X6),X9),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X8),s('type.list.list'(X6),'const.list.NIL_0'))))),s('type.list.list'(X6),X10))) <=> ~p(s(bool,'const.bool.IN_2'(s(X6,X8),s(fun(X6,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X6),X7)))))))),
  file('thm.rich_list.MEM_SING_APPEND','thm.rich_list.MEM_SING_APPEND')).
fof(f483,plain,(
  s('type.list.list'(sK0),sK1) = s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK2),s('type.list.list'(sK0),'const.list.NIL_0'))))),s('type.list.list'(sK0),sK4))) | $spl0),
  inference(cnf_transformation,[],[f483_D])).
fof(f483_D,plain,(
  s('type.list.list'(sK0),sK1) = s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK2),s('type.list.list'(sK0),'const.list.NIL_0'))))),s('type.list.list'(sK0),sK4))) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f485,plain,(
  p(s(bool,'const.bool.IN_2'(s(sK0,sK2),s(fun(sK0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(sK0),sK1)))))) | $spl2),
  inference(cnf_transformation,[],[f485_D])).
fof(f485_D,plain,(
  p(s(bool,'const.bool.IN_2'(s(sK0,sK2),s(fun(sK0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(sK0),sK1)))))) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f288,plain,(
  p(s(bool,'const.bool.IN_2'(s(sK0,sK2),s(fun(sK0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(sK0),sK1)))))) | s('type.list.list'(sK0),sK1) = s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK2),s('type.list.list'(sK0),'const.list.NIL_0'))))),s('type.list.list'(sK0),sK4)))),
  inference(cnf_transformation,[],[f205])).
% SZS output end Proof for thm.rich_list
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 270
% Passive clauses: 3166
% Generated clauses: 19949
% Final active clauses: 143
% Final passive clauses: 2008
% Input formulas: 69
% Initial clauses: 175
% 
% Duplicate literals: 298
% Trivial inequalities: 114
% Fw subsumption resolutions: 1003
% Fw demodulations: 5277
% Bw demodulations: 580
% Condensations: 455
% Global subsumptions: 48
% 
% Simple tautologies: 226
% Equational tautologies: 147
% Forward subsumptions: 9036
% Fw demodulations to eq. taut.: 32
% Bw demodulations to eq. taut.: 3
% 
% Unit resulting resolution: 2788
% Factoring: 1
% Forward superposition: 4468
% Backward superposition: 3796
% Self superposition: 136
% Equality factoring: 71
% Equality resolution: 42
% 
% Split clauses: 18
% Split components: 37
% SAT solver clauses: 3381
% SAT solver unit clauses: 130
% SAT solver binary clauses: 1045
% 
% Sat splits: 18
% Sat splitting refutations: 129
% 
% Memory used [KB]: 21236
% Time elapsed: 1.148 s
% ------------------------------
% ------------------------------
% Success in time 2.47 s
