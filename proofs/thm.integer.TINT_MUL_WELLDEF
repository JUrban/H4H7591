Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 300 next slice time: 5
dis+11_7_3 on thm.integer
% (72318)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 149
% Passive clauses: 1889
% Generated clauses: 23744
% Final active clauses: 138
% Final passive clauses: 1571
% Input formulas: 13
% Initial clauses: 19
% 
% Duplicate literals: 1325
% Trivial inequalities: 249
% Fw subsumption resolutions: 3785
% Fw demodulations: 3199
% Bw demodulations: 10
% 
% Simple tautologies: 470
% Equational tautologies: 58
% Forward subsumptions: 10670
% 
% Binary resolution: 517
% Forward superposition: 5761
% Backward superposition: 8242
% Self superposition: 205
% Equality factoring: 161
% Equality resolution: 24
% 
% Split clauses: 1408
% Split components: 2900
% SAT solver clauses: 2208
% SAT solver unit clauses: 40
% SAT solver binary clauses: 397
% 
% Sat splits: 1407
% Sat splitting refutations: 3
% 
% TWLsolver clauses: 2204
% TWLsolver calls for satisfiability: 185
% 
% Memory used [KB]: 10362
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 293 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.integer
% (72339)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 122
% Passive clauses: 508
% Generated clauses: 12418
% Final active clauses: 92
% Final passive clauses: 290
% Input formulas: 13
% Initial clauses: 19
% 
% Duplicate literals: 1247
% Trivial inequalities: 104
% Fw subsumption resolutions: 1306
% Fw demodulations: 995
% Bw demodulations: 99
% Condensations: 1747
% 
% Simple tautologies: 257
% Equational tautologies: 41
% Forward subsumptions: 5001
% Bw demodulations to eq. taut.: 16
% 
% Binary resolution: 265
% Factoring: 1
% Forward superposition: 3117
% Backward superposition: 2741
% Self superposition: 138
% Equality factoring: 116
% Equality resolution: 15
% 
% Split clauses: 215
% Split components: 431
% SAT solver clauses: 1214
% SAT solver unit clauses: 26
% SAT solver binary clauses: 54
% 
% Sat splits: 215
% Sat splitting refutations: 16
% 
% TWLsolver clauses: 1214
% TWLsolver calls for satisfiability: 160
% 
% Memory used [KB]: 7675
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 286 next slice time: 103
lrs+11_2_br=off:cond=on:fde=none:gs=on:gsaa=full_model:lwlo=on:nwc=2:sas=minisat:stl=30:ssfp=100000:ssfq=1.4:smm=sco:ssnc=none:sp=occurrence:urr=on_98 on thm.integer
% (72361)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 414
% Passive clauses: 2790
% Generated clauses: 138801
% Final active clauses: 128
% Final passive clauses: 763
% Input formulas: 13
% Initial clauses: 19
% Discarded non-redundant clauses: 2951
% 
% Duplicate literals: 8758
% Trivial inequalities: 1420
% Fw subsumption resolutions: 16524
% Fw demodulations: 13273
% Bw demodulations: 1127
% Condensations: 19837
% Global subsumptions: 155
% 
% Simple tautologies: 1623
% Equational tautologies: 580
% Forward subsumptions: 71016
% Fw demodulations to eq. taut.: 37
% Bw demodulations to eq. taut.: 39
% 
% Unit resulting resolution: 2150
% Forward superposition: 38512
% Backward superposition: 33846
% Self superposition: 870
% Equality factoring: 552
% Equality resolution: 80
% 
% Split clauses: 336
% Split components: 685
% SAT solver clauses: 3773
% SAT solver unit clauses: 138
% SAT solver binary clauses: 490
% 
% Sat splits: 336
% Sat splitting refutations: 153
% 
% Memory used [KB]: 58975
% Time elapsed: 10.400 s
% ------------------------------
% ------------------------------
% remaining time: 182 next slice time: 39
dis+11_5_fde=none:nwc=1:sas=minisat:sd=1:ss=axioms:st=5.0:sos=all:sdd=large:sser=off:sfr=on:ssfp=100000:ssfq=2.0:ssnc=none_37 on thm.integer
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.integer
% SZS output start Proof for thm.integer
fof(f953,plain,(
  $false),
  inference(subsumption_resolution,[],[f933,f254])).
fof(f254,plain,(
  ( ! [X0] : (p(s(bool,'const.integer.tint_eq_2'(s('type.pair.prod'('type.num.num','type.num.num'),'const.integer.tint_mul_2'(s('type.pair.prod'('type.num.num','type.num.num'),X0),s('type.pair.prod'('type.num.num','type.num.num'),sK0))),s('type.pair.prod'('type.num.num','type.num.num'),'const.integer.tint_mul_2'(s('type.pair.prod'('type.num.num','type.num.num'),sK1),s('type.pair.prod'('type.num.num','type.num.num'),X0))))))) )),
  inference(superposition,[],[f56,f40])).
fof(f40,plain,(
  ( ! [X0,X1] : (s('type.pair.prod'('type.num.num','type.num.num'),'const.integer.tint_mul_2'(s('type.pair.prod'('type.num.num','type.num.num'),X0),s('type.pair.prod'('type.num.num','type.num.num'),X1))) = s('type.pair.prod'('type.num.num','type.num.num'),'const.integer.tint_mul_2'(s('type.pair.prod'('type.num.num','type.num.num'),X1),s('type.pair.prod'('type.num.num','type.num.num'),X0)))) )),
  inference(cnf_transformation,[],[f17])).
fof(f17,plain,(
  ! [X0,X1] : s('type.pair.prod'('type.num.num','type.num.num'),'const.integer.tint_mul_2'(s('type.pair.prod'('type.num.num','type.num.num'),X0),s('type.pair.prod'('type.num.num','type.num.num'),X1))) = s('type.pair.prod'('type.num.num','type.num.num'),'const.integer.tint_mul_2'(s('type.pair.prod'('type.num.num','type.num.num'),X1),s('type.pair.prod'('type.num.num','type.num.num'),X0)))),
  inference(rectify,[],[f13])).
fof(f13,axiom,(
  ! [X11,X12] : s('type.pair.prod'('type.num.num','type.num.num'),'const.integer.tint_mul_2'(s('type.pair.prod'('type.num.num','type.num.num'),X11),s('type.pair.prod'('type.num.num','type.num.num'),X12))) = s('type.pair.prod'('type.num.num','type.num.num'),'const.integer.tint_mul_2'(s('type.pair.prod'('type.num.num','type.num.num'),X12),s('type.pair.prod'('type.num.num','type.num.num'),X11)))),
  file('thm.integer.TINT_MUL_WELLDEF','thm.integer.TINT_MUL_SYM')).
fof(f56,plain,(
  ( ! [X2] : (p(s(bool,'const.integer.tint_eq_2'(s('type.pair.prod'('type.num.num','type.num.num'),'const.integer.tint_mul_2'(s('type.pair.prod'('type.num.num','type.num.num'),sK0),s('type.pair.prod'('type.num.num','type.num.num'),X2))),s('type.pair.prod'('type.num.num','type.num.num'),'const.integer.tint_mul_2'(s('type.pair.prod'('type.num.num','type.num.num'),sK1),s('type.pair.prod'('type.num.num','type.num.num'),X2))))))) )),
  inference(resolution,[],[f36,f39])).
fof(f39,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,'const.integer.tint_eq_2'(s('type.pair.prod'('type.num.num','type.num.num'),'const.integer.tint_mul_2'(s('type.pair.prod'('type.num.num','type.num.num'),X0),s('type.pair.prod'('type.num.num','type.num.num'),X2))),s('type.pair.prod'('type.num.num','type.num.num'),'const.integer.tint_mul_2'(s('type.pair.prod'('type.num.num','type.num.num'),X1),s('type.pair.prod'('type.num.num','type.num.num'),X2)))))) | ~p(s(bool,'const.integer.tint_eq_2'(s('type.pair.prod'('type.num.num','type.num.num'),X0),s('type.pair.prod'('type.num.num','type.num.num'),X1))))) )),
  inference(cnf_transformation,[],[f28])).
fof(f28,plain,(
  ! [X0,X1,X2] : (~p(s(bool,'const.integer.tint_eq_2'(s('type.pair.prod'('type.num.num','type.num.num'),X0),s('type.pair.prod'('type.num.num','type.num.num'),X1)))) | p(s(bool,'const.integer.tint_eq_2'(s('type.pair.prod'('type.num.num','type.num.num'),'const.integer.tint_mul_2'(s('type.pair.prod'('type.num.num','type.num.num'),X0),s('type.pair.prod'('type.num.num','type.num.num'),X2))),s('type.pair.prod'('type.num.num','type.num.num'),'const.integer.tint_mul_2'(s('type.pair.prod'('type.num.num','type.num.num'),X1),s('type.pair.prod'('type.num.num','type.num.num'),X2)))))))),
  inference(ennf_transformation,[],[f16])).
fof(f16,plain,(
  ! [X0,X1,X2] : (p(s(bool,'const.integer.tint_eq_2'(s('type.pair.prod'('type.num.num','type.num.num'),X0),s('type.pair.prod'('type.num.num','type.num.num'),X1)))) => p(s(bool,'const.integer.tint_eq_2'(s('type.pair.prod'('type.num.num','type.num.num'),'const.integer.tint_mul_2'(s('type.pair.prod'('type.num.num','type.num.num'),X0),s('type.pair.prod'('type.num.num','type.num.num'),X2))),s('type.pair.prod'('type.num.num','type.num.num'),'const.integer.tint_mul_2'(s('type.pair.prod'('type.num.num','type.num.num'),X1),s('type.pair.prod'('type.num.num','type.num.num'),X2)))))))),
  inference(rectify,[],[f14])).
fof(f14,axiom,(
  ! [X6,X7,X12] : (p(s(bool,'const.integer.tint_eq_2'(s('type.pair.prod'('type.num.num','type.num.num'),X6),s('type.pair.prod'('type.num.num','type.num.num'),X7)))) => p(s(bool,'const.integer.tint_eq_2'(s('type.pair.prod'('type.num.num','type.num.num'),'const.integer.tint_mul_2'(s('type.pair.prod'('type.num.num','type.num.num'),X6),s('type.pair.prod'('type.num.num','type.num.num'),X12))),s('type.pair.prod'('type.num.num','type.num.num'),'const.integer.tint_mul_2'(s('type.pair.prod'('type.num.num','type.num.num'),X7),s('type.pair.prod'('type.num.num','type.num.num'),X12)))))))),
  file('thm.integer.TINT_MUL_WELLDEF','thm.integer.TINT_MUL_WELLDEFR')).
fof(f36,plain,(
  p(s(bool,'const.integer.tint_eq_2'(s('type.pair.prod'('type.num.num','type.num.num'),sK0),s('type.pair.prod'('type.num.num','type.num.num'),sK1))))),
  inference(cnf_transformation,[],[f31])).
fof(f31,plain,(
  p(s(bool,'const.integer.tint_eq_2'(s('type.pair.prod'('type.num.num','type.num.num'),sK0),s('type.pair.prod'('type.num.num','type.num.num'),sK1)))) & p(s(bool,'const.integer.tint_eq_2'(s('type.pair.prod'('type.num.num','type.num.num'),sK2),s('type.pair.prod'('type.num.num','type.num.num'),sK3)))) & ~p(s(bool,'const.integer.tint_eq_2'(s('type.pair.prod'('type.num.num','type.num.num'),'const.integer.tint_mul_2'(s('type.pair.prod'('type.num.num','type.num.num'),sK0),s('type.pair.prod'('type.num.num','type.num.num'),sK2))),s('type.pair.prod'('type.num.num','type.num.num'),'const.integer.tint_mul_2'(s('type.pair.prod'('type.num.num','type.num.num'),sK1),s('type.pair.prod'('type.num.num','type.num.num'),sK3))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2,sK3])],[f27])).
fof(f27,plain,(
  ? [X0,X1,X2,X3] : (p(s(bool,'const.integer.tint_eq_2'(s('type.pair.prod'('type.num.num','type.num.num'),X0),s('type.pair.prod'('type.num.num','type.num.num'),X1)))) & p(s(bool,'const.integer.tint_eq_2'(s('type.pair.prod'('type.num.num','type.num.num'),X2),s('type.pair.prod'('type.num.num','type.num.num'),X3)))) & ~p(s(bool,'const.integer.tint_eq_2'(s('type.pair.prod'('type.num.num','type.num.num'),'const.integer.tint_mul_2'(s('type.pair.prod'('type.num.num','type.num.num'),X0),s('type.pair.prod'('type.num.num','type.num.num'),X2))),s('type.pair.prod'('type.num.num','type.num.num'),'const.integer.tint_mul_2'(s('type.pair.prod'('type.num.num','type.num.num'),X1),s('type.pair.prod'('type.num.num','type.num.num'),X3)))))))),
  inference(flattening,[],[f26])).
fof(f26,plain,(
  ? [X0,X1,X2,X3] : ((p(s(bool,'const.integer.tint_eq_2'(s('type.pair.prod'('type.num.num','type.num.num'),X0),s('type.pair.prod'('type.num.num','type.num.num'),X1)))) & p(s(bool,'const.integer.tint_eq_2'(s('type.pair.prod'('type.num.num','type.num.num'),X2),s('type.pair.prod'('type.num.num','type.num.num'),X3))))) & ~p(s(bool,'const.integer.tint_eq_2'(s('type.pair.prod'('type.num.num','type.num.num'),'const.integer.tint_mul_2'(s('type.pair.prod'('type.num.num','type.num.num'),X0),s('type.pair.prod'('type.num.num','type.num.num'),X2))),s('type.pair.prod'('type.num.num','type.num.num'),'const.integer.tint_mul_2'(s('type.pair.prod'('type.num.num','type.num.num'),X1),s('type.pair.prod'('type.num.num','type.num.num'),X3)))))))),
  inference(ennf_transformation,[],[f15])).
fof(f15,plain,(
  ~! [X0,X1,X2,X3] : ((p(s(bool,'const.integer.tint_eq_2'(s('type.pair.prod'('type.num.num','type.num.num'),X0),s('type.pair.prod'('type.num.num','type.num.num'),X1)))) & p(s(bool,'const.integer.tint_eq_2'(s('type.pair.prod'('type.num.num','type.num.num'),X2),s('type.pair.prod'('type.num.num','type.num.num'),X3))))) => p(s(bool,'const.integer.tint_eq_2'(s('type.pair.prod'('type.num.num','type.num.num'),'const.integer.tint_mul_2'(s('type.pair.prod'('type.num.num','type.num.num'),X0),s('type.pair.prod'('type.num.num','type.num.num'),X2))),s('type.pair.prod'('type.num.num','type.num.num'),'const.integer.tint_mul_2'(s('type.pair.prod'('type.num.num','type.num.num'),X1),s('type.pair.prod'('type.num.num','type.num.num'),X3)))))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7,X8,X9] : ((p(s(bool,'const.integer.tint_eq_2'(s('type.pair.prod'('type.num.num','type.num.num'),X6),s('type.pair.prod'('type.num.num','type.num.num'),X7)))) & p(s(bool,'const.integer.tint_eq_2'(s('type.pair.prod'('type.num.num','type.num.num'),X8),s('type.pair.prod'('type.num.num','type.num.num'),X9))))) => p(s(bool,'const.integer.tint_eq_2'(s('type.pair.prod'('type.num.num','type.num.num'),'const.integer.tint_mul_2'(s('type.pair.prod'('type.num.num','type.num.num'),X6),s('type.pair.prod'('type.num.num','type.num.num'),X8))),s('type.pair.prod'('type.num.num','type.num.num'),'const.integer.tint_mul_2'(s('type.pair.prod'('type.num.num','type.num.num'),X7),s('type.pair.prod'('type.num.num','type.num.num'),X9)))))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7,X8,X9] : ((p(s(bool,'const.integer.tint_eq_2'(s('type.pair.prod'('type.num.num','type.num.num'),X6),s('type.pair.prod'('type.num.num','type.num.num'),X7)))) & p(s(bool,'const.integer.tint_eq_2'(s('type.pair.prod'('type.num.num','type.num.num'),X8),s('type.pair.prod'('type.num.num','type.num.num'),X9))))) => p(s(bool,'const.integer.tint_eq_2'(s('type.pair.prod'('type.num.num','type.num.num'),'const.integer.tint_mul_2'(s('type.pair.prod'('type.num.num','type.num.num'),X6),s('type.pair.prod'('type.num.num','type.num.num'),X8))),s('type.pair.prod'('type.num.num','type.num.num'),'const.integer.tint_mul_2'(s('type.pair.prod'('type.num.num','type.num.num'),X7),s('type.pair.prod'('type.num.num','type.num.num'),X9)))))))),
  file('thm.integer.TINT_MUL_WELLDEF','thm.integer.TINT_MUL_WELLDEF')).
fof(f933,plain,(
  ~p(s(bool,'const.integer.tint_eq_2'(s('type.pair.prod'('type.num.num','type.num.num'),'const.integer.tint_mul_2'(s('type.pair.prod'('type.num.num','type.num.num'),sK3),s('type.pair.prod'('type.num.num','type.num.num'),sK0))),s('type.pair.prod'('type.num.num','type.num.num'),'const.integer.tint_mul_2'(s('type.pair.prod'('type.num.num','type.num.num'),sK1),s('type.pair.prod'('type.num.num','type.num.num'),sK3))))))),
  inference(resolution,[],[f298,f134])).
fof(f134,plain,(
  ( ! [X0] : (~p(s(bool,'const.integer.tint_eq_2'(s('type.pair.prod'('type.num.num','type.num.num'),'const.integer.tint_mul_2'(s('type.pair.prod'('type.num.num','type.num.num'),sK0),s('type.pair.prod'('type.num.num','type.num.num'),sK2))),s('type.pair.prod'('type.num.num','type.num.num'),X0)))) | ~p(s(bool,'const.integer.tint_eq_2'(s('type.pair.prod'('type.num.num','type.num.num'),X0),s('type.pair.prod'('type.num.num','type.num.num'),'const.integer.tint_mul_2'(s('type.pair.prod'('type.num.num','type.num.num'),sK1),s('type.pair.prod'('type.num.num','type.num.num'),sK3))))))) )),
  inference(resolution,[],[f38,f41])).
fof(f41,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,'const.integer.tint_eq_2'(s('type.pair.prod'('type.num.num','type.num.num'),X0),s('type.pair.prod'('type.num.num','type.num.num'),X2)))) | ~p(s(bool,'const.integer.tint_eq_2'(s('type.pair.prod'('type.num.num','type.num.num'),X1),s('type.pair.prod'('type.num.num','type.num.num'),X2)))) | ~p(s(bool,'const.integer.tint_eq_2'(s('type.pair.prod'('type.num.num','type.num.num'),X0),s('type.pair.prod'('type.num.num','type.num.num'),X1))))) )),
  inference(cnf_transformation,[],[f30])).
fof(f30,plain,(
  ! [X0,X1,X2] : (~p(s(bool,'const.integer.tint_eq_2'(s('type.pair.prod'('type.num.num','type.num.num'),X0),s('type.pair.prod'('type.num.num','type.num.num'),X1)))) | ~p(s(bool,'const.integer.tint_eq_2'(s('type.pair.prod'('type.num.num','type.num.num'),X1),s('type.pair.prod'('type.num.num','type.num.num'),X2)))) | p(s(bool,'const.integer.tint_eq_2'(s('type.pair.prod'('type.num.num','type.num.num'),X0),s('type.pair.prod'('type.num.num','type.num.num'),X2)))))),
  inference(flattening,[],[f29])).
fof(f29,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,'const.integer.tint_eq_2'(s('type.pair.prod'('type.num.num','type.num.num'),X0),s('type.pair.prod'('type.num.num','type.num.num'),X1)))) | ~p(s(bool,'const.integer.tint_eq_2'(s('type.pair.prod'('type.num.num','type.num.num'),X1),s('type.pair.prod'('type.num.num','type.num.num'),X2))))) | p(s(bool,'const.integer.tint_eq_2'(s('type.pair.prod'('type.num.num','type.num.num'),X0),s('type.pair.prod'('type.num.num','type.num.num'),X2)))))),
  inference(ennf_transformation,[],[f18])).
fof(f18,plain,(
  ! [X0,X1,X2] : ((p(s(bool,'const.integer.tint_eq_2'(s('type.pair.prod'('type.num.num','type.num.num'),X0),s('type.pair.prod'('type.num.num','type.num.num'),X1)))) & p(s(bool,'const.integer.tint_eq_2'(s('type.pair.prod'('type.num.num','type.num.num'),X1),s('type.pair.prod'('type.num.num','type.num.num'),X2))))) => p(s(bool,'const.integer.tint_eq_2'(s('type.pair.prod'('type.num.num','type.num.num'),X0),s('type.pair.prod'('type.num.num','type.num.num'),X2)))))),
  inference(rectify,[],[f12])).
fof(f12,axiom,(
  ! [X11,X12,X13] : ((p(s(bool,'const.integer.tint_eq_2'(s('type.pair.prod'('type.num.num','type.num.num'),X11),s('type.pair.prod'('type.num.num','type.num.num'),X12)))) & p(s(bool,'const.integer.tint_eq_2'(s('type.pair.prod'('type.num.num','type.num.num'),X12),s('type.pair.prod'('type.num.num','type.num.num'),X13))))) => p(s(bool,'const.integer.tint_eq_2'(s('type.pair.prod'('type.num.num','type.num.num'),X11),s('type.pair.prod'('type.num.num','type.num.num'),X13)))))),
  file('thm.integer.TINT_MUL_WELLDEF','thm.integer.TINT_EQ_TRANS')).
fof(f38,plain,(
  ~p(s(bool,'const.integer.tint_eq_2'(s('type.pair.prod'('type.num.num','type.num.num'),'const.integer.tint_mul_2'(s('type.pair.prod'('type.num.num','type.num.num'),sK0),s('type.pair.prod'('type.num.num','type.num.num'),sK2))),s('type.pair.prod'('type.num.num','type.num.num'),'const.integer.tint_mul_2'(s('type.pair.prod'('type.num.num','type.num.num'),sK1),s('type.pair.prod'('type.num.num','type.num.num'),sK3))))))),
  inference(cnf_transformation,[],[f31])).
fof(f298,plain,(
  ( ! [X0] : (p(s(bool,'const.integer.tint_eq_2'(s('type.pair.prod'('type.num.num','type.num.num'),'const.integer.tint_mul_2'(s('type.pair.prod'('type.num.num','type.num.num'),X0),s('type.pair.prod'('type.num.num','type.num.num'),sK2))),s('type.pair.prod'('type.num.num','type.num.num'),'const.integer.tint_mul_2'(s('type.pair.prod'('type.num.num','type.num.num'),sK3),s('type.pair.prod'('type.num.num','type.num.num'),X0))))))) )),
  inference(superposition,[],[f70,f40])).
fof(f70,plain,(
  ( ! [X2] : (p(s(bool,'const.integer.tint_eq_2'(s('type.pair.prod'('type.num.num','type.num.num'),'const.integer.tint_mul_2'(s('type.pair.prod'('type.num.num','type.num.num'),sK2),s('type.pair.prod'('type.num.num','type.num.num'),X2))),s('type.pair.prod'('type.num.num','type.num.num'),'const.integer.tint_mul_2'(s('type.pair.prod'('type.num.num','type.num.num'),sK3),s('type.pair.prod'('type.num.num','type.num.num'),X2))))))) )),
  inference(resolution,[],[f37,f39])).
fof(f37,plain,(
  p(s(bool,'const.integer.tint_eq_2'(s('type.pair.prod'('type.num.num','type.num.num'),sK2),s('type.pair.prod'('type.num.num','type.num.num'),sK3))))),
  inference(cnf_transformation,[],[f31])).
% SZS output end Proof for thm.integer
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 59
% Passive clauses: 286
% Generated clauses: 888
% Final active clauses: 52
% Final passive clauses: 186
% Input formulas: 13
% Initial clauses: 18
% 
% Selected by SInE selection: 12
% SInE iterations: 1
% 
% Trivial inequalities: 31
% Fw subsumption resolutions: 70
% Fw demodulations: 66
% Bw demodulations: 7
% 
% Simple tautologies: 2
% Forward subsumptions: 464
% 
% Binary resolution: 233
% Forward superposition: 328
% Backward superposition: 146
% 
% Split clauses: 5
% Split components: 10
% SAT solver clauses: 6
% SAT solver binary clauses: 5
% 
% Sat splits: 5
% 
% Memory used [KB]: 1151
% Time elapsed: 0.044 s
% ------------------------------
% ------------------------------
% Success in time 11.722 s
