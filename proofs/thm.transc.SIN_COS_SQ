Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 300 next slice time: 5
dis+11_7_3 on thm.transc
% (54232)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 141
% Passive clauses: 1593
% Generated clauses: 26530
% Final active clauses: 121
% Final passive clauses: 1296
% Input formulas: 20
% Initial clauses: 38
% 
% Duplicate literals: 1264
% Trivial inequalities: 360
% Fw subsumption resolutions: 4109
% Fw demodulations: 3385
% Bw demodulations: 16
% 
% Simple tautologies: 535
% Equational tautologies: 71
% Forward subsumptions: 12706
% Bw demodulations to eq. taut.: 3
% 
% Binary resolution: 161
% Forward superposition: 7794
% Backward superposition: 8680
% Self superposition: 296
% Equality factoring: 205
% Equality resolution: 40
% 
% Split clauses: 1271
% Split components: 2603
% SAT solver clauses: 2241
% SAT solver unit clauses: 27
% SAT solver binary clauses: 172
% 
% Sat splits: 1271
% Sat splitting refutations: 2
% 
% TWLsolver clauses: 2240
% TWLsolver calls for satisfiability: 167
% 
% Memory used [KB]: 11001
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 293 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.transc
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.transc
% SZS output start Proof for thm.transc
fof(f852,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f846,f599,f606,f102,f129,f677,f679,f70,f109,f645,f662,f74,f118,f185,f186,f105,f131,f816,f818,f71,f115,f76,f120,f133,f137,f69,f111,f78,f121,f134,f139,f68,f113,f787,f789])).
fof(f789,plain,(
  s('type.realax.real',sK0) = s('type.realax.real','const.transc.sqrt_1'(s('type.realax.real','const.real.pow_2'(s('type.realax.real',sK0),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl126),
  inference(cnf_transformation,[],[f789_D])).
fof(f789_D,plain,(
  s('type.realax.real',sK0) = s('type.realax.real','const.transc.sqrt_1'(s('type.realax.real','const.real.pow_2'(s('type.realax.real',sK0),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) <=> ~$spl126),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl126])])).
fof(f787,plain,(
  s('type.realax.real',sK0) = s('type.realax.real','const.transc.sqrt_1'(s('type.realax.real','const.real.pow_2'(s('type.realax.real',sK0),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | ($spl6 | $spl34 | $spl88)),
  inference(subsumption_resolution,[],[f774,f115])).
fof(f774,plain,(
  ~p(s(bool,'T_0')) | s('type.realax.real',sK0) = s('type.realax.real','const.transc.sqrt_1'(s('type.realax.real','const.real.pow_2'(s('type.realax.real',sK0),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | ($spl34 | $spl88)),
  inference(superposition,[],[f606,f139])).
fof(f113,plain,(
  p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.realax.real',sK0)))) | $spl4),
  inference(cnf_transformation,[],[f113_D])).
fof(f113_D,plain,(
  p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.realax.real',sK0)))) <=> ~$spl4),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl4])])).
fof(f68,plain,(
  p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.realax.real',sK0))))),
  inference(cnf_transformation,[],[f50])).
fof(f50,plain,(
  p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.realax.real',sK0)))) & p(s(bool,'const.real.real_lte_2'(s('type.realax.real',sK0),s('type.realax.real','const.transc.pi_0')))) & s('type.realax.real','const.transc.sin_1'(s('type.realax.real',sK0))) != s('type.realax.real','const.transc.sqrt_1'(s('type.realax.real','const.real.real_sub_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.realax.real','const.real.pow_2'(s('type.realax.real','const.transc.cos_1'(s('type.realax.real',sK0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0])],[f44])).
fof(f44,plain,(
  ? [X0] : (p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.realax.real',X0)))) & p(s(bool,'const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real','const.transc.pi_0')))) & s('type.realax.real','const.transc.sin_1'(s('type.realax.real',X0))) != s('type.realax.real','const.transc.sqrt_1'(s('type.realax.real','const.real.real_sub_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.realax.real','const.real.pow_2'(s('type.realax.real','const.transc.cos_1'(s('type.realax.real',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),
  inference(flattening,[],[f43])).
fof(f43,plain,(
  ? [X0] : ((p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.realax.real',X0)))) & p(s(bool,'const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real','const.transc.pi_0'))))) & s('type.realax.real','const.transc.sin_1'(s('type.realax.real',X0))) != s('type.realax.real','const.transc.sqrt_1'(s('type.realax.real','const.real.real_sub_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.realax.real','const.real.pow_2'(s('type.realax.real','const.transc.cos_1'(s('type.realax.real',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),
  inference(ennf_transformation,[],[f22])).
fof(f22,plain,(
  ~! [X0] : ((p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.realax.real',X0)))) & p(s(bool,'const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real','const.transc.pi_0'))))) => s('type.realax.real','const.transc.sin_1'(s('type.realax.real',X0))) = s('type.realax.real','const.transc.sqrt_1'(s('type.realax.real','const.real.real_sub_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.realax.real','const.real.pow_2'(s('type.realax.real','const.transc.cos_1'(s('type.realax.real',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : ((p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.realax.real',X6)))) & p(s(bool,'const.real.real_lte_2'(s('type.realax.real',X6),s('type.realax.real','const.transc.pi_0'))))) => s('type.realax.real','const.transc.sin_1'(s('type.realax.real',X6))) = s('type.realax.real','const.transc.sqrt_1'(s('type.realax.real','const.real.real_sub_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.realax.real','const.real.pow_2'(s('type.realax.real','const.transc.cos_1'(s('type.realax.real',X6))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : ((p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.realax.real',X6)))) & p(s(bool,'const.real.real_lte_2'(s('type.realax.real',X6),s('type.realax.real','const.transc.pi_0'))))) => s('type.realax.real','const.transc.sin_1'(s('type.realax.real',X6))) = s('type.realax.real','const.transc.sqrt_1'(s('type.realax.real','const.real.real_sub_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.realax.real','const.real.pow_2'(s('type.realax.real','const.transc.cos_1'(s('type.realax.real',X6))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),
  file('thm.transc.SIN_COS_SQ','thm.transc.SIN_COS_SQ')).
fof(f139,plain,(
  s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.realax.real',sK0))) | $spl34),
  inference(cnf_transformation,[],[f139_D])).
fof(f139_D,plain,(
  s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.realax.real',sK0))) <=> ~$spl34),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl34])])).
fof(f134,plain,(
  s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.realax.real',sK0))) | ($spl4 | $spl16)),
  inference(resolution,[],[f121,f113])).
fof(f121,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)) ) | $spl16),
  inference(cnf_transformation,[],[f121_D])).
fof(f121_D,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)) ) <=> ~$spl16),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl16])])).
fof(f78,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f51])).
fof(f51,plain,(
  ! [X0] : ((s(bool,'T_0') != s(bool,X0) | p(s(bool,X0))) & (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f26])).
fof(f26,plain,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) <=> p(s(bool,X0)))),
  inference(rectify,[],[f15])).
fof(f15,axiom,(
  ! [X7] : (s(bool,'T_0') = s(bool,X7) <=> p(s(bool,X7)))),
  file('thm.transc.SIN_COS_SQ','thm.bool.EQ_CLAUSES|split|1')).
fof(f111,plain,(
  p(s(bool,'const.real.real_lte_2'(s('type.realax.real',sK0),s('type.realax.real','const.transc.pi_0')))) | $spl2),
  inference(cnf_transformation,[],[f111_D])).
fof(f111_D,plain,(
  p(s(bool,'const.real.real_lte_2'(s('type.realax.real',sK0),s('type.realax.real','const.transc.pi_0')))) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f69,plain,(
  p(s(bool,'const.real.real_lte_2'(s('type.realax.real',sK0),s('type.realax.real','const.transc.pi_0'))))),
  inference(cnf_transformation,[],[f50])).
fof(f137,plain,(
  s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real',sK0),s('type.realax.real','const.transc.pi_0'))) | $spl32),
  inference(cnf_transformation,[],[f137_D])).
fof(f137_D,plain,(
  s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real',sK0),s('type.realax.real','const.transc.pi_0'))) <=> ~$spl32),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl32])])).
fof(f133,plain,(
  s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real',sK0),s('type.realax.real','const.transc.pi_0'))) | ($spl2 | $spl16)),
  inference(resolution,[],[f121,f111])).
fof(f120,plain,(
  ( ! [X0] : (p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.realax.real','const.transc.sin_1'(s('type.realax.real',X0)))))) | ~p(s(bool,'const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real','const.transc.pi_0')))) | ~p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.realax.real',X0))))) ) | $spl14),
  inference(cnf_transformation,[],[f120_D])).
fof(f120_D,plain,(
  ( ! [X0] : (p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.realax.real','const.transc.sin_1'(s('type.realax.real',X0)))))) | ~p(s(bool,'const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real','const.transc.pi_0')))) | ~p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.realax.real',X0))))) ) <=> ~$spl14),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl14])])).
fof(f76,plain,(
  ( ! [X0] : (p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.realax.real','const.transc.sin_1'(s('type.realax.real',X0)))))) | ~p(s(bool,'const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real','const.transc.pi_0')))) | ~p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.realax.real',X0))))) )),
  inference(cnf_transformation,[],[f46])).
fof(f46,plain,(
  ! [X0] : (~p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.realax.real',X0)))) | ~p(s(bool,'const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real','const.transc.pi_0')))) | p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.realax.real','const.transc.sin_1'(s('type.realax.real',X0)))))))),
  inference(flattening,[],[f45])).
fof(f45,plain,(
  ! [X0] : ((~p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.realax.real',X0)))) | ~p(s(bool,'const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real','const.transc.pi_0'))))) | p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.realax.real','const.transc.sin_1'(s('type.realax.real',X0)))))))),
  inference(ennf_transformation,[],[f25])).
fof(f25,plain,(
  ! [X0] : ((p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.realax.real',X0)))) & p(s(bool,'const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real','const.transc.pi_0'))))) => p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.realax.real','const.transc.sin_1'(s('type.realax.real',X0)))))))),
  inference(rectify,[],[f21])).
fof(f21,axiom,(
  ! [X6] : ((p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.realax.real',X6)))) & p(s(bool,'const.real.real_lte_2'(s('type.realax.real',X6),s('type.realax.real','const.transc.pi_0'))))) => p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.realax.real','const.transc.sin_1'(s('type.realax.real',X6)))))))),
  file('thm.transc.SIN_COS_SQ','thm.transc.SIN_POS_PI_LE')).
fof(f115,plain,(
  p(s(bool,'T_0')) | $spl6),
  inference(cnf_transformation,[],[f115_D])).
fof(f115_D,plain,(
  p(s(bool,'T_0')) <=> ~$spl6),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl6])])).
fof(f71,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f1])).
fof(f1,axiom,(
  p(s(bool,'T_0'))),
  file('thm.transc.SIN_COS_SQ',aHL_TRUTH)).
fof(f818,plain,(
  p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.realax.real','const.transc.sin_1'(s('type.realax.real',sK0)))))) | $spl128),
  inference(cnf_transformation,[],[f818_D])).
fof(f818_D,plain,(
  p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.realax.real','const.transc.sin_1'(s('type.realax.real',sK0)))))) <=> ~$spl128),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl128])])).
fof(f816,plain,(
  p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.realax.real','const.transc.sin_1'(s('type.realax.real',sK0)))))) | ($spl6 | $spl14 | $spl32 | $spl34 | $spl126)),
  inference(subsumption_resolution,[],[f815,f115])).
fof(f815,plain,(
  ~p(s(bool,'T_0')) | p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.realax.real','const.transc.sin_1'(s('type.realax.real',sK0)))))) | ($spl6 | $spl14 | $spl32 | $spl34 | $spl126)),
  inference(forward_demodulation,[],[f814,f139])).
fof(f814,plain,(
  ~p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.realax.real',sK0)))) | p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.realax.real','const.transc.sin_1'(s('type.realax.real',sK0)))))) | ($spl6 | $spl14 | $spl32 | $spl126)),
  inference(forward_demodulation,[],[f813,f789])).
fof(f813,plain,(
  p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.realax.real','const.transc.sin_1'(s('type.realax.real',sK0)))))) | ~p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.realax.real','const.transc.sqrt_1'(s('type.realax.real','const.real.pow_2'(s('type.realax.real',sK0),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | ($spl6 | $spl14 | $spl32 | $spl126)),
  inference(subsumption_resolution,[],[f812,f115])).
fof(f812,plain,(
  ~p(s(bool,'T_0')) | p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.realax.real','const.transc.sin_1'(s('type.realax.real',sK0)))))) | ~p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.realax.real','const.transc.sqrt_1'(s('type.realax.real','const.real.pow_2'(s('type.realax.real',sK0),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | ($spl14 | $spl32 | $spl126)),
  inference(forward_demodulation,[],[f811,f137])).
fof(f811,plain,(
  ~p(s(bool,'const.real.real_lte_2'(s('type.realax.real',sK0),s('type.realax.real','const.transc.pi_0')))) | p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.realax.real','const.transc.sin_1'(s('type.realax.real',sK0)))))) | ~p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.realax.real','const.transc.sqrt_1'(s('type.realax.real','const.real.pow_2'(s('type.realax.real',sK0),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | ($spl14 | $spl126)),
  inference(forward_demodulation,[],[f793,f789])).
fof(f793,plain,(
  p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.realax.real','const.transc.sin_1'(s('type.realax.real',sK0)))))) | ~p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.transc.sqrt_1'(s('type.realax.real','const.real.pow_2'(s('type.realax.real',sK0),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.realax.real','const.transc.pi_0')))) | ~p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.realax.real','const.transc.sqrt_1'(s('type.realax.real','const.real.pow_2'(s('type.realax.real',sK0),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | ($spl14 | $spl126)),
  inference(superposition,[],[f120,f789])).
fof(f131,plain,(
  ( ! [X2,X0,X1] : (s('type.realax.real',X1) != s('type.realax.real','const.realax.real_add_2'(s('type.realax.real',X0),s('type.realax.real',X2))) | s('type.realax.real',X0) = s('type.realax.real','const.real.real_sub_2'(s('type.realax.real',X1),s('type.realax.real',X2)))) ) | $spl28),
  inference(cnf_transformation,[],[f131_D])).
fof(f131_D,plain,(
  ( ! [X2,X0,X1] : (s('type.realax.real',X1) != s('type.realax.real','const.realax.real_add_2'(s('type.realax.real',X0),s('type.realax.real',X2))) | s('type.realax.real',X0) = s('type.realax.real','const.real.real_sub_2'(s('type.realax.real',X1),s('type.realax.real',X2)))) ) <=> ~$spl28),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl28])])).
fof(f105,plain,(
  ( ! [X2,X0,X1] : (s('type.realax.real',X0) = s('type.realax.real','const.real.real_sub_2'(s('type.realax.real',X1),s('type.realax.real',X2))) | s('type.realax.real',X1) != s('type.realax.real','const.realax.real_add_2'(s('type.realax.real',X0),s('type.realax.real',X2)))) )),
  inference(cnf_transformation,[],[f67])).
fof(f67,plain,(
  ! [X0,X1,X2] : ((s('type.realax.real',X0) != s('type.realax.real','const.real.real_sub_2'(s('type.realax.real',X1),s('type.realax.real',X2))) | s('type.realax.real',X1) = s('type.realax.real','const.realax.real_add_2'(s('type.realax.real',X0),s('type.realax.real',X2)))) & (s('type.realax.real',X1) != s('type.realax.real','const.realax.real_add_2'(s('type.realax.real',X0),s('type.realax.real',X2))) | s('type.realax.real',X0) = s('type.realax.real','const.real.real_sub_2'(s('type.realax.real',X1),s('type.realax.real',X2)))))),
  inference(nnf_transformation,[],[f42])).
fof(f42,plain,(
  ! [X0,X1,X2] : (s('type.realax.real',X0) = s('type.realax.real','const.real.real_sub_2'(s('type.realax.real',X1),s('type.realax.real',X2))) <=> s('type.realax.real',X1) = s('type.realax.real','const.realax.real_add_2'(s('type.realax.real',X0),s('type.realax.real',X2))))),
  inference(rectify,[],[f18])).
fof(f18,axiom,(
  ! [X6,X9,X10] : (s('type.realax.real',X6) = s('type.realax.real','const.real.real_sub_2'(s('type.realax.real',X9),s('type.realax.real',X10))) <=> s('type.realax.real',X9) = s('type.realax.real','const.realax.real_add_2'(s('type.realax.real',X6),s('type.realax.real',X10))))),
  file('thm.transc.SIN_COS_SQ','thm.real.REAL_EQ_SUB_LADD')).
fof(f186,plain,(
  ( ! [X0,X1] : (s('type.realax.real',X0) = s('type.realax.real','const.real.real_sub_2'(s('type.realax.real','const.realax.real_add_2'(s('type.realax.real',X0),s('type.realax.real',X1))),s('type.realax.real',X1)))) ) | $spl42),
  inference(cnf_transformation,[],[f186_D])).
fof(f186_D,plain,(
  ( ! [X0,X1] : (s('type.realax.real',X0) = s('type.realax.real','const.real.real_sub_2'(s('type.realax.real','const.realax.real_add_2'(s('type.realax.real',X0),s('type.realax.real',X1))),s('type.realax.real',X1)))) ) <=> ~$spl42),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl42])])).
fof(f185,plain,(
  ( ! [X0,X1] : (s('type.realax.real',X0) = s('type.realax.real','const.real.real_sub_2'(s('type.realax.real','const.realax.real_add_2'(s('type.realax.real',X0),s('type.realax.real',X1))),s('type.realax.real',X1)))) ) | $spl28),
  inference(equality_resolution,[],[f131])).
fof(f118,plain,(
  ( ! [X0] : (s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.realax.real','const.realax.real_add_2'(s('type.realax.real','const.real.pow_2'(s('type.realax.real','const.transc.sin_1'(s('type.realax.real',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.realax.real','const.real.pow_2'(s('type.realax.real','const.transc.cos_1'(s('type.realax.real',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) ) | $spl10),
  inference(cnf_transformation,[],[f118_D])).
fof(f118_D,plain,(
  ( ! [X0] : (s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.realax.real','const.realax.real_add_2'(s('type.realax.real','const.real.pow_2'(s('type.realax.real','const.transc.sin_1'(s('type.realax.real',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.realax.real','const.real.pow_2'(s('type.realax.real','const.transc.cos_1'(s('type.realax.real',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) ) <=> ~$spl10),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl10])])).
fof(f74,plain,(
  ( ! [X0] : (s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.realax.real','const.realax.real_add_2'(s('type.realax.real','const.real.pow_2'(s('type.realax.real','const.transc.sin_1'(s('type.realax.real',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.realax.real','const.real.pow_2'(s('type.realax.real','const.transc.cos_1'(s('type.realax.real',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) )),
  inference(cnf_transformation,[],[f24])).
fof(f24,plain,(
  ! [X0] : s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.realax.real','const.realax.real_add_2'(s('type.realax.real','const.real.pow_2'(s('type.realax.real','const.transc.sin_1'(s('type.realax.real',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.realax.real','const.real.pow_2'(s('type.realax.real','const.transc.cos_1'(s('type.realax.real',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))),
  inference(rectify,[],[f20])).
fof(f20,axiom,(
  ! [X6] : s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.realax.real','const.realax.real_add_2'(s('type.realax.real','const.real.pow_2'(s('type.realax.real','const.transc.sin_1'(s('type.realax.real',X6))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.realax.real','const.real.pow_2'(s('type.realax.real','const.transc.cos_1'(s('type.realax.real',X6))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))),
  file('thm.transc.SIN_COS_SQ','thm.transc.SIN_CIRCLE')).
fof(f662,plain,(
  ( ! [X0] : (s('type.realax.real','const.real.pow_2'(s('type.realax.real','const.transc.sin_1'(s('type.realax.real',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.realax.real','const.real.real_sub_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.realax.real','const.real.pow_2'(s('type.realax.real','const.transc.cos_1'(s('type.realax.real',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) ) | $spl92),
  inference(cnf_transformation,[],[f662_D])).
fof(f662_D,plain,(
  ( ! [X0] : (s('type.realax.real','const.real.pow_2'(s('type.realax.real','const.transc.sin_1'(s('type.realax.real',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.realax.real','const.real.real_sub_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.realax.real','const.real.pow_2'(s('type.realax.real','const.transc.cos_1'(s('type.realax.real',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) ) <=> ~$spl92),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl92])])).
fof(f645,plain,(
  ( ! [X0] : (s('type.realax.real','const.real.pow_2'(s('type.realax.real','const.transc.sin_1'(s('type.realax.real',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.realax.real','const.real.real_sub_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.realax.real','const.real.pow_2'(s('type.realax.real','const.transc.cos_1'(s('type.realax.real',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) ) | ($spl10 | $spl42)),
  inference(superposition,[],[f186,f118])).
fof(f109,plain,(
  s('type.realax.real','const.transc.sin_1'(s('type.realax.real',sK0))) != s('type.realax.real','const.transc.sqrt_1'(s('type.realax.real','const.real.real_sub_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.realax.real','const.real.pow_2'(s('type.realax.real','const.transc.cos_1'(s('type.realax.real',sK0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | $spl1),
  inference(cnf_transformation,[],[f109_D])).
fof(f109_D,plain,(
  s('type.realax.real','const.transc.sin_1'(s('type.realax.real',sK0))) != s('type.realax.real','const.transc.sqrt_1'(s('type.realax.real','const.real.real_sub_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.realax.real','const.real.pow_2'(s('type.realax.real','const.transc.cos_1'(s('type.realax.real',sK0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) <=> ~$spl1),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1])])).
fof(f70,plain,(
  s('type.realax.real','const.transc.sin_1'(s('type.realax.real',sK0))) != s('type.realax.real','const.transc.sqrt_1'(s('type.realax.real','const.real.real_sub_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.realax.real','const.real.pow_2'(s('type.realax.real','const.transc.cos_1'(s('type.realax.real',sK0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))),
  inference(cnf_transformation,[],[f50])).
fof(f679,plain,(
  s('type.realax.real','const.transc.sin_1'(s('type.realax.real',sK0))) != s('type.realax.real','const.transc.sqrt_1'(s('type.realax.real','const.real.pow_2'(s('type.realax.real','const.transc.sin_1'(s('type.realax.real',sK0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl101),
  inference(cnf_transformation,[],[f679_D])).
fof(f679_D,plain,(
  s('type.realax.real','const.transc.sin_1'(s('type.realax.real',sK0))) != s('type.realax.real','const.transc.sqrt_1'(s('type.realax.real','const.real.pow_2'(s('type.realax.real','const.transc.sin_1'(s('type.realax.real',sK0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) <=> ~$spl101),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl101])])).
fof(f677,plain,(
  s('type.realax.real','const.transc.sin_1'(s('type.realax.real',sK0))) != s('type.realax.real','const.transc.sqrt_1'(s('type.realax.real','const.real.pow_2'(s('type.realax.real','const.transc.sin_1'(s('type.realax.real',sK0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | ($spl1 | $spl92)),
  inference(backward_demodulation,[],[f662,f109])).
fof(f129,plain,(
  ( ! [X0,X1] : (s('type.realax.real',X1) != s('type.realax.real','const.real.pow_2'(s('type.realax.real',X0),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | ~p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.realax.real',X0)))) | s('type.realax.real',X0) = s('type.realax.real','const.transc.sqrt_1'(s('type.realax.real',X1)))) ) | $spl24),
  inference(cnf_transformation,[],[f129_D])).
fof(f129_D,plain,(
  ( ! [X0,X1] : (s('type.realax.real',X1) != s('type.realax.real','const.real.pow_2'(s('type.realax.real',X0),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | ~p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.realax.real',X0)))) | s('type.realax.real',X0) = s('type.realax.real','const.transc.sqrt_1'(s('type.realax.real',X1)))) ) <=> ~$spl24),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl24])])).
fof(f102,plain,(
  ( ! [X0,X1] : (s('type.realax.real',X0) = s('type.realax.real','const.transc.sqrt_1'(s('type.realax.real',X1))) | ~p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.realax.real',X0)))) | s('type.realax.real',X1) != s('type.realax.real','const.real.pow_2'(s('type.realax.real',X0),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) )),
  inference(cnf_transformation,[],[f48])).
fof(f48,plain,(
  ! [X0,X1] : (s('type.realax.real',X1) != s('type.realax.real','const.real.pow_2'(s('type.realax.real',X0),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | ~p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.realax.real',X0)))) | s('type.realax.real',X0) = s('type.realax.real','const.transc.sqrt_1'(s('type.realax.real',X1))))),
  inference(flattening,[],[f47])).
fof(f47,plain,(
  ! [X0,X1] : ((s('type.realax.real',X1) != s('type.realax.real','const.real.pow_2'(s('type.realax.real',X0),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | ~p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.realax.real',X0))))) | s('type.realax.real',X0) = s('type.realax.real','const.transc.sqrt_1'(s('type.realax.real',X1))))),
  inference(ennf_transformation,[],[f39])).
fof(f39,plain,(
  ! [X0,X1] : ((s('type.realax.real',X1) = s('type.realax.real','const.real.pow_2'(s('type.realax.real',X0),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) & p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.realax.real',X0))))) => s('type.realax.real',X0) = s('type.realax.real','const.transc.sqrt_1'(s('type.realax.real',X1))))),
  inference(rectify,[],[f19])).
fof(f19,axiom,(
  ! [X6,X9] : ((s('type.realax.real',X9) = s('type.realax.real','const.real.pow_2'(s('type.realax.real',X6),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) & p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.realax.real',X6))))) => s('type.realax.real',X6) = s('type.realax.real','const.transc.sqrt_1'(s('type.realax.real',X9))))),
  file('thm.transc.SIN_COS_SQ','thm.transc.SQRT_EQ')).
fof(f606,plain,(
  ( ! [X0] : (~p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.realax.real',X0)))) | s('type.realax.real',X0) = s('type.realax.real','const.transc.sqrt_1'(s('type.realax.real','const.real.pow_2'(s('type.realax.real',X0),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) ) | $spl88),
  inference(cnf_transformation,[],[f606_D])).
fof(f606_D,plain,(
  ( ! [X0] : (~p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.realax.real',X0)))) | s('type.realax.real',X0) = s('type.realax.real','const.transc.sqrt_1'(s('type.realax.real','const.real.pow_2'(s('type.realax.real',X0),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) ) <=> ~$spl88),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl88])])).
fof(f599,plain,(
  ( ! [X0] : (~p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.realax.real',X0)))) | s('type.realax.real',X0) = s('type.realax.real','const.transc.sqrt_1'(s('type.realax.real','const.real.pow_2'(s('type.realax.real',X0),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) ) | $spl24),
  inference(equality_resolution,[],[f129])).
fof(f846,plain,(
  $false | ($spl88 | $spl101 | $spl128)),
  inference(subsumption_resolution,[],[f838,f679])).
fof(f838,plain,(
  s('type.realax.real','const.transc.sin_1'(s('type.realax.real',sK0))) = s('type.realax.real','const.transc.sqrt_1'(s('type.realax.real','const.real.pow_2'(s('type.realax.real','const.transc.sin_1'(s('type.realax.real',sK0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | ($spl88 | $spl128)),
  inference(resolution,[],[f818,f606])).
% SZS output end Proof for thm.transc
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 37
% Passive clauses: 64
% Generated clauses: 750
% Final active clauses: 33
% Final passive clauses: 27
% Input formulas: 20
% Initial clauses: 38
% 
% Duplicate literals: 63
% Trivial inequalities: 15
% Fw subsumption resolutions: 40
% Fw demodulations: 64
% Bw demodulations: 4
% Condensations: 68
% Global subsumptions: 4
% 
% Simple tautologies: 52
% Equational tautologies: 18
% Forward subsumptions: 255
% 
% Binary resolution: 22
% Forward superposition: 146
% Backward superposition: 159
% Self superposition: 27
% Equality factoring: 26
% Equality resolution: 10
% 
% Split clauses: 5
% Split components: 15
% SAT solver clauses: 149
% SAT solver unit clauses: 46
% SAT solver binary clauses: 24
% SAT solver learnt clauses: 9
% 
% Sat splits: 5
% Sat splitting refutations: 1
% 
% TWLsolver clauses: 132
% TWLsolver calls for satisfiability: 139
% 
% Memory used [KB]: 1407
% Time elapsed: 0.015 s
% ------------------------------
% ------------------------------
% Success in time 0.624 s
