Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 299 next slice time: 5
dis+11_7_3 on thm.gcd
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.gcd
% SZS output start Proof for thm.gcd
fof(f6812,plain,(
  $false),
  inference(subsumption_resolution,[],[f3722,f334])).
fof(f334,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.gcd.gcd_2'(s('type.num.num',X0),s('type.num.num',X1))) = s('type.num.num','const.gcd.gcd_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1)))))) )),
  inference(cnf_transformation,[],[f100])).
fof(f100,plain,(
  ! [X0,X1] : s('type.num.num','const.gcd.gcd_2'(s('type.num.num',X0),s('type.num.num',X1))) = s('type.num.num','const.gcd.gcd_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1)))))),
  inference(rectify,[],[f43])).
fof(f43,axiom,(
  ! [X6,X7] : s('type.num.num','const.gcd.gcd_2'(s('type.num.num',X6),s('type.num.num',X7))) = s('type.num.num','const.gcd.gcd_2'(s('type.num.num',X6),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num',X7)))))),
  file('thm.gcd.GCD_ADD_L','thm.gcd.GCD_ADD_R')).
fof(f3722,plain,(
  s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK10),s('type.num.num',sK11))) != s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK10),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK10),s('type.num.num',sK11)))))),
  inference(superposition,[],[f252,f333])).
fof(f333,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.gcd.gcd_2'(s('type.num.num',X0),s('type.num.num',X1))) = s('type.num.num','const.gcd.gcd_2'(s('type.num.num',X1),s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f99])).
fof(f99,plain,(
  ! [X0,X1] : s('type.num.num','const.gcd.gcd_2'(s('type.num.num',X0),s('type.num.num',X1))) = s('type.num.num','const.gcd.gcd_2'(s('type.num.num',X1),s('type.num.num',X0)))),
  inference(rectify,[],[f42])).
fof(f42,axiom,(
  ! [X6,X7] : s('type.num.num','const.gcd.gcd_2'(s('type.num.num',X6),s('type.num.num',X7))) = s('type.num.num','const.gcd.gcd_2'(s('type.num.num',X7),s('type.num.num',X6)))),
  file('thm.gcd.GCD_ADD_L','thm.gcd.GCD_SYM')).
fof(f252,plain,(
  s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK10),s('type.num.num',sK11))) != s('type.num.num','const.gcd.gcd_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK10),s('type.num.num',sK11))),s('type.num.num',sK10)))),
  inference(cnf_transformation,[],[f162])).
fof(f162,plain,(
  s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK10),s('type.num.num',sK11))) != s('type.num.num','const.gcd.gcd_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK10),s('type.num.num',sK11))),s('type.num.num',sK10)))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK10,sK11])],[f122])).
fof(f122,plain,(
  ? [X0,X1] : s('type.num.num','const.gcd.gcd_2'(s('type.num.num',X0),s('type.num.num',X1))) != s('type.num.num','const.gcd.gcd_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num',X0)))),
  inference(ennf_transformation,[],[f53])).
fof(f53,plain,(
  ~! [X0,X1] : s('type.num.num','const.gcd.gcd_2'(s('type.num.num',X0),s('type.num.num',X1))) = s('type.num.num','const.gcd.gcd_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num',X0)))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7] : s('type.num.num','const.gcd.gcd_2'(s('type.num.num',X6),s('type.num.num',X7))) = s('type.num.num','const.gcd.gcd_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num',X7))),s('type.num.num',X6)))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7] : s('type.num.num','const.gcd.gcd_2'(s('type.num.num',X6),s('type.num.num',X7))) = s('type.num.num','const.gcd.gcd_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num',X7))),s('type.num.num',X6)))),
  file('thm.gcd.GCD_ADD_L','thm.gcd.GCD_ADD_L')).
% SZS output end Proof for thm.gcd
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 399
% Passive clauses: 2066
% Generated clauses: 6561
% Final active clauses: 361
% Final passive clauses: 1406
% Input formulas: 51
% Initial clauses: 188
% 
% Duplicate literals: 202
% Trivial inequalities: 66
% Fw subsumption resolutions: 669
% Fw demodulations: 1
% Bw demodulations: 37
% 
% Simple tautologies: 181
% Equational tautologies: 48
% Forward subsumptions: 3241
% 
% Binary resolution: 3201
% Factoring: 789
% Forward superposition: 423
% Backward superposition: 807
% Self superposition: 30
% Equality factoring: 26
% Equality resolution: 29
% 
% Split clauses: 170
% Split components: 341
% SAT solver clauses: 306
% SAT solver unit clauses: 8
% SAT solver binary clauses: 86
% 
% Sat splits: 170
% Sat splitting refutations: 2
% 
% TWLsolver clauses: 304
% TWLsolver calls for satisfiability: 188
% 
% Memory used [KB]: 2942
% Time elapsed: 0.152 s
% ------------------------------
% ------------------------------
% Success in time 0.156 s
