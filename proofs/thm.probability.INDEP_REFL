Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 299 next slice time: 5
dis+11_7_3 on thm.probability
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.probability
% SZS output start Proof for thm.probability
fof(f15738,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f15729,f14321,f294,f536,f293,f538,f534,f292,f535,f537,f533,f15713,f301,f540])).
fof(f540,plain,(
  ~p(s(bool,'F_0')) | $spl7),
  inference(cnf_transformation,[],[f540_D])).
fof(f540_D,plain,(
  ~p(s(bool,'F_0')) <=> ~$spl7),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl7])])).
fof(f301,plain,(
  ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f62])).
fof(f62,plain,(
  ~p(s(bool,'F_0'))),
  inference(flattening,[],[f2])).
fof(f2,axiom,(
  ~p(s(bool,'F_0'))),
  file('thm.probability.INDEP_REFL',aHL_FALSITY)).
fof(f15713,plain,(
  $false | ($spl1 | $spl2 | $spl7)),
  inference(subsumption_resolution,[],[f15712,f540])).
fof(f15712,plain,(
  p(s(bool,'F_0')) | ($spl1 | $spl2)),
  inference(forward_demodulation,[],[f15711,f14493])).
fof(f14493,plain,(
  s(bool,'F_0') = s(bool,'const.probability.indep_3'(s('type.pair.prod'(fun(sK12,bool),'type.pair.prod'(fun(fun(sK12,bool),bool),fun(fun(sK12,bool),'type.realax.real'))),sK13),s(fun(sK12,bool),sK14),s(fun(sK12,bool),sK14))) | $spl1),
  inference(resolution,[],[f534,f319])).
fof(f319,plain,(
  ( ! [X0] : (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f190])).
fof(f190,plain,(
  ! [X0] : ((s(bool,'F_0') != s(bool,X0) | ~p(s(bool,X0))) & (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f78])).
fof(f78,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(flattening,[],[f77])).
fof(f77,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(rectify,[],[f38])).
fof(f38,axiom,(
  ! [X9] : (s(bool,'F_0') = s(bool,X9) <=> ~p(s(bool,X9)))),
  file('thm.probability.INDEP_REFL','thm.bool.EQ_CLAUSES|split|3')).
fof(f15711,plain,(
  p(s(bool,'const.probability.indep_3'(s('type.pair.prod'(fun(sK12,bool),'type.pair.prod'(fun(fun(sK12,bool),bool),fun(fun(sK12,bool),'type.realax.real'))),sK13),s(fun(sK12,bool),sK14),s(fun(sK12,bool),sK14)))) | $spl2),
  inference(subsumption_resolution,[],[f15710,f535])).
fof(f15710,plain,(
  s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) != s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(sK12,bool),'type.pair.prod'(fun(fun(sK12,bool),bool),fun(fun(sK12,bool),'type.realax.real'))),sK13),s(fun(sK12,bool),sK14))) | p(s(bool,'const.probability.indep_3'(s('type.pair.prod'(fun(sK12,bool),'type.pair.prod'(fun(fun(sK12,bool),bool),fun(fun(sK12,bool),'type.realax.real'))),sK13),s(fun(sK12,bool),sK14),s(fun(sK12,bool),sK14)))) | $spl2),
  inference(forward_demodulation,[],[f15709,f4185])).
fof(f4185,plain,(
  s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))),
  inference(equality_resolution,[],[f324])).
fof(f324,plain,(
  ( ! [X0] : (s('type.realax.real',X0) != s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.realax.real',X0) = s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real',X0),s('type.realax.real',X0)))) )),
  inference(cnf_transformation,[],[f193])).
fof(f193,plain,(
  ! [X0] : ((s('type.realax.real',X0) != s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real',X0),s('type.realax.real',X0))) | s('type.realax.real',X0) = s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.realax.real',X0) = s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) & ((s('type.realax.real',X0) != s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))) & s('type.realax.real',X0) != s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | s('type.realax.real',X0) = s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real',X0),s('type.realax.real',X0)))))),
  inference(flattening,[],[f192])).
fof(f192,plain,(
  ! [X0] : ((s('type.realax.real',X0) != s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real',X0),s('type.realax.real',X0))) | (s('type.realax.real',X0) = s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.realax.real',X0) = s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) & ((s('type.realax.real',X0) != s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))) & s('type.realax.real',X0) != s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | s('type.realax.real',X0) = s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real',X0),s('type.realax.real',X0)))))),
  inference(nnf_transformation,[],[f81])).
fof(f81,plain,(
  ! [X0] : (s('type.realax.real',X0) = s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real',X0),s('type.realax.real',X0))) <=> (s('type.realax.real',X0) = s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.realax.real',X0) = s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))),
  inference(rectify,[],[f57])).
fof(f57,axiom,(
  ! [X21] : (s('type.realax.real',X21) = s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real',X21),s('type.realax.real',X21))) <=> (s('type.realax.real',X21) = s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.realax.real',X21) = s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))),
  file('thm.probability.INDEP_REFL','thm.util_prob.REAL_MUL_IDEMPOT')).
fof(f15709,plain,(
  s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(sK12,bool),'type.pair.prod'(fun(fun(sK12,bool),bool),fun(fun(sK12,bool),'type.realax.real'))),sK13),s(fun(sK12,bool),sK14))) != s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | p(s(bool,'const.probability.indep_3'(s('type.pair.prod'(fun(sK12,bool),'type.pair.prod'(fun(fun(sK12,bool),bool),fun(fun(sK12,bool),'type.realax.real'))),sK13),s(fun(sK12,bool),sK14),s(fun(sK12,bool),sK14)))) | $spl2),
  inference(forward_demodulation,[],[f15708,f374])).
fof(f374,plain,(
  ( ! [X0,X1] : (s(fun(X0,bool),X1) = s(fun(X0,bool),'const.pred_set.INTER_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X1)))) )),
  inference(cnf_transformation,[],[f103])).
fof(f103,plain,(
  ! [X0,X1] : s(fun(X0,bool),X1) = s(fun(X0,bool),'const.pred_set.INTER_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X1)))),
  inference(flattening,[],[f102])).
fof(f102,plain,(
  ! [X0] : ! [X1] : s(fun(X0,bool),X1) = s(fun(X0,bool),'const.pred_set.INTER_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X1)))),
  inference(rectify,[],[f45])).
fof(f45,axiom,(
  ! [X6] : ! [X19] : s(fun(X6,bool),X19) = s(fun(X6,bool),'const.pred_set.INTER_2'(s(fun(X6,bool),X19),s(fun(X6,bool),X19)))),
  file('thm.probability.INDEP_REFL','thm.pred_set.INTER_IDEMPOT')).
fof(f15708,plain,(
  s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) != s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(sK12,bool),'type.pair.prod'(fun(fun(sK12,bool),bool),fun(fun(sK12,bool),'type.realax.real'))),sK13),s(fun(sK12,bool),'const.pred_set.INTER_2'(s(fun(sK12,bool),sK14),s(fun(sK12,bool),sK14))))) | p(s(bool,'const.probability.indep_3'(s('type.pair.prod'(fun(sK12,bool),'type.pair.prod'(fun(fun(sK12,bool),bool),fun(fun(sK12,bool),'type.realax.real'))),sK13),s(fun(sK12,bool),sK14),s(fun(sK12,bool),sK14)))) | $spl2),
  inference(subsumption_resolution,[],[f15705,f291])).
fof(f291,plain,(
  p(s(bool,'const.bool.IN_2'(s(fun(sK12,bool),sK14),s(fun(fun(sK12,bool),bool),'const.probability.events_1'(s('type.pair.prod'(fun(sK12,bool),'type.pair.prod'(fun(fun(sK12,bool),bool),fun(fun(sK12,bool),'type.realax.real'))),sK13))))))),
  inference(cnf_transformation,[],[f185])).
fof(f185,plain,(
  p(s(bool,'const.probability.prob_space_1'(s('type.pair.prod'(fun(sK12,bool),'type.pair.prod'(fun(fun(sK12,bool),bool),fun(fun(sK12,bool),'type.realax.real'))),sK13)))) & p(s(bool,'const.bool.IN_2'(s(fun(sK12,bool),sK14),s(fun(fun(sK12,bool),bool),'const.probability.events_1'(s('type.pair.prod'(fun(sK12,bool),'type.pair.prod'(fun(fun(sK12,bool),bool),fun(fun(sK12,bool),'type.realax.real'))),sK13)))))) & (p(s(bool,'const.probability.indep_3'(s('type.pair.prod'(fun(sK12,bool),'type.pair.prod'(fun(fun(sK12,bool),bool),fun(fun(sK12,bool),'type.realax.real'))),sK13),s(fun(sK12,bool),sK14),s(fun(sK12,bool),sK14)))) | s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(sK12,bool),'type.pair.prod'(fun(fun(sK12,bool),bool),fun(fun(sK12,bool),'type.realax.real'))),sK13),s(fun(sK12,bool),sK14))) | s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(sK12,bool),'type.pair.prod'(fun(fun(sK12,bool),bool),fun(fun(sK12,bool),'type.realax.real'))),sK13),s(fun(sK12,bool),sK14)))) & (~p(s(bool,'const.probability.indep_3'(s('type.pair.prod'(fun(sK12,bool),'type.pair.prod'(fun(fun(sK12,bool),bool),fun(fun(sK12,bool),'type.realax.real'))),sK13),s(fun(sK12,bool),sK14),s(fun(sK12,bool),sK14)))) | (s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(sK12,bool),'type.pair.prod'(fun(fun(sK12,bool),bool),fun(fun(sK12,bool),'type.realax.real'))),sK13),s(fun(sK12,bool),sK14))) & s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) != s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(sK12,bool),'type.pair.prod'(fun(fun(sK12,bool),bool),fun(fun(sK12,bool),'type.realax.real'))),sK13),s(fun(sK12,bool),sK14)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK12,sK13,sK14])],[f184])).
fof(f184,plain,(
  ? [X0,X1,X2] : (p(s(bool,'const.probability.prob_space_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))) & p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X2),s(fun(fun(X0,bool),bool),'const.probability.events_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))) & (p(s(bool,'const.probability.indep_3'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),X2),s(fun(X0,bool),X2)))) | s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),X2))) | s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),X2)))) & (~p(s(bool,'const.probability.indep_3'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),X2),s(fun(X0,bool),X2)))) | (s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),X2))) & s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) != s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),X2))))))),
  inference(flattening,[],[f183])).
fof(f183,plain,(
  ? [X0,X1,X2] : (p(s(bool,'const.probability.prob_space_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))) & p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X2),s(fun(fun(X0,bool),bool),'const.probability.events_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))) & ((p(s(bool,'const.probability.indep_3'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),X2),s(fun(X0,bool),X2)))) | (s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),X2))) | s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),X2))))) & (~p(s(bool,'const.probability.indep_3'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),X2),s(fun(X0,bool),X2)))) | (s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),X2))) & s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) != s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),X2)))))))),
  inference(nnf_transformation,[],[f137])).
fof(f137,plain,(
  ? [X0,X1,X2] : (p(s(bool,'const.probability.prob_space_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))) & p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X2),s(fun(fun(X0,bool),bool),'const.probability.events_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))) & (p(s(bool,'const.probability.indep_3'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),X2),s(fun(X0,bool),X2)))) <~> (s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),X2))) | s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),X2))))))),
  inference(flattening,[],[f136])).
fof(f136,plain,(
  ? [X0,X1,X2] : ((p(s(bool,'const.probability.prob_space_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))) & p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X2),s(fun(fun(X0,bool),bool),'const.probability.events_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1))))))) & (p(s(bool,'const.probability.indep_3'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),X2),s(fun(X0,bool),X2)))) <~> (s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),X2))) | s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),X2))))))),
  inference(ennf_transformation,[],[f59])).
fof(f59,plain,(
  ~! [X0,X1,X2] : ((p(s(bool,'const.probability.prob_space_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))) & p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X2),s(fun(fun(X0,bool),bool),'const.probability.events_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1))))))) => (p(s(bool,'const.probability.indep_3'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),X2),s(fun(X0,bool),X2)))) <=> (s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),X2))) | s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),X2))))))),
  inference(flattening,[],[f58])).
fof(f58,plain,(
  ~! [X0] : ! [X1,X2] : ((p(s(bool,'const.probability.prob_space_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))) & p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X2),s(fun(fun(X0,bool),bool),'const.probability.events_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1))))))) => (p(s(bool,'const.probability.indep_3'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),X2),s(fun(X0,bool),X2)))) <=> (s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),X2))) | s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),X2))))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : ! [X7,X8] : ((p(s(bool,'const.probability.prob_space_1'(s('type.pair.prod'(fun(X6,bool),'type.pair.prod'(fun(fun(X6,bool),bool),fun(fun(X6,bool),'type.realax.real'))),X7)))) & p(s(bool,'const.bool.IN_2'(s(fun(X6,bool),X8),s(fun(fun(X6,bool),bool),'const.probability.events_1'(s('type.pair.prod'(fun(X6,bool),'type.pair.prod'(fun(fun(X6,bool),bool),fun(fun(X6,bool),'type.realax.real'))),X7))))))) => (p(s(bool,'const.probability.indep_3'(s('type.pair.prod'(fun(X6,bool),'type.pair.prod'(fun(fun(X6,bool),bool),fun(fun(X6,bool),'type.realax.real'))),X7),s(fun(X6,bool),X8),s(fun(X6,bool),X8)))) <=> (s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(X6,bool),'type.pair.prod'(fun(fun(X6,bool),bool),fun(fun(X6,bool),'type.realax.real'))),X7),s(fun(X6,bool),X8))) | s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(X6,bool),'type.pair.prod'(fun(fun(X6,bool),bool),fun(fun(X6,bool),'type.realax.real'))),X7),s(fun(X6,bool),X8))))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : ! [X7,X8] : ((p(s(bool,'const.probability.prob_space_1'(s('type.pair.prod'(fun(X6,bool),'type.pair.prod'(fun(fun(X6,bool),bool),fun(fun(X6,bool),'type.realax.real'))),X7)))) & p(s(bool,'const.bool.IN_2'(s(fun(X6,bool),X8),s(fun(fun(X6,bool),bool),'const.probability.events_1'(s('type.pair.prod'(fun(X6,bool),'type.pair.prod'(fun(fun(X6,bool),bool),fun(fun(X6,bool),'type.realax.real'))),X7))))))) => (p(s(bool,'const.probability.indep_3'(s('type.pair.prod'(fun(X6,bool),'type.pair.prod'(fun(fun(X6,bool),bool),fun(fun(X6,bool),'type.realax.real'))),X7),s(fun(X6,bool),X8),s(fun(X6,bool),X8)))) <=> (s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(X6,bool),'type.pair.prod'(fun(fun(X6,bool),bool),fun(fun(X6,bool),'type.realax.real'))),X7),s(fun(X6,bool),X8))) | s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(X6,bool),'type.pair.prod'(fun(fun(X6,bool),bool),fun(fun(X6,bool),'type.realax.real'))),X7),s(fun(X6,bool),X8))))))),
  file('thm.probability.INDEP_REFL','thm.probability.INDEP_REFL')).
fof(f15705,plain,(
  s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) != s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(sK12,bool),'type.pair.prod'(fun(fun(sK12,bool),bool),fun(fun(sK12,bool),'type.realax.real'))),sK13),s(fun(sK12,bool),'const.pred_set.INTER_2'(s(fun(sK12,bool),sK14),s(fun(sK12,bool),sK14))))) | p(s(bool,'const.probability.indep_3'(s('type.pair.prod'(fun(sK12,bool),'type.pair.prod'(fun(fun(sK12,bool),bool),fun(fun(sK12,bool),'type.realax.real'))),sK13),s(fun(sK12,bool),sK14),s(fun(sK12,bool),sK14)))) | ~p(s(bool,'const.bool.IN_2'(s(fun(sK12,bool),sK14),s(fun(fun(sK12,bool),bool),'const.probability.events_1'(s('type.pair.prod'(fun(sK12,bool),'type.pair.prod'(fun(fun(sK12,bool),bool),fun(fun(sK12,bool),'type.realax.real'))),sK13)))))) | $spl2),
  inference(superposition,[],[f14720,f535])).
fof(f14720,plain,(
  ( ! [X0] : (s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(sK12,bool),'type.pair.prod'(fun(fun(sK12,bool),bool),fun(fun(sK12,bool),'type.realax.real'))),sK13),s(fun(sK12,bool),'const.pred_set.INTER_2'(s(fun(sK12,bool),X0),s(fun(sK12,bool),sK14))))) != s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(sK12,bool),'type.pair.prod'(fun(fun(sK12,bool),bool),fun(fun(sK12,bool),'type.realax.real'))),sK13),s(fun(sK12,bool),X0))),s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | p(s(bool,'const.probability.indep_3'(s('type.pair.prod'(fun(sK12,bool),'type.pair.prod'(fun(fun(sK12,bool),bool),fun(fun(sK12,bool),'type.realax.real'))),sK13),s(fun(sK12,bool),X0),s(fun(sK12,bool),sK14)))) | ~p(s(bool,'const.bool.IN_2'(s(fun(sK12,bool),X0),s(fun(fun(sK12,bool),bool),'const.probability.events_1'(s('type.pair.prod'(fun(sK12,bool),'type.pair.prod'(fun(fun(sK12,bool),bool),fun(fun(sK12,bool),'type.realax.real'))),sK13))))))) ) | $spl2),
  inference(subsumption_resolution,[],[f14712,f291])).
fof(f14712,plain,(
  ( ! [X0] : (s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(sK12,bool),'type.pair.prod'(fun(fun(sK12,bool),bool),fun(fun(sK12,bool),'type.realax.real'))),sK13),s(fun(sK12,bool),'const.pred_set.INTER_2'(s(fun(sK12,bool),X0),s(fun(sK12,bool),sK14))))) != s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(sK12,bool),'type.pair.prod'(fun(fun(sK12,bool),bool),fun(fun(sK12,bool),'type.realax.real'))),sK13),s(fun(sK12,bool),X0))),s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | p(s(bool,'const.probability.indep_3'(s('type.pair.prod'(fun(sK12,bool),'type.pair.prod'(fun(fun(sK12,bool),bool),fun(fun(sK12,bool),'type.realax.real'))),sK13),s(fun(sK12,bool),X0),s(fun(sK12,bool),sK14)))) | ~p(s(bool,'const.bool.IN_2'(s(fun(sK12,bool),sK14),s(fun(fun(sK12,bool),bool),'const.probability.events_1'(s('type.pair.prod'(fun(sK12,bool),'type.pair.prod'(fun(fun(sK12,bool),bool),fun(fun(sK12,bool),'type.realax.real'))),sK13)))))) | ~p(s(bool,'const.bool.IN_2'(s(fun(sK12,bool),X0),s(fun(fun(sK12,bool),bool),'const.probability.events_1'(s('type.pair.prod'(fun(sK12,bool),'type.pair.prod'(fun(fun(sK12,bool),bool),fun(fun(sK12,bool),'type.realax.real'))),sK13))))))) ) | $spl2),
  inference(superposition,[],[f382,f535])).
fof(f382,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),'const.pred_set.INTER_2'(s(fun(X0,bool),X2),s(fun(X0,bool),X3))))) != s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),X2))),s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),X3))))) | p(s(bool,'const.probability.indep_3'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),X2),s(fun(X0,bool),X3)))) | ~p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X3),s(fun(fun(X0,bool),bool),'const.probability.events_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))) | ~p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X2),s(fun(fun(X0,bool),bool),'const.probability.events_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1))))))) )),
  inference(cnf_transformation,[],[f229])).
fof(f229,plain,(
  ! [X0,X1,X2,X3] : ((~p(s(bool,'const.probability.indep_3'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),X2),s(fun(X0,bool),X3)))) | (p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X2),s(fun(fun(X0,bool),bool),'const.probability.events_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))) & p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X3),s(fun(fun(X0,bool),bool),'const.probability.events_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))) & s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),'const.pred_set.INTER_2'(s(fun(X0,bool),X2),s(fun(X0,bool),X3))))) = s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),X2))),s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),X3))))))) & (~p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X2),s(fun(fun(X0,bool),bool),'const.probability.events_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))) | ~p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X3),s(fun(fun(X0,bool),bool),'const.probability.events_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))) | s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),'const.pred_set.INTER_2'(s(fun(X0,bool),X2),s(fun(X0,bool),X3))))) != s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),X2))),s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),X3))))) | p(s(bool,'const.probability.indep_3'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),X2),s(fun(X0,bool),X3))))))),
  inference(flattening,[],[f228])).
fof(f228,plain,(
  ! [X0,X1,X2,X3] : ((~p(s(bool,'const.probability.indep_3'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),X2),s(fun(X0,bool),X3)))) | (p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X2),s(fun(fun(X0,bool),bool),'const.probability.events_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))) & p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X3),s(fun(fun(X0,bool),bool),'const.probability.events_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))) & s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),'const.pred_set.INTER_2'(s(fun(X0,bool),X2),s(fun(X0,bool),X3))))) = s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),X2))),s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),X3))))))) & ((~p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X2),s(fun(fun(X0,bool),bool),'const.probability.events_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))) | ~p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X3),s(fun(fun(X0,bool),bool),'const.probability.events_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))) | s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),'const.pred_set.INTER_2'(s(fun(X0,bool),X2),s(fun(X0,bool),X3))))) != s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),X2))),s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),X3)))))) | p(s(bool,'const.probability.indep_3'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),X2),s(fun(X0,bool),X3))))))),
  inference(nnf_transformation,[],[f109])).
fof(f109,plain,(
  ! [X0,X1,X2,X3] : (p(s(bool,'const.probability.indep_3'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),X2),s(fun(X0,bool),X3)))) <=> (p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X2),s(fun(fun(X0,bool),bool),'const.probability.events_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))) & p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X3),s(fun(fun(X0,bool),bool),'const.probability.events_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))) & s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),'const.pred_set.INTER_2'(s(fun(X0,bool),X2),s(fun(X0,bool),X3))))) = s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),X2))),s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),X3)))))))),
  inference(flattening,[],[f108])).
fof(f108,plain,(
  ! [X0] : ! [X1,X2,X3] : (p(s(bool,'const.probability.indep_3'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),X2),s(fun(X0,bool),X3)))) <=> (p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X2),s(fun(fun(X0,bool),bool),'const.probability.events_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))) & p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X3),s(fun(fun(X0,bool),bool),'const.probability.events_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))) & s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),'const.pred_set.INTER_2'(s(fun(X0,bool),X2),s(fun(X0,bool),X3))))) = s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),X2))),s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),X3)))))))),
  inference(rectify,[],[f46])).
fof(f46,axiom,(
  ! [X6] : ! [X7,X8,X20] : (p(s(bool,'const.probability.indep_3'(s('type.pair.prod'(fun(X6,bool),'type.pair.prod'(fun(fun(X6,bool),bool),fun(fun(X6,bool),'type.realax.real'))),X7),s(fun(X6,bool),X8),s(fun(X6,bool),X20)))) <=> (p(s(bool,'const.bool.IN_2'(s(fun(X6,bool),X8),s(fun(fun(X6,bool),bool),'const.probability.events_1'(s('type.pair.prod'(fun(X6,bool),'type.pair.prod'(fun(fun(X6,bool),bool),fun(fun(X6,bool),'type.realax.real'))),X7)))))) & p(s(bool,'const.bool.IN_2'(s(fun(X6,bool),X20),s(fun(fun(X6,bool),bool),'const.probability.events_1'(s('type.pair.prod'(fun(X6,bool),'type.pair.prod'(fun(fun(X6,bool),bool),fun(fun(X6,bool),'type.realax.real'))),X7)))))) & s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(X6,bool),'type.pair.prod'(fun(fun(X6,bool),bool),fun(fun(X6,bool),'type.realax.real'))),X7),s(fun(X6,bool),'const.pred_set.INTER_2'(s(fun(X6,bool),X8),s(fun(X6,bool),X20))))) = s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(X6,bool),'type.pair.prod'(fun(fun(X6,bool),bool),fun(fun(X6,bool),'type.realax.real'))),X7),s(fun(X6,bool),X8))),s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(X6,bool),'type.pair.prod'(fun(fun(X6,bool),bool),fun(fun(X6,bool),'type.realax.real'))),X7),s(fun(X6,bool),X20)))))))),
  file('thm.probability.INDEP_REFL','thm.probability.indep_def')).
fof(f533,plain,(
  p(s(bool,'const.probability.indep_3'(s('type.pair.prod'(fun(sK12,bool),'type.pair.prod'(fun(fun(sK12,bool),bool),fun(fun(sK12,bool),'type.realax.real'))),sK13),s(fun(sK12,bool),sK14),s(fun(sK12,bool),sK14)))) | $spl0),
  inference(cnf_transformation,[],[f533_D])).
fof(f533_D,plain,(
  p(s(bool,'const.probability.indep_3'(s('type.pair.prod'(fun(sK12,bool),'type.pair.prod'(fun(fun(sK12,bool),bool),fun(fun(sK12,bool),'type.realax.real'))),sK13),s(fun(sK12,bool),sK14),s(fun(sK12,bool),sK14)))) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f537,plain,(
  s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(sK12,bool),'type.pair.prod'(fun(fun(sK12,bool),bool),fun(fun(sK12,bool),'type.realax.real'))),sK13),s(fun(sK12,bool),sK14))) | $spl4),
  inference(cnf_transformation,[],[f537_D])).
fof(f537_D,plain,(
  s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(sK12,bool),'type.pair.prod'(fun(fun(sK12,bool),bool),fun(fun(sK12,bool),'type.realax.real'))),sK13),s(fun(sK12,bool),sK14))) <=> ~$spl4),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl4])])).
fof(f535,plain,(
  s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(sK12,bool),'type.pair.prod'(fun(fun(sK12,bool),bool),fun(fun(sK12,bool),'type.realax.real'))),sK13),s(fun(sK12,bool),sK14))) | $spl2),
  inference(cnf_transformation,[],[f535_D])).
fof(f535_D,plain,(
  s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(sK12,bool),'type.pair.prod'(fun(fun(sK12,bool),bool),fun(fun(sK12,bool),'type.realax.real'))),sK13),s(fun(sK12,bool),sK14))) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f292,plain,(
  s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(sK12,bool),'type.pair.prod'(fun(fun(sK12,bool),bool),fun(fun(sK12,bool),'type.realax.real'))),sK13),s(fun(sK12,bool),sK14))) | s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(sK12,bool),'type.pair.prod'(fun(fun(sK12,bool),bool),fun(fun(sK12,bool),'type.realax.real'))),sK13),s(fun(sK12,bool),sK14))) | p(s(bool,'const.probability.indep_3'(s('type.pair.prod'(fun(sK12,bool),'type.pair.prod'(fun(fun(sK12,bool),bool),fun(fun(sK12,bool),'type.realax.real'))),sK13),s(fun(sK12,bool),sK14),s(fun(sK12,bool),sK14))))),
  inference(cnf_transformation,[],[f185])).
fof(f534,plain,(
  ~p(s(bool,'const.probability.indep_3'(s('type.pair.prod'(fun(sK12,bool),'type.pair.prod'(fun(fun(sK12,bool),bool),fun(fun(sK12,bool),'type.realax.real'))),sK13),s(fun(sK12,bool),sK14),s(fun(sK12,bool),sK14)))) | $spl1),
  inference(cnf_transformation,[],[f534_D])).
fof(f534_D,plain,(
  ~p(s(bool,'const.probability.indep_3'(s('type.pair.prod'(fun(sK12,bool),'type.pair.prod'(fun(fun(sK12,bool),bool),fun(fun(sK12,bool),'type.realax.real'))),sK13),s(fun(sK12,bool),sK14),s(fun(sK12,bool),sK14)))) <=> ~$spl1),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1])])).
fof(f538,plain,(
  s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(sK12,bool),'type.pair.prod'(fun(fun(sK12,bool),bool),fun(fun(sK12,bool),'type.realax.real'))),sK13),s(fun(sK12,bool),sK14))) | $spl5),
  inference(cnf_transformation,[],[f538_D])).
fof(f538_D,plain,(
  s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(sK12,bool),'type.pair.prod'(fun(fun(sK12,bool),bool),fun(fun(sK12,bool),'type.realax.real'))),sK13),s(fun(sK12,bool),sK14))) <=> ~$spl5),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl5])])).
fof(f293,plain,(
  s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(sK12,bool),'type.pair.prod'(fun(fun(sK12,bool),bool),fun(fun(sK12,bool),'type.realax.real'))),sK13),s(fun(sK12,bool),sK14))) | ~p(s(bool,'const.probability.indep_3'(s('type.pair.prod'(fun(sK12,bool),'type.pair.prod'(fun(fun(sK12,bool),bool),fun(fun(sK12,bool),'type.realax.real'))),sK13),s(fun(sK12,bool),sK14),s(fun(sK12,bool),sK14))))),
  inference(cnf_transformation,[],[f185])).
fof(f536,plain,(
  s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) != s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(sK12,bool),'type.pair.prod'(fun(fun(sK12,bool),bool),fun(fun(sK12,bool),'type.realax.real'))),sK13),s(fun(sK12,bool),sK14))) | $spl3),
  inference(cnf_transformation,[],[f536_D])).
fof(f536_D,plain,(
  s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) != s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(sK12,bool),'type.pair.prod'(fun(fun(sK12,bool),bool),fun(fun(sK12,bool),'type.realax.real'))),sK13),s(fun(sK12,bool),sK14))) <=> ~$spl3),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl3])])).
fof(f294,plain,(
  s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) != s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(sK12,bool),'type.pair.prod'(fun(fun(sK12,bool),bool),fun(fun(sK12,bool),'type.realax.real'))),sK13),s(fun(sK12,bool),sK14))) | ~p(s(bool,'const.probability.indep_3'(s('type.pair.prod'(fun(sK12,bool),'type.pair.prod'(fun(fun(sK12,bool),bool),fun(fun(sK12,bool),'type.realax.real'))),sK13),s(fun(sK12,bool),sK14),s(fun(sK12,bool),sK14))))),
  inference(cnf_transformation,[],[f185])).
fof(f14321,plain,(
  $false | ($spl0 | $spl3 | $spl5)),
  inference(subsumption_resolution,[],[f14320,f536])).
fof(f14320,plain,(
  s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(sK12,bool),'type.pair.prod'(fun(fun(sK12,bool),bool),fun(fun(sK12,bool),'type.realax.real'))),sK13),s(fun(sK12,bool),sK14))) | ($spl0 | $spl5)),
  inference(subsumption_resolution,[],[f14318,f538])).
fof(f14318,plain,(
  s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(sK12,bool),'type.pair.prod'(fun(fun(sK12,bool),bool),fun(fun(sK12,bool),'type.realax.real'))),sK13),s(fun(sK12,bool),sK14))) | s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(sK12,bool),'type.pair.prod'(fun(fun(sK12,bool),bool),fun(fun(sK12,bool),'type.realax.real'))),sK13),s(fun(sK12,bool),sK14))) | $spl0),
  inference(trivial_inequality_removal,[],[f14312])).
fof(f14312,plain,(
  s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(sK12,bool),'type.pair.prod'(fun(fun(sK12,bool),bool),fun(fun(sK12,bool),'type.realax.real'))),sK13),s(fun(sK12,bool),sK14))) != s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(sK12,bool),'type.pair.prod'(fun(fun(sK12,bool),bool),fun(fun(sK12,bool),'type.realax.real'))),sK13),s(fun(sK12,bool),sK14))) | s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(sK12,bool),'type.pair.prod'(fun(fun(sK12,bool),bool),fun(fun(sK12,bool),'type.realax.real'))),sK13),s(fun(sK12,bool),sK14))) | s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(sK12,bool),'type.pair.prod'(fun(fun(sK12,bool),bool),fun(fun(sK12,bool),'type.realax.real'))),sK13),s(fun(sK12,bool),sK14))) | $spl0),
  inference(superposition,[],[f322,f4741])).
fof(f4741,plain,(
  s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(sK12,bool),'type.pair.prod'(fun(fun(sK12,bool),bool),fun(fun(sK12,bool),'type.realax.real'))),sK13),s(fun(sK12,bool),sK14))) = s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(sK12,bool),'type.pair.prod'(fun(fun(sK12,bool),bool),fun(fun(sK12,bool),'type.realax.real'))),sK13),s(fun(sK12,bool),sK14))),s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(sK12,bool),'type.pair.prod'(fun(fun(sK12,bool),bool),fun(fun(sK12,bool),'type.realax.real'))),sK13),s(fun(sK12,bool),sK14))))) | $spl0),
  inference(forward_demodulation,[],[f4714,f374])).
fof(f4714,plain,(
  s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(sK12,bool),'type.pair.prod'(fun(fun(sK12,bool),bool),fun(fun(sK12,bool),'type.realax.real'))),sK13),s(fun(sK12,bool),'const.pred_set.INTER_2'(s(fun(sK12,bool),sK14),s(fun(sK12,bool),sK14))))) = s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(sK12,bool),'type.pair.prod'(fun(fun(sK12,bool),bool),fun(fun(sK12,bool),'type.realax.real'))),sK13),s(fun(sK12,bool),sK14))),s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(sK12,bool),'type.pair.prod'(fun(fun(sK12,bool),bool),fun(fun(sK12,bool),'type.realax.real'))),sK13),s(fun(sK12,bool),sK14))))) | $spl0),
  inference(resolution,[],[f381,f533])).
fof(f381,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,'const.probability.indep_3'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),X2),s(fun(X0,bool),X3)))) | s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),'const.pred_set.INTER_2'(s(fun(X0,bool),X2),s(fun(X0,bool),X3))))) = s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),X2))),s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),X3)))))) )),
  inference(cnf_transformation,[],[f229])).
fof(f322,plain,(
  ( ! [X0] : (s('type.realax.real',X0) != s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real',X0),s('type.realax.real',X0))) | s('type.realax.real',X0) = s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.realax.real',X0) = s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) )),
  inference(cnf_transformation,[],[f193])).
fof(f15729,plain,(
  $false | ($spl1 | $spl4 | $spl7)),
  inference(subsumption_resolution,[],[f15728,f540])).
fof(f15728,plain,(
  p(s(bool,'F_0')) | ($spl1 | $spl4)),
  inference(forward_demodulation,[],[f15727,f14493])).
fof(f15727,plain,(
  p(s(bool,'const.probability.indep_3'(s('type.pair.prod'(fun(sK12,bool),'type.pair.prod'(fun(fun(sK12,bool),bool),fun(fun(sK12,bool),'type.realax.real'))),sK13),s(fun(sK12,bool),sK14),s(fun(sK12,bool),sK14)))) | $spl4),
  inference(subsumption_resolution,[],[f15726,f291])).
fof(f15726,plain,(
  ~p(s(bool,'const.bool.IN_2'(s(fun(sK12,bool),sK14),s(fun(fun(sK12,bool),bool),'const.probability.events_1'(s('type.pair.prod'(fun(sK12,bool),'type.pair.prod'(fun(fun(sK12,bool),bool),fun(fun(sK12,bool),'type.realax.real'))),sK13)))))) | p(s(bool,'const.probability.indep_3'(s('type.pair.prod'(fun(sK12,bool),'type.pair.prod'(fun(fun(sK12,bool),bool),fun(fun(sK12,bool),'type.realax.real'))),sK13),s(fun(sK12,bool),sK14),s(fun(sK12,bool),sK14)))) | $spl4),
  inference(trivial_inequality_removal,[],[f15716])).
fof(f15716,plain,(
  s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))) | ~p(s(bool,'const.bool.IN_2'(s(fun(sK12,bool),sK14),s(fun(fun(sK12,bool),bool),'const.probability.events_1'(s('type.pair.prod'(fun(sK12,bool),'type.pair.prod'(fun(fun(sK12,bool),bool),fun(fun(sK12,bool),'type.realax.real'))),sK13)))))) | p(s(bool,'const.probability.indep_3'(s('type.pair.prod'(fun(sK12,bool),'type.pair.prod'(fun(fun(sK12,bool),bool),fun(fun(sK12,bool),'type.realax.real'))),sK13),s(fun(sK12,bool),sK14),s(fun(sK12,bool),sK14)))) | $spl4),
  inference(superposition,[],[f4772,f537])).
fof(f4772,plain,(
  ( ! [X2,X0,X1] : (s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),X2))) | ~p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X2),s(fun(fun(X0,bool),bool),'const.probability.events_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))) | p(s(bool,'const.probability.indep_3'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),X2),s(fun(X0,bool),X2))))) )),
  inference(trivial_inequality_removal,[],[f4771])).
fof(f4771,plain,(
  ( ! [X2,X0,X1] : (s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),X2))) != s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),X2))) | p(s(bool,'const.probability.indep_3'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),X2),s(fun(X0,bool),X2)))) | ~p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X2),s(fun(fun(X0,bool),bool),'const.probability.events_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))) | s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),X2)))) )),
  inference(forward_demodulation,[],[f4766,f374])).
fof(f4766,plain,(
  ( ! [X2,X0,X1] : (s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),X2))) != s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),'const.pred_set.INTER_2'(s(fun(X0,bool),X2),s(fun(X0,bool),X2))))) | p(s(bool,'const.probability.indep_3'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),X2),s(fun(X0,bool),X2)))) | ~p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X2),s(fun(fun(X0,bool),bool),'const.probability.events_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))) | s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),X2)))) )),
  inference(duplicate_literal_removal,[],[f4765])).
fof(f4765,plain,(
  ( ! [X2,X0,X1] : (s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),X2))) != s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),'const.pred_set.INTER_2'(s(fun(X0,bool),X2),s(fun(X0,bool),X2))))) | p(s(bool,'const.probability.indep_3'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),X2),s(fun(X0,bool),X2)))) | ~p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X2),s(fun(fun(X0,bool),bool),'const.probability.events_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))) | ~p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X2),s(fun(fun(X0,bool),bool),'const.probability.events_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))) | s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),X2)))) )),
  inference(superposition,[],[f382,f323])).
fof(f323,plain,(
  ( ! [X0] : (s('type.realax.real',X0) = s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real',X0),s('type.realax.real',X0))) | s('type.realax.real',X0) != s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(cnf_transformation,[],[f193])).
% SZS output end Proof for thm.probability
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 659
% Passive clauses: 6697
% Generated clauses: 15249
% Final active clauses: 644
% Final passive clauses: 5517
% Input formulas: 56
% Initial clauses: 235
% 
% Duplicate literals: 453
% Trivial inequalities: 70
% Fw subsumption resolutions: 1451
% Fw demodulations: 227
% Bw demodulations: 3
% 
% Simple tautologies: 252
% Equational tautologies: 58
% Forward subsumptions: 5798
% Fw demodulations to eq. taut.: 2
% 
% Binary resolution: 8495
% Factoring: 1274
% Forward superposition: 1482
% Backward superposition: 1351
% Self superposition: 24
% Equality factoring: 26
% Equality resolution: 21
% 
% Split clauses: 314
% Split components: 636
% SAT solver clauses: 627
% SAT solver unit clauses: 21
% SAT solver binary clauses: 141
% SAT solver learnt clauses: 2
% SAT solver learnt literals: 1
% 
% Sat splits: 314
% Sat splitting refutations: 3
% 
% TWLsolver clauses: 622
% TWLsolver calls for satisfiability: 409
% 
% Memory used [KB]: 6908
% Time elapsed: 0.457 s
% ------------------------------
% ------------------------------
% Success in time 0.46 s
