Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.rich_list
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.rich_list
% SZS output start Proof for thm.rich_list
fof(f4832,plain,(
  $false),
  inference(subsumption_resolution,[],[f4815,f421])).
fof(f421,plain,(
  ( ! [X2,X0,X1] : (s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),X1)))) )),
  inference(cnf_transformation,[],[f135])).
fof(f135,plain,(
  ! [X0,X1,X2] : s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),X1)))),
  inference(flattening,[],[f134])).
fof(f134,plain,(
  ! [X0] : ! [X1,X2] : ~s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),X1)))),
  inference(rectify,[],[f35])).
fof(f35,axiom,(
  ! [X6] : ! [X19,X20] : ~s('type.list.list'(X6),'const.list.NIL_0') = s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X20),s('type.list.list'(X6),X19)))),
  file('thm.rich_list.rich_list_84_prove_ltb','thm.list.NOT_CONS_NIL')).
fof(f4815,plain,(
  s('type.list.list'(sK12),'const.list.NIL_0') = s('type.list.list'(sK12),'const.list.CONS_2'(s(sK12,sK15),s('type.list.list'(sK12),sK14)))),
  inference(superposition,[],[f4771,f390])).
fof(f390,plain,(
  ( ! [X0,X1] : (s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.NIL_0'),s('type.list.list'(X0),X1)))) )),
  inference(cnf_transformation,[],[f104])).
fof(f104,plain,(
  ! [X0,X1] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.NIL_0'),s('type.list.list'(X0),X1)))),
  inference(flattening,[],[f103])).
fof(f103,plain,(
  ! [X0] : ! [X1] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.NIL_0'),s('type.list.list'(X0),X1)))),
  inference(rectify,[],[f15])).
fof(f15,axiom,(
  ! [X6] : ! [X12] : s('type.list.list'(X6),X12) = s('type.list.list'(X6),'const.list.APPEND_2'(s('type.list.list'(X6),'const.list.NIL_0'),s('type.list.list'(X6),X12)))),
  file('thm.rich_list.rich_list_84_prove_ltb','thm.list.APPEND|split|0')).
fof(f4771,plain,(
  s('type.list.list'(sK12),'const.list.NIL_0') = s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),'const.list.NIL_0'),s('type.list.list'(sK12),'const.list.CONS_2'(s(sK12,sK15),s('type.list.list'(sK12),sK14)))))),
  inference(backward_demodulation,[],[f4769,f333])).
fof(f333,plain,(
  s('type.list.list'(sK12),'const.list.NIL_0') = s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),'const.list.CONS_2'(s(sK12,sK15),s('type.list.list'(sK12),sK14)))))),
  inference(cnf_transformation,[],[f227])).
fof(f227,plain,(
  s('type.list.list'(sK12),'const.list.NIL_0') = s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),'const.list.CONS_2'(s(sK12,sK15),s('type.list.list'(sK12),sK14)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK12,sK13,sK14,sK15])],[f181])).
fof(f181,plain,(
  ? [X0,X1,X2,X3] : s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),X2)))))),
  inference(ennf_transformation,[],[f72])).
fof(f72,plain,(
  ~! [X0,X1,X2,X3] : s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),X2)))))),
  inference(flattening,[],[f71])).
fof(f71,plain,(
  ~! [X0] : ! [X1,X2,X3] : ~s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),X2)))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : ! [X7,X8,X9] : ~s('type.list.list'(X6),'const.list.NIL_0') = s('type.list.list'(X6),'const.list.APPEND_2'(s('type.list.list'(X6),X7),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X9),s('type.list.list'(X6),X8)))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : ! [X7,X8,X9] : ~s('type.list.list'(X6),'const.list.NIL_0') = s('type.list.list'(X6),'const.list.APPEND_2'(s('type.list.list'(X6),X7),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X9),s('type.list.list'(X6),X8)))))),
  file('thm.rich_list.rich_list_84_prove_ltb','thm.rich_list.rich_list_84_prove_ltb')).
fof(f4769,plain,(
  s('type.list.list'(sK12),'const.list.NIL_0') = s('type.list.list'(sK12),sK13)),
  inference(trivial_inequality_removal,[],[f4768])).
fof(f4768,plain,(
  s('type.list.list'(sK12),'const.list.NIL_0') != s('type.list.list'(sK12),'const.list.NIL_0') | s('type.list.list'(sK12),'const.list.NIL_0') = s('type.list.list'(sK12),sK13)),
  inference(superposition,[],[f410,f333])).
fof(f410,plain,(
  ( ! [X2,X0,X1] : (s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),X2))) | s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1)) )),
  inference(cnf_transformation,[],[f268])).
fof(f268,plain,(
  ! [X0,X1,X2] : ((s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),X2))) | (s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1) & s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X2))) & (s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),X1) | s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),X2) | s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),X2)))))),
  inference(flattening,[],[f267])).
fof(f267,plain,(
  ! [X0,X1,X2] : ((s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),X2))) | (s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1) & s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X2))) & ((s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),X1) | s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),X2)) | s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),X2)))))),
  inference(nnf_transformation,[],[f129])).
fof(f129,plain,(
  ! [X0,X1,X2] : (s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),X2))) <=> (s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1) & s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X2)))),
  inference(flattening,[],[f128])).
fof(f128,plain,(
  ! [X0] : ! [X1,X2] : (s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),X2))) <=> (s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1) & s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X2)))),
  inference(rectify,[],[f7])).
fof(f7,axiom,(
  ! [X6] : ! [X7,X8] : (s('type.list.list'(X6),'const.list.NIL_0') = s('type.list.list'(X6),'const.list.APPEND_2'(s('type.list.list'(X6),X7),s('type.list.list'(X6),X8))) <=> (s('type.list.list'(X6),'const.list.NIL_0') = s('type.list.list'(X6),X7) & s('type.list.list'(X6),'const.list.NIL_0') = s('type.list.list'(X6),X8)))),
  file('thm.rich_list.rich_list_84_prove_ltb','thm.list.APPEND_eq_NIL|split|0')).
% SZS output end Proof for thm.rich_list
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 349
% Passive clauses: 1435
% Generated clauses: 4492
% Final active clauses: 347
% Final passive clauses: 937
% Input formulas: 69
% Initial clauses: 234
% 
% Duplicate literals: 152
% Trivial inequalities: 21
% Fw subsumption resolutions: 293
% Fw demodulations: 26
% Bw demodulations: 2
% 
% Simple tautologies: 179
% Equational tautologies: 29
% Forward subsumptions: 2333
% 
% Binary resolution: 2537
% Factoring: 739
% Forward superposition: 149
% Backward superposition: 289
% Self superposition: 7
% Equality factoring: 2
% Equality resolution: 8
% 
% Split clauses: 92
% Split components: 185
% SAT solver clauses: 166
% SAT solver unit clauses: 7
% SAT solver binary clauses: 33
% 
% Sat splits: 92
% 
% TWLsolver clauses: 166
% TWLsolver calls for satisfiability: 138
% 
% Memory used [KB]: 2430
% Time elapsed: 0.099 s
% ------------------------------
% ------------------------------
% Success in time 0.11 s
