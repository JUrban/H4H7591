Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 300 next slice time: 5
dis+11_7_3 on thm.rich_list
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.rich_list
% SZS output start Proof for thm.rich_list
fof(f2710,plain,(
  $false),
  inference(trivial_inequality_removal,[],[f2708])).
fof(f2708,plain,(
  s('type.list.list'(sK0),'const.list.DROP_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num',sK2))),s('type.list.list'(sK0),sK3))) != s('type.list.list'(sK0),'const.list.DROP_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num',sK2))),s('type.list.list'(sK0),sK3)))),
  inference(superposition,[],[f40,f2034])).
fof(f2034,plain,(
  ( ! [X151,X149,X150,X148] : (s('type.list.list'(X148),'const.list.DROP_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X151),s('type.num.num',X149))),s('type.list.list'(X148),X150))) = s('type.list.list'(X148),'const.list.DROP_2'(s('type.num.num',X151),s('type.list.list'(X148),'const.list.DROP_2'(s('type.num.num',X149),s('type.list.list'(X148),X150)))))) )),
  inference(forward_demodulation,[],[f2033,f50])).
fof(f50,plain,(
  ( ! [X2,X0,X1] : (s('type.list.list'(X0),'const.list.DROP_2'(s('type.num.num',X1),s('type.list.list'(X0),X2))) = s('type.list.list'(X0),'const.arithmetic.FUNPOW_3'(s(fun('type.list.list'(X0),'type.list.list'(X0)),'const.rich_list.TL_T_0'),s('type.num.num',X1),s('type.list.list'(X0),X2)))) )),
  inference(cnf_transformation,[],[f24])).
fof(f24,plain,(
  ! [X0,X1,X2] : s('type.list.list'(X0),'const.list.DROP_2'(s('type.num.num',X1),s('type.list.list'(X0),X2))) = s('type.list.list'(X0),'const.arithmetic.FUNPOW_3'(s(fun('type.list.list'(X0),'type.list.list'(X0)),'const.rich_list.TL_T_0'),s('type.num.num',X1),s('type.list.list'(X0),X2)))),
  inference(flattening,[],[f23])).
fof(f23,plain,(
  ! [X0] : ! [X1,X2] : s('type.list.list'(X0),'const.list.DROP_2'(s('type.num.num',X1),s('type.list.list'(X0),X2))) = s('type.list.list'(X0),'const.arithmetic.FUNPOW_3'(s(fun('type.list.list'(X0),'type.list.list'(X0)),'const.rich_list.TL_T_0'),s('type.num.num',X1),s('type.list.list'(X0),X2)))),
  inference(rectify,[],[f13])).
fof(f13,axiom,(
  ! [X6] : ! [X7,X9] : s('type.list.list'(X6),'const.list.DROP_2'(s('type.num.num',X7),s('type.list.list'(X6),X9))) = s('type.list.list'(X6),'const.arithmetic.FUNPOW_3'(s(fun('type.list.list'(X6),'type.list.list'(X6)),'const.rich_list.TL_T_0'),s('type.num.num',X7),s('type.list.list'(X6),X9)))),
  file('thm.rich_list.DROP_DROP_T','thm.rich_list.DROP_FUNPOW_TL')).
fof(f2033,plain,(
  ( ! [X151,X149,X150,X148] : (s('type.list.list'(X148),'const.list.DROP_2'(s('type.num.num',X151),s('type.list.list'(X148),'const.list.DROP_2'(s('type.num.num',X149),s('type.list.list'(X148),X150))))) = s('type.list.list'(X148),'const.arithmetic.FUNPOW_3'(s(fun('type.list.list'(X148),'type.list.list'(X148)),'const.rich_list.TL_T_0'),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X151),s('type.num.num',X149))),s('type.list.list'(X148),X150)))) )),
  inference(forward_demodulation,[],[f1970,f50])).
fof(f1970,plain,(
  ( ! [X151,X149,X150,X148] : (s('type.list.list'(X148),'const.arithmetic.FUNPOW_3'(s(fun('type.list.list'(X148),'type.list.list'(X148)),'const.rich_list.TL_T_0'),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X151),s('type.num.num',X149))),s('type.list.list'(X148),X150))) = s('type.list.list'(X148),'const.arithmetic.FUNPOW_3'(s(fun('type.list.list'(X148),'type.list.list'(X148)),'const.rich_list.TL_T_0'),s('type.num.num',X151),s('type.list.list'(X148),'const.list.DROP_2'(s('type.num.num',X149),s('type.list.list'(X148),X150)))))) )),
  inference(superposition,[],[f53,f50])).
fof(f53,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s(X0,'const.arithmetic.FUNPOW_3'(s(fun(X0,X0),X2),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X3),s('type.num.num',X4))),s(X0,X1))) = s(X0,'const.arithmetic.FUNPOW_3'(s(fun(X0,X0),X2),s('type.num.num',X3),s(X0,'const.arithmetic.FUNPOW_3'(s(fun(X0,X0),X2),s('type.num.num',X4),s(X0,X1)))))) )),
  inference(cnf_transformation,[],[f28])).
fof(f28,plain,(
  ! [X0,X1,X2,X3,X4] : s(X0,'const.arithmetic.FUNPOW_3'(s(fun(X0,X0),X2),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X3),s('type.num.num',X4))),s(X0,X1))) = s(X0,'const.arithmetic.FUNPOW_3'(s(fun(X0,X0),X2),s('type.num.num',X3),s(X0,'const.arithmetic.FUNPOW_3'(s(fun(X0,X0),X2),s('type.num.num',X4),s(X0,X1)))))),
  inference(flattening,[],[f27])).
fof(f27,plain,(
  ! [X0] : ! [X1,X2,X3,X4] : s(X0,'const.arithmetic.FUNPOW_3'(s(fun(X0,X0),X2),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X3),s('type.num.num',X4))),s(X0,X1))) = s(X0,'const.arithmetic.FUNPOW_3'(s(fun(X0,X0),X2),s('type.num.num',X3),s(X0,'const.arithmetic.FUNPOW_3'(s(fun(X0,X0),X2),s('type.num.num',X4),s(X0,X1)))))),
  inference(rectify,[],[f8])).
fof(f8,axiom,(
  ! [X6] : ! [X10,X11,X8,X7] : s(X6,'const.arithmetic.FUNPOW_3'(s(fun(X6,X6),X11),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X8),s('type.num.num',X7))),s(X6,X10))) = s(X6,'const.arithmetic.FUNPOW_3'(s(fun(X6,X6),X11),s('type.num.num',X8),s(X6,'const.arithmetic.FUNPOW_3'(s(fun(X6,X6),X11),s('type.num.num',X7),s(X6,X10)))))),
  file('thm.rich_list.DROP_DROP_T','thm.arithmetic.FUNPOW_ADD')).
fof(f40,plain,(
  s('type.list.list'(sK0),'const.list.DROP_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num',sK2))),s('type.list.list'(sK0),sK3))) != s('type.list.list'(sK0),'const.list.DROP_2'(s('type.num.num',sK1),s('type.list.list'(sK0),'const.list.DROP_2'(s('type.num.num',sK2),s('type.list.list'(sK0),sK3)))))),
  inference(cnf_transformation,[],[f34])).
fof(f34,plain,(
  s('type.list.list'(sK0),'const.list.DROP_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num',sK2))),s('type.list.list'(sK0),sK3))) != s('type.list.list'(sK0),'const.list.DROP_2'(s('type.num.num',sK1),s('type.list.list'(sK0),'const.list.DROP_2'(s('type.num.num',sK2),s('type.list.list'(sK0),sK3)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2,sK3])],[f32])).
fof(f32,plain,(
  ? [X0,X1,X2,X3] : s('type.list.list'(X0),'const.list.DROP_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X2))),s('type.list.list'(X0),X3))) != s('type.list.list'(X0),'const.list.DROP_2'(s('type.num.num',X1),s('type.list.list'(X0),'const.list.DROP_2'(s('type.num.num',X2),s('type.list.list'(X0),X3)))))),
  inference(ennf_transformation,[],[f16])).
fof(f16,plain,(
  ~! [X0,X1,X2,X3] : s('type.list.list'(X0),'const.list.DROP_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X2))),s('type.list.list'(X0),X3))) = s('type.list.list'(X0),'const.list.DROP_2'(s('type.num.num',X1),s('type.list.list'(X0),'const.list.DROP_2'(s('type.num.num',X2),s('type.list.list'(X0),X3)))))),
  inference(flattening,[],[f15])).
fof(f15,plain,(
  ~! [X0] : ! [X1,X2,X3] : s('type.list.list'(X0),'const.list.DROP_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X2))),s('type.list.list'(X0),X3))) = s('type.list.list'(X0),'const.list.DROP_2'(s('type.num.num',X1),s('type.list.list'(X0),'const.list.DROP_2'(s('type.num.num',X2),s('type.list.list'(X0),X3)))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : ! [X7,X8,X9] : s('type.list.list'(X6),'const.list.DROP_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X7),s('type.num.num',X8))),s('type.list.list'(X6),X9))) = s('type.list.list'(X6),'const.list.DROP_2'(s('type.num.num',X7),s('type.list.list'(X6),'const.list.DROP_2'(s('type.num.num',X8),s('type.list.list'(X6),X9)))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : ! [X7,X8,X9] : s('type.list.list'(X6),'const.list.DROP_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X7),s('type.num.num',X8))),s('type.list.list'(X6),X9))) = s('type.list.list'(X6),'const.list.DROP_2'(s('type.num.num',X7),s('type.list.list'(X6),'const.list.DROP_2'(s('type.num.num',X8),s('type.list.list'(X6),X9)))))),
  file('thm.rich_list.DROP_DROP_T','thm.rich_list.DROP_DROP_T')).
% SZS output end Proof for thm.rich_list
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 25
% Passive clauses: 556
% Generated clauses: 2556
% Final active clauses: 23
% Final passive clauses: 519
% Input formulas: 13
% Initial clauses: 16
% 
% Duplicate literals: 291
% Trivial inequalities: 32
% Fw subsumption resolutions: 100
% Fw demodulations: 13
% 
% Simple tautologies: 95
% Equational tautologies: 80
% Forward subsumptions: 1029
% 
% Binary resolution: 12
% Forward superposition: 810
% Backward superposition: 843
% Self superposition: 235
% Equality factoring: 202
% Equality resolution: 1
% 
% Split clauses: 114
% Split components: 228
% SAT solver clauses: 367
% SAT solver unit clauses: 217
% SAT solver binary clauses: 82
% 
% Sat splits: 114
% Sat splitting refutations: 1
% 
% TWLsolver clauses: 367
% TWLsolver calls for satisfiability: 11
% 
% Memory used [KB]: 1791
% Time elapsed: 0.114 s
% ------------------------------
% ------------------------------
% Success in time 0.119 s
