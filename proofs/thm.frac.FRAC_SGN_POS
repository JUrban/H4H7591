Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.frac
% (23694)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 1254
% Passive clauses: 8073
% Generated clauses: 34769
% Final active clauses: 740
% Final passive clauses: 4398
% Input formulas: 261
% Initial clauses: 543
% 
% Duplicate literals: 217
% Trivial inequalities: 120
% Fw subsumption resolutions: 2088
% Fw demodulations: 3398
% Bw demodulations: 270
% 
% Simple tautologies: 334
% Equational tautologies: 52
% Forward subsumptions: 19863
% 
% Binary resolution: 7624
% Factoring: 707
% Forward superposition: 8796
% Backward superposition: 10340
% Self superposition: 58
% Equality factoring: 2
% Equality resolution: 34
% 
% Split clauses: 779
% Split components: 1564
% SAT solver clauses: 1149
% SAT solver unit clauses: 21
% SAT solver binary clauses: 113
% 
% Sat splits: 779
% Sat splitting refutations: 28
% 
% TWLsolver clauses: 1140
% TWLsolver calls for satisfiability: 475
% 
% Memory used [KB]: 15479
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 143 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.frac
% (23713)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 733
% Passive clauses: 3965
% Generated clauses: 28477
% Final active clauses: 493
% Final passive clauses: 1858
% Input formulas: 261
% Initial clauses: 543
% 
% Duplicate literals: 160
% Trivial inequalities: 113
% Fw subsumption resolutions: 1129
% Fw demodulations: 3563
% Bw demodulations: 1531
% Condensations: 192
% Global subsumptions: 36
% 
% Simple tautologies: 356
% Equational tautologies: 19
% Forward subsumptions: 14715
% Bw demodulations to eq. taut.: 38
% 
% Binary resolution: 2403
% Factoring: 226
% Forward superposition: 6066
% Backward superposition: 7864
% Self superposition: 89
% Equality factoring: 6
% Equality resolution: 25
% 
% Split clauses: 145
% Split components: 290
% SAT solver clauses: 4350
% SAT solver unit clauses: 667
% SAT solver binary clauses: 169
% SAT solver learnt clauses: 74
% SAT solver learnt literals: 15
% 
% Sat splits: 145
% Sat splitting refutations: 29
% 
% TWLsolver clauses: 4204
% TWLsolver calls for satisfiability: 3629
% 
% Memory used [KB]: 19701
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 136 next slice time: 103
lrs+11_2_br=off:cond=on:fde=none:gs=on:gsaa=full_model:lwlo=on:nwc=2:sas=minisat:stl=30:ssfp=100000:ssfq=1.4:smm=sco:ssnc=none:sp=occurrence:urr=on_98 on thm.frac
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.frac
% SZS output start Proof for thm.frac
fof(f16748,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f897,f1470,f1468,f896,f1469,f1467,f910,f1475,f1473,f1593,f5758,f5777,f5759,f5780,f5760,f5781,f5766,f5779,f5782,f5767,f5785,f5783,f15666,f15756,f15704,f15767,f15765,f15790,f15829,f15882,f15927,f15931,f15912,f15943,f15913,f15929,f15944,f15995,f16024,f15996,f16026,f16027,f16124,f16127,f16130,f16131,f16144,f15758,f16147,f16146,f15884,f16742,f16745,f16747])).
fof(f16747,plain,(
  $false | ($spl0 | $spl3)),
  inference(subsumption_resolution,[],[f16739,f16149])).
fof(f16149,plain,(
  s('type.integer.int','const.integer.int_|49|_0') = s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK13))) | $spl0),
  inference(forward_demodulation,[],[f16148,f1471])).
fof(f1471,plain,(
  s('type.integer.int','const.integer.int_|49|_0') = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))),
  inference(backward_demodulation,[],[f906,f905])).
fof(f905,plain,(
  s('type.integer.int','const.integer.int_|49|_0') = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),
  inference(cnf_transformation,[],[f72])).
fof(f72,axiom,(
  s('type.integer.int','const.integer.int_|49|_0') = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),
  file('thm.frac.FRAC_SGN_POS','thm.integer.INT_|49|')).
fof(f906,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  inference(cnf_transformation,[],[f191])).
fof(f191,axiom,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  file('thm.frac.FRAC_SGN_POS','thm.arithmetic.ONE')).
fof(f16148,plain,(
  s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK13))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | $spl0),
  inference(forward_demodulation,[],[f1467,f906])).
fof(f16739,plain,(
  s('type.integer.int','const.integer.int_|49|_0') != s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK13))) | $spl3),
  inference(superposition,[],[f16245,f935])).
fof(f935,plain,(
  ( ! [X0] : (s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',X0))) = s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X0)))))) )),
  inference(cnf_transformation,[],[f287])).
fof(f287,plain,(
  ! [X0] : s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',X0))) = s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X0)))))),
  inference(rectify,[],[f7])).
fof(f7,axiom,(
  ! [X6] : s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',X6))) = s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X6)))))),
  file('thm.frac.FRAC_SGN_POS','thm.frac.frac_sgn_def')).
fof(f16245,plain,(
  s('type.integer.int','const.integer.int_|49|_0') != s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK13))))) | $spl3),
  inference(unit_resulting_resolution,[],[f1470,f1529])).
fof(f1529,plain,(
  ( ! [X0] : (s('type.integer.int','const.integer.int_|49|_0') != s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X0))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X0))))) )),
  inference(backward_demodulation,[],[f1141,f1510])).
fof(f1510,plain,(
  ( ! [X0] : (s('type.integer.int','const.integer.int_|49|_0') != s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X0))) | p(s(bool,'const.integer.int_gt_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) )),
  inference(forward_demodulation,[],[f1509,f1471])).
fof(f1509,plain,(
  ( ! [X0] : (s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X0))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | p(s(bool,'const.integer.int_gt_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) )),
  inference(forward_demodulation,[],[f1022,f906])).
fof(f1022,plain,(
  ( ! [X0] : (p(s(bool,'const.integer.int_gt_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X0))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) )),
  inference(cnf_transformation,[],[f704])).
fof(f704,plain,(
  ! [X0] : ((s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X0))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | p(s(bool,'const.integer.int_gt_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) & (~p(s(bool,'const.integer.int_gt_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X0))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))),
  inference(nnf_transformation,[],[f365])).
fof(f365,plain,(
  ! [X0] : (s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X0))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> p(s(bool,'const.integer.int_gt_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))))),
  inference(rectify,[],[f66])).
fof(f66,axiom,(
  ! [X8] : (s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X8))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> p(s(bool,'const.integer.int_gt_2'(s('type.integer.int',X8),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))))),
  file('thm.frac.FRAC_SGN_POS','thm.intExtension.INT_SGN_CLAUSES|split|2')).
fof(f1141,plain,(
  ( ! [X0,X1] : (s(bool,'const.integer.int_lt_2'(s('type.integer.int',X1),s('type.integer.int',X0))) = s(bool,'const.integer.int_gt_2'(s('type.integer.int',X0),s('type.integer.int',X1)))) )),
  inference(cnf_transformation,[],[f429])).
fof(f429,plain,(
  ! [X0,X1] : s(bool,'const.integer.int_lt_2'(s('type.integer.int',X1),s('type.integer.int',X0))) = s(bool,'const.integer.int_gt_2'(s('type.integer.int',X0),s('type.integer.int',X1)))),
  inference(rectify,[],[f260])).
fof(f260,axiom,(
  ! [X8,X16] : s(bool,'const.integer.int_lt_2'(s('type.integer.int',X16),s('type.integer.int',X8))) = s(bool,'const.integer.int_gt_2'(s('type.integer.int',X8),s('type.integer.int',X16)))),
  file('thm.frac.FRAC_SGN_POS','thm.integer.int_gt')).
fof(f16745,plain,(
  $false | ($spl0 | $spl3)),
  inference(trivial_inequality_removal,[],[f16744])).
fof(f16744,plain,(
  s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_|49|_0'))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_|49|_0'))) | ($spl0 | $spl3)),
  inference(forward_demodulation,[],[f16743,f16149])).
fof(f16743,plain,(
  s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_|49|_0'))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK13))))) | $spl3),
  inference(forward_demodulation,[],[f16737,f935])).
fof(f16737,plain,(
  s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_|49|_0'))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK13))))))) | $spl3),
  inference(unit_resulting_resolution,[],[f16245,f1219])).
fof(f1219,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X0))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X1))) | s('type.integer.int',X0) = s('type.integer.int',X1)) )),
  inference(cnf_transformation,[],[f800])).
fof(f800,plain,(
  ! [X0,X1] : ((s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X0))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X1))) | s('type.integer.int',X0) = s('type.integer.int',X1)) & (s('type.integer.int',X0) != s('type.integer.int',X1) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X0))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X1)))))),
  inference(nnf_transformation,[],[f492])).
fof(f492,plain,(
  ! [X0,X1] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X0))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X1))) <=> s('type.integer.int',X0) = s('type.integer.int',X1))),
  inference(rectify,[],[f127])).
fof(f127,axiom,(
  ! [X8,X16] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X8))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X16))) <=> s('type.integer.int',X8) = s('type.integer.int',X16))),
  file('thm.frac.FRAC_SGN_POS','thm.integer.INT_EQ_NEG')).
fof(f16742,plain,(
  $false | ($spl0 | $spl3)),
  inference(trivial_inequality_removal,[],[f16741])).
fof(f16741,plain,(
  s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_|49|_0'))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_|49|_0'))) | ($spl0 | $spl3)),
  inference(forward_demodulation,[],[f16740,f16149])).
fof(f16740,plain,(
  s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_|49|_0'))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK13))))) | $spl3),
  inference(forward_demodulation,[],[f16738,f935])).
fof(f16738,plain,(
  s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_|49|_0'))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK13))))))) | $spl3),
  inference(unit_resulting_resolution,[],[f16245,f1219])).
fof(f15884,plain,(
  s('type.integer.int','const.integer.int_|49|_0') = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_|49|_0'),s('type.integer.int','const.integer.int_|49|_0'))) | $spl32),
  inference(cnf_transformation,[],[f15884_D])).
fof(f15884_D,plain,(
  s('type.integer.int','const.integer.int_|49|_0') = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_|49|_0'),s('type.integer.int','const.integer.int_|49|_0'))) <=> ~$spl32),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl32])])).
fof(f16146,plain,(
  s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK13))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | $spl48),
  inference(cnf_transformation,[],[f16146_D])).
fof(f16146_D,plain,(
  s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK13))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) <=> ~$spl48),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl48])])).
fof(f16147,plain,(
  s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK13))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int','const.integer.int_|49|_0') = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_|49|_0'),s('type.integer.int','const.integer.int_|49|_0'))) | $spl2),
  inference(forward_demodulation,[],[f16076,f935])).
fof(f16076,plain,(
  s('type.integer.int','const.integer.int_|49|_0') = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_|49|_0'),s('type.integer.int','const.integer.int_|49|_0'))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK13))))) | $spl2),
  inference(superposition,[],[f1500,f16039])).
fof(f16039,plain,(
  s('type.integer.int','const.integer.int_|49|_0') = s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK13))))) | $spl2),
  inference(subsumption_resolution,[],[f16008,f898])).
fof(f898,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f1])).
fof(f1,axiom,(
  p(s(bool,'T_0'))),
  file('thm.frac.FRAC_SGN_POS',aHL_TRUTH)).
fof(f16008,plain,(
  ~p(s(bool,'T_0')) | s('type.integer.int','const.integer.int_|49|_0') = s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK13))))) | $spl2),
  inference(superposition,[],[f1530,f1709])).
fof(f1709,plain,(
  s(bool,'T_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK13))))) | $spl2),
  inference(unit_resulting_resolution,[],[f1469,f997])).
fof(f997,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f691])).
fof(f691,plain,(
  ! [X0] : ((s(bool,'T_0') != s(bool,X0) | p(s(bool,X0))) & (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f350])).
fof(f350,plain,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) <=> p(s(bool,X0)))),
  inference(rectify,[],[f39])).
fof(f39,axiom,(
  ! [X22] : (s(bool,'T_0') = s(bool,X22) <=> p(s(bool,X22)))),
  file('thm.frac.FRAC_SGN_POS','thm.bool.EQ_CLAUSES|split|1')).
fof(f1530,plain,(
  ( ! [X0] : (~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X0)))) | s('type.integer.int','const.integer.int_|49|_0') = s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X0)))) )),
  inference(backward_demodulation,[],[f1141,f1508])).
fof(f1508,plain,(
  ( ! [X0] : (s('type.integer.int','const.integer.int_|49|_0') = s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X0))) | ~p(s(bool,'const.integer.int_gt_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) )),
  inference(forward_demodulation,[],[f1507,f1471])).
fof(f1507,plain,(
  ( ! [X0] : (s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X0))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | ~p(s(bool,'const.integer.int_gt_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) )),
  inference(forward_demodulation,[],[f1023,f906])).
fof(f1023,plain,(
  ( ! [X0] : (s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X0))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | ~p(s(bool,'const.integer.int_gt_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) )),
  inference(cnf_transformation,[],[f704])).
fof(f1500,plain,(
  ( ! [X0] : (s('type.integer.int','const.integer.int_|49|_0') = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0))) | s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(forward_demodulation,[],[f1499,f1471])).
fof(f1499,plain,(
  ( ! [X0] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0))) | s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(forward_demodulation,[],[f993,f906])).
fof(f993,plain,(
  ( ! [X0] : (s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(cnf_transformation,[],[f596])).
fof(f596,plain,(
  ! [X0] : (s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),
  inference(ennf_transformation,[],[f345])).
fof(f345,plain,(
  ! [X0] : (s('type.integer.int',X0) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) => s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),
  inference(flattening,[],[f344])).
fof(f344,plain,(
  ! [X0] : (~s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) => s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),
  inference(rectify,[],[f67])).
fof(f67,axiom,(
  ! [X25] : (~s('type.integer.int',X25) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) => s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X25),s('type.integer.int',X25))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),
  file('thm.frac.FRAC_SGN_POS','thm.integer.INT_DIV_ID')).
fof(f15758,plain,(
  s('type.integer.int','const.integer.int_|49|_0') = s('type.integer.int','const.integer.int_quot_2'(s('type.integer.int','const.integer.int_|49|_0'),s('type.integer.int','const.integer.int_|49|_0'))) | $spl24),
  inference(cnf_transformation,[],[f15758_D])).
fof(f15758_D,plain,(
  s('type.integer.int','const.integer.int_|49|_0') = s('type.integer.int','const.integer.int_quot_2'(s('type.integer.int','const.integer.int_|49|_0'),s('type.integer.int','const.integer.int_|49|_0'))) <=> ~$spl24),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl24])])).
fof(f16144,plain,(
  s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK13))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int','const.integer.int_|49|_0') = s('type.integer.int','const.integer.int_quot_2'(s('type.integer.int','const.integer.int_|49|_0'),s('type.integer.int','const.integer.int_|49|_0'))) | $spl2),
  inference(forward_demodulation,[],[f16075,f935])).
fof(f16075,plain,(
  s('type.integer.int','const.integer.int_|49|_0') = s('type.integer.int','const.integer.int_quot_2'(s('type.integer.int','const.integer.int_|49|_0'),s('type.integer.int','const.integer.int_|49|_0'))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK13))))) | $spl2),
  inference(superposition,[],[f1498,f16039])).
fof(f1498,plain,(
  ( ! [X0] : (s('type.integer.int','const.integer.int_|49|_0') = s('type.integer.int','const.integer.int_quot_2'(s('type.integer.int',X0),s('type.integer.int',X0))) | s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(forward_demodulation,[],[f1497,f1471])).
fof(f1497,plain,(
  ( ! [X0] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.integer.int','const.integer.int_quot_2'(s('type.integer.int',X0),s('type.integer.int',X0))) | s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(forward_demodulation,[],[f992,f906])).
fof(f992,plain,(
  ( ! [X0] : (s('type.integer.int','const.integer.int_quot_2'(s('type.integer.int',X0),s('type.integer.int',X0))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(cnf_transformation,[],[f595])).
fof(f595,plain,(
  ! [X0] : (s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int','const.integer.int_quot_2'(s('type.integer.int',X0),s('type.integer.int',X0))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),
  inference(ennf_transformation,[],[f343])).
fof(f343,plain,(
  ! [X0] : (s('type.integer.int',X0) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) => s('type.integer.int','const.integer.int_quot_2'(s('type.integer.int',X0),s('type.integer.int',X0))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),
  inference(flattening,[],[f342])).
fof(f342,plain,(
  ! [X0] : (~s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) => s('type.integer.int','const.integer.int_quot_2'(s('type.integer.int',X0),s('type.integer.int',X0))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),
  inference(rectify,[],[f68])).
fof(f68,axiom,(
  ! [X25] : (~s('type.integer.int',X25) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) => s('type.integer.int','const.integer.int_quot_2'(s('type.integer.int',X25),s('type.integer.int',X25))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),
  file('thm.frac.FRAC_SGN_POS','thm.integer.INT_QUOT_ID')).
fof(f16131,plain,(
  $false | ($spl1 | $spl2)),
  inference(subsumption_resolution,[],[f16047,f1595])).
fof(f1595,plain,(
  s('type.integer.int','const.integer.int_|49|_0') != s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK13))) | $spl1),
  inference(forward_demodulation,[],[f1594,f1471])).
fof(f1594,plain,(
  s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK13))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | $spl1),
  inference(forward_demodulation,[],[f1468,f906])).
fof(f16047,plain,(
  s('type.integer.int','const.integer.int_|49|_0') = s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK13))) | $spl2),
  inference(superposition,[],[f935,f16039])).
fof(f16130,plain,(
  $false | ($spl1 | $spl2)),
  inference(subsumption_resolution,[],[f16046,f1595])).
fof(f16046,plain,(
  s('type.integer.int','const.integer.int_|49|_0') = s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK13))) | $spl2),
  inference(superposition,[],[f16039,f935])).
fof(f16127,plain,(
  $false | ($spl1 | $spl2)),
  inference(subsumption_resolution,[],[f16126,f11371])).
fof(f11371,plain,(
  s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_|49|_0'))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK13))))) | $spl1),
  inference(unit_resulting_resolution,[],[f1595,f1219])).
fof(f16126,plain,(
  s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_|49|_0'))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK13))))) | $spl2),
  inference(forward_demodulation,[],[f16042,f935])).
fof(f16042,plain,(
  s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_|49|_0'))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK13))))))) | $spl2),
  inference(unit_resulting_resolution,[],[f16039,f1220])).
fof(f1220,plain,(
  ( ! [X0,X1] : (s('type.integer.int',X0) != s('type.integer.int',X1) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X0))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X1)))) )),
  inference(cnf_transformation,[],[f800])).
fof(f16124,plain,(
  $false | ($spl1 | $spl2)),
  inference(subsumption_resolution,[],[f16123,f11371])).
fof(f16123,plain,(
  s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_|49|_0'))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK13))))) | $spl2),
  inference(forward_demodulation,[],[f16044,f935])).
fof(f16044,plain,(
  s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_|49|_0'))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK13))))))) | $spl2),
  inference(unit_resulting_resolution,[],[f16039,f1220])).
fof(f16027,plain,(
  ( ! [X10] : (s('type.integer.int','const.integer.int_|49|_0') = s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int','const.integer.int_quot_2'(s('type.integer.int',X10),s('type.integer.int',X10))))) | s('type.integer.int',X10) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl46),
  inference(cnf_transformation,[],[f16027_D])).
fof(f16027_D,plain,(
  ( ! [X10] : (s('type.integer.int','const.integer.int_|49|_0') = s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int','const.integer.int_quot_2'(s('type.integer.int',X10),s('type.integer.int',X10))))) | s('type.integer.int',X10) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) <=> ~$spl46),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl46])])).
fof(f16026,plain,(
  ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_|49|_0')))) | $spl45),
  inference(cnf_transformation,[],[f16026_D])).
fof(f16026_D,plain,(
  ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_|49|_0')))) <=> ~$spl45),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl45])])).
fof(f15996,plain,(
  ( ! [X10] : (~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_|49|_0')))) | s('type.integer.int','const.integer.int_|49|_0') = s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int','const.integer.int_quot_2'(s('type.integer.int',X10),s('type.integer.int',X10))))) | s('type.integer.int',X10) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f1530,f1498])).
fof(f16024,plain,(
  ( ! [X9] : (s('type.integer.int','const.integer.int_|49|_0') = s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X9),s('type.integer.int',X9))))) | s('type.integer.int',X9) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl42),
  inference(cnf_transformation,[],[f16024_D])).
fof(f16024_D,plain,(
  ( ! [X9] : (s('type.integer.int','const.integer.int_|49|_0') = s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X9),s('type.integer.int',X9))))) | s('type.integer.int',X9) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) <=> ~$spl42),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl42])])).
fof(f15995,plain,(
  ( ! [X9] : (~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_|49|_0')))) | s('type.integer.int','const.integer.int_|49|_0') = s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X9),s('type.integer.int',X9))))) | s('type.integer.int',X9) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f1530,f1500])).
fof(f15944,plain,(
  ( ! [X10] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_quot_2'(s('type.integer.int',X10),s('type.integer.int',X10)))))) | s('type.integer.int',X10) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl40),
  inference(cnf_transformation,[],[f15944_D])).
fof(f15944_D,plain,(
  ( ! [X10] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_quot_2'(s('type.integer.int',X10),s('type.integer.int',X10)))))) | s('type.integer.int',X10) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) <=> ~$spl40),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl40])])).
fof(f15929,plain,(
  s('type.integer.int','const.integer.int_|49|_0') != s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int','const.integer.int_|49|_0'))) | $spl35),
  inference(cnf_transformation,[],[f15929_D])).
fof(f15929_D,plain,(
  s('type.integer.int','const.integer.int_|49|_0') != s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int','const.integer.int_|49|_0'))) <=> ~$spl35),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl35])])).
fof(f15913,plain,(
  ( ! [X10] : (s('type.integer.int','const.integer.int_|49|_0') != s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int','const.integer.int_|49|_0'))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_quot_2'(s('type.integer.int',X10),s('type.integer.int',X10)))))) | s('type.integer.int',X10) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f1529,f1498])).
fof(f15943,plain,(
  ( ! [X9] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X9),s('type.integer.int',X9)))))) | s('type.integer.int',X9) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl38),
  inference(cnf_transformation,[],[f15943_D])).
fof(f15943_D,plain,(
  ( ! [X9] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X9),s('type.integer.int',X9)))))) | s('type.integer.int',X9) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) <=> ~$spl38),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl38])])).
fof(f15912,plain,(
  ( ! [X9] : (s('type.integer.int','const.integer.int_|49|_0') != s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int','const.integer.int_|49|_0'))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X9),s('type.integer.int',X9)))))) | s('type.integer.int',X9) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f1529,f1500])).
fof(f15931,plain,(
  p(s(bool,'const.arithmetic.>_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.num.|48|_0')))) | $spl36),
  inference(cnf_transformation,[],[f15931_D])).
fof(f15931_D,plain,(
  p(s(bool,'const.arithmetic.>_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.num.|48|_0')))) <=> ~$spl36),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl36])])).
fof(f15927,plain,(
  p(s(bool,'const.arithmetic.>_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.num.|48|_0')))) | s('type.integer.int','const.integer.int_|49|_0') != s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int','const.integer.int_|49|_0')))),
  inference(forward_demodulation,[],[f15926,f14453])).
fof(f14453,plain,(
  s(bool,'const.arithmetic.>_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.num.|48|_0'))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))),
  inference(backward_demodulation,[],[f14403,f14298])).
fof(f14298,plain,(
  s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))),
  inference(superposition,[],[f959,f906])).
fof(f959,plain,(
  ( ! [X0] : (s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X0))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))) )),
  inference(cnf_transformation,[],[f311])).
fof(f311,plain,(
  ! [X0] : s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X0))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))),
  inference(rectify,[],[f111])).
fof(f111,axiom,(
  ! [X19] : s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X19))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X19)))))),
  file('thm.frac.FRAC_SGN_POS','thm.numeral.numeral_distrib|split|21')).
fof(f14403,plain,(
  s(bool,'const.arithmetic.>_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.num.|48|_0'))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  inference(superposition,[],[f960,f906])).
fof(f960,plain,(
  ( ! [X0] : (s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X0))) = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.num.|48|_0')))) )),
  inference(cnf_transformation,[],[f312])).
fof(f312,plain,(
  ! [X0] : s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X0))) = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.num.|48|_0')))),
  inference(rectify,[],[f95])).
fof(f95,axiom,(
  ! [X19] : s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X19))) = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X19))),s('type.num.num','const.num.|48|_0')))),
  file('thm.frac.FRAC_SGN_POS','thm.numeral.numeral_distrib|split|24')).
fof(f15926,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.integer.int','const.integer.int_|49|_0') != s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int','const.integer.int_|49|_0')))),
  inference(forward_demodulation,[],[f15901,f1147])).
fof(f1147,plain,(
  ( ! [X0,X1] : (s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1))) = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X0))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X1)))))) )),
  inference(cnf_transformation,[],[f435])).
fof(f435,plain,(
  ! [X0,X1] : s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1))) = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X0))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X1)))))),
  inference(rectify,[],[f258])).
fof(f258,axiom,(
  ! [X19,X26] : s(bool,'const.prim_rec.<_2'(s('type.num.num',X19),s('type.num.num',X26))) = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X19))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X26)))))),
  file('thm.frac.FRAC_SGN_POS','thm.integer.INT_LT_CALCULATE|split|0')).
fof(f15901,plain,(
  s('type.integer.int','const.integer.int_|49|_0') != s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int','const.integer.int_|49|_0'))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))),
  inference(superposition,[],[f1529,f1471])).
fof(f15882,plain,(
  ( ! [X9] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X9),s('type.integer.int',X9))) | s('type.integer.int',X9) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl30),
  inference(cnf_transformation,[],[f15882_D])).
fof(f15882_D,plain,(
  ( ! [X9] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X9),s('type.integer.int',X9))) | s('type.integer.int',X9) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) <=> ~$spl30),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl30])])).
fof(f15829,plain,(
  ( ! [X46] : (s('type.integer.int','const.integer.int_|49|_0') = s('type.integer.int','const.integer.int_quot_2'(s('type.integer.int','const.integer.int_|49|_0'),s('type.integer.int','const.integer.int_|49|_0'))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X46),s('type.integer.int',X46))) | s('type.integer.int',X46) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f1498,f1500])).
fof(f15790,plain,(
  ( ! [X9] : (s('type.integer.int','const.integer.int_|49|_0') = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_|49|_0'),s('type.integer.int','const.integer.int_|49|_0'))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X9),s('type.integer.int',X9))) | s('type.integer.int',X9) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f1500,f1500])).
fof(f15765,plain,(
  ( ! [X46] : (p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_quot_2'(s('type.integer.int',X46),s('type.integer.int',X46))),s('type.integer.int','const.integer.int_|49|_0')))) | s('type.integer.int',X46) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl26),
  inference(cnf_transformation,[],[f15765_D])).
fof(f15765_D,plain,(
  ( ! [X46] : (p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_quot_2'(s('type.integer.int',X46),s('type.integer.int',X46))),s('type.integer.int','const.integer.int_|49|_0')))) | s('type.integer.int',X46) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) <=> ~$spl26),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl26])])).
fof(f15767,plain,(
  s('type.integer.int','const.integer.int_|49|_0') != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_|49|_0'))) | $spl29),
  inference(cnf_transformation,[],[f15767_D])).
fof(f15767_D,plain,(
  s('type.integer.int','const.integer.int_|49|_0') != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_|49|_0'))) <=> ~$spl29),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl29])])).
fof(f15704,plain,(
  ( ! [X46] : (s('type.integer.int','const.integer.int_|49|_0') != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_|49|_0'))) | p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_quot_2'(s('type.integer.int',X46),s('type.integer.int',X46))),s('type.integer.int','const.integer.int_|49|_0')))) | s('type.integer.int',X46) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f1514,f1498])).
fof(f1514,plain,(
  ( ! [X0] : (s('type.integer.int',X0) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_|49|_0'))) | p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_|49|_0'))))) )),
  inference(forward_demodulation,[],[f1513,f1471])).
fof(f1513,plain,(
  ( ! [X0] : (s('type.integer.int',X0) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_|49|_0'))))) )),
  inference(forward_demodulation,[],[f1512,f906])).
fof(f1512,plain,(
  ( ! [X0] : (p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_|49|_0')))) | s('type.integer.int',X0) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) )),
  inference(forward_demodulation,[],[f1511,f1471])).
fof(f1511,plain,(
  ( ! [X0] : (p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))) | s('type.integer.int',X0) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) )),
  inference(forward_demodulation,[],[f1026,f906])).
fof(f1026,plain,(
  ( ! [X0] : (p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | s('type.integer.int',X0) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) )),
  inference(cnf_transformation,[],[f706])).
fof(f706,plain,(
  ! [X0] : ((~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int',X0) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) & ((s('type.integer.int',X0) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) & s('type.integer.int',X0) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),
  inference(flattening,[],[f705])).
fof(f705,plain,(
  ! [X0] : ((~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | (s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int',X0) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) & ((s('type.integer.int',X0) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) & s('type.integer.int',X0) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),
  inference(nnf_transformation,[],[f366])).
fof(f366,plain,(
  ! [X0] : (p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) <=> (s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int',X0) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))),
  inference(rectify,[],[f62])).
fof(f62,axiom,(
  ! [X8] : (p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X8),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) <=> (s('type.integer.int',X8) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int',X8) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))),
  file('thm.frac.FRAC_SGN_POS','thm.integer.INT_DIVIDES_|49||split|1')).
fof(f15756,plain,(
  ( ! [X9] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_quot_2'(s('type.integer.int',X9),s('type.integer.int',X9))) | s('type.integer.int',X9) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl22),
  inference(cnf_transformation,[],[f15756_D])).
fof(f15756_D,plain,(
  ( ! [X9] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_quot_2'(s('type.integer.int',X9),s('type.integer.int',X9))) | s('type.integer.int',X9) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) <=> ~$spl22),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl22])])).
fof(f15666,plain,(
  ( ! [X9] : (s('type.integer.int','const.integer.int_|49|_0') = s('type.integer.int','const.integer.int_quot_2'(s('type.integer.int','const.integer.int_|49|_0'),s('type.integer.int','const.integer.int_|49|_0'))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_quot_2'(s('type.integer.int',X9),s('type.integer.int',X9))) | s('type.integer.int',X9) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f1498,f1498])).
fof(f5783,plain,(
  ( ! [X8] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X8),s('type.num.num','const.num.|48|_0')))) ) | $spl18),
  inference(cnf_transformation,[],[f5783_D])).
fof(f5783_D,plain,(
  ( ! [X8] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X8),s('type.num.num','const.num.|48|_0')))) ) <=> ~$spl18),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl18])])).
fof(f5785,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | $spl21),
  inference(cnf_transformation,[],[f5785_D])).
fof(f5785_D,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) <=> ~$spl21),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl21])])).
fof(f5767,plain,(
  ( ! [X8] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X8),s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f1012,f1478])).
fof(f1478,plain,(
  ( ! [X0] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) )),
  inference(forward_demodulation,[],[f946,f906])).
fof(f946,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) )),
  inference(cnf_transformation,[],[f298])).
fof(f298,plain,(
  ! [X0] : s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))),
  inference(rectify,[],[f122])).
fof(f122,axiom,(
  ! [X19] : s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X19),s('type.num.num','const.num.|48|_0')))),
  file('thm.frac.FRAC_SGN_POS','thm.numeral.numeral_distrib|split|11')).
fof(f1012,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X0)) )),
  inference(cnf_transformation,[],[f699])).
fof(f699,plain,(
  ! [X0] : ((s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X0)) & (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X0) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))),
  inference(nnf_transformation,[],[f360])).
fof(f360,plain,(
  ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) <=> s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X0))),
  inference(rectify,[],[f94])).
fof(f94,axiom,(
  ! [X19] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X19))) <=> s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X19))),
  file('thm.frac.FRAC_SGN_POS','thm.numeral.numeral_distrib|split|17')).
fof(f5782,plain,(
  ( ! [X7] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X7)))) ) | $spl16),
  inference(cnf_transformation,[],[f5782_D])).
fof(f5782_D,plain,(
  ( ! [X7] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X7)))) ) <=> ~$spl16),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl16])])).
fof(f5779,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) | $spl11),
  inference(cnf_transformation,[],[f5779_D])).
fof(f5779_D,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) <=> ~$spl11),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl11])])).
fof(f5766,plain,(
  ( ! [X7] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X7)))) )),
  inference(superposition,[],[f1012,f933])).
fof(f933,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f285])).
fof(f285,plain,(
  ! [X0] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))),
  inference(rectify,[],[f112])).
fof(f112,axiom,(
  ! [X19] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X19)))),
  file('thm.frac.FRAC_SGN_POS','thm.numeral.numeral_distrib|split|6')).
fof(f5781,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num','const.num.|48|_0')))) ) | $spl14),
  inference(cnf_transformation,[],[f5781_D])).
fof(f5781_D,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num','const.num.|48|_0')))) ) <=> ~$spl14),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl14])])).
fof(f5760,plain,(
  ( ! [X1] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f1012,f927])).
fof(f927,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) )),
  inference(cnf_transformation,[],[f279])).
fof(f279,plain,(
  ! [X0] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))),
  inference(rectify,[],[f152])).
fof(f152,axiom,(
  ! [X26] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X26),s('type.num.num','const.num.|48|_0')))),
  file('thm.frac.FRAC_SGN_POS','thm.arithmetic.MULT_|48|')).
fof(f5780,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) ) | $spl12),
  inference(cnf_transformation,[],[f5780_D])).
fof(f5780_D,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) ) <=> ~$spl12),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl12])])).
fof(f5759,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) )),
  inference(superposition,[],[f1012,f920])).
fof(f920,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f272])).
fof(f272,plain,(
  ! [X0] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))),
  inference(rectify,[],[f91])).
fof(f91,axiom,(
  ! [X19] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X19)))),
  file('thm.frac.FRAC_SGN_POS','thm.arithmetic.MULT|split|0')).
fof(f5777,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0'))) | $spl8),
  inference(cnf_transformation,[],[f5777_D])).
fof(f5777_D,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0'))) <=> ~$spl8),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl8])])).
fof(f5758,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))),
  inference(superposition,[],[f1012,f901])).
fof(f901,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))),
  inference(cnf_transformation,[],[f88])).
fof(f88,axiom,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))),
  file('thm.frac.FRAC_SGN_POS','thm.prim_rec.PRE|split|0')).
fof(f1593,plain,(
  $false | $spl5),
  inference(subsumption_resolution,[],[f1592,f965])).
fof(f965,plain,(
  ( ! [X0] : (p(s(bool,'const.integer.tint_eq_2'(s('type.pair.prod'('type.num.num','type.num.num'),'const.integer.tint_add_2'(s('type.pair.prod'('type.num.num','type.num.num'),'const.integer.tint_|48|_0'),s('type.pair.prod'('type.num.num','type.num.num'),X0))),s('type.pair.prod'('type.num.num','type.num.num'),X0))))) )),
  inference(cnf_transformation,[],[f317])).
fof(f317,plain,(
  ! [X0] : p(s(bool,'const.integer.tint_eq_2'(s('type.pair.prod'('type.num.num','type.num.num'),'const.integer.tint_add_2'(s('type.pair.prod'('type.num.num','type.num.num'),'const.integer.tint_|48|_0'),s('type.pair.prod'('type.num.num','type.num.num'),X0))),s('type.pair.prod'('type.num.num','type.num.num'),X0))))),
  inference(rectify,[],[f172])).
fof(f172,axiom,(
  ! [X8] : p(s(bool,'const.integer.tint_eq_2'(s('type.pair.prod'('type.num.num','type.num.num'),'const.integer.tint_add_2'(s('type.pair.prod'('type.num.num','type.num.num'),'const.integer.tint_|48|_0'),s('type.pair.prod'('type.num.num','type.num.num'),X8))),s('type.pair.prod'('type.num.num','type.num.num'),X8))))),
  file('thm.frac.FRAC_SGN_POS','thm.integer.TINT_ADD_LID')).
fof(f1592,plain,(
  ~p(s(bool,'const.integer.tint_eq_2'(s('type.pair.prod'('type.num.num','type.num.num'),'const.integer.tint_add_2'(s('type.pair.prod'('type.num.num','type.num.num'),'const.integer.tint_|48|_0'),s('type.pair.prod'('type.num.num','type.num.num'),sK14))),s('type.pair.prod'('type.num.num','type.num.num'),sK14)))) | $spl5),
  inference(forward_demodulation,[],[f1591,f1175])).
fof(f1175,plain,(
  ( ! [X0,X1] : (s('type.pair.prod'('type.num.num','type.num.num'),'const.integer.tint_add_2'(s('type.pair.prod'('type.num.num','type.num.num'),X0),s('type.pair.prod'('type.num.num','type.num.num'),X1))) = s('type.pair.prod'('type.num.num','type.num.num'),happ(s(fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num')),'const.integer.tint_add_1'(s('type.pair.prod'('type.num.num','type.num.num'),X0))),s('type.pair.prod'('type.num.num','type.num.num'),X1)))) )),
  inference(cnf_transformation,[],[f463])).
fof(f463,plain,(
  ! [X0,X1] : s('type.pair.prod'('type.num.num','type.num.num'),'const.integer.tint_add_2'(s('type.pair.prod'('type.num.num','type.num.num'),X0),s('type.pair.prod'('type.num.num','type.num.num'),X1))) = s('type.pair.prod'('type.num.num','type.num.num'),happ(s(fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num')),'const.integer.tint_add_1'(s('type.pair.prod'('type.num.num','type.num.num'),X0))),s('type.pair.prod'('type.num.num','type.num.num'),X1)))),
  inference(rectify,[],[f179])).
fof(f179,axiom,(
  ! [X36,X37] : s('type.pair.prod'('type.num.num','type.num.num'),'const.integer.tint_add_2'(s('type.pair.prod'('type.num.num','type.num.num'),X36),s('type.pair.prod'('type.num.num','type.num.num'),X37))) = s('type.pair.prod'('type.num.num','type.num.num'),happ(s(fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num')),'const.integer.tint_add_1'(s('type.pair.prod'('type.num.num','type.num.num'),X36))),s('type.pair.prod'('type.num.num','type.num.num'),X37)))),
  file('thm.frac.FRAC_SGN_POS','ARITY_1_2_const.integer.tint_add')).
fof(f1591,plain,(
  ~p(s(bool,'const.integer.tint_eq_2'(s('type.pair.prod'('type.num.num','type.num.num'),happ(s(fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num')),'const.integer.tint_add_1'(s('type.pair.prod'('type.num.num','type.num.num'),'const.integer.tint_|48|_0'))),s('type.pair.prod'('type.num.num','type.num.num'),sK14))),s('type.pair.prod'('type.num.num','type.num.num'),sK14)))) | $spl5),
  inference(forward_demodulation,[],[f1473,f1177])).
fof(f1177,plain,(
  ( ! [X0,X1] : (s(bool,'const.integer.tint_eq_2'(s('type.pair.prod'('type.num.num','type.num.num'),X0),s('type.pair.prod'('type.num.num','type.num.num'),X1))) = s(bool,happ(s(fun('type.pair.prod'('type.num.num','type.num.num'),bool),happ(s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),bool)),'const.integer.tint_eq_0'),s('type.pair.prod'('type.num.num','type.num.num'),X0))),s('type.pair.prod'('type.num.num','type.num.num'),X1)))) )),
  inference(cnf_transformation,[],[f465])).
fof(f465,plain,(
  ! [X0,X1] : s(bool,'const.integer.tint_eq_2'(s('type.pair.prod'('type.num.num','type.num.num'),X0),s('type.pair.prod'('type.num.num','type.num.num'),X1))) = s(bool,happ(s(fun('type.pair.prod'('type.num.num','type.num.num'),bool),happ(s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),bool)),'const.integer.tint_eq_0'),s('type.pair.prod'('type.num.num','type.num.num'),X0))),s('type.pair.prod'('type.num.num','type.num.num'),X1)))),
  inference(rectify,[],[f169])).
fof(f169,axiom,(
  ! [X36,X37] : s(bool,'const.integer.tint_eq_2'(s('type.pair.prod'('type.num.num','type.num.num'),X36),s('type.pair.prod'('type.num.num','type.num.num'),X37))) = s(bool,happ(s(fun('type.pair.prod'('type.num.num','type.num.num'),bool),happ(s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),bool)),'const.integer.tint_eq_0'),s('type.pair.prod'('type.num.num','type.num.num'),X36))),s('type.pair.prod'('type.num.num','type.num.num'),X37)))),
  file('thm.frac.FRAC_SGN_POS','ARITY_0_2_const.integer.tint_eq')).
fof(f1473,plain,(
  ~p(s(bool,happ(s(fun('type.pair.prod'('type.num.num','type.num.num'),bool),happ(s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),bool)),'const.integer.tint_eq_0'),s('type.pair.prod'('type.num.num','type.num.num'),happ(s(fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num')),'const.integer.tint_add_1'(s('type.pair.prod'('type.num.num','type.num.num'),'const.integer.tint_|48|_0'))),s('type.pair.prod'('type.num.num','type.num.num'),sK14))))),s('type.pair.prod'('type.num.num','type.num.num'),sK14)))) | $spl5),
  inference(cnf_transformation,[],[f1473_D])).
fof(f1473_D,plain,(
  ~p(s(bool,happ(s(fun('type.pair.prod'('type.num.num','type.num.num'),bool),happ(s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),bool)),'const.integer.tint_eq_0'),s('type.pair.prod'('type.num.num','type.num.num'),happ(s(fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num')),'const.integer.tint_add_1'(s('type.pair.prod'('type.num.num','type.num.num'),'const.integer.tint_|48|_0'))),s('type.pair.prod'('type.num.num','type.num.num'),sK14))))),s('type.pair.prod'('type.num.num','type.num.num'),sK14)))) <=> ~$spl5),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl5])])).
fof(f1475,plain,(
  p(s(bool,'const.bool.RES_FORALL_2'(s(fun('type.pair.prod'('type.num.num','type.num.num'),bool),'const.quotient.respects_1'(s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),bool)),'const.integer.tint_eq_0'))),s(fun('type.pair.prod'('type.num.num','type.num.num'),bool),'_dst_x0x1x1_3'(s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),bool)),'const.integer.tint_eq_0'),s(fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num')),'const.integer.tint_add_1'(s('type.pair.prod'('type.num.num','type.num.num'),'const.integer.tint_|48|_0'))),s(fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num')),'_i_0_0')))))) | $spl6),
  inference(cnf_transformation,[],[f1475_D])).
fof(f1475_D,plain,(
  p(s(bool,'const.bool.RES_FORALL_2'(s(fun('type.pair.prod'('type.num.num','type.num.num'),bool),'const.quotient.respects_1'(s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),bool)),'const.integer.tint_eq_0'))),s(fun('type.pair.prod'('type.num.num','type.num.num'),bool),'_dst_x0x1x1_3'(s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),bool)),'const.integer.tint_eq_0'),s(fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num')),'const.integer.tint_add_1'(s('type.pair.prod'('type.num.num','type.num.num'),'const.integer.tint_|48|_0'))),s(fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num')),'_i_0_0')))))) <=> ~$spl6),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl6])])).
fof(f910,plain,(
  p(s(bool,'const.bool.RES_FORALL_2'(s(fun('type.pair.prod'('type.num.num','type.num.num'),bool),'const.quotient.respects_1'(s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),bool)),'const.integer.tint_eq_0'))),s(fun('type.pair.prod'('type.num.num','type.num.num'),bool),'_dst_x0x1x1_3'(s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),bool)),'const.integer.tint_eq_0'),s(fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num')),'const.integer.tint_add_1'(s('type.pair.prod'('type.num.num','type.num.num'),'const.integer.tint_|48|_0'))),s(fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num')),'_i_0_0')))))) | ~p(s(bool,happ(s(fun('type.pair.prod'('type.num.num','type.num.num'),bool),happ(s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),bool)),'const.integer.tint_eq_0'),s('type.pair.prod'('type.num.num','type.num.num'),happ(s(fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num')),'const.integer.tint_add_1'(s('type.pair.prod'('type.num.num','type.num.num'),'const.integer.tint_|48|_0'))),s('type.pair.prod'('type.num.num','type.num.num'),sK14))))),s('type.pair.prod'('type.num.num','type.num.num'),sK14))))),
  inference(cnf_transformation,[],[f687])).
fof(f687,plain,(
  ~p(s(bool,happ(s(fun('type.pair.prod'('type.num.num','type.num.num'),bool),happ(s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),bool)),'const.integer.tint_eq_0'),s('type.pair.prod'('type.num.num','type.num.num'),happ(s(fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num')),'const.integer.tint_add_1'(s('type.pair.prod'('type.num.num','type.num.num'),'const.integer.tint_|48|_0'))),s('type.pair.prod'('type.num.num','type.num.num'),sK14))))),s('type.pair.prod'('type.num.num','type.num.num'),sK14)))) | p(s(bool,'const.bool.RES_FORALL_2'(s(fun('type.pair.prod'('type.num.num','type.num.num'),bool),'const.quotient.respects_1'(s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),bool)),'const.integer.tint_eq_0'))),s(fun('type.pair.prod'('type.num.num','type.num.num'),bool),'_dst_x0x1x1_3'(s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),bool)),'const.integer.tint_eq_0'),s(fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num')),'const.integer.tint_add_1'(s('type.pair.prod'('type.num.num','type.num.num'),'const.integer.tint_|48|_0'))),s(fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num')),'_i_0_0'))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK14])],[f586])).
fof(f586,plain,(
  ? [X0] : ~p(s(bool,happ(s(fun('type.pair.prod'('type.num.num','type.num.num'),bool),happ(s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),bool)),'const.integer.tint_eq_0'),s('type.pair.prod'('type.num.num','type.num.num'),happ(s(fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num')),'const.integer.tint_add_1'(s('type.pair.prod'('type.num.num','type.num.num'),'const.integer.tint_|48|_0'))),s('type.pair.prod'('type.num.num','type.num.num'),X0))))),s('type.pair.prod'('type.num.num','type.num.num'),X0)))) | p(s(bool,'const.bool.RES_FORALL_2'(s(fun('type.pair.prod'('type.num.num','type.num.num'),bool),'const.quotient.respects_1'(s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),bool)),'const.integer.tint_eq_0'))),s(fun('type.pair.prod'('type.num.num','type.num.num'),bool),'_dst_x0x1x1_3'(s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),bool)),'const.integer.tint_eq_0'),s(fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num')),'const.integer.tint_add_1'(s('type.pair.prod'('type.num.num','type.num.num'),'const.integer.tint_|48|_0'))),s(fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num')),'_i_0_0'))))))),
  inference(ennf_transformation,[],[f264])).
fof(f264,plain,(
  ! [X0] : p(s(bool,happ(s(fun('type.pair.prod'('type.num.num','type.num.num'),bool),happ(s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),bool)),'const.integer.tint_eq_0'),s('type.pair.prod'('type.num.num','type.num.num'),happ(s(fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num')),'const.integer.tint_add_1'(s('type.pair.prod'('type.num.num','type.num.num'),'const.integer.tint_|48|_0'))),s('type.pair.prod'('type.num.num','type.num.num'),X0))))),s('type.pair.prod'('type.num.num','type.num.num'),X0)))) => p(s(bool,'const.bool.RES_FORALL_2'(s(fun('type.pair.prod'('type.num.num','type.num.num'),bool),'const.quotient.respects_1'(s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),bool)),'const.integer.tint_eq_0'))),s(fun('type.pair.prod'('type.num.num','type.num.num'),bool),'_dst_x0x1x1_3'(s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),bool)),'const.integer.tint_eq_0'),s(fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num')),'const.integer.tint_add_1'(s('type.pair.prod'('type.num.num','type.num.num'),'const.integer.tint_|48|_0'))),s(fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num')),'_i_0_0'))))))),
  inference(rectify,[],[f166])).
fof(f166,axiom,(
  ! [X8] : p(s(bool,happ(s(fun('type.pair.prod'('type.num.num','type.num.num'),bool),happ(s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),bool)),'const.integer.tint_eq_0'),s('type.pair.prod'('type.num.num','type.num.num'),happ(s(fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num')),'const.integer.tint_add_1'(s('type.pair.prod'('type.num.num','type.num.num'),'const.integer.tint_|48|_0'))),s('type.pair.prod'('type.num.num','type.num.num'),X8))))),s('type.pair.prod'('type.num.num','type.num.num'),X8)))) => p(s(bool,'const.bool.RES_FORALL_2'(s(fun('type.pair.prod'('type.num.num','type.num.num'),bool),'const.quotient.respects_1'(s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),bool)),'const.integer.tint_eq_0'))),s(fun('type.pair.prod'('type.num.num','type.num.num'),bool),'_dst_x0x1x1_3'(s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),bool)),'const.integer.tint_eq_0'),s(fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num')),'const.integer.tint_add_1'(s('type.pair.prod'('type.num.num','type.num.num'),'const.integer.tint_|48|_0'))),s(fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num')),'_i_0_0'))))))),
  file('thm.frac.FRAC_SGN_POS','thm.integer.integer_76_prove_ltb')).
fof(f1467,plain,(
  s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK13))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl0),
  inference(cnf_transformation,[],[f1467_D])).
fof(f1467_D,plain,(
  s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK13))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f1469,plain,(
  p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK13)))))) | $spl2),
  inference(cnf_transformation,[],[f1469_D])).
fof(f1469_D,plain,(
  p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK13)))))) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f896,plain,(
  p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK13)))))) | s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK13))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),
  inference(cnf_transformation,[],[f686])).
fof(f686,plain,(
  (s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK13))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK13))))))) & (s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK13))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK13)))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK13])],[f685])).
fof(f685,plain,(
  ? [X0] : ((s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',X0))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X0))))))) & (s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',X0))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X0))))))))),
  inference(nnf_transformation,[],[f585])).
fof(f585,plain,(
  ? [X0] : (s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',X0))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <~> p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X0)))))))),
  inference(ennf_transformation,[],[f263])).
fof(f263,plain,(
  ~! [X0] : (s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',X0))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X0)))))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : (s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',X6))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X6)))))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : (s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',X6))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X6)))))))),
  file('thm.frac.FRAC_SGN_POS','thm.frac.FRAC_SGN_POS')).
fof(f1468,plain,(
  s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK13))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl1),
  inference(cnf_transformation,[],[f1468_D])).
fof(f1468_D,plain,(
  s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK13))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> ~$spl1),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1])])).
fof(f1470,plain,(
  ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK13)))))) | $spl3),
  inference(cnf_transformation,[],[f1470_D])).
fof(f1470_D,plain,(
  ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK13)))))) <=> ~$spl3),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl3])])).
fof(f897,plain,(
  ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK13)))))) | s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK13))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),
  inference(cnf_transformation,[],[f686])).
% SZS output end Proof for thm.frac
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 564
% Passive clauses: 2670
% Generated clauses: 15839
% Final active clauses: 447
% Final passive clauses: 1722
% Input formulas: 261
% Initial clauses: 543
% 
% Duplicate literals: 13
% Trivial inequalities: 27
% Fw subsumption resolutions: 161
% Fw demodulations: 2920
% Bw demodulations: 44
% Condensations: 28
% 
% Simple tautologies: 140
% Equational tautologies: 36
% Forward subsumptions: 9546
% Fw demodulations to eq. taut.: 272
% 
% Unit resulting resolution: 4893
% Factoring: 1
% Forward superposition: 3788
% Backward superposition: 3334
% Self superposition: 39
% Equality factoring: 2
% Equality resolution: 18
% 
% Split clauses: 19
% Split components: 38
% SAT solver clauses: 2718
% SAT solver unit clauses: 1335
% SAT solver binary clauses: 1075
% 
% Sat splits: 19
% Sat splitting refutations: 8
% 
% Memory used [KB]: 10234
% Time elapsed: 0.365 s
% ------------------------------
% ------------------------------
% Success in time 1.697 s
