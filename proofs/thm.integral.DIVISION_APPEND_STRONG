Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 599 next slice time: 5
dis+11_7_3 on thm.integral
% (53787)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 54
% Passive clauses: 827
% Generated clauses: 5979
% Final active clauses: 52
% Final passive clauses: 731
% Input formulas: 21
% Initial clauses: 39
% 
% Duplicate literals: 538
% Trivial inequalities: 99
% Fw subsumption resolutions: 417
% Fw demodulations: 293
% Bw demodulations: 1
% 
% Simple tautologies: 163
% Equational tautologies: 26
% Forward subsumptions: 3128
% 
% Binary resolution: 42
% Forward superposition: 2385
% Backward superposition: 1780
% Self superposition: 165
% Equality factoring: 78
% Equality resolution: 5
% 
% Split clauses: 354
% Split components: 722
% SAT solver clauses: 514
% SAT solver unit clauses: 40
% SAT solver binary clauses: 201
% 
% Sat splits: 354
% 
% TWLsolver clauses: 514
% TWLsolver calls for satisfiability: 42
% 
% Memory used [KB]: 4861
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 593 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.integral
% (53840)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 41
% Passive clauses: 196
% Generated clauses: 2417
% Final active clauses: 36
% Final passive clauses: 135
% Input formulas: 21
% Initial clauses: 39
% 
% Duplicate literals: 200
% Trivial inequalities: 13
% Fw subsumption resolutions: 95
% Fw demodulations: 167
% Bw demodulations: 24
% Condensations: 286
% Global subsumptions: 3
% 
% Simple tautologies: 45
% Equational tautologies: 18
% Forward subsumptions: 1064
% 
% Binary resolution: 27
% Factoring: 3
% Forward superposition: 762
% Backward superposition: 517
% Self superposition: 70
% Equality factoring: 42
% Equality resolution: 1
% 
% Split clauses: 39
% Split components: 86
% SAT solver clauses: 362
% SAT solver unit clauses: 42
% SAT solver binary clauses: 25
% SAT solver learnt clauses: 6
% 
% Sat splits: 39
% Sat splitting refutations: 4
% 
% TWLsolver clauses: 350
% TWLsolver calls for satisfiability: 202
% 
% Memory used [KB]: 4861
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 586 next slice time: 103
lrs+11_2_br=off:cond=on:fde=none:gs=on:gsaa=full_model:lwlo=on:nwc=2:sas=minisat:stl=30:ssfp=100000:ssfq=1.4:smm=sco:ssnc=none:sp=occurrence:urr=on_98 on thm.integral
% (53885)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit

% Active clauses: 185
% Passive clauses: 2314
% Generated clauses: 43988
% Final active clauses: 60
% Final passive clauses: 380
% Input formulas: 21
% Initial clauses: 39
% Discarded non-redundant clauses: 4441
% 
% Duplicate literals: 3782
% Trivial inequalities: 506
% Fw subsumption resolutions: 1526
% Fw demodulations: 3106
% Bw demodulations: 1025
% Condensations: 7049
% Global subsumptions: 24
% 
% Simple tautologies: 545
% Equational tautologies: 562
% Forward subsumptions: 23430
% Bw demodulations to eq. taut.: 27
% 
% Unit resulting resolution: 2042
% Forward superposition: 12253
% Backward superposition: 10893
% Self superposition: 477
% Equality factoring: 273
% Equality resolution: 10
% 
% Split clauses: 139
% Split components: 286
% SAT solver clauses: 2684
% SAT solver unit clauses: 31
% SAT solver binary clauses: 271
% 
% Sat splits: 139
% Sat splitting refutations: 66
% 
% Memory used [KB]: 19829
% Time elapsed: 10.428 s
% ------------------------------
% ------------------------------
% remaining time: 482 next slice time: 39
dis+11_5_fde=none:nwc=1:sas=minisat:sd=1:ss=axioms:st=5.0:sos=all:sdd=large:sser=off:sfr=on:ssfp=100000:ssfq=2.0:ssnc=none_37 on thm.integral
% (53993)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 581
% Passive clauses: 5355
% Generated clauses: 19328
% Final active clauses: 140
% Final passive clauses: 3800
% Input formulas: 21
% Initial clauses: 39
% 
% Selected by SInE selection: 21
% SInE iterations: 1
% 
% Duplicate literals: 921
% Trivial inequalities: 100
% Fw subsumption resolutions: 1883
% Fw demodulations: 1279
% Bw demodulations: 182
% 
% Simple tautologies: 219
% Equational tautologies: 49
% Forward subsumptions: 8923
% Bw demodulations to eq. taut.: 27
% 
% Binary resolution: 651
% Factoring: 18
% Forward superposition: 8864
% Backward superposition: 4534
% Self superposition: 233
% Equality factoring: 104
% Equality resolution: 7
% 
% Split clauses: 634
% Split components: 1278
% SAT solver clauses: 650
% SAT solver unit clauses: 4
% SAT solver binary clauses: 39
% 
% Sat splits: 634
% Sat splitting refutations: 13
% 
% Memory used [KB]: 20980
% Time elapsed: 4.0000 s
% ------------------------------
% ------------------------------
% remaining time: 441 next slice time: 6
lrs+1002_2:3_br=off:fde=unused:gs=on:gsaa=from_current:gsem=on:gsssp=full:nwc=1:sas=minisat:stl=30:sac=on:sser=off:sfr=on:ssfp=100000:ssfq=2.0:ssnc=none:sp=reverse_arity:urr=on_4 on thm.integral
% (54100)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 61
% Passive clauses: 513
% Generated clauses: 4273
% Final active clauses: 33
% Final passive clauses: 183
% Input formulas: 21
% Initial clauses: 39
% 
% Duplicate literals: 153
% Trivial inequalities: 71
% Fw subsumption resolutions: 289
% Fw demodulations: 370
% Bw demodulations: 164
% Global subsumptions: 2
% 
% Simple tautologies: 187
% Equational tautologies: 68
% Forward subsumptions: 2592
% Bw demodulations to eq. taut.: 7
% 
% Unit resulting resolution: 242
% Forward superposition: 1524
% Backward superposition: 1061
% Self superposition: 70
% Equality factoring: 22
% Equality resolution: 7
% 
% Split clauses: 9
% Split components: 18
% SAT solver clauses: 545
% SAT solver unit clauses: 22
% SAT solver binary clauses: 58
% 
% Sat splits: 9
% Sat splitting refutations: 19
% 
% Memory used [KB]: 4221
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 434 next slice time: 15
lrs+1011_12_bs=on:bsr=unit_only:cond=on:gs=on:gsaa=from_current:gsssp=full:nwc=1.1:sas=minisat:stl=60:sos=all:sac=on:sdd=off:sser=off:sfr=on:ssfp=100000:ssfq=1.2:ssnc=none:sp=reverse_arity:updr=off_14 on thm.integral
% (54129)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 261
% Passive clauses: 787
% Generated clauses: 2062
% Final active clauses: 236
% Final passive clauses: 428
% Input formulas: 21
% Initial clauses: 39
% 
% Duplicate literals: 28
% Trivial inequalities: 5
% Fw subsumption resolutions: 45
% Fw demodulations: 340
% Bw demodulations: 5
% Condensations: 6
% 
% Simple tautologies: 59
% Equational tautologies: 1
% Forward subsumptions: 809
% Backward subsumptions: 2
% 
% Binary resolution: 88
% Forward superposition: 1247
% Backward superposition: 285
% Equality factoring: 2
% 
% Split clauses: 7
% Split components: 14
% SAT solver clauses: 796
% SAT solver unit clauses: 8
% SAT solver binary clauses: 59
% 
% Sat splits: 7
% 
% Memory used [KB]: 9850
% Time elapsed: 1.600 s
% ------------------------------
% ------------------------------
% remaining time: 418 next slice time: 9
lrs+10_8:1_bd=preordered:bs=on:ccuc=first:fsr=off:fde=unused:gs=on:gsaa=from_current:gsem=on:gsssp=full:nwc=1:nicw=on:sas=minisat:stl=120:sos=on:sscc=on:sser=off:sfr=on:ssfp=4000:ssfq=1.0:ssnc=none:sp=reverse_arity:urr=on_7 on thm.integral
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.integral
% SZS output start Proof for thm.integral
fof(f428,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f72,f109,f71,f111,f70,f113,f69,f115,f121,f123,f137,f126,f128,f130,f134,f142,f143,f144,f145,f152,f154,f164,f166,f176,f178,f224,f234,f237,f259,f273,f297,f307,f271,f330,f339,f341,f347,f125,f352,f408,f410,f427,f236])).
fof(f236,plain,(
  ~p(s(bool,'T_0')) | $spl21),
  inference(cnf_transformation,[],[f236_D])).
fof(f236_D,plain,(
  ~p(s(bool,'T_0')) <=> ~$spl21),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl21])])).
fof(f427,plain,(
  ~p(s(bool,'T_0')) | ($spl26 | $spl28 | $spl32)),
  inference(duplicate_literal_removal,[],[f426])).
fof(f426,plain,(
  ~p(s(bool,'T_0')) | ~p(s(bool,'T_0')) | ($spl26 | $spl28 | $spl32)),
  inference(forward_demodulation,[],[f425,f341])).
fof(f425,plain,(
  ~p(s(bool,'T_0')) | ~p(s(bool,'const.transc.tdiv_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',sK1),s('type.realax.real',sK3))),s('type.pair.prod'(fun('type.num.num','type.realax.real'),fun('type.num.num','type.realax.real')),'const.pair.,_2'(s(fun('type.num.num','type.realax.real'),'_dst_x0x1x1x1_4'(s(fun(bool,fun('type.realax.real',fun('type.realax.real','type.realax.real'))),'const.bool.COND_0'),s(fun('type.num.num',bool),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num',bool)),'const.prim_rec.<_0'),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),sK4))))),s(fun('type.num.num','type.realax.real'),sK4),s(fun('type.num.num','type.realax.real'),'_dst_x0x1_2'(s(fun('type.num.num','type.realax.real'),sK6),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.-_0'),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),sK4))))))))),s(fun('type.num.num','type.realax.real'),'_dst_x0x1x1x1_4'(s(fun(bool,fun('type.realax.real',fun('type.realax.real','type.realax.real'))),'const.bool.COND_0'),s(fun('type.num.num',bool),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num',bool)),'const.prim_rec.<_0'),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),sK4))))),s(fun('type.num.num','type.realax.real'),sK5),s(fun('type.num.num','type.realax.real'),'_dst_x0x1_2'(s(fun('type.num.num','type.realax.real'),sK7),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.-_0'),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),sK4)))))))))))))) | ($spl26 | $spl32)),
  inference(forward_demodulation,[],[f416,f410])).
fof(f416,plain,(
  ~p(s(bool,'const.transc.fine_2'(s(fun('type.realax.real','type.realax.real'),sK0),s('type.pair.prod'(fun('type.num.num','type.realax.real'),fun('type.num.num','type.realax.real')),'const.pair.,_2'(s(fun('type.num.num','type.realax.real'),'_dst_x0x1x1x1_4'(s(fun(bool,fun('type.realax.real',fun('type.realax.real','type.realax.real'))),'const.bool.COND_0'),s(fun('type.num.num',bool),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num',bool)),'const.prim_rec.<_0'),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),sK4))))),s(fun('type.num.num','type.realax.real'),sK4),s(fun('type.num.num','type.realax.real'),'_dst_x0x1_2'(s(fun('type.num.num','type.realax.real'),sK6),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.-_0'),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),sK4))))))))),s(fun('type.num.num','type.realax.real'),'_dst_x0x1x1x1_4'(s(fun(bool,fun('type.realax.real',fun('type.realax.real','type.realax.real'))),'const.bool.COND_0'),s(fun('type.num.num',bool),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num',bool)),'const.prim_rec.<_0'),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),sK4))))),s(fun('type.num.num','type.realax.real'),sK5),s(fun('type.num.num','type.realax.real'),'_dst_x0x1_2'(s(fun('type.num.num','type.realax.real'),sK7),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.-_0'),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),sK4)))))))))))))) | ~p(s(bool,'const.transc.tdiv_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',sK1),s('type.realax.real',sK3))),s('type.pair.prod'(fun('type.num.num','type.realax.real'),fun('type.num.num','type.realax.real')),'const.pair.,_2'(s(fun('type.num.num','type.realax.real'),'_dst_x0x1x1x1_4'(s(fun(bool,fun('type.realax.real',fun('type.realax.real','type.realax.real'))),'const.bool.COND_0'),s(fun('type.num.num',bool),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num',bool)),'const.prim_rec.<_0'),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),sK4))))),s(fun('type.num.num','type.realax.real'),sK4),s(fun('type.num.num','type.realax.real'),'_dst_x0x1_2'(s(fun('type.num.num','type.realax.real'),sK6),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.-_0'),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),sK4))))))))),s(fun('type.num.num','type.realax.real'),'_dst_x0x1x1x1_4'(s(fun(bool,fun('type.realax.real',fun('type.realax.real','type.realax.real'))),'const.bool.COND_0'),s(fun('type.num.num',bool),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num',bool)),'const.prim_rec.<_0'),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),sK4))))),s(fun('type.num.num','type.realax.real'),sK5),s(fun('type.num.num','type.realax.real'),'_dst_x0x1_2'(s(fun('type.num.num','type.realax.real'),sK7),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.-_0'),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),sK4)))))))))))))) | $spl26),
  inference(equality_resolution,[],[f366])).
fof(f366,plain,(
  ( ! [X0,X1] : (s('type.realax.real','const.transc.rsum_2'(s('type.pair.prod'(fun('type.num.num','type.realax.real'),fun('type.num.num','type.realax.real')),'const.pair.,_2'(s(fun('type.num.num','type.realax.real'),X1),s(fun('type.num.num','type.realax.real'),X0))),s(fun('type.realax.real','type.realax.real'),sK8(X0,X1)))) != s('type.realax.real','const.transc.rsum_2'(s('type.pair.prod'(fun('type.num.num','type.realax.real'),fun('type.num.num','type.realax.real')),'const.pair.,_2'(s(fun('type.num.num','type.realax.real'),'_dst_x0x1x1x1_4'(s(fun(bool,fun('type.realax.real',fun('type.realax.real','type.realax.real'))),'const.bool.COND_0'),s(fun('type.num.num',bool),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num',bool)),'const.prim_rec.<_0'),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),sK4))))),s(fun('type.num.num','type.realax.real'),sK4),s(fun('type.num.num','type.realax.real'),'_dst_x0x1_2'(s(fun('type.num.num','type.realax.real'),sK6),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.-_0'),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),sK4))))))))),s(fun('type.num.num','type.realax.real'),'_dst_x0x1x1x1_4'(s(fun(bool,fun('type.realax.real',fun('type.realax.real','type.realax.real'))),'const.bool.COND_0'),s(fun('type.num.num',bool),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num',bool)),'const.prim_rec.<_0'),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),sK4))))),s(fun('type.num.num','type.realax.real'),sK5),s(fun('type.num.num','type.realax.real'),'_dst_x0x1_2'(s(fun('type.num.num','type.realax.real'),sK7),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.-_0'),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),sK4))))))))))),s(fun('type.realax.real','type.realax.real'),sK8(X0,X1)))) | ~p(s(bool,'const.transc.fine_2'(s(fun('type.realax.real','type.realax.real'),sK0),s('type.pair.prod'(fun('type.num.num','type.realax.real'),fun('type.num.num','type.realax.real')),'const.pair.,_2'(s(fun('type.num.num','type.realax.real'),X1),s(fun('type.num.num','type.realax.real'),X0)))))) | ~p(s(bool,'const.transc.tdiv_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',sK1),s('type.realax.real',sK3))),s('type.pair.prod'(fun('type.num.num','type.realax.real'),fun('type.num.num','type.realax.real')),'const.pair.,_2'(s(fun('type.num.num','type.realax.real'),X1),s(fun('type.num.num','type.realax.real'),X0))))))) ) | $spl26),
  inference(superposition,[],[f73,f307])).
fof(f73,plain,(
  ( ! [X8,X9] : (s('type.realax.real','const.transc.rsum_2'(s('type.pair.prod'(fun('type.num.num','type.realax.real'),fun('type.num.num','type.realax.real')),'const.pair.,_2'(s(fun('type.num.num','type.realax.real'),X8),s(fun('type.num.num','type.realax.real'),X9))),s(fun('type.realax.real','type.realax.real'),sK8(X9,X8)))) != s('type.realax.real','const.realax.real_add_2'(s('type.realax.real','const.transc.rsum_2'(s('type.pair.prod'(fun('type.num.num','type.realax.real'),fun('type.num.num','type.realax.real')),'const.pair.,_2'(s(fun('type.num.num','type.realax.real'),sK4),s(fun('type.num.num','type.realax.real'),sK5))),s(fun('type.realax.real','type.realax.real'),sK8(X9,X8)))),s('type.realax.real','const.transc.rsum_2'(s('type.pair.prod'(fun('type.num.num','type.realax.real'),fun('type.num.num','type.realax.real')),'const.pair.,_2'(s(fun('type.num.num','type.realax.real'),sK6),s(fun('type.num.num','type.realax.real'),sK7))),s(fun('type.realax.real','type.realax.real'),sK8(X9,X8)))))) | ~p(s(bool,'const.transc.fine_2'(s(fun('type.realax.real','type.realax.real'),sK0),s('type.pair.prod'(fun('type.num.num','type.realax.real'),fun('type.num.num','type.realax.real')),'const.pair.,_2'(s(fun('type.num.num','type.realax.real'),X8),s(fun('type.num.num','type.realax.real'),X9)))))) | ~p(s(bool,'const.transc.tdiv_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',sK1),s('type.realax.real',sK3))),s('type.pair.prod'(fun('type.num.num','type.realax.real'),fun('type.num.num','type.realax.real')),'const.pair.,_2'(s(fun('type.num.num','type.realax.real'),X8),s(fun('type.num.num','type.realax.real'),X9))))))) )),
  inference(cnf_transformation,[],[f58])).
fof(f58,plain,(
  p(s(bool,'const.transc.tdiv_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',sK1),s('type.realax.real',sK2))),s('type.pair.prod'(fun('type.num.num','type.realax.real'),fun('type.num.num','type.realax.real')),'const.pair.,_2'(s(fun('type.num.num','type.realax.real'),sK4),s(fun('type.num.num','type.realax.real'),sK5)))))) & p(s(bool,'const.transc.fine_2'(s(fun('type.realax.real','type.realax.real'),sK0),s('type.pair.prod'(fun('type.num.num','type.realax.real'),fun('type.num.num','type.realax.real')),'const.pair.,_2'(s(fun('type.num.num','type.realax.real'),sK4),s(fun('type.num.num','type.realax.real'),sK5)))))) & p(s(bool,'const.transc.tdiv_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',sK2),s('type.realax.real',sK3))),s('type.pair.prod'(fun('type.num.num','type.realax.real'),fun('type.num.num','type.realax.real')),'const.pair.,_2'(s(fun('type.num.num','type.realax.real'),sK6),s(fun('type.num.num','type.realax.real'),sK7)))))) & p(s(bool,'const.transc.fine_2'(s(fun('type.realax.real','type.realax.real'),sK0),s('type.pair.prod'(fun('type.num.num','type.realax.real'),fun('type.num.num','type.realax.real')),'const.pair.,_2'(s(fun('type.num.num','type.realax.real'),sK6),s(fun('type.num.num','type.realax.real'),sK7)))))) & ! [X8,X9] : (~p(s(bool,'const.transc.tdiv_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',sK1),s('type.realax.real',sK3))),s('type.pair.prod'(fun('type.num.num','type.realax.real'),fun('type.num.num','type.realax.real')),'const.pair.,_2'(s(fun('type.num.num','type.realax.real'),X8),s(fun('type.num.num','type.realax.real'),X9)))))) | ~p(s(bool,'const.transc.fine_2'(s(fun('type.realax.real','type.realax.real'),sK0),s('type.pair.prod'(fun('type.num.num','type.realax.real'),fun('type.num.num','type.realax.real')),'const.pair.,_2'(s(fun('type.num.num','type.realax.real'),X8),s(fun('type.num.num','type.realax.real'),X9)))))) | s('type.realax.real','const.transc.rsum_2'(s('type.pair.prod'(fun('type.num.num','type.realax.real'),fun('type.num.num','type.realax.real')),'const.pair.,_2'(s(fun('type.num.num','type.realax.real'),X8),s(fun('type.num.num','type.realax.real'),X9))),s(fun('type.realax.real','type.realax.real'),sK8(X9,X8)))) != s('type.realax.real','const.realax.real_add_2'(s('type.realax.real','const.transc.rsum_2'(s('type.pair.prod'(fun('type.num.num','type.realax.real'),fun('type.num.num','type.realax.real')),'const.pair.,_2'(s(fun('type.num.num','type.realax.real'),sK4),s(fun('type.num.num','type.realax.real'),sK5))),s(fun('type.realax.real','type.realax.real'),sK8(X9,X8)))),s('type.realax.real','const.transc.rsum_2'(s('type.pair.prod'(fun('type.num.num','type.realax.real'),fun('type.num.num','type.realax.real')),'const.pair.,_2'(s(fun('type.num.num','type.realax.real'),sK6),s(fun('type.num.num','type.realax.real'),sK7))),s(fun('type.realax.real','type.realax.real'),sK8(X9,X8)))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2,sK3,sK4,sK5,sK6,sK7,sK8])],[f50])).
fof(f50,plain,(
  ? [X0,X1,X2,X3,X4,X5,X6,X7] : (p(s(bool,'const.transc.tdiv_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X1),s('type.realax.real',X2))),s('type.pair.prod'(fun('type.num.num','type.realax.real'),fun('type.num.num','type.realax.real')),'const.pair.,_2'(s(fun('type.num.num','type.realax.real'),X4),s(fun('type.num.num','type.realax.real'),X5)))))) & p(s(bool,'const.transc.fine_2'(s(fun('type.realax.real','type.realax.real'),X0),s('type.pair.prod'(fun('type.num.num','type.realax.real'),fun('type.num.num','type.realax.real')),'const.pair.,_2'(s(fun('type.num.num','type.realax.real'),X4),s(fun('type.num.num','type.realax.real'),X5)))))) & p(s(bool,'const.transc.tdiv_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X2),s('type.realax.real',X3))),s('type.pair.prod'(fun('type.num.num','type.realax.real'),fun('type.num.num','type.realax.real')),'const.pair.,_2'(s(fun('type.num.num','type.realax.real'),X6),s(fun('type.num.num','type.realax.real'),X7)))))) & p(s(bool,'const.transc.fine_2'(s(fun('type.realax.real','type.realax.real'),X0),s('type.pair.prod'(fun('type.num.num','type.realax.real'),fun('type.num.num','type.realax.real')),'const.pair.,_2'(s(fun('type.num.num','type.realax.real'),X6),s(fun('type.num.num','type.realax.real'),X7)))))) & ! [X8,X9] : (~p(s(bool,'const.transc.tdiv_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X1),s('type.realax.real',X3))),s('type.pair.prod'(fun('type.num.num','type.realax.real'),fun('type.num.num','type.realax.real')),'const.pair.,_2'(s(fun('type.num.num','type.realax.real'),X8),s(fun('type.num.num','type.realax.real'),X9)))))) | ~p(s(bool,'const.transc.fine_2'(s(fun('type.realax.real','type.realax.real'),X0),s('type.pair.prod'(fun('type.num.num','type.realax.real'),fun('type.num.num','type.realax.real')),'const.pair.,_2'(s(fun('type.num.num','type.realax.real'),X8),s(fun('type.num.num','type.realax.real'),X9)))))) | ? [X10] : s('type.realax.real','const.transc.rsum_2'(s('type.pair.prod'(fun('type.num.num','type.realax.real'),fun('type.num.num','type.realax.real')),'const.pair.,_2'(s(fun('type.num.num','type.realax.real'),X8),s(fun('type.num.num','type.realax.real'),X9))),s(fun('type.realax.real','type.realax.real'),X10))) != s('type.realax.real','const.realax.real_add_2'(s('type.realax.real','const.transc.rsum_2'(s('type.pair.prod'(fun('type.num.num','type.realax.real'),fun('type.num.num','type.realax.real')),'const.pair.,_2'(s(fun('type.num.num','type.realax.real'),X4),s(fun('type.num.num','type.realax.real'),X5))),s(fun('type.realax.real','type.realax.real'),X10))),s('type.realax.real','const.transc.rsum_2'(s('type.pair.prod'(fun('type.num.num','type.realax.real'),fun('type.num.num','type.realax.real')),'const.pair.,_2'(s(fun('type.num.num','type.realax.real'),X6),s(fun('type.num.num','type.realax.real'),X7))),s(fun('type.realax.real','type.realax.real'),X10)))))))),
  inference(flattening,[],[f49])).
fof(f49,plain,(
  ? [X0,X1,X2,X3,X4,X5,X6,X7] : ((p(s(bool,'const.transc.tdiv_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X1),s('type.realax.real',X2))),s('type.pair.prod'(fun('type.num.num','type.realax.real'),fun('type.num.num','type.realax.real')),'const.pair.,_2'(s(fun('type.num.num','type.realax.real'),X4),s(fun('type.num.num','type.realax.real'),X5)))))) & p(s(bool,'const.transc.fine_2'(s(fun('type.realax.real','type.realax.real'),X0),s('type.pair.prod'(fun('type.num.num','type.realax.real'),fun('type.num.num','type.realax.real')),'const.pair.,_2'(s(fun('type.num.num','type.realax.real'),X4),s(fun('type.num.num','type.realax.real'),X5)))))) & p(s(bool,'const.transc.tdiv_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X2),s('type.realax.real',X3))),s('type.pair.prod'(fun('type.num.num','type.realax.real'),fun('type.num.num','type.realax.real')),'const.pair.,_2'(s(fun('type.num.num','type.realax.real'),X6),s(fun('type.num.num','type.realax.real'),X7)))))) & p(s(bool,'const.transc.fine_2'(s(fun('type.realax.real','type.realax.real'),X0),s('type.pair.prod'(fun('type.num.num','type.realax.real'),fun('type.num.num','type.realax.real')),'const.pair.,_2'(s(fun('type.num.num','type.realax.real'),X6),s(fun('type.num.num','type.realax.real'),X7))))))) & ! [X8,X9] : (~p(s(bool,'const.transc.tdiv_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X1),s('type.realax.real',X3))),s('type.pair.prod'(fun('type.num.num','type.realax.real'),fun('type.num.num','type.realax.real')),'const.pair.,_2'(s(fun('type.num.num','type.realax.real'),X8),s(fun('type.num.num','type.realax.real'),X9)))))) | ~p(s(bool,'const.transc.fine_2'(s(fun('type.realax.real','type.realax.real'),X0),s('type.pair.prod'(fun('type.num.num','type.realax.real'),fun('type.num.num','type.realax.real')),'const.pair.,_2'(s(fun('type.num.num','type.realax.real'),X8),s(fun('type.num.num','type.realax.real'),X9)))))) | ? [X10] : s('type.realax.real','const.transc.rsum_2'(s('type.pair.prod'(fun('type.num.num','type.realax.real'),fun('type.num.num','type.realax.real')),'const.pair.,_2'(s(fun('type.num.num','type.realax.real'),X8),s(fun('type.num.num','type.realax.real'),X9))),s(fun('type.realax.real','type.realax.real'),X10))) != s('type.realax.real','const.realax.real_add_2'(s('type.realax.real','const.transc.rsum_2'(s('type.pair.prod'(fun('type.num.num','type.realax.real'),fun('type.num.num','type.realax.real')),'const.pair.,_2'(s(fun('type.num.num','type.realax.real'),X4),s(fun('type.num.num','type.realax.real'),X5))),s(fun('type.realax.real','type.realax.real'),X10))),s('type.realax.real','const.transc.rsum_2'(s('type.pair.prod'(fun('type.num.num','type.realax.real'),fun('type.num.num','type.realax.real')),'const.pair.,_2'(s(fun('type.num.num','type.realax.real'),X6),s(fun('type.num.num','type.realax.real'),X7))),s(fun('type.realax.real','type.realax.real'),X10)))))))),
  inference(ennf_transformation,[],[f23])).
fof(f23,plain,(
  ~! [X0,X1,X2,X3,X4,X5,X6,X7] : ((p(s(bool,'const.transc.tdiv_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X1),s('type.realax.real',X2))),s('type.pair.prod'(fun('type.num.num','type.realax.real'),fun('type.num.num','type.realax.real')),'const.pair.,_2'(s(fun('type.num.num','type.realax.real'),X4),s(fun('type.num.num','type.realax.real'),X5)))))) & p(s(bool,'const.transc.fine_2'(s(fun('type.realax.real','type.realax.real'),X0),s('type.pair.prod'(fun('type.num.num','type.realax.real'),fun('type.num.num','type.realax.real')),'const.pair.,_2'(s(fun('type.num.num','type.realax.real'),X4),s(fun('type.num.num','type.realax.real'),X5)))))) & p(s(bool,'const.transc.tdiv_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X2),s('type.realax.real',X3))),s('type.pair.prod'(fun('type.num.num','type.realax.real'),fun('type.num.num','type.realax.real')),'const.pair.,_2'(s(fun('type.num.num','type.realax.real'),X6),s(fun('type.num.num','type.realax.real'),X7)))))) & p(s(bool,'const.transc.fine_2'(s(fun('type.realax.real','type.realax.real'),X0),s('type.pair.prod'(fun('type.num.num','type.realax.real'),fun('type.num.num','type.realax.real')),'const.pair.,_2'(s(fun('type.num.num','type.realax.real'),X6),s(fun('type.num.num','type.realax.real'),X7))))))) => ? [X8,X9] : (p(s(bool,'const.transc.tdiv_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X1),s('type.realax.real',X3))),s('type.pair.prod'(fun('type.num.num','type.realax.real'),fun('type.num.num','type.realax.real')),'const.pair.,_2'(s(fun('type.num.num','type.realax.real'),X8),s(fun('type.num.num','type.realax.real'),X9)))))) & p(s(bool,'const.transc.fine_2'(s(fun('type.realax.real','type.realax.real'),X0),s('type.pair.prod'(fun('type.num.num','type.realax.real'),fun('type.num.num','type.realax.real')),'const.pair.,_2'(s(fun('type.num.num','type.realax.real'),X8),s(fun('type.num.num','type.realax.real'),X9)))))) & ! [X10] : s('type.realax.real','const.transc.rsum_2'(s('type.pair.prod'(fun('type.num.num','type.realax.real'),fun('type.num.num','type.realax.real')),'const.pair.,_2'(s(fun('type.num.num','type.realax.real'),X8),s(fun('type.num.num','type.realax.real'),X9))),s(fun('type.realax.real','type.realax.real'),X10))) = s('type.realax.real','const.realax.real_add_2'(s('type.realax.real','const.transc.rsum_2'(s('type.pair.prod'(fun('type.num.num','type.realax.real'),fun('type.num.num','type.realax.real')),'const.pair.,_2'(s(fun('type.num.num','type.realax.real'),X4),s(fun('type.num.num','type.realax.real'),X5))),s(fun('type.realax.real','type.realax.real'),X10))),s('type.realax.real','const.transc.rsum_2'(s('type.pair.prod'(fun('type.num.num','type.realax.real'),fun('type.num.num','type.realax.real')),'const.pair.,_2'(s(fun('type.num.num','type.realax.real'),X6),s(fun('type.num.num','type.realax.real'),X7))),s(fun('type.realax.real','type.realax.real'),X10)))))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7,X8,X9,X10,X11,X12,X13] : ((p(s(bool,'const.transc.tdiv_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X7),s('type.realax.real',X8))),s('type.pair.prod'(fun('type.num.num','type.realax.real'),fun('type.num.num','type.realax.real')),'const.pair.,_2'(s(fun('type.num.num','type.realax.real'),X10),s(fun('type.num.num','type.realax.real'),X11)))))) & p(s(bool,'const.transc.fine_2'(s(fun('type.realax.real','type.realax.real'),X6),s('type.pair.prod'(fun('type.num.num','type.realax.real'),fun('type.num.num','type.realax.real')),'const.pair.,_2'(s(fun('type.num.num','type.realax.real'),X10),s(fun('type.num.num','type.realax.real'),X11)))))) & p(s(bool,'const.transc.tdiv_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X8),s('type.realax.real',X9))),s('type.pair.prod'(fun('type.num.num','type.realax.real'),fun('type.num.num','type.realax.real')),'const.pair.,_2'(s(fun('type.num.num','type.realax.real'),X12),s(fun('type.num.num','type.realax.real'),X13)))))) & p(s(bool,'const.transc.fine_2'(s(fun('type.realax.real','type.realax.real'),X6),s('type.pair.prod'(fun('type.num.num','type.realax.real'),fun('type.num.num','type.realax.real')),'const.pair.,_2'(s(fun('type.num.num','type.realax.real'),X12),s(fun('type.num.num','type.realax.real'),X13))))))) => ? [X14,X15] : (p(s(bool,'const.transc.tdiv_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X7),s('type.realax.real',X9))),s('type.pair.prod'(fun('type.num.num','type.realax.real'),fun('type.num.num','type.realax.real')),'const.pair.,_2'(s(fun('type.num.num','type.realax.real'),X14),s(fun('type.num.num','type.realax.real'),X15)))))) & p(s(bool,'const.transc.fine_2'(s(fun('type.realax.real','type.realax.real'),X6),s('type.pair.prod'(fun('type.num.num','type.realax.real'),fun('type.num.num','type.realax.real')),'const.pair.,_2'(s(fun('type.num.num','type.realax.real'),X14),s(fun('type.num.num','type.realax.real'),X15)))))) & ! [X16] : s('type.realax.real','const.transc.rsum_2'(s('type.pair.prod'(fun('type.num.num','type.realax.real'),fun('type.num.num','type.realax.real')),'const.pair.,_2'(s(fun('type.num.num','type.realax.real'),X14),s(fun('type.num.num','type.realax.real'),X15))),s(fun('type.realax.real','type.realax.real'),X16))) = s('type.realax.real','const.realax.real_add_2'(s('type.realax.real','const.transc.rsum_2'(s('type.pair.prod'(fun('type.num.num','type.realax.real'),fun('type.num.num','type.realax.real')),'const.pair.,_2'(s(fun('type.num.num','type.realax.real'),X10),s(fun('type.num.num','type.realax.real'),X11))),s(fun('type.realax.real','type.realax.real'),X16))),s('type.realax.real','const.transc.rsum_2'(s('type.pair.prod'(fun('type.num.num','type.realax.real'),fun('type.num.num','type.realax.real')),'const.pair.,_2'(s(fun('type.num.num','type.realax.real'),X12),s(fun('type.num.num','type.realax.real'),X13))),s(fun('type.realax.real','type.realax.real'),X16)))))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7,X8,X9,X10,X11,X12,X13] : ((p(s(bool,'const.transc.tdiv_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X7),s('type.realax.real',X8))),s('type.pair.prod'(fun('type.num.num','type.realax.real'),fun('type.num.num','type.realax.real')),'const.pair.,_2'(s(fun('type.num.num','type.realax.real'),X10),s(fun('type.num.num','type.realax.real'),X11)))))) & p(s(bool,'const.transc.fine_2'(s(fun('type.realax.real','type.realax.real'),X6),s('type.pair.prod'(fun('type.num.num','type.realax.real'),fun('type.num.num','type.realax.real')),'const.pair.,_2'(s(fun('type.num.num','type.realax.real'),X10),s(fun('type.num.num','type.realax.real'),X11)))))) & p(s(bool,'const.transc.tdiv_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X8),s('type.realax.real',X9))),s('type.pair.prod'(fun('type.num.num','type.realax.real'),fun('type.num.num','type.realax.real')),'const.pair.,_2'(s(fun('type.num.num','type.realax.real'),X12),s(fun('type.num.num','type.realax.real'),X13)))))) & p(s(bool,'const.transc.fine_2'(s(fun('type.realax.real','type.realax.real'),X6),s('type.pair.prod'(fun('type.num.num','type.realax.real'),fun('type.num.num','type.realax.real')),'const.pair.,_2'(s(fun('type.num.num','type.realax.real'),X12),s(fun('type.num.num','type.realax.real'),X13))))))) => ? [X14,X15] : (p(s(bool,'const.transc.tdiv_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X7),s('type.realax.real',X9))),s('type.pair.prod'(fun('type.num.num','type.realax.real'),fun('type.num.num','type.realax.real')),'const.pair.,_2'(s(fun('type.num.num','type.realax.real'),X14),s(fun('type.num.num','type.realax.real'),X15)))))) & p(s(bool,'const.transc.fine_2'(s(fun('type.realax.real','type.realax.real'),X6),s('type.pair.prod'(fun('type.num.num','type.realax.real'),fun('type.num.num','type.realax.real')),'const.pair.,_2'(s(fun('type.num.num','type.realax.real'),X14),s(fun('type.num.num','type.realax.real'),X15)))))) & ! [X16] : s('type.realax.real','const.transc.rsum_2'(s('type.pair.prod'(fun('type.num.num','type.realax.real'),fun('type.num.num','type.realax.real')),'const.pair.,_2'(s(fun('type.num.num','type.realax.real'),X14),s(fun('type.num.num','type.realax.real'),X15))),s(fun('type.realax.real','type.realax.real'),X16))) = s('type.realax.real','const.realax.real_add_2'(s('type.realax.real','const.transc.rsum_2'(s('type.pair.prod'(fun('type.num.num','type.realax.real'),fun('type.num.num','type.realax.real')),'const.pair.,_2'(s(fun('type.num.num','type.realax.real'),X10),s(fun('type.num.num','type.realax.real'),X11))),s(fun('type.realax.real','type.realax.real'),X16))),s('type.realax.real','const.transc.rsum_2'(s('type.pair.prod'(fun('type.num.num','type.realax.real'),fun('type.num.num','type.realax.real')),'const.pair.,_2'(s(fun('type.num.num','type.realax.real'),X12),s(fun('type.num.num','type.realax.real'),X13))),s(fun('type.realax.real','type.realax.real'),X16)))))))),
  file('thm.integral.DIVISION_APPEND_STRONG','thm.integral.DIVISION_APPEND_STRONG')).
fof(f410,plain,(
  s(bool,'T_0') = s(bool,'const.transc.fine_2'(s(fun('type.realax.real','type.realax.real'),sK0),s('type.pair.prod'(fun('type.num.num','type.realax.real'),fun('type.num.num','type.realax.real')),'const.pair.,_2'(s(fun('type.num.num','type.realax.real'),'_dst_x0x1x1x1_4'(s(fun(bool,fun('type.realax.real',fun('type.realax.real','type.realax.real'))),'const.bool.COND_0'),s(fun('type.num.num',bool),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num',bool)),'const.prim_rec.<_0'),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),sK4))))),s(fun('type.num.num','type.realax.real'),sK4),s(fun('type.num.num','type.realax.real'),'_dst_x0x1_2'(s(fun('type.num.num','type.realax.real'),sK6),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.-_0'),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),sK4))))))))),s(fun('type.num.num','type.realax.real'),'_dst_x0x1x1x1_4'(s(fun(bool,fun('type.realax.real',fun('type.realax.real','type.realax.real'))),'const.bool.COND_0'),s(fun('type.num.num',bool),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num',bool)),'const.prim_rec.<_0'),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),sK4))))),s(fun('type.num.num','type.realax.real'),sK5),s(fun('type.num.num','type.realax.real'),'_dst_x0x1_2'(s(fun('type.num.num','type.realax.real'),sK7),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.-_0'),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),sK4))))))))))))) | $spl32),
  inference(cnf_transformation,[],[f410_D])).
fof(f410_D,plain,(
  s(bool,'T_0') = s(bool,'const.transc.fine_2'(s(fun('type.realax.real','type.realax.real'),sK0),s('type.pair.prod'(fun('type.num.num','type.realax.real'),fun('type.num.num','type.realax.real')),'const.pair.,_2'(s(fun('type.num.num','type.realax.real'),'_dst_x0x1x1x1_4'(s(fun(bool,fun('type.realax.real',fun('type.realax.real','type.realax.real'))),'const.bool.COND_0'),s(fun('type.num.num',bool),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num',bool)),'const.prim_rec.<_0'),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),sK4))))),s(fun('type.num.num','type.realax.real'),sK4),s(fun('type.num.num','type.realax.real'),'_dst_x0x1_2'(s(fun('type.num.num','type.realax.real'),sK6),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.-_0'),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),sK4))))))))),s(fun('type.num.num','type.realax.real'),'_dst_x0x1x1x1_4'(s(fun(bool,fun('type.realax.real',fun('type.realax.real','type.realax.real'))),'const.bool.COND_0'),s(fun('type.num.num',bool),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num',bool)),'const.prim_rec.<_0'),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),sK4))))),s(fun('type.num.num','type.realax.real'),sK5),s(fun('type.num.num','type.realax.real'),'_dst_x0x1_2'(s(fun('type.num.num','type.realax.real'),sK7),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.-_0'),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),sK4))))))))))))) <=> ~$spl32),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl32])])).
fof(f408,plain,(
  ~p(s(bool,'T_0')) | s(bool,'T_0') = s(bool,'const.transc.fine_2'(s(fun('type.realax.real','type.realax.real'),sK0),s('type.pair.prod'(fun('type.num.num','type.realax.real'),fun('type.num.num','type.realax.real')),'const.pair.,_2'(s(fun('type.num.num','type.realax.real'),'_dst_x0x1x1x1_4'(s(fun(bool,fun('type.realax.real',fun('type.realax.real','type.realax.real'))),'const.bool.COND_0'),s(fun('type.num.num',bool),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num',bool)),'const.prim_rec.<_0'),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),sK4))))),s(fun('type.num.num','type.realax.real'),sK4),s(fun('type.num.num','type.realax.real'),'_dst_x0x1_2'(s(fun('type.num.num','type.realax.real'),sK6),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.-_0'),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),sK4))))))))),s(fun('type.num.num','type.realax.real'),'_dst_x0x1x1x1_4'(s(fun(bool,fun('type.realax.real',fun('type.realax.real','type.realax.real'))),'const.bool.COND_0'),s(fun('type.num.num',bool),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num',bool)),'const.prim_rec.<_0'),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),sK4))))),s(fun('type.num.num','type.realax.real'),sK5),s(fun('type.num.num','type.realax.real'),'_dst_x0x1_2'(s(fun('type.num.num','type.realax.real'),sK7),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.-_0'),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),sK4))))))))))))) | ($spl8 | $spl12 | $spl30)),
  inference(duplicate_literal_removal,[],[f407])).
fof(f407,plain,(
  ~p(s(bool,'T_0')) | ~p(s(bool,'T_0')) | s(bool,'T_0') = s(bool,'const.transc.fine_2'(s(fun('type.realax.real','type.realax.real'),sK0),s('type.pair.prod'(fun('type.num.num','type.realax.real'),fun('type.num.num','type.realax.real')),'const.pair.,_2'(s(fun('type.num.num','type.realax.real'),'_dst_x0x1x1x1_4'(s(fun(bool,fun('type.realax.real',fun('type.realax.real','type.realax.real'))),'const.bool.COND_0'),s(fun('type.num.num',bool),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num',bool)),'const.prim_rec.<_0'),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),sK4))))),s(fun('type.num.num','type.realax.real'),sK4),s(fun('type.num.num','type.realax.real'),'_dst_x0x1_2'(s(fun('type.num.num','type.realax.real'),sK6),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.-_0'),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),sK4))))))))),s(fun('type.num.num','type.realax.real'),'_dst_x0x1x1x1_4'(s(fun(bool,fun('type.realax.real',fun('type.realax.real','type.realax.real'))),'const.bool.COND_0'),s(fun('type.num.num',bool),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num',bool)),'const.prim_rec.<_0'),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),sK4))))),s(fun('type.num.num','type.realax.real'),sK5),s(fun('type.num.num','type.realax.real'),'_dst_x0x1_2'(s(fun('type.num.num','type.realax.real'),sK7),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.-_0'),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),sK4))))))))))))) | ($spl8 | $spl12 | $spl30)),
  inference(forward_demodulation,[],[f401,f154])).
fof(f401,plain,(
  ~p(s(bool,'T_0')) | s(bool,'T_0') = s(bool,'const.transc.fine_2'(s(fun('type.realax.real','type.realax.real'),sK0),s('type.pair.prod'(fun('type.num.num','type.realax.real'),fun('type.num.num','type.realax.real')),'const.pair.,_2'(s(fun('type.num.num','type.realax.real'),'_dst_x0x1x1x1_4'(s(fun(bool,fun('type.realax.real',fun('type.realax.real','type.realax.real'))),'const.bool.COND_0'),s(fun('type.num.num',bool),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num',bool)),'const.prim_rec.<_0'),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),sK4))))),s(fun('type.num.num','type.realax.real'),sK4),s(fun('type.num.num','type.realax.real'),'_dst_x0x1_2'(s(fun('type.num.num','type.realax.real'),sK6),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.-_0'),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),sK4))))))))),s(fun('type.num.num','type.realax.real'),'_dst_x0x1x1x1_4'(s(fun(bool,fun('type.realax.real',fun('type.realax.real','type.realax.real'))),'const.bool.COND_0'),s(fun('type.num.num',bool),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num',bool)),'const.prim_rec.<_0'),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),sK4))))),s(fun('type.num.num','type.realax.real'),sK5),s(fun('type.num.num','type.realax.real'),'_dst_x0x1_2'(s(fun('type.num.num','type.realax.real'),sK7),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.-_0'),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),sK4))))))))))))) | ~p(s(bool,'const.transc.fine_2'(s(fun('type.realax.real','type.realax.real'),sK0),s('type.pair.prod'(fun('type.num.num','type.realax.real'),fun('type.num.num','type.realax.real')),'const.pair.,_2'(s(fun('type.num.num','type.realax.real'),sK4),s(fun('type.num.num','type.realax.real'),sK5)))))) | ($spl8 | $spl30)),
  inference(superposition,[],[f352,f123])).
fof(f352,plain,(
  ( ! [X0] : (~p(s(bool,'const.transc.fine_2'(s(fun('type.realax.real','type.realax.real'),X0),s('type.pair.prod'(fun('type.num.num','type.realax.real'),fun('type.num.num','type.realax.real')),'const.pair.,_2'(s(fun('type.num.num','type.realax.real'),sK6),s(fun('type.num.num','type.realax.real'),sK7)))))) | s(bool,'T_0') = s(bool,'const.transc.fine_2'(s(fun('type.realax.real','type.realax.real'),X0),s('type.pair.prod'(fun('type.num.num','type.realax.real'),fun('type.num.num','type.realax.real')),'const.pair.,_2'(s(fun('type.num.num','type.realax.real'),'_dst_x0x1x1x1_4'(s(fun(bool,fun('type.realax.real',fun('type.realax.real','type.realax.real'))),'const.bool.COND_0'),s(fun('type.num.num',bool),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num',bool)),'const.prim_rec.<_0'),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),sK4))))),s(fun('type.num.num','type.realax.real'),sK4),s(fun('type.num.num','type.realax.real'),'_dst_x0x1_2'(s(fun('type.num.num','type.realax.real'),sK6),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.-_0'),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),sK4))))))))),s(fun('type.num.num','type.realax.real'),'_dst_x0x1x1x1_4'(s(fun(bool,fun('type.realax.real',fun('type.realax.real','type.realax.real'))),'const.bool.COND_0'),s(fun('type.num.num',bool),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num',bool)),'const.prim_rec.<_0'),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),sK4))))),s(fun('type.num.num','type.realax.real'),sK5),s(fun('type.num.num','type.realax.real'),'_dst_x0x1_2'(s(fun('type.num.num','type.realax.real'),sK7),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.-_0'),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),sK4))))))))))))) | ~p(s(bool,'const.transc.fine_2'(s(fun('type.realax.real','type.realax.real'),X0),s('type.pair.prod'(fun('type.num.num','type.realax.real'),fun('type.num.num','type.realax.real')),'const.pair.,_2'(s(fun('type.num.num','type.realax.real'),sK4),s(fun('type.num.num','type.realax.real'),sK5))))))) ) | $spl30),
  inference(cnf_transformation,[],[f352_D])).
fof(f352_D,plain,(
  ( ! [X0] : (~p(s(bool,'const.transc.fine_2'(s(fun('type.realax.real','type.realax.real'),X0),s('type.pair.prod'(fun('type.num.num','type.realax.real'),fun('type.num.num','type.realax.real')),'const.pair.,_2'(s(fun('type.num.num','type.realax.real'),sK6),s(fun('type.num.num','type.realax.real'),sK7)))))) | s(bool,'T_0') = s(bool,'const.transc.fine_2'(s(fun('type.realax.real','type.realax.real'),X0),s('type.pair.prod'(fun('type.num.num','type.realax.real'),fun('type.num.num','type.realax.real')),'const.pair.,_2'(s(fun('type.num.num','type.realax.real'),'_dst_x0x1x1x1_4'(s(fun(bool,fun('type.realax.real',fun('type.realax.real','type.realax.real'))),'const.bool.COND_0'),s(fun('type.num.num',bool),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num',bool)),'const.prim_rec.<_0'),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),sK4))))),s(fun('type.num.num','type.realax.real'),sK4),s(fun('type.num.num','type.realax.real'),'_dst_x0x1_2'(s(fun('type.num.num','type.realax.real'),sK6),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.-_0'),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),sK4))))))))),s(fun('type.num.num','type.realax.real'),'_dst_x0x1x1x1_4'(s(fun(bool,fun('type.realax.real',fun('type.realax.real','type.realax.real'))),'const.bool.COND_0'),s(fun('type.num.num',bool),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num',bool)),'const.prim_rec.<_0'),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),sK4))))),s(fun('type.num.num','type.realax.real'),sK5),s(fun('type.num.num','type.realax.real'),'_dst_x0x1_2'(s(fun('type.num.num','type.realax.real'),sK7),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.-_0'),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),sK4))))))))))))) | ~p(s(bool,'const.transc.fine_2'(s(fun('type.realax.real','type.realax.real'),X0),s('type.pair.prod'(fun('type.num.num','type.realax.real'),fun('type.num.num','type.realax.real')),'const.pair.,_2'(s(fun('type.num.num','type.realax.real'),sK4),s(fun('type.num.num','type.realax.real'),sK5))))))) ) <=> ~$spl30),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl30])])).
fof(f125,plain,(
  p(s(bool,'F_0')) | $spl10),
  inference(cnf_transformation,[],[f125_D])).
fof(f125_D,plain,(
  p(s(bool,'F_0')) <=> ~$spl10),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl10])])).
fof(f347,plain,(
  ( ! [X0] : (p(s(bool,'F_0')) | ~p(s(bool,'const.transc.fine_2'(s(fun('type.realax.real','type.realax.real'),X0),s('type.pair.prod'(fun('type.num.num','type.realax.real'),fun('type.num.num','type.realax.real')),'const.pair.,_2'(s(fun('type.num.num','type.realax.real'),sK6),s(fun('type.num.num','type.realax.real'),sK7)))))) | ~p(s(bool,'const.transc.fine_2'(s(fun('type.realax.real','type.realax.real'),X0),s('type.pair.prod'(fun('type.num.num','type.realax.real'),fun('type.num.num','type.realax.real')),'const.pair.,_2'(s(fun('type.num.num','type.realax.real'),sK4),s(fun('type.num.num','type.realax.real'),sK5)))))) | s(bool,'T_0') = s(bool,'const.transc.fine_2'(s(fun('type.realax.real','type.realax.real'),X0),s('type.pair.prod'(fun('type.num.num','type.realax.real'),fun('type.num.num','type.realax.real')),'const.pair.,_2'(s(fun('type.num.num','type.realax.real'),'_dst_x0x1x1x1_4'(s(fun(bool,fun('type.realax.real',fun('type.realax.real','type.realax.real'))),'const.bool.COND_0'),s(fun('type.num.num',bool),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num',bool)),'const.prim_rec.<_0'),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),sK4))))),s(fun('type.num.num','type.realax.real'),sK4),s(fun('type.num.num','type.realax.real'),'_dst_x0x1_2'(s(fun('type.num.num','type.realax.real'),sK6),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.-_0'),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),sK4))))))))),s(fun('type.num.num','type.realax.real'),'_dst_x0x1x1x1_4'(s(fun(bool,fun('type.realax.real',fun('type.realax.real','type.realax.real'))),'const.bool.COND_0'),s(fun('type.num.num',bool),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num',bool)),'const.prim_rec.<_0'),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),sK4))))),s(fun('type.num.num','type.realax.real'),sK5),s(fun('type.num.num','type.realax.real'),'_dst_x0x1_2'(s(fun('type.num.num','type.realax.real'),sK7),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.-_0'),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),sK4)))))))))))))) ) | $spl18),
  inference(superposition,[],[f234,f80])).
fof(f80,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f3])).
fof(f3,axiom,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) | s(bool,'F_0') = s(bool,X0))),
  file('thm.integral.DIVISION_APPEND_STRONG',aHL_BOOL_CASES)).
fof(f341,plain,(
  s(bool,'T_0') = s(bool,'const.transc.tdiv_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',sK1),s('type.realax.real',sK3))),s('type.pair.prod'(fun('type.num.num','type.realax.real'),fun('type.num.num','type.realax.real')),'const.pair.,_2'(s(fun('type.num.num','type.realax.real'),'_dst_x0x1x1x1_4'(s(fun(bool,fun('type.realax.real',fun('type.realax.real','type.realax.real'))),'const.bool.COND_0'),s(fun('type.num.num',bool),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num',bool)),'const.prim_rec.<_0'),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),sK4))))),s(fun('type.num.num','type.realax.real'),sK4),s(fun('type.num.num','type.realax.real'),'_dst_x0x1_2'(s(fun('type.num.num','type.realax.real'),sK6),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.-_0'),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),sK4))))))))),s(fun('type.num.num','type.realax.real'),'_dst_x0x1x1x1_4'(s(fun(bool,fun('type.realax.real',fun('type.realax.real','type.realax.real'))),'const.bool.COND_0'),s(fun('type.num.num',bool),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num',bool)),'const.prim_rec.<_0'),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),sK4))))),s(fun('type.num.num','type.realax.real'),sK5),s(fun('type.num.num','type.realax.real'),'_dst_x0x1_2'(s(fun('type.num.num','type.realax.real'),sK7),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.-_0'),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),sK4))))))))))))) | $spl28),
  inference(cnf_transformation,[],[f341_D])).
fof(f341_D,plain,(
  s(bool,'T_0') = s(bool,'const.transc.tdiv_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',sK1),s('type.realax.real',sK3))),s('type.pair.prod'(fun('type.num.num','type.realax.real'),fun('type.num.num','type.realax.real')),'const.pair.,_2'(s(fun('type.num.num','type.realax.real'),'_dst_x0x1x1x1_4'(s(fun(bool,fun('type.realax.real',fun('type.realax.real','type.realax.real'))),'const.bool.COND_0'),s(fun('type.num.num',bool),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num',bool)),'const.prim_rec.<_0'),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),sK4))))),s(fun('type.num.num','type.realax.real'),sK4),s(fun('type.num.num','type.realax.real'),'_dst_x0x1_2'(s(fun('type.num.num','type.realax.real'),sK6),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.-_0'),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),sK4))))))))),s(fun('type.num.num','type.realax.real'),'_dst_x0x1x1x1_4'(s(fun(bool,fun('type.realax.real',fun('type.realax.real','type.realax.real'))),'const.bool.COND_0'),s(fun('type.num.num',bool),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num',bool)),'const.prim_rec.<_0'),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),sK4))))),s(fun('type.num.num','type.realax.real'),sK5),s(fun('type.num.num','type.realax.real'),'_dst_x0x1_2'(s(fun('type.num.num','type.realax.real'),sK7),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.-_0'),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),sK4))))))))))))) <=> ~$spl28),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl28])])).
fof(f339,plain,(
  p(s(bool,'F_0')) | s(bool,'T_0') = s(bool,'const.transc.tdiv_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',sK1),s('type.realax.real',sK3))),s('type.pair.prod'(fun('type.num.num','type.realax.real'),fun('type.num.num','type.realax.real')),'const.pair.,_2'(s(fun('type.num.num','type.realax.real'),'_dst_x0x1x1x1_4'(s(fun(bool,fun('type.realax.real',fun('type.realax.real','type.realax.real'))),'const.bool.COND_0'),s(fun('type.num.num',bool),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num',bool)),'const.prim_rec.<_0'),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),sK4))))),s(fun('type.num.num','type.realax.real'),sK4),s(fun('type.num.num','type.realax.real'),'_dst_x0x1_2'(s(fun('type.num.num','type.realax.real'),sK6),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.-_0'),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),sK4))))))))),s(fun('type.num.num','type.realax.real'),'_dst_x0x1x1x1_4'(s(fun(bool,fun('type.realax.real',fun('type.realax.real','type.realax.real'))),'const.bool.COND_0'),s(fun('type.num.num',bool),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num',bool)),'const.prim_rec.<_0'),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),sK4))))),s(fun('type.num.num','type.realax.real'),sK5),s(fun('type.num.num','type.realax.real'),'_dst_x0x1_2'(s(fun('type.num.num','type.realax.real'),sK7),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.-_0'),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),sK4))))))))))))) | $spl24),
  inference(superposition,[],[f273,f80])).
fof(f330,plain,(
  ~p(s(bool,'T_0')) | ($spl8 | $spl12 | $spl22)),
  inference(duplicate_literal_removal,[],[f329])).
fof(f329,plain,(
  ~p(s(bool,'T_0')) | ~p(s(bool,'T_0')) | ($spl8 | $spl12 | $spl22)),
  inference(forward_demodulation,[],[f325,f154])).
fof(f325,plain,(
  ~p(s(bool,'T_0')) | ~p(s(bool,'const.transc.fine_2'(s(fun('type.realax.real','type.realax.real'),sK0),s('type.pair.prod'(fun('type.num.num','type.realax.real'),fun('type.num.num','type.realax.real')),'const.pair.,_2'(s(fun('type.num.num','type.realax.real'),sK4),s(fun('type.num.num','type.realax.real'),sK5)))))) | ($spl8 | $spl22)),
  inference(superposition,[],[f271,f123])).
fof(f271,plain,(
  ( ! [X0] : (~p(s(bool,'const.transc.fine_2'(s(fun('type.realax.real','type.realax.real'),X0),s('type.pair.prod'(fun('type.num.num','type.realax.real'),fun('type.num.num','type.realax.real')),'const.pair.,_2'(s(fun('type.num.num','type.realax.real'),sK6),s(fun('type.num.num','type.realax.real'),sK7)))))) | ~p(s(bool,'const.transc.fine_2'(s(fun('type.realax.real','type.realax.real'),X0),s('type.pair.prod'(fun('type.num.num','type.realax.real'),fun('type.num.num','type.realax.real')),'const.pair.,_2'(s(fun('type.num.num','type.realax.real'),sK4),s(fun('type.num.num','type.realax.real'),sK5))))))) ) | $spl22),
  inference(cnf_transformation,[],[f271_D])).
fof(f271_D,plain,(
  ( ! [X0] : (~p(s(bool,'const.transc.fine_2'(s(fun('type.realax.real','type.realax.real'),X0),s('type.pair.prod'(fun('type.num.num','type.realax.real'),fun('type.num.num','type.realax.real')),'const.pair.,_2'(s(fun('type.num.num','type.realax.real'),sK6),s(fun('type.num.num','type.realax.real'),sK7)))))) | ~p(s(bool,'const.transc.fine_2'(s(fun('type.realax.real','type.realax.real'),X0),s('type.pair.prod'(fun('type.num.num','type.realax.real'),fun('type.num.num','type.realax.real')),'const.pair.,_2'(s(fun('type.num.num','type.realax.real'),sK4),s(fun('type.num.num','type.realax.real'),sK5))))))) ) <=> ~$spl22),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl22])])).
fof(f307,plain,(
  ( ! [X0] : (s('type.realax.real','const.realax.real_add_2'(s('type.realax.real','const.transc.rsum_2'(s('type.pair.prod'(fun('type.num.num','type.realax.real'),fun('type.num.num','type.realax.real')),'const.pair.,_2'(s(fun('type.num.num','type.realax.real'),sK4),s(fun('type.num.num','type.realax.real'),sK5))),s(fun('type.realax.real','type.realax.real'),X0))),s('type.realax.real','const.transc.rsum_2'(s('type.pair.prod'(fun('type.num.num','type.realax.real'),fun('type.num.num','type.realax.real')),'const.pair.,_2'(s(fun('type.num.num','type.realax.real'),sK6),s(fun('type.num.num','type.realax.real'),sK7))),s(fun('type.realax.real','type.realax.real'),X0))))) = s('type.realax.real','const.transc.rsum_2'(s('type.pair.prod'(fun('type.num.num','type.realax.real'),fun('type.num.num','type.realax.real')),'const.pair.,_2'(s(fun('type.num.num','type.realax.real'),'_dst_x0x1x1x1_4'(s(fun(bool,fun('type.realax.real',fun('type.realax.real','type.realax.real'))),'const.bool.COND_0'),s(fun('type.num.num',bool),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num',bool)),'const.prim_rec.<_0'),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),sK4))))),s(fun('type.num.num','type.realax.real'),sK4),s(fun('type.num.num','type.realax.real'),'_dst_x0x1_2'(s(fun('type.num.num','type.realax.real'),sK6),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.-_0'),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),sK4))))))))),s(fun('type.num.num','type.realax.real'),'_dst_x0x1x1x1_4'(s(fun(bool,fun('type.realax.real',fun('type.realax.real','type.realax.real'))),'const.bool.COND_0'),s(fun('type.num.num',bool),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num',bool)),'const.prim_rec.<_0'),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),sK4))))),s(fun('type.num.num','type.realax.real'),sK5),s(fun('type.num.num','type.realax.real'),'_dst_x0x1_2'(s(fun('type.num.num','type.realax.real'),sK7),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.-_0'),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),sK4))))))))))),s(fun('type.realax.real','type.realax.real'),X0)))) ) | $spl26),
  inference(cnf_transformation,[],[f307_D])).
fof(f307_D,plain,(
  ( ! [X0] : (s('type.realax.real','const.realax.real_add_2'(s('type.realax.real','const.transc.rsum_2'(s('type.pair.prod'(fun('type.num.num','type.realax.real'),fun('type.num.num','type.realax.real')),'const.pair.,_2'(s(fun('type.num.num','type.realax.real'),sK4),s(fun('type.num.num','type.realax.real'),sK5))),s(fun('type.realax.real','type.realax.real'),X0))),s('type.realax.real','const.transc.rsum_2'(s('type.pair.prod'(fun('type.num.num','type.realax.real'),fun('type.num.num','type.realax.real')),'const.pair.,_2'(s(fun('type.num.num','type.realax.real'),sK6),s(fun('type.num.num','type.realax.real'),sK7))),s(fun('type.realax.real','type.realax.real'),X0))))) = s('type.realax.real','const.transc.rsum_2'(s('type.pair.prod'(fun('type.num.num','type.realax.real'),fun('type.num.num','type.realax.real')),'const.pair.,_2'(s(fun('type.num.num','type.realax.real'),'_dst_x0x1x1x1_4'(s(fun(bool,fun('type.realax.real',fun('type.realax.real','type.realax.real'))),'const.bool.COND_0'),s(fun('type.num.num',bool),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num',bool)),'const.prim_rec.<_0'),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),sK4))))),s(fun('type.num.num','type.realax.real'),sK4),s(fun('type.num.num','type.realax.real'),'_dst_x0x1_2'(s(fun('type.num.num','type.realax.real'),sK6),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.-_0'),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),sK4))))))))),s(fun('type.num.num','type.realax.real'),'_dst_x0x1x1x1_4'(s(fun(bool,fun('type.realax.real',fun('type.realax.real','type.realax.real'))),'const.bool.COND_0'),s(fun('type.num.num',bool),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num',bool)),'const.prim_rec.<_0'),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),sK4))))),s(fun('type.num.num','type.realax.real'),sK5),s(fun('type.num.num','type.realax.real'),'_dst_x0x1_2'(s(fun('type.num.num','type.realax.real'),sK7),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.-_0'),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),sK4))))))))))),s(fun('type.realax.real','type.realax.real'),X0)))) ) <=> ~$spl26),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl26])])).
fof(f297,plain,(
  ( ! [X0,X1] : (~p(s(bool,'T_0')) | s('type.realax.real','const.realax.real_add_2'(s('type.realax.real','const.transc.rsum_2'(s('type.pair.prod'(fun('type.num.num','type.realax.real'),fun('type.num.num','type.realax.real')),'const.pair.,_2'(s(fun('type.num.num','type.realax.real'),sK4),s(fun('type.num.num','type.realax.real'),sK5))),s(fun('type.realax.real','type.realax.real'),X0))),s('type.realax.real','const.transc.rsum_2'(s('type.pair.prod'(fun('type.num.num','type.realax.real'),fun('type.num.num','type.realax.real')),'const.pair.,_2'(s(fun('type.num.num','type.realax.real'),sK6),s(fun('type.num.num','type.realax.real'),sK7))),s(fun('type.realax.real','type.realax.real'),X0))))) = s('type.realax.real','const.transc.rsum_2'(s('type.pair.prod'(fun('type.num.num','type.realax.real'),fun('type.num.num','type.realax.real')),'const.pair.,_2'(s(fun('type.num.num','type.realax.real'),'_dst_x0x1x1x1_4'(s(fun(bool,fun('type.realax.real',fun('type.realax.real','type.realax.real'))),'const.bool.COND_0'),s(fun('type.num.num',bool),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num',bool)),'const.prim_rec.<_0'),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),sK4))))),s(fun('type.num.num','type.realax.real'),sK4),s(fun('type.num.num','type.realax.real'),'_dst_x0x1_2'(s(fun('type.num.num','type.realax.real'),sK6),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.-_0'),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),sK4))))))))),s(fun('type.num.num','type.realax.real'),'_dst_x0x1x1x1_4'(s(fun(bool,fun('type.realax.real',fun('type.realax.real','type.realax.real'))),'const.bool.COND_0'),s(fun('type.num.num',bool),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num',bool)),'const.prim_rec.<_0'),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),sK4))))),s(fun('type.num.num','type.realax.real'),sK5),s(fun('type.num.num','type.realax.real'),'_dst_x0x1_2'(s(fun('type.num.num','type.realax.real'),sK7),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.-_0'),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),sK4))))))))))),s(fun('type.realax.real','type.realax.real'),X0))) | ~p(s(bool,'const.transc.fine_2'(s(fun('type.realax.real','type.realax.real'),X1),s('type.pair.prod'(fun('type.num.num','type.realax.real'),fun('type.num.num','type.realax.real')),'const.pair.,_2'(s(fun('type.num.num','type.realax.real'),sK4),s(fun('type.num.num','type.realax.real'),sK5)))))) | ~p(s(bool,'const.transc.fine_2'(s(fun('type.realax.real','type.realax.real'),X1),s('type.pair.prod'(fun('type.num.num','type.realax.real'),fun('type.num.num','type.realax.real')),'const.pair.,_2'(s(fun('type.num.num','type.realax.real'),sK6),s(fun('type.num.num','type.realax.real'),sK7))))))) ) | ($spl2 | $spl16)),
  inference(superposition,[],[f161,f178])).
fof(f161,plain,(
  ( ! [X12,X10,X8,X11,X9] : (~p(s(bool,'const.transc.tdiv_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X12),s('type.realax.real',sK2))),s('type.pair.prod'(fun('type.num.num','type.realax.real'),fun('type.num.num','type.realax.real')),'const.pair.,_2'(s(fun('type.num.num','type.realax.real'),X9),s(fun('type.num.num','type.realax.real'),X10)))))) | s('type.realax.real','const.realax.real_add_2'(s('type.realax.real','const.transc.rsum_2'(s('type.pair.prod'(fun('type.num.num','type.realax.real'),fun('type.num.num','type.realax.real')),'const.pair.,_2'(s(fun('type.num.num','type.realax.real'),X9),s(fun('type.num.num','type.realax.real'),X10))),s(fun('type.realax.real','type.realax.real'),X11))),s('type.realax.real','const.transc.rsum_2'(s('type.pair.prod'(fun('type.num.num','type.realax.real'),fun('type.num.num','type.realax.real')),'const.pair.,_2'(s(fun('type.num.num','type.realax.real'),sK6),s(fun('type.num.num','type.realax.real'),sK7))),s(fun('type.realax.real','type.realax.real'),X11))))) = s('type.realax.real','const.transc.rsum_2'(s('type.pair.prod'(fun('type.num.num','type.realax.real'),fun('type.num.num','type.realax.real')),'const.pair.,_2'(s(fun('type.num.num','type.realax.real'),'_dst_x0x1x1x1_4'(s(fun(bool,fun('type.realax.real',fun('type.realax.real','type.realax.real'))),'const.bool.COND_0'),s(fun('type.num.num',bool),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num',bool)),'const.prim_rec.<_0'),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),X9))))),s(fun('type.num.num','type.realax.real'),X9),s(fun('type.num.num','type.realax.real'),'_dst_x0x1_2'(s(fun('type.num.num','type.realax.real'),sK6),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.-_0'),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),X9))))))))),s(fun('type.num.num','type.realax.real'),'_dst_x0x1x1x1_4'(s(fun(bool,fun('type.realax.real',fun('type.realax.real','type.realax.real'))),'const.bool.COND_0'),s(fun('type.num.num',bool),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num',bool)),'const.prim_rec.<_0'),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),X9))))),s(fun('type.num.num','type.realax.real'),X10),s(fun('type.num.num','type.realax.real'),'_dst_x0x1_2'(s(fun('type.num.num','type.realax.real'),sK7),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.-_0'),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),X9))))))))))),s(fun('type.realax.real','type.realax.real'),X11))) | ~p(s(bool,'const.transc.fine_2'(s(fun('type.realax.real','type.realax.real'),X8),s('type.pair.prod'(fun('type.num.num','type.realax.real'),fun('type.num.num','type.realax.real')),'const.pair.,_2'(s(fun('type.num.num','type.realax.real'),X9),s(fun('type.num.num','type.realax.real'),X10)))))) | ~p(s(bool,'const.transc.fine_2'(s(fun('type.realax.real','type.realax.real'),X8),s('type.pair.prod'(fun('type.num.num','type.realax.real'),fun('type.num.num','type.realax.real')),'const.pair.,_2'(s(fun('type.num.num','type.realax.real'),sK6),s(fun('type.num.num','type.realax.real'),sK7))))))) ) | $spl2),
  inference(resolution,[],[f111,f107])).
fof(f107,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (~p(s(bool,'const.transc.tdiv_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X1),s('type.realax.real',X2))),s('type.pair.prod'(fun('type.num.num','type.realax.real'),fun('type.num.num','type.realax.real')),'const.pair.,_2'(s(fun('type.num.num','type.realax.real'),X6),s(fun('type.num.num','type.realax.real'),X7)))))) | ~p(s(bool,'const.transc.fine_2'(s(fun('type.realax.real','type.realax.real'),X3),s('type.pair.prod'(fun('type.num.num','type.realax.real'),fun('type.num.num','type.realax.real')),'const.pair.,_2'(s(fun('type.num.num','type.realax.real'),X6),s(fun('type.num.num','type.realax.real'),X7)))))) | s('type.realax.real','const.realax.real_add_2'(s('type.realax.real','const.transc.rsum_2'(s('type.pair.prod'(fun('type.num.num','type.realax.real'),fun('type.num.num','type.realax.real')),'const.pair.,_2'(s(fun('type.num.num','type.realax.real'),X4),s(fun('type.num.num','type.realax.real'),X5))),s(fun('type.realax.real','type.realax.real'),X8))),s('type.realax.real','const.transc.rsum_2'(s('type.pair.prod'(fun('type.num.num','type.realax.real'),fun('type.num.num','type.realax.real')),'const.pair.,_2'(s(fun('type.num.num','type.realax.real'),X6),s(fun('type.num.num','type.realax.real'),X7))),s(fun('type.realax.real','type.realax.real'),X8))))) = s('type.realax.real','const.transc.rsum_2'(s('type.pair.prod'(fun('type.num.num','type.realax.real'),fun('type.num.num','type.realax.real')),'const.pair.,_2'(s(fun('type.num.num','type.realax.real'),'_dst_x0x1x1x1_4'(s(fun(bool,fun('type.realax.real',fun('type.realax.real','type.realax.real'))),'const.bool.COND_0'),s(fun('type.num.num',bool),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num',bool)),'const.prim_rec.<_0'),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),X4))))),s(fun('type.num.num','type.realax.real'),X4),s(fun('type.num.num','type.realax.real'),'_dst_x0x1_2'(s(fun('type.num.num','type.realax.real'),X6),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.-_0'),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),X4))))))))),s(fun('type.num.num','type.realax.real'),'_dst_x0x1x1x1_4'(s(fun(bool,fun('type.realax.real',fun('type.realax.real','type.realax.real'))),'const.bool.COND_0'),s(fun('type.num.num',bool),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num',bool)),'const.prim_rec.<_0'),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),X4))))),s(fun('type.num.num','type.realax.real'),X5),s(fun('type.num.num','type.realax.real'),'_dst_x0x1_2'(s(fun('type.num.num','type.realax.real'),X7),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.-_0'),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),X4))))))))))),s(fun('type.realax.real','type.realax.real'),X8))) | ~p(s(bool,'const.transc.fine_2'(s(fun('type.realax.real','type.realax.real'),X3),s('type.pair.prod'(fun('type.num.num','type.realax.real'),fun('type.num.num','type.realax.real')),'const.pair.,_2'(s(fun('type.num.num','type.realax.real'),X4),s(fun('type.num.num','type.realax.real'),X5)))))) | ~p(s(bool,'const.transc.tdiv_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X0),s('type.realax.real',X1))),s('type.pair.prod'(fun('type.num.num','type.realax.real'),fun('type.num.num','type.realax.real')),'const.pair.,_2'(s(fun('type.num.num','type.realax.real'),X4),s(fun('type.num.num','type.realax.real'),X5))))))) )),
  inference(cnf_transformation,[],[f57])).
fof(f57,plain,(
  ! [X0,X1,X2,X3,X4,X5,X6,X7] : (~p(s(bool,'const.transc.tdiv_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X0),s('type.realax.real',X1))),s('type.pair.prod'(fun('type.num.num','type.realax.real'),fun('type.num.num','type.realax.real')),'const.pair.,_2'(s(fun('type.num.num','type.realax.real'),X4),s(fun('type.num.num','type.realax.real'),X5)))))) | ~p(s(bool,'const.transc.fine_2'(s(fun('type.realax.real','type.realax.real'),X3),s('type.pair.prod'(fun('type.num.num','type.realax.real'),fun('type.num.num','type.realax.real')),'const.pair.,_2'(s(fun('type.num.num','type.realax.real'),X4),s(fun('type.num.num','type.realax.real'),X5)))))) | ~p(s(bool,'const.transc.tdiv_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X1),s('type.realax.real',X2))),s('type.pair.prod'(fun('type.num.num','type.realax.real'),fun('type.num.num','type.realax.real')),'const.pair.,_2'(s(fun('type.num.num','type.realax.real'),X6),s(fun('type.num.num','type.realax.real'),X7)))))) | ~p(s(bool,'const.transc.fine_2'(s(fun('type.realax.real','type.realax.real'),X3),s('type.pair.prod'(fun('type.num.num','type.realax.real'),fun('type.num.num','type.realax.real')),'const.pair.,_2'(s(fun('type.num.num','type.realax.real'),X6),s(fun('type.num.num','type.realax.real'),X7)))))) | (p(s(bool,'const.transc.tdiv_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X0),s('type.realax.real',X2))),s('type.pair.prod'(fun('type.num.num','type.realax.real'),fun('type.num.num','type.realax.real')),'const.pair.,_2'(s(fun('type.num.num','type.realax.real'),'_dst_x0x1x1x1_4'(s(fun(bool,fun('type.realax.real',fun('type.realax.real','type.realax.real'))),'const.bool.COND_0'),s(fun('type.num.num',bool),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num',bool)),'const.prim_rec.<_0'),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),X4))))),s(fun('type.num.num','type.realax.real'),X4),s(fun('type.num.num','type.realax.real'),'_dst_x0x1_2'(s(fun('type.num.num','type.realax.real'),X6),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.-_0'),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),X4))))))))),s(fun('type.num.num','type.realax.real'),'_dst_x0x1x1x1_4'(s(fun(bool,fun('type.realax.real',fun('type.realax.real','type.realax.real'))),'const.bool.COND_0'),s(fun('type.num.num',bool),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num',bool)),'const.prim_rec.<_0'),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),X4))))),s(fun('type.num.num','type.realax.real'),X5),s(fun('type.num.num','type.realax.real'),'_dst_x0x1_2'(s(fun('type.num.num','type.realax.real'),X7),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.-_0'),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),X4)))))))))))))) & p(s(bool,'const.transc.fine_2'(s(fun('type.realax.real','type.realax.real'),X3),s('type.pair.prod'(fun('type.num.num','type.realax.real'),fun('type.num.num','type.realax.real')),'const.pair.,_2'(s(fun('type.num.num','type.realax.real'),'_dst_x0x1x1x1_4'(s(fun(bool,fun('type.realax.real',fun('type.realax.real','type.realax.real'))),'const.bool.COND_0'),s(fun('type.num.num',bool),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num',bool)),'const.prim_rec.<_0'),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),X4))))),s(fun('type.num.num','type.realax.real'),X4),s(fun('type.num.num','type.realax.real'),'_dst_x0x1_2'(s(fun('type.num.num','type.realax.real'),X6),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.-_0'),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),X4))))))))),s(fun('type.num.num','type.realax.real'),'_dst_x0x1x1x1_4'(s(fun(bool,fun('type.realax.real',fun('type.realax.real','type.realax.real'))),'const.bool.COND_0'),s(fun('type.num.num',bool),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num',bool)),'const.prim_rec.<_0'),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),X4))))),s(fun('type.num.num','type.realax.real'),X5),s(fun('type.num.num','type.realax.real'),'_dst_x0x1_2'(s(fun('type.num.num','type.realax.real'),X7),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.-_0'),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),X4)))))))))))))) & ! [X8] : s('type.realax.real','const.realax.real_add_2'(s('type.realax.real','const.transc.rsum_2'(s('type.pair.prod'(fun('type.num.num','type.realax.real'),fun('type.num.num','type.realax.real')),'const.pair.,_2'(s(fun('type.num.num','type.realax.real'),X4),s(fun('type.num.num','type.realax.real'),X5))),s(fun('type.realax.real','type.realax.real'),X8))),s('type.realax.real','const.transc.rsum_2'(s('type.pair.prod'(fun('type.num.num','type.realax.real'),fun('type.num.num','type.realax.real')),'const.pair.,_2'(s(fun('type.num.num','type.realax.real'),X6),s(fun('type.num.num','type.realax.real'),X7))),s(fun('type.realax.real','type.realax.real'),X8))))) = s('type.realax.real','const.transc.rsum_2'(s('type.pair.prod'(fun('type.num.num','type.realax.real'),fun('type.num.num','type.realax.real')),'const.pair.,_2'(s(fun('type.num.num','type.realax.real'),'_dst_x0x1x1x1_4'(s(fun(bool,fun('type.realax.real',fun('type.realax.real','type.realax.real'))),'const.bool.COND_0'),s(fun('type.num.num',bool),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num',bool)),'const.prim_rec.<_0'),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),X4))))),s(fun('type.num.num','type.realax.real'),X4),s(fun('type.num.num','type.realax.real'),'_dst_x0x1_2'(s(fun('type.num.num','type.realax.real'),X6),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.-_0'),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),X4))))))))),s(fun('type.num.num','type.realax.real'),'_dst_x0x1x1x1_4'(s(fun(bool,fun('type.realax.real',fun('type.realax.real','type.realax.real'))),'const.bool.COND_0'),s(fun('type.num.num',bool),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num',bool)),'const.prim_rec.<_0'),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),X4))))),s(fun('type.num.num','type.realax.real'),X5),s(fun('type.num.num','type.realax.real'),'_dst_x0x1_2'(s(fun('type.num.num','type.realax.real'),X7),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.-_0'),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),X4))))))))))),s(fun('type.realax.real','type.realax.real'),X8)))))),
  inference(flattening,[],[f56])).
fof(f56,plain,(
  ! [X0,X1,X2,X3,X4,X5,X6,X7] : ((~p(s(bool,'const.transc.tdiv_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X0),s('type.realax.real',X1))),s('type.pair.prod'(fun('type.num.num','type.realax.real'),fun('type.num.num','type.realax.real')),'const.pair.,_2'(s(fun('type.num.num','type.realax.real'),X4),s(fun('type.num.num','type.realax.real'),X5)))))) | ~p(s(bool,'const.transc.fine_2'(s(fun('type.realax.real','type.realax.real'),X3),s('type.pair.prod'(fun('type.num.num','type.realax.real'),fun('type.num.num','type.realax.real')),'const.pair.,_2'(s(fun('type.num.num','type.realax.real'),X4),s(fun('type.num.num','type.realax.real'),X5)))))) | ~p(s(bool,'const.transc.tdiv_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X1),s('type.realax.real',X2))),s('type.pair.prod'(fun('type.num.num','type.realax.real'),fun('type.num.num','type.realax.real')),'const.pair.,_2'(s(fun('type.num.num','type.realax.real'),X6),s(fun('type.num.num','type.realax.real'),X7)))))) | ~p(s(bool,'const.transc.fine_2'(s(fun('type.realax.real','type.realax.real'),X3),s('type.pair.prod'(fun('type.num.num','type.realax.real'),fun('type.num.num','type.realax.real')),'const.pair.,_2'(s(fun('type.num.num','type.realax.real'),X6),s(fun('type.num.num','type.realax.real'),X7))))))) | (p(s(bool,'const.transc.tdiv_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X0),s('type.realax.real',X2))),s('type.pair.prod'(fun('type.num.num','type.realax.real'),fun('type.num.num','type.realax.real')),'const.pair.,_2'(s(fun('type.num.num','type.realax.real'),'_dst_x0x1x1x1_4'(s(fun(bool,fun('type.realax.real',fun('type.realax.real','type.realax.real'))),'const.bool.COND_0'),s(fun('type.num.num',bool),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num',bool)),'const.prim_rec.<_0'),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),X4))))),s(fun('type.num.num','type.realax.real'),X4),s(fun('type.num.num','type.realax.real'),'_dst_x0x1_2'(s(fun('type.num.num','type.realax.real'),X6),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.-_0'),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),X4))))))))),s(fun('type.num.num','type.realax.real'),'_dst_x0x1x1x1_4'(s(fun(bool,fun('type.realax.real',fun('type.realax.real','type.realax.real'))),'const.bool.COND_0'),s(fun('type.num.num',bool),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num',bool)),'const.prim_rec.<_0'),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),X4))))),s(fun('type.num.num','type.realax.real'),X5),s(fun('type.num.num','type.realax.real'),'_dst_x0x1_2'(s(fun('type.num.num','type.realax.real'),X7),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.-_0'),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),X4)))))))))))))) & p(s(bool,'const.transc.fine_2'(s(fun('type.realax.real','type.realax.real'),X3),s('type.pair.prod'(fun('type.num.num','type.realax.real'),fun('type.num.num','type.realax.real')),'const.pair.,_2'(s(fun('type.num.num','type.realax.real'),'_dst_x0x1x1x1_4'(s(fun(bool,fun('type.realax.real',fun('type.realax.real','type.realax.real'))),'const.bool.COND_0'),s(fun('type.num.num',bool),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num',bool)),'const.prim_rec.<_0'),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),X4))))),s(fun('type.num.num','type.realax.real'),X4),s(fun('type.num.num','type.realax.real'),'_dst_x0x1_2'(s(fun('type.num.num','type.realax.real'),X6),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.-_0'),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),X4))))))))),s(fun('type.num.num','type.realax.real'),'_dst_x0x1x1x1_4'(s(fun(bool,fun('type.realax.real',fun('type.realax.real','type.realax.real'))),'const.bool.COND_0'),s(fun('type.num.num',bool),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num',bool)),'const.prim_rec.<_0'),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),X4))))),s(fun('type.num.num','type.realax.real'),X5),s(fun('type.num.num','type.realax.real'),'_dst_x0x1_2'(s(fun('type.num.num','type.realax.real'),X7),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.-_0'),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),X4)))))))))))))) & ! [X8] : s('type.realax.real','const.realax.real_add_2'(s('type.realax.real','const.transc.rsum_2'(s('type.pair.prod'(fun('type.num.num','type.realax.real'),fun('type.num.num','type.realax.real')),'const.pair.,_2'(s(fun('type.num.num','type.realax.real'),X4),s(fun('type.num.num','type.realax.real'),X5))),s(fun('type.realax.real','type.realax.real'),X8))),s('type.realax.real','const.transc.rsum_2'(s('type.pair.prod'(fun('type.num.num','type.realax.real'),fun('type.num.num','type.realax.real')),'const.pair.,_2'(s(fun('type.num.num','type.realax.real'),X6),s(fun('type.num.num','type.realax.real'),X7))),s(fun('type.realax.real','type.realax.real'),X8))))) = s('type.realax.real','const.transc.rsum_2'(s('type.pair.prod'(fun('type.num.num','type.realax.real'),fun('type.num.num','type.realax.real')),'const.pair.,_2'(s(fun('type.num.num','type.realax.real'),'_dst_x0x1x1x1_4'(s(fun(bool,fun('type.realax.real',fun('type.realax.real','type.realax.real'))),'const.bool.COND_0'),s(fun('type.num.num',bool),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num',bool)),'const.prim_rec.<_0'),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),X4))))),s(fun('type.num.num','type.realax.real'),X4),s(fun('type.num.num','type.realax.real'),'_dst_x0x1_2'(s(fun('type.num.num','type.realax.real'),X6),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.-_0'),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),X4))))))))),s(fun('type.num.num','type.realax.real'),'_dst_x0x1x1x1_4'(s(fun(bool,fun('type.realax.real',fun('type.realax.real','type.realax.real'))),'const.bool.COND_0'),s(fun('type.num.num',bool),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num',bool)),'const.prim_rec.<_0'),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),X4))))),s(fun('type.num.num','type.realax.real'),X5),s(fun('type.num.num','type.realax.real'),'_dst_x0x1_2'(s(fun('type.num.num','type.realax.real'),X7),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.-_0'),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),X4))))))))))),s(fun('type.realax.real','type.realax.real'),X8)))))),
  inference(ennf_transformation,[],[f48])).
fof(f48,plain,(
  ! [X0,X1,X2,X3,X4,X5,X6,X7] : ((p(s(bool,'const.transc.tdiv_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X0),s('type.realax.real',X1))),s('type.pair.prod'(fun('type.num.num','type.realax.real'),fun('type.num.num','type.realax.real')),'const.pair.,_2'(s(fun('type.num.num','type.realax.real'),X4),s(fun('type.num.num','type.realax.real'),X5)))))) & p(s(bool,'const.transc.fine_2'(s(fun('type.realax.real','type.realax.real'),X3),s('type.pair.prod'(fun('type.num.num','type.realax.real'),fun('type.num.num','type.realax.real')),'const.pair.,_2'(s(fun('type.num.num','type.realax.real'),X4),s(fun('type.num.num','type.realax.real'),X5)))))) & p(s(bool,'const.transc.tdiv_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X1),s('type.realax.real',X2))),s('type.pair.prod'(fun('type.num.num','type.realax.real'),fun('type.num.num','type.realax.real')),'const.pair.,_2'(s(fun('type.num.num','type.realax.real'),X6),s(fun('type.num.num','type.realax.real'),X7)))))) & p(s(bool,'const.transc.fine_2'(s(fun('type.realax.real','type.realax.real'),X3),s('type.pair.prod'(fun('type.num.num','type.realax.real'),fun('type.num.num','type.realax.real')),'const.pair.,_2'(s(fun('type.num.num','type.realax.real'),X6),s(fun('type.num.num','type.realax.real'),X7))))))) => (p(s(bool,'const.transc.tdiv_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X0),s('type.realax.real',X2))),s('type.pair.prod'(fun('type.num.num','type.realax.real'),fun('type.num.num','type.realax.real')),'const.pair.,_2'(s(fun('type.num.num','type.realax.real'),'_dst_x0x1x1x1_4'(s(fun(bool,fun('type.realax.real',fun('type.realax.real','type.realax.real'))),'const.bool.COND_0'),s(fun('type.num.num',bool),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num',bool)),'const.prim_rec.<_0'),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),X4))))),s(fun('type.num.num','type.realax.real'),X4),s(fun('type.num.num','type.realax.real'),'_dst_x0x1_2'(s(fun('type.num.num','type.realax.real'),X6),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.-_0'),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),X4))))))))),s(fun('type.num.num','type.realax.real'),'_dst_x0x1x1x1_4'(s(fun(bool,fun('type.realax.real',fun('type.realax.real','type.realax.real'))),'const.bool.COND_0'),s(fun('type.num.num',bool),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num',bool)),'const.prim_rec.<_0'),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),X4))))),s(fun('type.num.num','type.realax.real'),X5),s(fun('type.num.num','type.realax.real'),'_dst_x0x1_2'(s(fun('type.num.num','type.realax.real'),X7),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.-_0'),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),X4)))))))))))))) & p(s(bool,'const.transc.fine_2'(s(fun('type.realax.real','type.realax.real'),X3),s('type.pair.prod'(fun('type.num.num','type.realax.real'),fun('type.num.num','type.realax.real')),'const.pair.,_2'(s(fun('type.num.num','type.realax.real'),'_dst_x0x1x1x1_4'(s(fun(bool,fun('type.realax.real',fun('type.realax.real','type.realax.real'))),'const.bool.COND_0'),s(fun('type.num.num',bool),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num',bool)),'const.prim_rec.<_0'),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),X4))))),s(fun('type.num.num','type.realax.real'),X4),s(fun('type.num.num','type.realax.real'),'_dst_x0x1_2'(s(fun('type.num.num','type.realax.real'),X6),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.-_0'),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),X4))))))))),s(fun('type.num.num','type.realax.real'),'_dst_x0x1x1x1_4'(s(fun(bool,fun('type.realax.real',fun('type.realax.real','type.realax.real'))),'const.bool.COND_0'),s(fun('type.num.num',bool),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num',bool)),'const.prim_rec.<_0'),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),X4))))),s(fun('type.num.num','type.realax.real'),X5),s(fun('type.num.num','type.realax.real'),'_dst_x0x1_2'(s(fun('type.num.num','type.realax.real'),X7),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.-_0'),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),X4)))))))))))))) & ! [X8] : s('type.realax.real','const.realax.real_add_2'(s('type.realax.real','const.transc.rsum_2'(s('type.pair.prod'(fun('type.num.num','type.realax.real'),fun('type.num.num','type.realax.real')),'const.pair.,_2'(s(fun('type.num.num','type.realax.real'),X4),s(fun('type.num.num','type.realax.real'),X5))),s(fun('type.realax.real','type.realax.real'),X8))),s('type.realax.real','const.transc.rsum_2'(s('type.pair.prod'(fun('type.num.num','type.realax.real'),fun('type.num.num','type.realax.real')),'const.pair.,_2'(s(fun('type.num.num','type.realax.real'),X6),s(fun('type.num.num','type.realax.real'),X7))),s(fun('type.realax.real','type.realax.real'),X8))))) = s('type.realax.real','const.transc.rsum_2'(s('type.pair.prod'(fun('type.num.num','type.realax.real'),fun('type.num.num','type.realax.real')),'const.pair.,_2'(s(fun('type.num.num','type.realax.real'),'_dst_x0x1x1x1_4'(s(fun(bool,fun('type.realax.real',fun('type.realax.real','type.realax.real'))),'const.bool.COND_0'),s(fun('type.num.num',bool),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num',bool)),'const.prim_rec.<_0'),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),X4))))),s(fun('type.num.num','type.realax.real'),X4),s(fun('type.num.num','type.realax.real'),'_dst_x0x1_2'(s(fun('type.num.num','type.realax.real'),X6),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.-_0'),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),X4))))))))),s(fun('type.num.num','type.realax.real'),'_dst_x0x1x1x1_4'(s(fun(bool,fun('type.realax.real',fun('type.realax.real','type.realax.real'))),'const.bool.COND_0'),s(fun('type.num.num',bool),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num',bool)),'const.prim_rec.<_0'),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),X4))))),s(fun('type.num.num','type.realax.real'),X5),s(fun('type.num.num','type.realax.real'),'_dst_x0x1_2'(s(fun('type.num.num','type.realax.real'),X7),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.-_0'),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),X4))))))))))),s(fun('type.realax.real','type.realax.real'),X8)))))),
  inference(rectify,[],[f7])).
fof(f7,axiom,(
  ! [X7,X8,X9,X6,X17,X11,X18,X13] : ((p(s(bool,'const.transc.tdiv_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X7),s('type.realax.real',X8))),s('type.pair.prod'(fun('type.num.num','type.realax.real'),fun('type.num.num','type.realax.real')),'const.pair.,_2'(s(fun('type.num.num','type.realax.real'),X17),s(fun('type.num.num','type.realax.real'),X11)))))) & p(s(bool,'const.transc.fine_2'(s(fun('type.realax.real','type.realax.real'),X6),s('type.pair.prod'(fun('type.num.num','type.realax.real'),fun('type.num.num','type.realax.real')),'const.pair.,_2'(s(fun('type.num.num','type.realax.real'),X17),s(fun('type.num.num','type.realax.real'),X11)))))) & p(s(bool,'const.transc.tdiv_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X8),s('type.realax.real',X9))),s('type.pair.prod'(fun('type.num.num','type.realax.real'),fun('type.num.num','type.realax.real')),'const.pair.,_2'(s(fun('type.num.num','type.realax.real'),X18),s(fun('type.num.num','type.realax.real'),X13)))))) & p(s(bool,'const.transc.fine_2'(s(fun('type.realax.real','type.realax.real'),X6),s('type.pair.prod'(fun('type.num.num','type.realax.real'),fun('type.num.num','type.realax.real')),'const.pair.,_2'(s(fun('type.num.num','type.realax.real'),X18),s(fun('type.num.num','type.realax.real'),X13))))))) => (p(s(bool,'const.transc.tdiv_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X7),s('type.realax.real',X9))),s('type.pair.prod'(fun('type.num.num','type.realax.real'),fun('type.num.num','type.realax.real')),'const.pair.,_2'(s(fun('type.num.num','type.realax.real'),'_dst_x0x1x1x1_4'(s(fun(bool,fun('type.realax.real',fun('type.realax.real','type.realax.real'))),'const.bool.COND_0'),s(fun('type.num.num',bool),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num',bool)),'const.prim_rec.<_0'),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),X17))))),s(fun('type.num.num','type.realax.real'),X17),s(fun('type.num.num','type.realax.real'),'_dst_x0x1_2'(s(fun('type.num.num','type.realax.real'),X18),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.-_0'),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),X17))))))))),s(fun('type.num.num','type.realax.real'),'_dst_x0x1x1x1_4'(s(fun(bool,fun('type.realax.real',fun('type.realax.real','type.realax.real'))),'const.bool.COND_0'),s(fun('type.num.num',bool),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num',bool)),'const.prim_rec.<_0'),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),X17))))),s(fun('type.num.num','type.realax.real'),X11),s(fun('type.num.num','type.realax.real'),'_dst_x0x1_2'(s(fun('type.num.num','type.realax.real'),X13),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.-_0'),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),X17)))))))))))))) & p(s(bool,'const.transc.fine_2'(s(fun('type.realax.real','type.realax.real'),X6),s('type.pair.prod'(fun('type.num.num','type.realax.real'),fun('type.num.num','type.realax.real')),'const.pair.,_2'(s(fun('type.num.num','type.realax.real'),'_dst_x0x1x1x1_4'(s(fun(bool,fun('type.realax.real',fun('type.realax.real','type.realax.real'))),'const.bool.COND_0'),s(fun('type.num.num',bool),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num',bool)),'const.prim_rec.<_0'),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),X17))))),s(fun('type.num.num','type.realax.real'),X17),s(fun('type.num.num','type.realax.real'),'_dst_x0x1_2'(s(fun('type.num.num','type.realax.real'),X18),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.-_0'),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),X17))))))))),s(fun('type.num.num','type.realax.real'),'_dst_x0x1x1x1_4'(s(fun(bool,fun('type.realax.real',fun('type.realax.real','type.realax.real'))),'const.bool.COND_0'),s(fun('type.num.num',bool),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num',bool)),'const.prim_rec.<_0'),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),X17))))),s(fun('type.num.num','type.realax.real'),X11),s(fun('type.num.num','type.realax.real'),'_dst_x0x1_2'(s(fun('type.num.num','type.realax.real'),X13),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.-_0'),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),X17)))))))))))))) & ! [X16] : s('type.realax.real','const.realax.real_add_2'(s('type.realax.real','const.transc.rsum_2'(s('type.pair.prod'(fun('type.num.num','type.realax.real'),fun('type.num.num','type.realax.real')),'const.pair.,_2'(s(fun('type.num.num','type.realax.real'),X17),s(fun('type.num.num','type.realax.real'),X11))),s(fun('type.realax.real','type.realax.real'),X16))),s('type.realax.real','const.transc.rsum_2'(s('type.pair.prod'(fun('type.num.num','type.realax.real'),fun('type.num.num','type.realax.real')),'const.pair.,_2'(s(fun('type.num.num','type.realax.real'),X18),s(fun('type.num.num','type.realax.real'),X13))),s(fun('type.realax.real','type.realax.real'),X16))))) = s('type.realax.real','const.transc.rsum_2'(s('type.pair.prod'(fun('type.num.num','type.realax.real'),fun('type.num.num','type.realax.real')),'const.pair.,_2'(s(fun('type.num.num','type.realax.real'),'_dst_x0x1x1x1_4'(s(fun(bool,fun('type.realax.real',fun('type.realax.real','type.realax.real'))),'const.bool.COND_0'),s(fun('type.num.num',bool),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num',bool)),'const.prim_rec.<_0'),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),X17))))),s(fun('type.num.num','type.realax.real'),X17),s(fun('type.num.num','type.realax.real'),'_dst_x0x1_2'(s(fun('type.num.num','type.realax.real'),X18),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.-_0'),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),X17))))))))),s(fun('type.num.num','type.realax.real'),'_dst_x0x1x1x1_4'(s(fun(bool,fun('type.realax.real',fun('type.realax.real','type.realax.real'))),'const.bool.COND_0'),s(fun('type.num.num',bool),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num',bool)),'const.prim_rec.<_0'),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),X17))))),s(fun('type.num.num','type.realax.real'),X11),s(fun('type.num.num','type.realax.real'),'_dst_x0x1_2'(s(fun('type.num.num','type.realax.real'),X13),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.-_0'),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),X17))))))))))),s(fun('type.realax.real','type.realax.real'),X16)))))),
  file('thm.integral.DIVISION_APPEND_STRONG','thm.integral.DIVISION_APPEND_EXPLICIT')).
fof(f273,plain,(
  p(s(bool,'const.transc.tdiv_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',sK1),s('type.realax.real',sK3))),s('type.pair.prod'(fun('type.num.num','type.realax.real'),fun('type.num.num','type.realax.real')),'const.pair.,_2'(s(fun('type.num.num','type.realax.real'),'_dst_x0x1x1x1_4'(s(fun(bool,fun('type.realax.real',fun('type.realax.real','type.realax.real'))),'const.bool.COND_0'),s(fun('type.num.num',bool),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num',bool)),'const.prim_rec.<_0'),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),sK4))))),s(fun('type.num.num','type.realax.real'),sK4),s(fun('type.num.num','type.realax.real'),'_dst_x0x1_2'(s(fun('type.num.num','type.realax.real'),sK6),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.-_0'),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),sK4))))))))),s(fun('type.num.num','type.realax.real'),'_dst_x0x1x1x1_4'(s(fun(bool,fun('type.realax.real',fun('type.realax.real','type.realax.real'))),'const.bool.COND_0'),s(fun('type.num.num',bool),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num',bool)),'const.prim_rec.<_0'),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),sK4))))),s(fun('type.num.num','type.realax.real'),sK5),s(fun('type.num.num','type.realax.real'),'_dst_x0x1_2'(s(fun('type.num.num','type.realax.real'),sK7),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.-_0'),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),sK4)))))))))))))) | $spl24),
  inference(cnf_transformation,[],[f273_D])).
fof(f273_D,plain,(
  p(s(bool,'const.transc.tdiv_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',sK1),s('type.realax.real',sK3))),s('type.pair.prod'(fun('type.num.num','type.realax.real'),fun('type.num.num','type.realax.real')),'const.pair.,_2'(s(fun('type.num.num','type.realax.real'),'_dst_x0x1x1x1_4'(s(fun(bool,fun('type.realax.real',fun('type.realax.real','type.realax.real'))),'const.bool.COND_0'),s(fun('type.num.num',bool),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num',bool)),'const.prim_rec.<_0'),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),sK4))))),s(fun('type.num.num','type.realax.real'),sK4),s(fun('type.num.num','type.realax.real'),'_dst_x0x1_2'(s(fun('type.num.num','type.realax.real'),sK6),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.-_0'),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),sK4))))))))),s(fun('type.num.num','type.realax.real'),'_dst_x0x1x1x1_4'(s(fun(bool,fun('type.realax.real',fun('type.realax.real','type.realax.real'))),'const.bool.COND_0'),s(fun('type.num.num',bool),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num',bool)),'const.prim_rec.<_0'),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),sK4))))),s(fun('type.num.num','type.realax.real'),sK5),s(fun('type.num.num','type.realax.real'),'_dst_x0x1_2'(s(fun('type.num.num','type.realax.real'),sK7),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.-_0'),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),sK4)))))))))))))) <=> ~$spl24),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl24])])).
fof(f259,plain,(
  ( ! [X0] : (~p(s(bool,'T_0')) | p(s(bool,'const.transc.tdiv_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',sK1),s('type.realax.real',sK3))),s('type.pair.prod'(fun('type.num.num','type.realax.real'),fun('type.num.num','type.realax.real')),'const.pair.,_2'(s(fun('type.num.num','type.realax.real'),'_dst_x0x1x1x1_4'(s(fun(bool,fun('type.realax.real',fun('type.realax.real','type.realax.real'))),'const.bool.COND_0'),s(fun('type.num.num',bool),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num',bool)),'const.prim_rec.<_0'),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),sK4))))),s(fun('type.num.num','type.realax.real'),sK4),s(fun('type.num.num','type.realax.real'),'_dst_x0x1_2'(s(fun('type.num.num','type.realax.real'),sK6),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.-_0'),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),sK4))))))))),s(fun('type.num.num','type.realax.real'),'_dst_x0x1x1x1_4'(s(fun(bool,fun('type.realax.real',fun('type.realax.real','type.realax.real'))),'const.bool.COND_0'),s(fun('type.num.num',bool),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num',bool)),'const.prim_rec.<_0'),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),sK4))))),s(fun('type.num.num','type.realax.real'),sK5),s(fun('type.num.num','type.realax.real'),'_dst_x0x1_2'(s(fun('type.num.num','type.realax.real'),sK7),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.-_0'),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),sK4)))))))))))))) | ~p(s(bool,'const.transc.fine_2'(s(fun('type.realax.real','type.realax.real'),X0),s('type.pair.prod'(fun('type.num.num','type.realax.real'),fun('type.num.num','type.realax.real')),'const.pair.,_2'(s(fun('type.num.num','type.realax.real'),sK4),s(fun('type.num.num','type.realax.real'),sK5)))))) | ~p(s(bool,'const.transc.fine_2'(s(fun('type.realax.real','type.realax.real'),X0),s('type.pair.prod'(fun('type.num.num','type.realax.real'),fun('type.num.num','type.realax.real')),'const.pair.,_2'(s(fun('type.num.num','type.realax.real'),sK6),s(fun('type.num.num','type.realax.real'),sK7))))))) ) | ($spl2 | $spl16)),
  inference(superposition,[],[f159,f178])).
fof(f159,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,'const.transc.tdiv_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X1),s('type.realax.real',sK2))),s('type.pair.prod'(fun('type.num.num','type.realax.real'),fun('type.num.num','type.realax.real')),'const.pair.,_2'(s(fun('type.num.num','type.realax.real'),X2),s(fun('type.num.num','type.realax.real'),X3)))))) | p(s(bool,'const.transc.tdiv_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X1),s('type.realax.real',sK3))),s('type.pair.prod'(fun('type.num.num','type.realax.real'),fun('type.num.num','type.realax.real')),'const.pair.,_2'(s(fun('type.num.num','type.realax.real'),'_dst_x0x1x1x1_4'(s(fun(bool,fun('type.realax.real',fun('type.realax.real','type.realax.real'))),'const.bool.COND_0'),s(fun('type.num.num',bool),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num',bool)),'const.prim_rec.<_0'),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),X2))))),s(fun('type.num.num','type.realax.real'),X2),s(fun('type.num.num','type.realax.real'),'_dst_x0x1_2'(s(fun('type.num.num','type.realax.real'),sK6),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.-_0'),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),X2))))))))),s(fun('type.num.num','type.realax.real'),'_dst_x0x1x1x1_4'(s(fun(bool,fun('type.realax.real',fun('type.realax.real','type.realax.real'))),'const.bool.COND_0'),s(fun('type.num.num',bool),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num',bool)),'const.prim_rec.<_0'),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),X2))))),s(fun('type.num.num','type.realax.real'),X3),s(fun('type.num.num','type.realax.real'),'_dst_x0x1_2'(s(fun('type.num.num','type.realax.real'),sK7),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.-_0'),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),X2)))))))))))))) | ~p(s(bool,'const.transc.fine_2'(s(fun('type.realax.real','type.realax.real'),X0),s('type.pair.prod'(fun('type.num.num','type.realax.real'),fun('type.num.num','type.realax.real')),'const.pair.,_2'(s(fun('type.num.num','type.realax.real'),X2),s(fun('type.num.num','type.realax.real'),X3)))))) | ~p(s(bool,'const.transc.fine_2'(s(fun('type.realax.real','type.realax.real'),X0),s('type.pair.prod'(fun('type.num.num','type.realax.real'),fun('type.num.num','type.realax.real')),'const.pair.,_2'(s(fun('type.num.num','type.realax.real'),sK6),s(fun('type.num.num','type.realax.real'),sK7))))))) ) | $spl2),
  inference(resolution,[],[f111,f105])).
fof(f105,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (~p(s(bool,'const.transc.tdiv_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X1),s('type.realax.real',X2))),s('type.pair.prod'(fun('type.num.num','type.realax.real'),fun('type.num.num','type.realax.real')),'const.pair.,_2'(s(fun('type.num.num','type.realax.real'),X6),s(fun('type.num.num','type.realax.real'),X7)))))) | ~p(s(bool,'const.transc.fine_2'(s(fun('type.realax.real','type.realax.real'),X3),s('type.pair.prod'(fun('type.num.num','type.realax.real'),fun('type.num.num','type.realax.real')),'const.pair.,_2'(s(fun('type.num.num','type.realax.real'),X6),s(fun('type.num.num','type.realax.real'),X7)))))) | p(s(bool,'const.transc.tdiv_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X0),s('type.realax.real',X2))),s('type.pair.prod'(fun('type.num.num','type.realax.real'),fun('type.num.num','type.realax.real')),'const.pair.,_2'(s(fun('type.num.num','type.realax.real'),'_dst_x0x1x1x1_4'(s(fun(bool,fun('type.realax.real',fun('type.realax.real','type.realax.real'))),'const.bool.COND_0'),s(fun('type.num.num',bool),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num',bool)),'const.prim_rec.<_0'),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),X4))))),s(fun('type.num.num','type.realax.real'),X4),s(fun('type.num.num','type.realax.real'),'_dst_x0x1_2'(s(fun('type.num.num','type.realax.real'),X6),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.-_0'),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),X4))))))))),s(fun('type.num.num','type.realax.real'),'_dst_x0x1x1x1_4'(s(fun(bool,fun('type.realax.real',fun('type.realax.real','type.realax.real'))),'const.bool.COND_0'),s(fun('type.num.num',bool),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num',bool)),'const.prim_rec.<_0'),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),X4))))),s(fun('type.num.num','type.realax.real'),X5),s(fun('type.num.num','type.realax.real'),'_dst_x0x1_2'(s(fun('type.num.num','type.realax.real'),X7),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.-_0'),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),X4)))))))))))))) | ~p(s(bool,'const.transc.fine_2'(s(fun('type.realax.real','type.realax.real'),X3),s('type.pair.prod'(fun('type.num.num','type.realax.real'),fun('type.num.num','type.realax.real')),'const.pair.,_2'(s(fun('type.num.num','type.realax.real'),X4),s(fun('type.num.num','type.realax.real'),X5)))))) | ~p(s(bool,'const.transc.tdiv_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X0),s('type.realax.real',X1))),s('type.pair.prod'(fun('type.num.num','type.realax.real'),fun('type.num.num','type.realax.real')),'const.pair.,_2'(s(fun('type.num.num','type.realax.real'),X4),s(fun('type.num.num','type.realax.real'),X5))))))) )),
  inference(cnf_transformation,[],[f57])).
fof(f237,plain,(
  s(bool,'T_0') != s(bool,'const.transc.fine_2'(s(fun('type.realax.real','type.realax.real'),sK0),s('type.pair.prod'(fun('type.num.num','type.realax.real'),fun('type.num.num','type.realax.real')),'const.pair.,_2'(s(fun('type.num.num','type.realax.real'),sK6),s(fun('type.num.num','type.realax.real'),sK7))))) | p(s(bool,'T_0')) | ~p(s(bool,'const.transc.fine_2'(s(fun('type.realax.real','type.realax.real'),sK0),s('type.pair.prod'(fun('type.num.num','type.realax.real'),fun('type.num.num','type.realax.real')),'const.pair.,_2'(s(fun('type.num.num','type.realax.real'),sK6),s(fun('type.num.num','type.realax.real'),sK7))))))),
  introduced(theory_axiom,[])).
fof(f234,plain,(
  ( ! [X0] : (p(s(bool,'const.transc.fine_2'(s(fun('type.realax.real','type.realax.real'),X0),s('type.pair.prod'(fun('type.num.num','type.realax.real'),fun('type.num.num','type.realax.real')),'const.pair.,_2'(s(fun('type.num.num','type.realax.real'),'_dst_x0x1x1x1_4'(s(fun(bool,fun('type.realax.real',fun('type.realax.real','type.realax.real'))),'const.bool.COND_0'),s(fun('type.num.num',bool),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num',bool)),'const.prim_rec.<_0'),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),sK4))))),s(fun('type.num.num','type.realax.real'),sK4),s(fun('type.num.num','type.realax.real'),'_dst_x0x1_2'(s(fun('type.num.num','type.realax.real'),sK6),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.-_0'),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),sK4))))))))),s(fun('type.num.num','type.realax.real'),'_dst_x0x1x1x1_4'(s(fun(bool,fun('type.realax.real',fun('type.realax.real','type.realax.real'))),'const.bool.COND_0'),s(fun('type.num.num',bool),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num',bool)),'const.prim_rec.<_0'),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),sK4))))),s(fun('type.num.num','type.realax.real'),sK5),s(fun('type.num.num','type.realax.real'),'_dst_x0x1_2'(s(fun('type.num.num','type.realax.real'),sK7),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.-_0'),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),sK4)))))))))))))) | ~p(s(bool,'const.transc.fine_2'(s(fun('type.realax.real','type.realax.real'),X0),s('type.pair.prod'(fun('type.num.num','type.realax.real'),fun('type.num.num','type.realax.real')),'const.pair.,_2'(s(fun('type.num.num','type.realax.real'),sK6),s(fun('type.num.num','type.realax.real'),sK7)))))) | ~p(s(bool,'const.transc.fine_2'(s(fun('type.realax.real','type.realax.real'),X0),s('type.pair.prod'(fun('type.num.num','type.realax.real'),fun('type.num.num','type.realax.real')),'const.pair.,_2'(s(fun('type.num.num','type.realax.real'),sK4),s(fun('type.num.num','type.realax.real'),sK5))))))) ) | $spl18),
  inference(cnf_transformation,[],[f234_D])).
fof(f234_D,plain,(
  ( ! [X0] : (p(s(bool,'const.transc.fine_2'(s(fun('type.realax.real','type.realax.real'),X0),s('type.pair.prod'(fun('type.num.num','type.realax.real'),fun('type.num.num','type.realax.real')),'const.pair.,_2'(s(fun('type.num.num','type.realax.real'),'_dst_x0x1x1x1_4'(s(fun(bool,fun('type.realax.real',fun('type.realax.real','type.realax.real'))),'const.bool.COND_0'),s(fun('type.num.num',bool),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num',bool)),'const.prim_rec.<_0'),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),sK4))))),s(fun('type.num.num','type.realax.real'),sK4),s(fun('type.num.num','type.realax.real'),'_dst_x0x1_2'(s(fun('type.num.num','type.realax.real'),sK6),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.-_0'),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),sK4))))))))),s(fun('type.num.num','type.realax.real'),'_dst_x0x1x1x1_4'(s(fun(bool,fun('type.realax.real',fun('type.realax.real','type.realax.real'))),'const.bool.COND_0'),s(fun('type.num.num',bool),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num',bool)),'const.prim_rec.<_0'),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),sK4))))),s(fun('type.num.num','type.realax.real'),sK5),s(fun('type.num.num','type.realax.real'),'_dst_x0x1_2'(s(fun('type.num.num','type.realax.real'),sK7),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.-_0'),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),sK4)))))))))))))) | ~p(s(bool,'const.transc.fine_2'(s(fun('type.realax.real','type.realax.real'),X0),s('type.pair.prod'(fun('type.num.num','type.realax.real'),fun('type.num.num','type.realax.real')),'const.pair.,_2'(s(fun('type.num.num','type.realax.real'),sK6),s(fun('type.num.num','type.realax.real'),sK7)))))) | ~p(s(bool,'const.transc.fine_2'(s(fun('type.realax.real','type.realax.real'),X0),s('type.pair.prod'(fun('type.num.num','type.realax.real'),fun('type.num.num','type.realax.real')),'const.pair.,_2'(s(fun('type.num.num','type.realax.real'),sK4),s(fun('type.num.num','type.realax.real'),sK5))))))) ) <=> ~$spl18),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl18])])).
fof(f224,plain,(
  ( ! [X0] : (~p(s(bool,'T_0')) | p(s(bool,'const.transc.fine_2'(s(fun('type.realax.real','type.realax.real'),X0),s('type.pair.prod'(fun('type.num.num','type.realax.real'),fun('type.num.num','type.realax.real')),'const.pair.,_2'(s(fun('type.num.num','type.realax.real'),'_dst_x0x1x1x1_4'(s(fun(bool,fun('type.realax.real',fun('type.realax.real','type.realax.real'))),'const.bool.COND_0'),s(fun('type.num.num',bool),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num',bool)),'const.prim_rec.<_0'),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),sK4))))),s(fun('type.num.num','type.realax.real'),sK4),s(fun('type.num.num','type.realax.real'),'_dst_x0x1_2'(s(fun('type.num.num','type.realax.real'),sK6),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.-_0'),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),sK4))))))))),s(fun('type.num.num','type.realax.real'),'_dst_x0x1x1x1_4'(s(fun(bool,fun('type.realax.real',fun('type.realax.real','type.realax.real'))),'const.bool.COND_0'),s(fun('type.num.num',bool),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num',bool)),'const.prim_rec.<_0'),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),sK4))))),s(fun('type.num.num','type.realax.real'),sK5),s(fun('type.num.num','type.realax.real'),'_dst_x0x1_2'(s(fun('type.num.num','type.realax.real'),sK7),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.-_0'),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),sK4)))))))))))))) | ~p(s(bool,'const.transc.fine_2'(s(fun('type.realax.real','type.realax.real'),X0),s('type.pair.prod'(fun('type.num.num','type.realax.real'),fun('type.num.num','type.realax.real')),'const.pair.,_2'(s(fun('type.num.num','type.realax.real'),sK4),s(fun('type.num.num','type.realax.real'),sK5)))))) | ~p(s(bool,'const.transc.fine_2'(s(fun('type.realax.real','type.realax.real'),X0),s('type.pair.prod'(fun('type.num.num','type.realax.real'),fun('type.num.num','type.realax.real')),'const.pair.,_2'(s(fun('type.num.num','type.realax.real'),sK6),s(fun('type.num.num','type.realax.real'),sK7))))))) ) | ($spl2 | $spl16)),
  inference(superposition,[],[f160,f178])).
fof(f160,plain,(
  ( ! [X6,X4,X7,X5] : (~p(s(bool,'const.transc.tdiv_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X7),s('type.realax.real',sK2))),s('type.pair.prod'(fun('type.num.num','type.realax.real'),fun('type.num.num','type.realax.real')),'const.pair.,_2'(s(fun('type.num.num','type.realax.real'),X5),s(fun('type.num.num','type.realax.real'),X6)))))) | p(s(bool,'const.transc.fine_2'(s(fun('type.realax.real','type.realax.real'),X4),s('type.pair.prod'(fun('type.num.num','type.realax.real'),fun('type.num.num','type.realax.real')),'const.pair.,_2'(s(fun('type.num.num','type.realax.real'),'_dst_x0x1x1x1_4'(s(fun(bool,fun('type.realax.real',fun('type.realax.real','type.realax.real'))),'const.bool.COND_0'),s(fun('type.num.num',bool),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num',bool)),'const.prim_rec.<_0'),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),X5))))),s(fun('type.num.num','type.realax.real'),X5),s(fun('type.num.num','type.realax.real'),'_dst_x0x1_2'(s(fun('type.num.num','type.realax.real'),sK6),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.-_0'),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),X5))))))))),s(fun('type.num.num','type.realax.real'),'_dst_x0x1x1x1_4'(s(fun(bool,fun('type.realax.real',fun('type.realax.real','type.realax.real'))),'const.bool.COND_0'),s(fun('type.num.num',bool),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num',bool)),'const.prim_rec.<_0'),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),X5))))),s(fun('type.num.num','type.realax.real'),X6),s(fun('type.num.num','type.realax.real'),'_dst_x0x1_2'(s(fun('type.num.num','type.realax.real'),sK7),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.-_0'),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),X5)))))))))))))) | ~p(s(bool,'const.transc.fine_2'(s(fun('type.realax.real','type.realax.real'),X4),s('type.pair.prod'(fun('type.num.num','type.realax.real'),fun('type.num.num','type.realax.real')),'const.pair.,_2'(s(fun('type.num.num','type.realax.real'),X5),s(fun('type.num.num','type.realax.real'),X6)))))) | ~p(s(bool,'const.transc.fine_2'(s(fun('type.realax.real','type.realax.real'),X4),s('type.pair.prod'(fun('type.num.num','type.realax.real'),fun('type.num.num','type.realax.real')),'const.pair.,_2'(s(fun('type.num.num','type.realax.real'),sK6),s(fun('type.num.num','type.realax.real'),sK7))))))) ) | $spl2),
  inference(resolution,[],[f111,f106])).
fof(f106,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (~p(s(bool,'const.transc.tdiv_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X1),s('type.realax.real',X2))),s('type.pair.prod'(fun('type.num.num','type.realax.real'),fun('type.num.num','type.realax.real')),'const.pair.,_2'(s(fun('type.num.num','type.realax.real'),X6),s(fun('type.num.num','type.realax.real'),X7)))))) | ~p(s(bool,'const.transc.fine_2'(s(fun('type.realax.real','type.realax.real'),X3),s('type.pair.prod'(fun('type.num.num','type.realax.real'),fun('type.num.num','type.realax.real')),'const.pair.,_2'(s(fun('type.num.num','type.realax.real'),X6),s(fun('type.num.num','type.realax.real'),X7)))))) | p(s(bool,'const.transc.fine_2'(s(fun('type.realax.real','type.realax.real'),X3),s('type.pair.prod'(fun('type.num.num','type.realax.real'),fun('type.num.num','type.realax.real')),'const.pair.,_2'(s(fun('type.num.num','type.realax.real'),'_dst_x0x1x1x1_4'(s(fun(bool,fun('type.realax.real',fun('type.realax.real','type.realax.real'))),'const.bool.COND_0'),s(fun('type.num.num',bool),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num',bool)),'const.prim_rec.<_0'),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),X4))))),s(fun('type.num.num','type.realax.real'),X4),s(fun('type.num.num','type.realax.real'),'_dst_x0x1_2'(s(fun('type.num.num','type.realax.real'),X6),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.-_0'),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),X4))))))))),s(fun('type.num.num','type.realax.real'),'_dst_x0x1x1x1_4'(s(fun(bool,fun('type.realax.real',fun('type.realax.real','type.realax.real'))),'const.bool.COND_0'),s(fun('type.num.num',bool),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num',bool)),'const.prim_rec.<_0'),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),X4))))),s(fun('type.num.num','type.realax.real'),X5),s(fun('type.num.num','type.realax.real'),'_dst_x0x1_2'(s(fun('type.num.num','type.realax.real'),X7),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.-_0'),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),X4)))))))))))))) | ~p(s(bool,'const.transc.fine_2'(s(fun('type.realax.real','type.realax.real'),X3),s('type.pair.prod'(fun('type.num.num','type.realax.real'),fun('type.num.num','type.realax.real')),'const.pair.,_2'(s(fun('type.num.num','type.realax.real'),X4),s(fun('type.num.num','type.realax.real'),X5)))))) | ~p(s(bool,'const.transc.tdiv_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X0),s('type.realax.real',X1))),s('type.pair.prod'(fun('type.num.num','type.realax.real'),fun('type.num.num','type.realax.real')),'const.pair.,_2'(s(fun('type.num.num','type.realax.real'),X4),s(fun('type.num.num','type.realax.real'),X5))))))) )),
  inference(cnf_transformation,[],[f57])).
fof(f178,plain,(
  s(bool,'T_0') = s(bool,'const.transc.tdiv_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',sK1),s('type.realax.real',sK2))),s('type.pair.prod'(fun('type.num.num','type.realax.real'),fun('type.num.num','type.realax.real')),'const.pair.,_2'(s(fun('type.num.num','type.realax.real'),sK4),s(fun('type.num.num','type.realax.real'),sK5))))) | $spl16),
  inference(cnf_transformation,[],[f178_D])).
fof(f178_D,plain,(
  s(bool,'T_0') = s(bool,'const.transc.tdiv_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',sK1),s('type.realax.real',sK2))),s('type.pair.prod'(fun('type.num.num','type.realax.real'),fun('type.num.num','type.realax.real')),'const.pair.,_2'(s(fun('type.num.num','type.realax.real'),sK4),s(fun('type.num.num','type.realax.real'),sK5))))) <=> ~$spl16),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl16])])).
fof(f176,plain,(
  p(s(bool,'F_0')) | s(bool,'T_0') = s(bool,'const.transc.tdiv_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',sK1),s('type.realax.real',sK2))),s('type.pair.prod'(fun('type.num.num','type.realax.real'),fun('type.num.num','type.realax.real')),'const.pair.,_2'(s(fun('type.num.num','type.realax.real'),sK4),s(fun('type.num.num','type.realax.real'),sK5))))) | $spl6),
  inference(superposition,[],[f115,f80])).
fof(f166,plain,(
  s(bool,'T_0') = s(bool,'const.transc.tdiv_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',sK2),s('type.realax.real',sK3))),s('type.pair.prod'(fun('type.num.num','type.realax.real'),fun('type.num.num','type.realax.real')),'const.pair.,_2'(s(fun('type.num.num','type.realax.real'),sK6),s(fun('type.num.num','type.realax.real'),sK7))))) | $spl14),
  inference(cnf_transformation,[],[f166_D])).
fof(f166_D,plain,(
  s(bool,'T_0') = s(bool,'const.transc.tdiv_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',sK2),s('type.realax.real',sK3))),s('type.pair.prod'(fun('type.num.num','type.realax.real'),fun('type.num.num','type.realax.real')),'const.pair.,_2'(s(fun('type.num.num','type.realax.real'),sK6),s(fun('type.num.num','type.realax.real'),sK7))))) <=> ~$spl14),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl14])])).
fof(f164,plain,(
  p(s(bool,'F_0')) | s(bool,'T_0') = s(bool,'const.transc.tdiv_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',sK2),s('type.realax.real',sK3))),s('type.pair.prod'(fun('type.num.num','type.realax.real'),fun('type.num.num','type.realax.real')),'const.pair.,_2'(s(fun('type.num.num','type.realax.real'),sK6),s(fun('type.num.num','type.realax.real'),sK7))))) | $spl2),
  inference(superposition,[],[f111,f80])).
fof(f154,plain,(
  s(bool,'T_0') = s(bool,'const.transc.fine_2'(s(fun('type.realax.real','type.realax.real'),sK0),s('type.pair.prod'(fun('type.num.num','type.realax.real'),fun('type.num.num','type.realax.real')),'const.pair.,_2'(s(fun('type.num.num','type.realax.real'),sK4),s(fun('type.num.num','type.realax.real'),sK5))))) | $spl12),
  inference(cnf_transformation,[],[f154_D])).
fof(f154_D,plain,(
  s(bool,'T_0') = s(bool,'const.transc.fine_2'(s(fun('type.realax.real','type.realax.real'),sK0),s('type.pair.prod'(fun('type.num.num','type.realax.real'),fun('type.num.num','type.realax.real')),'const.pair.,_2'(s(fun('type.num.num','type.realax.real'),sK4),s(fun('type.num.num','type.realax.real'),sK5))))) <=> ~$spl12),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl12])])).
fof(f152,plain,(
  p(s(bool,'F_0')) | s(bool,'T_0') = s(bool,'const.transc.fine_2'(s(fun('type.realax.real','type.realax.real'),sK0),s('type.pair.prod'(fun('type.num.num','type.realax.real'),fun('type.num.num','type.realax.real')),'const.pair.,_2'(s(fun('type.num.num','type.realax.real'),sK4),s(fun('type.num.num','type.realax.real'),sK5))))) | $spl4),
  inference(superposition,[],[f113,f80])).
fof(f145,plain,(
  $false | $spl10),
  inference(global_subsumption,[],[f73,f72,f71,f70,f69,f125,f129,f127,f135,f136,f140])).
fof(f140,plain,(
  ( ! [X0] : (p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)) ) | $spl10),
  inference(superposition,[],[f125,f80])).
fof(f136,plain,(
  ( ! [X1] : (p(s(bool,X1))) ) | $spl10),
  inference(resolution,[],[f125,f81])).
fof(f81,plain,(
  ( ! [X0] : (~p(s(bool,'F_0')) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f51])).
fof(f51,plain,(
  ! [X0] : (~p(s(bool,'F_0')) | p(s(bool,X0)))),
  inference(ennf_transformation,[],[f29])).
fof(f29,plain,(
  ! [X0] : (p(s(bool,'F_0')) => p(s(bool,X0)))),
  inference(rectify,[],[f19])).
fof(f19,axiom,(
  ! [X24] : (p(s(bool,'F_0')) => p(s(bool,X24)))),
  file('thm.integral.DIVISION_APPEND_STRONG','thm.bool.FALSITY')).
fof(f135,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | $spl10),
  inference(resolution,[],[f125,f83])).
fof(f83,plain,(
  ( ! [X0] : (~p(s(bool,'F_0')) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f52])).
fof(f52,plain,(
  ! [X0] : ((p(s(bool,X0)) & ~p(s(bool,'F_0'))) | ~p(s(bool,X0)))),
  inference(ennf_transformation,[],[f31])).
fof(f31,plain,(
  ! [X0] : ((p(s(bool,X0)) => p(s(bool,'F_0'))) => ~p(s(bool,X0)))),
  inference(flattening,[],[f30])).
fof(f30,plain,(
  ! [X0] : ((p(s(bool,X0)) => p(s(bool,'F_0'))) => ~p(s(bool,X0)))),
  inference(rectify,[],[f13])).
fof(f13,axiom,(
  ! [X24] : ((p(s(bool,X24)) => p(s(bool,'F_0'))) => ~p(s(bool,X24)))),
  file('thm.integral.DIVISION_APPEND_STRONG','thm.bool.IMP_F')).
fof(f127,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | $spl10),
  inference(unit_resulting_resolution,[],[f125,f83])).
fof(f129,plain,(
  ( ! [X0] : (p(s(bool,X0))) ) | $spl10),
  inference(unit_resulting_resolution,[],[f125,f81])).
fof(f144,plain,(
  $false | $spl10),
  inference(global_subsumption,[],[f73,f72,f71,f70,f69,f125,f129,f127,f135,f136])).
fof(f143,plain,(
  $false | $spl10),
  inference(global_subsumption,[],[f73,f72,f71,f70,f69,f125,f129,f127,f135])).
fof(f142,plain,(
  $false | $spl10),
  inference(global_subsumption,[],[f73,f72,f71,f70,f69,f125,f129,f127])).
fof(f134,plain,(
  $false | $spl10),
  inference(unit_resulting_resolution,[],[f125,f125,f83])).
fof(f130,plain,(
  $false | $spl10),
  inference(unit_resulting_resolution,[],[f76,f125,f81])).
fof(f76,plain,(
  ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f24])).
fof(f24,plain,(
  ~p(s(bool,'F_0'))),
  inference(flattening,[],[f2])).
fof(f2,axiom,(
  ~p(s(bool,'F_0'))),
  file('thm.integral.DIVISION_APPEND_STRONG',aHL_FALSITY)).
fof(f128,plain,(
  $false | $spl10),
  inference(unit_resulting_resolution,[],[f75,f125,f83])).
fof(f75,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f22])).
fof(f22,axiom,(
  p(s(bool,'T_0'))),
  file('thm.integral.DIVISION_APPEND_STRONG','thm.bool.TRUTH')).
fof(f126,plain,(
  $false | $spl10),
  inference(unit_resulting_resolution,[],[f76,f125])).
fof(f137,plain,(
  $false | $spl10),
  inference(resolution,[],[f125,f76])).
fof(f123,plain,(
  s(bool,'T_0') = s(bool,'const.transc.fine_2'(s(fun('type.realax.real','type.realax.real'),sK0),s('type.pair.prod'(fun('type.num.num','type.realax.real'),fun('type.num.num','type.realax.real')),'const.pair.,_2'(s(fun('type.num.num','type.realax.real'),sK6),s(fun('type.num.num','type.realax.real'),sK7))))) | $spl8),
  inference(cnf_transformation,[],[f123_D])).
fof(f123_D,plain,(
  s(bool,'T_0') = s(bool,'const.transc.fine_2'(s(fun('type.realax.real','type.realax.real'),sK0),s('type.pair.prod'(fun('type.num.num','type.realax.real'),fun('type.num.num','type.realax.real')),'const.pair.,_2'(s(fun('type.num.num','type.realax.real'),sK6),s(fun('type.num.num','type.realax.real'),sK7))))) <=> ~$spl8),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl8])])).
fof(f121,plain,(
  p(s(bool,'F_0')) | s(bool,'T_0') = s(bool,'const.transc.fine_2'(s(fun('type.realax.real','type.realax.real'),sK0),s('type.pair.prod'(fun('type.num.num','type.realax.real'),fun('type.num.num','type.realax.real')),'const.pair.,_2'(s(fun('type.num.num','type.realax.real'),sK6),s(fun('type.num.num','type.realax.real'),sK7))))) | $spl0),
  inference(superposition,[],[f109,f80])).
fof(f115,plain,(
  p(s(bool,'const.transc.tdiv_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',sK1),s('type.realax.real',sK2))),s('type.pair.prod'(fun('type.num.num','type.realax.real'),fun('type.num.num','type.realax.real')),'const.pair.,_2'(s(fun('type.num.num','type.realax.real'),sK4),s(fun('type.num.num','type.realax.real'),sK5)))))) | $spl6),
  inference(cnf_transformation,[],[f115_D])).
fof(f115_D,plain,(
  p(s(bool,'const.transc.tdiv_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',sK1),s('type.realax.real',sK2))),s('type.pair.prod'(fun('type.num.num','type.realax.real'),fun('type.num.num','type.realax.real')),'const.pair.,_2'(s(fun('type.num.num','type.realax.real'),sK4),s(fun('type.num.num','type.realax.real'),sK5)))))) <=> ~$spl6),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl6])])).
fof(f69,plain,(
  p(s(bool,'const.transc.tdiv_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',sK1),s('type.realax.real',sK2))),s('type.pair.prod'(fun('type.num.num','type.realax.real'),fun('type.num.num','type.realax.real')),'const.pair.,_2'(s(fun('type.num.num','type.realax.real'),sK4),s(fun('type.num.num','type.realax.real'),sK5))))))),
  inference(cnf_transformation,[],[f58])).
fof(f113,plain,(
  p(s(bool,'const.transc.fine_2'(s(fun('type.realax.real','type.realax.real'),sK0),s('type.pair.prod'(fun('type.num.num','type.realax.real'),fun('type.num.num','type.realax.real')),'const.pair.,_2'(s(fun('type.num.num','type.realax.real'),sK4),s(fun('type.num.num','type.realax.real'),sK5)))))) | $spl4),
  inference(cnf_transformation,[],[f113_D])).
fof(f113_D,plain,(
  p(s(bool,'const.transc.fine_2'(s(fun('type.realax.real','type.realax.real'),sK0),s('type.pair.prod'(fun('type.num.num','type.realax.real'),fun('type.num.num','type.realax.real')),'const.pair.,_2'(s(fun('type.num.num','type.realax.real'),sK4),s(fun('type.num.num','type.realax.real'),sK5)))))) <=> ~$spl4),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl4])])).
fof(f70,plain,(
  p(s(bool,'const.transc.fine_2'(s(fun('type.realax.real','type.realax.real'),sK0),s('type.pair.prod'(fun('type.num.num','type.realax.real'),fun('type.num.num','type.realax.real')),'const.pair.,_2'(s(fun('type.num.num','type.realax.real'),sK4),s(fun('type.num.num','type.realax.real'),sK5))))))),
  inference(cnf_transformation,[],[f58])).
fof(f111,plain,(
  p(s(bool,'const.transc.tdiv_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',sK2),s('type.realax.real',sK3))),s('type.pair.prod'(fun('type.num.num','type.realax.real'),fun('type.num.num','type.realax.real')),'const.pair.,_2'(s(fun('type.num.num','type.realax.real'),sK6),s(fun('type.num.num','type.realax.real'),sK7)))))) | $spl2),
  inference(cnf_transformation,[],[f111_D])).
fof(f111_D,plain,(
  p(s(bool,'const.transc.tdiv_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',sK2),s('type.realax.real',sK3))),s('type.pair.prod'(fun('type.num.num','type.realax.real'),fun('type.num.num','type.realax.real')),'const.pair.,_2'(s(fun('type.num.num','type.realax.real'),sK6),s(fun('type.num.num','type.realax.real'),sK7)))))) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f71,plain,(
  p(s(bool,'const.transc.tdiv_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',sK2),s('type.realax.real',sK3))),s('type.pair.prod'(fun('type.num.num','type.realax.real'),fun('type.num.num','type.realax.real')),'const.pair.,_2'(s(fun('type.num.num','type.realax.real'),sK6),s(fun('type.num.num','type.realax.real'),sK7))))))),
  inference(cnf_transformation,[],[f58])).
fof(f109,plain,(
  p(s(bool,'const.transc.fine_2'(s(fun('type.realax.real','type.realax.real'),sK0),s('type.pair.prod'(fun('type.num.num','type.realax.real'),fun('type.num.num','type.realax.real')),'const.pair.,_2'(s(fun('type.num.num','type.realax.real'),sK6),s(fun('type.num.num','type.realax.real'),sK7)))))) | $spl0),
  inference(cnf_transformation,[],[f109_D])).
fof(f109_D,plain,(
  p(s(bool,'const.transc.fine_2'(s(fun('type.realax.real','type.realax.real'),sK0),s('type.pair.prod'(fun('type.num.num','type.realax.real'),fun('type.num.num','type.realax.real')),'const.pair.,_2'(s(fun('type.num.num','type.realax.real'),sK6),s(fun('type.num.num','type.realax.real'),sK7)))))) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f72,plain,(
  p(s(bool,'const.transc.fine_2'(s(fun('type.realax.real','type.realax.real'),sK0),s('type.pair.prod'(fun('type.num.num','type.realax.real'),fun('type.num.num','type.realax.real')),'const.pair.,_2'(s(fun('type.num.num','type.realax.real'),sK6),s(fun('type.num.num','type.realax.real'),sK7))))))),
  inference(cnf_transformation,[],[f58])).
% SZS output end Proof for thm.integral
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 39
% Passive clauses: 44
% Generated clauses: 313
% Final active clauses: 32
% Final passive clauses: 20
% Input formulas: 21
% Initial clauses: 39
% 
% Duplicate literals: 3
% Fw demodulations: 74
% Bw demodulations: 5
% Global subsumptions: 4
% 
% Simple tautologies: 27
% Equational tautologies: 1
% Forward subsumptions: 152
% Backward subsumptions: 1
% 
% Binary resolution: 26
% Unit resulting resolution: 24
% Forward superposition: 75
% Backward superposition: 77
% Equality resolution: 1
% 
% Split clauses: 10
% Split components: 22
% SAT solver clauses: 93
% SAT solver unit clauses: 17
% SAT solver binary clauses: 17
% 
% Sat splits: 10
% Sat splitting refutations: 9
% 
% Memory used [KB]: 2942
% Time elapsed: 0.165 s
% ------------------------------
% ------------------------------
% Success in time 18.282 s
