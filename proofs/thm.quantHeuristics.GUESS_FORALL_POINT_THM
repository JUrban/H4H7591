Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 299 next slice time: 5
dis+11_7_3 on thm.quantHeuristics
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.quantHeuristics
% SZS output start Proof for thm.quantHeuristics
fof(f3543,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f3531,f189,f250,f252,f171,f253])).
fof(f253,plain,(
  ~p(s(bool,'F_0')) | $spl3),
  inference(cnf_transformation,[],[f253_D])).
fof(f253_D,plain,(
  ~p(s(bool,'F_0')) <=> ~$spl3),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl3])])).
fof(f171,plain,(
  ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f41])).
fof(f41,plain,(
  ~p(s(bool,'F_0'))),
  inference(flattening,[],[f2])).
fof(f2,axiom,(
  ~p(s(bool,'F_0'))),
  file('thm.quantHeuristics.GUESS_FORALL_POINT_THM',aHL_FALSITY)).
fof(f252,plain,(
  p(s(bool,'F_0')) | $spl2),
  inference(cnf_transformation,[],[f252_D])).
fof(f252_D,plain,(
  p(s(bool,'F_0')) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f250,plain,(
  p(s(bool,'T_0')) | $spl0),
  inference(cnf_transformation,[],[f250_D])).
fof(f250_D,plain,(
  p(s(bool,'T_0')) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f189,plain,(
  p(s(bool,'T_0')) | p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f124])).
fof(f124,plain,(
  ! [X0] : (((p(s(bool,'F_0')) & ~p(s(bool,X0))) | p(s(bool,'T_0'))) & (~p(s(bool,'T_0')) | ~p(s(bool,'F_0')) | p(s(bool,X0))))),
  inference(flattening,[],[f123])).
fof(f123,plain,(
  ! [X0] : (((p(s(bool,'F_0')) & ~p(s(bool,X0))) | p(s(bool,'T_0'))) & (~p(s(bool,'T_0')) | (~p(s(bool,'F_0')) | p(s(bool,X0)))))),
  inference(nnf_transformation,[],[f94])).
fof(f94,plain,(
  ! [X0] : ((~p(s(bool,'F_0')) | p(s(bool,X0))) <=> p(s(bool,'T_0')))),
  inference(ennf_transformation,[],[f53])).
fof(f53,plain,(
  ! [X0] : ((p(s(bool,'F_0')) => p(s(bool,X0))) <=> p(s(bool,'T_0')))),
  inference(rectify,[],[f12])).
fof(f12,axiom,(
  ! [X14] : ((p(s(bool,'F_0')) => p(s(bool,X14))) <=> p(s(bool,'T_0')))),
  file('thm.quantHeuristics.GUESS_FORALL_POINT_THM','thm.bool.IMP_CLAUSES|split|2')).
fof(f3531,plain,(
  $false | $spl0),
  inference(subsumption_resolution,[],[f3530,f250])).
fof(f3530,plain,(
  ~p(s(bool,'T_0')) | $spl0),
  inference(forward_demodulation,[],[f3529,f361])).
fof(f361,plain,(
  ( ! [X4] : (s(bool,'T_0') = s(bool,happ(s(fun(sK1,bool),sK3),s(sK1,X4)))) ) | $spl0),
  inference(resolution,[],[f358,f179])).
fof(f179,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f117])).
fof(f117,plain,(
  ! [X0] : ((s(bool,'T_0') != s(bool,X0) | p(s(bool,X0))) & (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f46])).
fof(f46,plain,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) <=> p(s(bool,X0)))),
  inference(rectify,[],[f20])).
fof(f20,axiom,(
  ! [X14] : (s(bool,'T_0') = s(bool,X14) <=> p(s(bool,X14)))),
  file('thm.quantHeuristics.GUESS_FORALL_POINT_THM','thm.bool.EQ_CLAUSES|split|1')).
fof(f358,plain,(
  ( ! [X0] : (p(s(bool,happ(s(fun(sK1,bool),sK3),s(sK1,X0))))) ) | $spl0),
  inference(subsumption_resolution,[],[f356,f250])).
fof(f356,plain,(
  ( ! [X0] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun(sK1,bool),sK3),s(sK1,X0))))) )),
  inference(superposition,[],[f205,f289])).
fof(f289,plain,(
  s(bool,'T_0') = s(bool,'|dollar|forall_1'(s(fun(sK1,bool),sK3)))),
  inference(trivial_inequality_removal,[],[f286])).
fof(f286,plain,(
  s(bool,'F_0') != s(bool,'F_0') | s(bool,'T_0') = s(bool,'|dollar|forall_1'(s(fun(sK1,bool),sK3)))),
  inference(superposition,[],[f164,f172])).
fof(f172,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f3])).
fof(f3,axiom,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) | s(bool,'F_0') = s(bool,X0))),
  file('thm.quantHeuristics.GUESS_FORALL_POINT_THM',aHL_BOOL_CASES)).
fof(f164,plain,(
  s(bool,'F_0') != s(bool,'|dollar|forall_1'(s(fun(sK1,bool),sK3)))),
  inference(cnf_transformation,[],[f114])).
fof(f114,plain,(
  p(s(bool,'const.quantHeuristics.GUESS_FORALL_POINT_2'(s(fun(sK0,sK1),sK2),s(fun(sK1,bool),sK3)))) & s(bool,'F_0') != s(bool,'|dollar|forall_1'(s(fun(sK1,bool),sK3)))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2,sK3])],[f88])).
fof(f88,plain,(
  ? [X0,X1,X2,X3] : (p(s(bool,'const.quantHeuristics.GUESS_FORALL_POINT_2'(s(fun(X0,X1),X2),s(fun(X1,bool),X3)))) & s(bool,'F_0') != s(bool,'|dollar|forall_1'(s(fun(X1,bool),X3))))),
  inference(ennf_transformation,[],[f38])).
fof(f38,plain,(
  ~! [X0,X1,X2,X3] : (p(s(bool,'const.quantHeuristics.GUESS_FORALL_POINT_2'(s(fun(X0,X1),X2),s(fun(X1,bool),X3)))) => s(bool,'F_0') = s(bool,'|dollar|forall_1'(s(fun(X1,bool),X3))))),
  inference(flattening,[],[f37])).
fof(f37,plain,(
  ~! [X0,X1] : ! [X2,X3] : (p(s(bool,'const.quantHeuristics.GUESS_FORALL_POINT_2'(s(fun(X0,X1),X2),s(fun(X1,bool),X3)))) => s(bool,'F_0') = s(bool,'|dollar|forall_1'(s(fun(X1,bool),X3))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7] : ! [X8,X9] : (p(s(bool,'const.quantHeuristics.GUESS_FORALL_POINT_2'(s(fun(X6,X7),X8),s(fun(X7,bool),X9)))) => s(bool,'F_0') = s(bool,'|dollar|forall_1'(s(fun(X7,bool),X9))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7] : ! [X8,X9] : (p(s(bool,'const.quantHeuristics.GUESS_FORALL_POINT_2'(s(fun(X6,X7),X8),s(fun(X7,bool),X9)))) => s(bool,'F_0') = s(bool,'|dollar|forall_1'(s(fun(X7,bool),X9))))),
  file('thm.quantHeuristics.GUESS_FORALL_POINT_THM','thm.quantHeuristics.GUESS_FORALL_POINT_THM')).
fof(f205,plain,(
  ( ! [X0,X3,X1] : (~p(s(bool,'|dollar|forall_1'(s(fun(X0,bool),X1)))) | p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3))))) )),
  inference(cnf_transformation,[],[f135])).
fof(f135,plain,(
  ! [X0,X1] : ((~p(s(bool,'|dollar|forall_1'(s(fun(X0,bool),X1)))) | ! [X3] : p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3))))) & (~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,sK4(X1,X0))))) | p(s(bool,'|dollar|forall_1'(s(fun(X0,bool),X1))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK4])],[f134])).
fof(f134,plain,(
  ! [X0,X1] : ((~p(s(bool,'|dollar|forall_1'(s(fun(X0,bool),X1)))) | ! [X3] : p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3))))) & (? [X2] : ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2)))) | p(s(bool,'|dollar|forall_1'(s(fun(X0,bool),X1))))))),
  inference(rectify,[],[f133])).
fof(f133,plain,(
  ! [X0,X1] : ((~p(s(bool,'|dollar|forall_1'(s(fun(X0,bool),X1)))) | ! [X2] : p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2))))) & (? [X2] : ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2)))) | p(s(bool,'|dollar|forall_1'(s(fun(X0,bool),X1))))))),
  inference(nnf_transformation,[],[f63])).
fof(f63,plain,(
  ! [X0,X1] : (p(s(bool,'|dollar|forall_1'(s(fun(X0,bool),X1)))) <=> ! [X2] : p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2)))))),
  inference(flattening,[],[f62])).
fof(f62,plain,(
  ! [X0] : ! [X1] : (p(s(bool,'|dollar|forall_1'(s(fun(X0,bool),X1)))) <=> ! [X2] : p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2)))))),
  inference(rectify,[],[f9])).
fof(f9,axiom,(
  ! [X6] : ! [X12] : (p(s(bool,'|dollar|forall_1'(s(fun(X6,bool),X12)))) <=> ! [X13] : p(s(bool,happ(s(fun(X6,bool),X12),s(X6,X13)))))),
  file('thm.quantHeuristics.GUESS_FORALL_POINT_THM','thm.bool.FORALL_THM')).
fof(f3529,plain,(
  ( ! [X2] : (~p(s(bool,happ(s(fun(sK1,bool),sK3),s(sK1,happ(s(fun(sK0,sK1),sK2),s(sK0,X2))))))) ) | $spl0),
  inference(subsumption_resolution,[],[f3513,f250])).
fof(f3513,plain,(
  ( ! [X2] : (~p(s(bool,'T_0')) | ~p(s(bool,happ(s(fun(sK1,bool),sK3),s(sK1,happ(s(fun(sK0,sK1),sK2),s(sK0,X2))))))) )),
  inference(superposition,[],[f232,f268])).
fof(f268,plain,(
  s(bool,'T_0') = s(bool,'const.quantHeuristics.GUESS_FORALL_POINT_2'(s(fun(sK0,sK1),sK2),s(fun(sK1,bool),sK3)))),
  inference(resolution,[],[f163,f179])).
fof(f163,plain,(
  p(s(bool,'const.quantHeuristics.GUESS_FORALL_POINT_2'(s(fun(sK0,sK1),sK2),s(fun(sK1,bool),sK3))))),
  inference(cnf_transformation,[],[f114])).
fof(f232,plain,(
  ( ! [X2,X0,X5,X3,X1] : (~p(s(bool,'const.quantHeuristics.GUESS_FORALL_POINT_2'(s(fun(X1,X0),X2),s(fun(X0,bool),X3)))) | ~p(s(bool,happ(s(fun(X0,bool),X3),s(X0,happ(s(fun(X1,X0),X2),s(X1,X5))))))) )),
  inference(cnf_transformation,[],[f158])).
fof(f158,plain,(
  ! [X0,X1,X2,X3] : ((~p(s(bool,'const.quantHeuristics.GUESS_FORALL_POINT_2'(s(fun(X1,X0),X2),s(fun(X0,bool),X3)))) | ! [X5] : ~p(s(bool,happ(s(fun(X0,bool),X3),s(X0,happ(s(fun(X1,X0),X2),s(X1,X5))))))) & (p(s(bool,happ(s(fun(X0,bool),X3),s(X0,happ(s(fun(X1,X0),X2),s(X1,sK17(X3,X2,X1,X0))))))) | p(s(bool,'const.quantHeuristics.GUESS_FORALL_POINT_2'(s(fun(X1,X0),X2),s(fun(X0,bool),X3))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK17])],[f157])).
fof(f157,plain,(
  ! [X0,X1,X2,X3] : ((~p(s(bool,'const.quantHeuristics.GUESS_FORALL_POINT_2'(s(fun(X1,X0),X2),s(fun(X0,bool),X3)))) | ! [X5] : ~p(s(bool,happ(s(fun(X0,bool),X3),s(X0,happ(s(fun(X1,X0),X2),s(X1,X5))))))) & (? [X4] : p(s(bool,happ(s(fun(X0,bool),X3),s(X0,happ(s(fun(X1,X0),X2),s(X1,X4)))))) | p(s(bool,'const.quantHeuristics.GUESS_FORALL_POINT_2'(s(fun(X1,X0),X2),s(fun(X0,bool),X3))))))),
  inference(rectify,[],[f156])).
fof(f156,plain,(
  ! [X0,X1,X2,X3] : ((~p(s(bool,'const.quantHeuristics.GUESS_FORALL_POINT_2'(s(fun(X1,X0),X2),s(fun(X0,bool),X3)))) | ! [X4] : ~p(s(bool,happ(s(fun(X0,bool),X3),s(X0,happ(s(fun(X1,X0),X2),s(X1,X4))))))) & (? [X4] : p(s(bool,happ(s(fun(X0,bool),X3),s(X0,happ(s(fun(X1,X0),X2),s(X1,X4)))))) | p(s(bool,'const.quantHeuristics.GUESS_FORALL_POINT_2'(s(fun(X1,X0),X2),s(fun(X0,bool),X3))))))),
  inference(nnf_transformation,[],[f85])).
fof(f85,plain,(
  ! [X0,X1,X2,X3] : (p(s(bool,'const.quantHeuristics.GUESS_FORALL_POINT_2'(s(fun(X1,X0),X2),s(fun(X0,bool),X3)))) <=> ! [X4] : ~p(s(bool,happ(s(fun(X0,bool),X3),s(X0,happ(s(fun(X1,X0),X2),s(X1,X4)))))))),
  inference(flattening,[],[f84])).
fof(f84,plain,(
  ! [X0,X1] : ! [X2,X3] : (p(s(bool,'const.quantHeuristics.GUESS_FORALL_POINT_2'(s(fun(X1,X0),X2),s(fun(X0,bool),X3)))) <=> ! [X4] : ~p(s(bool,happ(s(fun(X0,bool),X3),s(X0,happ(s(fun(X1,X0),X2),s(X1,X4)))))))),
  inference(rectify,[],[f29])).
fof(f29,axiom,(
  ! [X7,X6] : ! [X21,X22] : (p(s(bool,'const.quantHeuristics.GUESS_FORALL_POINT_2'(s(fun(X6,X7),X21),s(fun(X7,bool),X22)))) <=> ! [X20] : ~p(s(bool,happ(s(fun(X7,bool),X22),s(X7,happ(s(fun(X6,X7),X21),s(X6,X20)))))))),
  file('thm.quantHeuristics.GUESS_FORALL_POINT_THM','thm.quantHeuristics.GUESS_REWRITES|split|3')).
% SZS output end Proof for thm.quantHeuristics
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 72
% Passive clauses: 641
% Generated clauses: 3312
% Final active clauses: 63
% Final passive clauses: 503
% Input formulas: 35
% Initial clauses: 85
% 
% Duplicate literals: 188
% Trivial inequalities: 110
% Fw subsumption resolutions: 511
% Fw demodulations: 258
% Bw demodulations: 6
% 
% Simple tautologies: 148
% Equational tautologies: 31
% Forward subsumptions: 1300
% 
% Binary resolution: 203
% Factoring: 1
% Forward superposition: 1015
% Backward superposition: 774
% Self superposition: 50
% Equality factoring: 56
% Equality resolution: 20
% 
% Split clauses: 102
% Split components: 208
% SAT solver clauses: 192
% SAT solver unit clauses: 8
% SAT solver binary clauses: 97
% SAT solver learnt clauses: 1
% 
% Sat splits: 102
% Sat splitting refutations: 2
% 
% TWLsolver clauses: 186
% TWLsolver calls for satisfiability: 68
% 
% Memory used [KB]: 2302
% Time elapsed: 0.082 s
% ------------------------------
% ------------------------------
% Success in time 0.084 s
