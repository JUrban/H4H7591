Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 300 next slice time: 5
dis+11_7_3 on thm.numeral
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.numeral
% SZS output start Proof for thm.numeral
fof(f2412,plain,(
  $false),
  inference(trivial_inequality_removal,[],[f2371])).
fof(f2371,plain,(
  s('type.num.num','const.numeral.texp_help_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK0))),s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.numeral.texp_help_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK0))),s('type.num.num','const.arithmetic.ZERO_0')))),
  inference(superposition,[],[f921,f1305])).
fof(f1305,plain,(
  ( ! [X2] : (s('type.num.num','const.numeral.texp_help_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X2))),s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X2)))))) )),
  inference(superposition,[],[f1269,f609])).
fof(f609,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1)))))) )),
  inference(forward_demodulation,[],[f608,f485])).
fof(f485,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))))) )),
  inference(backward_demodulation,[],[f402,f337])).
fof(f337,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X0)))))) )),
  inference(superposition,[],[f326,f61])).
fof(f61,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X0))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))))) )),
  inference(cnf_transformation,[],[f34])).
fof(f34,plain,(
  ! [X0,X1] : s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X0))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))))),
  inference(rectify,[],[f16])).
fof(f16,axiom,(
  ! [X6,X8] : s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X8),s('type.num.num',X6))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X8),s('type.num.num','const.num.SUC_1'(s('type.num.num',X6)))))),
  file('thm.numeral.TWO_EXP_THM|split|2','thm.arithmetic.ADD_CLAUSES|split|3')).
fof(f326,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))))) )),
  inference(forward_demodulation,[],[f325,f70])).
fof(f70,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(forward_demodulation,[],[f51,f47])).
fof(f47,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.num.|48|_0')),
  inference(cnf_transformation,[],[f8])).
fof(f8,axiom,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.num.|48|_0')),
  file('thm.numeral.TWO_EXP_THM|split|2','thm.arithmetic.ALT_ZERO')).
fof(f51,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) )),
  inference(cnf_transformation,[],[f25])).
fof(f25,plain,(
  ! [X0] : s('type.num.num',X0) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))),
  inference(rectify,[],[f14])).
fof(f14,axiom,(
  ! [X8] : s('type.num.num',X8) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X8),s('type.num.num','const.num.|48|_0')))),
  file('thm.numeral.TWO_EXP_THM|split|2','thm.arithmetic.ADD_|48|')).
fof(f325,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.ZERO_0')))))))) )),
  inference(forward_demodulation,[],[f270,f61])).
fof(f270,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) )),
  inference(forward_demodulation,[],[f55,f47])).
fof(f55,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))) )),
  inference(cnf_transformation,[],[f29])).
fof(f29,plain,(
  ! [X0] : s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))),
  inference(rectify,[],[f9])).
fof(f9,axiom,(
  ! [X6] : s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X6))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))),
  file('thm.numeral.TWO_EXP_THM|split|2','thm.arithmetic.BIT|49|')).
fof(f402,plain,(
  ( ! [X5] : (s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X5))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X5),s('type.num.num',X5)))) )),
  inference(superposition,[],[f52,f337])).
fof(f52,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))))) )),
  inference(cnf_transformation,[],[f26])).
fof(f26,plain,(
  ! [X0] : s('type.num.num',X0) = s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))))),
  inference(rectify,[],[f21])).
fof(f21,axiom,(
  ! [X8] : s('type.num.num',X8) = s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X8)))))),
  file('thm.numeral.TWO_EXP_THM|split|2','thm.prim_rec.PRE|split|1')).
fof(f608,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1)))))))))) )),
  inference(forward_demodulation,[],[f607,f402])).
fof(f607,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X1)))))))) )),
  inference(forward_demodulation,[],[f585,f61])).
fof(f585,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.num.SUC_1'(s('type.num.num',X1)))))))) )),
  inference(superposition,[],[f420,f61])).
fof(f420,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))))))) )),
  inference(forward_demodulation,[],[f419,f70])).
fof(f419,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.ZERO_0')))))))))) )),
  inference(forward_demodulation,[],[f418,f47])).
fof(f418,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))))))))) )),
  inference(forward_demodulation,[],[f417,f61])).
fof(f417,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))))) )),
  inference(forward_demodulation,[],[f56,f61])).
fof(f56,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))))) )),
  inference(cnf_transformation,[],[f30])).
fof(f30,plain,(
  ! [X0] : s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))))),
  inference(rectify,[],[f10])).
fof(f10,axiom,(
  ! [X6] : s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X6))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))))),
  file('thm.numeral.TWO_EXP_THM|split|2','thm.arithmetic.BIT2')).
fof(f1269,plain,(
  ( ! [X0] : (s('type.num.num','const.numeral.texp_help_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))))) )),
  inference(forward_demodulation,[],[f1268,f47])).
fof(f1268,plain,(
  ( ! [X0] : (s('type.num.num','const.numeral.texp_help_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))))) )),
  inference(forward_demodulation,[],[f1267,f50])).
fof(f50,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f24])).
fof(f24,plain,(
  ! [X0] : s('type.num.num',X0) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))),
  inference(rectify,[],[f7])).
fof(f7,axiom,(
  ! [X7] : s('type.num.num',X7) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X7)))),
  file('thm.numeral.TWO_EXP_THM|split|2','thm.arithmetic.NUMERAL_DEF')).
fof(f1267,plain,(
  ( ! [X0] : (s('type.num.num','const.numeral.texp_help_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))))) )),
  inference(forward_demodulation,[],[f1266,f371])).
fof(f371,plain,(
  ( ! [X1] : (s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(forward_demodulation,[],[f358,f70])).
fof(f358,plain,(
  ( ! [X1] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(superposition,[],[f61,f338])).
fof(f338,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))),
  inference(superposition,[],[f326,f76])).
fof(f76,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X0)))) )),
  inference(forward_demodulation,[],[f53,f47])).
fof(f53,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f27])).
fof(f27,plain,(
  ! [X0] : s('type.num.num',X0) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))),
  inference(rectify,[],[f13])).
fof(f13,axiom,(
  ! [X8] : s('type.num.num',X8) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X8)))),
  file('thm.numeral.TWO_EXP_THM|split|2','thm.arithmetic.ADD_CLAUSES|split|0')).
fof(f1266,plain,(
  ( ! [X0] : (s('type.num.num','const.numeral.texp_help_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) )),
  inference(forward_demodulation,[],[f57,f50])).
fof(f57,plain,(
  ( ! [X0] : (s('type.num.num','const.numeral.texp_help_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) )),
  inference(cnf_transformation,[],[f31])).
fof(f31,plain,(
  ! [X0] : s('type.num.num','const.numeral.texp_help_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))),
  inference(rectify,[],[f19])).
fof(f19,axiom,(
  ! [X6] : s('type.num.num','const.numeral.texp_help_2'(s('type.num.num',X6),s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))),
  file('thm.numeral.TWO_EXP_THM|split|2','thm.numeral.texp_help|48|')).
fof(f921,plain,(
  s('type.num.num','const.numeral.texp_help_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK0))),s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK0)))))),
  inference(forward_demodulation,[],[f920,f50])).
fof(f920,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.texp_help_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK0))),s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK0)))))),
  inference(forward_demodulation,[],[f919,f50])).
fof(f919,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.texp_help_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK0))),s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK0)))))),
  inference(forward_demodulation,[],[f44,f50])).
fof(f44,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.texp_help_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK0))),s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK0)))))))),
  inference(cnf_transformation,[],[f41])).
fof(f41,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.texp_help_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK0))),s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK0)))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0])],[f39])).
fof(f39,plain,(
  ? [X0] : s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.texp_help_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))),
  inference(ennf_transformation,[],[f22])).
fof(f22,plain,(
  ~! [X0] : s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.texp_help_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.texp_help_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X6))),s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X6)))))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.texp_help_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X6))),s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X6)))))))),
  file('thm.numeral.TWO_EXP_THM|split|2','thm.numeral.TWO_EXP_THM|split|2')).
% SZS output end Proof for thm.numeral
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 56
% Passive clauses: 189
% Generated clauses: 2312
% Final active clauses: 53
% Final passive clauses: 92
% Input formulas: 20
% Initial clauses: 21
% 
% Duplicate literals: 37
% Trivial inequalities: 4
% Fw demodulations: 156
% Bw demodulations: 1
% 
% Simple tautologies: 16
% Equational tautologies: 15
% Forward subsumptions: 1850
% Fw demodulations to eq. taut.: 40
% 
% Binary resolution: 4
% Forward superposition: 1034
% Backward superposition: 1006
% Self superposition: 65
% Equality factoring: 26
% 
% Split clauses: 1
% Split components: 2
% SAT solver clauses: 2
% SAT solver unit clauses: 1
% SAT solver binary clauses: 1
% 
% Sat splits: 1
% Sat splitting refutations: 1
% 
% TWLsolver clauses: 2
% TWLsolver calls for satisfiability: 2
% 
% Memory used [KB]: 3070
% Time elapsed: 0.054 s
% ------------------------------
% ------------------------------
% Success in time 0.056 s
