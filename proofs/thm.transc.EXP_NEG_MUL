Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 300 next slice time: 5
dis+11_7_3 on thm.transc
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.transc
% SZS output start Proof for thm.transc
fof(f257,plain,(
  $false),
  inference(trivial_inequality_removal,[],[f253])).
fof(f253,plain,(
  s('type.realax.real','const.transc.exp_1'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.realax.real','const.transc.exp_1'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0')))))),
  inference(superposition,[],[f240,f244])).
fof(f244,plain,(
  ( ! [X0] : (s('type.realax.real','const.transc.exp_1'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real','const.transc.exp_1'(s('type.realax.real',X0))),s('type.realax.real','const.transc.exp_1'(s('type.realax.real','const.realax.real_neg_1'(s('type.realax.real',X0)))))))) )),
  inference(superposition,[],[f69,f52])).
fof(f52,plain,(
  ( ! [X0] : (s('type.realax.real',X0) = s('type.realax.real','const.realax.real_add_2'(s('type.realax.real',X0),s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0')))))) )),
  inference(cnf_transformation,[],[f18])).
fof(f18,plain,(
  ! [X0] : s('type.realax.real',X0) = s('type.realax.real','const.realax.real_add_2'(s('type.realax.real',X0),s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0')))))),
  inference(rectify,[],[f13])).
fof(f13,axiom,(
  ! [X6] : s('type.realax.real',X6) = s('type.realax.real','const.realax.real_add_2'(s('type.realax.real',X6),s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0')))))),
  file('thm.transc.EXP_NEG_MUL','thm.real.REAL_ADD_RID')).
fof(f69,plain,(
  ( ! [X0,X1] : (s('type.realax.real','const.transc.exp_1'(s('type.realax.real',X1))) = s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real','const.transc.exp_1'(s('type.realax.real','const.realax.real_add_2'(s('type.realax.real',X0),s('type.realax.real',X1))))),s('type.realax.real','const.transc.exp_1'(s('type.realax.real','const.realax.real_neg_1'(s('type.realax.real',X0)))))))) )),
  inference(cnf_transformation,[],[f25])).
fof(f25,plain,(
  ! [X0,X1] : s('type.realax.real','const.transc.exp_1'(s('type.realax.real',X1))) = s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real','const.transc.exp_1'(s('type.realax.real','const.realax.real_add_2'(s('type.realax.real',X0),s('type.realax.real',X1))))),s('type.realax.real','const.transc.exp_1'(s('type.realax.real','const.realax.real_neg_1'(s('type.realax.real',X0)))))))),
  inference(rectify,[],[f15])).
fof(f15,axiom,(
  ! [X6,X8] : s('type.realax.real','const.transc.exp_1'(s('type.realax.real',X8))) = s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real','const.transc.exp_1'(s('type.realax.real','const.realax.real_add_2'(s('type.realax.real',X6),s('type.realax.real',X8))))),s('type.realax.real','const.transc.exp_1'(s('type.realax.real','const.realax.real_neg_1'(s('type.realax.real',X6)))))))),
  file('thm.transc.EXP_NEG_MUL','thm.transc.EXP_ADD_MUL')).
fof(f240,plain,(
  s('type.realax.real','const.transc.exp_1'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real','const.transc.exp_1'(s('type.realax.real',sK0))),s('type.realax.real','const.transc.exp_1'(s('type.realax.real','const.realax.real_neg_1'(s('type.realax.real',sK0)))))))),
  inference(forward_demodulation,[],[f47,f50])).
fof(f50,plain,(
  s('type.realax.real','const.transc.exp_1'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),
  inference(cnf_transformation,[],[f14])).
fof(f14,axiom,(
  s('type.realax.real','const.transc.exp_1'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),
  file('thm.transc.EXP_NEG_MUL','thm.transc.EXP_|48|')).
fof(f47,plain,(
  s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) != s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real','const.transc.exp_1'(s('type.realax.real',sK0))),s('type.realax.real','const.transc.exp_1'(s('type.realax.real','const.realax.real_neg_1'(s('type.realax.real',sK0)))))))),
  inference(cnf_transformation,[],[f35])).
fof(f35,plain,(
  s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) != s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real','const.transc.exp_1'(s('type.realax.real',sK0))),s('type.realax.real','const.transc.exp_1'(s('type.realax.real','const.realax.real_neg_1'(s('type.realax.real',sK0)))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0])],[f28])).
fof(f28,plain,(
  ? [X0] : s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) != s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real','const.transc.exp_1'(s('type.realax.real',X0))),s('type.realax.real','const.transc.exp_1'(s('type.realax.real','const.realax.real_neg_1'(s('type.realax.real',X0)))))))),
  inference(ennf_transformation,[],[f16])).
fof(f16,plain,(
  ~! [X0] : s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real','const.transc.exp_1'(s('type.realax.real',X0))),s('type.realax.real','const.transc.exp_1'(s('type.realax.real','const.realax.real_neg_1'(s('type.realax.real',X0)))))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real','const.transc.exp_1'(s('type.realax.real',X6))),s('type.realax.real','const.transc.exp_1'(s('type.realax.real','const.realax.real_neg_1'(s('type.realax.real',X6)))))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real','const.transc.exp_1'(s('type.realax.real',X6))),s('type.realax.real','const.transc.exp_1'(s('type.realax.real','const.realax.real_neg_1'(s('type.realax.real',X6)))))))),
  file('thm.transc.EXP_NEG_MUL','thm.transc.EXP_NEG_MUL')).
% SZS output end Proof for thm.transc
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 15
% Passive clauses: 30
% Generated clauses: 194
% Final active clauses: 12
% Final passive clauses: 5
% Input formulas: 14
% Initial clauses: 24
% 
% Duplicate literals: 37
% Trivial inequalities: 3
% Fw subsumption resolutions: 1
% Fw demodulations: 1
% 
% Simple tautologies: 23
% Equational tautologies: 14
% Forward subsumptions: 72
% 
% Binary resolution: 4
% Forward superposition: 30
% Backward superposition: 36
% Self superposition: 28
% Equality factoring: 26
% 
% Split clauses: 9
% Split components: 19
% SAT solver clauses: 15
% SAT solver unit clauses: 3
% SAT solver binary clauses: 10
% 
% Sat splits: 9
% Sat splitting refutations: 2
% 
% TWLsolver clauses: 15
% TWLsolver calls for satisfiability: 8
% 
% Memory used [KB]: 767
% Time elapsed: 0.015 s
% ------------------------------
% ------------------------------
% Success in time 0.026 s
