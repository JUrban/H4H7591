Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 300 next slice time: 5
dis+11_7_3 on thm.gcd
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.gcd
% SZS output start Proof for thm.gcd
fof(f1456,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f1446,f77,f125])).
fof(f125,plain,(
  ~p(s(bool,'F_0')) | $spl5),
  inference(cnf_transformation,[],[f125_D])).
fof(f125_D,plain,(
  ~p(s(bool,'F_0')) <=> ~$spl5),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl5])])).
fof(f77,plain,(
  ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f25])).
fof(f25,plain,(
  ~p(s(bool,'F_0'))),
  inference(flattening,[],[f2])).
fof(f2,axiom,(
  ~p(s(bool,'F_0'))),
  file('thm.gcd.LCM_|48||split|1',aHL_FALSITY)).
fof(f1446,plain,(
  $false | $spl5),
  inference(trivial_inequality_removal,[],[f1419])).
fof(f1419,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.num.|48|_0') | $spl5),
  inference(superposition,[],[f74,f1395])).
fof(f1395,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.gcd.lcm_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) ) | $spl5),
  inference(equality_resolution,[],[f933])).
fof(f933,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.num.|48|_0') != s('type.num.num',X0) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.gcd.lcm_2'(s('type.num.num',X1),s('type.num.num',X0)))) ) | $spl5),
  inference(forward_demodulation,[],[f878,f99])).
fof(f99,plain,(
  ( ! [X2,X0,X1] : (s(X0,X1) = s(X0,'const.bool.COND_3'(s(bool,'T_0'),s(X0,X1),s(X0,X2)))) )),
  inference(cnf_transformation,[],[f37])).
fof(f37,plain,(
  ! [X0,X1,X2] : s(X0,X1) = s(X0,'const.bool.COND_3'(s(bool,'T_0'),s(X0,X1),s(X0,X2)))),
  inference(flattening,[],[f36])).
fof(f36,plain,(
  ! [X0] : ! [X1,X2] : s(X0,X1) = s(X0,'const.bool.COND_3'(s(bool,'T_0'),s(X0,X1),s(X0,X2)))),
  inference(rectify,[],[f19])).
fof(f19,axiom,(
  ! [X10] : ! [X12,X13] : s(X10,X12) = s(X10,'const.bool.COND_3'(s(bool,'T_0'),s(X10,X12),s(X10,X13)))),
  file('thm.gcd.LCM_|48||split|1','thm.bool.COND_CLAUSES|split|0')).
fof(f878,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.gcd.lcm_2'(s('type.num.num',X1),s('type.num.num',X0))) = s('type.num.num','const.bool.COND_3'(s(bool,'T_0'),s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X0))),s('type.num.num','const.gcd.gcd_2'(s('type.num.num',X1),s('type.num.num',X0))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X0)) ) | $spl5),
  inference(superposition,[],[f112,f144])).
fof(f144,plain,(
  ( ! [X0,X1] : (s(bool,'T_0') = s(bool,sK2(X0,X1)) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X0)) ) | $spl5),
  inference(subsumption_resolution,[],[f140,f125])).
fof(f140,plain,(
  ( ! [X0,X1] : (p(s(bool,'F_0')) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X0) | s(bool,'T_0') = s(bool,sK2(X0,X1))) )),
  inference(superposition,[],[f111,f81])).
fof(f81,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f3])).
fof(f3,axiom,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) | s(bool,'F_0') = s(bool,X0))),
  file('thm.gcd.LCM_|48||split|1',aHL_BOOL_CASES)).
fof(f111,plain,(
  ( ! [X0,X1] : (p(s(bool,sK2(X1,X0))) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X1)) )),
  inference(cnf_transformation,[],[f71])).
fof(f71,plain,(
  ! [X0,X1] : ((~p(s(bool,sK2(X1,X0))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X0) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X1)) & ((s('type.num.num','const.num.|48|_0') != s('type.num.num',X0) & s('type.num.num','const.num.|48|_0') != s('type.num.num',X1)) | p(s(bool,sK2(X1,X0)))) & s('type.num.num','const.gcd.lcm_2'(s('type.num.num',X0),s('type.num.num',X1))) = s('type.num.num','const.bool.COND_3'(s(bool,sK2(X1,X0)),s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num','const.gcd.gcd_2'(s('type.num.num',X0),s('type.num.num',X1))))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK2])],[f70])).
fof(f70,plain,(
  ! [X0,X1] : ? [X2] : ((~p(s(bool,X2)) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X0) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X1)) & ((s('type.num.num','const.num.|48|_0') != s('type.num.num',X0) & s('type.num.num','const.num.|48|_0') != s('type.num.num',X1)) | p(s(bool,X2))) & s('type.num.num','const.gcd.lcm_2'(s('type.num.num',X0),s('type.num.num',X1))) = s('type.num.num','const.bool.COND_3'(s(bool,X2),s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num','const.gcd.gcd_2'(s('type.num.num',X0),s('type.num.num',X1))))))))),
  inference(flattening,[],[f69])).
fof(f69,plain,(
  ! [X0,X1] : ? [X2] : (((~p(s(bool,X2)) | (s('type.num.num','const.num.|48|_0') = s('type.num.num',X0) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X1))) & ((s('type.num.num','const.num.|48|_0') != s('type.num.num',X0) & s('type.num.num','const.num.|48|_0') != s('type.num.num',X1)) | p(s(bool,X2)))) & s('type.num.num','const.gcd.lcm_2'(s('type.num.num',X0),s('type.num.num',X1))) = s('type.num.num','const.bool.COND_3'(s(bool,X2),s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num','const.gcd.gcd_2'(s('type.num.num',X0),s('type.num.num',X1))))))))),
  inference(nnf_transformation,[],[f47])).
fof(f47,plain,(
  ! [X0,X1] : ? [X2] : ((p(s(bool,X2)) <=> (s('type.num.num','const.num.|48|_0') = s('type.num.num',X0) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X1))) & s('type.num.num','const.gcd.lcm_2'(s('type.num.num',X0),s('type.num.num',X1))) = s('type.num.num','const.bool.COND_3'(s(bool,X2),s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num','const.gcd.gcd_2'(s('type.num.num',X0),s('type.num.num',X1))))))))),
  inference(rectify,[],[f23])).
fof(f23,axiom,(
  ! [X7,X8] : ? [X20] : ((p(s(bool,X20)) <=> (s('type.num.num','const.num.|48|_0') = s('type.num.num',X7) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X8))) & s('type.num.num','const.gcd.lcm_2'(s('type.num.num',X7),s('type.num.num',X8))) = s('type.num.num','const.bool.COND_3'(s(bool,X20),s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X7),s('type.num.num',X8))),s('type.num.num','const.gcd.gcd_2'(s('type.num.num',X7),s('type.num.num',X8))))))))),
  file('thm.gcd.LCM_|48||split|1','thm.gcd.lcm_def')).
fof(f112,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.gcd.lcm_2'(s('type.num.num',X0),s('type.num.num',X1))) = s('type.num.num','const.bool.COND_3'(s(bool,sK2(X1,X0)),s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num','const.gcd.gcd_2'(s('type.num.num',X0),s('type.num.num',X1)))))))) )),
  inference(cnf_transformation,[],[f71])).
fof(f74,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.gcd.lcm_2'(s('type.num.num',sK0),s('type.num.num','const.num.|48|_0')))),
  inference(cnf_transformation,[],[f55])).
fof(f55,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.gcd.lcm_2'(s('type.num.num',sK0),s('type.num.num','const.num.|48|_0')))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0])],[f49])).
fof(f49,plain,(
  ? [X0] : s('type.num.num','const.num.|48|_0') != s('type.num.num','const.gcd.lcm_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))),
  inference(ennf_transformation,[],[f24])).
fof(f24,plain,(
  ~! [X0] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.gcd.lcm_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.gcd.lcm_2'(s('type.num.num',X6),s('type.num.num','const.num.|48|_0')))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.gcd.lcm_2'(s('type.num.num',X6),s('type.num.num','const.num.|48|_0')))),
  file('thm.gcd.LCM_|48||split|1','thm.gcd.LCM_|48||split|1')).
% SZS output end Proof for thm.gcd
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 40
% Passive clauses: 247
% Generated clauses: 1324
% Final active clauses: 36
% Final passive clauses: 145
% Input formulas: 22
% Initial clauses: 45
% 
% Duplicate literals: 116
% Trivial inequalities: 24
% Fw subsumption resolutions: 41
% Fw demodulations: 87
% Bw demodulations: 2
% 
% Simple tautologies: 42
% Equational tautologies: 17
% Forward subsumptions: 717
% 
% Binary resolution: 12
% Forward superposition: 439
% Backward superposition: 453
% Self superposition: 59
% Equality factoring: 34
% Equality resolution: 4
% 
% Split clauses: 34
% Split components: 68
% SAT solver clauses: 57
% SAT solver unit clauses: 5
% SAT solver binary clauses: 8
% SAT solver learnt clauses: 1
% 
% Sat splits: 34
% Sat splitting refutations: 1
% 
% TWLsolver clauses: 56
% TWLsolver calls for satisfiability: 8
% 
% Memory used [KB]: 1535
% Time elapsed: 0.037 s
% ------------------------------
% ------------------------------
% Success in time 0.039 s
