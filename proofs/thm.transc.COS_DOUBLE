Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 300 next slice time: 5
dis+11_7_3 on thm.transc
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.transc
% SZS output start Proof for thm.transc
fof(f1995,plain,(
  $false),
  inference(trivial_inequality_removal,[],[f1994])).
fof(f1994,plain,(
  s('type.realax.real','const.transc.cos_1'(s('type.realax.real','const.realax.real_add_2'(s('type.realax.real',sK0),s('type.realax.real',sK0))))) != s('type.realax.real','const.transc.cos_1'(s('type.realax.real','const.realax.real_add_2'(s('type.realax.real',sK0),s('type.realax.real',sK0)))))),
  inference(forward_demodulation,[],[f1993,f35])).
fof(f35,plain,(
  ( ! [X0] : (s('type.realax.real','const.realax.real_add_2'(s('type.realax.real',X0),s('type.realax.real',X0))) = s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.realax.real',X0)))) )),
  inference(cnf_transformation,[],[f16])).
fof(f16,plain,(
  ! [X0] : s('type.realax.real','const.realax.real_add_2'(s('type.realax.real',X0),s('type.realax.real',X0))) = s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.realax.real',X0)))),
  inference(rectify,[],[f10])).
fof(f10,axiom,(
  ! [X6] : s('type.realax.real','const.realax.real_add_2'(s('type.realax.real',X6),s('type.realax.real',X6))) = s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.realax.real',X6)))),
  file('thm.transc.COS_DOUBLE','thm.real.REAL_DOUBLE')).
fof(f1993,plain,(
  s('type.realax.real','const.transc.cos_1'(s('type.realax.real','const.realax.real_add_2'(s('type.realax.real',sK0),s('type.realax.real',sK0))))) != s('type.realax.real','const.transc.cos_1'(s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.realax.real',sK0)))))),
  inference(forward_demodulation,[],[f1992,f41])).
fof(f41,plain,(
  ( ! [X0,X1] : (s('type.realax.real','const.transc.cos_1'(s('type.realax.real','const.realax.real_add_2'(s('type.realax.real',X0),s('type.realax.real',X1))))) = s('type.realax.real','const.real.real_sub_2'(s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real','const.transc.cos_1'(s('type.realax.real',X0))),s('type.realax.real','const.transc.cos_1'(s('type.realax.real',X1))))),s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real','const.transc.sin_1'(s('type.realax.real',X0))),s('type.realax.real','const.transc.sin_1'(s('type.realax.real',X1)))))))) )),
  inference(cnf_transformation,[],[f21])).
fof(f21,plain,(
  ! [X0,X1] : s('type.realax.real','const.transc.cos_1'(s('type.realax.real','const.realax.real_add_2'(s('type.realax.real',X0),s('type.realax.real',X1))))) = s('type.realax.real','const.real.real_sub_2'(s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real','const.transc.cos_1'(s('type.realax.real',X0))),s('type.realax.real','const.transc.cos_1'(s('type.realax.real',X1))))),s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real','const.transc.sin_1'(s('type.realax.real',X0))),s('type.realax.real','const.transc.sin_1'(s('type.realax.real',X1)))))))),
  inference(rectify,[],[f12])).
fof(f12,axiom,(
  ! [X6,X8] : s('type.realax.real','const.transc.cos_1'(s('type.realax.real','const.realax.real_add_2'(s('type.realax.real',X6),s('type.realax.real',X8))))) = s('type.realax.real','const.real.real_sub_2'(s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real','const.transc.cos_1'(s('type.realax.real',X6))),s('type.realax.real','const.transc.cos_1'(s('type.realax.real',X8))))),s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real','const.transc.sin_1'(s('type.realax.real',X6))),s('type.realax.real','const.transc.sin_1'(s('type.realax.real',X8)))))))),
  file('thm.transc.COS_DOUBLE','thm.transc.COS_ADD')).
fof(f1992,plain,(
  s('type.realax.real','const.transc.cos_1'(s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.realax.real',sK0))))) != s('type.realax.real','const.real.real_sub_2'(s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real','const.transc.cos_1'(s('type.realax.real',sK0))),s('type.realax.real','const.transc.cos_1'(s('type.realax.real',sK0))))),s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real','const.transc.sin_1'(s('type.realax.real',sK0))),s('type.realax.real','const.transc.sin_1'(s('type.realax.real',sK0)))))))),
  inference(forward_demodulation,[],[f1991,f34])).
fof(f34,plain,(
  ( ! [X0] : (s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real',X0),s('type.realax.real',X0))) = s('type.realax.real','const.real.pow_2'(s('type.realax.real',X0),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) )),
  inference(cnf_transformation,[],[f15])).
fof(f15,plain,(
  ! [X0] : s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real',X0),s('type.realax.real',X0))) = s('type.realax.real','const.real.pow_2'(s('type.realax.real',X0),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),
  inference(rectify,[],[f11])).
fof(f11,axiom,(
  ! [X6] : s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real',X6),s('type.realax.real',X6))) = s('type.realax.real','const.real.pow_2'(s('type.realax.real',X6),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),
  file('thm.transc.COS_DOUBLE','thm.real.POW_2')).
fof(f1991,plain,(
  s('type.realax.real','const.transc.cos_1'(s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.realax.real',sK0))))) != s('type.realax.real','const.real.real_sub_2'(s('type.realax.real','const.real.pow_2'(s('type.realax.real','const.transc.cos_1'(s('type.realax.real',sK0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real','const.transc.sin_1'(s('type.realax.real',sK0))),s('type.realax.real','const.transc.sin_1'(s('type.realax.real',sK0)))))))),
  inference(forward_demodulation,[],[f30,f34])).
fof(f30,plain,(
  s('type.realax.real','const.transc.cos_1'(s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.realax.real',sK0))))) != s('type.realax.real','const.real.real_sub_2'(s('type.realax.real','const.real.pow_2'(s('type.realax.real','const.transc.cos_1'(s('type.realax.real',sK0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.realax.real','const.real.pow_2'(s('type.realax.real','const.transc.sin_1'(s('type.realax.real',sK0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))),
  inference(cnf_transformation,[],[f26])).
fof(f26,plain,(
  s('type.realax.real','const.transc.cos_1'(s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.realax.real',sK0))))) != s('type.realax.real','const.real.real_sub_2'(s('type.realax.real','const.real.pow_2'(s('type.realax.real','const.transc.cos_1'(s('type.realax.real',sK0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.realax.real','const.real.pow_2'(s('type.realax.real','const.transc.sin_1'(s('type.realax.real',sK0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0])],[f24])).
fof(f24,plain,(
  ? [X0] : s('type.realax.real','const.transc.cos_1'(s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.realax.real',X0))))) != s('type.realax.real','const.real.real_sub_2'(s('type.realax.real','const.real.pow_2'(s('type.realax.real','const.transc.cos_1'(s('type.realax.real',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.realax.real','const.real.pow_2'(s('type.realax.real','const.transc.sin_1'(s('type.realax.real',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))),
  inference(ennf_transformation,[],[f13])).
fof(f13,plain,(
  ~! [X0] : s('type.realax.real','const.transc.cos_1'(s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.realax.real',X0))))) = s('type.realax.real','const.real.real_sub_2'(s('type.realax.real','const.real.pow_2'(s('type.realax.real','const.transc.cos_1'(s('type.realax.real',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.realax.real','const.real.pow_2'(s('type.realax.real','const.transc.sin_1'(s('type.realax.real',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : s('type.realax.real','const.transc.cos_1'(s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.realax.real',X6))))) = s('type.realax.real','const.real.real_sub_2'(s('type.realax.real','const.real.pow_2'(s('type.realax.real','const.transc.cos_1'(s('type.realax.real',X6))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.realax.real','const.real.pow_2'(s('type.realax.real','const.transc.sin_1'(s('type.realax.real',X6))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : s('type.realax.real','const.transc.cos_1'(s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.realax.real',X6))))) = s('type.realax.real','const.real.real_sub_2'(s('type.realax.real','const.real.pow_2'(s('type.realax.real','const.transc.cos_1'(s('type.realax.real',X6))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.realax.real','const.real.pow_2'(s('type.realax.real','const.transc.sin_1'(s('type.realax.real',X6))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))),
  file('thm.transc.COS_DOUBLE','thm.transc.COS_DOUBLE')).
% SZS output end Proof for thm.transc
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 21
% Passive clauses: 246
% Generated clauses: 1864
% Final active clauses: 19
% Final passive clauses: 217
% Input formulas: 11
% Initial clauses: 13
% 
% Duplicate literals: 285
% Trivial inequalities: 32
% Fw subsumption resolutions: 100
% Fw demodulations: 4
% 
% Simple tautologies: 81
% Equational tautologies: 68
% Forward subsumptions: 853
% 
% Binary resolution: 12
% Forward superposition: 514
% Backward superposition: 519
% Self superposition: 192
% Equality factoring: 178
% Equality resolution: 1
% 
% Split clauses: 114
% Split components: 228
% SAT solver clauses: 199
% SAT solver unit clauses: 55
% SAT solver binary clauses: 76
% 
% Sat splits: 114
% Sat splitting refutations: 1
% 
% TWLsolver clauses: 199
% TWLsolver calls for satisfiability: 10
% 
% Memory used [KB]: 1279
% Time elapsed: 0.068 s
% ------------------------------
% ------------------------------
% Success in time 0.07 s
