Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 299 next slice time: 5
dis+11_7_3 on thm.integer
% (53034)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 111
% Passive clauses: 2598
% Generated clauses: 16688
% Final active clauses: 108
% Final passive clauses: 2377
% Input formulas: 39
% Initial clauses: 48
% 
% Duplicate literals: 778
% Trivial inequalities: 197
% Fw subsumption resolutions: 1996
% Fw demodulations: 2809
% Bw demodulations: 1
% 
% Simple tautologies: 310
% Equational tautologies: 26
% Forward subsumptions: 7357
% 
% Binary resolution: 27
% Forward superposition: 6791
% Backward superposition: 3606
% Self superposition: 213
% Equality factoring: 86
% Equality resolution: 42
% 
% Split clauses: 445
% Split components: 890
% SAT solver clauses: 723
% SAT solver unit clauses: 56
% SAT solver binary clauses: 205
% 
% Sat splits: 445
% Sat splitting refutations: 1
% 
% TWLsolver clauses: 723
% TWLsolver calls for satisfiability: 104
% 
% Memory used [KB]: 12920
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 293 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.integer
% (53052)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 85
% Passive clauses: 730
% Generated clauses: 13035
% Final active clauses: 71
% Final passive clauses: 557
% Input formulas: 39
% Initial clauses: 48
% 
% Duplicate literals: 743
% Trivial inequalities: 196
% Fw subsumption resolutions: 1036
% Fw demodulations: 1519
% Bw demodulations: 97
% Condensations: 1616
% 
% Simple tautologies: 164
% Equational tautologies: 25
% Forward subsumptions: 5686
% Bw demodulations to eq. taut.: 2
% 
% Binary resolution: 16
% Forward superposition: 3882
% Backward superposition: 2845
% Self superposition: 200
% Equality factoring: 86
% Equality resolution: 19
% 
% Split clauses: 16
% Split components: 32
% SAT solver clauses: 1317
% SAT solver unit clauses: 62
% SAT solver binary clauses: 43
% 
% Sat splits: 16
% Sat splitting refutations: 5
% 
% TWLsolver clauses: 1317
% TWLsolver calls for satisfiability: 287
% 
% Memory used [KB]: 11897
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 286 next slice time: 103
lrs+11_2_br=off:cond=on:fde=none:gs=on:gsaa=full_model:lwlo=on:nwc=2:sas=minisat:stl=30:ssfp=100000:ssfq=1.4:smm=sco:ssnc=none:sp=occurrence:urr=on_98 on thm.integer
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.integer
% SZS output start Proof for thm.integer
fof(f36726,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f132,f180,f178,f196,f199,f197,f743,f2172,f2117,f2175,f2188,f13233,f13239,f13256,f13258,f13268,f13089,f13235,f13320,f16792,f16798,f16799,f16832,f16838,f16635,f16794,f16891,f19838,f19842,f19840,f20799,f20800,f20801,f20802,f35223,f35229,f35230,f35269,f35282,f35284,f35074,f35225,f35346,f36510,f36516,f36517,f36557,f36570,f36572,f2173,f36357,f36512,f36634,f36717,f36719,f36720,f36721])).
fof(f36721,plain,(
  $false | $spl29),
  inference(subsumption_resolution,[],[f36715,f19651])).
fof(f19651,plain,(
  ( ! [X0,X1] : (s(bool,'T_0') = s(bool,happ(s(fun(X0,bool),happ(s(fun(X0,fun(X0,bool)),'|dollar|equals_0'),s(X0,X1))),s(X0,X1)))) )),
  inference(unit_resulting_resolution,[],[f19251,f190])).
fof(f190,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f133,f137])).
fof(f137,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f3])).
fof(f3,axiom,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) | s(bool,'F_0') = s(bool,X0))),
  file('thm.integer.INT_ADD_SYM',aHL_BOOL_CASES)).
fof(f133,plain,(
  ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f43])).
fof(f43,plain,(
  ~p(s(bool,'F_0'))),
  inference(flattening,[],[f2])).
fof(f2,axiom,(
  ~p(s(bool,'F_0'))),
  file('thm.integer.INT_ADD_SYM',aHL_FALSITY)).
fof(f19251,plain,(
  ( ! [X0,X1] : (p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X0,fun(X0,bool)),'|dollar|equals_0'),s(X0,X1))),s(X0,X1))))) )),
  inference(forward_demodulation,[],[f19250,f167])).
fof(f167,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s(X0,happ(s(fun(X1,X0),'_dst_x1x0_2'(s(fun(X1,fun(X2,X0)),X3),s(X2,X4))),s(X1,X5))) = s(X0,happ(s(fun(X2,X0),happ(s(fun(X1,fun(X2,X0)),X3),s(X1,X5))),s(X2,X4)))) )),
  inference(cnf_transformation,[],[f82])).
fof(f82,plain,(
  ! [X0,X1,X2,X3,X4,X5] : s(X0,happ(s(fun(X1,X0),'_dst_x1x0_2'(s(fun(X1,fun(X2,X0)),X3),s(X2,X4))),s(X1,X5))) = s(X0,happ(s(fun(X2,X0),happ(s(fun(X1,fun(X2,X0)),X3),s(X1,X5))),s(X2,X4)))),
  inference(flattening,[],[f81])).
fof(f81,plain,(
  ! [X0,X1,X2] : ! [X3,X4,X5] : s(X0,happ(s(fun(X1,X0),'_dst_x1x0_2'(s(fun(X1,fun(X2,X0)),X3),s(X2,X4))),s(X1,X5))) = s(X0,happ(s(fun(X2,X0),happ(s(fun(X1,fun(X2,X0)),X3),s(X1,X5))),s(X2,X4)))),
  inference(rectify,[],[f33])).
fof(f33,axiom,(
  ! [X39,X37,X40] : ! [X41,X38,X42] : s(X39,happ(s(fun(X37,X39),'_dst_x1x0_2'(s(fun(X37,fun(X40,X39)),X41),s(X40,X38))),s(X37,X42))) = s(X39,happ(s(fun(X40,X39),happ(s(fun(X37,fun(X40,X39)),X41),s(X37,X42))),s(X40,X38)))),
  file('thm.integer.INT_ADD_SYM','_dst_x1x0_ax')).
fof(f19250,plain,(
  ( ! [X0,X1] : (p(s(bool,happ(s(fun(X0,bool),'_dst_x1x0_2'(s(fun(X0,fun(X0,bool)),'|dollar|equals_0'),s(X0,X1))),s(X0,X1))))) )),
  inference(forward_demodulation,[],[f19249,f181])).
fof(f181,plain,(
  ( ! [X0,X1] : (s(X0,X1) = s(X0,happ(s(fun(X0,X0),'const.combin.I_0'),s(X0,X1)))) )),
  inference(forward_demodulation,[],[f140,f138])).
fof(f138,plain,(
  ( ! [X0,X1] : (s(X0,X1) = s(X0,'const.combin.I_1'(s(X0,X1)))) )),
  inference(cnf_transformation,[],[f48])).
fof(f48,plain,(
  ! [X0,X1] : s(X0,X1) = s(X0,'const.combin.I_1'(s(X0,X1)))),
  inference(flattening,[],[f47])).
fof(f47,plain,(
  ! [X0] : ! [X1] : s(X0,X1) = s(X0,'const.combin.I_1'(s(X0,X1)))),
  inference(rectify,[],[f9])).
fof(f9,axiom,(
  ! [X8] : ! [X7] : s(X8,X7) = s(X8,'const.combin.I_1'(s(X8,X7)))),
  file('thm.integer.INT_ADD_SYM','thm.combin.I_THM')).
fof(f140,plain,(
  ( ! [X0,X1] : (s(X0,'const.combin.I_1'(s(X0,X1))) = s(X0,happ(s(fun(X0,X0),'const.combin.I_0'),s(X0,X1)))) )),
  inference(cnf_transformation,[],[f52])).
fof(f52,plain,(
  ! [X0,X1] : s(X0,'const.combin.I_1'(s(X0,X1))) = s(X0,happ(s(fun(X0,X0),'const.combin.I_0'),s(X0,X1)))),
  inference(flattening,[],[f51])).
fof(f51,plain,(
  ! [X0] : ! [X1] : s(X0,'const.combin.I_1'(s(X0,X1))) = s(X0,happ(s(fun(X0,X0),'const.combin.I_0'),s(X0,X1)))),
  inference(rectify,[],[f26])).
fof(f26,axiom,(
  ! [X8] : ! [X35] : s(X8,'const.combin.I_1'(s(X8,X35))) = s(X8,happ(s(fun(X8,X8),'const.combin.I_0'),s(X8,X35)))),
  file('thm.integer.INT_ADD_SYM','ARITY_0_1_const.combin.I')).
fof(f19249,plain,(
  ( ! [X0,X1] : (p(s(bool,happ(s(fun(X0,bool),'_dst_x1x0_2'(s(fun(X0,fun(X0,bool)),'|dollar|equals_0'),s(X0,X1))),s(X0,happ(s(fun(X0,X0),'const.combin.I_0'),s(X0,X1))))))) )),
  inference(forward_demodulation,[],[f18995,f167])).
fof(f18995,plain,(
  ( ! [X0,X1] : (p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X0,fun(X0,bool)),'|dollar|equals_0'),s(X0,happ(s(fun(X0,X0),'const.combin.I_0'),s(X0,X1))))),s(X0,X1))))) )),
  inference(unit_resulting_resolution,[],[f181,f9468])).
fof(f9468,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X0,fun(X0,bool)),'|dollar|equals_0'),s(X0,X1))),s(X0,X2)))) | s(X0,X1) != s(X0,X2)) )),
  inference(forward_demodulation,[],[f9467,f181])).
fof(f9467,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X0,fun(X0,bool)),'|dollar|equals_0'),s(X0,happ(s(fun(X0,X0),'const.combin.I_0'),s(X0,X1))))),s(X0,X2)))) | s(X0,X1) != s(X0,X2)) )),
  inference(forward_demodulation,[],[f9466,f181])).
fof(f9466,plain,(
  ( ! [X2,X0,X1] : (s(X0,X1) != s(X0,X2) | p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X0,fun(X0,bool)),'|dollar|equals_0'),s(X0,happ(s(fun(X0,X0),'const.combin.I_0'),s(X0,X1))))),s(X0,happ(s(fun(X0,X0),'const.combin.I_0'),s(X0,X2))))))) )),
  inference(subsumption_resolution,[],[f9438,f130])).
fof(f130,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f1])).
fof(f1,axiom,(
  p(s(bool,'T_0'))),
  file('thm.integer.INT_ADD_SYM',aHL_TRUTH)).
fof(f9438,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'T_0')) | s(X0,X1) != s(X0,X2) | p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X0,fun(X0,bool)),'|dollar|equals_0'),s(X0,happ(s(fun(X0,X0),'const.combin.I_0'),s(X0,X1))))),s(X0,happ(s(fun(X0,X0),'const.combin.I_0'),s(X0,X2))))))) )),
  inference(superposition,[],[f153,f248])).
fof(f248,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,'const.quotient.QUOTIENT_3'(s(fun(X0,fun(X0,bool)),'|dollar|equals_0'),s(fun(X0,X0),'const.combin.I_0'),s(fun(X0,X0),'const.combin.I_0')))) )),
  inference(unit_resulting_resolution,[],[f134,f190])).
fof(f134,plain,(
  ( ! [X0] : (p(s(bool,'const.quotient.QUOTIENT_3'(s(fun(X0,fun(X0,bool)),'|dollar|equals_0'),s(fun(X0,X0),'const.combin.I_0'),s(fun(X0,X0),'const.combin.I_0'))))) )),
  inference(cnf_transformation,[],[f44])).
fof(f44,plain,(
  ! [X0] : p(s(bool,'const.quotient.QUOTIENT_3'(s(fun(X0,fun(X0,bool)),'|dollar|equals_0'),s(fun(X0,X0),'const.combin.I_0'),s(fun(X0,X0),'const.combin.I_0'))))),
  inference(rectify,[],[f16])).
fof(f16,axiom,(
  ! [X8] : p(s(bool,'const.quotient.QUOTIENT_3'(s(fun(X8,fun(X8,bool)),'|dollar|equals_0'),s(fun(X8,X8),'const.combin.I_0'),s(fun(X8,X8),'const.combin.I_0'))))),
  file('thm.integer.INT_ADD_SYM','thm.quotient.IDENTITY_QUOTIENT')).
fof(f153,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (~p(s(bool,'const.quotient.QUOTIENT_3'(s(fun(X0,fun(X0,bool)),X2),s(fun(X0,X1),X3),s(fun(X1,X0),X4)))) | s(X1,X5) != s(X1,X6) | p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X0,fun(X0,bool)),X2),s(X0,happ(s(fun(X1,X0),X4),s(X1,X5))))),s(X0,happ(s(fun(X1,X0),X4),s(X1,X6))))))) )),
  inference(cnf_transformation,[],[f123])).
fof(f123,plain,(
  ! [X0,X1,X2,X3,X4] : (~p(s(bool,'const.quotient.QUOTIENT_3'(s(fun(X0,fun(X0,bool)),X2),s(fun(X0,X1),X3),s(fun(X1,X0),X4)))) | ! [X5,X6] : ((s(X1,X5) != s(X1,X6) | p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X0,fun(X0,bool)),X2),s(X0,happ(s(fun(X1,X0),X4),s(X1,X5))))),s(X0,happ(s(fun(X1,X0),X4),s(X1,X6))))))) & (~p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X0,fun(X0,bool)),X2),s(X0,happ(s(fun(X1,X0),X4),s(X1,X5))))),s(X0,happ(s(fun(X1,X0),X4),s(X1,X6)))))) | s(X1,X5) = s(X1,X6))))),
  inference(nnf_transformation,[],[f107])).
fof(f107,plain,(
  ! [X0,X1,X2,X3,X4] : (~p(s(bool,'const.quotient.QUOTIENT_3'(s(fun(X0,fun(X0,bool)),X2),s(fun(X0,X1),X3),s(fun(X1,X0),X4)))) | ! [X5,X6] : (s(X1,X5) = s(X1,X6) <=> p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X0,fun(X0,bool)),X2),s(X0,happ(s(fun(X1,X0),X4),s(X1,X5))))),s(X0,happ(s(fun(X1,X0),X4),s(X1,X6))))))))),
  inference(ennf_transformation,[],[f71])).
fof(f71,plain,(
  ! [X0,X1,X2,X3,X4] : (p(s(bool,'const.quotient.QUOTIENT_3'(s(fun(X0,fun(X0,bool)),X2),s(fun(X0,X1),X3),s(fun(X1,X0),X4)))) => ! [X5,X6] : (s(X1,X5) = s(X1,X6) <=> p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X0,fun(X0,bool)),X2),s(X0,happ(s(fun(X1,X0),X4),s(X1,X5))))),s(X0,happ(s(fun(X1,X0),X4),s(X1,X6))))))))),
  inference(flattening,[],[f70])).
fof(f70,plain,(
  ! [X0,X1] : ! [X2,X3,X4] : (p(s(bool,'const.quotient.QUOTIENT_3'(s(fun(X0,fun(X0,bool)),X2),s(fun(X0,X1),X3),s(fun(X1,X0),X4)))) => ! [X5,X6] : (s(X1,X5) = s(X1,X6) <=> p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X0,fun(X0,bool)),X2),s(X0,happ(s(fun(X1,X0),X4),s(X1,X5))))),s(X0,happ(s(fun(X1,X0),X4),s(X1,X6))))))))),
  inference(rectify,[],[f19])).
fof(f19,axiom,(
  ! [X8,X20] : ! [X31,X32,X33] : (p(s(bool,'const.quotient.QUOTIENT_3'(s(fun(X8,fun(X8,bool)),X31),s(fun(X8,X20),X32),s(fun(X20,X8),X33)))) => ! [X7,X6] : (s(X20,X6) = s(X20,X7) <=> p(s(bool,happ(s(fun(X8,bool),happ(s(fun(X8,fun(X8,bool)),X31),s(X8,happ(s(fun(X20,X8),X33),s(X20,X7))))),s(X8,happ(s(fun(X20,X8),X33),s(X20,X6))))))))),
  file('thm.integer.INT_ADD_SYM','thm.quotient.EQUALS_PRS')).
fof(f36715,plain,(
  s(bool,'T_0') != s(bool,happ(s(fun('type.integer.int',bool),happ(s(fun('type.integer.int',fun('type.integer.int',bool)),'|dollar|equals_0'),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK0),s('type.integer.int',sK1))))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK0),s('type.integer.int',sK1))))) | $spl29),
  inference(backward_demodulation,[],[f36663,f36512])).
fof(f36663,plain,(
  ( ! [X2,X3] : (s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X2),s('type.integer.int',X3))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X3),s('type.integer.int',X2)))) )),
  inference(superposition,[],[f1991,f145])).
fof(f145,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int',X1))) = s('type.integer.int','const.integer.int_ABS_1'(s('type.pair.prod'('type.num.num','type.num.num'),'const.integer.tint_add_2'(s('type.pair.prod'('type.num.num','type.num.num'),'const.integer.int_REP_1'(s('type.integer.int',X0))),s('type.pair.prod'('type.num.num','type.num.num'),'const.integer.int_REP_1'(s('type.integer.int',X1)))))))) )),
  inference(cnf_transformation,[],[f58])).
fof(f58,plain,(
  ! [X0,X1] : s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int',X1))) = s('type.integer.int','const.integer.int_ABS_1'(s('type.pair.prod'('type.num.num','type.num.num'),'const.integer.tint_add_2'(s('type.pair.prod'('type.num.num','type.num.num'),'const.integer.int_REP_1'(s('type.integer.int',X0))),s('type.pair.prod'('type.num.num','type.num.num'),'const.integer.int_REP_1'(s('type.integer.int',X1)))))))),
  inference(rectify,[],[f14])).
fof(f14,axiom,(
  ! [X18,X19] : s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X18),s('type.integer.int',X19))) = s('type.integer.int','const.integer.int_ABS_1'(s('type.pair.prod'('type.num.num','type.num.num'),'const.integer.tint_add_2'(s('type.pair.prod'('type.num.num','type.num.num'),'const.integer.int_REP_1'(s('type.integer.int',X18))),s('type.pair.prod'('type.num.num','type.num.num'),'const.integer.int_REP_1'(s('type.integer.int',X19)))))))),
  file('thm.integer.INT_ADD_SYM','thm.integer.int_add')).
fof(f1991,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int',X1))) = s('type.integer.int','const.integer.int_ABS_1'(s('type.pair.prod'('type.num.num','type.num.num'),'const.integer.tint_add_2'(s('type.pair.prod'('type.num.num','type.num.num'),'const.integer.int_REP_1'(s('type.integer.int',X1))),s('type.pair.prod'('type.num.num','type.num.num'),'const.integer.int_REP_1'(s('type.integer.int',X0)))))))) )),
  inference(superposition,[],[f145,f144])).
fof(f144,plain,(
  ( ! [X0,X1] : (s('type.pair.prod'('type.num.num','type.num.num'),'const.integer.tint_add_2'(s('type.pair.prod'('type.num.num','type.num.num'),X0),s('type.pair.prod'('type.num.num','type.num.num'),X1))) = s('type.pair.prod'('type.num.num','type.num.num'),'const.integer.tint_add_2'(s('type.pair.prod'('type.num.num','type.num.num'),X1),s('type.pair.prod'('type.num.num','type.num.num'),X0)))) )),
  inference(cnf_transformation,[],[f57])).
fof(f57,plain,(
  ! [X0,X1] : s('type.pair.prod'('type.num.num','type.num.num'),'const.integer.tint_add_2'(s('type.pair.prod'('type.num.num','type.num.num'),X0),s('type.pair.prod'('type.num.num','type.num.num'),X1))) = s('type.pair.prod'('type.num.num','type.num.num'),'const.integer.tint_add_2'(s('type.pair.prod'('type.num.num','type.num.num'),X1),s('type.pair.prod'('type.num.num','type.num.num'),X0)))),
  inference(rectify,[],[f11])).
fof(f11,axiom,(
  ! [X7,X6] : s('type.pair.prod'('type.num.num','type.num.num'),'const.integer.tint_add_2'(s('type.pair.prod'('type.num.num','type.num.num'),X6),s('type.pair.prod'('type.num.num','type.num.num'),X7))) = s('type.pair.prod'('type.num.num','type.num.num'),'const.integer.tint_add_2'(s('type.pair.prod'('type.num.num','type.num.num'),X7),s('type.pair.prod'('type.num.num','type.num.num'),X6)))),
  file('thm.integer.INT_ADD_SYM','thm.integer.TINT_ADD_SYM')).
fof(f36720,plain,(
  $false | $spl25),
  inference(subsumption_resolution,[],[f36704,f19651])).
fof(f36704,plain,(
  s(bool,'T_0') != s(bool,happ(s(fun('type.integer.int',bool),happ(s(fun('type.integer.int',fun('type.integer.int',bool)),'|dollar|equals_0'),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK0),s('type.integer.int',sK1))))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK0),s('type.integer.int',sK1))))) | $spl25),
  inference(backward_demodulation,[],[f36663,f35225])).
fof(f36719,plain,(
  $false | ($spl7 | $spl19)),
  inference(subsumption_resolution,[],[f36718,f199])).
fof(f36718,plain,(
  s(bool,'T_0') = s(bool,'F_0') | $spl19),
  inference(forward_demodulation,[],[f36692,f19651])).
fof(f36692,plain,(
  s(bool,'F_0') = s(bool,happ(s(fun('type.integer.int',bool),happ(s(fun('type.integer.int',fun('type.integer.int',bool)),'|dollar|equals_0'),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK0),s('type.integer.int',sK1))))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK0),s('type.integer.int',sK1))))) | $spl19),
  inference(backward_demodulation,[],[f36663,f34097])).
fof(f34097,plain,(
  s(bool,'F_0') = s(bool,happ(s(fun('type.integer.int',bool),happ(s(fun('type.integer.int',fun('type.integer.int',bool)),'|dollar|equals_0'),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK1),s('type.integer.int',sK0))))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK0),s('type.integer.int',sK1))))) | $spl19),
  inference(forward_demodulation,[],[f34070,f181])).
fof(f34070,plain,(
  s(bool,happ(s(fun(bool,bool),'const.combin.I_0'),s(bool,'F_0'))) = s(bool,happ(s(fun('type.integer.int',bool),happ(s(fun('type.integer.int',fun('type.integer.int',bool)),'|dollar|equals_0'),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK1),s('type.integer.int',sK0))))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK0),s('type.integer.int',sK1))))) | $spl19),
  inference(unit_resulting_resolution,[],[f16794,f33472,f332])).
fof(f332,plain,(
  ( ! [X2,X1] : (p(s(bool,X1)) | s(bool,X1) = s(bool,X2) | s(bool,'T_0') = s(bool,X2)) )),
  inference(superposition,[],[f130,f187])).
fof(f187,plain,(
  ( ! [X0,X1] : (s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X1) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f137,f137])).
fof(f33472,plain,(
  ~p(s(bool,happ(s(fun('type.integer.int',bool),happ(s(fun('type.integer.int',fun('type.integer.int',bool)),'|dollar|equals_0'),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK1),s('type.integer.int',sK0))))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK0),s('type.integer.int',sK1))))))),
  inference(unit_resulting_resolution,[],[f129,f11191])).
fof(f11191,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X0,fun(X0,bool)),'|dollar|equals_0'),s(X0,X1))),s(X0,X2)))) | s(X0,X1) = s(X0,X2)) )),
  inference(forward_demodulation,[],[f11190,f181])).
fof(f11190,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X0,fun(X0,bool)),'|dollar|equals_0'),s(X0,happ(s(fun(X0,X0),'const.combin.I_0'),s(X0,X1))))),s(X0,X2)))) | s(X0,X1) = s(X0,X2)) )),
  inference(forward_demodulation,[],[f11189,f181])).
fof(f11189,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X0,fun(X0,bool)),'|dollar|equals_0'),s(X0,happ(s(fun(X0,X0),'const.combin.I_0'),s(X0,X1))))),s(X0,happ(s(fun(X0,X0),'const.combin.I_0'),s(X0,X2)))))) | s(X0,X1) = s(X0,X2)) )),
  inference(subsumption_resolution,[],[f11158,f130])).
fof(f11158,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'T_0')) | ~p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X0,fun(X0,bool)),'|dollar|equals_0'),s(X0,happ(s(fun(X0,X0),'const.combin.I_0'),s(X0,X1))))),s(X0,happ(s(fun(X0,X0),'const.combin.I_0'),s(X0,X2)))))) | s(X0,X1) = s(X0,X2)) )),
  inference(superposition,[],[f154,f248])).
fof(f154,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (~p(s(bool,'const.quotient.QUOTIENT_3'(s(fun(X0,fun(X0,bool)),X2),s(fun(X0,X1),X3),s(fun(X1,X0),X4)))) | ~p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X0,fun(X0,bool)),X2),s(X0,happ(s(fun(X1,X0),X4),s(X1,X5))))),s(X0,happ(s(fun(X1,X0),X4),s(X1,X6)))))) | s(X1,X5) = s(X1,X6)) )),
  inference(cnf_transformation,[],[f123])).
fof(f129,plain,(
  s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK0),s('type.integer.int',sK1))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK1),s('type.integer.int',sK0)))),
  inference(cnf_transformation,[],[f119])).
fof(f119,plain,(
  s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK0),s('type.integer.int',sK1))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK1),s('type.integer.int',sK0)))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1])],[f100])).
fof(f100,plain,(
  ? [X0,X1] : s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int',X1))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X1),s('type.integer.int',X0)))),
  inference(ennf_transformation,[],[f41])).
fof(f41,plain,(
  ~! [X0,X1] : s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int',X1))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X1),s('type.integer.int',X0)))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7] : s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X6),s('type.integer.int',X7))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X7),s('type.integer.int',X6)))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7] : s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X6),s('type.integer.int',X7))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X7),s('type.integer.int',X6)))),
  file('thm.integer.INT_ADD_SYM','thm.integer.INT_ADD_SYM')).
fof(f36717,plain,(
  $false | ($spl7 | $spl19)),
  inference(subsumption_resolution,[],[f36716,f199])).
fof(f36716,plain,(
  s(bool,'T_0') = s(bool,'F_0') | $spl19),
  inference(forward_demodulation,[],[f36687,f19651])).
fof(f36687,plain,(
  s(bool,'F_0') = s(bool,happ(s(fun('type.integer.int',bool),happ(s(fun('type.integer.int',fun('type.integer.int',bool)),'|dollar|equals_0'),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK0),s('type.integer.int',sK1))))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK0),s('type.integer.int',sK1))))) | $spl19),
  inference(backward_demodulation,[],[f36663,f34034])).
fof(f34034,plain,(
  s(bool,'F_0') = s(bool,happ(s(fun('type.integer.int',bool),happ(s(fun('type.integer.int',fun('type.integer.int',bool)),'|dollar|equals_0'),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK0),s('type.integer.int',sK1))))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK1),s('type.integer.int',sK0))))) | $spl19),
  inference(forward_demodulation,[],[f34007,f181])).
fof(f34007,plain,(
  s(bool,happ(s(fun(bool,bool),'const.combin.I_0'),s(bool,'F_0'))) = s(bool,happ(s(fun('type.integer.int',bool),happ(s(fun('type.integer.int',fun('type.integer.int',bool)),'|dollar|equals_0'),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK0),s('type.integer.int',sK1))))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK1),s('type.integer.int',sK0))))) | $spl19),
  inference(unit_resulting_resolution,[],[f16794,f33467,f332])).
fof(f33467,plain,(
  ~p(s(bool,happ(s(fun('type.integer.int',bool),happ(s(fun('type.integer.int',fun('type.integer.int',bool)),'|dollar|equals_0'),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK0),s('type.integer.int',sK1))))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK1),s('type.integer.int',sK0))))))),
  inference(unit_resulting_resolution,[],[f129,f11191])).
fof(f36634,plain,(
  ( ! [X0] : (s(bool,X0) = s(bool,happ(s(fun('type.integer.int',bool),happ(s(fun('type.integer.int',fun('type.integer.int',bool)),'|dollar|equals_0'),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK1),s('type.integer.int',sK0))))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK0),s('type.integer.int',sK1)))))) ) | $spl30),
  inference(cnf_transformation,[],[f36634_D])).
fof(f36634_D,plain,(
  ( ! [X0] : (s(bool,X0) = s(bool,happ(s(fun('type.integer.int',bool),happ(s(fun('type.integer.int',fun('type.integer.int',bool)),'|dollar|equals_0'),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK1),s('type.integer.int',sK0))))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK0),s('type.integer.int',sK1)))))) ) <=> ~$spl30),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl30])])).
fof(f36512,plain,(
  s(bool,'T_0') != s(bool,happ(s(fun('type.integer.int',bool),happ(s(fun('type.integer.int',fun('type.integer.int',bool)),'|dollar|equals_0'),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK1),s('type.integer.int',sK0))))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK0),s('type.integer.int',sK1))))) | $spl29),
  inference(cnf_transformation,[],[f36512_D])).
fof(f36512_D,plain,(
  s(bool,'T_0') != s(bool,happ(s(fun('type.integer.int',bool),happ(s(fun('type.integer.int',fun('type.integer.int',bool)),'|dollar|equals_0'),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK1),s('type.integer.int',sK0))))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK0),s('type.integer.int',sK1))))) <=> ~$spl29),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl29])])).
fof(f36357,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,happ(s(fun('type.integer.int',bool),happ(s(fun('type.integer.int',fun('type.integer.int',bool)),'|dollar|equals_0'),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK1),s('type.integer.int',sK0))))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK0),s('type.integer.int',sK1))))) | s(bool,X0) = s(bool,happ(s(fun('type.integer.int',bool),happ(s(fun('type.integer.int',fun('type.integer.int',bool)),'|dollar|equals_0'),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK1),s('type.integer.int',sK0))))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK0),s('type.integer.int',sK1)))))) )),
  inference(equality_factoring,[],[f34101])).
fof(f34101,plain,(
  ( ! [X0] : (s(bool,X0) = s(bool,happ(s(fun('type.integer.int',bool),happ(s(fun('type.integer.int',fun('type.integer.int',bool)),'|dollar|equals_0'),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK1),s('type.integer.int',sK0))))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK0),s('type.integer.int',sK1))))) | s(bool,'T_0') = s(bool,X0)) )),
  inference(subsumption_resolution,[],[f34072,f130])).
fof(f34072,plain,(
  ( ! [X0] : (~p(s(bool,'T_0')) | s(bool,X0) = s(bool,happ(s(fun('type.integer.int',bool),happ(s(fun('type.integer.int',fun('type.integer.int',bool)),'|dollar|equals_0'),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK1),s('type.integer.int',sK0))))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK0),s('type.integer.int',sK1))))) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f33472,f187])).
fof(f2173,plain,(
  ( ! [X30] : (s(bool,'T_0') = s(bool,X30)) ) | $spl8),
  inference(cnf_transformation,[],[f2173_D])).
fof(f2173_D,plain,(
  ( ! [X30] : (s(bool,'T_0') = s(bool,X30)) ) <=> ~$spl8),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl8])])).
fof(f36572,plain,(
  ( ! [X255] : (s(bool,'T_0') != s(bool,happ(s(fun('type.integer.int',bool),happ(s(fun('type.integer.int',fun('type.integer.int',bool)),'|dollar|equals_0'),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK1),s('type.integer.int',sK0))))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK0),s('type.integer.int',sK1))))) | s(bool,'T_0') = s(bool,X255)) )),
  inference(subsumption_resolution,[],[f36214,f15920])).
fof(f15920,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,happ(s(fun(bool,bool),'const.combin.I_0'),s(bool,X0))) | s(bool,'T_0') = s(bool,X0)) )),
  inference(forward_demodulation,[],[f15715,f138])).
fof(f15715,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,X0) | s(bool,'const.combin.I_1'(s(bool,'T_0'))) != s(bool,happ(s(fun(bool,bool),'const.combin.I_0'),s(bool,X0)))) )),
  inference(condensation,[],[f15714])).
fof(f15714,plain,(
  ( ! [X92,X93] : (s(bool,'const.combin.I_1'(s(bool,'T_0'))) != s(bool,happ(s(fun(bool,bool),'const.combin.I_0'),s(bool,X93))) | s(bool,'T_0') = s(bool,X92) | s(bool,'T_0') = s(bool,X93)) )),
  inference(duplicate_literal_removal,[],[f15468])).
fof(f15468,plain,(
  ( ! [X92,X93] : (s(bool,'const.combin.I_1'(s(bool,'T_0'))) != s(bool,happ(s(fun(bool,bool),'const.combin.I_0'),s(bool,X93))) | s(bool,'T_0') = s(bool,X92) | s(bool,'T_0') = s(bool,X93) | s(bool,'T_0') = s(bool,X92)) )),
  inference(superposition,[],[f1058,f290])).
fof(f290,plain,(
  ( ! [X19,X20] : (s(bool,X20) = s(bool,happ(s(fun(bool,bool),'const.combin.I_0'),s(bool,X19))) | s(bool,'T_0') = s(bool,X19) | s(bool,'T_0') = s(bool,X20)) )),
  inference(superposition,[],[f187,f181])).
fof(f1058,plain,(
  ( ! [X0] : (s(bool,X0) != s(bool,'const.combin.I_1'(s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X0)) )),
  inference(duplicate_literal_removal,[],[f1040])).
fof(f1040,plain,(
  ( ! [X0] : (s(bool,X0) != s(bool,'const.combin.I_1'(s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) )),
  inference(equality_factoring,[],[f263])).
fof(f263,plain,(
  ( ! [X23,X22] : (s(bool,X22) = s(bool,X23) | s(bool,'T_0') = s(bool,X23) | s(bool,'T_0') = s(bool,'const.combin.I_1'(s(bool,X22)))) )),
  inference(superposition,[],[f187,f138])).
fof(f36214,plain,(
  ( ! [X255] : (s(bool,'T_0') != s(bool,happ(s(fun('type.integer.int',bool),happ(s(fun('type.integer.int',fun('type.integer.int',bool)),'|dollar|equals_0'),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK1),s('type.integer.int',sK0))))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK0),s('type.integer.int',sK1))))) | s(bool,'T_0') = s(bool,X255) | s(bool,'T_0') = s(bool,happ(s(fun(bool,bool),'const.combin.I_0'),s(bool,X255)))) )),
  inference(superposition,[],[f15920,f34101])).
fof(f36570,plain,(
  ( ! [X246] : (s(bool,'T_0') != s(bool,happ(s(fun('type.integer.int',bool),happ(s(fun('type.integer.int',fun('type.integer.int',bool)),'|dollar|equals_0'),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK1),s('type.integer.int',sK0))))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK0),s('type.integer.int',sK1))))) | s(bool,'T_0') = s(bool,X246)) )),
  inference(subsumption_resolution,[],[f36208,f12678])).
fof(f12678,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,happ(s(fun(bool,bool),'_i_0_0'),s(bool,X0))) | s(bool,'T_0') = s(bool,X0)) )),
  inference(forward_demodulation,[],[f12511,f138])).
fof(f12511,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,X0) | s(bool,'const.combin.I_1'(s(bool,'T_0'))) != s(bool,happ(s(fun(bool,bool),'_i_0_0'),s(bool,X0)))) )),
  inference(condensation,[],[f12510])).
fof(f12510,plain,(
  ( ! [X87,X86] : (s(bool,'const.combin.I_1'(s(bool,'T_0'))) != s(bool,happ(s(fun(bool,bool),'_i_0_0'),s(bool,X87))) | s(bool,'T_0') = s(bool,X86) | s(bool,'T_0') = s(bool,X87)) )),
  inference(duplicate_literal_removal,[],[f12287])).
fof(f12287,plain,(
  ( ! [X87,X86] : (s(bool,'const.combin.I_1'(s(bool,'T_0'))) != s(bool,happ(s(fun(bool,bool),'_i_0_0'),s(bool,X87))) | s(bool,'T_0') = s(bool,X86) | s(bool,'T_0') = s(bool,X87) | s(bool,'T_0') = s(bool,X86)) )),
  inference(superposition,[],[f1058,f289])).
fof(f289,plain,(
  ( ! [X17,X18] : (s(bool,X18) = s(bool,happ(s(fun(bool,bool),'_i_0_0'),s(bool,X17))) | s(bool,'T_0') = s(bool,X17) | s(bool,'T_0') = s(bool,X18)) )),
  inference(superposition,[],[f187,f139])).
fof(f139,plain,(
  ( ! [X0,X1] : (s(X0,X1) = s(X0,happ(s(fun(X0,X0),'_i_0_0'),s(X0,X1)))) )),
  inference(cnf_transformation,[],[f50])).
fof(f50,plain,(
  ! [X0,X1] : s(X0,X1) = s(X0,happ(s(fun(X0,X0),'_i_0_0'),s(X0,X1)))),
  inference(flattening,[],[f49])).
fof(f49,plain,(
  ! [X0] : ! [X1] : s(X0,X1) = s(X0,happ(s(fun(X0,X0),'_i_0_0'),s(X0,X1)))),
  inference(rectify,[],[f32])).
fof(f32,axiom,(
  ! [X37] : ! [X38] : s(X37,X38) = s(X37,happ(s(fun(X37,X37),'_i_0_0'),s(X37,X38)))),
  file('thm.integer.INT_ADD_SYM','_i0_ax')).
fof(f36208,plain,(
  ( ! [X246] : (s(bool,'T_0') != s(bool,happ(s(fun('type.integer.int',bool),happ(s(fun('type.integer.int',fun('type.integer.int',bool)),'|dollar|equals_0'),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK1),s('type.integer.int',sK0))))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK0),s('type.integer.int',sK1))))) | s(bool,'T_0') = s(bool,X246) | s(bool,'T_0') = s(bool,happ(s(fun(bool,bool),'_i_0_0'),s(bool,X246)))) )),
  inference(superposition,[],[f12678,f34101])).
fof(f36557,plain,(
  ( ! [X148] : (s(bool,'T_0') != s(bool,happ(s(fun('type.integer.int',bool),happ(s(fun('type.integer.int',fun('type.integer.int',bool)),'|dollar|equals_0'),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK1),s('type.integer.int',sK0))))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK0),s('type.integer.int',sK1))))) | s(bool,'T_0') = s(bool,X148)) )),
  inference(subsumption_resolution,[],[f36183,f1959])).
fof(f1959,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,'const.combin.I_1'(s(bool,X0))) | s(bool,'T_0') = s(bool,X0)) )),
  inference(forward_demodulation,[],[f1887,f138])).
fof(f1887,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,X0) | s(bool,'const.combin.I_1'(s(bool,'T_0'))) != s(bool,'const.combin.I_1'(s(bool,X0)))) )),
  inference(condensation,[],[f1886])).
fof(f1886,plain,(
  ( ! [X41,X42] : (s(bool,'const.combin.I_1'(s(bool,'T_0'))) != s(bool,'const.combin.I_1'(s(bool,X42))) | s(bool,'T_0') = s(bool,X41) | s(bool,'T_0') = s(bool,X42)) )),
  inference(duplicate_literal_removal,[],[f1814])).
fof(f1814,plain,(
  ( ! [X41,X42] : (s(bool,'const.combin.I_1'(s(bool,'T_0'))) != s(bool,'const.combin.I_1'(s(bool,X42))) | s(bool,'T_0') = s(bool,X41) | s(bool,'T_0') = s(bool,X42) | s(bool,'T_0') = s(bool,X41)) )),
  inference(superposition,[],[f1058,f288])).
fof(f288,plain,(
  ( ! [X15,X16] : (s(bool,X16) = s(bool,'const.combin.I_1'(s(bool,X15))) | s(bool,'T_0') = s(bool,X15) | s(bool,'T_0') = s(bool,X16)) )),
  inference(superposition,[],[f187,f138])).
fof(f36183,plain,(
  ( ! [X148] : (s(bool,'T_0') != s(bool,happ(s(fun('type.integer.int',bool),happ(s(fun('type.integer.int',fun('type.integer.int',bool)),'|dollar|equals_0'),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK1),s('type.integer.int',sK0))))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK0),s('type.integer.int',sK1))))) | s(bool,'T_0') = s(bool,X148) | s(bool,'T_0') = s(bool,'const.combin.I_1'(s(bool,X148)))) )),
  inference(superposition,[],[f1959,f34101])).
fof(f36517,plain,(
  ( ! [X75] : (s(bool,'T_0') != s(bool,happ(s(fun('type.integer.int',bool),happ(s(fun('type.integer.int',fun('type.integer.int',bool)),'|dollar|equals_0'),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK1),s('type.integer.int',sK0))))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK0),s('type.integer.int',sK1))))) | s(bool,'T_0') = s(bool,X75)) )),
  inference(subsumption_resolution,[],[f36137,f15920])).
fof(f36137,plain,(
  ( ! [X75] : (s(bool,'T_0') != s(bool,happ(s(fun('type.integer.int',bool),happ(s(fun('type.integer.int',fun('type.integer.int',bool)),'|dollar|equals_0'),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK1),s('type.integer.int',sK0))))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK0),s('type.integer.int',sK1))))) | s(bool,'T_0') = s(bool,happ(s(fun(bool,bool),'const.combin.I_0'),s(bool,X75))) | s(bool,'T_0') = s(bool,X75)) )),
  inference(superposition,[],[f1319,f34101])).
fof(f1319,plain,(
  ( ! [X30] : (s(bool,'T_0') != s(bool,X30) | s(bool,'T_0') = s(bool,happ(s(fun(bool,bool),'const.combin.I_0'),s(bool,X30)))) )),
  inference(forward_demodulation,[],[f1276,f138])).
fof(f1276,plain,(
  ( ! [X30] : (s(bool,X30) != s(bool,'const.combin.I_1'(s(bool,'T_0'))) | s(bool,'T_0') = s(bool,happ(s(fun(bool,bool),'const.combin.I_0'),s(bool,X30)))) )),
  inference(superposition,[],[f1058,f181])).
fof(f36516,plain,(
  ( ! [X74] : (s(bool,'T_0') != s(bool,happ(s(fun('type.integer.int',bool),happ(s(fun('type.integer.int',fun('type.integer.int',bool)),'|dollar|equals_0'),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK1),s('type.integer.int',sK0))))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK0),s('type.integer.int',sK1))))) | s(bool,'T_0') = s(bool,X74)) )),
  inference(subsumption_resolution,[],[f36136,f12678])).
fof(f36136,plain,(
  ( ! [X74] : (s(bool,'T_0') != s(bool,happ(s(fun('type.integer.int',bool),happ(s(fun('type.integer.int',fun('type.integer.int',bool)),'|dollar|equals_0'),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK1),s('type.integer.int',sK0))))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK0),s('type.integer.int',sK1))))) | s(bool,'T_0') = s(bool,happ(s(fun(bool,bool),'_i_0_0'),s(bool,X74))) | s(bool,'T_0') = s(bool,X74)) )),
  inference(superposition,[],[f1318,f34101])).
fof(f1318,plain,(
  ( ! [X29] : (s(bool,'T_0') != s(bool,X29) | s(bool,'T_0') = s(bool,happ(s(fun(bool,bool),'_i_0_0'),s(bool,X29)))) )),
  inference(forward_demodulation,[],[f1275,f138])).
fof(f1275,plain,(
  ( ! [X29] : (s(bool,X29) != s(bool,'const.combin.I_1'(s(bool,'T_0'))) | s(bool,'T_0') = s(bool,happ(s(fun(bool,bool),'_i_0_0'),s(bool,X29)))) )),
  inference(superposition,[],[f1058,f139])).
fof(f36510,plain,(
  ( ! [X72] : (s(bool,'T_0') != s(bool,happ(s(fun('type.integer.int',bool),happ(s(fun('type.integer.int',fun('type.integer.int',bool)),'|dollar|equals_0'),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK1),s('type.integer.int',sK0))))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK0),s('type.integer.int',sK1))))) | s(bool,'T_0') = s(bool,X72)) ) | $spl7),
  inference(subsumption_resolution,[],[f36134,f1959])).
fof(f36134,plain,(
  ( ! [X72] : (s(bool,'T_0') != s(bool,happ(s(fun('type.integer.int',bool),happ(s(fun('type.integer.int',fun('type.integer.int',bool)),'|dollar|equals_0'),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK1),s('type.integer.int',sK0))))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK0),s('type.integer.int',sK1))))) | s(bool,'T_0') = s(bool,'const.combin.I_1'(s(bool,X72))) | s(bool,'T_0') = s(bool,X72)) ) | $spl7),
  inference(superposition,[],[f1217,f34101])).
fof(f1217,plain,(
  ( ! [X37] : (s(bool,'T_0') != s(bool,X37) | s(bool,'T_0') = s(bool,'const.combin.I_1'(s(bool,X37)))) ) | $spl7),
  inference(subsumption_resolution,[],[f967,f199])).
fof(f967,plain,(
  ( ! [X37] : (s(bool,'T_0') != s(bool,X37) | s(bool,'T_0') = s(bool,'F_0') | s(bool,'T_0') = s(bool,'const.combin.I_1'(s(bool,X37)))) ) | $spl7),
  inference(superposition,[],[f199,f263])).
fof(f35346,plain,(
  ( ! [X0] : (s(bool,X0) = s(bool,happ(s(fun('type.integer.int',bool),happ(s(fun('type.integer.int',fun('type.integer.int',bool)),'|dollar|equals_0'),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK0),s('type.integer.int',sK1))))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK1),s('type.integer.int',sK0)))))) ) | $spl26),
  inference(cnf_transformation,[],[f35346_D])).
fof(f35346_D,plain,(
  ( ! [X0] : (s(bool,X0) = s(bool,happ(s(fun('type.integer.int',bool),happ(s(fun('type.integer.int',fun('type.integer.int',bool)),'|dollar|equals_0'),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK0),s('type.integer.int',sK1))))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK1),s('type.integer.int',sK0)))))) ) <=> ~$spl26),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl26])])).
fof(f35225,plain,(
  s(bool,'T_0') != s(bool,happ(s(fun('type.integer.int',bool),happ(s(fun('type.integer.int',fun('type.integer.int',bool)),'|dollar|equals_0'),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK0),s('type.integer.int',sK1))))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK1),s('type.integer.int',sK0))))) | $spl25),
  inference(cnf_transformation,[],[f35225_D])).
fof(f35225_D,plain,(
  s(bool,'T_0') != s(bool,happ(s(fun('type.integer.int',bool),happ(s(fun('type.integer.int',fun('type.integer.int',bool)),'|dollar|equals_0'),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK0),s('type.integer.int',sK1))))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK1),s('type.integer.int',sK0))))) <=> ~$spl25),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl25])])).
fof(f35074,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,happ(s(fun('type.integer.int',bool),happ(s(fun('type.integer.int',fun('type.integer.int',bool)),'|dollar|equals_0'),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK0),s('type.integer.int',sK1))))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK1),s('type.integer.int',sK0))))) | s(bool,X0) = s(bool,happ(s(fun('type.integer.int',bool),happ(s(fun('type.integer.int',fun('type.integer.int',bool)),'|dollar|equals_0'),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK0),s('type.integer.int',sK1))))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK1),s('type.integer.int',sK0)))))) )),
  inference(equality_factoring,[],[f34038])).
fof(f34038,plain,(
  ( ! [X0] : (s(bool,X0) = s(bool,happ(s(fun('type.integer.int',bool),happ(s(fun('type.integer.int',fun('type.integer.int',bool)),'|dollar|equals_0'),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK0),s('type.integer.int',sK1))))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK1),s('type.integer.int',sK0))))) | s(bool,'T_0') = s(bool,X0)) )),
  inference(subsumption_resolution,[],[f34009,f130])).
fof(f34009,plain,(
  ( ! [X0] : (~p(s(bool,'T_0')) | s(bool,X0) = s(bool,happ(s(fun('type.integer.int',bool),happ(s(fun('type.integer.int',fun('type.integer.int',bool)),'|dollar|equals_0'),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK0),s('type.integer.int',sK1))))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK1),s('type.integer.int',sK0))))) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f33467,f187])).
fof(f35284,plain,(
  ( ! [X254] : (s(bool,'T_0') != s(bool,happ(s(fun('type.integer.int',bool),happ(s(fun('type.integer.int',fun('type.integer.int',bool)),'|dollar|equals_0'),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK0),s('type.integer.int',sK1))))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK1),s('type.integer.int',sK0))))) | s(bool,'T_0') = s(bool,X254)) )),
  inference(subsumption_resolution,[],[f34932,f15920])).
fof(f34932,plain,(
  ( ! [X254] : (s(bool,'T_0') != s(bool,happ(s(fun('type.integer.int',bool),happ(s(fun('type.integer.int',fun('type.integer.int',bool)),'|dollar|equals_0'),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK0),s('type.integer.int',sK1))))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK1),s('type.integer.int',sK0))))) | s(bool,'T_0') = s(bool,X254) | s(bool,'T_0') = s(bool,happ(s(fun(bool,bool),'const.combin.I_0'),s(bool,X254)))) )),
  inference(superposition,[],[f15920,f34038])).
fof(f35282,plain,(
  ( ! [X245] : (s(bool,'T_0') != s(bool,happ(s(fun('type.integer.int',bool),happ(s(fun('type.integer.int',fun('type.integer.int',bool)),'|dollar|equals_0'),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK0),s('type.integer.int',sK1))))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK1),s('type.integer.int',sK0))))) | s(bool,'T_0') = s(bool,X245)) )),
  inference(subsumption_resolution,[],[f34926,f12678])).
fof(f34926,plain,(
  ( ! [X245] : (s(bool,'T_0') != s(bool,happ(s(fun('type.integer.int',bool),happ(s(fun('type.integer.int',fun('type.integer.int',bool)),'|dollar|equals_0'),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK0),s('type.integer.int',sK1))))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK1),s('type.integer.int',sK0))))) | s(bool,'T_0') = s(bool,X245) | s(bool,'T_0') = s(bool,happ(s(fun(bool,bool),'_i_0_0'),s(bool,X245)))) )),
  inference(superposition,[],[f12678,f34038])).
fof(f35269,plain,(
  ( ! [X147] : (s(bool,'T_0') != s(bool,happ(s(fun('type.integer.int',bool),happ(s(fun('type.integer.int',fun('type.integer.int',bool)),'|dollar|equals_0'),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK0),s('type.integer.int',sK1))))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK1),s('type.integer.int',sK0))))) | s(bool,'T_0') = s(bool,X147)) )),
  inference(subsumption_resolution,[],[f34901,f1959])).
fof(f34901,plain,(
  ( ! [X147] : (s(bool,'T_0') != s(bool,happ(s(fun('type.integer.int',bool),happ(s(fun('type.integer.int',fun('type.integer.int',bool)),'|dollar|equals_0'),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK0),s('type.integer.int',sK1))))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK1),s('type.integer.int',sK0))))) | s(bool,'T_0') = s(bool,X147) | s(bool,'T_0') = s(bool,'const.combin.I_1'(s(bool,X147)))) )),
  inference(superposition,[],[f1959,f34038])).
fof(f35230,plain,(
  ( ! [X75] : (s(bool,'T_0') != s(bool,happ(s(fun('type.integer.int',bool),happ(s(fun('type.integer.int',fun('type.integer.int',bool)),'|dollar|equals_0'),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK0),s('type.integer.int',sK1))))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK1),s('type.integer.int',sK0))))) | s(bool,'T_0') = s(bool,X75)) )),
  inference(subsumption_resolution,[],[f34856,f15920])).
fof(f34856,plain,(
  ( ! [X75] : (s(bool,'T_0') != s(bool,happ(s(fun('type.integer.int',bool),happ(s(fun('type.integer.int',fun('type.integer.int',bool)),'|dollar|equals_0'),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK0),s('type.integer.int',sK1))))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK1),s('type.integer.int',sK0))))) | s(bool,'T_0') = s(bool,happ(s(fun(bool,bool),'const.combin.I_0'),s(bool,X75))) | s(bool,'T_0') = s(bool,X75)) )),
  inference(superposition,[],[f1319,f34038])).
fof(f35229,plain,(
  ( ! [X74] : (s(bool,'T_0') != s(bool,happ(s(fun('type.integer.int',bool),happ(s(fun('type.integer.int',fun('type.integer.int',bool)),'|dollar|equals_0'),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK0),s('type.integer.int',sK1))))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK1),s('type.integer.int',sK0))))) | s(bool,'T_0') = s(bool,X74)) )),
  inference(subsumption_resolution,[],[f34855,f12678])).
fof(f34855,plain,(
  ( ! [X74] : (s(bool,'T_0') != s(bool,happ(s(fun('type.integer.int',bool),happ(s(fun('type.integer.int',fun('type.integer.int',bool)),'|dollar|equals_0'),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK0),s('type.integer.int',sK1))))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK1),s('type.integer.int',sK0))))) | s(bool,'T_0') = s(bool,happ(s(fun(bool,bool),'_i_0_0'),s(bool,X74))) | s(bool,'T_0') = s(bool,X74)) )),
  inference(superposition,[],[f1318,f34038])).
fof(f35223,plain,(
  ( ! [X72] : (s(bool,'T_0') != s(bool,happ(s(fun('type.integer.int',bool),happ(s(fun('type.integer.int',fun('type.integer.int',bool)),'|dollar|equals_0'),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK0),s('type.integer.int',sK1))))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK1),s('type.integer.int',sK0))))) | s(bool,'T_0') = s(bool,X72)) ) | $spl7),
  inference(subsumption_resolution,[],[f34853,f1959])).
fof(f34853,plain,(
  ( ! [X72] : (s(bool,'T_0') != s(bool,happ(s(fun('type.integer.int',bool),happ(s(fun('type.integer.int',fun('type.integer.int',bool)),'|dollar|equals_0'),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK0),s('type.integer.int',sK1))))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK1),s('type.integer.int',sK0))))) | s(bool,'T_0') = s(bool,'const.combin.I_1'(s(bool,X72))) | s(bool,'T_0') = s(bool,X72)) ) | $spl7),
  inference(superposition,[],[f1217,f34038])).
fof(f20802,plain,(
  $false | ($spl8 | $spl19)),
  inference(subsumption_resolution,[],[f20078,f2173])).
fof(f20078,plain,(
  s(bool,'T_0') != s(bool,happ(s(fun(bool,bool),'const.combin.I_0'),s(bool,'T_0'))) | ($spl8 | $spl19)),
  inference(backward_demodulation,[],[f2173,f16794])).
fof(f20801,plain,(
  $false | ($spl8 | $spl15)),
  inference(subsumption_resolution,[],[f20054,f2173])).
fof(f20054,plain,(
  s(bool,'T_0') != s(bool,happ(s(fun(bool,bool),'_i_0_0'),s(bool,'T_0'))) | ($spl8 | $spl15)),
  inference(backward_demodulation,[],[f2173,f13235])).
fof(f20800,plain,(
  $false | ($spl8 | $spl11)),
  inference(subsumption_resolution,[],[f19944,f2173])).
fof(f19944,plain,(
  s(bool,'T_0') != s(bool,'const.combin.I_1'(s(bool,'T_0'))) | ($spl8 | $spl11)),
  inference(backward_demodulation,[],[f2173,f2175])).
fof(f20799,plain,(
  $false | $spl8),
  inference(subsumption_resolution,[],[f19927,f130])).
fof(f19927,plain,(
  ~p(s(bool,'T_0')) | $spl8),
  inference(backward_demodulation,[],[f2173,f133])).
fof(f19840,plain,(
  p(s(bool,happ(s(fun(bool,bool),'_dst_x0x1x1_3'(s(fun(bool,fun(bool,bool)),'|dollar|equals_0'),s(fun(bool,bool),'const.combin.I_0'),s(fun(bool,bool),'const.combin.I_0'))),s(bool,'F_0')))) | $spl22),
  inference(cnf_transformation,[],[f19840_D])).
fof(f19840_D,plain,(
  p(s(bool,happ(s(fun(bool,bool),'_dst_x0x1x1_3'(s(fun(bool,fun(bool,bool)),'|dollar|equals_0'),s(fun(bool,bool),'const.combin.I_0'),s(fun(bool,bool),'const.combin.I_0'))),s(bool,'F_0')))) <=> ~$spl22),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl22])])).
fof(f19842,plain,(
  ( ! [X90] : (s(bool,'T_0') = s(bool,X90) | p(s(bool,happ(s(fun(bool,bool),'_dst_x0x1x1_3'(s(fun(bool,fun(bool,bool)),'|dollar|equals_0'),s(fun(bool,bool),'const.combin.I_0'),s(fun(bool,bool),'const.combin.I_0'))),s(bool,'F_0'))))) )),
  inference(forward_demodulation,[],[f19841,f138])).
fof(f19841,plain,(
  ( ! [X90] : (p(s(bool,happ(s(fun(bool,bool),'_dst_x0x1x1_3'(s(fun(bool,fun(bool,bool)),'|dollar|equals_0'),s(fun(bool,bool),'const.combin.I_0'),s(fun(bool,bool),'const.combin.I_0'))),s(bool,'F_0')))) | s(bool,'T_0') = s(bool,'const.combin.I_1'(s(bool,X90)))) )),
  inference(forward_demodulation,[],[f19686,f175])).
fof(f175,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s(X0,happ(s(fun(X3,X0),'_dst_x0x1x1_3'(s(fun(X1,fun(X2,X0)),X4),s(fun(X3,X1),X5),s(fun(X3,X2),X6))),s(X3,X7))) = s(X0,happ(s(fun(X2,X0),happ(s(fun(X1,fun(X2,X0)),X4),s(X1,happ(s(fun(X3,X1),X5),s(X3,X7))))),s(X2,happ(s(fun(X3,X2),X6),s(X3,X7)))))) )),
  inference(cnf_transformation,[],[f97])).
fof(f97,plain,(
  ! [X0,X1,X2,X3,X4,X5,X6,X7] : s(X0,happ(s(fun(X3,X0),'_dst_x0x1x1_3'(s(fun(X1,fun(X2,X0)),X4),s(fun(X3,X1),X5),s(fun(X3,X2),X6))),s(X3,X7))) = s(X0,happ(s(fun(X2,X0),happ(s(fun(X1,fun(X2,X0)),X4),s(X1,happ(s(fun(X3,X1),X5),s(X3,X7))))),s(X2,happ(s(fun(X3,X2),X6),s(X3,X7)))))),
  inference(flattening,[],[f96])).
fof(f96,plain,(
  ! [X0,X1,X2,X3] : ! [X4,X5,X6,X7] : s(X0,happ(s(fun(X3,X0),'_dst_x0x1x1_3'(s(fun(X1,fun(X2,X0)),X4),s(fun(X3,X1),X5),s(fun(X3,X2),X6))),s(X3,X7))) = s(X0,happ(s(fun(X2,X0),happ(s(fun(X1,fun(X2,X0)),X4),s(X1,happ(s(fun(X3,X1),X5),s(X3,X7))))),s(X2,happ(s(fun(X3,X2),X6),s(X3,X7)))))),
  inference(rectify,[],[f34])).
fof(f34,axiom,(
  ! [X39,X40,X43,X37] : ! [X41,X38,X44,X42] : s(X39,happ(s(fun(X37,X39),'_dst_x0x1x1_3'(s(fun(X40,fun(X43,X39)),X41),s(fun(X37,X40),X38),s(fun(X37,X43),X44))),s(X37,X42))) = s(X39,happ(s(fun(X43,X39),happ(s(fun(X40,fun(X43,X39)),X41),s(X40,happ(s(fun(X37,X40),X38),s(X37,X42))))),s(X43,happ(s(fun(X37,X43),X44),s(X37,X42)))))),
  file('thm.integer.INT_ADD_SYM','_dst_x0x1x1_ax')).
fof(f19686,plain,(
  ( ! [X90] : (p(s(bool,happ(s(fun(bool,bool),happ(s(fun(bool,fun(bool,bool)),'|dollar|equals_0'),s(bool,happ(s(fun(bool,bool),'const.combin.I_0'),s(bool,'F_0'))))),s(bool,happ(s(fun(bool,bool),'const.combin.I_0'),s(bool,'F_0')))))) | s(bool,'T_0') = s(bool,'const.combin.I_1'(s(bool,X90)))) )),
  inference(superposition,[],[f19251,f16717])).
fof(f16717,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,'const.combin.I_1'(s(bool,X0))) | s(bool,X0) = s(bool,happ(s(fun(bool,bool),'const.combin.I_0'),s(bool,'F_0')))) )),
  inference(condensation,[],[f16716])).
fof(f16716,plain,(
  ( ! [X12,X11] : (s(bool,X12) = s(bool,happ(s(fun(bool,bool),'const.combin.I_0'),s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X11) | s(bool,'T_0') = s(bool,'const.combin.I_1'(s(bool,X12)))) )),
  inference(duplicate_literal_removal,[],[f16309])).
fof(f16309,plain,(
  ( ! [X12,X11] : (s(bool,X12) = s(bool,happ(s(fun(bool,bool),'const.combin.I_0'),s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X11) | s(bool,'T_0') = s(bool,X11) | s(bool,'T_0') = s(bool,'const.combin.I_1'(s(bool,X12)))) )),
  inference(superposition,[],[f15784,f263])).
fof(f15784,plain,(
  ( ! [X0] : (s(bool,X0) = s(bool,happ(s(fun(bool,bool),'const.combin.I_0'),s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X0)) )),
  inference(condensation,[],[f15783])).
fof(f15783,plain,(
  ( ! [X0,X1] : (s(bool,X1) = s(bool,happ(s(fun(bool,bool),'const.combin.I_0'),s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X1)) )),
  inference(duplicate_literal_removal,[],[f15338])).
fof(f15338,plain,(
  ( ! [X0,X1] : (s(bool,X1) = s(bool,happ(s(fun(bool,bool),'const.combin.I_0'),s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X1) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f290,f137])).
fof(f19838,plain,(
  ( ! [X89] : (p(s(bool,happ(s(fun(bool,bool),'_dst_x0x1x1_3'(s(fun(bool,fun(bool,bool)),'|dollar|equals_0'),s(fun(bool,bool),'const.combin.I_0'),s(fun(bool,bool),'const.combin.I_0'))),s(bool,'F_0')))) | s(bool,'T_0') = s(bool,X89)) )),
  inference(forward_demodulation,[],[f19685,f175])).
fof(f19685,plain,(
  ( ! [X89] : (p(s(bool,happ(s(fun(bool,bool),happ(s(fun(bool,fun(bool,bool)),'|dollar|equals_0'),s(bool,happ(s(fun(bool,bool),'const.combin.I_0'),s(bool,'F_0'))))),s(bool,happ(s(fun(bool,bool),'const.combin.I_0'),s(bool,'F_0')))))) | s(bool,'T_0') = s(bool,X89)) )),
  inference(superposition,[],[f19251,f15784])).
fof(f16891,plain,(
  ( ! [X0] : (s(bool,X0) = s(bool,happ(s(fun(bool,bool),'const.combin.I_0'),s(bool,'F_0')))) ) | $spl20),
  inference(cnf_transformation,[],[f16891_D])).
fof(f16891_D,plain,(
  ( ! [X0] : (s(bool,X0) = s(bool,happ(s(fun(bool,bool),'const.combin.I_0'),s(bool,'F_0')))) ) <=> ~$spl20),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl20])])).
fof(f16794,plain,(
  s(bool,'T_0') != s(bool,happ(s(fun(bool,bool),'const.combin.I_0'),s(bool,'F_0'))) | $spl19),
  inference(cnf_transformation,[],[f16794_D])).
fof(f16794_D,plain,(
  s(bool,'T_0') != s(bool,happ(s(fun(bool,bool),'const.combin.I_0'),s(bool,'F_0'))) <=> ~$spl19),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl19])])).
fof(f16635,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,happ(s(fun(bool,bool),'const.combin.I_0'),s(bool,'F_0'))) | s(bool,X0) = s(bool,happ(s(fun(bool,bool),'const.combin.I_0'),s(bool,'F_0')))) )),
  inference(equality_factoring,[],[f15784])).
fof(f16838,plain,(
  ( ! [X186] : (s(bool,'T_0') != s(bool,happ(s(fun(bool,bool),'const.combin.I_0'),s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X186)) )),
  inference(subsumption_resolution,[],[f16506,f12678])).
fof(f16506,plain,(
  ( ! [X186] : (s(bool,'T_0') != s(bool,happ(s(fun(bool,bool),'const.combin.I_0'),s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X186) | s(bool,'T_0') = s(bool,happ(s(fun(bool,bool),'_i_0_0'),s(bool,X186)))) )),
  inference(superposition,[],[f12678,f15784])).
fof(f16832,plain,(
  ( ! [X137] : (s(bool,'T_0') != s(bool,happ(s(fun(bool,bool),'const.combin.I_0'),s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X137)) )),
  inference(subsumption_resolution,[],[f16491,f1959])).
fof(f16491,plain,(
  ( ! [X137] : (s(bool,'T_0') != s(bool,happ(s(fun(bool,bool),'const.combin.I_0'),s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X137) | s(bool,'T_0') = s(bool,'const.combin.I_1'(s(bool,X137)))) )),
  inference(superposition,[],[f1959,f15784])).
fof(f16799,plain,(
  ( ! [X75] : (s(bool,'T_0') != s(bool,happ(s(fun(bool,bool),'const.combin.I_0'),s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X75)) )),
  inference(subsumption_resolution,[],[f16453,f15920])).
fof(f16453,plain,(
  ( ! [X75] : (s(bool,'T_0') != s(bool,happ(s(fun(bool,bool),'const.combin.I_0'),s(bool,'F_0'))) | s(bool,'T_0') = s(bool,happ(s(fun(bool,bool),'const.combin.I_0'),s(bool,X75))) | s(bool,'T_0') = s(bool,X75)) )),
  inference(superposition,[],[f1319,f15784])).
fof(f16798,plain,(
  ( ! [X74] : (s(bool,'T_0') != s(bool,happ(s(fun(bool,bool),'const.combin.I_0'),s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X74)) )),
  inference(subsumption_resolution,[],[f16452,f12678])).
fof(f16452,plain,(
  ( ! [X74] : (s(bool,'T_0') != s(bool,happ(s(fun(bool,bool),'const.combin.I_0'),s(bool,'F_0'))) | s(bool,'T_0') = s(bool,happ(s(fun(bool,bool),'_i_0_0'),s(bool,X74))) | s(bool,'T_0') = s(bool,X74)) )),
  inference(superposition,[],[f1318,f15784])).
fof(f16792,plain,(
  ( ! [X72] : (s(bool,'T_0') != s(bool,happ(s(fun(bool,bool),'const.combin.I_0'),s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X72)) ) | $spl7),
  inference(subsumption_resolution,[],[f16450,f1959])).
fof(f16450,plain,(
  ( ! [X72] : (s(bool,'T_0') != s(bool,happ(s(fun(bool,bool),'const.combin.I_0'),s(bool,'F_0'))) | s(bool,'T_0') = s(bool,'const.combin.I_1'(s(bool,X72))) | s(bool,'T_0') = s(bool,X72)) ) | $spl7),
  inference(superposition,[],[f1217,f15784])).
fof(f13320,plain,(
  ( ! [X0] : (s(bool,X0) = s(bool,happ(s(fun(bool,bool),'_i_0_0'),s(bool,'F_0')))) ) | $spl16),
  inference(cnf_transformation,[],[f13320_D])).
fof(f13320_D,plain,(
  ( ! [X0] : (s(bool,X0) = s(bool,happ(s(fun(bool,bool),'_i_0_0'),s(bool,'F_0')))) ) <=> ~$spl16),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl16])])).
fof(f13235,plain,(
  s(bool,'T_0') != s(bool,happ(s(fun(bool,bool),'_i_0_0'),s(bool,'F_0'))) | $spl15),
  inference(cnf_transformation,[],[f13235_D])).
fof(f13235_D,plain,(
  s(bool,'T_0') != s(bool,happ(s(fun(bool,bool),'_i_0_0'),s(bool,'F_0'))) <=> ~$spl15),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl15])])).
fof(f13089,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,happ(s(fun(bool,bool),'_i_0_0'),s(bool,'F_0'))) | s(bool,X0) = s(bool,happ(s(fun(bool,bool),'_i_0_0'),s(bool,'F_0')))) )),
  inference(equality_factoring,[],[f12572])).
fof(f12572,plain,(
  ( ! [X0] : (s(bool,X0) = s(bool,happ(s(fun(bool,bool),'_i_0_0'),s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X0)) )),
  inference(condensation,[],[f12571])).
fof(f12571,plain,(
  ( ! [X0,X1] : (s(bool,X1) = s(bool,happ(s(fun(bool,bool),'_i_0_0'),s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X1)) )),
  inference(duplicate_literal_removal,[],[f12170])).
fof(f12170,plain,(
  ( ! [X0,X1] : (s(bool,X1) = s(bool,happ(s(fun(bool,bool),'_i_0_0'),s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X1) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f289,f137])).
fof(f13268,plain,(
  ( ! [X129] : (s(bool,'T_0') != s(bool,happ(s(fun(bool,bool),'_i_0_0'),s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X129)) )),
  inference(subsumption_resolution,[],[f12962,f1959])).
fof(f12962,plain,(
  ( ! [X129] : (s(bool,'T_0') != s(bool,happ(s(fun(bool,bool),'_i_0_0'),s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X129) | s(bool,'T_0') = s(bool,'const.combin.I_1'(s(bool,X129)))) )),
  inference(superposition,[],[f1959,f12572])).
fof(f13258,plain,(
  ( ! [X108] : (s(bool,'T_0') != s(bool,happ(s(fun(bool,bool),'_i_0_0'),s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X108)) )),
  inference(forward_demodulation,[],[f13257,f181])).
fof(f13257,plain,(
  ( ! [X108] : (s(bool,happ(s(fun(bool,bool),'_i_0_0'),s(bool,'F_0'))) != s(bool,happ(s(fun(bool,bool),'const.combin.I_0'),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X108)) )),
  inference(subsumption_resolution,[],[f12950,f1959])).
fof(f12950,plain,(
  ( ! [X108] : (s(bool,happ(s(fun(bool,bool),'_i_0_0'),s(bool,'F_0'))) != s(bool,happ(s(fun(bool,bool),'const.combin.I_0'),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,'const.combin.I_1'(s(bool,X108))) | s(bool,'T_0') = s(bool,X108)) )),
  inference(superposition,[],[f11327,f12572])).
fof(f11327,plain,(
  ( ! [X0] : (s(bool,X0) != s(bool,happ(s(fun(bool,bool),'const.combin.I_0'),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,'const.combin.I_1'(s(bool,X0)))) )),
  inference(condensation,[],[f11326])).
fof(f11326,plain,(
  ( ! [X12,X11] : (s(bool,X12) != s(bool,happ(s(fun(bool,bool),'const.combin.I_0'),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X11) | s(bool,'T_0') = s(bool,'const.combin.I_1'(s(bool,X12)))) )),
  inference(duplicate_literal_removal,[],[f11221])).
fof(f11221,plain,(
  ( ! [X12,X11] : (s(bool,X12) != s(bool,happ(s(fun(bool,bool),'const.combin.I_0'),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X11) | s(bool,'T_0') = s(bool,X11) | s(bool,'T_0') = s(bool,'const.combin.I_1'(s(bool,X12)))) )),
  inference(superposition,[],[f10473,f263])).
fof(f10473,plain,(
  ( ! [X0] : (s(bool,X0) != s(bool,happ(s(fun(bool,bool),'const.combin.I_0'),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X0)) )),
  inference(duplicate_literal_removal,[],[f10455])).
fof(f10455,plain,(
  ( ! [X0] : (s(bool,X0) != s(bool,happ(s(fun(bool,bool),'const.combin.I_0'),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) )),
  inference(equality_factoring,[],[f265])).
fof(f265,plain,(
  ( ! [X26,X27] : (s(bool,X26) = s(bool,X27) | s(bool,'T_0') = s(bool,X27) | s(bool,'T_0') = s(bool,happ(s(fun(bool,bool),'const.combin.I_0'),s(bool,X26)))) )),
  inference(superposition,[],[f187,f181])).
fof(f13256,plain,(
  ( ! [X107] : (s(bool,'T_0') != s(bool,happ(s(fun(bool,bool),'_i_0_0'),s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X107)) )),
  inference(forward_demodulation,[],[f13103,f181])).
fof(f13103,plain,(
  ( ! [X107] : (s(bool,happ(s(fun(bool,bool),'_i_0_0'),s(bool,'F_0'))) != s(bool,happ(s(fun(bool,bool),'const.combin.I_0'),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X107)) )),
  inference(duplicate_literal_removal,[],[f12949])).
fof(f12949,plain,(
  ( ! [X107] : (s(bool,happ(s(fun(bool,bool),'_i_0_0'),s(bool,'F_0'))) != s(bool,happ(s(fun(bool,bool),'const.combin.I_0'),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X107) | s(bool,'T_0') = s(bool,X107)) )),
  inference(superposition,[],[f10473,f12572])).
fof(f13239,plain,(
  ( ! [X70] : (s(bool,'T_0') != s(bool,happ(s(fun(bool,bool),'_i_0_0'),s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X70)) )),
  inference(subsumption_resolution,[],[f12927,f12678])).
fof(f12927,plain,(
  ( ! [X70] : (s(bool,'T_0') != s(bool,happ(s(fun(bool,bool),'_i_0_0'),s(bool,'F_0'))) | s(bool,'T_0') = s(bool,happ(s(fun(bool,bool),'_i_0_0'),s(bool,X70))) | s(bool,'T_0') = s(bool,X70)) )),
  inference(superposition,[],[f1318,f12572])).
fof(f13233,plain,(
  ( ! [X68] : (s(bool,'T_0') != s(bool,happ(s(fun(bool,bool),'_i_0_0'),s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X68)) ) | $spl7),
  inference(subsumption_resolution,[],[f12925,f1959])).
fof(f12925,plain,(
  ( ! [X68] : (s(bool,'T_0') != s(bool,happ(s(fun(bool,bool),'_i_0_0'),s(bool,'F_0'))) | s(bool,'T_0') = s(bool,'const.combin.I_1'(s(bool,X68))) | s(bool,'T_0') = s(bool,X68)) ) | $spl7),
  inference(superposition,[],[f1217,f12572])).
fof(f2188,plain,(
  ( ! [X0] : (s(bool,X0) = s(bool,'const.combin.I_1'(s(bool,'F_0')))) ) | $spl12),
  inference(cnf_transformation,[],[f2188_D])).
fof(f2188_D,plain,(
  ( ! [X0] : (s(bool,X0) = s(bool,'const.combin.I_1'(s(bool,'F_0')))) ) <=> ~$spl12),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl12])])).
fof(f2175,plain,(
  s(bool,'T_0') != s(bool,'const.combin.I_1'(s(bool,'F_0'))) | $spl11),
  inference(cnf_transformation,[],[f2175_D])).
fof(f2175_D,plain,(
  s(bool,'T_0') != s(bool,'const.combin.I_1'(s(bool,'F_0'))) <=> ~$spl11),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl11])])).
fof(f2117,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,'const.combin.I_1'(s(bool,'F_0'))) | s(bool,X0) = s(bool,'const.combin.I_1'(s(bool,'F_0')))) )),
  inference(equality_factoring,[],[f1923])).
fof(f1923,plain,(
  ( ! [X0] : (s(bool,X0) = s(bool,'const.combin.I_1'(s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X0)) )),
  inference(condensation,[],[f1922])).
fof(f1922,plain,(
  ( ! [X0,X1] : (s(bool,X1) = s(bool,'const.combin.I_1'(s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X1)) )),
  inference(duplicate_literal_removal,[],[f1759])).
fof(f1759,plain,(
  ( ! [X0,X1] : (s(bool,X1) = s(bool,'const.combin.I_1'(s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X1) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f288,f137])).
fof(f2172,plain,(
  ( ! [X30] : (s(bool,'T_0') != s(bool,'const.combin.I_1'(s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X30)) ) | $spl7),
  inference(subsumption_resolution,[],[f2064,f1959])).
fof(f2064,plain,(
  ( ! [X30] : (s(bool,'T_0') != s(bool,'const.combin.I_1'(s(bool,'F_0'))) | s(bool,'T_0') = s(bool,'const.combin.I_1'(s(bool,X30))) | s(bool,'T_0') = s(bool,X30)) ) | $spl7),
  inference(superposition,[],[f1217,f1923])).
fof(f743,plain,(
  $false | $spl1),
  inference(subsumption_resolution,[],[f742,f130])).
fof(f742,plain,(
  ~p(s(bool,'T_0')) | $spl1),
  inference(backward_demodulation,[],[f731,f185])).
fof(f185,plain,(
  ~p(s(bool,'const.integer.tint_eq_2'(s('type.pair.prod'('type.num.num','type.num.num'),'const.integer.tint_add_2'(s('type.pair.prod'('type.num.num','type.num.num'),sK2),s('type.pair.prod'('type.num.num','type.num.num'),sK3))),s('type.pair.prod'('type.num.num','type.num.num'),'const.integer.tint_add_2'(s('type.pair.prod'('type.num.num','type.num.num'),sK2),s('type.pair.prod'('type.num.num','type.num.num'),sK3)))))) | $spl1),
  inference(forward_demodulation,[],[f184,f144])).
fof(f184,plain,(
  ~p(s(bool,'const.integer.tint_eq_2'(s('type.pair.prod'('type.num.num','type.num.num'),'const.integer.tint_add_2'(s('type.pair.prod'('type.num.num','type.num.num'),sK3),s('type.pair.prod'('type.num.num','type.num.num'),sK2))),s('type.pair.prod'('type.num.num','type.num.num'),'const.integer.tint_add_2'(s('type.pair.prod'('type.num.num','type.num.num'),sK2),s('type.pair.prod'('type.num.num','type.num.num'),sK3)))))) | $spl1),
  inference(forward_demodulation,[],[f183,f147])).
fof(f147,plain,(
  ( ! [X0,X1] : (s('type.pair.prod'('type.num.num','type.num.num'),'const.integer.tint_add_2'(s('type.pair.prod'('type.num.num','type.num.num'),X0),s('type.pair.prod'('type.num.num','type.num.num'),X1))) = s('type.pair.prod'('type.num.num','type.num.num'),happ(s(fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num')),happ(s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num'))),'const.integer.tint_add_0'),s('type.pair.prod'('type.num.num','type.num.num'),X0))),s('type.pair.prod'('type.num.num','type.num.num'),X1)))) )),
  inference(cnf_transformation,[],[f60])).
fof(f60,plain,(
  ! [X0,X1] : s('type.pair.prod'('type.num.num','type.num.num'),'const.integer.tint_add_2'(s('type.pair.prod'('type.num.num','type.num.num'),X0),s('type.pair.prod'('type.num.num','type.num.num'),X1))) = s('type.pair.prod'('type.num.num','type.num.num'),happ(s(fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num')),happ(s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num'))),'const.integer.tint_add_0'),s('type.pair.prod'('type.num.num','type.num.num'),X0))),s('type.pair.prod'('type.num.num','type.num.num'),X1)))),
  inference(rectify,[],[f29])).
fof(f29,axiom,(
  ! [X35,X36] : s('type.pair.prod'('type.num.num','type.num.num'),'const.integer.tint_add_2'(s('type.pair.prod'('type.num.num','type.num.num'),X35),s('type.pair.prod'('type.num.num','type.num.num'),X36))) = s('type.pair.prod'('type.num.num','type.num.num'),happ(s(fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num')),happ(s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num'))),'const.integer.tint_add_0'),s('type.pair.prod'('type.num.num','type.num.num'),X35))),s('type.pair.prod'('type.num.num','type.num.num'),X36)))),
  file('thm.integer.INT_ADD_SYM','ARITY_0_2_const.integer.tint_add')).
fof(f183,plain,(
  ~p(s(bool,'const.integer.tint_eq_2'(s('type.pair.prod'('type.num.num','type.num.num'),happ(s(fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num')),happ(s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num'))),'const.integer.tint_add_0'),s('type.pair.prod'('type.num.num','type.num.num'),sK3))),s('type.pair.prod'('type.num.num','type.num.num'),sK2))),s('type.pair.prod'('type.num.num','type.num.num'),'const.integer.tint_add_2'(s('type.pair.prod'('type.num.num','type.num.num'),sK2),s('type.pair.prod'('type.num.num','type.num.num'),sK3)))))) | $spl1),
  inference(forward_demodulation,[],[f182,f147])).
fof(f182,plain,(
  ~p(s(bool,'const.integer.tint_eq_2'(s('type.pair.prod'('type.num.num','type.num.num'),happ(s(fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num')),happ(s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num'))),'const.integer.tint_add_0'),s('type.pair.prod'('type.num.num','type.num.num'),sK3))),s('type.pair.prod'('type.num.num','type.num.num'),sK2))),s('type.pair.prod'('type.num.num','type.num.num'),happ(s(fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num')),happ(s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num'))),'const.integer.tint_add_0'),s('type.pair.prod'('type.num.num','type.num.num'),sK2))),s('type.pair.prod'('type.num.num','type.num.num'),sK3)))))) | $spl1),
  inference(forward_demodulation,[],[f178,f146])).
fof(f146,plain,(
  ( ! [X0,X1] : (s(bool,'const.integer.tint_eq_2'(s('type.pair.prod'('type.num.num','type.num.num'),X0),s('type.pair.prod'('type.num.num','type.num.num'),X1))) = s(bool,happ(s(fun('type.pair.prod'('type.num.num','type.num.num'),bool),happ(s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),bool)),'const.integer.tint_eq_0'),s('type.pair.prod'('type.num.num','type.num.num'),X0))),s('type.pair.prod'('type.num.num','type.num.num'),X1)))) )),
  inference(cnf_transformation,[],[f59])).
fof(f59,plain,(
  ! [X0,X1] : s(bool,'const.integer.tint_eq_2'(s('type.pair.prod'('type.num.num','type.num.num'),X0),s('type.pair.prod'('type.num.num','type.num.num'),X1))) = s(bool,happ(s(fun('type.pair.prod'('type.num.num','type.num.num'),bool),happ(s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),bool)),'const.integer.tint_eq_0'),s('type.pair.prod'('type.num.num','type.num.num'),X0))),s('type.pair.prod'('type.num.num','type.num.num'),X1)))),
  inference(rectify,[],[f30])).
fof(f30,axiom,(
  ! [X35,X36] : s(bool,'const.integer.tint_eq_2'(s('type.pair.prod'('type.num.num','type.num.num'),X35),s('type.pair.prod'('type.num.num','type.num.num'),X36))) = s(bool,happ(s(fun('type.pair.prod'('type.num.num','type.num.num'),bool),happ(s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),bool)),'const.integer.tint_eq_0'),s('type.pair.prod'('type.num.num','type.num.num'),X35))),s('type.pair.prod'('type.num.num','type.num.num'),X36)))),
  file('thm.integer.INT_ADD_SYM','ARITY_0_2_const.integer.tint_eq')).
fof(f731,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,'const.integer.tint_eq_2'(s('type.pair.prod'('type.num.num','type.num.num'),X0),s('type.pair.prod'('type.num.num','type.num.num'),X0)))) )),
  inference(unit_resulting_resolution,[],[f711,f190])).
fof(f711,plain,(
  ( ! [X0] : (p(s(bool,'const.integer.tint_eq_2'(s('type.pair.prod'('type.num.num','type.num.num'),X0),s('type.pair.prod'('type.num.num','type.num.num'),X0))))) )),
  inference(forward_demodulation,[],[f697,f181])).
fof(f697,plain,(
  ( ! [X0] : (p(s(bool,'const.integer.tint_eq_2'(s('type.pair.prod'('type.num.num','type.num.num'),happ(s(fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num')),'const.combin.I_0'),s('type.pair.prod'('type.num.num','type.num.num'),X0))),s('type.pair.prod'('type.num.num','type.num.num'),X0))))) )),
  inference(unit_resulting_resolution,[],[f181,f148])).
fof(f148,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.integer.tint_eq_2'(s('type.pair.prod'('type.num.num','type.num.num'),X0),s('type.pair.prod'('type.num.num','type.num.num'),X1)))) | s('type.pair.prod'('type.num.num','type.num.num'),X0) != s('type.pair.prod'('type.num.num','type.num.num'),X1)) )),
  inference(cnf_transformation,[],[f102])).
fof(f102,plain,(
  ! [X0,X1] : (s('type.pair.prod'('type.num.num','type.num.num'),X0) != s('type.pair.prod'('type.num.num','type.num.num'),X1) | p(s(bool,'const.integer.tint_eq_2'(s('type.pair.prod'('type.num.num','type.num.num'),X0),s('type.pair.prod'('type.num.num','type.num.num'),X1)))))),
  inference(ennf_transformation,[],[f61])).
fof(f61,plain,(
  ! [X0,X1] : (s('type.pair.prod'('type.num.num','type.num.num'),X0) = s('type.pair.prod'('type.num.num','type.num.num'),X1) => p(s(bool,'const.integer.tint_eq_2'(s('type.pair.prod'('type.num.num','type.num.num'),X0),s('type.pair.prod'('type.num.num','type.num.num'),X1)))))),
  inference(rectify,[],[f10])).
fof(f10,axiom,(
  ! [X12,X13] : (s('type.pair.prod'('type.num.num','type.num.num'),X12) = s('type.pair.prod'('type.num.num','type.num.num'),X13) => p(s(bool,'const.integer.tint_eq_2'(s('type.pair.prod'('type.num.num','type.num.num'),X12),s('type.pair.prod'('type.num.num','type.num.num'),X13)))))),
  file('thm.integer.INT_ADD_SYM','thm.integer.TINT_EQ_AP')).
fof(f197,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0)) ) | $spl4),
  inference(cnf_transformation,[],[f197_D])).
fof(f197_D,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0)) ) <=> ~$spl4),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl4])])).
fof(f199,plain,(
  s(bool,'T_0') != s(bool,'F_0') | $spl7),
  inference(cnf_transformation,[],[f199_D])).
fof(f199_D,plain,(
  s(bool,'T_0') != s(bool,'F_0') <=> ~$spl7),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl7])])).
fof(f196,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,'F_0') = s(bool,X0)) )),
  inference(equality_factoring,[],[f137])).
fof(f178,plain,(
  ~p(s(bool,happ(s(fun('type.pair.prod'('type.num.num','type.num.num'),bool),happ(s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),bool)),'const.integer.tint_eq_0'),s('type.pair.prod'('type.num.num','type.num.num'),happ(s(fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num')),happ(s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num'))),'const.integer.tint_add_0'),s('type.pair.prod'('type.num.num','type.num.num'),sK3))),s('type.pair.prod'('type.num.num','type.num.num'),sK2))))),s('type.pair.prod'('type.num.num','type.num.num'),happ(s(fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num')),happ(s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num'))),'const.integer.tint_add_0'),s('type.pair.prod'('type.num.num','type.num.num'),sK2))),s('type.pair.prod'('type.num.num','type.num.num'),sK3)))))) | $spl1),
  inference(cnf_transformation,[],[f178_D])).
fof(f178_D,plain,(
  ~p(s(bool,happ(s(fun('type.pair.prod'('type.num.num','type.num.num'),bool),happ(s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),bool)),'const.integer.tint_eq_0'),s('type.pair.prod'('type.num.num','type.num.num'),happ(s(fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num')),happ(s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num'))),'const.integer.tint_add_0'),s('type.pair.prod'('type.num.num','type.num.num'),sK3))),s('type.pair.prod'('type.num.num','type.num.num'),sK2))))),s('type.pair.prod'('type.num.num','type.num.num'),happ(s(fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num')),happ(s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num'))),'const.integer.tint_add_0'),s('type.pair.prod'('type.num.num','type.num.num'),sK2))),s('type.pair.prod'('type.num.num','type.num.num'),sK3)))))) <=> ~$spl1),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1])])).
fof(f180,plain,(
  p(s(bool,happ(s(fun(fun('type.pair.prod'('type.num.num','type.num.num'),bool),bool),'const.bool.RES_FORALL_1'(s(fun('type.pair.prod'('type.num.num','type.num.num'),bool),'const.quotient.respects_1'(s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),bool)),'const.integer.tint_eq_0'))))),s(fun('type.pair.prod'('type.num.num','type.num.num'),bool),'_dst_x0x1_2'(s(fun(fun('type.pair.prod'('type.num.num','type.num.num'),bool),bool),'const.bool.RES_FORALL_1'(s(fun('type.pair.prod'('type.num.num','type.num.num'),bool),'const.quotient.respects_1'(s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),bool)),'const.integer.tint_eq_0'))))),s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),bool)),'_dst_x00x11x11_3'(s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),bool)),'const.integer.tint_eq_0'),s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num'))),'_dst_x01x10_2'(s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num'))),'const.integer.tint_add_0'),s(fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num')),'_i_0_0'))),s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num'))),'const.integer.tint_add_0')))))))) | $spl2),
  inference(cnf_transformation,[],[f180_D])).
fof(f180_D,plain,(
  p(s(bool,happ(s(fun(fun('type.pair.prod'('type.num.num','type.num.num'),bool),bool),'const.bool.RES_FORALL_1'(s(fun('type.pair.prod'('type.num.num','type.num.num'),bool),'const.quotient.respects_1'(s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),bool)),'const.integer.tint_eq_0'))))),s(fun('type.pair.prod'('type.num.num','type.num.num'),bool),'_dst_x0x1_2'(s(fun(fun('type.pair.prod'('type.num.num','type.num.num'),bool),bool),'const.bool.RES_FORALL_1'(s(fun('type.pair.prod'('type.num.num','type.num.num'),bool),'const.quotient.respects_1'(s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),bool)),'const.integer.tint_eq_0'))))),s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),bool)),'_dst_x00x11x11_3'(s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),bool)),'const.integer.tint_eq_0'),s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num'))),'_dst_x01x10_2'(s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num'))),'const.integer.tint_add_0'),s(fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num')),'_i_0_0'))),s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num'))),'const.integer.tint_add_0')))))))) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f132,plain,(
  p(s(bool,happ(s(fun(fun('type.pair.prod'('type.num.num','type.num.num'),bool),bool),'const.bool.RES_FORALL_1'(s(fun('type.pair.prod'('type.num.num','type.num.num'),bool),'const.quotient.respects_1'(s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),bool)),'const.integer.tint_eq_0'))))),s(fun('type.pair.prod'('type.num.num','type.num.num'),bool),'_dst_x0x1_2'(s(fun(fun('type.pair.prod'('type.num.num','type.num.num'),bool),bool),'const.bool.RES_FORALL_1'(s(fun('type.pair.prod'('type.num.num','type.num.num'),bool),'const.quotient.respects_1'(s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),bool)),'const.integer.tint_eq_0'))))),s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),bool)),'_dst_x00x11x11_3'(s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),bool)),'const.integer.tint_eq_0'),s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num'))),'_dst_x01x10_2'(s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num'))),'const.integer.tint_add_0'),s(fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num')),'_i_0_0'))),s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num'))),'const.integer.tint_add_0')))))))) | ~p(s(bool,happ(s(fun('type.pair.prod'('type.num.num','type.num.num'),bool),happ(s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),bool)),'const.integer.tint_eq_0'),s('type.pair.prod'('type.num.num','type.num.num'),happ(s(fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num')),happ(s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num'))),'const.integer.tint_add_0'),s('type.pair.prod'('type.num.num','type.num.num'),sK3))),s('type.pair.prod'('type.num.num','type.num.num'),sK2))))),s('type.pair.prod'('type.num.num','type.num.num'),happ(s(fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num')),happ(s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num'))),'const.integer.tint_add_0'),s('type.pair.prod'('type.num.num','type.num.num'),sK2))),s('type.pair.prod'('type.num.num','type.num.num'),sK3))))))),
  inference(cnf_transformation,[],[f120])).
fof(f120,plain,(
  ~p(s(bool,happ(s(fun('type.pair.prod'('type.num.num','type.num.num'),bool),happ(s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),bool)),'const.integer.tint_eq_0'),s('type.pair.prod'('type.num.num','type.num.num'),happ(s(fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num')),happ(s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num'))),'const.integer.tint_add_0'),s('type.pair.prod'('type.num.num','type.num.num'),sK3))),s('type.pair.prod'('type.num.num','type.num.num'),sK2))))),s('type.pair.prod'('type.num.num','type.num.num'),happ(s(fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num')),happ(s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num'))),'const.integer.tint_add_0'),s('type.pair.prod'('type.num.num','type.num.num'),sK2))),s('type.pair.prod'('type.num.num','type.num.num'),sK3)))))) | p(s(bool,happ(s(fun(fun('type.pair.prod'('type.num.num','type.num.num'),bool),bool),'const.bool.RES_FORALL_1'(s(fun('type.pair.prod'('type.num.num','type.num.num'),bool),'const.quotient.respects_1'(s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),bool)),'const.integer.tint_eq_0'))))),s(fun('type.pair.prod'('type.num.num','type.num.num'),bool),'_dst_x0x1_2'(s(fun(fun('type.pair.prod'('type.num.num','type.num.num'),bool),bool),'const.bool.RES_FORALL_1'(s(fun('type.pair.prod'('type.num.num','type.num.num'),bool),'const.quotient.respects_1'(s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),bool)),'const.integer.tint_eq_0'))))),s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),bool)),'_dst_x00x11x11_3'(s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),bool)),'const.integer.tint_eq_0'),s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num'))),'_dst_x01x10_2'(s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num'))),'const.integer.tint_add_0'),s(fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num')),'_i_0_0'))),s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num'))),'const.integer.tint_add_0'))))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK2,sK3])],[f101])).
fof(f101,plain,(
  ? [X0,X1] : ~p(s(bool,happ(s(fun('type.pair.prod'('type.num.num','type.num.num'),bool),happ(s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),bool)),'const.integer.tint_eq_0'),s('type.pair.prod'('type.num.num','type.num.num'),happ(s(fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num')),happ(s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num'))),'const.integer.tint_add_0'),s('type.pair.prod'('type.num.num','type.num.num'),X1))),s('type.pair.prod'('type.num.num','type.num.num'),X0))))),s('type.pair.prod'('type.num.num','type.num.num'),happ(s(fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num')),happ(s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num'))),'const.integer.tint_add_0'),s('type.pair.prod'('type.num.num','type.num.num'),X0))),s('type.pair.prod'('type.num.num','type.num.num'),X1)))))) | p(s(bool,happ(s(fun(fun('type.pair.prod'('type.num.num','type.num.num'),bool),bool),'const.bool.RES_FORALL_1'(s(fun('type.pair.prod'('type.num.num','type.num.num'),bool),'const.quotient.respects_1'(s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),bool)),'const.integer.tint_eq_0'))))),s(fun('type.pair.prod'('type.num.num','type.num.num'),bool),'_dst_x0x1_2'(s(fun(fun('type.pair.prod'('type.num.num','type.num.num'),bool),bool),'const.bool.RES_FORALL_1'(s(fun('type.pair.prod'('type.num.num','type.num.num'),bool),'const.quotient.respects_1'(s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),bool)),'const.integer.tint_eq_0'))))),s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),bool)),'_dst_x00x11x11_3'(s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),bool)),'const.integer.tint_eq_0'),s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num'))),'_dst_x01x10_2'(s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num'))),'const.integer.tint_add_0'),s(fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num')),'_i_0_0'))),s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num'))),'const.integer.tint_add_0'))))))))),
  inference(ennf_transformation,[],[f42])).
fof(f42,plain,(
  ! [X0,X1] : p(s(bool,happ(s(fun('type.pair.prod'('type.num.num','type.num.num'),bool),happ(s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),bool)),'const.integer.tint_eq_0'),s('type.pair.prod'('type.num.num','type.num.num'),happ(s(fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num')),happ(s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num'))),'const.integer.tint_add_0'),s('type.pair.prod'('type.num.num','type.num.num'),X1))),s('type.pair.prod'('type.num.num','type.num.num'),X0))))),s('type.pair.prod'('type.num.num','type.num.num'),happ(s(fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num')),happ(s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num'))),'const.integer.tint_add_0'),s('type.pair.prod'('type.num.num','type.num.num'),X0))),s('type.pair.prod'('type.num.num','type.num.num'),X1)))))) => p(s(bool,happ(s(fun(fun('type.pair.prod'('type.num.num','type.num.num'),bool),bool),'const.bool.RES_FORALL_1'(s(fun('type.pair.prod'('type.num.num','type.num.num'),bool),'const.quotient.respects_1'(s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),bool)),'const.integer.tint_eq_0'))))),s(fun('type.pair.prod'('type.num.num','type.num.num'),bool),'_dst_x0x1_2'(s(fun(fun('type.pair.prod'('type.num.num','type.num.num'),bool),bool),'const.bool.RES_FORALL_1'(s(fun('type.pair.prod'('type.num.num','type.num.num'),bool),'const.quotient.respects_1'(s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),bool)),'const.integer.tint_eq_0'))))),s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),bool)),'_dst_x00x11x11_3'(s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),bool)),'const.integer.tint_eq_0'),s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num'))),'_dst_x01x10_2'(s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num'))),'const.integer.tint_add_0'),s(fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num')),'_i_0_0'))),s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num'))),'const.integer.tint_add_0'))))))))),
  inference(rectify,[],[f15])).
fof(f15,axiom,(
  ! [X6,X7] : p(s(bool,happ(s(fun('type.pair.prod'('type.num.num','type.num.num'),bool),happ(s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),bool)),'const.integer.tint_eq_0'),s('type.pair.prod'('type.num.num','type.num.num'),happ(s(fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num')),happ(s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num'))),'const.integer.tint_add_0'),s('type.pair.prod'('type.num.num','type.num.num'),X7))),s('type.pair.prod'('type.num.num','type.num.num'),X6))))),s('type.pair.prod'('type.num.num','type.num.num'),happ(s(fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num')),happ(s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num'))),'const.integer.tint_add_0'),s('type.pair.prod'('type.num.num','type.num.num'),X6))),s('type.pair.prod'('type.num.num','type.num.num'),X7)))))) => p(s(bool,happ(s(fun(fun('type.pair.prod'('type.num.num','type.num.num'),bool),bool),'const.bool.RES_FORALL_1'(s(fun('type.pair.prod'('type.num.num','type.num.num'),bool),'const.quotient.respects_1'(s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),bool)),'const.integer.tint_eq_0'))))),s(fun('type.pair.prod'('type.num.num','type.num.num'),bool),'_dst_x0x1_2'(s(fun(fun('type.pair.prod'('type.num.num','type.num.num'),bool),bool),'const.bool.RES_FORALL_1'(s(fun('type.pair.prod'('type.num.num','type.num.num'),bool),'const.quotient.respects_1'(s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),bool)),'const.integer.tint_eq_0'))))),s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),bool)),'_dst_x00x11x11_3'(s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),bool)),'const.integer.tint_eq_0'),s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num'))),'_dst_x01x10_2'(s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num'))),'const.integer.tint_add_0'),s(fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num')),'_i_0_0'))),s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num'))),'const.integer.tint_add_0'))))))))),
  file('thm.integer.INT_ADD_SYM','thm.integer.integer_66_prove_ltb')).
% SZS output end Proof for thm.integer
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 149
% Passive clauses: 2108
% Generated clauses: 37082
% Final active clauses: 96
% Final passive clauses: 1145
% Input formulas: 39
% Initial clauses: 48
% 
% Duplicate literals: 1645
% Trivial inequalities: 289
% Fw subsumption resolutions: 3038
% Fw demodulations: 6845
% Bw demodulations: 837
% Condensations: 3605
% 
% Simple tautologies: 316
% Equational tautologies: 228
% Forward subsumptions: 18935
% Fw demodulations to eq. taut.: 39
% Bw demodulations to eq. taut.: 26
% 
% Unit resulting resolution: 1457
% Forward superposition: 10612
% Backward superposition: 7489
% Self superposition: 284
% Equality factoring: 103
% Equality resolution: 25
% 
% Split clauses: 32
% Split components: 64
% SAT solver clauses: 2183
% SAT solver unit clauses: 230
% SAT solver binary clauses: 796
% 
% Sat splits: 32
% Sat splitting refutations: 9
% 
% Memory used [KB]: 23794
% Time elapsed: 2.073 s
% ------------------------------
% ------------------------------
% Success in time 3.396 s
