Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 300 next slice time: 5
dis+11_7_3 on thm.arithmetic
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.arithmetic
% SZS output start Proof for thm.arithmetic
fof(f1039,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f1002,f984,f30,f31,f50,f46,f369,f374,f372,f430,f32,f51,f49,f47,f1012,f48])).
fof(f48,plain,(
  p(s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK0),s('type.num.num',sK2))),s('type.num.num',sK1)))) | $spl2),
  inference(cnf_transformation,[],[f48_D])).
fof(f48_D,plain,(
  p(s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK0),s('type.num.num',sK2))),s('type.num.num',sK1)))) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f1012,plain,(
  p(s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK0),s('type.num.num',sK2))),s('type.num.num',sK1)))) | $spl0),
  inference(forward_demodulation,[],[f1001,f40])).
fof(f40,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f17])).
fof(f17,plain,(
  ! [X0,X1] : s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X0)))),
  inference(rectify,[],[f8])).
fof(f8,axiom,(
  ! [X6,X7] : s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num',X7))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X7),s('type.num.num',X6)))),
  file('thm.arithmetic.SUB_LEFT_GREATER','thm.arithmetic.ADD_SYM')).
fof(f1001,plain,(
  p(s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK2),s('type.num.num',sK0))),s('type.num.num',sK1)))) | $spl0),
  inference(resolution,[],[f46,f533])).
fof(f533,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.arithmetic.>_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X0),s('type.num.num',X1)))))) | p(s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X2))),s('type.num.num',X0))))) )),
  inference(forward_demodulation,[],[f532,f39])).
fof(f39,plain,(
  ( ! [X0,X1] : (s(bool,'const.arithmetic.>_2'(s('type.num.num',X0),s('type.num.num',X1))) = s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f16])).
fof(f16,plain,(
  ! [X0,X1] : s(bool,'const.arithmetic.>_2'(s('type.num.num',X0),s('type.num.num',X1))) = s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X0)))),
  inference(rectify,[],[f7])).
fof(f7,axiom,(
  ! [X6,X7] : s(bool,'const.arithmetic.>_2'(s('type.num.num',X6),s('type.num.num',X7))) = s(bool,'const.prim_rec.<_2'(s('type.num.num',X7),s('type.num.num',X6)))),
  file('thm.arithmetic.SUB_LEFT_GREATER','thm.arithmetic.GREATER_DEF')).
fof(f532,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X2))),s('type.num.num',X0)))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num',X2))))) )),
  inference(forward_demodulation,[],[f42,f39])).
fof(f42,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X2)))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num',X2))))) )),
  inference(cnf_transformation,[],[f29])).
fof(f29,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num',X2)))) | (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X2)))))) & p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X2)))))) & (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X2)))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X2)))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num',X2))))))),
  inference(flattening,[],[f28])).
fof(f28,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num',X2)))) | (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X2)))))) & p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X2)))))) & ((~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X2)))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X2))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num',X2))))))),
  inference(nnf_transformation,[],[f20])).
fof(f20,plain,(
  ! [X0,X1,X2] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num',X2)))) <=> (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X2)))))) & p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X2))))))),
  inference(rectify,[],[f9])).
fof(f9,axiom,(
  ! [X6,X7,X8] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X6),s('type.num.num',X7))),s('type.num.num',X8)))) <=> (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X6),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X7),s('type.num.num',X8)))))) & p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X8))))))),
  file('thm.arithmetic.SUB_LEFT_GREATER','thm.arithmetic.SUB_RIGHT_LESS')).
fof(f47,plain,(
  ~p(s(bool,'const.arithmetic.>_2'(s('type.num.num',sK0),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',sK1),s('type.num.num',sK2)))))) | $spl1),
  inference(cnf_transformation,[],[f47_D])).
fof(f47_D,plain,(
  ~p(s(bool,'const.arithmetic.>_2'(s('type.num.num',sK0),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',sK1),s('type.num.num',sK2)))))) <=> ~$spl1),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1])])).
fof(f49,plain,(
  ~p(s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK0),s('type.num.num',sK2))),s('type.num.num',sK1)))) | $spl3),
  inference(cnf_transformation,[],[f49_D])).
fof(f49_D,plain,(
  ~p(s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK0),s('type.num.num',sK2))),s('type.num.num',sK1)))) <=> ~$spl3),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl3])])).
fof(f51,plain,(
  ~p(s(bool,'const.arithmetic.>_2'(s('type.num.num',sK0),s('type.num.num','const.num.|48|_0')))) | $spl5),
  inference(cnf_transformation,[],[f51_D])).
fof(f51_D,plain,(
  ~p(s(bool,'const.arithmetic.>_2'(s('type.num.num',sK0),s('type.num.num','const.num.|48|_0')))) <=> ~$spl5),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl5])])).
fof(f32,plain,(
  ~p(s(bool,'const.arithmetic.>_2'(s('type.num.num',sK0),s('type.num.num','const.num.|48|_0')))) | ~p(s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK0),s('type.num.num',sK2))),s('type.num.num',sK1)))) | ~p(s(bool,'const.arithmetic.>_2'(s('type.num.num',sK0),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',sK1),s('type.num.num',sK2))))))),
  inference(cnf_transformation,[],[f25])).
fof(f25,plain,(
  (p(s(bool,'const.arithmetic.>_2'(s('type.num.num',sK0),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',sK1),s('type.num.num',sK2)))))) | (p(s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK0),s('type.num.num',sK2))),s('type.num.num',sK1)))) & p(s(bool,'const.arithmetic.>_2'(s('type.num.num',sK0),s('type.num.num','const.num.|48|_0')))))) & (~p(s(bool,'const.arithmetic.>_2'(s('type.num.num',sK0),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',sK1),s('type.num.num',sK2)))))) | ~p(s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK0),s('type.num.num',sK2))),s('type.num.num',sK1)))) | ~p(s(bool,'const.arithmetic.>_2'(s('type.num.num',sK0),s('type.num.num','const.num.|48|_0')))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2])],[f24])).
fof(f24,plain,(
  ? [X0,X1,X2] : ((p(s(bool,'const.arithmetic.>_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X1),s('type.num.num',X2)))))) | (p(s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X2))),s('type.num.num',X1)))) & p(s(bool,'const.arithmetic.>_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))))) & (~p(s(bool,'const.arithmetic.>_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X1),s('type.num.num',X2)))))) | ~p(s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X2))),s('type.num.num',X1)))) | ~p(s(bool,'const.arithmetic.>_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0'))))))),
  inference(flattening,[],[f23])).
fof(f23,plain,(
  ? [X0,X1,X2] : ((p(s(bool,'const.arithmetic.>_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X1),s('type.num.num',X2)))))) | (p(s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X2))),s('type.num.num',X1)))) & p(s(bool,'const.arithmetic.>_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))))) & (~p(s(bool,'const.arithmetic.>_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X1),s('type.num.num',X2)))))) | (~p(s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X2))),s('type.num.num',X1)))) | ~p(s(bool,'const.arithmetic.>_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))))))),
  inference(nnf_transformation,[],[f21])).
fof(f21,plain,(
  ? [X0,X1,X2] : (p(s(bool,'const.arithmetic.>_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X1),s('type.num.num',X2)))))) <~> (p(s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X2))),s('type.num.num',X1)))) & p(s(bool,'const.arithmetic.>_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0'))))))),
  inference(ennf_transformation,[],[f12])).
fof(f12,plain,(
  ~! [X0,X1,X2] : (p(s(bool,'const.arithmetic.>_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X1),s('type.num.num',X2)))))) <=> (p(s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X2))),s('type.num.num',X1)))) & p(s(bool,'const.arithmetic.>_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0'))))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7,X8] : (p(s(bool,'const.arithmetic.>_2'(s('type.num.num',X6),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X7),s('type.num.num',X8)))))) <=> (p(s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num',X8))),s('type.num.num',X7)))) & p(s(bool,'const.arithmetic.>_2'(s('type.num.num',X6),s('type.num.num','const.num.|48|_0'))))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7,X8] : (p(s(bool,'const.arithmetic.>_2'(s('type.num.num',X6),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X7),s('type.num.num',X8)))))) <=> (p(s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num',X8))),s('type.num.num',X7)))) & p(s(bool,'const.arithmetic.>_2'(s('type.num.num',X6),s('type.num.num','const.num.|48|_0'))))))),
  file('thm.arithmetic.SUB_LEFT_GREATER','thm.arithmetic.SUB_LEFT_GREATER')).
fof(f430,plain,(
  $false | $spl10),
  inference(subsumption_resolution,[],[f379,f33])).
fof(f33,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f10])).
fof(f10,axiom,(
  p(s(bool,'T_0'))),
  file('thm.arithmetic.SUB_LEFT_GREATER','thm.bool.TRUTH')).
fof(f379,plain,(
  ~p(s(bool,'T_0')) | $spl10),
  inference(backward_demodulation,[],[f372,f35])).
fof(f35,plain,(
  ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f13])).
fof(f13,plain,(
  ~p(s(bool,'F_0'))),
  inference(flattening,[],[f2])).
fof(f2,axiom,(
  ~p(s(bool,'F_0'))),
  file('thm.arithmetic.SUB_LEFT_GREATER',aHL_FALSITY)).
fof(f372,plain,(
  ( ! [X9] : (s(bool,'T_0') = s(bool,X9)) ) | $spl10),
  inference(cnf_transformation,[],[f372_D])).
fof(f372_D,plain,(
  ( ! [X9] : (s(bool,'T_0') = s(bool,X9)) ) <=> ~$spl10),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl10])])).
fof(f374,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.>_2'(s('type.num.num',sK0),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',sK1),s('type.num.num',sK2))))) | $spl12),
  inference(cnf_transformation,[],[f374_D])).
fof(f374_D,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.>_2'(s('type.num.num',sK0),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',sK1),s('type.num.num',sK2))))) <=> ~$spl12),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl12])])).
fof(f369,plain,(
  ( ! [X9] : (s(bool,'F_0') = s(bool,'const.arithmetic.>_2'(s('type.num.num',sK0),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',sK1),s('type.num.num',sK2))))) | s(bool,'T_0') = s(bool,X9)) ) | $spl1),
  inference(duplicate_literal_removal,[],[f325])).
fof(f325,plain,(
  ( ! [X9] : (s(bool,'F_0') = s(bool,'const.arithmetic.>_2'(s('type.num.num',sK0),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',sK1),s('type.num.num',sK2))))) | s(bool,'T_0') = s(bool,X9) | s(bool,'T_0') = s(bool,X9)) ) | $spl1),
  inference(superposition,[],[f260,f36])).
fof(f36,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f3])).
fof(f3,axiom,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) | s(bool,'F_0') = s(bool,X0))),
  file('thm.arithmetic.SUB_LEFT_GREATER',aHL_BOOL_CASES)).
fof(f260,plain,(
  ( ! [X9] : (s(bool,X9) = s(bool,'const.arithmetic.>_2'(s('type.num.num',sK0),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',sK1),s('type.num.num',sK2))))) | s(bool,'T_0') = s(bool,X9)) ) | $spl1),
  inference(subsumption_resolution,[],[f180,f33])).
fof(f180,plain,(
  ( ! [X9] : (~p(s(bool,'T_0')) | s(bool,X9) = s(bool,'const.arithmetic.>_2'(s('type.num.num',sK0),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',sK1),s('type.num.num',sK2))))) | s(bool,'T_0') = s(bool,X9)) ) | $spl1),
  inference(superposition,[],[f47,f52])).
fof(f52,plain,(
  ( ! [X0,X1] : (s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X1) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f36,f36])).
fof(f46,plain,(
  p(s(bool,'const.arithmetic.>_2'(s('type.num.num',sK0),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',sK1),s('type.num.num',sK2)))))) | $spl0),
  inference(cnf_transformation,[],[f46_D])).
fof(f46_D,plain,(
  p(s(bool,'const.arithmetic.>_2'(s('type.num.num',sK0),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',sK1),s('type.num.num',sK2)))))) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f50,plain,(
  p(s(bool,'const.arithmetic.>_2'(s('type.num.num',sK0),s('type.num.num','const.num.|48|_0')))) | $spl4),
  inference(cnf_transformation,[],[f50_D])).
fof(f50_D,plain,(
  p(s(bool,'const.arithmetic.>_2'(s('type.num.num',sK0),s('type.num.num','const.num.|48|_0')))) <=> ~$spl4),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl4])])).
fof(f31,plain,(
  p(s(bool,'const.arithmetic.>_2'(s('type.num.num',sK0),s('type.num.num','const.num.|48|_0')))) | p(s(bool,'const.arithmetic.>_2'(s('type.num.num',sK0),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',sK1),s('type.num.num',sK2))))))),
  inference(cnf_transformation,[],[f25])).
fof(f30,plain,(
  p(s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK0),s('type.num.num',sK2))),s('type.num.num',sK1)))) | p(s(bool,'const.arithmetic.>_2'(s('type.num.num',sK0),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',sK1),s('type.num.num',sK2))))))),
  inference(cnf_transformation,[],[f25])).
fof(f984,plain,(
  $false | ($spl2 | $spl4 | $spl12)),
  inference(subsumption_resolution,[],[f983,f35])).
fof(f983,plain,(
  p(s(bool,'F_0')) | ($spl2 | $spl4 | $spl12)),
  inference(forward_demodulation,[],[f982,f374])).
fof(f982,plain,(
  p(s(bool,'const.arithmetic.>_2'(s('type.num.num',sK0),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',sK1),s('type.num.num',sK2)))))) | ($spl2 | $spl4)),
  inference(subsumption_resolution,[],[f972,f33])).
fof(f972,plain,(
  ~p(s(bool,'T_0')) | p(s(bool,'const.arithmetic.>_2'(s('type.num.num',sK0),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',sK1),s('type.num.num',sK2)))))) | ($spl2 | $spl4)),
  inference(superposition,[],[f945,f89])).
fof(f89,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK0),s('type.num.num',sK2))),s('type.num.num',sK1))) | $spl2),
  inference(subsumption_resolution,[],[f88,f35])).
fof(f88,plain,(
  p(s(bool,'F_0')) | s(bool,'T_0') = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK0),s('type.num.num',sK2))),s('type.num.num',sK1))) | $spl2),
  inference(superposition,[],[f48,f36])).
fof(f945,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK0),s('type.num.num',X0))),s('type.num.num',X1)))) | p(s(bool,'const.arithmetic.>_2'(s('type.num.num',sK0),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X1),s('type.num.num',X0))))))) ) | $spl4),
  inference(superposition,[],[f936,f40])).
fof(f936,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',sK0))),s('type.num.num',X1)))) | p(s(bool,'const.arithmetic.>_2'(s('type.num.num',sK0),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X1),s('type.num.num',X0))))))) ) | $spl4),
  inference(subsumption_resolution,[],[f926,f33])).
fof(f926,plain,(
  ( ! [X0,X1] : (~p(s(bool,'T_0')) | ~p(s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',sK0))),s('type.num.num',X1)))) | p(s(bool,'const.arithmetic.>_2'(s('type.num.num',sK0),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X1),s('type.num.num',X0))))))) ) | $spl4),
  inference(superposition,[],[f892,f59])).
fof(f59,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.>_2'(s('type.num.num',sK0),s('type.num.num','const.num.|48|_0'))) | $spl4),
  inference(subsumption_resolution,[],[f56,f35])).
fof(f56,plain,(
  p(s(bool,'F_0')) | s(bool,'T_0') = s(bool,'const.arithmetic.>_2'(s('type.num.num',sK0),s('type.num.num','const.num.|48|_0'))) | $spl4),
  inference(superposition,[],[f50,f36])).
fof(f892,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.arithmetic.>_2'(s('type.num.num',X2),s('type.num.num','const.num.|48|_0')))) | ~p(s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X2))),s('type.num.num',X0)))) | p(s(bool,'const.arithmetic.>_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X0),s('type.num.num',X1))))))) )),
  inference(forward_demodulation,[],[f891,f39])).
fof(f891,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.arithmetic.>_2'(s('type.num.num',X2),s('type.num.num','const.num.|48|_0')))) | p(s(bool,'const.arithmetic.>_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X0),s('type.num.num',X1)))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X2))))))) )),
  inference(forward_demodulation,[],[f890,f39])).
fof(f890,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,'const.arithmetic.>_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X0),s('type.num.num',X1)))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X2)))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X2))))))) )),
  inference(forward_demodulation,[],[f44,f39])).
fof(f44,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num',X2)))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X2)))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X2))))))) )),
  inference(cnf_transformation,[],[f29])).
fof(f1002,plain,(
  p(s(bool,'const.arithmetic.>_2'(s('type.num.num',sK0),s('type.num.num','const.num.|48|_0')))) | $spl0),
  inference(resolution,[],[f46,f103])).
fof(f103,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.arithmetic.>_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X0),s('type.num.num',X1)))))) | p(s(bool,'const.arithmetic.>_2'(s('type.num.num',X2),s('type.num.num','const.num.|48|_0'))))) )),
  inference(forward_demodulation,[],[f102,f39])).
fof(f102,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,'const.arithmetic.>_2'(s('type.num.num',X2),s('type.num.num','const.num.|48|_0')))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num',X2))))) )),
  inference(forward_demodulation,[],[f43,f39])).
fof(f43,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X2)))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num',X2))))) )),
  inference(cnf_transformation,[],[f29])).
% SZS output end Proof for thm.arithmetic
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 40
% Passive clauses: 197
% Generated clauses: 1020
% Final active clauses: 20
% Final passive clauses: 88
% Input formulas: 10
% Initial clauses: 15
% 
% Duplicate literals: 141
% Trivial inequalities: 13
% Fw subsumption resolutions: 61
% Fw demodulations: 45
% Bw demodulations: 9
% 
% Simple tautologies: 32
% Equational tautologies: 18
% Forward subsumptions: 482
% 
% Binary resolution: 17
% Forward superposition: 344
% Backward superposition: 241
% Self superposition: 42
% Equality factoring: 34
% 
% Split clauses: 28
% Split components: 57
% SAT solver clauses: 54
% SAT solver unit clauses: 6
% SAT solver binary clauses: 23
% SAT solver learnt clauses: 2
% SAT solver learnt literals: 1
% 
% Sat splits: 28
% Sat splitting refutations: 8
% 
% TWLsolver clauses: 42
% TWLsolver calls for satisfiability: 10
% 
% Memory used [KB]: 1151
% Time elapsed: 0.019 s
% ------------------------------
% ------------------------------
% Success in time 0.021 s
