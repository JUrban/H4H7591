Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 300 next slice time: 5
dis+11_7_3 on thm.pair
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.pair
% SZS output start Proof for thm.pair
fof(f2896,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f2895,f200,f198])).
fof(f198,plain,(
  ( ! [X6,X7] : (s(bool,'T_0') = s(bool,happ(s(fun('type.pair.prod'(sK0,sK1),bool),sK2),s('type.pair.prod'(sK0,sK1),'const.pair.,_2'(s(sK0,X6),s(sK1,X7)))))) ) | $spl6),
  inference(cnf_transformation,[],[f198_D])).
fof(f198_D,plain,(
  ( ! [X6,X7] : (s(bool,'T_0') = s(bool,happ(s(fun('type.pair.prod'(sK0,sK1),bool),sK2),s('type.pair.prod'(sK0,sK1),'const.pair.,_2'(s(sK0,X6),s(sK1,X7)))))) ) <=> ~$spl6),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl6])])).
fof(f200,plain,(
  ( ! [X12,X13] : (s(bool,'T_0') = s(bool,happ(s(fun('type.pair.prod'(sK0,sK1),bool),sK2),s('type.pair.prod'(sK0,sK1),'const.pair.,_2'(s(sK0,X12),s(sK1,X13)))))) )),
  inference(subsumption_resolution,[],[f195,f26])).
fof(f26,plain,(
  ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f10])).
fof(f10,plain,(
  ~p(s(bool,'F_0'))),
  inference(flattening,[],[f2])).
fof(f2,axiom,(
  ~p(s(bool,'F_0'))),
  file('thm.pair.pair_induction',aHL_FALSITY)).
fof(f195,plain,(
  ( ! [X12,X13] : (p(s(bool,'F_0')) | s(bool,'T_0') = s(bool,happ(s(fun('type.pair.prod'(sK0,sK1),bool),sK2),s('type.pair.prod'(sK0,sK1),'const.pair.,_2'(s(sK0,X12),s(sK1,X13)))))) )),
  inference(superposition,[],[f23,f27])).
fof(f27,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f3])).
fof(f3,axiom,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) | s(bool,'F_0') = s(bool,X0))),
  file('thm.pair.pair_induction',aHL_BOOL_CASES)).
fof(f23,plain,(
  ( ! [X4,X5] : (p(s(bool,happ(s(fun('type.pair.prod'(sK0,sK1),bool),sK2),s('type.pair.prod'(sK0,sK1),'const.pair.,_2'(s(sK0,X4),s(sK1,X5))))))) )),
  inference(cnf_transformation,[],[f18])).
fof(f18,plain,(
  ! [X4,X5] : p(s(bool,happ(s(fun('type.pair.prod'(sK0,sK1),bool),sK2),s('type.pair.prod'(sK0,sK1),'const.pair.,_2'(s(sK0,X4),s(sK1,X5)))))) & ~p(s(bool,happ(s(fun('type.pair.prod'(sK0,sK1),bool),sK2),s('type.pair.prod'(sK0,sK1),sK3))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2,sK3])],[f17])).
fof(f17,plain,(
  ? [X0,X1,X2] : (! [X4,X5] : p(s(bool,happ(s(fun('type.pair.prod'(X0,X1),bool),X2),s('type.pair.prod'(X0,X1),'const.pair.,_2'(s(X0,X4),s(X1,X5)))))) & ? [X3] : ~p(s(bool,happ(s(fun('type.pair.prod'(X0,X1),bool),X2),s('type.pair.prod'(X0,X1),X3)))))),
  inference(rectify,[],[f15])).
fof(f15,plain,(
  ? [X0,X1,X2] : (! [X3,X4] : p(s(bool,happ(s(fun('type.pair.prod'(X0,X1),bool),X2),s('type.pair.prod'(X0,X1),'const.pair.,_2'(s(X0,X3),s(X1,X4)))))) & ? [X5] : ~p(s(bool,happ(s(fun('type.pair.prod'(X0,X1),bool),X2),s('type.pair.prod'(X0,X1),X5)))))),
  inference(ennf_transformation,[],[f9])).
fof(f9,plain,(
  ~! [X0,X1,X2] : (! [X3,X4] : p(s(bool,happ(s(fun('type.pair.prod'(X0,X1),bool),X2),s('type.pair.prod'(X0,X1),'const.pair.,_2'(s(X0,X3),s(X1,X4)))))) => ! [X5] : p(s(bool,happ(s(fun('type.pair.prod'(X0,X1),bool),X2),s('type.pair.prod'(X0,X1),X5)))))),
  inference(flattening,[],[f8])).
fof(f8,plain,(
  ~! [X0,X1] : ! [X2] : (! [X3,X4] : p(s(bool,happ(s(fun('type.pair.prod'(X0,X1),bool),X2),s('type.pair.prod'(X0,X1),'const.pair.,_2'(s(X0,X3),s(X1,X4)))))) => ! [X5] : p(s(bool,happ(s(fun('type.pair.prod'(X0,X1),bool),X2),s('type.pair.prod'(X0,X1),X5)))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7] : ! [X8] : (! [X9,X10] : p(s(bool,happ(s(fun('type.pair.prod'(X6,X7),bool),X8),s('type.pair.prod'(X6,X7),'const.pair.,_2'(s(X6,X9),s(X7,X10)))))) => ! [X11] : p(s(bool,happ(s(fun('type.pair.prod'(X6,X7),bool),X8),s('type.pair.prod'(X6,X7),X11)))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7] : ! [X8] : (! [X9,X10] : p(s(bool,happ(s(fun('type.pair.prod'(X6,X7),bool),X8),s('type.pair.prod'(X6,X7),'const.pair.,_2'(s(X6,X9),s(X7,X10)))))) => ! [X11] : p(s(bool,happ(s(fun('type.pair.prod'(X6,X7),bool),X8),s('type.pair.prod'(X6,X7),X11)))))),
  file('thm.pair.pair_induction','thm.pair.pair_induction')).
fof(f2895,plain,(
  $false | $spl6),
  inference(subsumption_resolution,[],[f24,f2813])).
fof(f2813,plain,(
  ( ! [X0] : (p(s(bool,happ(s(fun('type.pair.prod'(sK0,sK1),bool),sK2),s('type.pair.prod'(sK0,sK1),X0))))) ) | $spl6),
  inference(subsumption_resolution,[],[f2785,f25])).
fof(f25,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f1])).
fof(f1,axiom,(
  p(s(bool,'T_0'))),
  file('thm.pair.pair_induction',aHL_TRUTH)).
fof(f2785,plain,(
  ( ! [X0] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.pair.prod'(sK0,sK1),bool),sK2),s('type.pair.prod'(sK0,sK1),X0))))) ) | $spl6),
  inference(superposition,[],[f29,f198])).
fof(f29,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,happ(s(fun('type.pair.prod'(X0,X1),bool),X2),s('type.pair.prod'(X0,X1),'const.pair.,_2'(s(X0,sK5(X2,X1,X0)),s(X1,sK6(X2,X1,X0))))))) | p(s(bool,happ(s(fun('type.pair.prod'(X0,X1),bool),X2),s('type.pair.prod'(X0,X1),X3))))) )),
  inference(cnf_transformation,[],[f21])).
fof(f21,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,happ(s(fun('type.pair.prod'(X0,X1),bool),X2),s('type.pair.prod'(X0,X1),sK4(X2,X1,X0))))) | ! [X6,X7] : p(s(bool,happ(s(fun('type.pair.prod'(X0,X1),bool),X2),s('type.pair.prod'(X0,X1),'const.pair.,_2'(s(X0,X6),s(X1,X7))))))) & (~p(s(bool,happ(s(fun('type.pair.prod'(X0,X1),bool),X2),s('type.pair.prod'(X0,X1),'const.pair.,_2'(s(X0,sK5(X2,X1,X0)),s(X1,sK6(X2,X1,X0))))))) | ! [X3] : p(s(bool,happ(s(fun('type.pair.prod'(X0,X1),bool),X2),s('type.pair.prod'(X0,X1),X3))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK4,sK5,sK6])],[f20])).
fof(f20,plain,(
  ! [X0,X1,X2] : ((? [X8] : ~p(s(bool,happ(s(fun('type.pair.prod'(X0,X1),bool),X2),s('type.pair.prod'(X0,X1),X8)))) | ! [X6,X7] : p(s(bool,happ(s(fun('type.pair.prod'(X0,X1),bool),X2),s('type.pair.prod'(X0,X1),'const.pair.,_2'(s(X0,X6),s(X1,X7))))))) & (? [X4,X5] : ~p(s(bool,happ(s(fun('type.pair.prod'(X0,X1),bool),X2),s('type.pair.prod'(X0,X1),'const.pair.,_2'(s(X0,X4),s(X1,X5)))))) | ! [X3] : p(s(bool,happ(s(fun('type.pair.prod'(X0,X1),bool),X2),s('type.pair.prod'(X0,X1),X3))))))),
  inference(rectify,[],[f19])).
fof(f19,plain,(
  ! [X0,X1,X2] : ((? [X3] : ~p(s(bool,happ(s(fun('type.pair.prod'(X0,X1),bool),X2),s('type.pair.prod'(X0,X1),X3)))) | ! [X4,X5] : p(s(bool,happ(s(fun('type.pair.prod'(X0,X1),bool),X2),s('type.pair.prod'(X0,X1),'const.pair.,_2'(s(X0,X4),s(X1,X5))))))) & (? [X4,X5] : ~p(s(bool,happ(s(fun('type.pair.prod'(X0,X1),bool),X2),s('type.pair.prod'(X0,X1),'const.pair.,_2'(s(X0,X4),s(X1,X5)))))) | ! [X3] : p(s(bool,happ(s(fun('type.pair.prod'(X0,X1),bool),X2),s('type.pair.prod'(X0,X1),X3))))))),
  inference(nnf_transformation,[],[f12])).
fof(f12,plain,(
  ! [X0,X1,X2] : (! [X3] : p(s(bool,happ(s(fun('type.pair.prod'(X0,X1),bool),X2),s('type.pair.prod'(X0,X1),X3)))) <=> ! [X4,X5] : p(s(bool,happ(s(fun('type.pair.prod'(X0,X1),bool),X2),s('type.pair.prod'(X0,X1),'const.pair.,_2'(s(X0,X4),s(X1,X5)))))))),
  inference(flattening,[],[f11])).
fof(f11,plain,(
  ! [X0,X1] : ! [X2] : (! [X3] : p(s(bool,happ(s(fun('type.pair.prod'(X0,X1),bool),X2),s('type.pair.prod'(X0,X1),X3)))) <=> ! [X4,X5] : p(s(bool,happ(s(fun('type.pair.prod'(X0,X1),bool),X2),s('type.pair.prod'(X0,X1),'const.pair.,_2'(s(X0,X4),s(X1,X5)))))))),
  inference(rectify,[],[f7])).
fof(f7,axiom,(
  ! [X6,X7] : ! [X8] : (! [X11] : p(s(bool,happ(s(fun('type.pair.prod'(X6,X7),bool),X8),s('type.pair.prod'(X6,X7),X11)))) <=> ! [X9,X10] : p(s(bool,happ(s(fun('type.pair.prod'(X6,X7),bool),X8),s('type.pair.prod'(X6,X7),'const.pair.,_2'(s(X6,X9),s(X7,X10)))))))),
  file('thm.pair.pair_induction','thm.pair.FORALL_PROD')).
fof(f24,plain,(
  ~p(s(bool,happ(s(fun('type.pair.prod'(sK0,sK1),bool),sK2),s('type.pair.prod'(sK0,sK1),sK3))))),
  inference(cnf_transformation,[],[f18])).
% SZS output end Proof for thm.pair
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 29
% Passive clauses: 377
% Generated clauses: 2757
% Final active clauses: 22
% Final passive clauses: 314
% Input formulas: 6
% Initial clauses: 8
% 
% Duplicate literals: 387
% Trivial inequalities: 40
% Fw subsumption resolutions: 199
% Fw demodulations: 10
% Bw demodulations: 2
% 
% Simple tautologies: 92
% Equational tautologies: 70
% Forward subsumptions: 1278
% 
% Binary resolution: 23
% Forward superposition: 859
% Backward superposition: 788
% Self superposition: 202
% Equality factoring: 188
% Equality resolution: 1
% 
% Split clauses: 178
% Split components: 356
% SAT solver clauses: 311
% SAT solver unit clauses: 62
% SAT solver binary clauses: 113
% SAT solver learnt clauses: 1
% 
% Sat splits: 178
% Sat splitting refutations: 3
% 
% TWLsolver clauses: 310
% TWLsolver calls for satisfiability: 18
% 
% Memory used [KB]: 1535
% Time elapsed: 0.085 s
% ------------------------------
% ------------------------------
% Success in time 0.087 s
