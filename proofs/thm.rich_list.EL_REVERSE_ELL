Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.rich_list
% (134175)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 310
% Passive clauses: 3937
% Generated clauses: 33111
% Final active clauses: 223
% Final passive clauses: 3372
% Input formulas: 133
% Initial clauses: 205
% 
% Duplicate literals: 574
% Trivial inequalities: 200
% Fw subsumption resolutions: 1384
% Fw demodulations: 5613
% Bw demodulations: 83
% 
% Simple tautologies: 273
% Equational tautologies: 43
% Forward subsumptions: 20964
% Fw demodulations to eq. taut.: 47
% Bw demodulations to eq. taut.: 1
% 
% Binary resolution: 242
% Factoring: 1
% Forward superposition: 12143
% Backward superposition: 12472
% Self superposition: 162
% Equality factoring: 72
% Equality resolution: 21
% 
% Split clauses: 118
% Split components: 239
% SAT solver clauses: 320
% SAT solver unit clauses: 11
% SAT solver binary clauses: 56
% 
% Sat splits: 118
% Sat splitting refutations: 2
% 
% TWLsolver clauses: 320
% TWLsolver calls for satisfiability: 110
% 
% Memory used [KB]: 24050
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 144 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.rich_list
% (134195)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 377
% Passive clauses: 2126
% Generated clauses: 33344
% Final active clauses: 165
% Final passive clauses: 701
% Input formulas: 133
% Initial clauses: 205
% 
% Duplicate literals: 22
% Trivial inequalities: 617
% Fw subsumption resolutions: 1257
% Fw demodulations: 10166
% Bw demodulations: 1139
% Condensations: 20
% Global subsumptions: 15
% 
% Simple tautologies: 121
% Equational tautologies: 10
% Forward subsumptions: 15671
% Fw demodulations to eq. taut.: 67
% Bw demodulations to eq. taut.: 5
% 
% Binary resolution: 246
% Factoring: 3
% Forward superposition: 9086
% Backward superposition: 6624
% Self superposition: 72
% Equality factoring: 2
% Equality resolution: 41
% 
% Split clauses: 61
% Split components: 122
% SAT solver clauses: 2651
% SAT solver unit clauses: 298
% SAT solver binary clauses: 74
% SAT solver learnt clauses: 34
% SAT solver learnt literals: 19
% 
% Sat splits: 61
% Sat splitting refutations: 137
% 
% TWLsolver clauses: 2587
% TWLsolver calls for satisfiability: 797
% 
% Memory used [KB]: 19701
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 136 next slice time: 103
lrs+11_2_br=off:cond=on:fde=none:gs=on:gsaa=full_model:lwlo=on:nwc=2:sas=minisat:stl=30:ssfp=100000:ssfq=1.4:smm=sco:ssnc=none:sp=occurrence:urr=on_98 on thm.rich_list
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.rich_list
% SZS output start Proof for thm.rich_list
fof(f38581,plain,(
  $false),
  inference(subsumption_resolution,[],[f38580,f392])).
fof(f392,plain,(
  s(sK0,'const.rich_list.ELL_2'(s('type.num.num',sK1),s('type.list.list'(sK0),sK2))) != s(sK0,'const.list.EL_2'(s('type.num.num',sK1),s('type.list.list'(sK0),'const.list.REVERSE_1'(s('type.list.list'(sK0),sK2)))))),
  inference(cnf_transformation,[],[f329])).
fof(f329,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2)))))) & s(sK0,'const.rich_list.ELL_2'(s('type.num.num',sK1),s('type.list.list'(sK0),sK2))) != s(sK0,'const.list.EL_2'(s('type.num.num',sK1),s('type.list.list'(sK0),'const.list.REVERSE_1'(s('type.list.list'(sK0),sK2)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2])],[f299])).
fof(f299,plain,(
  ? [X0,X1,X2] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2)))))) & s(X0,'const.rich_list.ELL_2'(s('type.num.num',X1),s('type.list.list'(X0),X2))) != s(X0,'const.list.EL_2'(s('type.num.num',X1),s('type.list.list'(X0),'const.list.REVERSE_1'(s('type.list.list'(X0),X2))))))),
  inference(ennf_transformation,[],[f136])).
fof(f136,plain,(
  ~! [X0,X1,X2] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2)))))) => s(X0,'const.rich_list.ELL_2'(s('type.num.num',X1),s('type.list.list'(X0),X2))) = s(X0,'const.list.EL_2'(s('type.num.num',X1),s('type.list.list'(X0),'const.list.REVERSE_1'(s('type.list.list'(X0),X2))))))),
  inference(flattening,[],[f135])).
fof(f135,plain,(
  ~! [X0] : ! [X1,X2] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2)))))) => s(X0,'const.rich_list.ELL_2'(s('type.num.num',X1),s('type.list.list'(X0),X2))) = s(X0,'const.list.EL_2'(s('type.num.num',X1),s('type.list.list'(X0),'const.list.REVERSE_1'(s('type.list.list'(X0),X2))))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : ! [X7,X8] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X7),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X8)))))) => s(X6,'const.rich_list.ELL_2'(s('type.num.num',X7),s('type.list.list'(X6),X8))) = s(X6,'const.list.EL_2'(s('type.num.num',X7),s('type.list.list'(X6),'const.list.REVERSE_1'(s('type.list.list'(X6),X8))))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : ! [X7,X8] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X7),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X8)))))) => s(X6,'const.rich_list.ELL_2'(s('type.num.num',X7),s('type.list.list'(X6),X8))) = s(X6,'const.list.EL_2'(s('type.num.num',X7),s('type.list.list'(X6),'const.list.REVERSE_1'(s('type.list.list'(X6),X8))))))),
  file('thm.rich_list.EL_REVERSE_ELL','thm.rich_list.EL_REVERSE_ELL')).
fof(f38580,plain,(
  s(sK0,'const.rich_list.ELL_2'(s('type.num.num',sK1),s('type.list.list'(sK0),sK2))) = s(sK0,'const.list.EL_2'(s('type.num.num',sK1),s('type.list.list'(sK0),'const.list.REVERSE_1'(s('type.list.list'(sK0),sK2)))))),
  inference(forward_demodulation,[],[f38579,f38193])).
fof(f38193,plain,(
  s(sK0,'const.rich_list.ELL_2'(s('type.num.num',sK1),s('type.list.list'(sK0),sK2))) = s(sK0,'const.list.EL_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.num.SUC_1'(s('type.num.num',sK1))))),s('type.list.list'(sK0),sK2)))),
  inference(subsumption_resolution,[],[f38073,f393])).
fof(f393,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f1])).
fof(f1,axiom,(
  p(s(bool,'T_0'))),
  file('thm.rich_list.EL_REVERSE_ELL',aHL_TRUTH)).
fof(f38073,plain,(
  ~p(s(bool,'T_0')) | s(sK0,'const.rich_list.ELL_2'(s('type.num.num',sK1),s('type.list.list'(sK0),sK2))) = s(sK0,'const.list.EL_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.num.SUC_1'(s('type.num.num',sK1))))),s('type.list.list'(sK0),sK2)))),
  inference(superposition,[],[f37415,f619])).
fof(f619,plain,(
  s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',sK1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2)))))),
  inference(unit_resulting_resolution,[],[f391,f446])).
fof(f446,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f334])).
fof(f334,plain,(
  ! [X0] : ((s(bool,'T_0') != s(bool,X0) | p(s(bool,X0))) & (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f180])).
fof(f180,plain,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) <=> p(s(bool,X0)))),
  inference(rectify,[],[f36])).
fof(f36,axiom,(
  ! [X10] : (s(bool,'T_0') = s(bool,X10) <=> p(s(bool,X10)))),
  file('thm.rich_list.EL_REVERSE_ELL','thm.bool.EQ_CLAUSES|split|0')).
fof(f391,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))))))),
  inference(cnf_transformation,[],[f329])).
fof(f37415,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2)))))) | s(X0,'const.rich_list.ELL_2'(s('type.num.num',X1),s('type.list.list'(X0),X2))) = s(X0,'const.list.EL_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))))),s('type.list.list'(X0),X2)))) )),
  inference(backward_demodulation,[],[f37409,f517])).
fof(f517,plain,(
  ( ! [X2,X0,X1] : (s(X0,'const.rich_list.ELL_2'(s('type.num.num',X1),s('type.list.list'(X0),X2))) = s(X0,'const.list.EL_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num',X1))))),s('type.list.list'(X0),X2))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))))))) )),
  inference(cnf_transformation,[],[f311])).
fof(f311,plain,(
  ! [X0,X1,X2] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2)))))) | s(X0,'const.rich_list.ELL_2'(s('type.num.num',X1),s('type.list.list'(X0),X2))) = s(X0,'const.list.EL_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num',X1))))),s('type.list.list'(X0),X2))))),
  inference(ennf_transformation,[],[f240])).
fof(f240,plain,(
  ! [X0,X1,X2] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2)))))) => s(X0,'const.rich_list.ELL_2'(s('type.num.num',X1),s('type.list.list'(X0),X2))) = s(X0,'const.list.EL_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num',X1))))),s('type.list.list'(X0),X2))))),
  inference(flattening,[],[f239])).
fof(f239,plain,(
  ! [X0] : ! [X1,X2] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2)))))) => s(X0,'const.rich_list.ELL_2'(s('type.num.num',X1),s('type.list.list'(X0),X2))) = s(X0,'const.list.EL_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num',X1))))),s('type.list.list'(X0),X2))))),
  inference(rectify,[],[f9])).
fof(f9,axiom,(
  ! [X6] : ! [X7,X8] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X7),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X8)))))) => s(X6,'const.rich_list.ELL_2'(s('type.num.num',X7),s('type.list.list'(X6),X8))) = s(X6,'const.list.EL_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X8))),s('type.num.num',X7))))),s('type.list.list'(X6),X8))))),
  file('thm.rich_list.EL_REVERSE_ELL','thm.rich_list.ELL_EL')).
fof(f37409,plain,(
  ( ! [X6,X5] : (s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X5),s('type.num.num','const.num.SUC_1'(s('type.num.num',X6))))) = s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X5),s('type.num.num',X6)))))) )),
  inference(forward_demodulation,[],[f37181,f29084])).
fof(f29084,plain,(
  ( ! [X0] : (s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(backward_demodulation,[],[f29059,f13770])).
fof(f13770,plain,(
  ( ! [X0] : (s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(backward_demodulation,[],[f13739,f611])).
fof(f611,plain,(
  ( ! [X0] : (s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))) )),
  inference(forward_demodulation,[],[f437,f397])).
fof(f397,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  inference(cnf_transformation,[],[f98])).
fof(f98,axiom,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  file('thm.rich_list.EL_REVERSE_ELL','thm.numeral.numeral_distrib|split|13')).
fof(f437,plain,(
  ( ! [X0] : (s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) )),
  inference(cnf_transformation,[],[f174])).
fof(f174,plain,(
  ! [X0] : s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),
  inference(rectify,[],[f43])).
fof(f43,axiom,(
  ! [X12] : s('type.num.num','const.num.SUC_1'(s('type.num.num',X12))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X12),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),
  file('thm.rich_list.EL_REVERSE_ELL','thm.arithmetic.ADD|49|')).
fof(f13739,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.num.|48|_0')),
  inference(subsumption_resolution,[],[f13620,f393])).
fof(f13620,plain,(
  ~p(s(bool,'T_0')) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.num.|48|_0')),
  inference(superposition,[],[f13174,f418])).
fof(f418,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f155])).
fof(f155,plain,(
  ! [X0] : s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))),
  inference(rectify,[],[f94])).
fof(f94,axiom,(
  ! [X7] : s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X7)))),
  file('thm.rich_list.EL_REVERSE_ELL','thm.numeral.numeral_distrib|split|26')).
fof(f13174,plain,(
  ( ! [X0] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X0)) )),
  inference(condensation,[],[f13173])).
fof(f13173,plain,(
  ( ! [X4,X3] : (~p(s(bool,X4)) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X3),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X3)) )),
  inference(subsumption_resolution,[],[f12946,f449])).
fof(f449,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'F_0') != s(bool,X0)) )),
  inference(cnf_transformation,[],[f336])).
fof(f336,plain,(
  ! [X0] : ((s(bool,'F_0') != s(bool,X0) | ~p(s(bool,X0))) & (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f183])).
fof(f183,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(flattening,[],[f182])).
fof(f182,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(rectify,[],[f38])).
fof(f38,axiom,(
  ! [X10] : (s(bool,'F_0') = s(bool,X10) <=> ~p(s(bool,X10)))),
  file('thm.rich_list.EL_REVERSE_ELL','thm.bool.EQ_CLAUSES|split|3')).
fof(f12946,plain,(
  ( ! [X4,X3] : (~p(s(bool,X4)) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X3),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X3) | s(bool,'F_0') = s(bool,X4)) )),
  inference(superposition,[],[f553,f6882])).
fof(f6882,plain,(
  ( ! [X37,X36] : (s(bool,X37) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X36))) | s(bool,'F_0') = s(bool,X37)) )),
  inference(subsumption_resolution,[],[f6834,f393])).
fof(f6834,plain,(
  ( ! [X37,X36] : (~p(s(bool,'T_0')) | s(bool,X37) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X36))) | s(bool,'F_0') = s(bool,X37)) )),
  inference(superposition,[],[f6797,f420])).
fof(f420,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f157])).
fof(f157,plain,(
  ! [X0] : s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X0)))),
  inference(rectify,[],[f84])).
fof(f84,axiom,(
  ! [X7] : s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X7)))),
  file('thm.rich_list.EL_REVERSE_ELL','thm.numeral.numeral_lte|split|0')).
fof(f6797,plain,(
  ( ! [X17,X18] : (~p(s(bool,X18)) | s(bool,X17) = s(bool,X18) | s(bool,'F_0') = s(bool,X17)) )),
  inference(forward_demodulation,[],[f6796,f512])).
fof(f512,plain,(
  ( ! [X2,X0,X1] : (s(X0,X2) = s(X0,'const.list.EL_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.list.list'(X0),'const.list.SNOC_2'(s(X0,X2),s('type.list.list'(X0),X1)))))) )),
  inference(cnf_transformation,[],[f230])).
fof(f230,plain,(
  ! [X0,X1,X2] : s(X0,X2) = s(X0,'const.list.EL_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.list.list'(X0),'const.list.SNOC_2'(s(X0,X2),s('type.list.list'(X0),X1)))))),
  inference(flattening,[],[f229])).
fof(f229,plain,(
  ! [X0] : ! [X1,X2] : s(X0,X2) = s(X0,'const.list.EL_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.list.list'(X0),'const.list.SNOC_2'(s(X0,X2),s('type.list.list'(X0),X1)))))),
  inference(rectify,[],[f42])).
fof(f42,axiom,(
  ! [X6] : ! [X8,X14] : s(X6,X14) = s(X6,'const.list.EL_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X8))),s('type.list.list'(X6),'const.list.SNOC_2'(s(X6,X14),s('type.list.list'(X6),X8)))))),
  file('thm.rich_list.EL_REVERSE_ELL','thm.list.EL_LENGTH_SNOC')).
fof(f6796,plain,(
  ( ! [X17,X18,X16] : (~p(s(bool,X18)) | s(bool,X18) = s(bool,'const.list.EL_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(bool),X16))),s('type.list.list'(bool),'const.list.SNOC_2'(s(bool,X17),s('type.list.list'(bool),X16))))) | s(bool,'F_0') = s(bool,X17)) )),
  inference(subsumption_resolution,[],[f6771,f393])).
fof(f6771,plain,(
  ( ! [X17,X18,X16] : (~p(s(bool,'T_0')) | ~p(s(bool,X18)) | s(bool,X18) = s(bool,'const.list.EL_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(bool),X16))),s('type.list.list'(bool),'const.list.SNOC_2'(s(bool,X17),s('type.list.list'(bool),X16))))) | s(bool,'F_0') = s(bool,X17)) )),
  inference(superposition,[],[f550,f6262])).
fof(f6262,plain,(
  ( ! [X4,X3] : (s(bool,'T_0') = s(bool,'const.list.EL_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(bool),X3))),s('type.list.list'(bool),'const.list.SNOC_2'(s(bool,X4),s('type.list.list'(bool),X3))))) | s(bool,'F_0') = s(bool,X4)) )),
  inference(forward_demodulation,[],[f6163,f4065])).
fof(f4065,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num',sK1)))),
  inference(unit_resulting_resolution,[],[f4058,f450])).
fof(f450,plain,(
  ( ! [X0] : (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f336])).
fof(f4058,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num',sK1))))),
  inference(subsumption_resolution,[],[f3994,f393])).
fof(f3994,plain,(
  ~p(s(bool,'T_0')) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num',sK1))))),
  inference(superposition,[],[f563,f619])).
fof(f563,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0))))) )),
  inference(cnf_transformation,[],[f378])).
fof(f378,plain,(
  ! [X0,X1] : ((p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1)))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0))))) & (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0)))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1))))))),
  inference(nnf_transformation,[],[f283])).
fof(f283,plain,(
  ! [X0,X1] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1)))) <=> p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0)))))),
  inference(flattening,[],[f282])).
fof(f282,plain,(
  ! [X0,X1] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1)))) <=> p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0)))))),
  inference(rectify,[],[f93])).
fof(f93,axiom,(
  ! [X12,X7] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X12),s('type.num.num',X7)))) <=> p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X7),s('type.num.num',X12)))))),
  file('thm.rich_list.EL_REVERSE_ELL','thm.arithmetic.NOT_LESS')).
fof(f6163,plain,(
  ( ! [X4,X3] : (s(bool,X4) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num',sK1))) | s(bool,'T_0') = s(bool,'const.list.EL_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(bool),X3))),s('type.list.list'(bool),'const.list.SNOC_2'(s(bool,X4),s('type.list.list'(bool),X3)))))) )),
  inference(superposition,[],[f512,f5139])).
fof(f5139,plain,(
  ( ! [X35] : (s(bool,X35) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num',sK1))) | s(bool,'T_0') = s(bool,X35)) )),
  inference(subsumption_resolution,[],[f5112,f604])).
fof(f604,plain,(
  ~p(s(bool,'F_0'))),
  inference(subsumption_resolution,[],[f399,f393])).
fof(f399,plain,(
  ~p(s(bool,'T_0')) | ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f330])).
fof(f330,plain,(
  (p(s(bool,'T_0')) | p(s(bool,'F_0'))) & (~p(s(bool,'F_0')) | ~p(s(bool,'T_0')))),
  inference(nnf_transformation,[],[f137])).
fof(f137,plain,(
  ~p(s(bool,'T_0')) <=> p(s(bool,'F_0'))),
  inference(flattening,[],[f52])).
fof(f52,axiom,(
  ~p(s(bool,'T_0')) <=> p(s(bool,'F_0'))),
  file('thm.rich_list.EL_REVERSE_ELL','thm.bool.NOT_CLAUSES|split|1')).
fof(f5112,plain,(
  ( ! [X35] : (p(s(bool,'F_0')) | s(bool,X35) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num',sK1))) | s(bool,'T_0') = s(bool,X35)) )),
  inference(superposition,[],[f863,f4065])).
fof(f863,plain,(
  ( ! [X0,X1] : (p(s(bool,X1)) | s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X0)) )),
  inference(subsumption_resolution,[],[f843,f604])).
fof(f843,plain,(
  ( ! [X0,X1] : (p(s(bool,'F_0')) | p(s(bool,X1)) | s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f547,f441])).
fof(f441,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f3])).
fof(f3,axiom,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) | s(bool,'F_0') = s(bool,X0))),
  file('thm.rich_list.EL_REVERSE_ELL',aHL_BOOL_CASES)).
fof(f547,plain,(
  ( ! [X0,X1] : (p(s(bool,X1)) | p(s(bool,X0)) | s(bool,X0) = s(bool,X1)) )),
  inference(cnf_transformation,[],[f319])).
fof(f319,plain,(
  ! [X0,X1] : ((p(s(bool,X0)) & ~p(s(bool,X1))) | (p(s(bool,X1)) & ~p(s(bool,X0))) | s(bool,X0) = s(bool,X1))),
  inference(flattening,[],[f318])).
fof(f318,plain,(
  ! [X0,X1] : ((p(s(bool,X0)) & ~p(s(bool,X1))) | ((p(s(bool,X1)) & ~p(s(bool,X0))) | s(bool,X0) = s(bool,X1)))),
  inference(ennf_transformation,[],[f275])).
fof(f275,plain,(
  ! [X0,X1] : ((p(s(bool,X0)) => p(s(bool,X1))) => ((p(s(bool,X1)) => p(s(bool,X0))) => s(bool,X0) = s(bool,X1)))),
  inference(rectify,[],[f28])).
fof(f28,axiom,(
  ! [X16,X17] : ((p(s(bool,X16)) => p(s(bool,X17))) => ((p(s(bool,X17)) => p(s(bool,X16))) => s(bool,X16) = s(bool,X17)))),
  file('thm.rich_list.EL_REVERSE_ELL','thm.bool.IMP_ANTISYM_AX')).
fof(f550,plain,(
  ( ! [X0,X1] : (~p(s(bool,X1)) | ~p(s(bool,X0)) | s(bool,X0) = s(bool,X1)) )),
  inference(cnf_transformation,[],[f319])).
fof(f553,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0)))) | s('type.num.num',X0) = s('type.num.num',X1)) )),
  inference(cnf_transformation,[],[f373])).
fof(f373,plain,(
  ! [X0,X1] : ((s('type.num.num',X0) != s('type.num.num',X1) | (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1)))) & p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0)))))) & (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0)))) | s('type.num.num',X0) = s('type.num.num',X1)))),
  inference(flattening,[],[f372])).
fof(f372,plain,(
  ! [X0,X1] : ((s('type.num.num',X0) != s('type.num.num',X1) | (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1)))) & p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0)))))) & ((~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0))))) | s('type.num.num',X0) = s('type.num.num',X1)))),
  inference(nnf_transformation,[],[f276])).
fof(f276,plain,(
  ! [X0,X1] : (s('type.num.num',X0) = s('type.num.num',X1) <=> (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1)))) & p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0))))))),
  inference(rectify,[],[f108])).
fof(f108,axiom,(
  ! [X12,X7] : (s('type.num.num',X7) = s('type.num.num',X12) <=> (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X12),s('type.num.num',X7)))) & p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X7),s('type.num.num',X12))))))),
  file('thm.rich_list.EL_REVERSE_ELL','thm.arithmetic.EQ_LESS_EQ')).
fof(f29059,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))),
  inference(backward_demodulation,[],[f29058,f26537])).
fof(f26537,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK6('const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')),'const.arithmetic.ZERO_0'))))),
  inference(forward_demodulation,[],[f26536,f13744])).
fof(f13744,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(backward_demodulation,[],[f13739,f411])).
fof(f411,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) )),
  inference(cnf_transformation,[],[f148])).
fof(f148,plain,(
  ! [X0] : s('type.num.num',X0) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))),
  inference(rectify,[],[f77])).
fof(f77,axiom,(
  ! [X7] : s('type.num.num',X7) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X7),s('type.num.num','const.num.|48|_0')))),
  file('thm.rich_list.EL_REVERSE_ELL','thm.numeral.numeral_distrib|split|7')).
fof(f26536,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num',sK6('const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')),'const.arithmetic.ZERO_0')))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0')))),
  inference(subsumption_resolution,[],[f26402,f393])).
fof(f26402,plain,(
  ~p(s(bool,'T_0')) | s('type.num.num','const.num.SUC_1'(s('type.num.num',sK6('const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')),'const.arithmetic.ZERO_0')))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0')))),
  inference(superposition,[],[f545,f1785])).
fof(f1785,plain,(
  s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  inference(unit_resulting_resolution,[],[f1400,f446])).
fof(f1400,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),
  inference(forward_demodulation,[],[f1399,f439])).
fof(f439,plain,(
  ( ! [X0] : (s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X0))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))) )),
  inference(cnf_transformation,[],[f176])).
fof(f176,plain,(
  ! [X0] : s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X0))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))),
  inference(rectify,[],[f88])).
fof(f88,axiom,(
  ! [X7] : s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X7))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X7)))))),
  file('thm.rich_list.EL_REVERSE_ELL','thm.numeral.numeral_distrib|split|21')).
fof(f1399,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),
  inference(forward_demodulation,[],[f1362,f527])).
fof(f527,plain,(
  ( ! [X0,X1] : (s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num',X1)))) )),
  inference(cnf_transformation,[],[f256])).
fof(f256,plain,(
  ! [X0,X1] : s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num',X1)))),
  inference(rectify,[],[f116])).
fof(f116,axiom,(
  ! [X12,X7] : s(bool,'const.prim_rec.<_2'(s('type.num.num',X12),s('type.num.num',X7))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X12))),s('type.num.num',X7)))),
  file('thm.rich_list.EL_REVERSE_ELL','thm.arithmetic.LESS_EQ')).
fof(f1362,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),
  inference(unit_resulting_resolution,[],[f397,f552])).
fof(f552,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0)))) | s('type.num.num',X0) != s('type.num.num',X1)) )),
  inference(cnf_transformation,[],[f373])).
fof(f545,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1)))) | s('type.num.num','const.num.SUC_1'(s('type.num.num',sK6(X1,X0)))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X1),s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f371])).
fof(f371,plain,(
  ! [X0,X1] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1)))) | (s('type.num.num','const.num.SUC_1'(s('type.num.num',sK6(X1,X0)))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X1),s('type.num.num',X0))) & p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK6(X1,X0)),s('type.num.num',X1))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK6])],[f317])).
fof(f317,plain,(
  ! [X0,X1] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1)))) | ? [X2] : (s('type.num.num','const.num.SUC_1'(s('type.num.num',X2))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X1),s('type.num.num',X0))) & p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X2),s('type.num.num',X1))))))),
  inference(ennf_transformation,[],[f274])).
fof(f274,plain,(
  ! [X0,X1] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1)))) => ? [X2] : (s('type.num.num','const.num.SUC_1'(s('type.num.num',X2))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X1),s('type.num.num',X0))) & p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X2),s('type.num.num',X1))))))),
  inference(rectify,[],[f126])).
fof(f126,axiom,(
  ! [X7,X12] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X7),s('type.num.num',X12)))) => ? [X24] : (s('type.num.num','const.num.SUC_1'(s('type.num.num',X24))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X12),s('type.num.num',X7))) & p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X24),s('type.num.num',X12))))))),
  file('thm.rich_list.EL_REVERSE_ELL','thm.rich_list.rich_list_2|49|8_prove_ltb')).
fof(f29058,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',sK6('const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')),'const.arithmetic.ZERO_0'))),
  inference(backward_demodulation,[],[f29056,f26557])).
fof(f26557,plain,(
  s('type.num.num',sK6('const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')),'const.arithmetic.ZERO_0')) = s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  inference(superposition,[],[f423,f26537])).
fof(f423,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))))) )),
  inference(cnf_transformation,[],[f160])).
fof(f160,plain,(
  ! [X0] : s('type.num.num',X0) = s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))))),
  inference(rectify,[],[f31])).
fof(f31,axiom,(
  ! [X12] : s('type.num.num',X12) = s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X12)))))),
  file('thm.rich_list.EL_REVERSE_ELL','thm.prim_rec.PRE|split|1')).
fof(f29056,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  inference(subsumption_resolution,[],[f28928,f29028])).
fof(f29028,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',sK6('const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')),'const.arithmetic.ZERO_0'))))),
  inference(forward_demodulation,[],[f29027,f423])).
fof(f29027,plain,(
  s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',sK6('const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')),'const.arithmetic.ZERO_0'))))),
  inference(forward_demodulation,[],[f28828,f13740])).
fof(f13740,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  inference(backward_demodulation,[],[f13739,f397])).
fof(f28828,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',sK6('const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')),'const.arithmetic.ZERO_0')))) = s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),
  inference(superposition,[],[f433,f26557])).
fof(f433,plain,(
  ( ! [X0] : (s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X0)))))) )),
  inference(cnf_transformation,[],[f170])).
fof(f170,plain,(
  ! [X0] : s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X0)))))),
  inference(rectify,[],[f72])).
fof(f72,axiom,(
  ! [X7] : s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X7))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X7)))))),
  file('thm.rich_list.EL_REVERSE_ELL','thm.numeral.numeral_distrib|split|16')).
fof(f28928,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',sK6('const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')),'const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  inference(superposition,[],[f13752,f26557])).
fof(f13752,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X0)) )),
  inference(backward_demodulation,[],[f13739,f453])).
fof(f453,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X0)) )),
  inference(cnf_transformation,[],[f338])).
fof(f338,plain,(
  ! [X0] : ((s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X0)) & (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X0) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))),
  inference(nnf_transformation,[],[f186])).
fof(f186,plain,(
  ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) <=> s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X0))),
  inference(rectify,[],[f99])).
fof(f99,axiom,(
  ! [X7] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X7))) <=> s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X7))),
  file('thm.rich_list.EL_REVERSE_ELL','thm.numeral.numeral_distrib|split|18')).
fof(f37181,plain,(
  ( ! [X6,X5] : (s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X5),s('type.num.num',X6))))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X5),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) )),
  inference(superposition,[],[f574,f29083])).
fof(f29083,plain,(
  ( ! [X0] : (s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(backward_demodulation,[],[f29059,f13769])).
fof(f13769,plain,(
  ( ! [X0] : (s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X0),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(backward_demodulation,[],[f13739,f610])).
fof(f610,plain,(
  ( ! [X0] : (s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X0),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))) )),
  inference(forward_demodulation,[],[f436,f397])).
fof(f436,plain,(
  ( ! [X0] : (s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) )),
  inference(cnf_transformation,[],[f173])).
fof(f173,plain,(
  ! [X0] : s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),
  inference(rectify,[],[f91])).
fof(f91,axiom,(
  ! [X12] : s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X12))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X12),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),
  file('thm.rich_list.EL_REVERSE_ELL','thm.arithmetic.PRE_SUB|49|')).
fof(f574,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X2))))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num',X2)))) )),
  inference(cnf_transformation,[],[f292])).
fof(f292,plain,(
  ! [X0,X1,X2] : s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X2))))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num',X2)))),
  inference(rectify,[],[f124])).
fof(f124,axiom,(
  ! [X21,X20,X23] : s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X21),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X20),s('type.num.num',X23))))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X21),s('type.num.num',X20))),s('type.num.num',X23)))),
  file('thm.rich_list.EL_REVERSE_ELL','thm.arithmetic.SUB_PLUS')).
fof(f38579,plain,(
  s(sK0,'const.list.EL_2'(s('type.num.num',sK1),s('type.list.list'(sK0),'const.list.REVERSE_1'(s('type.list.list'(sK0),sK2))))) = s(sK0,'const.list.EL_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.num.SUC_1'(s('type.num.num',sK1))))),s('type.list.list'(sK0),sK2)))),
  inference(subsumption_resolution,[],[f38459,f393])).
fof(f38459,plain,(
  ~p(s(bool,'T_0')) | s(sK0,'const.list.EL_2'(s('type.num.num',sK1),s('type.list.list'(sK0),'const.list.REVERSE_1'(s('type.list.list'(sK0),sK2))))) = s(sK0,'const.list.EL_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.num.SUC_1'(s('type.num.num',sK1))))),s('type.list.list'(sK0),sK2)))),
  inference(superposition,[],[f37413,f619])).
fof(f37413,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2)))))) | s(X0,'const.list.EL_2'(s('type.num.num',X1),s('type.list.list'(X0),'const.list.REVERSE_1'(s('type.list.list'(X0),X2))))) = s(X0,'const.list.EL_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))))),s('type.list.list'(X0),X2)))) )),
  inference(backward_demodulation,[],[f37409,f519])).
fof(f519,plain,(
  ( ! [X2,X0,X1] : (s(X0,'const.list.EL_2'(s('type.num.num',X1),s('type.list.list'(X0),'const.list.REVERSE_1'(s('type.list.list'(X0),X2))))) = s(X0,'const.list.EL_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num',X1))))),s('type.list.list'(X0),X2))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))))))) )),
  inference(cnf_transformation,[],[f313])).
fof(f313,plain,(
  ! [X0,X1,X2] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2)))))) | s(X0,'const.list.EL_2'(s('type.num.num',X1),s('type.list.list'(X0),'const.list.REVERSE_1'(s('type.list.list'(X0),X2))))) = s(X0,'const.list.EL_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num',X1))))),s('type.list.list'(X0),X2))))),
  inference(ennf_transformation,[],[f244])).
fof(f244,plain,(
  ! [X0,X1,X2] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2)))))) => s(X0,'const.list.EL_2'(s('type.num.num',X1),s('type.list.list'(X0),'const.list.REVERSE_1'(s('type.list.list'(X0),X2))))) = s(X0,'const.list.EL_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num',X1))))),s('type.list.list'(X0),X2))))),
  inference(flattening,[],[f243])).
fof(f243,plain,(
  ! [X0] : ! [X1,X2] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2)))))) => s(X0,'const.list.EL_2'(s('type.num.num',X1),s('type.list.list'(X0),'const.list.REVERSE_1'(s('type.list.list'(X0),X2))))) = s(X0,'const.list.EL_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num',X1))))),s('type.list.list'(X0),X2))))),
  inference(rectify,[],[f7])).
fof(f7,axiom,(
  ! [X6] : ! [X7,X8] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X7),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X8)))))) => s(X6,'const.list.EL_2'(s('type.num.num',X7),s('type.list.list'(X6),'const.list.REVERSE_1'(s('type.list.list'(X6),X8))))) = s(X6,'const.list.EL_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X8))),s('type.num.num',X7))))),s('type.list.list'(X6),X8))))),
  file('thm.rich_list.EL_REVERSE_ELL','thm.list.EL_REVERSE')).
% SZS output end Proof for thm.rich_list
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 347
% Passive clauses: 1575
% Generated clauses: 38185
% Final active clauses: 217
% Final passive clauses: 818
% Input formulas: 133
% Initial clauses: 205
% 
% Duplicate literals: 301
% Trivial inequalities: 70
% Fw subsumption resolutions: 612
% Fw demodulations: 7649
% Bw demodulations: 511
% Condensations: 328
% 
% Simple tautologies: 125
% Equational tautologies: 68
% Forward subsumptions: 27094
% Fw demodulations to eq. taut.: 335
% Bw demodulations to eq. taut.: 15
% 
% Unit resulting resolution: 1542
% Factoring: 1
% Forward superposition: 13563
% Backward superposition: 13155
% Self superposition: 153
% Equality factoring: 40
% Equality resolution: 9
% 
% Split clauses: 8
% Split components: 16
% SAT solver clauses: 1603
% SAT solver unit clauses: 612
% SAT solver binary clauses: 803
% 
% Sat splits: 8
% Sat splitting refutations: 10
% 
% Memory used [KB]: 22259
% Time elapsed: 0.835 s
% ------------------------------
% ------------------------------
% Success in time 2.16 s
