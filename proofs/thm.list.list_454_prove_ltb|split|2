Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.list
% (85592)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 707
% Passive clauses: 7877
% Generated clauses: 21155
% Final active clauses: 695
% Final passive clauses: 6793
% Input formulas: 69
% Initial clauses: 213
% 
% Duplicate literals: 360
% Trivial inequalities: 43
% Fw subsumption resolutions: 2020
% Fw demodulations: 995
% Bw demodulations: 6
% 
% Simple tautologies: 232
% Equational tautologies: 58
% Forward subsumptions: 9357
% 
% Binary resolution: 7590
% Factoring: 1132
% Forward superposition: 4216
% Backward superposition: 4309
% Self superposition: 79
% Equality factoring: 26
% Equality resolution: 14
% 
% Split clauses: 316
% Split components: 668
% SAT solver clauses: 596
% SAT solver unit clauses: 33
% SAT solver binary clauses: 120
% 
% Sat splits: 316
% Sat splitting refutations: 2
% 
% TWLsolver clauses: 595
% TWLsolver calls for satisfiability: 376
% 
% Memory used [KB]: 14711
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 144 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.list
% (85611)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 397
% Passive clauses: 2418
% Generated clauses: 11497
% Final active clauses: 387
% Final passive clauses: 1984
% Input formulas: 69
% Initial clauses: 213
% 
% Duplicate literals: 190
% Trivial inequalities: 27
% Fw subsumption resolutions: 740
% Fw demodulations: 468
% Bw demodulations: 40
% Condensations: 313
% Global subsumptions: 16
% 
% Simple tautologies: 260
% Equational tautologies: 24
% Forward subsumptions: 4281
% 
% Binary resolution: 2995
% Factoring: 326
% Forward superposition: 1873
% Backward superposition: 1750
% Self superposition: 69
% Equality factoring: 26
% Equality resolution: 9
% 
% Split clauses: 17
% Split components: 34
% SAT solver clauses: 2942
% SAT solver unit clauses: 228
% SAT solver binary clauses: 80
% SAT solver learnt clauses: 32
% SAT solver learnt literals: 12
% 
% Sat splits: 17
% Sat splitting refutations: 9
% 
% TWLsolver clauses: 2878
% TWLsolver calls for satisfiability: 1623
% 
% Memory used [KB]: 16119
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 136 next slice time: 103
lrs+11_2_br=off:cond=on:fde=none:gs=on:gsaa=full_model:lwlo=on:nwc=2:sas=minisat:stl=30:ssfp=100000:ssfq=1.4:smm=sco:ssnc=none:sp=occurrence:urr=on_98 on thm.list
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.list
% SZS output start Proof for thm.list
fof(f351999,plain,(
  $false),
  inference(trivial_inequality_removal,[],[f351976])).
fof(f351976,plain,(
  s('type.list.list'(sK10),'const.list.CONS_2'(s(sK10,sK12),s('type.list.list'(sK10),'const.list.TAKE_2'(s('type.num.num',sK11),s('type.list.list'(sK10),sK13))))) != s('type.list.list'(sK10),'const.list.CONS_2'(s(sK10,sK12),s('type.list.list'(sK10),'const.list.TAKE_2'(s('type.num.num',sK11),s('type.list.list'(sK10),sK13)))))),
  inference(superposition,[],[f301,f54149])).
fof(f54149,plain,(
  ( ! [X6,X4,X5,X3] : (s('type.list.list'(X4),'const.list.CONS_2'(s(X4,X5),s('type.list.list'(X4),'const.list.TAKE_2'(s('type.num.num',X3),s('type.list.list'(X4),X6))))) = s('type.list.list'(X4),'const.list.TAKE_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X3))),s('type.list.list'(X4),'const.list.CONS_2'(s(X4,X5),s('type.list.list'(X4),X6)))))) )),
  inference(forward_demodulation,[],[f54148,f371])).
fof(f371,plain,(
  ( ! [X2,X0,X1] : (s(X0,X2) = s(X0,'const.bool.COND_3'(s(bool,'F_0'),s(X0,X1),s(X0,X2)))) )),
  inference(cnf_transformation,[],[f122])).
fof(f122,plain,(
  ! [X0,X1,X2] : s(X0,X2) = s(X0,'const.bool.COND_3'(s(bool,'F_0'),s(X0,X1),s(X0,X2)))),
  inference(flattening,[],[f121])).
fof(f121,plain,(
  ! [X0] : ! [X1,X2] : s(X0,X2) = s(X0,'const.bool.COND_3'(s(bool,'F_0'),s(X0,X1),s(X0,X2)))),
  inference(rectify,[],[f36])).
fof(f36,axiom,(
  ! [X10] : ! [X15,X16] : s(X10,X16) = s(X10,'const.bool.COND_3'(s(bool,'F_0'),s(X10,X15),s(X10,X16)))),
  file('thm.list.list_454_prove_ltb|split|2','thm.bool.COND_CLAUSES|split|1')).
fof(f54148,plain,(
  ( ! [X6,X4,X5,X3] : (s('type.list.list'(X4),'const.list.TAKE_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X3))),s('type.list.list'(X4),'const.list.CONS_2'(s(X4,X5),s('type.list.list'(X4),X6))))) = s('type.list.list'(X4),'const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X4),'const.list.NIL_0'),s('type.list.list'(X4),'const.list.CONS_2'(s(X4,X5),s('type.list.list'(X4),'const.list.TAKE_2'(s('type.num.num',X3),s('type.list.list'(X4),X6)))))))) )),
  inference(forward_demodulation,[],[f52164,f683])).
fof(f683,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'F_0') = s(bool,sK17(X0,X1,'const.num.SUC_1'(s('type.num.num',X2)),X3))) )),
  inference(unit_resulting_resolution,[],[f680,f325])).
fof(f325,plain,(
  ( ! [X0] : (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f225])).
fof(f225,plain,(
  ! [X0] : ((s(bool,'F_0') != s(bool,X0) | ~p(s(bool,X0))) & (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f90])).
fof(f90,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(flattening,[],[f89])).
fof(f89,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(rectify,[],[f18])).
fof(f18,axiom,(
  ! [X9] : (s(bool,'F_0') = s(bool,X9) <=> ~p(s(bool,X9)))),
  file('thm.list.list_454_prove_ltb|split|2','thm.bool.EQ_CLAUSES|split|3')).
fof(f680,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,sK17(X0,X1,'const.num.SUC_1'(s('type.num.num',X2)),X3)))) )),
  inference(unit_resulting_resolution,[],[f363,f384])).
fof(f384,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,sK17(X3,X2,X1,X0))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X1)) )),
  inference(cnf_transformation,[],[f257])).
fof(f257,plain,(
  ! [X0,X1,X2,X3] : ((~p(s(bool,sK17(X3,X2,X1,X0))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X1)) & (s('type.num.num','const.num.|48|_0') != s('type.num.num',X1) | p(s(bool,sK17(X3,X2,X1,X0)))) & s('type.list.list'(X0),'const.list.TAKE_2'(s('type.num.num',X1),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),X3))))) = s('type.list.list'(X0),'const.bool.COND_3'(s(bool,sK17(X3,X2,X1,X0)),s('type.list.list'(X0),'const.list.NIL_0'),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.TAKE_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.list.list'(X0),X3))))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK17])],[f256])).
fof(f256,plain,(
  ! [X0,X1,X2,X3] : ? [X4] : ((~p(s(bool,X4)) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X1)) & (s('type.num.num','const.num.|48|_0') != s('type.num.num',X1) | p(s(bool,X4))) & s('type.list.list'(X0),'const.list.TAKE_2'(s('type.num.num',X1),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),X3))))) = s('type.list.list'(X0),'const.bool.COND_3'(s(bool,X4),s('type.list.list'(X0),'const.list.NIL_0'),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.TAKE_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.list.list'(X0),X3))))))))),
  inference(flattening,[],[f255])).
fof(f255,plain,(
  ! [X0,X1,X2,X3] : ? [X4] : (((~p(s(bool,X4)) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X1)) & (s('type.num.num','const.num.|48|_0') != s('type.num.num',X1) | p(s(bool,X4)))) & s('type.list.list'(X0),'const.list.TAKE_2'(s('type.num.num',X1),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),X3))))) = s('type.list.list'(X0),'const.bool.COND_3'(s(bool,X4),s('type.list.list'(X0),'const.list.NIL_0'),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.TAKE_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.list.list'(X0),X3))))))))),
  inference(nnf_transformation,[],[f142])).
fof(f142,plain,(
  ! [X0,X1,X2,X3] : ? [X4] : ((p(s(bool,X4)) <=> s('type.num.num','const.num.|48|_0') = s('type.num.num',X1)) & s('type.list.list'(X0),'const.list.TAKE_2'(s('type.num.num',X1),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),X3))))) = s('type.list.list'(X0),'const.bool.COND_3'(s(bool,X4),s('type.list.list'(X0),'const.list.NIL_0'),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.TAKE_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.list.list'(X0),X3))))))))),
  inference(flattening,[],[f141])).
fof(f141,plain,(
  ! [X0] : ! [X1,X2,X3] : ? [X4] : ((p(s(bool,X4)) <=> s('type.num.num','const.num.|48|_0') = s('type.num.num',X1)) & s('type.list.list'(X0),'const.list.TAKE_2'(s('type.num.num',X1),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),X3))))) = s('type.list.list'(X0),'const.bool.COND_3'(s(bool,X4),s('type.list.list'(X0),'const.list.NIL_0'),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.TAKE_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.list.list'(X0),X3))))))))),
  inference(rectify,[],[f7])).
fof(f7,axiom,(
  ! [X10] : ! [X7,X11,X12] : ? [X13] : ((p(s(bool,X13)) <=> s('type.num.num','const.num.|48|_0') = s('type.num.num',X7)) & s('type.list.list'(X10),'const.list.TAKE_2'(s('type.num.num',X7),s('type.list.list'(X10),'const.list.CONS_2'(s(X10,X11),s('type.list.list'(X10),X12))))) = s('type.list.list'(X10),'const.bool.COND_3'(s(bool,X13),s('type.list.list'(X10),'const.list.NIL_0'),s('type.list.list'(X10),'const.list.CONS_2'(s(X10,X11),s('type.list.list'(X10),'const.list.TAKE_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X7),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.list.list'(X10),X12))))))))),
  file('thm.list.list_454_prove_ltb|split|2','thm.list.TAKE_def|split|1')).
fof(f363,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f108])).
fof(f108,plain,(
  ! [X0] : s('type.num.num','const.num.|48|_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))),
  inference(flattening,[],[f107])).
fof(f107,plain,(
  ! [X0] : ~s('type.num.num','const.num.|48|_0') = s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))),
  inference(rectify,[],[f48])).
fof(f48,axiom,(
  ! [X7] : ~s('type.num.num','const.num.|48|_0') = s('type.num.num','const.num.SUC_1'(s('type.num.num',X7)))),
  file('thm.list.list_454_prove_ltb|split|2','thm.num.NOT_SUC')).
fof(f52164,plain,(
  ( ! [X6,X4,X5,X3] : (s('type.list.list'(X4),'const.list.TAKE_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X3))),s('type.list.list'(X4),'const.list.CONS_2'(s(X4,X5),s('type.list.list'(X4),X6))))) = s('type.list.list'(X4),'const.bool.COND_3'(s(bool,sK17(X6,X5,'const.num.SUC_1'(s('type.num.num',X3)),X4)),s('type.list.list'(X4),'const.list.NIL_0'),s('type.list.list'(X4),'const.list.CONS_2'(s(X4,X5),s('type.list.list'(X4),'const.list.TAKE_2'(s('type.num.num',X3),s('type.list.list'(X4),X6)))))))) )),
  inference(superposition,[],[f386,f311])).
fof(f311,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) )),
  inference(cnf_transformation,[],[f79])).
fof(f79,plain,(
  ! [X0] : s('type.num.num',X0) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),
  inference(rectify,[],[f44])).
fof(f44,axiom,(
  ! [X38] : s('type.num.num',X38) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X38))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),
  file('thm.list.list_454_prove_ltb|split|2','thm.arithmetic.SUC_SUB|49|')).
fof(f386,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.list.list'(X0),'const.list.TAKE_2'(s('type.num.num',X1),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),X3))))) = s('type.list.list'(X0),'const.bool.COND_3'(s(bool,sK17(X3,X2,X1,X0)),s('type.list.list'(X0),'const.list.NIL_0'),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.TAKE_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.list.list'(X0),X3)))))))) )),
  inference(cnf_transformation,[],[f257])).
fof(f301,plain,(
  s('type.list.list'(sK10),'const.list.CONS_2'(s(sK10,sK12),s('type.list.list'(sK10),'const.list.TAKE_2'(s('type.num.num',sK11),s('type.list.list'(sK10),sK13))))) != s('type.list.list'(sK10),'const.list.TAKE_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',sK11))),s('type.list.list'(sK10),'const.list.CONS_2'(s(sK10,sK12),s('type.list.list'(sK10),sK13)))))),
  inference(cnf_transformation,[],[f222])).
fof(f222,plain,(
  s('type.list.list'(sK10),'const.list.CONS_2'(s(sK10,sK12),s('type.list.list'(sK10),'const.list.TAKE_2'(s('type.num.num',sK11),s('type.list.list'(sK10),sK13))))) != s('type.list.list'(sK10),'const.list.TAKE_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',sK11))),s('type.list.list'(sK10),'const.list.CONS_2'(s(sK10,sK12),s('type.list.list'(sK10),sK13)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK10,sK11,sK12,sK13])],[f174])).
fof(f174,plain,(
  ? [X0,X1,X2,X3] : s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.TAKE_2'(s('type.num.num',X1),s('type.list.list'(X0),X3))))) != s('type.list.list'(X0),'const.list.TAKE_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),X3)))))),
  inference(ennf_transformation,[],[f72])).
fof(f72,plain,(
  ~! [X0,X1,X2,X3] : s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.TAKE_2'(s('type.num.num',X1),s('type.list.list'(X0),X3))))) = s('type.list.list'(X0),'const.list.TAKE_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),X3)))))),
  inference(flattening,[],[f71])).
fof(f71,plain,(
  ~! [X0] : ! [X1,X2,X3] : s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.TAKE_2'(s('type.num.num',X1),s('type.list.list'(X0),X3))))) = s('type.list.list'(X0),'const.list.TAKE_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),X3)))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : ! [X7,X8,X9] : s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X8),s('type.list.list'(X6),'const.list.TAKE_2'(s('type.num.num',X7),s('type.list.list'(X6),X9))))) = s('type.list.list'(X6),'const.list.TAKE_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X7))),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X8),s('type.list.list'(X6),X9)))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : ! [X7,X8,X9] : s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X8),s('type.list.list'(X6),'const.list.TAKE_2'(s('type.num.num',X7),s('type.list.list'(X6),X9))))) = s('type.list.list'(X6),'const.list.TAKE_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X7))),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X8),s('type.list.list'(X6),X9)))))),
  file('thm.list.list_454_prove_ltb|split|2','thm.list.list_454_prove_ltb|split|2')).
% SZS output end Proof for thm.list
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 638
% Passive clauses: 4351
% Generated clauses: 350758
% Final active clauses: 539
% Final passive clauses: 1382
% Input formulas: 69
% Initial clauses: 213
% Discarded non-redundant clauses: 24079
% 
% Duplicate literals: 260
% Trivial inequalities: 44
% Fw subsumption resolutions: 1152
% Fw demodulations: 205853
% Bw demodulations: 1594
% Condensations: 673
% Global subsumptions: 1049
% 
% Simple tautologies: 87
% Equational tautologies: 58
% Forward subsumptions: 52348
% Fw demodulations to eq. taut.: 59807
% Bw demodulations to eq. taut.: 90
% 
% Unit resulting resolution: 124816
% Factoring: 1
% Forward superposition: 9573
% Backward superposition: 6053
% Self superposition: 124
% Equality factoring: 26
% Equality resolution: 5
% 
% Split clauses: 57
% Split components: 119
% SAT solver clauses: 7234
% SAT solver unit clauses: 3645
% SAT solver binary clauses: 2123
% 
% Sat splits: 57
% Sat splitting refutations: 1718
% 
% Memory used [KB]: 110659
% Time elapsed: 10.054 s
% ------------------------------
% ------------------------------
% Success in time 11.37 s
