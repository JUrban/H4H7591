Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 299 next slice time: 5
dis+11_7_3 on thm.lebesgue
% (61044)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 648
% Passive clauses: 7092
% Generated clauses: 15696
% Final active clauses: 645
% Final passive clauses: 6098
% Input formulas: 48
% Initial clauses: 190
% 
% Duplicate literals: 473
% Trivial inequalities: 58
% Fw subsumption resolutions: 1406
% Fw demodulations: 316
% Bw demodulations: 3
% 
% Simple tautologies: 216
% Equational tautologies: 55
% Forward subsumptions: 5850
% 
% Binary resolution: 8651
% Factoring: 1272
% Forward superposition: 1999
% Backward superposition: 1136
% Self superposition: 23
% Equality factoring: 26
% Equality resolution: 18
% 
% Split clauses: 287
% Split components: 581
% SAT solver clauses: 556
% SAT solver unit clauses: 14
% SAT solver binary clauses: 101
% 
% Sat splits: 287
% 
% TWLsolver clauses: 556
% TWLsolver calls for satisfiability: 378
% 
% Memory used [KB]: 10234
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 294 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.lebesgue
% (61062)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 389
% Passive clauses: 1945
% Generated clauses: 10224
% Final active clauses: 363
% Final passive clauses: 1216
% Input formulas: 48
% Initial clauses: 190
% 
% Duplicate literals: 352
% Trivial inequalities: 47
% Fw subsumption resolutions: 815
% Fw demodulations: 519
% Bw demodulations: 346
% Condensations: 238
% Global subsumptions: 18
% 
% Simple tautologies: 280
% Equational tautologies: 20
% Forward subsumptions: 3956
% Bw demodulations to eq. taut.: 16
% 
% Binary resolution: 2751
% Factoring: 170
% Forward superposition: 980
% Backward superposition: 1673
% Self superposition: 29
% Equality factoring: 32
% Equality resolution: 11
% 
% Split clauses: 97
% Split components: 196
% SAT solver clauses: 2173
% SAT solver unit clauses: 198
% SAT solver binary clauses: 67
% SAT solver learnt clauses: 36
% SAT solver learnt literals: 10
% 
% Sat splits: 97
% Sat splitting refutations: 3
% 
% TWLsolver clauses: 2101
% TWLsolver calls for satisfiability: 1860
% 
% Memory used [KB]: 12281
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 286 next slice time: 103
lrs+11_2_br=off:cond=on:fde=none:gs=on:gsaa=full_model:lwlo=on:nwc=2:sas=minisat:stl=30:ssfp=100000:ssfq=1.4:smm=sco:ssnc=none:sp=occurrence:urr=on_98 on thm.lebesgue
% (61080)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 1739
% Passive clauses: 7285
% Generated clauses: 135017
% Final active clauses: 349
% Final passive clauses: 557
% Input formulas: 48
% Initial clauses: 190
% 
% Duplicate literals: 7517
% Trivial inequalities: 333
% Fw subsumption resolutions: 6580
% Fw demodulations: 15915
% Bw demodulations: 3562
% Condensations: 10478
% Global subsumptions: 805
% 
% Simple tautologies: 405
% Equational tautologies: 1826
% Forward subsumptions: 81995
% Bw demodulations to eq. taut.: 387
% 
% Unit resulting resolution: 20804
% Factoring: 5
% Forward superposition: 31324
% Backward superposition: 28244
% Self superposition: 425
% Equality factoring: 315
% Equality resolution: 7
% 
% Split clauses: 597
% Split components: 1208
% SAT solver clauses: 10168
% SAT solver unit clauses: 445
% SAT solver binary clauses: 1557
% 
% Sat splits: 597
% Sat splitting refutations: 882
% 
% Memory used [KB]: 69721
% Time elapsed: 10.400 s
% ------------------------------
% ------------------------------
% remaining time: 182 next slice time: 39
dis+11_5_fde=none:nwc=1:sas=minisat:sd=1:ss=axioms:st=5.0:sos=all:sdd=large:sser=off:sfr=on:ssfp=100000:ssfq=2.0:ssnc=none_37 on thm.lebesgue
% (61373)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 2076
% Passive clauses: 37781
% Generated clauses: 187510
% Final active clauses: 1965
% Final passive clauses: 33042
% Input formulas: 48
% Initial clauses: 189
% 
% Selected by SInE selection: 47
% SInE iterations: 1
% 
% Duplicate literals: 5877
% Trivial inequalities: 823
% Fw subsumption resolutions: 15676
% Fw demodulations: 1707
% Bw demodulations: 86
% 
% Simple tautologies: 6535
% Equational tautologies: 1593
% Forward subsumptions: 112714
% 
% Binary resolution: 149876
% Factoring: 157
% Forward superposition: 10335
% Backward superposition: 1798
% Self superposition: 22
% Equality resolution: 75
% 
% Split clauses: 6763
% Split components: 15724
% SAT solver clauses: 7310
% SAT solver unit clauses: 44
% SAT solver binary clauses: 3148
% 
% Sat splits: 6763
% Sat splitting refutations: 48
% 
% Memory used [KB]: 47973
% Time elapsed: 4.0000 s
% ------------------------------
% ------------------------------
% remaining time: 142 next slice time: 6
lrs+1002_2:3_br=off:fde=unused:gs=on:gsaa=from_current:gsem=on:gsssp=full:nwc=1:sas=minisat:stl=30:sac=on:sser=off:sfr=on:ssfp=100000:ssfq=2.0:ssnc=none:sp=reverse_arity:urr=on_4 on thm.lebesgue
% (61467)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 345
% Passive clauses: 2390
% Generated clauses: 12981
% Final active clauses: 338
% Final passive clauses: 1972
% Input formulas: 48
% Initial clauses: 190
% 
% Duplicate literals: 511
% Trivial inequalities: 204
% Fw subsumption resolutions: 1925
% Fw demodulations: 8
% Bw demodulations: 21
% Global subsumptions: 17
% 
% Simple tautologies: 546
% Equational tautologies: 48
% Forward subsumptions: 7258
% 
% Unit resulting resolution: 1348
% Factoring: 18
% Forward superposition: 4372
% Backward superposition: 4203
% Self superposition: 94
% Equality factoring: 6
% Equality resolution: 22
% 
% Split clauses: 22
% Split components: 45
% SAT solver clauses: 2481
% SAT solver unit clauses: 246
% SAT solver binary clauses: 103
% 
% Sat splits: 22
% Sat splitting refutations: 50
% 
% Memory used [KB]: 9338
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 135 next slice time: 15
lrs+1011_12_bs=on:bsr=unit_only:cond=on:gs=on:gsaa=from_current:gsssp=full:nwc=1.1:sas=minisat:stl=60:sos=all:sac=on:sdd=off:sser=off:sfr=on:ssfp=100000:ssfq=1.2:ssnc=none:sp=reverse_arity:updr=off_14 on thm.lebesgue
% (61480)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 968
% Passive clauses: 5216
% Generated clauses: 15126
% Final active clauses: 707
% Final passive clauses: 4011
% Input formulas: 48
% Initial clauses: 190
% 
% Duplicate literals: 763
% Trivial inequalities: 70
% Fw subsumption resolutions: 769
% Bw subsumption resolutions: 304
% Fw demodulations: 236
% Bw demodulations: 19
% Condensations: 1504
% Global subsumptions: 1
% 
% Simple tautologies: 1299
% Equational tautologies: 56
% Forward subsumptions: 5252
% Backward subsumptions: 289
% 
% Binary resolution: 7694
% Factoring: 42
% Forward superposition: 1861
% Backward superposition: 1319
% Self superposition: 42
% Equality factoring: 2
% Equality resolution: 19
% 
% Split clauses: 2
% Split components: 4
% SAT solver clauses: 5264
% SAT solver unit clauses: 128
% SAT solver binary clauses: 492
% 
% Sat splits: 2
% Sat splitting refutations: 42
% 
% Memory used [KB]: 9594
% Time elapsed: 1.600 s
% ------------------------------
% ------------------------------
% remaining time: 119 next slice time: 9
lrs+10_8:1_bd=preordered:bs=on:ccuc=first:fsr=off:fde=unused:gs=on:gsaa=from_current:gsem=on:gsssp=full:nwc=1:nicw=on:sas=minisat:stl=120:sos=on:sscc=on:sser=off:sfr=on:ssfp=4000:ssfq=1.0:ssnc=none:sp=reverse_arity:urr=on_7 on thm.lebesgue
% (61548)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 496
% Passive clauses: 2638
% Generated clauses: 11992
% Final active clauses: 325
% Final passive clauses: 1350
% Input formulas: 48
% Initial clauses: 190
% 
% Duplicate literals: 234
% Trivial inequalities: 101
% Fw demodulations: 866
% Bw demodulations: 6
% Global subsumptions: 678
% 
% Simple tautologies: 370
% Equational tautologies: 157
% Forward subsumptions: 5464
% Backward subsumptions: 1089
% 
% Binary resolution: 3904
% Unit resulting resolution: 3089
% Factoring: 6
% Forward superposition: 181
% Backward superposition: 1661
% Self superposition: 25
% Equality factoring: 26
% Equality resolution: 17
% 
% Split clauses: 198
% Split components: 397
% SAT solver clauses: 5319
% SAT solver unit clauses: 318
% SAT solver binary clauses: 1435
% 
% Sat splits: 198
% Sat splitting refutations: 847
% 
% Memory used [KB]: 17142
% Time elapsed: 1.0000 s
% ------------------------------
% ------------------------------
% remaining time: 109 next slice time: 85
lrs+1_5:4_cond=on:fsr=off:fde=none:gs=on:gsem=on:lwlo=on:nm=64:nwc=1:stl=60:sos=all:spl=off_80 on thm.lebesgue
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.lebesgue
% SZS output start Proof for thm.lebesgue
fof(f32362,plain,(
  $false),
  inference(trivial_inequality_removal,[],[f32273])).
fof(f32273,plain,(
  s(bool,'F_0') != s(bool,'F_0')),
  inference(resolution,[],[f31857,f238])).
fof(f238,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'F_0') != s(bool,X0)) )),
  inference(cnf_transformation,[],[f168])).
fof(f168,plain,(
  ! [X0] : ((s(bool,'F_0') != s(bool,X0) | ~p(s(bool,X0))) & (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f69])).
fof(f69,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(flattening,[],[f68])).
fof(f68,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(rectify,[],[f28])).
fof(f28,axiom,(
  ! [X13] : (s(bool,'F_0') = s(bool,X13) <=> ~p(s(bool,X13)))),
  file('thm.lebesgue.lemma_fn_upper_bounded','thm.bool.EQ_CLAUSES|split|3')).
fof(f31857,plain,(
  p(s(bool,'F_0'))),
  inference(resolution,[],[f31725,f216])).
fof(f216,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f1])).
fof(f1,axiom,(
  p(s(bool,'T_0'))),
  file('thm.lebesgue.lemma_fn_upper_bounded',aHL_TRUTH)).
fof(f31725,plain,(
  ~p(s(bool,'T_0')) | p(s(bool,'F_0'))),
  inference(duplicate_literal_removal,[],[f31419])).
fof(f31419,plain,(
  ~p(s(bool,'T_0')) | p(s(bool,'F_0')) | ~p(s(bool,'T_0'))),
  inference(superposition,[],[f4083,f4158])).
fof(f4158,plain,(
  s(bool,'T_0') = s(bool,'const.bool.IN_2'(s(sK1,sK5),s(fun(sK1,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(sK1,bool),'type.pair.prod'(fun(fun(sK1,bool),bool),fun(fun(sK1,bool),'type.realax.real'))),sK2)))))),
  inference(resolution,[],[f1649,f233])).
fof(f233,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f165])).
fof(f165,plain,(
  ! [X0] : ((s(bool,'T_0') != s(bool,X0) | p(s(bool,X0))) & (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f64])).
fof(f64,plain,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) <=> p(s(bool,X0)))),
  inference(rectify,[],[f26])).
fof(f26,axiom,(
  ! [X13] : (s(bool,'T_0') = s(bool,X13) <=> p(s(bool,X13)))),
  file('thm.lebesgue.lemma_fn_upper_bounded','thm.bool.EQ_CLAUSES|split|1')).
fof(f1649,plain,(
  p(s(bool,'const.bool.IN_2'(s(sK1,sK5),s(fun(sK1,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(sK1,bool),'type.pair.prod'(fun(fun(sK1,bool),bool),fun(fun(sK1,bool),'type.realax.real'))),sK2))))))),
  inference(resolution,[],[f955,f216])).
fof(f955,plain,(
  ~p(s(bool,'T_0')) | p(s(bool,'const.bool.IN_2'(s(sK1,sK5),s(fun(sK1,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(sK1,bool),'type.pair.prod'(fun(fun(sK1,bool),bool),fun(fun(sK1,bool),'type.realax.real'))),sK2))))))),
  inference(forward_demodulation,[],[f894,f720])).
fof(f720,plain,(
  s(bool,'T_0') = s(bool,'const.extreal.extreal_le_2'(s('type.extreal.extreal','const.extreal.extreal_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.extreal.extreal',happ(s(fun(sK1,'type.extreal.extreal'),sK3),s(sK1,sK5)))))),
  inference(resolution,[],[f214,f233])).
fof(f214,plain,(
  p(s(bool,'const.extreal.extreal_le_2'(s('type.extreal.extreal','const.extreal.extreal_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.extreal.extreal',happ(s(fun(sK1,'type.extreal.extreal'),sK3),s(sK1,sK5))))))),
  inference(cnf_transformation,[],[f162])).
fof(f162,plain,(
  p(s(bool,'const.extreal.extreal_le_2'(s('type.extreal.extreal','const.extreal.extreal_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.extreal.extreal',happ(s(fun(sK1,'type.extreal.extreal'),sK3),s(sK1,sK5)))))) & ~p(s(bool,'const.extreal.extreal_le_2'(s('type.extreal.extreal','const.lebesgue.fn_seq_4'(s('type.pair.prod'(fun(sK1,bool),'type.pair.prod'(fun(fun(sK1,bool),bool),fun(fun(sK1,bool),'type.realax.real'))),sK2),s(fun(sK1,'type.extreal.extreal'),sK3),s('type.num.num',sK4),s(sK1,sK5))),s('type.extreal.extreal',happ(s(fun(sK1,'type.extreal.extreal'),sK3),s(sK1,sK5))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK1,sK2,sK3,sK4,sK5])],[f121])).
fof(f121,plain,(
  ? [X0,X1,X2,X3,X4] : (p(s(bool,'const.extreal.extreal_le_2'(s('type.extreal.extreal','const.extreal.extreal_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.extreal.extreal',happ(s(fun(X0,'type.extreal.extreal'),X2),s(X0,X4)))))) & ~p(s(bool,'const.extreal.extreal_le_2'(s('type.extreal.extreal','const.lebesgue.fn_seq_4'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,'type.extreal.extreal'),X2),s('type.num.num',X3),s(X0,X4))),s('type.extreal.extreal',happ(s(fun(X0,'type.extreal.extreal'),X2),s(X0,X4)))))))),
  inference(ennf_transformation,[],[f51])).
fof(f51,plain,(
  ~! [X0,X1,X2,X3,X4] : (p(s(bool,'const.extreal.extreal_le_2'(s('type.extreal.extreal','const.extreal.extreal_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.extreal.extreal',happ(s(fun(X0,'type.extreal.extreal'),X2),s(X0,X4)))))) => p(s(bool,'const.extreal.extreal_le_2'(s('type.extreal.extreal','const.lebesgue.fn_seq_4'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,'type.extreal.extreal'),X2),s('type.num.num',X3),s(X0,X4))),s('type.extreal.extreal',happ(s(fun(X0,'type.extreal.extreal'),X2),s(X0,X4)))))))),
  inference(flattening,[],[f50])).
fof(f50,plain,(
  ~! [X0] : ! [X1,X2,X3,X4] : (p(s(bool,'const.extreal.extreal_le_2'(s('type.extreal.extreal','const.extreal.extreal_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.extreal.extreal',happ(s(fun(X0,'type.extreal.extreal'),X2),s(X0,X4)))))) => p(s(bool,'const.extreal.extreal_le_2'(s('type.extreal.extreal','const.lebesgue.fn_seq_4'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,'type.extreal.extreal'),X2),s('type.num.num',X3),s(X0,X4))),s('type.extreal.extreal',happ(s(fun(X0,'type.extreal.extreal'),X2),s(X0,X4)))))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : ! [X7,X8,X9,X10] : (p(s(bool,'const.extreal.extreal_le_2'(s('type.extreal.extreal','const.extreal.extreal_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.extreal.extreal',happ(s(fun(X6,'type.extreal.extreal'),X8),s(X6,X10)))))) => p(s(bool,'const.extreal.extreal_le_2'(s('type.extreal.extreal','const.lebesgue.fn_seq_4'(s('type.pair.prod'(fun(X6,bool),'type.pair.prod'(fun(fun(X6,bool),bool),fun(fun(X6,bool),'type.realax.real'))),X7),s(fun(X6,'type.extreal.extreal'),X8),s('type.num.num',X9),s(X6,X10))),s('type.extreal.extreal',happ(s(fun(X6,'type.extreal.extreal'),X8),s(X6,X10)))))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : ! [X7,X8,X9,X10] : (p(s(bool,'const.extreal.extreal_le_2'(s('type.extreal.extreal','const.extreal.extreal_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.extreal.extreal',happ(s(fun(X6,'type.extreal.extreal'),X8),s(X6,X10)))))) => p(s(bool,'const.extreal.extreal_le_2'(s('type.extreal.extreal','const.lebesgue.fn_seq_4'(s('type.pair.prod'(fun(X6,bool),'type.pair.prod'(fun(fun(X6,bool),bool),fun(fun(X6,bool),'type.realax.real'))),X7),s(fun(X6,'type.extreal.extreal'),X8),s('type.num.num',X9),s(X6,X10))),s('type.extreal.extreal',happ(s(fun(X6,'type.extreal.extreal'),X8),s(X6,X10)))))))),
  file('thm.lebesgue.lemma_fn_upper_bounded','thm.lebesgue.lemma_fn_upper_bounded')).
fof(f894,plain,(
  ~p(s(bool,'const.extreal.extreal_le_2'(s('type.extreal.extreal','const.extreal.extreal_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.extreal.extreal',happ(s(fun(sK1,'type.extreal.extreal'),sK3),s(sK1,sK5)))))) | p(s(bool,'const.bool.IN_2'(s(sK1,sK5),s(fun(sK1,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(sK1,bool),'type.pair.prod'(fun(fun(sK1,bool),bool),fun(fun(sK1,bool),'type.realax.real'))),sK2))))))),
  inference(superposition,[],[f215,f280])).
fof(f280,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.extreal.extreal','const.extreal.extreal_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.extreal.extreal','const.lebesgue.fn_seq_4'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,'type.extreal.extreal'),X2),s('type.num.num',X3),s(X0,X4))) | p(s(bool,'const.bool.IN_2'(s(X0,X4),s(fun(X0,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1))))))) )),
  inference(cnf_transformation,[],[f137])).
fof(f137,plain,(
  ! [X0,X1,X2,X3,X4] : (p(s(bool,'const.bool.IN_2'(s(X0,X4),s(fun(X0,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))) | s('type.extreal.extreal','const.extreal.extreal_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.extreal.extreal','const.lebesgue.fn_seq_4'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,'type.extreal.extreal'),X2),s('type.num.num',X3),s(X0,X4))))),
  inference(ennf_transformation,[],[f92])).
fof(f92,plain,(
  ! [X0,X1,X2,X3,X4] : (~p(s(bool,'const.bool.IN_2'(s(X0,X4),s(fun(X0,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))) => s('type.extreal.extreal','const.extreal.extreal_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.extreal.extreal','const.lebesgue.fn_seq_4'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,'type.extreal.extreal'),X2),s('type.num.num',X3),s(X0,X4))))),
  inference(flattening,[],[f91])).
fof(f91,plain,(
  ! [X0] : ! [X1,X2,X3,X4] : (~p(s(bool,'const.bool.IN_2'(s(X0,X4),s(fun(X0,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))) => s('type.extreal.extreal','const.extreal.extreal_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.extreal.extreal','const.lebesgue.fn_seq_4'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,'type.extreal.extreal'),X2),s('type.num.num',X3),s(X0,X4))))),
  inference(rectify,[],[f34])).
fof(f34,axiom,(
  ! [X6] : ! [X7,X8,X9,X10] : (~p(s(bool,'const.bool.IN_2'(s(X6,X10),s(fun(X6,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(X6,bool),'type.pair.prod'(fun(fun(X6,bool),bool),fun(fun(X6,bool),'type.realax.real'))),X7)))))) => s('type.extreal.extreal','const.extreal.extreal_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.extreal.extreal','const.lebesgue.fn_seq_4'(s('type.pair.prod'(fun(X6,bool),'type.pair.prod'(fun(fun(X6,bool),bool),fun(fun(X6,bool),'type.realax.real'))),X7),s(fun(X6,'type.extreal.extreal'),X8),s('type.num.num',X9),s(X6,X10))))),
  file('thm.lebesgue.lemma_fn_upper_bounded','thm.lebesgue.lemma_fn_4')).
fof(f215,plain,(
  ~p(s(bool,'const.extreal.extreal_le_2'(s('type.extreal.extreal','const.lebesgue.fn_seq_4'(s('type.pair.prod'(fun(sK1,bool),'type.pair.prod'(fun(fun(sK1,bool),bool),fun(fun(sK1,bool),'type.realax.real'))),sK2),s(fun(sK1,'type.extreal.extreal'),sK3),s('type.num.num',sK4),s(sK1,sK5))),s('type.extreal.extreal',happ(s(fun(sK1,'type.extreal.extreal'),sK3),s(sK1,sK5))))))),
  inference(cnf_transformation,[],[f162])).
fof(f4083,plain,(
  ( ! [X0] : (~p(s(bool,'const.bool.IN_2'(s(sK1,sK5),s(fun(sK1,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(sK1,bool),'type.pair.prod'(fun(fun(sK1,bool),bool),fun(fun(sK1,bool),'type.realax.real'))),X0)))))) | p(s(bool,'F_0')) | ~p(s(bool,'T_0'))) )),
  inference(global_subsumption,[],[f4082,f3207,f1649,f3209])).
fof(f3209,plain,(
  ( ! [X1] : (~p(s(bool,'T_0')) | ~p(s(bool,'const.bool.IN_2'(s(sK1,sK5),s(fun(sK1,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(sK1,bool),'type.pair.prod'(fun(fun(sK1,bool),bool),fun(fun(sK1,bool),'type.realax.real'))),sK2)))))) | p(s(bool,'const.extreal.extreal_le_2'(s('type.extreal.extreal','const.extreal.extreal_div_2'(s('type.extreal.extreal','const.extreal.extreal_of_num_1'(s('type.num.num',sK6(sK5,sK4,sK3,X1,sK1)))),s('type.extreal.extreal','const.extreal.extreal_pow_2'(s('type.extreal.extreal','const.extreal.extreal_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',sK4))))),s('type.extreal.extreal',happ(s(fun(sK1,'type.extreal.extreal'),sK3),s(sK1,sK5)))))) | ~p(s(bool,'const.bool.IN_2'(s(sK1,sK5),s(fun(sK1,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(sK1,bool),'type.pair.prod'(fun(fun(sK1,bool),bool),fun(fun(sK1,bool),'type.realax.real'))),X1))))))) )),
  inference(forward_demodulation,[],[f3118,f720])).
fof(f3118,plain,(
  ( ! [X1] : (~p(s(bool,'const.bool.IN_2'(s(sK1,sK5),s(fun(sK1,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(sK1,bool),'type.pair.prod'(fun(fun(sK1,bool),bool),fun(fun(sK1,bool),'type.realax.real'))),sK2)))))) | p(s(bool,'const.extreal.extreal_le_2'(s('type.extreal.extreal','const.extreal.extreal_div_2'(s('type.extreal.extreal','const.extreal.extreal_of_num_1'(s('type.num.num',sK6(sK5,sK4,sK3,X1,sK1)))),s('type.extreal.extreal','const.extreal.extreal_pow_2'(s('type.extreal.extreal','const.extreal.extreal_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',sK4))))),s('type.extreal.extreal',happ(s(fun(sK1,'type.extreal.extreal'),sK3),s(sK1,sK5)))))) | ~p(s(bool,'const.extreal.extreal_le_2'(s('type.extreal.extreal','const.extreal.extreal_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.extreal.extreal',happ(s(fun(sK1,'type.extreal.extreal'),sK3),s(sK1,sK5)))))) | ~p(s(bool,'const.bool.IN_2'(s(sK1,sK5),s(fun(sK1,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(sK1,bool),'type.pair.prod'(fun(fun(sK1,bool),bool),fun(fun(sK1,bool),'type.realax.real'))),X1))))))) )),
  inference(resolution,[],[f930,f277])).
fof(f277,plain,(
  ( ! [X4,X2,X0,X3,X1] : (p(s(bool,'const.extreal.extreal_le_2'(s('type.extreal.extreal','const.extreal.extreal_div_2'(s('type.extreal.extreal','const.extreal.extreal_of_num_1'(s('type.num.num',sK6(X4,X3,X2,X1,X0)))),s('type.extreal.extreal','const.extreal.extreal_pow_2'(s('type.extreal.extreal','const.extreal.extreal_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X3))))),s('type.extreal.extreal',happ(s(fun(X0,'type.extreal.extreal'),X2),s(X0,X4)))))) | p(s(bool,'const.extreal.extreal_le_2'(s('type.extreal.extreal','const.extreal.extreal_pow_2'(s('type.extreal.extreal','const.extreal.extreal_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X3))),s('type.extreal.extreal',happ(s(fun(X0,'type.extreal.extreal'),X2),s(X0,X4)))))) | ~p(s(bool,'const.extreal.extreal_le_2'(s('type.extreal.extreal','const.extreal.extreal_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.extreal.extreal',happ(s(fun(X0,'type.extreal.extreal'),X2),s(X0,X4)))))) | ~p(s(bool,'const.bool.IN_2'(s(X0,X4),s(fun(X0,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1))))))) )),
  inference(cnf_transformation,[],[f192])).
fof(f192,plain,(
  ! [X0,X1,X2,X3,X4] : (~p(s(bool,'const.bool.IN_2'(s(X0,X4),s(fun(X0,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))) | ~p(s(bool,'const.extreal.extreal_le_2'(s('type.extreal.extreal','const.extreal.extreal_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.extreal.extreal',happ(s(fun(X0,'type.extreal.extreal'),X2),s(X0,X4)))))) | p(s(bool,'const.extreal.extreal_le_2'(s('type.extreal.extreal','const.extreal.extreal_pow_2'(s('type.extreal.extreal','const.extreal.extreal_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X3))),s('type.extreal.extreal',happ(s(fun(X0,'type.extreal.extreal'),X2),s(X0,X4)))))) | (p(s(bool,'const.bool.IN_2'(s('type.num.num',sK6(X4,X3,X2,X1,X0)),s(fun('type.num.num',bool),'const.pred_set.count_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X3)))))))) & p(s(bool,'const.extreal.extreal_le_2'(s('type.extreal.extreal','const.extreal.extreal_div_2'(s('type.extreal.extreal','const.extreal.extreal_of_num_1'(s('type.num.num',sK6(X4,X3,X2,X1,X0)))),s('type.extreal.extreal','const.extreal.extreal_pow_2'(s('type.extreal.extreal','const.extreal.extreal_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X3))))),s('type.extreal.extreal',happ(s(fun(X0,'type.extreal.extreal'),X2),s(X0,X4)))))) & p(s(bool,'const.extreal.extreal_lt_2'(s('type.extreal.extreal',happ(s(fun(X0,'type.extreal.extreal'),X2),s(X0,X4))),s('type.extreal.extreal','const.extreal.extreal_div_2'(s('type.extreal.extreal','const.extreal.extreal_add_2'(s('type.extreal.extreal','const.extreal.extreal_of_num_1'(s('type.num.num',sK6(X4,X3,X2,X1,X0)))),s('type.extreal.extreal','const.extreal.extreal_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.extreal.extreal','const.extreal.extreal_pow_2'(s('type.extreal.extreal','const.extreal.extreal_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X3))))))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK6])],[f134])).
fof(f134,plain,(
  ! [X0,X1,X2,X3,X4] : (~p(s(bool,'const.bool.IN_2'(s(X0,X4),s(fun(X0,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))) | ~p(s(bool,'const.extreal.extreal_le_2'(s('type.extreal.extreal','const.extreal.extreal_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.extreal.extreal',happ(s(fun(X0,'type.extreal.extreal'),X2),s(X0,X4)))))) | p(s(bool,'const.extreal.extreal_le_2'(s('type.extreal.extreal','const.extreal.extreal_pow_2'(s('type.extreal.extreal','const.extreal.extreal_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X3))),s('type.extreal.extreal',happ(s(fun(X0,'type.extreal.extreal'),X2),s(X0,X4)))))) | ? [X5] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',X5),s(fun('type.num.num',bool),'const.pred_set.count_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X3)))))))) & p(s(bool,'const.extreal.extreal_le_2'(s('type.extreal.extreal','const.extreal.extreal_div_2'(s('type.extreal.extreal','const.extreal.extreal_of_num_1'(s('type.num.num',X5))),s('type.extreal.extreal','const.extreal.extreal_pow_2'(s('type.extreal.extreal','const.extreal.extreal_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X3))))),s('type.extreal.extreal',happ(s(fun(X0,'type.extreal.extreal'),X2),s(X0,X4)))))) & p(s(bool,'const.extreal.extreal_lt_2'(s('type.extreal.extreal',happ(s(fun(X0,'type.extreal.extreal'),X2),s(X0,X4))),s('type.extreal.extreal','const.extreal.extreal_div_2'(s('type.extreal.extreal','const.extreal.extreal_add_2'(s('type.extreal.extreal','const.extreal.extreal_of_num_1'(s('type.num.num',X5))),s('type.extreal.extreal','const.extreal.extreal_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.extreal.extreal','const.extreal.extreal_pow_2'(s('type.extreal.extreal','const.extreal.extreal_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X3))))))))))),
  inference(flattening,[],[f133])).
fof(f133,plain,(
  ! [X0,X1,X2,X3,X4] : ((~p(s(bool,'const.bool.IN_2'(s(X0,X4),s(fun(X0,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))) | ~p(s(bool,'const.extreal.extreal_le_2'(s('type.extreal.extreal','const.extreal.extreal_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.extreal.extreal',happ(s(fun(X0,'type.extreal.extreal'),X2),s(X0,X4))))))) | (p(s(bool,'const.extreal.extreal_le_2'(s('type.extreal.extreal','const.extreal.extreal_pow_2'(s('type.extreal.extreal','const.extreal.extreal_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X3))),s('type.extreal.extreal',happ(s(fun(X0,'type.extreal.extreal'),X2),s(X0,X4)))))) | ? [X5] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',X5),s(fun('type.num.num',bool),'const.pred_set.count_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X3)))))))) & p(s(bool,'const.extreal.extreal_le_2'(s('type.extreal.extreal','const.extreal.extreal_div_2'(s('type.extreal.extreal','const.extreal.extreal_of_num_1'(s('type.num.num',X5))),s('type.extreal.extreal','const.extreal.extreal_pow_2'(s('type.extreal.extreal','const.extreal.extreal_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X3))))),s('type.extreal.extreal',happ(s(fun(X0,'type.extreal.extreal'),X2),s(X0,X4)))))) & p(s(bool,'const.extreal.extreal_lt_2'(s('type.extreal.extreal',happ(s(fun(X0,'type.extreal.extreal'),X2),s(X0,X4))),s('type.extreal.extreal','const.extreal.extreal_div_2'(s('type.extreal.extreal','const.extreal.extreal_add_2'(s('type.extreal.extreal','const.extreal.extreal_of_num_1'(s('type.num.num',X5))),s('type.extreal.extreal','const.extreal.extreal_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.extreal.extreal','const.extreal.extreal_pow_2'(s('type.extreal.extreal','const.extreal.extreal_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X3)))))))))))),
  inference(ennf_transformation,[],[f88])).
fof(f88,plain,(
  ! [X0,X1,X2,X3,X4] : ((p(s(bool,'const.bool.IN_2'(s(X0,X4),s(fun(X0,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))) & p(s(bool,'const.extreal.extreal_le_2'(s('type.extreal.extreal','const.extreal.extreal_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.extreal.extreal',happ(s(fun(X0,'type.extreal.extreal'),X2),s(X0,X4))))))) => (p(s(bool,'const.extreal.extreal_le_2'(s('type.extreal.extreal','const.extreal.extreal_pow_2'(s('type.extreal.extreal','const.extreal.extreal_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X3))),s('type.extreal.extreal',happ(s(fun(X0,'type.extreal.extreal'),X2),s(X0,X4)))))) | ? [X5] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',X5),s(fun('type.num.num',bool),'const.pred_set.count_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X3)))))))) & p(s(bool,'const.extreal.extreal_le_2'(s('type.extreal.extreal','const.extreal.extreal_div_2'(s('type.extreal.extreal','const.extreal.extreal_of_num_1'(s('type.num.num',X5))),s('type.extreal.extreal','const.extreal.extreal_pow_2'(s('type.extreal.extreal','const.extreal.extreal_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X3))))),s('type.extreal.extreal',happ(s(fun(X0,'type.extreal.extreal'),X2),s(X0,X4)))))) & p(s(bool,'const.extreal.extreal_lt_2'(s('type.extreal.extreal',happ(s(fun(X0,'type.extreal.extreal'),X2),s(X0,X4))),s('type.extreal.extreal','const.extreal.extreal_div_2'(s('type.extreal.extreal','const.extreal.extreal_add_2'(s('type.extreal.extreal','const.extreal.extreal_of_num_1'(s('type.num.num',X5))),s('type.extreal.extreal','const.extreal.extreal_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.extreal.extreal','const.extreal.extreal_pow_2'(s('type.extreal.extreal','const.extreal.extreal_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X3)))))))))))),
  inference(flattening,[],[f87])).
fof(f87,plain,(
  ! [X0] : ! [X1,X2,X3,X4] : ((p(s(bool,'const.bool.IN_2'(s(X0,X4),s(fun(X0,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))) & p(s(bool,'const.extreal.extreal_le_2'(s('type.extreal.extreal','const.extreal.extreal_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.extreal.extreal',happ(s(fun(X0,'type.extreal.extreal'),X2),s(X0,X4))))))) => (p(s(bool,'const.extreal.extreal_le_2'(s('type.extreal.extreal','const.extreal.extreal_pow_2'(s('type.extreal.extreal','const.extreal.extreal_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X3))),s('type.extreal.extreal',happ(s(fun(X0,'type.extreal.extreal'),X2),s(X0,X4)))))) | ? [X5] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',X5),s(fun('type.num.num',bool),'const.pred_set.count_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X3)))))))) & p(s(bool,'const.extreal.extreal_le_2'(s('type.extreal.extreal','const.extreal.extreal_div_2'(s('type.extreal.extreal','const.extreal.extreal_of_num_1'(s('type.num.num',X5))),s('type.extreal.extreal','const.extreal.extreal_pow_2'(s('type.extreal.extreal','const.extreal.extreal_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X3))))),s('type.extreal.extreal',happ(s(fun(X0,'type.extreal.extreal'),X2),s(X0,X4)))))) & p(s(bool,'const.extreal.extreal_lt_2'(s('type.extreal.extreal',happ(s(fun(X0,'type.extreal.extreal'),X2),s(X0,X4))),s('type.extreal.extreal','const.extreal.extreal_div_2'(s('type.extreal.extreal','const.extreal.extreal_add_2'(s('type.extreal.extreal','const.extreal.extreal_of_num_1'(s('type.num.num',X5))),s('type.extreal.extreal','const.extreal.extreal_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.extreal.extreal','const.extreal.extreal_pow_2'(s('type.extreal.extreal','const.extreal.extreal_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X3)))))))))))),
  inference(rectify,[],[f33])).
fof(f33,axiom,(
  ! [X6] : ! [X7,X8,X9,X10] : ((p(s(bool,'const.bool.IN_2'(s(X6,X10),s(fun(X6,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(X6,bool),'type.pair.prod'(fun(fun(X6,bool),bool),fun(fun(X6,bool),'type.realax.real'))),X7)))))) & p(s(bool,'const.extreal.extreal_le_2'(s('type.extreal.extreal','const.extreal.extreal_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.extreal.extreal',happ(s(fun(X6,'type.extreal.extreal'),X8),s(X6,X10))))))) => (p(s(bool,'const.extreal.extreal_le_2'(s('type.extreal.extreal','const.extreal.extreal_pow_2'(s('type.extreal.extreal','const.extreal.extreal_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X9))),s('type.extreal.extreal',happ(s(fun(X6,'type.extreal.extreal'),X8),s(X6,X10)))))) | ? [X18] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',X18),s(fun('type.num.num',bool),'const.pred_set.count_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X9)))))))) & p(s(bool,'const.extreal.extreal_le_2'(s('type.extreal.extreal','const.extreal.extreal_div_2'(s('type.extreal.extreal','const.extreal.extreal_of_num_1'(s('type.num.num',X18))),s('type.extreal.extreal','const.extreal.extreal_pow_2'(s('type.extreal.extreal','const.extreal.extreal_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X9))))),s('type.extreal.extreal',happ(s(fun(X6,'type.extreal.extreal'),X8),s(X6,X10)))))) & p(s(bool,'const.extreal.extreal_lt_2'(s('type.extreal.extreal',happ(s(fun(X6,'type.extreal.extreal'),X8),s(X6,X10))),s('type.extreal.extreal','const.extreal.extreal_div_2'(s('type.extreal.extreal','const.extreal.extreal_add_2'(s('type.extreal.extreal','const.extreal.extreal_of_num_1'(s('type.num.num',X18))),s('type.extreal.extreal','const.extreal.extreal_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.extreal.extreal','const.extreal.extreal_pow_2'(s('type.extreal.extreal','const.extreal.extreal_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X9)))))))))))),
  file('thm.lebesgue.lemma_fn_upper_bounded','thm.lebesgue.lemma_fn_3')).
fof(f930,plain,(
  ~p(s(bool,'const.extreal.extreal_le_2'(s('type.extreal.extreal','const.extreal.extreal_pow_2'(s('type.extreal.extreal','const.extreal.extreal_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',sK4))),s('type.extreal.extreal',happ(s(fun(sK1,'type.extreal.extreal'),sK3),s(sK1,sK5)))))) | ~p(s(bool,'const.bool.IN_2'(s(sK1,sK5),s(fun(sK1,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(sK1,bool),'type.pair.prod'(fun(fun(sK1,bool),bool),fun(fun(sK1,bool),'type.realax.real'))),sK2))))))),
  inference(duplicate_literal_removal,[],[f895])).
fof(f895,plain,(
  ~p(s(bool,'const.extreal.extreal_le_2'(s('type.extreal.extreal','const.extreal.extreal_pow_2'(s('type.extreal.extreal','const.extreal.extreal_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',sK4))),s('type.extreal.extreal',happ(s(fun(sK1,'type.extreal.extreal'),sK3),s(sK1,sK5)))))) | ~p(s(bool,'const.extreal.extreal_le_2'(s('type.extreal.extreal','const.extreal.extreal_pow_2'(s('type.extreal.extreal','const.extreal.extreal_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',sK4))),s('type.extreal.extreal',happ(s(fun(sK1,'type.extreal.extreal'),sK3),s(sK1,sK5)))))) | ~p(s(bool,'const.bool.IN_2'(s(sK1,sK5),s(fun(sK1,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(sK1,bool),'type.pair.prod'(fun(fun(sK1,bool),bool),fun(fun(sK1,bool),'type.realax.real'))),sK2))))))),
  inference(superposition,[],[f215,f279])).
fof(f279,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.extreal.extreal','const.extreal.extreal_pow_2'(s('type.extreal.extreal','const.extreal.extreal_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X3))) = s('type.extreal.extreal','const.lebesgue.fn_seq_4'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,'type.extreal.extreal'),X2),s('type.num.num',X3),s(X0,X4))) | ~p(s(bool,'const.extreal.extreal_le_2'(s('type.extreal.extreal','const.extreal.extreal_pow_2'(s('type.extreal.extreal','const.extreal.extreal_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X3))),s('type.extreal.extreal',happ(s(fun(X0,'type.extreal.extreal'),X2),s(X0,X4)))))) | ~p(s(bool,'const.bool.IN_2'(s(X0,X4),s(fun(X0,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1))))))) )),
  inference(cnf_transformation,[],[f136])).
fof(f136,plain,(
  ! [X0,X1,X2,X3,X4] : (~p(s(bool,'const.bool.IN_2'(s(X0,X4),s(fun(X0,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))) | ~p(s(bool,'const.extreal.extreal_le_2'(s('type.extreal.extreal','const.extreal.extreal_pow_2'(s('type.extreal.extreal','const.extreal.extreal_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X3))),s('type.extreal.extreal',happ(s(fun(X0,'type.extreal.extreal'),X2),s(X0,X4)))))) | s('type.extreal.extreal','const.extreal.extreal_pow_2'(s('type.extreal.extreal','const.extreal.extreal_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X3))) = s('type.extreal.extreal','const.lebesgue.fn_seq_4'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,'type.extreal.extreal'),X2),s('type.num.num',X3),s(X0,X4))))),
  inference(flattening,[],[f135])).
fof(f135,plain,(
  ! [X0,X1,X2,X3,X4] : ((~p(s(bool,'const.bool.IN_2'(s(X0,X4),s(fun(X0,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))) | ~p(s(bool,'const.extreal.extreal_le_2'(s('type.extreal.extreal','const.extreal.extreal_pow_2'(s('type.extreal.extreal','const.extreal.extreal_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X3))),s('type.extreal.extreal',happ(s(fun(X0,'type.extreal.extreal'),X2),s(X0,X4))))))) | s('type.extreal.extreal','const.extreal.extreal_pow_2'(s('type.extreal.extreal','const.extreal.extreal_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X3))) = s('type.extreal.extreal','const.lebesgue.fn_seq_4'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,'type.extreal.extreal'),X2),s('type.num.num',X3),s(X0,X4))))),
  inference(ennf_transformation,[],[f90])).
fof(f90,plain,(
  ! [X0,X1,X2,X3,X4] : ((p(s(bool,'const.bool.IN_2'(s(X0,X4),s(fun(X0,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))) & p(s(bool,'const.extreal.extreal_le_2'(s('type.extreal.extreal','const.extreal.extreal_pow_2'(s('type.extreal.extreal','const.extreal.extreal_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X3))),s('type.extreal.extreal',happ(s(fun(X0,'type.extreal.extreal'),X2),s(X0,X4))))))) => s('type.extreal.extreal','const.extreal.extreal_pow_2'(s('type.extreal.extreal','const.extreal.extreal_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X3))) = s('type.extreal.extreal','const.lebesgue.fn_seq_4'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,'type.extreal.extreal'),X2),s('type.num.num',X3),s(X0,X4))))),
  inference(flattening,[],[f89])).
fof(f89,plain,(
  ! [X0] : ! [X1,X2,X3,X4] : ((p(s(bool,'const.bool.IN_2'(s(X0,X4),s(fun(X0,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))) & p(s(bool,'const.extreal.extreal_le_2'(s('type.extreal.extreal','const.extreal.extreal_pow_2'(s('type.extreal.extreal','const.extreal.extreal_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X3))),s('type.extreal.extreal',happ(s(fun(X0,'type.extreal.extreal'),X2),s(X0,X4))))))) => s('type.extreal.extreal','const.extreal.extreal_pow_2'(s('type.extreal.extreal','const.extreal.extreal_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X3))) = s('type.extreal.extreal','const.lebesgue.fn_seq_4'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,'type.extreal.extreal'),X2),s('type.num.num',X3),s(X0,X4))))),
  inference(rectify,[],[f32])).
fof(f32,axiom,(
  ! [X6] : ! [X7,X8,X9,X10] : ((p(s(bool,'const.bool.IN_2'(s(X6,X10),s(fun(X6,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(X6,bool),'type.pair.prod'(fun(fun(X6,bool),bool),fun(fun(X6,bool),'type.realax.real'))),X7)))))) & p(s(bool,'const.extreal.extreal_le_2'(s('type.extreal.extreal','const.extreal.extreal_pow_2'(s('type.extreal.extreal','const.extreal.extreal_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X9))),s('type.extreal.extreal',happ(s(fun(X6,'type.extreal.extreal'),X8),s(X6,X10))))))) => s('type.extreal.extreal','const.extreal.extreal_pow_2'(s('type.extreal.extreal','const.extreal.extreal_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X9))) = s('type.extreal.extreal','const.lebesgue.fn_seq_4'(s('type.pair.prod'(fun(X6,bool),'type.pair.prod'(fun(fun(X6,bool),bool),fun(fun(X6,bool),'type.realax.real'))),X7),s(fun(X6,'type.extreal.extreal'),X8),s('type.num.num',X9),s(X6,X10))))),
  file('thm.lebesgue.lemma_fn_upper_bounded','thm.lebesgue.lemma_fn_2')).
fof(f3207,plain,(
  ( ! [X0] : (~p(s(bool,'T_0')) | ~p(s(bool,'const.bool.IN_2'(s(sK1,sK5),s(fun(sK1,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(sK1,bool),'type.pair.prod'(fun(fun(sK1,bool),bool),fun(fun(sK1,bool),'type.realax.real'))),sK2)))))) | p(s(bool,'const.bool.IN_2'(s('type.num.num',sK6(sK5,sK4,sK3,X0,sK1)),s(fun('type.num.num',bool),'const.pred_set.count_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',sK4)))))))) | ~p(s(bool,'const.bool.IN_2'(s(sK1,sK5),s(fun(sK1,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(sK1,bool),'type.pair.prod'(fun(fun(sK1,bool),bool),fun(fun(sK1,bool),'type.realax.real'))),X0))))))) )),
  inference(forward_demodulation,[],[f3117,f720])).
fof(f3117,plain,(
  ( ! [X0] : (~p(s(bool,'const.bool.IN_2'(s(sK1,sK5),s(fun(sK1,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(sK1,bool),'type.pair.prod'(fun(fun(sK1,bool),bool),fun(fun(sK1,bool),'type.realax.real'))),sK2)))))) | p(s(bool,'const.bool.IN_2'(s('type.num.num',sK6(sK5,sK4,sK3,X0,sK1)),s(fun('type.num.num',bool),'const.pred_set.count_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',sK4)))))))) | ~p(s(bool,'const.extreal.extreal_le_2'(s('type.extreal.extreal','const.extreal.extreal_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.extreal.extreal',happ(s(fun(sK1,'type.extreal.extreal'),sK3),s(sK1,sK5)))))) | ~p(s(bool,'const.bool.IN_2'(s(sK1,sK5),s(fun(sK1,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(sK1,bool),'type.pair.prod'(fun(fun(sK1,bool),bool),fun(fun(sK1,bool),'type.realax.real'))),X0))))))) )),
  inference(resolution,[],[f930,f276])).
fof(f276,plain,(
  ( ! [X4,X2,X0,X3,X1] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',sK6(X4,X3,X2,X1,X0)),s(fun('type.num.num',bool),'const.pred_set.count_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X3)))))))) | p(s(bool,'const.extreal.extreal_le_2'(s('type.extreal.extreal','const.extreal.extreal_pow_2'(s('type.extreal.extreal','const.extreal.extreal_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X3))),s('type.extreal.extreal',happ(s(fun(X0,'type.extreal.extreal'),X2),s(X0,X4)))))) | ~p(s(bool,'const.extreal.extreal_le_2'(s('type.extreal.extreal','const.extreal.extreal_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.extreal.extreal',happ(s(fun(X0,'type.extreal.extreal'),X2),s(X0,X4)))))) | ~p(s(bool,'const.bool.IN_2'(s(X0,X4),s(fun(X0,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1))))))) )),
  inference(cnf_transformation,[],[f192])).
fof(f4082,plain,(
  ( ! [X0] : (~p(s(bool,'T_0')) | p(s(bool,'F_0')) | ~p(s(bool,'const.extreal.extreal_le_2'(s('type.extreal.extreal','const.extreal.extreal_div_2'(s('type.extreal.extreal','const.extreal.extreal_of_num_1'(s('type.num.num',sK6(sK5,sK4,sK3,X0,sK1)))),s('type.extreal.extreal','const.extreal.extreal_pow_2'(s('type.extreal.extreal','const.extreal.extreal_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',sK4))))),s('type.extreal.extreal',happ(s(fun(sK1,'type.extreal.extreal'),sK3),s(sK1,sK5)))))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',sK6(sK5,sK4,sK3,X0,sK1)),s(fun('type.num.num',bool),'const.pred_set.count_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',sK4)))))))) | ~p(s(bool,'const.bool.IN_2'(s(sK1,sK5),s(fun(sK1,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(sK1,bool),'type.pair.prod'(fun(fun(sK1,bool),bool),fun(fun(sK1,bool),'type.realax.real'))),sK2)))))) | ~p(s(bool,'const.bool.IN_2'(s(sK1,sK5),s(fun(sK1,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(sK1,bool),'type.pair.prod'(fun(fun(sK1,bool),bool),fun(fun(sK1,bool),'type.realax.real'))),X0))))))) )),
  inference(forward_demodulation,[],[f4081,f720])).
fof(f4081,plain,(
  ( ! [X0] : (p(s(bool,'F_0')) | ~p(s(bool,'const.extreal.extreal_le_2'(s('type.extreal.extreal','const.extreal.extreal_div_2'(s('type.extreal.extreal','const.extreal.extreal_of_num_1'(s('type.num.num',sK6(sK5,sK4,sK3,X0,sK1)))),s('type.extreal.extreal','const.extreal.extreal_pow_2'(s('type.extreal.extreal','const.extreal.extreal_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',sK4))))),s('type.extreal.extreal',happ(s(fun(sK1,'type.extreal.extreal'),sK3),s(sK1,sK5)))))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',sK6(sK5,sK4,sK3,X0,sK1)),s(fun('type.num.num',bool),'const.pred_set.count_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',sK4)))))))) | ~p(s(bool,'const.bool.IN_2'(s(sK1,sK5),s(fun(sK1,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(sK1,bool),'type.pair.prod'(fun(fun(sK1,bool),bool),fun(fun(sK1,bool),'type.realax.real'))),sK2)))))) | ~p(s(bool,'const.extreal.extreal_le_2'(s('type.extreal.extreal','const.extreal.extreal_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.extreal.extreal',happ(s(fun(sK1,'type.extreal.extreal'),sK3),s(sK1,sK5)))))) | ~p(s(bool,'const.bool.IN_2'(s(sK1,sK5),s(fun(sK1,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(sK1,bool),'type.pair.prod'(fun(fun(sK1,bool),bool),fun(fun(sK1,bool),'type.realax.real'))),X0))))))) )),
  inference(forward_demodulation,[],[f3993,f3214])).
fof(f3214,plain,(
  s(bool,'F_0') = s(bool,'const.extreal.extreal_le_2'(s('type.extreal.extreal','const.extreal.extreal_pow_2'(s('type.extreal.extreal','const.extreal.extreal_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',sK4))),s('type.extreal.extreal',happ(s(fun(sK1,'type.extreal.extreal'),sK3),s(sK1,sK5)))))),
  inference(global_subsumption,[],[f3123,f1649])).
fof(f3123,plain,(
  ~p(s(bool,'const.bool.IN_2'(s(sK1,sK5),s(fun(sK1,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(sK1,bool),'type.pair.prod'(fun(fun(sK1,bool),bool),fun(fun(sK1,bool),'type.realax.real'))),sK2)))))) | s(bool,'F_0') = s(bool,'const.extreal.extreal_le_2'(s('type.extreal.extreal','const.extreal.extreal_pow_2'(s('type.extreal.extreal','const.extreal.extreal_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',sK4))),s('type.extreal.extreal',happ(s(fun(sK1,'type.extreal.extreal'),sK3),s(sK1,sK5)))))),
  inference(resolution,[],[f930,f237])).
fof(f237,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f167])).
fof(f167,plain,(
  ! [X0] : ((s(bool,'F_0') != s(bool,X0) | ~p(s(bool,X0))) & (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f67])).
fof(f67,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(flattening,[],[f66])).
fof(f66,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(rectify,[],[f27])).
fof(f27,axiom,(
  ! [X13] : (s(bool,'F_0') = s(bool,X13) <=> ~p(s(bool,X13)))),
  file('thm.lebesgue.lemma_fn_upper_bounded','thm.bool.EQ_CLAUSES|split|2')).
fof(f3993,plain,(
  ( ! [X0] : (~p(s(bool,'const.extreal.extreal_le_2'(s('type.extreal.extreal','const.extreal.extreal_div_2'(s('type.extreal.extreal','const.extreal.extreal_of_num_1'(s('type.num.num',sK6(sK5,sK4,sK3,X0,sK1)))),s('type.extreal.extreal','const.extreal.extreal_pow_2'(s('type.extreal.extreal','const.extreal.extreal_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',sK4))))),s('type.extreal.extreal',happ(s(fun(sK1,'type.extreal.extreal'),sK3),s(sK1,sK5)))))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',sK6(sK5,sK4,sK3,X0,sK1)),s(fun('type.num.num',bool),'const.pred_set.count_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',sK4)))))))) | ~p(s(bool,'const.bool.IN_2'(s(sK1,sK5),s(fun(sK1,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(sK1,bool),'type.pair.prod'(fun(fun(sK1,bool),bool),fun(fun(sK1,bool),'type.realax.real'))),sK2)))))) | p(s(bool,'const.extreal.extreal_le_2'(s('type.extreal.extreal','const.extreal.extreal_pow_2'(s('type.extreal.extreal','const.extreal.extreal_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',sK4))),s('type.extreal.extreal',happ(s(fun(sK1,'type.extreal.extreal'),sK3),s(sK1,sK5)))))) | ~p(s(bool,'const.extreal.extreal_le_2'(s('type.extreal.extreal','const.extreal.extreal_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.extreal.extreal',happ(s(fun(sK1,'type.extreal.extreal'),sK3),s(sK1,sK5)))))) | ~p(s(bool,'const.bool.IN_2'(s(sK1,sK5),s(fun(sK1,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(sK1,bool),'type.pair.prod'(fun(fun(sK1,bool),bool),fun(fun(sK1,bool),'type.realax.real'))),X0))))))) )),
  inference(resolution,[],[f931,f278])).
fof(f278,plain,(
  ( ! [X4,X2,X0,X3,X1] : (p(s(bool,'const.extreal.extreal_lt_2'(s('type.extreal.extreal',happ(s(fun(X0,'type.extreal.extreal'),X2),s(X0,X4))),s('type.extreal.extreal','const.extreal.extreal_div_2'(s('type.extreal.extreal','const.extreal.extreal_add_2'(s('type.extreal.extreal','const.extreal.extreal_of_num_1'(s('type.num.num',sK6(X4,X3,X2,X1,X0)))),s('type.extreal.extreal','const.extreal.extreal_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.extreal.extreal','const.extreal.extreal_pow_2'(s('type.extreal.extreal','const.extreal.extreal_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X3)))))))) | p(s(bool,'const.extreal.extreal_le_2'(s('type.extreal.extreal','const.extreal.extreal_pow_2'(s('type.extreal.extreal','const.extreal.extreal_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X3))),s('type.extreal.extreal',happ(s(fun(X0,'type.extreal.extreal'),X2),s(X0,X4)))))) | ~p(s(bool,'const.extreal.extreal_le_2'(s('type.extreal.extreal','const.extreal.extreal_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.extreal.extreal',happ(s(fun(X0,'type.extreal.extreal'),X2),s(X0,X4)))))) | ~p(s(bool,'const.bool.IN_2'(s(X0,X4),s(fun(X0,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1))))))) )),
  inference(cnf_transformation,[],[f192])).
fof(f931,plain,(
  ( ! [X0] : (~p(s(bool,'const.extreal.extreal_lt_2'(s('type.extreal.extreal',happ(s(fun(sK1,'type.extreal.extreal'),sK3),s(sK1,sK5))),s('type.extreal.extreal','const.extreal.extreal_div_2'(s('type.extreal.extreal','const.extreal.extreal_add_2'(s('type.extreal.extreal','const.extreal.extreal_of_num_1'(s('type.num.num',X0))),s('type.extreal.extreal','const.extreal.extreal_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.extreal.extreal','const.extreal.extreal_pow_2'(s('type.extreal.extreal','const.extreal.extreal_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',sK4)))))))) | ~p(s(bool,'const.extreal.extreal_le_2'(s('type.extreal.extreal','const.extreal.extreal_div_2'(s('type.extreal.extreal','const.extreal.extreal_of_num_1'(s('type.num.num',X0))),s('type.extreal.extreal','const.extreal.extreal_pow_2'(s('type.extreal.extreal','const.extreal.extreal_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',sK4))))),s('type.extreal.extreal',happ(s(fun(sK1,'type.extreal.extreal'),sK3),s(sK1,sK5)))))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',X0),s(fun('type.num.num',bool),'const.pred_set.count_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',sK4)))))))) | ~p(s(bool,'const.bool.IN_2'(s(sK1,sK5),s(fun(sK1,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(sK1,bool),'type.pair.prod'(fun(fun(sK1,bool),bool),fun(fun(sK1,bool),'type.realax.real'))),sK2))))))) )),
  inference(duplicate_literal_removal,[],[f893])).
fof(f893,plain,(
  ( ! [X0] : (~p(s(bool,'const.extreal.extreal_le_2'(s('type.extreal.extreal','const.extreal.extreal_div_2'(s('type.extreal.extreal','const.extreal.extreal_of_num_1'(s('type.num.num',X0))),s('type.extreal.extreal','const.extreal.extreal_pow_2'(s('type.extreal.extreal','const.extreal.extreal_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',sK4))))),s('type.extreal.extreal',happ(s(fun(sK1,'type.extreal.extreal'),sK3),s(sK1,sK5)))))) | ~p(s(bool,'const.extreal.extreal_lt_2'(s('type.extreal.extreal',happ(s(fun(sK1,'type.extreal.extreal'),sK3),s(sK1,sK5))),s('type.extreal.extreal','const.extreal.extreal_div_2'(s('type.extreal.extreal','const.extreal.extreal_add_2'(s('type.extreal.extreal','const.extreal.extreal_of_num_1'(s('type.num.num',X0))),s('type.extreal.extreal','const.extreal.extreal_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.extreal.extreal','const.extreal.extreal_pow_2'(s('type.extreal.extreal','const.extreal.extreal_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',sK4)))))))) | ~p(s(bool,'const.extreal.extreal_le_2'(s('type.extreal.extreal','const.extreal.extreal_div_2'(s('type.extreal.extreal','const.extreal.extreal_of_num_1'(s('type.num.num',X0))),s('type.extreal.extreal','const.extreal.extreal_pow_2'(s('type.extreal.extreal','const.extreal.extreal_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',sK4))))),s('type.extreal.extreal',happ(s(fun(sK1,'type.extreal.extreal'),sK3),s(sK1,sK5)))))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',X0),s(fun('type.num.num',bool),'const.pred_set.count_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',sK4)))))))) | ~p(s(bool,'const.bool.IN_2'(s(sK1,sK5),s(fun(sK1,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(sK1,bool),'type.pair.prod'(fun(fun(sK1,bool),bool),fun(fun(sK1,bool),'type.realax.real'))),sK2))))))) )),
  inference(superposition,[],[f215,f281])).
fof(f281,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.extreal.extreal','const.extreal.extreal_div_2'(s('type.extreal.extreal','const.extreal.extreal_of_num_1'(s('type.num.num',X5))),s('type.extreal.extreal','const.extreal.extreal_pow_2'(s('type.extreal.extreal','const.extreal.extreal_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X3))))) = s('type.extreal.extreal','const.lebesgue.fn_seq_4'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,'type.extreal.extreal'),X2),s('type.num.num',X3),s(X0,X4))) | ~p(s(bool,'const.extreal.extreal_lt_2'(s('type.extreal.extreal',happ(s(fun(X0,'type.extreal.extreal'),X2),s(X0,X4))),s('type.extreal.extreal','const.extreal.extreal_div_2'(s('type.extreal.extreal','const.extreal.extreal_add_2'(s('type.extreal.extreal','const.extreal.extreal_of_num_1'(s('type.num.num',X5))),s('type.extreal.extreal','const.extreal.extreal_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.extreal.extreal','const.extreal.extreal_pow_2'(s('type.extreal.extreal','const.extreal.extreal_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X3)))))))) | ~p(s(bool,'const.extreal.extreal_le_2'(s('type.extreal.extreal','const.extreal.extreal_div_2'(s('type.extreal.extreal','const.extreal.extreal_of_num_1'(s('type.num.num',X5))),s('type.extreal.extreal','const.extreal.extreal_pow_2'(s('type.extreal.extreal','const.extreal.extreal_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X3))))),s('type.extreal.extreal',happ(s(fun(X0,'type.extreal.extreal'),X2),s(X0,X4)))))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',X5),s(fun('type.num.num',bool),'const.pred_set.count_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X3)))))))) | ~p(s(bool,'const.bool.IN_2'(s(X0,X4),s(fun(X0,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1))))))) )),
  inference(cnf_transformation,[],[f139])).
fof(f139,plain,(
  ! [X0,X1,X2,X3,X4,X5] : (~p(s(bool,'const.bool.IN_2'(s(X0,X4),s(fun(X0,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',X5),s(fun('type.num.num',bool),'const.pred_set.count_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X3)))))))) | ~p(s(bool,'const.extreal.extreal_le_2'(s('type.extreal.extreal','const.extreal.extreal_div_2'(s('type.extreal.extreal','const.extreal.extreal_of_num_1'(s('type.num.num',X5))),s('type.extreal.extreal','const.extreal.extreal_pow_2'(s('type.extreal.extreal','const.extreal.extreal_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X3))))),s('type.extreal.extreal',happ(s(fun(X0,'type.extreal.extreal'),X2),s(X0,X4)))))) | ~p(s(bool,'const.extreal.extreal_lt_2'(s('type.extreal.extreal',happ(s(fun(X0,'type.extreal.extreal'),X2),s(X0,X4))),s('type.extreal.extreal','const.extreal.extreal_div_2'(s('type.extreal.extreal','const.extreal.extreal_add_2'(s('type.extreal.extreal','const.extreal.extreal_of_num_1'(s('type.num.num',X5))),s('type.extreal.extreal','const.extreal.extreal_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.extreal.extreal','const.extreal.extreal_pow_2'(s('type.extreal.extreal','const.extreal.extreal_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X3)))))))) | s('type.extreal.extreal','const.extreal.extreal_div_2'(s('type.extreal.extreal','const.extreal.extreal_of_num_1'(s('type.num.num',X5))),s('type.extreal.extreal','const.extreal.extreal_pow_2'(s('type.extreal.extreal','const.extreal.extreal_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X3))))) = s('type.extreal.extreal','const.lebesgue.fn_seq_4'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,'type.extreal.extreal'),X2),s('type.num.num',X3),s(X0,X4))))),
  inference(flattening,[],[f138])).
fof(f138,plain,(
  ! [X0,X1,X2,X3,X4,X5] : ((~p(s(bool,'const.bool.IN_2'(s(X0,X4),s(fun(X0,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',X5),s(fun('type.num.num',bool),'const.pred_set.count_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X3)))))))) | ~p(s(bool,'const.extreal.extreal_le_2'(s('type.extreal.extreal','const.extreal.extreal_div_2'(s('type.extreal.extreal','const.extreal.extreal_of_num_1'(s('type.num.num',X5))),s('type.extreal.extreal','const.extreal.extreal_pow_2'(s('type.extreal.extreal','const.extreal.extreal_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X3))))),s('type.extreal.extreal',happ(s(fun(X0,'type.extreal.extreal'),X2),s(X0,X4)))))) | ~p(s(bool,'const.extreal.extreal_lt_2'(s('type.extreal.extreal',happ(s(fun(X0,'type.extreal.extreal'),X2),s(X0,X4))),s('type.extreal.extreal','const.extreal.extreal_div_2'(s('type.extreal.extreal','const.extreal.extreal_add_2'(s('type.extreal.extreal','const.extreal.extreal_of_num_1'(s('type.num.num',X5))),s('type.extreal.extreal','const.extreal.extreal_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.extreal.extreal','const.extreal.extreal_pow_2'(s('type.extreal.extreal','const.extreal.extreal_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X3))))))))) | s('type.extreal.extreal','const.extreal.extreal_div_2'(s('type.extreal.extreal','const.extreal.extreal_of_num_1'(s('type.num.num',X5))),s('type.extreal.extreal','const.extreal.extreal_pow_2'(s('type.extreal.extreal','const.extreal.extreal_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X3))))) = s('type.extreal.extreal','const.lebesgue.fn_seq_4'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,'type.extreal.extreal'),X2),s('type.num.num',X3),s(X0,X4))))),
  inference(ennf_transformation,[],[f94])).
fof(f94,plain,(
  ! [X0,X1,X2,X3,X4,X5] : ((p(s(bool,'const.bool.IN_2'(s(X0,X4),s(fun(X0,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))) & p(s(bool,'const.bool.IN_2'(s('type.num.num',X5),s(fun('type.num.num',bool),'const.pred_set.count_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X3)))))))) & p(s(bool,'const.extreal.extreal_le_2'(s('type.extreal.extreal','const.extreal.extreal_div_2'(s('type.extreal.extreal','const.extreal.extreal_of_num_1'(s('type.num.num',X5))),s('type.extreal.extreal','const.extreal.extreal_pow_2'(s('type.extreal.extreal','const.extreal.extreal_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X3))))),s('type.extreal.extreal',happ(s(fun(X0,'type.extreal.extreal'),X2),s(X0,X4)))))) & p(s(bool,'const.extreal.extreal_lt_2'(s('type.extreal.extreal',happ(s(fun(X0,'type.extreal.extreal'),X2),s(X0,X4))),s('type.extreal.extreal','const.extreal.extreal_div_2'(s('type.extreal.extreal','const.extreal.extreal_add_2'(s('type.extreal.extreal','const.extreal.extreal_of_num_1'(s('type.num.num',X5))),s('type.extreal.extreal','const.extreal.extreal_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.extreal.extreal','const.extreal.extreal_pow_2'(s('type.extreal.extreal','const.extreal.extreal_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X3))))))))) => s('type.extreal.extreal','const.extreal.extreal_div_2'(s('type.extreal.extreal','const.extreal.extreal_of_num_1'(s('type.num.num',X5))),s('type.extreal.extreal','const.extreal.extreal_pow_2'(s('type.extreal.extreal','const.extreal.extreal_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X3))))) = s('type.extreal.extreal','const.lebesgue.fn_seq_4'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,'type.extreal.extreal'),X2),s('type.num.num',X3),s(X0,X4))))),
  inference(flattening,[],[f93])).
fof(f93,plain,(
  ! [X0] : ! [X1,X2,X3,X4,X5] : ((p(s(bool,'const.bool.IN_2'(s(X0,X4),s(fun(X0,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))) & p(s(bool,'const.bool.IN_2'(s('type.num.num',X5),s(fun('type.num.num',bool),'const.pred_set.count_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X3)))))))) & p(s(bool,'const.extreal.extreal_le_2'(s('type.extreal.extreal','const.extreal.extreal_div_2'(s('type.extreal.extreal','const.extreal.extreal_of_num_1'(s('type.num.num',X5))),s('type.extreal.extreal','const.extreal.extreal_pow_2'(s('type.extreal.extreal','const.extreal.extreal_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X3))))),s('type.extreal.extreal',happ(s(fun(X0,'type.extreal.extreal'),X2),s(X0,X4)))))) & p(s(bool,'const.extreal.extreal_lt_2'(s('type.extreal.extreal',happ(s(fun(X0,'type.extreal.extreal'),X2),s(X0,X4))),s('type.extreal.extreal','const.extreal.extreal_div_2'(s('type.extreal.extreal','const.extreal.extreal_add_2'(s('type.extreal.extreal','const.extreal.extreal_of_num_1'(s('type.num.num',X5))),s('type.extreal.extreal','const.extreal.extreal_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.extreal.extreal','const.extreal.extreal_pow_2'(s('type.extreal.extreal','const.extreal.extreal_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X3))))))))) => s('type.extreal.extreal','const.extreal.extreal_div_2'(s('type.extreal.extreal','const.extreal.extreal_of_num_1'(s('type.num.num',X5))),s('type.extreal.extreal','const.extreal.extreal_pow_2'(s('type.extreal.extreal','const.extreal.extreal_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X3))))) = s('type.extreal.extreal','const.lebesgue.fn_seq_4'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,'type.extreal.extreal'),X2),s('type.num.num',X3),s(X0,X4))))),
  inference(rectify,[],[f31])).
fof(f31,axiom,(
  ! [X6] : ! [X7,X8,X9,X10,X18] : ((p(s(bool,'const.bool.IN_2'(s(X6,X10),s(fun(X6,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(X6,bool),'type.pair.prod'(fun(fun(X6,bool),bool),fun(fun(X6,bool),'type.realax.real'))),X7)))))) & p(s(bool,'const.bool.IN_2'(s('type.num.num',X18),s(fun('type.num.num',bool),'const.pred_set.count_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X9)))))))) & p(s(bool,'const.extreal.extreal_le_2'(s('type.extreal.extreal','const.extreal.extreal_div_2'(s('type.extreal.extreal','const.extreal.extreal_of_num_1'(s('type.num.num',X18))),s('type.extreal.extreal','const.extreal.extreal_pow_2'(s('type.extreal.extreal','const.extreal.extreal_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X9))))),s('type.extreal.extreal',happ(s(fun(X6,'type.extreal.extreal'),X8),s(X6,X10)))))) & p(s(bool,'const.extreal.extreal_lt_2'(s('type.extreal.extreal',happ(s(fun(X6,'type.extreal.extreal'),X8),s(X6,X10))),s('type.extreal.extreal','const.extreal.extreal_div_2'(s('type.extreal.extreal','const.extreal.extreal_add_2'(s('type.extreal.extreal','const.extreal.extreal_of_num_1'(s('type.num.num',X18))),s('type.extreal.extreal','const.extreal.extreal_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.extreal.extreal','const.extreal.extreal_pow_2'(s('type.extreal.extreal','const.extreal.extreal_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X9))))))))) => s('type.extreal.extreal','const.extreal.extreal_div_2'(s('type.extreal.extreal','const.extreal.extreal_of_num_1'(s('type.num.num',X18))),s('type.extreal.extreal','const.extreal.extreal_pow_2'(s('type.extreal.extreal','const.extreal.extreal_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X9))))) = s('type.extreal.extreal','const.lebesgue.fn_seq_4'(s('type.pair.prod'(fun(X6,bool),'type.pair.prod'(fun(fun(X6,bool),bool),fun(fun(X6,bool),'type.realax.real'))),X7),s(fun(X6,'type.extreal.extreal'),X8),s('type.num.num',X9),s(X6,X10))))),
  file('thm.lebesgue.lemma_fn_upper_bounded','thm.lebesgue.lemma_fn_|49|')).
% SZS output end Proof for thm.lebesgue
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 357
% Passive clauses: 2349
% Generated clauses: 31469
% Final active clauses: 351
% Final passive clauses: 2059
% Input formulas: 48
% Initial clauses: 319
% 
% Duplicate literals: 2772
% Trivial inequalities: 418
% Fw demodulations: 1323
% Bw demodulations: 6
% Condensations: 4963
% Global subsumptions: 64
% 
% Simple tautologies: 2010
% Equational tautologies: 28
% Forward subsumptions: 18029
% 
% Binary resolution: 13168
% Factoring: 28
% Forward superposition: 6403
% Backward superposition: 2545
% Self superposition: 20
% Equality factoring: 24
% Equality resolution: 49
% 
% SAT solver clauses: 2661
% SAT solver unit clauses: 139
% SAT solver binary clauses: 117
% SAT solver learnt clauses: 136
% SAT solver learnt literals: 373
% 
% TWLsolver clauses: 2413
% TWLsolver calls for satisfiability: 102765
% 
% Memory used [KB]: 19189
% Time elapsed: 1.528 s
% ------------------------------
% ------------------------------
% Success in time 20.536 s
