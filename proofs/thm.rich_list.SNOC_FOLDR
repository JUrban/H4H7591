Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.rich_list
% (17926)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 62
% Passive clauses: 1540
% Generated clauses: 13250
% Final active clauses: 60
% Final passive clauses: 1424
% Input formulas: 21
% Initial clauses: 25
% 
% Duplicate literals: 1033
% Trivial inequalities: 155
% Fw subsumption resolutions: 1307
% Fw demodulations: 265
% 
% Simple tautologies: 280
% Equational tautologies: 121
% Forward subsumptions: 5407
% Fw demodulations to eq. taut.: 2
% 
% Binary resolution: 41
% Forward superposition: 5040
% Backward superposition: 4461
% Self superposition: 454
% Equality factoring: 366
% Equality resolution: 12
% 
% Split clauses: 568
% Split components: 1145
% SAT solver clauses: 1703
% SAT solver unit clauses: 403
% SAT solver binary clauses: 599
% 
% Sat splits: 568
% Sat splitting refutations: 1
% 
% TWLsolver clauses: 1697
% TWLsolver calls for satisfiability: 47
% 
% Memory used [KB]: 8059
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 143 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.rich_list
% (17966)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 92
% Passive clauses: 819
% Generated clauses: 10602
% Final active clauses: 87
% Final passive clauses: 715
% Input formulas: 21
% Initial clauses: 25
% 
% Duplicate literals: 526
% Trivial inequalities: 48
% Fw subsumption resolutions: 563
% Fw demodulations: 1198
% Bw demodulations: 12
% Condensations: 643
% 
% Simple tautologies: 128
% Equational tautologies: 20
% Forward subsumptions: 5424
% Fw demodulations to eq. taut.: 21
% Bw demodulations to eq. taut.: 1
% 
% Binary resolution: 43
% Forward superposition: 3760
% Backward superposition: 2760
% Self superposition: 163
% Equality factoring: 45
% Equality resolution: 4
% 
% Split clauses: 126
% Split components: 257
% SAT solver clauses: 1232
% SAT solver unit clauses: 36
% SAT solver binary clauses: 31
% 
% Sat splits: 126
% Sat splitting refutations: 4
% 
% TWLsolver clauses: 1232
% TWLsolver calls for satisfiability: 141
% 
% Memory used [KB]: 20468
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 136 next slice time: 103
lrs+11_2_br=off:cond=on:fde=none:gs=on:gsaa=full_model:lwlo=on:nwc=2:sas=minisat:stl=30:ssfp=100000:ssfq=1.4:smm=sco:ssnc=none:sp=occurrence:urr=on_98 on thm.rich_list
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.rich_list
% SZS output start Proof for thm.rich_list
fof(f69032,plain,(
  $false),
  inference(trivial_inequality_removal,[],[f68995])).
fof(f68995,plain,(
  s('type.list.list'(sK0),'const.list.SNOC_2'(s(sK0,sK1),s('type.list.list'(sK0),sK2))) != s('type.list.list'(sK0),'const.list.SNOC_2'(s(sK0,sK1),s('type.list.list'(sK0),sK2)))),
  inference(superposition,[],[f426,f5002])).
fof(f5002,plain,(
  ( ! [X2,X0,X1] : (s('type.list.list'(X0),'const.list.SNOC_2'(s(X0,X1),s('type.list.list'(X0),X2))) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),'const.list.SNOC_2'(s(X0,X1),s('type.list.list'(X0),'const.list.NIL_0')))))) )),
  inference(forward_demodulation,[],[f4960,f78])).
fof(f78,plain,(
  ( ! [X0,X1] : (s('type.list.list'(X0),'const.list.SNOC_2'(s(X0,X1),s('type.list.list'(X0),'const.list.NIL_0'))) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X1),s('type.list.list'(X0),'const.list.NIL_0')))) )),
  inference(cnf_transformation,[],[f29])).
fof(f29,plain,(
  ! [X0,X1] : s('type.list.list'(X0),'const.list.SNOC_2'(s(X0,X1),s('type.list.list'(X0),'const.list.NIL_0'))) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X1),s('type.list.list'(X0),'const.list.NIL_0')))),
  inference(flattening,[],[f28])).
fof(f28,plain,(
  ! [X0] : ! [X1] : s('type.list.list'(X0),'const.list.SNOC_2'(s(X0,X1),s('type.list.list'(X0),'const.list.NIL_0'))) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X1),s('type.list.list'(X0),'const.list.NIL_0')))),
  inference(rectify,[],[f19])).
fof(f19,axiom,(
  ! [X6] : ! [X7] : s('type.list.list'(X6),'const.list.SNOC_2'(s(X6,X7),s('type.list.list'(X6),'const.list.NIL_0'))) = s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X7),s('type.list.list'(X6),'const.list.NIL_0')))),
  file('thm.rich_list.SNOC_FOLDR','thm.list.SNOC|split|0')).
fof(f4960,plain,(
  ( ! [X2,X0,X1] : (s('type.list.list'(X0),'const.list.SNOC_2'(s(X0,X1),s('type.list.list'(X0),X2))) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X1),s('type.list.list'(X0),'const.list.NIL_0')))))) )),
  inference(superposition,[],[f1163,f79])).
fof(f79,plain,(
  ( ! [X0,X1] : (s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.FOLDR_3'(s(fun(X0,fun('type.list.list'(X0),'type.list.list'(X0))),'const.list.CONS_0'),s('type.list.list'(X0),'const.list.NIL_0'),s('type.list.list'(X0),X1)))) )),
  inference(cnf_transformation,[],[f31])).
fof(f31,plain,(
  ! [X0,X1] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.FOLDR_3'(s(fun(X0,fun('type.list.list'(X0),'type.list.list'(X0))),'const.list.CONS_0'),s('type.list.list'(X0),'const.list.NIL_0'),s('type.list.list'(X0),X1)))),
  inference(flattening,[],[f30])).
fof(f30,plain,(
  ! [X0] : ! [X1] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.FOLDR_3'(s(fun(X0,fun('type.list.list'(X0),'type.list.list'(X0))),'const.list.CONS_0'),s('type.list.list'(X0),'const.list.NIL_0'),s('type.list.list'(X0),X1)))),
  inference(rectify,[],[f14])).
fof(f14,axiom,(
  ! [X6] : ! [X8] : s('type.list.list'(X6),X8) = s('type.list.list'(X6),'const.list.FOLDR_3'(s(fun(X6,fun('type.list.list'(X6),'type.list.list'(X6))),'const.list.CONS_0'),s('type.list.list'(X6),'const.list.NIL_0'),s('type.list.list'(X6),X8)))),
  file('thm.rich_list.SNOC_FOLDR','thm.rich_list.FOLDR_CONS_NIL')).
fof(f1163,plain,(
  ( ! [X30,X31,X29,X32] : (s('type.list.list'(X29),'const.list.APPEND_2'(s('type.list.list'(X29),X32),s('type.list.list'(X29),'const.list.CONS_2'(s(X29,X30),s('type.list.list'(X29),X31))))) = s('type.list.list'(X29),'const.list.FOLDR_3'(s(fun(X29,fun('type.list.list'(X29),'type.list.list'(X29))),'const.list.CONS_0'),s('type.list.list'(X29),X31),s('type.list.list'(X29),'const.list.SNOC_2'(s(X29,X30),s('type.list.list'(X29),X32)))))) )),
  inference(forward_demodulation,[],[f1094,f88])).
fof(f88,plain,(
  ( ! [X2,X0,X1] : (s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),X2))) = s('type.list.list'(X0),'const.list.FOLDR_3'(s(fun(X0,fun('type.list.list'(X0),'type.list.list'(X0))),'const.list.CONS_0'),s('type.list.list'(X0),X2),s('type.list.list'(X0),X1)))) )),
  inference(cnf_transformation,[],[f40])).
fof(f40,plain,(
  ! [X0,X1,X2] : s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),X2))) = s('type.list.list'(X0),'const.list.FOLDR_3'(s(fun(X0,fun('type.list.list'(X0),'type.list.list'(X0))),'const.list.CONS_0'),s('type.list.list'(X0),X2),s('type.list.list'(X0),X1)))),
  inference(flattening,[],[f39])).
fof(f39,plain,(
  ! [X0] : ! [X1,X2] : s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),X2))) = s('type.list.list'(X0),'const.list.FOLDR_3'(s(fun(X0,fun('type.list.list'(X0),'type.list.list'(X0))),'const.list.CONS_0'),s('type.list.list'(X0),X2),s('type.list.list'(X0),X1)))),
  inference(rectify,[],[f15])).
fof(f15,axiom,(
  ! [X6] : ! [X15,X16] : s('type.list.list'(X6),'const.list.APPEND_2'(s('type.list.list'(X6),X15),s('type.list.list'(X6),X16))) = s('type.list.list'(X6),'const.list.FOLDR_3'(s(fun(X6,fun('type.list.list'(X6),'type.list.list'(X6))),'const.list.CONS_0'),s('type.list.list'(X6),X16),s('type.list.list'(X6),X15)))),
  file('thm.rich_list.SNOC_FOLDR','thm.rich_list.APPEND_FOLDR')).
fof(f1094,plain,(
  ( ! [X30,X31,X29,X32] : (s('type.list.list'(X29),'const.list.FOLDR_3'(s(fun(X29,fun('type.list.list'(X29),'type.list.list'(X29))),'const.list.CONS_0'),s('type.list.list'(X29),X31),s('type.list.list'(X29),'const.list.SNOC_2'(s(X29,X30),s('type.list.list'(X29),X32))))) = s('type.list.list'(X29),'const.list.FOLDR_3'(s(fun(X29,fun('type.list.list'(X29),'type.list.list'(X29))),'const.list.CONS_0'),s('type.list.list'(X29),'const.list.CONS_2'(s(X29,X30),s('type.list.list'(X29),X31))),s('type.list.list'(X29),X32)))) )),
  inference(superposition,[],[f96,f89])).
fof(f89,plain,(
  ( ! [X2,X0,X1] : (s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X1),s('type.list.list'(X0),X2))) = s('type.list.list'(X0),happ(s(fun('type.list.list'(X0),'type.list.list'(X0)),happ(s(fun(X0,fun('type.list.list'(X0),'type.list.list'(X0))),'const.list.CONS_0'),s(X0,X1))),s('type.list.list'(X0),X2)))) )),
  inference(cnf_transformation,[],[f42])).
fof(f42,plain,(
  ! [X0,X1,X2] : s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X1),s('type.list.list'(X0),X2))) = s('type.list.list'(X0),happ(s(fun('type.list.list'(X0),'type.list.list'(X0)),happ(s(fun(X0,fun('type.list.list'(X0),'type.list.list'(X0))),'const.list.CONS_0'),s(X0,X1))),s('type.list.list'(X0),X2)))),
  inference(flattening,[],[f41])).
fof(f41,plain,(
  ! [X0] : ! [X1,X2] : s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X1),s('type.list.list'(X0),X2))) = s('type.list.list'(X0),happ(s(fun('type.list.list'(X0),'type.list.list'(X0)),happ(s(fun(X0,fun('type.list.list'(X0),'type.list.list'(X0))),'const.list.CONS_0'),s(X0,X1))),s('type.list.list'(X0),X2)))),
  inference(rectify,[],[f7])).
fof(f7,axiom,(
  ! [X6] : ! [X9,X10] : s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X9),s('type.list.list'(X6),X10))) = s('type.list.list'(X6),happ(s(fun('type.list.list'(X6),'type.list.list'(X6)),happ(s(fun(X6,fun('type.list.list'(X6),'type.list.list'(X6))),'const.list.CONS_0'),s(X6,X9))),s('type.list.list'(X6),X10)))),
  file('thm.rich_list.SNOC_FOLDR','ARITY_0_2_const.list.CONS')).
fof(f96,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s(X0,'const.list.FOLDR_3'(s(fun(X1,fun(X0,X0)),X2),s(X0,X3),s('type.list.list'(X1),'const.list.SNOC_2'(s(X1,X4),s('type.list.list'(X1),X5))))) = s(X0,'const.list.FOLDR_3'(s(fun(X1,fun(X0,X0)),X2),s(X0,happ(s(fun(X0,X0),happ(s(fun(X1,fun(X0,X0)),X2),s(X1,X4))),s(X0,X3))),s('type.list.list'(X1),X5)))) )),
  inference(cnf_transformation,[],[f56])).
fof(f56,plain,(
  ! [X0,X1,X2,X3,X4,X5] : s(X0,'const.list.FOLDR_3'(s(fun(X1,fun(X0,X0)),X2),s(X0,X3),s('type.list.list'(X1),'const.list.SNOC_2'(s(X1,X4),s('type.list.list'(X1),X5))))) = s(X0,'const.list.FOLDR_3'(s(fun(X1,fun(X0,X0)),X2),s(X0,happ(s(fun(X0,X0),happ(s(fun(X1,fun(X0,X0)),X2),s(X1,X4))),s(X0,X3))),s('type.list.list'(X1),X5)))),
  inference(flattening,[],[f55])).
fof(f55,plain,(
  ! [X0,X1] : ! [X2,X3,X4,X5] : s(X0,'const.list.FOLDR_3'(s(fun(X1,fun(X0,X0)),X2),s(X0,X3),s('type.list.list'(X1),'const.list.SNOC_2'(s(X1,X4),s('type.list.list'(X1),X5))))) = s(X0,'const.list.FOLDR_3'(s(fun(X1,fun(X0,X0)),X2),s(X0,happ(s(fun(X0,X0),happ(s(fun(X1,fun(X0,X0)),X2),s(X1,X4))),s(X0,X3))),s('type.list.list'(X1),X5)))),
  inference(rectify,[],[f8])).
fof(f8,axiom,(
  ! [X11,X6] : ! [X12,X13,X7,X8] : s(X11,'const.list.FOLDR_3'(s(fun(X6,fun(X11,X11)),X12),s(X11,X13),s('type.list.list'(X6),'const.list.SNOC_2'(s(X6,X7),s('type.list.list'(X6),X8))))) = s(X11,'const.list.FOLDR_3'(s(fun(X6,fun(X11,X11)),X12),s(X11,happ(s(fun(X11,X11),happ(s(fun(X6,fun(X11,X11)),X12),s(X6,X7))),s(X11,X13))),s('type.list.list'(X6),X8)))),
  file('thm.rich_list.SNOC_FOLDR','thm.rich_list.FOLDR_SNOC')).
fof(f426,plain,(
  s('type.list.list'(sK0),'const.list.SNOC_2'(s(sK0,sK1),s('type.list.list'(sK0),sK2))) != s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),sK2),s('type.list.list'(sK0),'const.list.SNOC_2'(s(sK0,sK1),s('type.list.list'(sK0),'const.list.NIL_0')))))),
  inference(superposition,[],[f101,f88])).
fof(f101,plain,(
  s('type.list.list'(sK0),'const.list.SNOC_2'(s(sK0,sK1),s('type.list.list'(sK0),sK2))) != s('type.list.list'(sK0),'const.list.FOLDR_3'(s(fun(sK0,fun('type.list.list'(sK0),'type.list.list'(sK0))),'const.list.CONS_0'),s('type.list.list'(sK0),'const.list.SNOC_2'(s(sK0,sK1),s('type.list.list'(sK0),'const.list.NIL_0'))),s('type.list.list'(sK0),sK2)))),
  inference(forward_demodulation,[],[f100,f78])).
fof(f100,plain,(
  s('type.list.list'(sK0),'const.list.SNOC_2'(s(sK0,sK1),s('type.list.list'(sK0),sK2))) != s('type.list.list'(sK0),'const.list.FOLDR_3'(s(fun(sK0,fun('type.list.list'(sK0),'type.list.list'(sK0))),'const.list.CONS_0'),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1),s('type.list.list'(sK0),'const.list.NIL_0'))),s('type.list.list'(sK0),sK2)))),
  inference(backward_demodulation,[],[f89,f72])).
fof(f72,plain,(
  s('type.list.list'(sK0),'const.list.SNOC_2'(s(sK0,sK1),s('type.list.list'(sK0),sK2))) != s('type.list.list'(sK0),'const.list.FOLDR_3'(s(fun(sK0,fun('type.list.list'(sK0),'type.list.list'(sK0))),'const.list.CONS_0'),s('type.list.list'(sK0),happ(s(fun('type.list.list'(sK0),'type.list.list'(sK0)),happ(s(fun(sK0,fun('type.list.list'(sK0),'type.list.list'(sK0))),'const.list.CONS_0'),s(sK0,sK1))),s('type.list.list'(sK0),'const.list.NIL_0'))),s('type.list.list'(sK0),sK2)))),
  inference(cnf_transformation,[],[f63])).
fof(f63,plain,(
  s('type.list.list'(sK0),'const.list.SNOC_2'(s(sK0,sK1),s('type.list.list'(sK0),sK2))) != s('type.list.list'(sK0),'const.list.FOLDR_3'(s(fun(sK0,fun('type.list.list'(sK0),'type.list.list'(sK0))),'const.list.CONS_0'),s('type.list.list'(sK0),happ(s(fun('type.list.list'(sK0),'type.list.list'(sK0)),happ(s(fun(sK0,fun('type.list.list'(sK0),'type.list.list'(sK0))),'const.list.CONS_0'),s(sK0,sK1))),s('type.list.list'(sK0),'const.list.NIL_0'))),s('type.list.list'(sK0),sK2)))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2])],[f57])).
fof(f57,plain,(
  ? [X0,X1,X2] : s('type.list.list'(X0),'const.list.SNOC_2'(s(X0,X1),s('type.list.list'(X0),X2))) != s('type.list.list'(X0),'const.list.FOLDR_3'(s(fun(X0,fun('type.list.list'(X0),'type.list.list'(X0))),'const.list.CONS_0'),s('type.list.list'(X0),happ(s(fun('type.list.list'(X0),'type.list.list'(X0)),happ(s(fun(X0,fun('type.list.list'(X0),'type.list.list'(X0))),'const.list.CONS_0'),s(X0,X1))),s('type.list.list'(X0),'const.list.NIL_0'))),s('type.list.list'(X0),X2)))),
  inference(ennf_transformation,[],[f24])).
fof(f24,plain,(
  ~! [X0,X1,X2] : s('type.list.list'(X0),'const.list.SNOC_2'(s(X0,X1),s('type.list.list'(X0),X2))) = s('type.list.list'(X0),'const.list.FOLDR_3'(s(fun(X0,fun('type.list.list'(X0),'type.list.list'(X0))),'const.list.CONS_0'),s('type.list.list'(X0),happ(s(fun('type.list.list'(X0),'type.list.list'(X0)),happ(s(fun(X0,fun('type.list.list'(X0),'type.list.list'(X0))),'const.list.CONS_0'),s(X0,X1))),s('type.list.list'(X0),'const.list.NIL_0'))),s('type.list.list'(X0),X2)))),
  inference(flattening,[],[f23])).
fof(f23,plain,(
  ~! [X0] : ! [X1,X2] : s('type.list.list'(X0),'const.list.SNOC_2'(s(X0,X1),s('type.list.list'(X0),X2))) = s('type.list.list'(X0),'const.list.FOLDR_3'(s(fun(X0,fun('type.list.list'(X0),'type.list.list'(X0))),'const.list.CONS_0'),s('type.list.list'(X0),happ(s(fun('type.list.list'(X0),'type.list.list'(X0)),happ(s(fun(X0,fun('type.list.list'(X0),'type.list.list'(X0))),'const.list.CONS_0'),s(X0,X1))),s('type.list.list'(X0),'const.list.NIL_0'))),s('type.list.list'(X0),X2)))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : ! [X7,X8] : s('type.list.list'(X6),'const.list.SNOC_2'(s(X6,X7),s('type.list.list'(X6),X8))) = s('type.list.list'(X6),'const.list.FOLDR_3'(s(fun(X6,fun('type.list.list'(X6),'type.list.list'(X6))),'const.list.CONS_0'),s('type.list.list'(X6),happ(s(fun('type.list.list'(X6),'type.list.list'(X6)),happ(s(fun(X6,fun('type.list.list'(X6),'type.list.list'(X6))),'const.list.CONS_0'),s(X6,X7))),s('type.list.list'(X6),'const.list.NIL_0'))),s('type.list.list'(X6),X8)))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : ! [X7,X8] : s('type.list.list'(X6),'const.list.SNOC_2'(s(X6,X7),s('type.list.list'(X6),X8))) = s('type.list.list'(X6),'const.list.FOLDR_3'(s(fun(X6,fun('type.list.list'(X6),'type.list.list'(X6))),'const.list.CONS_0'),s('type.list.list'(X6),happ(s(fun('type.list.list'(X6),'type.list.list'(X6)),happ(s(fun(X6,fun('type.list.list'(X6),'type.list.list'(X6))),'const.list.CONS_0'),s(X6,X7))),s('type.list.list'(X6),'const.list.NIL_0'))),s('type.list.list'(X6),X8)))),
  file('thm.rich_list.SNOC_FOLDR','thm.rich_list.SNOC_FOLDR')).
% SZS output end Proof for thm.rich_list
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 251
% Passive clauses: 3343
% Generated clauses: 70808
% Final active clauses: 127
% Final passive clauses: 1029
% Input formulas: 21
% Initial clauses: 25
% 
% Duplicate literals: 2952
% Trivial inequalities: 355
% Fw subsumption resolutions: 5463
% Fw demodulations: 11251
% Bw demodulations: 1971
% Condensations: 5662
% Global subsumptions: 12
% 
% Simple tautologies: 760
% Equational tautologies: 214
% Forward subsumptions: 40683
% Fw demodulations to eq. taut.: 25
% Bw demodulations to eq. taut.: 67
% 
% Unit resulting resolution: 749
% Forward superposition: 24329
% Backward superposition: 14946
% Self superposition: 478
% Equality factoring: 155
% Equality resolution: 56
% 
% Split clauses: 83
% Split components: 172
% SAT solver clauses: 3553
% SAT solver unit clauses: 85
% SAT solver binary clauses: 748
% 
% Sat splits: 83
% Sat splitting refutations: 30
% 
% Memory used [KB]: 62685
% Time elapsed: 5.149 s
% ------------------------------
% ------------------------------
% Success in time 6.49 s
