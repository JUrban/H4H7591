Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 299 next slice time: 5
dis+11_7_3 on thm.integer
% (107271)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 692
% Passive clauses: 9337
% Generated clauses: 22336
% Final active clauses: 680
% Final passive clauses: 8231
% Input formulas: 67
% Initial clauses: 238
% 
% Duplicate literals: 484
% Trivial inequalities: 93
% Fw subsumption resolutions: 1965
% Fw demodulations: 715
% Bw demodulations: 12
% 
% Simple tautologies: 270
% Equational tautologies: 56
% Forward subsumptions: 9124
% 
% Binary resolution: 9595
% Factoring: 940
% Forward superposition: 3456
% Backward superposition: 4596
% Self superposition: 45
% Equality factoring: 26
% Equality resolution: 22
% 
% Split clauses: 348
% Split components: 697
% SAT solver clauses: 690
% SAT solver unit clauses: 15
% SAT solver binary clauses: 175
% 
% Sat splits: 348
% 
% TWLsolver clauses: 690
% TWLsolver calls for satisfiability: 356
% 
% Memory used [KB]: 10106
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 293 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.integer
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.integer
% SZS output start Proof for thm.integer
fof(f9564,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f9531,f582,f329,f583,f3579,f3580,f330,f581,f332,f587,f471,f637,f724,f726,f328,f585,f354,f597,f4723,f4725,f331,f579,f426,f621,f2790,f2798,f2702,f2720,f473,f638,f2166,f2179,f421,f618,f4884,f4747,f4793,f4846,f4860,f339,f594,f1450,f1467,f353,f598,f410,f613])).
fof(f613,plain,(
  ( ! [X0] : (~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',X0))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) ) | $spl24),
  inference(cnf_transformation,[],[f613_D])).
fof(f613_D,plain,(
  ( ! [X0] : (~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',X0))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) ) <=> ~$spl24),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl24])])).
fof(f410,plain,(
  ( ! [X0] : (~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',X0))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) )),
  inference(cnf_transformation,[],[f115])).
fof(f115,plain,(
  ! [X0] : ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',X0))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))))),
  inference(flattening,[],[f114])).
fof(f114,plain,(
  ! [X0] : ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',X0))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))))),
  inference(rectify,[],[f51])).
fof(f51,axiom,(
  ! [X6] : ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',X6))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))))),
  file('thm.integer.INT_REM_UNIQUE','thm.integer.INT_ABS_LT|48|')).
fof(f598,plain,(
  ( ! [X0] : (p(s(bool,X0)) | s(bool,'T_0') != s(bool,X0)) ) | $spl18),
  inference(cnf_transformation,[],[f598_D])).
fof(f598_D,plain,(
  ( ! [X0] : (p(s(bool,X0)) | s(bool,'T_0') != s(bool,X0)) ) <=> ~$spl18),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl18])])).
fof(f353,plain,(
  ( ! [X0] : (p(s(bool,X0)) | s(bool,'T_0') != s(bool,X0)) )),
  inference(cnf_transformation,[],[f224])).
fof(f224,plain,(
  ! [X0] : ((s(bool,'T_0') != s(bool,X0) | p(s(bool,X0))) & (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f88])).
fof(f88,plain,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) <=> p(s(bool,X0)))),
  inference(rectify,[],[f36])).
fof(f36,axiom,(
  ! [X10] : (s(bool,'T_0') = s(bool,X10) <=> p(s(bool,X10)))),
  file('thm.integer.INT_REM_UNIQUE','thm.bool.EQ_CLAUSES|split|1')).
fof(f1467,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',X0))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) ) | $spl510),
  inference(cnf_transformation,[],[f1467_D])).
fof(f1467_D,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',X0))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) ) <=> ~$spl510),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl510])])).
fof(f1450,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',X0))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) ) | ($spl18 | $spl24)),
  inference(resolution,[],[f613,f598])).
fof(f594,plain,(
  ( ! [X0] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X0))) = s('type.integer.int','const.integer.ABS_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X0)))))) ) | $spl12),
  inference(cnf_transformation,[],[f594_D])).
fof(f594_D,plain,(
  ( ! [X0] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X0))) = s('type.integer.int','const.integer.ABS_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X0)))))) ) <=> ~$spl12),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl12])])).
fof(f339,plain,(
  ( ! [X0] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X0))) = s('type.integer.int','const.integer.ABS_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X0)))))) )),
  inference(cnf_transformation,[],[f73])).
fof(f73,plain,(
  ! [X0] : s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X0))) = s('type.integer.int','const.integer.ABS_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X0)))))),
  inference(rectify,[],[f50])).
fof(f50,axiom,(
  ! [X25] : s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X25))) = s('type.integer.int','const.integer.ABS_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X25)))))),
  file('thm.integer.INT_REM_UNIQUE','thm.integer.INT_ABS_NUM')).
fof(f4860,plain,(
  s('type.integer.int',sK13) = s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK13))) | $spl1980),
  inference(cnf_transformation,[],[f4860_D])).
fof(f4860_D,plain,(
  s('type.integer.int',sK13) = s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK13))) <=> ~$spl1980),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1980])])).
fof(f4846,plain,(
  s('type.integer.int',sK13) = s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK13))) | ($spl12 | $spl1886)),
  inference(superposition,[],[f594,f4725])).
fof(f4793,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',X0))),s('type.integer.int',sK13)))) ) | $spl1892),
  inference(cnf_transformation,[],[f4793_D])).
fof(f4793_D,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',X0))),s('type.integer.int',sK13)))) ) <=> ~$spl1892),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1892])])).
fof(f4747,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',X0))),s('type.integer.int',sK13)))) ) | ($spl510 | $spl1886)),
  inference(backward_demodulation,[],[f4725,f1467])).
fof(f4884,plain,(
  $false | ($spl220 | $spl1892 | $spl1980)),
  inference(subsumption_resolution,[],[f4868,f4793])).
fof(f4868,plain,(
  s(bool,'T_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK14))),s('type.integer.int',sK13))) | ($spl220 | $spl1980)),
  inference(backward_demodulation,[],[f4860,f726])).
fof(f618,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int',X1))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X1),s('type.integer.int',X0)))) ) | $spl34),
  inference(cnf_transformation,[],[f618_D])).
fof(f618_D,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int',X1))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X1),s('type.integer.int',X0)))) ) <=> ~$spl34),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl34])])).
fof(f421,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int',X1))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X1),s('type.integer.int',X0)))) )),
  inference(cnf_transformation,[],[f124])).
fof(f124,plain,(
  ! [X0,X1] : s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int',X1))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X1),s('type.integer.int',X0)))),
  inference(rectify,[],[f48])).
fof(f48,axiom,(
  ! [X16,X15] : s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X15),s('type.integer.int',X16))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X16),s('type.integer.int',X15)))),
  file('thm.integer.INT_REM_UNIQUE','thm.integer.INT_ADD_SYM')).
fof(f2179,plain,(
  s('type.integer.int',sK12) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK14),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK15),s('type.integer.int',sK13))))) | $spl782),
  inference(cnf_transformation,[],[f2179_D])).
fof(f2179_D,plain,(
  s('type.integer.int',sK12) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK14),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK15),s('type.integer.int',sK13))))) <=> ~$spl782),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl782])])).
fof(f2166,plain,(
  s('type.integer.int',sK12) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK14),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK15),s('type.integer.int',sK13))))) | ($spl2 | $spl34)),
  inference(superposition,[],[f618,f581])).
fof(f638,plain,(
  ( ! [X2,X0,X1] : (s('type.integer.int',X0) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X2),s('type.integer.int',X1))) | s('type.integer.int',X2) = s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X0),s('type.integer.int',X1)))) ) | $spl64),
  inference(cnf_transformation,[],[f638_D])).
fof(f638_D,plain,(
  ( ! [X2,X0,X1] : (s('type.integer.int',X0) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X2),s('type.integer.int',X1))) | s('type.integer.int',X2) = s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X0),s('type.integer.int',X1)))) ) <=> ~$spl64),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl64])])).
fof(f473,plain,(
  ( ! [X2,X0,X1] : (s('type.integer.int',X2) = s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X0),s('type.integer.int',X1))) | s('type.integer.int',X0) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X2),s('type.integer.int',X1)))) )),
  inference(cnf_transformation,[],[f286])).
fof(f286,plain,(
  ! [X0,X1,X2] : ((s('type.integer.int',X2) != s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X0),s('type.integer.int',X1))) | s('type.integer.int',X0) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X2),s('type.integer.int',X1)))) & (s('type.integer.int',X0) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X2),s('type.integer.int',X1))) | s('type.integer.int',X2) = s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X0),s('type.integer.int',X1)))))),
  inference(nnf_transformation,[],[f153])).
fof(f153,plain,(
  ! [X0,X1,X2] : (s('type.integer.int',X2) = s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X0),s('type.integer.int',X1))) <=> s('type.integer.int',X0) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X2),s('type.integer.int',X1))))),
  inference(rectify,[],[f49])).
fof(f49,axiom,(
  ! [X15,X16,X24] : (s('type.integer.int',X24) = s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X15),s('type.integer.int',X16))) <=> s('type.integer.int',X15) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X24),s('type.integer.int',X16))))),
  file('thm.integer.INT_REM_UNIQUE','thm.integer.INT_EQ_SUB_RADD')).
fof(f2720,plain,(
  ( ! [X7] : (s('type.integer.int',sK12) != s('type.integer.int',X7) | s('type.integer.int',sK14) = s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X7),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK15),s('type.integer.int',sK13)))))) ) | $spl1124),
  inference(cnf_transformation,[],[f2720_D])).
fof(f2720_D,plain,(
  ( ! [X7] : (s('type.integer.int',sK12) != s('type.integer.int',X7) | s('type.integer.int',sK14) = s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X7),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK15),s('type.integer.int',sK13)))))) ) <=> ~$spl1124),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1124])])).
fof(f2702,plain,(
  ( ! [X7] : (s('type.integer.int',sK12) != s('type.integer.int',X7) | s('type.integer.int',sK14) = s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X7),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK15),s('type.integer.int',sK13)))))) ) | ($spl64 | $spl782)),
  inference(superposition,[],[f638,f2179])).
fof(f2798,plain,(
  s('type.integer.int',sK14) = s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK12),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK15),s('type.integer.int',sK13))))) | $spl1144),
  inference(cnf_transformation,[],[f2798_D])).
fof(f2798_D,plain,(
  s('type.integer.int',sK14) = s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK12),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK15),s('type.integer.int',sK13))))) <=> ~$spl1144),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1144])])).
fof(f2790,plain,(
  s('type.integer.int',sK14) = s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK12),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK15),s('type.integer.int',sK13))))) | $spl1124),
  inference(equality_resolution,[],[f2720])).
fof(f621,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.integer.int_rem_2'(s('type.integer.int',X0),s('type.integer.int',X1))) = s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_quot_2'(s('type.integer.int',X0),s('type.integer.int',X1))),s('type.integer.int',X1))))) | s('type.integer.int',X1) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl40),
  inference(cnf_transformation,[],[f621_D])).
fof(f621_D,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.integer.int_rem_2'(s('type.integer.int',X0),s('type.integer.int',X1))) = s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_quot_2'(s('type.integer.int',X0),s('type.integer.int',X1))),s('type.integer.int',X1))))) | s('type.integer.int',X1) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) <=> ~$spl40),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl40])])).
fof(f426,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.integer.int_rem_2'(s('type.integer.int',X0),s('type.integer.int',X1))) = s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_quot_2'(s('type.integer.int',X0),s('type.integer.int',X1))),s('type.integer.int',X1))))) | s('type.integer.int',X1) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(cnf_transformation,[],[f185])).
fof(f185,plain,(
  ! [X0,X1] : (s('type.integer.int',X1) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int','const.integer.int_rem_2'(s('type.integer.int',X0),s('type.integer.int',X1))) = s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_quot_2'(s('type.integer.int',X0),s('type.integer.int',X1))),s('type.integer.int',X1))))))),
  inference(ennf_transformation,[],[f127])).
fof(f127,plain,(
  ! [X0,X1] : (s('type.integer.int',X1) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) => s('type.integer.int','const.integer.int_rem_2'(s('type.integer.int',X0),s('type.integer.int',X1))) = s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_quot_2'(s('type.integer.int',X0),s('type.integer.int',X1))),s('type.integer.int',X1))))))),
  inference(flattening,[],[f126])).
fof(f126,plain,(
  ! [X0,X1] : (~s('type.integer.int',X1) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) => s('type.integer.int','const.integer.int_rem_2'(s('type.integer.int',X0),s('type.integer.int',X1))) = s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_quot_2'(s('type.integer.int',X0),s('type.integer.int',X1))),s('type.integer.int',X1))))))),
  inference(rectify,[],[f53])).
fof(f53,axiom,(
  ! [X26,X27] : (~s('type.integer.int',X27) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) => s('type.integer.int','const.integer.int_rem_2'(s('type.integer.int',X26),s('type.integer.int',X27))) = s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X26),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_quot_2'(s('type.integer.int',X26),s('type.integer.int',X27))),s('type.integer.int',X27))))))),
  file('thm.integer.INT_REM_UNIQUE','thm.integer.int_rem')).
fof(f579,plain,(
  s('type.integer.int',sK14) != s('type.integer.int','const.integer.int_rem_2'(s('type.integer.int',sK12),s('type.integer.int',sK13))) | $spl1),
  inference(cnf_transformation,[],[f579_D])).
fof(f579_D,plain,(
  s('type.integer.int',sK14) != s('type.integer.int','const.integer.int_rem_2'(s('type.integer.int',sK12),s('type.integer.int',sK13))) <=> ~$spl1),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1])])).
fof(f331,plain,(
  s('type.integer.int',sK14) != s('type.integer.int','const.integer.int_rem_2'(s('type.integer.int',sK12),s('type.integer.int',sK13)))),
  inference(cnf_transformation,[],[f221])).
fof(f221,plain,(
  p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK14))),s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK13)))))) & p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK12))),s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK14))),s(bool,'const.integer.int_le_2'(s('type.integer.int',sK14),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))))) & s('type.integer.int',sK12) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK15),s('type.integer.int',sK13))),s('type.integer.int',sK14))) & s('type.integer.int',sK14) != s('type.integer.int','const.integer.int_rem_2'(s('type.integer.int',sK12),s('type.integer.int',sK13)))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK12,sK13,sK14,sK15])],[f167])).
fof(f167,plain,(
  ? [X0,X1,X2] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',X2))),s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',X1)))))) & p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X0))),s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X2))),s(bool,'const.integer.int_le_2'(s('type.integer.int',X2),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))))) & ? [X3] : s('type.integer.int',X0) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X3),s('type.integer.int',X1))),s('type.integer.int',X2))) & s('type.integer.int',X2) != s('type.integer.int','const.integer.int_rem_2'(s('type.integer.int',X0),s('type.integer.int',X1))))),
  inference(flattening,[],[f166])).
fof(f166,plain,(
  ? [X0,X1,X2] : ((p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',X2))),s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',X1)))))) & p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X0))),s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X2))),s(bool,'const.integer.int_le_2'(s('type.integer.int',X2),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))))) & ? [X3] : s('type.integer.int',X0) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X3),s('type.integer.int',X1))),s('type.integer.int',X2)))) & s('type.integer.int',X2) != s('type.integer.int','const.integer.int_rem_2'(s('type.integer.int',X0),s('type.integer.int',X1))))),
  inference(ennf_transformation,[],[f69])).
fof(f69,plain,(
  ~! [X0,X1,X2] : ((p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',X2))),s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',X1)))))) & p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X0))),s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X2))),s(bool,'const.integer.int_le_2'(s('type.integer.int',X2),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))))) & ? [X3] : s('type.integer.int',X0) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X3),s('type.integer.int',X1))),s('type.integer.int',X2)))) => s('type.integer.int',X2) = s('type.integer.int','const.integer.int_rem_2'(s('type.integer.int',X0),s('type.integer.int',X1))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7,X8] : ((p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',X8))),s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',X7)))))) & p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X6))),s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X8))),s(bool,'const.integer.int_le_2'(s('type.integer.int',X8),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))))) & ? [X9] : s('type.integer.int',X6) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X9),s('type.integer.int',X7))),s('type.integer.int',X8)))) => s('type.integer.int',X8) = s('type.integer.int','const.integer.int_rem_2'(s('type.integer.int',X6),s('type.integer.int',X7))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7,X8] : ((p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',X8))),s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',X7)))))) & p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X6))),s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X8))),s(bool,'const.integer.int_le_2'(s('type.integer.int',X8),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))))) & ? [X9] : s('type.integer.int',X6) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X9),s('type.integer.int',X7))),s('type.integer.int',X8)))) => s('type.integer.int',X8) = s('type.integer.int','const.integer.int_rem_2'(s('type.integer.int',X6),s('type.integer.int',X7))))),
  file('thm.integer.INT_REM_UNIQUE','thm.integer.INT_REM_UNIQUE')).
fof(f4725,plain,(
  s('type.integer.int',sK13) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | $spl1886),
  inference(cnf_transformation,[],[f4725_D])).
fof(f4725_D,plain,(
  s('type.integer.int',sK13) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) <=> ~$spl1886),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1886])])).
fof(f4723,plain,(
  s('type.integer.int',sK13) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | ($spl1 | $spl40 | $spl1144 | $spl1880)),
  inference(subsumption_resolution,[],[f4722,f579])).
fof(f4722,plain,(
  s('type.integer.int',sK14) = s('type.integer.int','const.integer.int_rem_2'(s('type.integer.int',sK12),s('type.integer.int',sK13))) | s('type.integer.int',sK13) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | ($spl40 | $spl1144 | $spl1880)),
  inference(forward_demodulation,[],[f4700,f2798])).
fof(f4700,plain,(
  s('type.integer.int','const.integer.int_rem_2'(s('type.integer.int',sK12),s('type.integer.int',sK13))) = s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK12),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK15),s('type.integer.int',sK13))))) | s('type.integer.int',sK13) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | ($spl40 | $spl1880)),
  inference(superposition,[],[f621,f4679])).
fof(f4679,plain,(
  s('type.integer.int',sK15) = s('type.integer.int','const.integer.int_quot_2'(s('type.integer.int',sK12),s('type.integer.int',sK13))) | $spl1880),
  inference(cnf_transformation,[],[f4679_D])).
fof(f4679_D,plain,(
  s('type.integer.int',sK15) = s('type.integer.int','const.integer.int_quot_2'(s('type.integer.int',sK12),s('type.integer.int',sK13))) <=> ~$spl1880),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1880])])).
fof(f597,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)) ) | $spl16),
  inference(cnf_transformation,[],[f597_D])).
fof(f597_D,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)) ) <=> ~$spl16),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl16])])).
fof(f354,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f224])).
fof(f585,plain,(
  p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK14))),s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK13)))))) | $spl6),
  inference(cnf_transformation,[],[f585_D])).
fof(f585_D,plain,(
  p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK14))),s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK13)))))) <=> ~$spl6),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl6])])).
fof(f328,plain,(
  p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK14))),s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK13))))))),
  inference(cnf_transformation,[],[f221])).
fof(f726,plain,(
  s(bool,'T_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK14))),s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK13))))) | $spl220),
  inference(cnf_transformation,[],[f726_D])).
fof(f726_D,plain,(
  s(bool,'T_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK14))),s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK13))))) <=> ~$spl220),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl220])])).
fof(f724,plain,(
  s(bool,'T_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK14))),s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK13))))) | ($spl6 | $spl16)),
  inference(resolution,[],[f597,f585])).
fof(f637,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.integer.int',X0) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X2),s('type.integer.int',X1))),s('type.integer.int',X3))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',X3))),s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',X1)))))) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X0))),s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X3))),s(bool,'const.integer.int_le_2'(s('type.integer.int',X3),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))))) | s('type.integer.int',X2) = s('type.integer.int','const.integer.int_quot_2'(s('type.integer.int',X0),s('type.integer.int',X1)))) ) | $spl62),
  inference(cnf_transformation,[],[f637_D])).
fof(f637_D,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.integer.int',X0) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X2),s('type.integer.int',X1))),s('type.integer.int',X3))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',X3))),s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',X1)))))) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X0))),s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X3))),s(bool,'const.integer.int_le_2'(s('type.integer.int',X3),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))))) | s('type.integer.int',X2) = s('type.integer.int','const.integer.int_quot_2'(s('type.integer.int',X0),s('type.integer.int',X1)))) ) <=> ~$spl62),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl62])])).
fof(f471,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.integer.int',X2) = s('type.integer.int','const.integer.int_quot_2'(s('type.integer.int',X0),s('type.integer.int',X1))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',X3))),s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',X1)))))) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X0))),s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X3))),s(bool,'const.integer.int_le_2'(s('type.integer.int',X3),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))))) | s('type.integer.int',X0) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X2),s('type.integer.int',X1))),s('type.integer.int',X3)))) )),
  inference(cnf_transformation,[],[f201])).
fof(f201,plain,(
  ! [X0,X1,X2] : (! [X3] : (s('type.integer.int',X0) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X2),s('type.integer.int',X1))),s('type.integer.int',X3))) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X0))),s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X3))),s(bool,'const.integer.int_le_2'(s('type.integer.int',X3),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',X3))),s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',X1))))))) | s('type.integer.int',X2) = s('type.integer.int','const.integer.int_quot_2'(s('type.integer.int',X0),s('type.integer.int',X1))))),
  inference(ennf_transformation,[],[f152])).
fof(f152,plain,(
  ! [X0,X1,X2] : (? [X3] : (s('type.integer.int',X0) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X2),s('type.integer.int',X1))),s('type.integer.int',X3))) & p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X0))),s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X3))),s(bool,'const.integer.int_le_2'(s('type.integer.int',X3),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))))) & p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',X3))),s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',X1))))))) => s('type.integer.int',X2) = s('type.integer.int','const.integer.int_quot_2'(s('type.integer.int',X0),s('type.integer.int',X1))))),
  inference(rectify,[],[f52])).
fof(f52,axiom,(
  ! [X6,X7,X9] : (? [X8] : (s('type.integer.int',X6) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X9),s('type.integer.int',X7))),s('type.integer.int',X8))) & p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X6))),s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X8))),s(bool,'const.integer.int_le_2'(s('type.integer.int',X8),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))))) & p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',X8))),s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',X7))))))) => s('type.integer.int',X9) = s('type.integer.int','const.integer.int_quot_2'(s('type.integer.int',X6),s('type.integer.int',X7))))),
  file('thm.integer.INT_REM_UNIQUE','thm.integer.INT_QUOT_UNIQUE')).
fof(f587,plain,(
  p(s(bool,'T_0')) | $spl8),
  inference(cnf_transformation,[],[f587_D])).
fof(f587_D,plain,(
  p(s(bool,'T_0')) <=> ~$spl8),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl8])])).
fof(f332,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f1])).
fof(f1,axiom,(
  p(s(bool,'T_0'))),
  file('thm.integer.INT_REM_UNIQUE',aHL_TRUTH)).
fof(f581,plain,(
  s('type.integer.int',sK12) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK15),s('type.integer.int',sK13))),s('type.integer.int',sK14))) | $spl2),
  inference(cnf_transformation,[],[f581_D])).
fof(f581_D,plain,(
  s('type.integer.int',sK12) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK15),s('type.integer.int',sK13))),s('type.integer.int',sK14))) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f330,plain,(
  s('type.integer.int',sK12) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK15),s('type.integer.int',sK13))),s('type.integer.int',sK14)))),
  inference(cnf_transformation,[],[f221])).
fof(f3580,plain,(
  ( ! [X0] : (s('type.integer.int',sK12) != s('type.integer.int',X0) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X0))),s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK14))),s(bool,'const.integer.int_le_2'(s('type.integer.int',sK14),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))))) | s('type.integer.int',sK15) = s('type.integer.int','const.integer.int_quot_2'(s('type.integer.int',X0),s('type.integer.int',sK13)))) ) | $spl1444),
  inference(cnf_transformation,[],[f3580_D])).
fof(f3580_D,plain,(
  ( ! [X0] : (s('type.integer.int',sK12) != s('type.integer.int',X0) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X0))),s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK14))),s(bool,'const.integer.int_le_2'(s('type.integer.int',sK14),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))))) | s('type.integer.int',sK15) = s('type.integer.int','const.integer.int_quot_2'(s('type.integer.int',X0),s('type.integer.int',sK13)))) ) <=> ~$spl1444),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1444])])).
fof(f3579,plain,(
  ( ! [X0] : (s('type.integer.int',sK12) != s('type.integer.int',X0) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X0))),s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK14))),s(bool,'const.integer.int_le_2'(s('type.integer.int',sK14),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))))) | s('type.integer.int',sK15) = s('type.integer.int','const.integer.int_quot_2'(s('type.integer.int',X0),s('type.integer.int',sK13)))) ) | ($spl2 | $spl8 | $spl62 | $spl220)),
  inference(subsumption_resolution,[],[f3578,f587])).
fof(f3578,plain,(
  ( ! [X0] : (~p(s(bool,'T_0')) | s('type.integer.int',sK12) != s('type.integer.int',X0) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X0))),s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK14))),s(bool,'const.integer.int_le_2'(s('type.integer.int',sK14),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))))) | s('type.integer.int',sK15) = s('type.integer.int','const.integer.int_quot_2'(s('type.integer.int',X0),s('type.integer.int',sK13)))) ) | ($spl2 | $spl62 | $spl220)),
  inference(forward_demodulation,[],[f3505,f726])).
fof(f3505,plain,(
  ( ! [X0] : (s('type.integer.int',sK12) != s('type.integer.int',X0) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK14))),s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK13)))))) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X0))),s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK14))),s(bool,'const.integer.int_le_2'(s('type.integer.int',sK14),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))))) | s('type.integer.int',sK15) = s('type.integer.int','const.integer.int_quot_2'(s('type.integer.int',X0),s('type.integer.int',sK13)))) ) | ($spl2 | $spl62)),
  inference(superposition,[],[f637,f581])).
fof(f583,plain,(
  p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK12))),s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK14))),s(bool,'const.integer.int_le_2'(s('type.integer.int',sK14),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))))) | $spl4),
  inference(cnf_transformation,[],[f583_D])).
fof(f583_D,plain,(
  p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK12))),s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK14))),s(bool,'const.integer.int_le_2'(s('type.integer.int',sK14),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))))) <=> ~$spl4),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl4])])).
fof(f329,plain,(
  p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK12))),s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK14))),s(bool,'const.integer.int_le_2'(s('type.integer.int',sK14),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))))))),
  inference(cnf_transformation,[],[f221])).
fof(f582,plain,(
  ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK12))),s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK14))),s(bool,'const.integer.int_le_2'(s('type.integer.int',sK14),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))))) | $spl5),
  inference(cnf_transformation,[],[f582_D])).
fof(f582_D,plain,(
  ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK12))),s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK14))),s(bool,'const.integer.int_le_2'(s('type.integer.int',sK14),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))))) <=> ~$spl5),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl5])])).
fof(f9531,plain,(
  ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK12))),s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK14))),s(bool,'const.integer.int_le_2'(s('type.integer.int',sK14),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))))) | ($spl1444 | $spl1881)),
  inference(subsumption_resolution,[],[f9497,f4678])).
fof(f4678,plain,(
  s('type.integer.int',sK15) != s('type.integer.int','const.integer.int_quot_2'(s('type.integer.int',sK12),s('type.integer.int',sK13))) | $spl1881),
  inference(cnf_transformation,[],[f4678_D])).
fof(f4678_D,plain,(
  s('type.integer.int',sK15) != s('type.integer.int','const.integer.int_quot_2'(s('type.integer.int',sK12),s('type.integer.int',sK13))) <=> ~$spl1881),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1881])])).
fof(f9497,plain,(
  ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK12))),s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK14))),s(bool,'const.integer.int_le_2'(s('type.integer.int',sK14),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))))) | s('type.integer.int',sK15) = s('type.integer.int','const.integer.int_quot_2'(s('type.integer.int',sK12),s('type.integer.int',sK13))) | $spl1444),
  inference(equality_resolution,[],[f3580])).
% SZS output end Proof for thm.integer
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 431
% Passive clauses: 1745
% Generated clauses: 9342
% Final active clauses: 380
% Final passive clauses: 1174
% Input formulas: 67
% Initial clauses: 238
% 
% Duplicate literals: 119
% Trivial inequalities: 49
% Fw subsumption resolutions: 569
% Fw demodulations: 1254
% Bw demodulations: 160
% Condensations: 83
% Global subsumptions: 22
% 
% Simple tautologies: 255
% Equational tautologies: 5
% Forward subsumptions: 3224
% 
% Binary resolution: 2266
% Factoring: 167
% Forward superposition: 1312
% Backward superposition: 1161
% Self superposition: 24
% Equality factoring: 2
% Equality resolution: 27
% 
% Split clauses: 79
% Split components: 159
% SAT solver clauses: 2250
% SAT solver unit clauses: 237
% SAT solver binary clauses: 83
% SAT solver learnt clauses: 49
% SAT solver learnt literals: 17
% 
% Sat splits: 79
% Sat splitting refutations: 11
% 
% TWLsolver clauses: 2144
% TWLsolver calls for satisfiability: 1833
% 
% Memory used [KB]: 9722
% Time elapsed: 0.377 s
% ------------------------------
% ------------------------------
% Success in time 0.996 s
