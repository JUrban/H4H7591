Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.list
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.list
% SZS output start Proof for thm.list
fof(f4266,plain,(
  $false),
  inference(trivial_inequality_removal,[],[f4262])).
fof(f4262,plain,(
  s('type.list.list'(sK10),'const.list.MAP2_3'(s(fun(sK11,fun(sK12,sK10)),sK13),s('type.list.list'(sK11),'const.list.CONS_2'(s(sK11,sK14),s('type.list.list'(sK11),sK15))),s('type.list.list'(sK12),'const.list.CONS_2'(s(sK12,sK16),s('type.list.list'(sK12),sK17))))) != s('type.list.list'(sK10),'const.list.MAP2_3'(s(fun(sK11,fun(sK12,sK10)),sK13),s('type.list.list'(sK11),'const.list.CONS_2'(s(sK11,sK14),s('type.list.list'(sK11),sK15))),s('type.list.list'(sK12),'const.list.CONS_2'(s(sK12,sK16),s('type.list.list'(sK12),sK17)))))),
  inference(superposition,[],[f195,f350])).
fof(f350,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.list.list'(X0),'const.list.MAP2_3'(s(fun(X1,fun(X2,X0)),X7),s('type.list.list'(X1),'const.list.CONS_2'(s(X1,X6),s('type.list.list'(X1),X4))),s('type.list.list'(X2),'const.list.CONS_2'(s(X2,X5),s('type.list.list'(X2),X3))))) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,happ(s(fun(X2,X0),happ(s(fun(X1,fun(X2,X0)),X7),s(X1,X6))),s(X2,X5))),s('type.list.list'(X0),'const.list.MAP2_3'(s(fun(X1,fun(X2,X0)),X7),s('type.list.list'(X1),X4),s('type.list.list'(X2),X3)))))) )),
  inference(cnf_transformation,[],[f94])).
fof(f94,plain,(
  ! [X0,X1,X2,X3,X4,X5,X6,X7] : s('type.list.list'(X0),'const.list.MAP2_3'(s(fun(X1,fun(X2,X0)),X7),s('type.list.list'(X1),'const.list.CONS_2'(s(X1,X6),s('type.list.list'(X1),X4))),s('type.list.list'(X2),'const.list.CONS_2'(s(X2,X5),s('type.list.list'(X2),X3))))) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,happ(s(fun(X2,X0),happ(s(fun(X1,fun(X2,X0)),X7),s(X1,X6))),s(X2,X5))),s('type.list.list'(X0),'const.list.MAP2_3'(s(fun(X1,fun(X2,X0)),X7),s('type.list.list'(X1),X4),s('type.list.list'(X2),X3)))))),
  inference(flattening,[],[f93])).
fof(f93,plain,(
  ! [X0,X1,X2] : ! [X3,X4,X5,X6,X7] : s('type.list.list'(X0),'const.list.MAP2_3'(s(fun(X1,fun(X2,X0)),X7),s('type.list.list'(X1),'const.list.CONS_2'(s(X1,X6),s('type.list.list'(X1),X4))),s('type.list.list'(X2),'const.list.CONS_2'(s(X2,X5),s('type.list.list'(X2),X3))))) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,happ(s(fun(X2,X0),happ(s(fun(X1,fun(X2,X0)),X7),s(X1,X6))),s(X2,X5))),s('type.list.list'(X0),'const.list.MAP2_3'(s(fun(X1,fun(X2,X0)),X7),s('type.list.list'(X1),X4),s('type.list.list'(X2),X3)))))),
  inference(rectify,[],[f7])).
fof(f7,axiom,(
  ! [X14,X15,X16] : ! [X13,X11,X12,X10,X9] : s('type.list.list'(X14),'const.list.MAP2_3'(s(fun(X15,fun(X16,X14)),X9),s('type.list.list'(X15),'const.list.CONS_2'(s(X15,X10),s('type.list.list'(X15),X11))),s('type.list.list'(X16),'const.list.CONS_2'(s(X16,X12),s('type.list.list'(X16),X13))))) = s('type.list.list'(X14),'const.list.CONS_2'(s(X14,happ(s(fun(X16,X14),happ(s(fun(X15,fun(X16,X14)),X9),s(X15,X10))),s(X16,X12))),s('type.list.list'(X14),'const.list.MAP2_3'(s(fun(X15,fun(X16,X14)),X9),s('type.list.list'(X15),X11),s('type.list.list'(X16),X13)))))),
  file('thm.list.MAP2|split|1','thm.list.MAP2_DEF|split|0')).
fof(f195,plain,(
  s('type.list.list'(sK10),'const.list.MAP2_3'(s(fun(sK11,fun(sK12,sK10)),sK13),s('type.list.list'(sK11),'const.list.CONS_2'(s(sK11,sK14),s('type.list.list'(sK11),sK15))),s('type.list.list'(sK12),'const.list.CONS_2'(s(sK12,sK16),s('type.list.list'(sK12),sK17))))) != s('type.list.list'(sK10),'const.list.CONS_2'(s(sK10,happ(s(fun(sK12,sK10),happ(s(fun(sK11,fun(sK12,sK10)),sK13),s(sK11,sK14))),s(sK12,sK16))),s('type.list.list'(sK10),'const.list.MAP2_3'(s(fun(sK11,fun(sK12,sK10)),sK13),s('type.list.list'(sK11),sK15),s('type.list.list'(sK12),sK17)))))),
  inference(cnf_transformation,[],[f126])).
fof(f126,plain,(
  s('type.list.list'(sK10),'const.list.MAP2_3'(s(fun(sK11,fun(sK12,sK10)),sK13),s('type.list.list'(sK11),'const.list.CONS_2'(s(sK11,sK14),s('type.list.list'(sK11),sK15))),s('type.list.list'(sK12),'const.list.CONS_2'(s(sK12,sK16),s('type.list.list'(sK12),sK17))))) != s('type.list.list'(sK10),'const.list.CONS_2'(s(sK10,happ(s(fun(sK12,sK10),happ(s(fun(sK11,fun(sK12,sK10)),sK13),s(sK11,sK14))),s(sK12,sK16))),s('type.list.list'(sK10),'const.list.MAP2_3'(s(fun(sK11,fun(sK12,sK10)),sK13),s('type.list.list'(sK11),sK15),s('type.list.list'(sK12),sK17)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK10,sK11,sK12,sK13,sK14,sK15,sK16,sK17])],[f95])).
fof(f95,plain,(
  ? [X0,X1,X2,X3,X4,X5,X6,X7] : s('type.list.list'(X0),'const.list.MAP2_3'(s(fun(X1,fun(X2,X0)),X3),s('type.list.list'(X1),'const.list.CONS_2'(s(X1,X4),s('type.list.list'(X1),X5))),s('type.list.list'(X2),'const.list.CONS_2'(s(X2,X6),s('type.list.list'(X2),X7))))) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,happ(s(fun(X2,X0),happ(s(fun(X1,fun(X2,X0)),X3),s(X1,X4))),s(X2,X6))),s('type.list.list'(X0),'const.list.MAP2_3'(s(fun(X1,fun(X2,X0)),X3),s('type.list.list'(X1),X5),s('type.list.list'(X2),X7)))))),
  inference(ennf_transformation,[],[f40])).
fof(f40,plain,(
  ~! [X0,X1,X2,X3,X4,X5,X6,X7] : s('type.list.list'(X0),'const.list.MAP2_3'(s(fun(X1,fun(X2,X0)),X3),s('type.list.list'(X1),'const.list.CONS_2'(s(X1,X4),s('type.list.list'(X1),X5))),s('type.list.list'(X2),'const.list.CONS_2'(s(X2,X6),s('type.list.list'(X2),X7))))) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,happ(s(fun(X2,X0),happ(s(fun(X1,fun(X2,X0)),X3),s(X1,X4))),s(X2,X6))),s('type.list.list'(X0),'const.list.MAP2_3'(s(fun(X1,fun(X2,X0)),X3),s('type.list.list'(X1),X5),s('type.list.list'(X2),X7)))))),
  inference(flattening,[],[f39])).
fof(f39,plain,(
  ~! [X0,X1,X2] : ! [X3,X4,X5,X6,X7] : s('type.list.list'(X0),'const.list.MAP2_3'(s(fun(X1,fun(X2,X0)),X3),s('type.list.list'(X1),'const.list.CONS_2'(s(X1,X4),s('type.list.list'(X1),X5))),s('type.list.list'(X2),'const.list.CONS_2'(s(X2,X6),s('type.list.list'(X2),X7))))) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,happ(s(fun(X2,X0),happ(s(fun(X1,fun(X2,X0)),X3),s(X1,X4))),s(X2,X6))),s('type.list.list'(X0),'const.list.MAP2_3'(s(fun(X1,fun(X2,X0)),X3),s('type.list.list'(X1),X5),s('type.list.list'(X2),X7)))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7,X8] : ! [X9,X10,X11,X12,X13] : s('type.list.list'(X6),'const.list.MAP2_3'(s(fun(X7,fun(X8,X6)),X9),s('type.list.list'(X7),'const.list.CONS_2'(s(X7,X10),s('type.list.list'(X7),X11))),s('type.list.list'(X8),'const.list.CONS_2'(s(X8,X12),s('type.list.list'(X8),X13))))) = s('type.list.list'(X6),'const.list.CONS_2'(s(X6,happ(s(fun(X8,X6),happ(s(fun(X7,fun(X8,X6)),X9),s(X7,X10))),s(X8,X12))),s('type.list.list'(X6),'const.list.MAP2_3'(s(fun(X7,fun(X8,X6)),X9),s('type.list.list'(X7),X11),s('type.list.list'(X8),X13)))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7,X8] : ! [X9,X10,X11,X12,X13] : s('type.list.list'(X6),'const.list.MAP2_3'(s(fun(X7,fun(X8,X6)),X9),s('type.list.list'(X7),'const.list.CONS_2'(s(X7,X10),s('type.list.list'(X7),X11))),s('type.list.list'(X8),'const.list.CONS_2'(s(X8,X12),s('type.list.list'(X8),X13))))) = s('type.list.list'(X6),'const.list.CONS_2'(s(X6,happ(s(fun(X8,X6),happ(s(fun(X7,fun(X8,X6)),X9),s(X7,X10))),s(X8,X12))),s('type.list.list'(X6),'const.list.MAP2_3'(s(fun(X7,fun(X8,X6)),X9),s('type.list.list'(X7),X11),s('type.list.list'(X8),X13)))))),
  file('thm.list.MAP2|split|1','thm.list.MAP2|split|1')).
% SZS output end Proof for thm.list
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 330
% Passive clauses: 1465
% Generated clauses: 4035
% Final active clauses: 329
% Final passive clauses: 1047
% Input formulas: 37
% Initial clauses: 156
% 
% Duplicate literals: 96
% Trivial inequalities: 4
% Fw subsumption resolutions: 299
% Fw demodulations: 169
% Bw demodulations: 1
% 
% Simple tautologies: 153
% Equational tautologies: 20
% Forward subsumptions: 1772
% 
% Binary resolution: 2196
% Factoring: 369
% Forward superposition: 396
% Backward superposition: 310
% Self superposition: 9
% Equality factoring: 2
% Equality resolution: 4
% 
% Split clauses: 92
% Split components: 184
% SAT solver clauses: 145
% SAT solver unit clauses: 7
% SAT solver binary clauses: 29
% 
% Sat splits: 92
% 
% TWLsolver clauses: 145
% TWLsolver calls for satisfiability: 127
% 
% Memory used [KB]: 2174
% Time elapsed: 0.089 s
% ------------------------------
% ------------------------------
% Success in time 0.091 s
