Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 299 next slice time: 5
dis+11_7_3 on thm.option
% (102432)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 702
% Passive clauses: 9654
% Generated clauses: 19445
% Final active clauses: 634
% Final passive clauses: 8401
% Input formulas: 58
% Initial clauses: 223
% 
% Duplicate literals: 378
% Trivial inequalities: 102
% Fw subsumption resolutions: 1558
% Fw demodulations: 147
% Bw demodulations: 66
% 
% Simple tautologies: 254
% Equational tautologies: 69
% Forward subsumptions: 6892
% Fw demodulations to eq. taut.: 1
% 
% Binary resolution: 11534
% Factoring: 1655
% Forward superposition: 1546
% Backward superposition: 1911
% Self superposition: 27
% Equality factoring: 28
% Equality resolution: 45
% 
% Split clauses: 416
% Split components: 835
% SAT solver clauses: 778
% SAT solver unit clauses: 27
% SAT solver binary clauses: 190
% 
% Sat splits: 416
% Sat splitting refutations: 3
% 
% TWLsolver clauses: 774
% TWLsolver calls for satisfiability: 430
% 
% Memory used [KB]: 9210
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 293 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.option
% (102450)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 367
% Passive clauses: 2295
% Generated clauses: 9289
% Final active clauses: 359
% Final passive clauses: 1891
% Input formulas: 58
% Initial clauses: 223
% 
% Duplicate literals: 183
% Trivial inequalities: 23
% Fw subsumption resolutions: 677
% Fw demodulations: 139
% Bw demodulations: 40
% Condensations: 236
% Global subsumptions: 22
% 
% Simple tautologies: 253
% Equational tautologies: 21
% Forward subsumptions: 2752
% Fw demodulations to eq. taut.: 1
% 
% Binary resolution: 3364
% Factoring: 211
% Forward superposition: 996
% Backward superposition: 781
% Self superposition: 32
% Equality factoring: 28
% Equality resolution: 18
% 
% Split clauses: 39
% Split components: 78
% SAT solver clauses: 2878
% SAT solver unit clauses: 229
% SAT solver binary clauses: 95
% SAT solver learnt clauses: 44
% SAT solver learnt literals: 10
% 
% Sat splits: 39
% Sat splitting refutations: 4
% 
% TWLsolver clauses: 2790
% TWLsolver calls for satisfiability: 1866
% 
% Memory used [KB]: 11385
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 286 next slice time: 103
lrs+11_2_br=off:cond=on:fde=none:gs=on:gsaa=full_model:lwlo=on:nwc=2:sas=minisat:stl=30:ssfp=100000:ssfq=1.4:smm=sco:ssnc=none:sp=occurrence:urr=on_98 on thm.option
% (102465)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 1817
% Passive clauses: 12392
% Generated clauses: 158623
% Final active clauses: 508
% Final passive clauses: 3179
% Input formulas: 58
% Initial clauses: 223
% 
% Duplicate literals: 6229
% Trivial inequalities: 615
% Fw subsumption resolutions: 7507
% Fw demodulations: 16820
% Bw demodulations: 5748
% Condensations: 13478
% Global subsumptions: 452
% 
% Simple tautologies: 556
% Equational tautologies: 1577
% Forward subsumptions: 96752
% Fw demodulations to eq. taut.: 1431
% Bw demodulations to eq. taut.: 62
% 
% Unit resulting resolution: 21463
% Factoring: 3
% Forward superposition: 36054
% Backward superposition: 43177
% Self superposition: 217
% Equality factoring: 150
% Equality resolution: 102
% 
% Split clauses: 512
% Split components: 1075
% SAT solver clauses: 14322
% SAT solver unit clauses: 1362
% SAT solver binary clauses: 2111
% 
% Sat splits: 512
% Sat splitting refutations: 452
% 
% Memory used [KB]: 79700
% Time elapsed: 10.400 s
% ------------------------------
% ------------------------------
% remaining time: 182 next slice time: 39
dis+11_5_fde=none:nwc=1:sas=minisat:sd=1:ss=axioms:st=5.0:sos=all:sdd=large:sser=off:sfr=on:ssfp=100000:ssfq=2.0:ssnc=none_37 on thm.option
% (102745)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 2017
% Passive clauses: 44323
% Generated clauses: 182856
% Final active clauses: 1850
% Final passive clauses: 39790
% Input formulas: 58
% Initial clauses: 222
% 
% Selected by SInE selection: 57
% SInE iterations: 1
% 
% Duplicate literals: 5419
% Trivial inequalities: 1338
% Fw subsumption resolutions: 17420
% Fw demodulations: 2028
% Bw demodulations: 148
% 
% Simple tautologies: 7896
% Equational tautologies: 1428
% Forward subsumptions: 97128
% Fw demodulations to eq. taut.: 1
% 
% Binary resolution: 129458
% Factoring: 160
% Forward superposition: 19767
% Backward superposition: 5782
% Self superposition: 115
% Equality resolution: 102
% 
% Split clauses: 7824
% Split components: 17906
% SAT solver clauses: 8566
% SAT solver unit clauses: 38
% SAT solver binary clauses: 3331
% 
% Sat splits: 7824
% Sat splitting refutations: 45
% 
% Memory used [KB]: 44391
% Time elapsed: 4.0000 s
% ------------------------------
% ------------------------------
% remaining time: 142 next slice time: 6
lrs+1002_2:3_br=off:fde=unused:gs=on:gsaa=from_current:gsem=on:gsssp=full:nwc=1:sas=minisat:stl=30:sac=on:sser=off:sfr=on:ssfp=100000:ssfq=2.0:ssnc=none:sp=reverse_arity:urr=on_4 on thm.option
% (102866)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 412
% Passive clauses: 2789
% Generated clauses: 16234
% Final active clauses: 405
% Final passive clauses: 2280
% Input formulas: 58
% Initial clauses: 223
% 
% Duplicate literals: 578
% Trivial inequalities: 140
% Fw subsumption resolutions: 2003
% Fw demodulations: 102
% Bw demodulations: 38
% Global subsumptions: 16
% 
% Simple tautologies: 469
% Equational tautologies: 55
% Forward subsumptions: 10010
% 
% Unit resulting resolution: 1742
% Factoring: 18
% Forward superposition: 4762
% Backward superposition: 6406
% Self superposition: 116
% Equality factoring: 6
% Equality resolution: 18
% 
% Split clauses: 29
% Split components: 58
% SAT solver clauses: 2882
% SAT solver unit clauses: 255
% SAT solver binary clauses: 109
% 
% Sat splits: 29
% Sat splitting refutations: 46
% 
% Memory used [KB]: 10106
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 136 next slice time: 15
lrs+1011_12_bs=on:bsr=unit_only:cond=on:gs=on:gsaa=from_current:gsssp=full:nwc=1.1:sas=minisat:stl=60:sos=all:sac=on:sdd=off:sser=off:sfr=on:ssfp=100000:ssfq=1.2:ssnc=none:sp=reverse_arity:updr=off_14 on thm.option
% (102881)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 1082
% Passive clauses: 6900
% Generated clauses: 30397
% Final active clauses: 433
% Final passive clauses: 3392
% Input formulas: 58
% Initial clauses: 223
% 
% Duplicate literals: 1412
% Trivial inequalities: 259
% Fw subsumption resolutions: 1544
% Bw subsumption resolutions: 961
% Fw demodulations: 1500
% Bw demodulations: 184
% Condensations: 2117
% Global subsumptions: 8
% 
% Simple tautologies: 3840
% Equational tautologies: 95
% Forward subsumptions: 12743
% Backward subsumptions: 2049
% 
% Binary resolution: 9784
% Factoring: 20
% Forward superposition: 7735
% Backward superposition: 2073
% Self superposition: 29
% Equality factoring: 2
% Equality resolution: 32
% 
% Split clauses: 1
% Split components: 2
% SAT solver clauses: 6991
% SAT solver unit clauses: 202
% SAT solver binary clauses: 1003
% 
% Sat splits: 1
% Sat splitting refutations: 80
% 
% Memory used [KB]: 11769
% Time elapsed: 1.600 s
% ------------------------------
% ------------------------------
% remaining time: 119 next slice time: 9
lrs+10_8:1_bd=preordered:bs=on:ccuc=first:fsr=off:fde=unused:gs=on:gsaa=from_current:gsem=on:gsssp=full:nwc=1:nicw=on:sas=minisat:stl=120:sos=on:sscc=on:sser=off:sfr=on:ssfp=4000:ssfq=1.0:ssnc=none:sp=reverse_arity:urr=on_7 on thm.option
% (102914)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 507
% Passive clauses: 3150
% Generated clauses: 15456
% Final active clauses: 461
% Final passive clauses: 2571
% Input formulas: 58
% Initial clauses: 223
% 
% Duplicate literals: 229
% Trivial inequalities: 68
% Fw demodulations: 1478
% Bw demodulations: 55
% Global subsumptions: 657
% 
% Simple tautologies: 398
% Equational tautologies: 152
% Forward subsumptions: 8054
% Backward subsumptions: 174
% Fw demodulations to eq. taut.: 11
% 
% Binary resolution: 5113
% Unit resulting resolution: 5428
% Factoring: 6
% Forward superposition: 243
% Backward superposition: 1726
% Self superposition: 26
% Equality factoring: 28
% Equality resolution: 19
% 
% Split clauses: 136
% Split components: 274
% SAT solver clauses: 5506
% SAT solver unit clauses: 945
% SAT solver binary clauses: 1483
% 
% Sat splits: 136
% Sat splitting refutations: 713
% 
% Memory used [KB]: 26865
% Time elapsed: 1.0000 s
% ------------------------------
% ------------------------------
% remaining time: 109 next slice time: 85
lrs+1_5:4_cond=on:fsr=off:fde=none:gs=on:gsem=on:lwlo=on:nm=64:nwc=1:stl=60:sos=all:spl=off_80 on thm.option
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.option
% SZS output start Proof for thm.option
fof(f5786,plain,(
  $false),
  inference(trivial_inequality_removal,[],[f5769])).
fof(f5769,plain,(
  s('type.option.option'(sK1),sK3) != s('type.option.option'(sK1),sK3)),
  inference(superposition,[],[f5554,f929])).
fof(f929,plain,(
  s('type.option.option'(sK1),sK3) = s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,sK4(sK3,sK1))))),
  inference(trivial_inequality_removal,[],[f914])).
fof(f914,plain,(
  s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),'const.option.NONE_0') | s('type.option.option'(sK1),sK3) = s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,sK4(sK3,sK1))))),
  inference(superposition,[],[f886,f335])).
fof(f335,plain,(
  ( ! [X0,X1] : (s('type.option.option'(X0),X1) = s('type.option.option'(X0),'const.option.SOME_1'(s(X0,sK4(X1,X0)))) | s('type.option.option'(X0),'const.option.NONE_0') = s('type.option.option'(X0),X1)) )),
  inference(cnf_transformation,[],[f213])).
fof(f213,plain,(
  ! [X0,X1] : (s('type.option.option'(X0),'const.option.NONE_0') = s('type.option.option'(X0),X1) | s('type.option.option'(X0),X1) = s('type.option.option'(X0),'const.option.SOME_1'(s(X0,sK4(X1,X0)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK4])],[f104])).
fof(f104,plain,(
  ! [X0,X1] : (s('type.option.option'(X0),'const.option.NONE_0') = s('type.option.option'(X0),X1) | ? [X2] : s('type.option.option'(X0),X1) = s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X2))))),
  inference(flattening,[],[f103])).
fof(f103,plain,(
  ! [X0] : ! [X1] : (s('type.option.option'(X0),'const.option.NONE_0') = s('type.option.option'(X0),X1) | ? [X2] : s('type.option.option'(X0),X1) = s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X2))))),
  inference(rectify,[],[f45])).
fof(f45,axiom,(
  ! [X6] : ! [X16] : (s('type.option.option'(X6),'const.option.NONE_0') = s('type.option.option'(X6),X16) | ? [X8] : s('type.option.option'(X6),X16) = s('type.option.option'(X6),'const.option.SOME_1'(s(X6,X8))))),
  file('thm.option.OPTREL_refl','thm.option.option_nchotomy')).
fof(f886,plain,(
  s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),sK3)),
  inference(duplicate_literal_removal,[],[f784])).
fof(f784,plain,(
  s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),sK3) | s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),sK3)),
  inference(resolution,[],[f258,f406])).
fof(f406,plain,(
  ( ! [X4,X2,X0,X3,X1] : (p(s(bool,'const.option.OPTREL_3'(s(fun(X0,fun(X1,bool)),X2),s('type.option.option'(X0),X3),s('type.option.option'(X1),X4)))) | s('type.option.option'(X1),'const.option.NONE_0') != s('type.option.option'(X1),X4) | s('type.option.option'(X0),'const.option.NONE_0') != s('type.option.option'(X0),X3)) )),
  inference(cnf_transformation,[],[f246])).
fof(f246,plain,(
  ! [X0,X1,X2,X3,X4] : ((~p(s(bool,'const.option.OPTREL_3'(s(fun(X0,fun(X1,bool)),X2),s('type.option.option'(X0),X3),s('type.option.option'(X1),X4)))) | (s('type.option.option'(X0),'const.option.NONE_0') = s('type.option.option'(X0),X3) & s('type.option.option'(X1),'const.option.NONE_0') = s('type.option.option'(X1),X4)) | (s('type.option.option'(X0),X3) = s('type.option.option'(X0),'const.option.SOME_1'(s(X0,sK12(X4,X3,X2,X1,X0)))) & s('type.option.option'(X1),X4) = s('type.option.option'(X1),'const.option.SOME_1'(s(X1,sK13(X4,X3,X2,X1,X0)))) & p(s(bool,happ(s(fun(X1,bool),happ(s(fun(X0,fun(X1,bool)),X2),s(X0,sK12(X4,X3,X2,X1,X0)))),s(X1,sK13(X4,X3,X2,X1,X0))))))) & (((s('type.option.option'(X0),'const.option.NONE_0') != s('type.option.option'(X0),X3) | s('type.option.option'(X1),'const.option.NONE_0') != s('type.option.option'(X1),X4)) & ! [X5,X6] : (s('type.option.option'(X0),X3) != s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X5))) | s('type.option.option'(X1),X4) != s('type.option.option'(X1),'const.option.SOME_1'(s(X1,X6))) | ~p(s(bool,happ(s(fun(X1,bool),happ(s(fun(X0,fun(X1,bool)),X2),s(X0,X5))),s(X1,X6)))))) | p(s(bool,'const.option.OPTREL_3'(s(fun(X0,fun(X1,bool)),X2),s('type.option.option'(X0),X3),s('type.option.option'(X1),X4))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK12,sK13])],[f245])).
fof(f245,plain,(
  ! [X0,X1,X2,X3,X4] : ((~p(s(bool,'const.option.OPTREL_3'(s(fun(X0,fun(X1,bool)),X2),s('type.option.option'(X0),X3),s('type.option.option'(X1),X4)))) | (s('type.option.option'(X0),'const.option.NONE_0') = s('type.option.option'(X0),X3) & s('type.option.option'(X1),'const.option.NONE_0') = s('type.option.option'(X1),X4)) | ? [X7,X8] : (s('type.option.option'(X0),X3) = s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X7))) & s('type.option.option'(X1),X4) = s('type.option.option'(X1),'const.option.SOME_1'(s(X1,X8))) & p(s(bool,happ(s(fun(X1,bool),happ(s(fun(X0,fun(X1,bool)),X2),s(X0,X7))),s(X1,X8)))))) & (((s('type.option.option'(X0),'const.option.NONE_0') != s('type.option.option'(X0),X3) | s('type.option.option'(X1),'const.option.NONE_0') != s('type.option.option'(X1),X4)) & ! [X5,X6] : (s('type.option.option'(X0),X3) != s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X5))) | s('type.option.option'(X1),X4) != s('type.option.option'(X1),'const.option.SOME_1'(s(X1,X6))) | ~p(s(bool,happ(s(fun(X1,bool),happ(s(fun(X0,fun(X1,bool)),X2),s(X0,X5))),s(X1,X6)))))) | p(s(bool,'const.option.OPTREL_3'(s(fun(X0,fun(X1,bool)),X2),s('type.option.option'(X0),X3),s('type.option.option'(X1),X4))))))),
  inference(rectify,[],[f244])).
fof(f244,plain,(
  ! [X0,X1,X2,X3,X4] : ((~p(s(bool,'const.option.OPTREL_3'(s(fun(X0,fun(X1,bool)),X2),s('type.option.option'(X0),X3),s('type.option.option'(X1),X4)))) | (s('type.option.option'(X0),'const.option.NONE_0') = s('type.option.option'(X0),X3) & s('type.option.option'(X1),'const.option.NONE_0') = s('type.option.option'(X1),X4)) | ? [X5,X6] : (s('type.option.option'(X0),X3) = s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X5))) & s('type.option.option'(X1),X4) = s('type.option.option'(X1),'const.option.SOME_1'(s(X1,X6))) & p(s(bool,happ(s(fun(X1,bool),happ(s(fun(X0,fun(X1,bool)),X2),s(X0,X5))),s(X1,X6)))))) & (((s('type.option.option'(X0),'const.option.NONE_0') != s('type.option.option'(X0),X3) | s('type.option.option'(X1),'const.option.NONE_0') != s('type.option.option'(X1),X4)) & ! [X5,X6] : (s('type.option.option'(X0),X3) != s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X5))) | s('type.option.option'(X1),X4) != s('type.option.option'(X1),'const.option.SOME_1'(s(X1,X6))) | ~p(s(bool,happ(s(fun(X1,bool),happ(s(fun(X0,fun(X1,bool)),X2),s(X0,X5))),s(X1,X6)))))) | p(s(bool,'const.option.OPTREL_3'(s(fun(X0,fun(X1,bool)),X2),s('type.option.option'(X0),X3),s('type.option.option'(X1),X4))))))),
  inference(flattening,[],[f243])).
fof(f243,plain,(
  ! [X0,X1,X2,X3,X4] : ((~p(s(bool,'const.option.OPTREL_3'(s(fun(X0,fun(X1,bool)),X2),s('type.option.option'(X0),X3),s('type.option.option'(X1),X4)))) | ((s('type.option.option'(X0),'const.option.NONE_0') = s('type.option.option'(X0),X3) & s('type.option.option'(X1),'const.option.NONE_0') = s('type.option.option'(X1),X4)) | ? [X5,X6] : (s('type.option.option'(X0),X3) = s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X5))) & s('type.option.option'(X1),X4) = s('type.option.option'(X1),'const.option.SOME_1'(s(X1,X6))) & p(s(bool,happ(s(fun(X1,bool),happ(s(fun(X0,fun(X1,bool)),X2),s(X0,X5))),s(X1,X6))))))) & (((s('type.option.option'(X0),'const.option.NONE_0') != s('type.option.option'(X0),X3) | s('type.option.option'(X1),'const.option.NONE_0') != s('type.option.option'(X1),X4)) & ! [X5,X6] : (s('type.option.option'(X0),X3) != s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X5))) | s('type.option.option'(X1),X4) != s('type.option.option'(X1),'const.option.SOME_1'(s(X1,X6))) | ~p(s(bool,happ(s(fun(X1,bool),happ(s(fun(X0,fun(X1,bool)),X2),s(X0,X5))),s(X1,X6)))))) | p(s(bool,'const.option.OPTREL_3'(s(fun(X0,fun(X1,bool)),X2),s('type.option.option'(X0),X3),s('type.option.option'(X1),X4))))))),
  inference(nnf_transformation,[],[f137])).
fof(f137,plain,(
  ! [X0,X1,X2,X3,X4] : (p(s(bool,'const.option.OPTREL_3'(s(fun(X0,fun(X1,bool)),X2),s('type.option.option'(X0),X3),s('type.option.option'(X1),X4)))) <=> ((s('type.option.option'(X0),'const.option.NONE_0') = s('type.option.option'(X0),X3) & s('type.option.option'(X1),'const.option.NONE_0') = s('type.option.option'(X1),X4)) | ? [X5,X6] : (s('type.option.option'(X0),X3) = s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X5))) & s('type.option.option'(X1),X4) = s('type.option.option'(X1),'const.option.SOME_1'(s(X1,X6))) & p(s(bool,happ(s(fun(X1,bool),happ(s(fun(X0,fun(X1,bool)),X2),s(X0,X5))),s(X1,X6)))))))),
  inference(flattening,[],[f136])).
fof(f136,plain,(
  ! [X0,X1] : ! [X2,X3,X4] : (p(s(bool,'const.option.OPTREL_3'(s(fun(X0,fun(X1,bool)),X2),s('type.option.option'(X0),X3),s('type.option.option'(X1),X4)))) <=> ((s('type.option.option'(X0),'const.option.NONE_0') = s('type.option.option'(X0),X3) & s('type.option.option'(X1),'const.option.NONE_0') = s('type.option.option'(X1),X4)) | ? [X5,X6] : (s('type.option.option'(X0),X3) = s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X5))) & s('type.option.option'(X1),X4) = s('type.option.option'(X1),'const.option.SOME_1'(s(X1,X6))) & p(s(bool,happ(s(fun(X1,bool),happ(s(fun(X0,fun(X1,bool)),X2),s(X0,X5))),s(X1,X6)))))))),
  inference(rectify,[],[f49])).
fof(f49,axiom,(
  ! [X6,X15] : ! [X7,X8,X12] : (p(s(bool,'const.option.OPTREL_3'(s(fun(X6,fun(X15,bool)),X7),s('type.option.option'(X6),X8),s('type.option.option'(X15),X12)))) <=> ((s('type.option.option'(X6),'const.option.NONE_0') = s('type.option.option'(X6),X8) & s('type.option.option'(X15),'const.option.NONE_0') = s('type.option.option'(X15),X12)) | ? [X17,X18] : (s('type.option.option'(X6),X8) = s('type.option.option'(X6),'const.option.SOME_1'(s(X6,X17))) & s('type.option.option'(X15),X12) = s('type.option.option'(X15),'const.option.SOME_1'(s(X15,X18))) & p(s(bool,happ(s(fun(X15,bool),happ(s(fun(X6,fun(X15,bool)),X7),s(X6,X17))),s(X15,X18)))))))),
  file('thm.option.OPTREL_refl','thm.option.OPTREL_def')).
fof(f258,plain,(
  ~p(s(bool,'const.option.OPTREL_3'(s(fun(sK1,fun(sK1,bool)),sK2),s('type.option.option'(sK1),sK3),s('type.option.option'(sK1),sK3))))),
  inference(cnf_transformation,[],[f174])).
fof(f174,plain,(
  ! [X3] : p(s(bool,happ(s(fun(sK1,bool),happ(s(fun(sK1,fun(sK1,bool)),sK2),s(sK1,X3))),s(sK1,X3)))) & ~p(s(bool,'const.option.OPTREL_3'(s(fun(sK1,fun(sK1,bool)),sK2),s('type.option.option'(sK1),sK3),s('type.option.option'(sK1),sK3))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK1,sK2,sK3])],[f173])).
fof(f173,plain,(
  ? [X0,X1] : (! [X3] : p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X0,fun(X0,bool)),X1),s(X0,X3))),s(X0,X3)))) & ? [X2] : ~p(s(bool,'const.option.OPTREL_3'(s(fun(X0,fun(X0,bool)),X1),s('type.option.option'(X0),X2),s('type.option.option'(X0),X2)))))),
  inference(rectify,[],[f146])).
fof(f146,plain,(
  ? [X0,X1] : (! [X2] : p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X0,fun(X0,bool)),X1),s(X0,X2))),s(X0,X2)))) & ? [X3] : ~p(s(bool,'const.option.OPTREL_3'(s(fun(X0,fun(X0,bool)),X1),s('type.option.option'(X0),X3),s('type.option.option'(X0),X3)))))),
  inference(ennf_transformation,[],[f61])).
fof(f61,plain,(
  ~! [X0,X1] : (! [X2] : p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X0,fun(X0,bool)),X1),s(X0,X2))),s(X0,X2)))) => ! [X3] : p(s(bool,'const.option.OPTREL_3'(s(fun(X0,fun(X0,bool)),X1),s('type.option.option'(X0),X3),s('type.option.option'(X0),X3)))))),
  inference(flattening,[],[f60])).
fof(f60,plain,(
  ~! [X0] : ! [X1] : (! [X2] : p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X0,fun(X0,bool)),X1),s(X0,X2))),s(X0,X2)))) => ! [X3] : p(s(bool,'const.option.OPTREL_3'(s(fun(X0,fun(X0,bool)),X1),s('type.option.option'(X0),X3),s('type.option.option'(X0),X3)))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : ! [X7] : (! [X8] : p(s(bool,happ(s(fun(X6,bool),happ(s(fun(X6,fun(X6,bool)),X7),s(X6,X8))),s(X6,X8)))) => ! [X8] : p(s(bool,'const.option.OPTREL_3'(s(fun(X6,fun(X6,bool)),X7),s('type.option.option'(X6),X8),s('type.option.option'(X6),X8)))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : ! [X7] : (! [X8] : p(s(bool,happ(s(fun(X6,bool),happ(s(fun(X6,fun(X6,bool)),X7),s(X6,X8))),s(X6,X8)))) => ! [X8] : p(s(bool,'const.option.OPTREL_3'(s(fun(X6,fun(X6,bool)),X7),s('type.option.option'(X6),X8),s('type.option.option'(X6),X8)))))),
  file('thm.option.OPTREL_refl','thm.option.OPTREL_refl')).
fof(f5554,plain,(
  ( ! [X0] : (s('type.option.option'(sK1),sK3) != s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,X0)))) )),
  inference(resolution,[],[f5438,f259])).
fof(f259,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f1])).
fof(f1,axiom,(
  p(s(bool,'T_0'))),
  file('thm.option.OPTREL_refl',aHL_TRUTH)).
fof(f5438,plain,(
  ( ! [X0] : (~p(s(bool,'T_0')) | s('type.option.option'(sK1),sK3) != s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,X0)))) )),
  inference(duplicate_literal_removal,[],[f5401])).
fof(f5401,plain,(
  ( ! [X0] : (~p(s(bool,'T_0')) | s('type.option.option'(sK1),sK3) != s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,X0))) | s('type.option.option'(sK1),sK3) != s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,X0)))) )),
  inference(superposition,[],[f785,f935])).
fof(f935,plain,(
  ( ! [X9] : (s(bool,'T_0') = s(bool,happ(s(fun(sK1,bool),happ(s(fun(sK1,fun(sK1,bool)),sK2),s(sK1,X9))),s(sK1,X9)))) )),
  inference(resolution,[],[f257,f279])).
fof(f279,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f177])).
fof(f177,plain,(
  ! [X0] : ((s(bool,'T_0') != s(bool,X0) | p(s(bool,X0))) & (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f77])).
fof(f77,plain,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) <=> p(s(bool,X0)))),
  inference(rectify,[],[f35])).
fof(f35,axiom,(
  ! [X9] : (s(bool,'T_0') = s(bool,X9) <=> p(s(bool,X9)))),
  file('thm.option.OPTREL_refl','thm.bool.EQ_CLAUSES|split|0')).
fof(f257,plain,(
  ( ! [X3] : (p(s(bool,happ(s(fun(sK1,bool),happ(s(fun(sK1,fun(sK1,bool)),sK2),s(sK1,X3))),s(sK1,X3))))) )),
  inference(cnf_transformation,[],[f174])).
fof(f785,plain,(
  ( ! [X0,X1] : (~p(s(bool,happ(s(fun(sK1,bool),happ(s(fun(sK1,fun(sK1,bool)),sK2),s(sK1,X0))),s(sK1,X1)))) | s('type.option.option'(sK1),sK3) != s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,X1))) | s('type.option.option'(sK1),sK3) != s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,X0)))) )),
  inference(resolution,[],[f258,f407])).
fof(f407,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (p(s(bool,'const.option.OPTREL_3'(s(fun(X0,fun(X1,bool)),X2),s('type.option.option'(X0),X3),s('type.option.option'(X1),X4)))) | ~p(s(bool,happ(s(fun(X1,bool),happ(s(fun(X0,fun(X1,bool)),X2),s(X0,X5))),s(X1,X6)))) | s('type.option.option'(X1),X4) != s('type.option.option'(X1),'const.option.SOME_1'(s(X1,X6))) | s('type.option.option'(X0),X3) != s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X5)))) )),
  inference(cnf_transformation,[],[f246])).
% SZS output end Proof for thm.option
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 139
% Passive clauses: 663
% Generated clauses: 4985
% Final active clauses: 134
% Final passive clauses: 593
% Input formulas: 58
% Initial clauses: 352
% 
% Duplicate literals: 449
% Trivial inequalities: 85
% Fw demodulations: 392
% Bw demodulations: 16
% Condensations: 303
% Global subsumptions: 15
% 
% Simple tautologies: 535
% Equational tautologies: 1
% Forward subsumptions: 3026
% Bw demodulations to eq. taut.: 1
% 
% Binary resolution: 1417
% Forward superposition: 2066
% Backward superposition: 463
% Equality resolution: 12
% 
% SAT solver clauses: 738
% SAT solver unit clauses: 82
% SAT solver binary clauses: 133
% SAT solver learnt clauses: 30
% SAT solver learnt literals: 28
% 
% TWLsolver clauses: 678
% TWLsolver calls for satisfiability: 13189
% 
% Memory used [KB]: 5373
% Time elapsed: 0.157 s
% ------------------------------
% ------------------------------
% Success in time 19.163 s
