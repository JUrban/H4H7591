Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 300 next slice time: 5
dis+11_7_3 on thm.list
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.list
% SZS output start Proof for thm.list
fof(f471,plain,(
  $false),
  inference(trivial_inequality_removal,[],[f470])).
fof(f470,plain,(
  s(sK0,'const.list.EL_2'(s('type.num.num',sK1),s('type.list.list'(sK0),sK2))) != s(sK0,'const.list.EL_2'(s('type.num.num',sK1),s('type.list.list'(sK0),sK2)))),
  inference(superposition,[],[f60,f311])).
fof(f311,plain,(
  ( ! [X2,X0,X3,X1] : (s(X0,'const.list.EL_2'(s('type.num.num',X3),s('type.list.list'(X0),X2))) = s(X0,'const.list.EL_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X3))),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X1),s('type.list.list'(X0),X2)))))) )),
  inference(superposition,[],[f86,f85])).
fof(f85,plain,(
  ( ! [X2,X0,X1] : (s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.TL_1'(s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X1),s('type.list.list'(X0),X2)))))) )),
  inference(cnf_transformation,[],[f33])).
fof(f33,plain,(
  ! [X0,X1,X2] : s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.TL_1'(s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X1),s('type.list.list'(X0),X2)))))),
  inference(flattening,[],[f32])).
fof(f32,plain,(
  ! [X0] : ! [X1,X2] : s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.TL_1'(s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X1),s('type.list.list'(X0),X2)))))),
  inference(rectify,[],[f16])).
fof(f16,axiom,(
  ! [X10] : ! [X15,X11] : s('type.list.list'(X10),X11) = s('type.list.list'(X10),'const.list.TL_1'(s('type.list.list'(X10),'const.list.CONS_2'(s(X10,X15),s('type.list.list'(X10),X11)))))),
  file('thm.list.EL_restricted|split|1','thm.list.TL')).
fof(f86,plain,(
  ( ! [X2,X0,X1] : (s(X0,'const.list.EL_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X2))),s('type.list.list'(X0),X1))) = s(X0,'const.list.EL_2'(s('type.num.num',X2),s('type.list.list'(X0),'const.list.TL_1'(s('type.list.list'(X0),X1)))))) )),
  inference(cnf_transformation,[],[f35])).
fof(f35,plain,(
  ! [X0,X1,X2] : s(X0,'const.list.EL_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X2))),s('type.list.list'(X0),X1))) = s(X0,'const.list.EL_2'(s('type.num.num',X2),s('type.list.list'(X0),'const.list.TL_1'(s('type.list.list'(X0),X1)))))),
  inference(flattening,[],[f34])).
fof(f34,plain,(
  ! [X0] : ! [X1,X2] : s(X0,'const.list.EL_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X2))),s('type.list.list'(X0),X1))) = s(X0,'const.list.EL_2'(s('type.num.num',X2),s('type.list.list'(X0),'const.list.TL_1'(s('type.list.list'(X0),X1)))))),
  inference(rectify,[],[f18])).
fof(f18,axiom,(
  ! [X10] : ! [X9,X7] : s(X10,'const.list.EL_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X7))),s('type.list.list'(X10),X9))) = s(X10,'const.list.EL_2'(s('type.num.num',X7),s('type.list.list'(X10),'const.list.TL_1'(s('type.list.list'(X10),X9)))))),
  file('thm.list.EL_restricted|split|1','thm.list.EL|split|1')).
fof(f60,plain,(
  s(sK0,'const.list.EL_2'(s('type.num.num',sK1),s('type.list.list'(sK0),sK2))) != s(sK0,'const.list.EL_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',sK1))),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),sK2)))))),
  inference(cnf_transformation,[],[f42])).
fof(f42,plain,(
  s(sK0,'const.list.EL_2'(s('type.num.num',sK1),s('type.list.list'(sK0),sK2))) != s(sK0,'const.list.EL_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',sK1))),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),sK2)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2,sK3])],[f40])).
fof(f40,plain,(
  ? [X0,X1,X2,X3] : s(X0,'const.list.EL_2'(s('type.num.num',X1),s('type.list.list'(X0),X2))) != s(X0,'const.list.EL_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),X2)))))),
  inference(ennf_transformation,[],[f20])).
fof(f20,plain,(
  ~! [X0,X1,X2,X3] : s(X0,'const.list.EL_2'(s('type.num.num',X1),s('type.list.list'(X0),X2))) = s(X0,'const.list.EL_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),X2)))))),
  inference(flattening,[],[f19])).
fof(f19,plain,(
  ~! [X0] : ! [X1,X2,X3] : s(X0,'const.list.EL_2'(s('type.num.num',X1),s('type.list.list'(X0),X2))) = s(X0,'const.list.EL_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),X2)))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : ! [X7,X8,X9] : s(X6,'const.list.EL_2'(s('type.num.num',X7),s('type.list.list'(X6),X8))) = s(X6,'const.list.EL_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X7))),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X9),s('type.list.list'(X6),X8)))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : ! [X7,X8,X9] : s(X6,'const.list.EL_2'(s('type.num.num',X7),s('type.list.list'(X6),X8))) = s(X6,'const.list.EL_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X7))),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X9),s('type.list.list'(X6),X8)))))),
  file('thm.list.EL_restricted|split|1','thm.list.EL_restricted|split|1')).
% SZS output end Proof for thm.list
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 17
% Passive clauses: 75
% Generated clauses: 343
% Final active clauses: 15
% Final passive clauses: 49
% Input formulas: 17
% Initial clauses: 30
% 
% Duplicate literals: 42
% Trivial inequalities: 4
% Fw demodulations: 18
% 
% Simple tautologies: 29
% Equational tautologies: 15
% Forward subsumptions: 152
% Fw demodulations to eq. taut.: 2
% 
% Binary resolution: 4
% Forward superposition: 117
% Backward superposition: 114
% Self superposition: 36
% Equality factoring: 26
% 
% Split clauses: 5
% Split components: 10
% SAT solver clauses: 11
% SAT solver unit clauses: 4
% SAT solver binary clauses: 6
% 
% Sat splits: 5
% Sat splitting refutations: 1
% 
% TWLsolver clauses: 11
% TWLsolver calls for satisfiability: 7
% 
% Memory used [KB]: 1023
% Time elapsed: 0.016 s
% ------------------------------
% ------------------------------
% Success in time 0.018 s
