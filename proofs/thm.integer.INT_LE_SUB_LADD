Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 300 next slice time: 5
dis+11_7_3 on thm.integer
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.integer
% SZS output start Proof for thm.integer
fof(f634,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f631,f548,f439,f208,f210,f245,f49,f52,f50,f61,f345,f332,f326,f333,f509,f338,f429,f433,f209,f503,f593,f511,f331])).
fof(f331,plain,(
  ( ! [X0] : (s(bool,X0) = s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK0),s('type.integer.int',sK2))),s('type.integer.int',sK1))) | s(bool,'T_0') = s(bool,X0)) ) | $spl10),
  inference(cnf_transformation,[],[f331_D])).
fof(f331_D,plain,(
  ( ! [X0] : (s(bool,X0) = s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK0),s('type.integer.int',sK2))),s('type.integer.int',sK1))) | s(bool,'T_0') = s(bool,X0)) ) <=> ~$spl10),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl10])])).
fof(f511,plain,(
  ( ! [X2] : (s(bool,X2) = s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK0),s('type.integer.int',sK2))),s('type.integer.int',sK1))) | s(bool,'T_0') = s(bool,X2)) ) | $spl23),
  inference(subsumption_resolution,[],[f448,f31])).
fof(f31,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f1])).
fof(f1,axiom,(
  p(s(bool,'T_0'))),
  file('thm.integer.INT_LE_SUB_LADD',aHL_TRUTH)).
fof(f448,plain,(
  ( ! [X2] : (~p(s(bool,'T_0')) | s(bool,X2) = s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK0),s('type.integer.int',sK2))),s('type.integer.int',sK1))) | s(bool,'T_0') = s(bool,X2)) ) | $spl23),
  inference(superposition,[],[f435,f44])).
fof(f44,plain,(
  ( ! [X0,X1] : (s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X1) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f34,f34])).
fof(f34,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f3])).
fof(f3,axiom,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) | s(bool,'F_0') = s(bool,X0))),
  file('thm.integer.INT_LE_SUB_LADD',aHL_BOOL_CASES)).
fof(f435,plain,(
  ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK0),s('type.integer.int',sK2))),s('type.integer.int',sK1)))) | $spl23),
  inference(cnf_transformation,[],[f435_D])).
fof(f435_D,plain,(
  ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK0),s('type.integer.int',sK2))),s('type.integer.int',sK1)))) <=> ~$spl23),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl23])])).
fof(f593,plain,(
  $false | ($spl22 | $spl30)),
  inference(subsumption_resolution,[],[f578,f31])).
fof(f578,plain,(
  ~p(s(bool,'T_0')) | ($spl22 | $spl30)),
  inference(backward_demodulation,[],[f442,f513])).
fof(f513,plain,(
  ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK1),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK0),s('type.integer.int',sK2)))))) | $spl22),
  inference(resolution,[],[f434,f40])).
fof(f40,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X1),s('type.integer.int',X0)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int',X1))))) )),
  inference(cnf_transformation,[],[f28])).
fof(f28,plain,(
  ! [X0,X1] : ((p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int',X1)))) | p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X1),s('type.integer.int',X0))))) & (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X1),s('type.integer.int',X0)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int',X1))))))),
  inference(nnf_transformation,[],[f19])).
fof(f19,plain,(
  ! [X0,X1] : (~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int',X1)))) <=> p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X1),s('type.integer.int',X0)))))),
  inference(flattening,[],[f18])).
fof(f18,plain,(
  ! [X0,X1] : (~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int',X1)))) <=> p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X1),s('type.integer.int',X0)))))),
  inference(rectify,[],[f10])).
fof(f10,axiom,(
  ! [X6,X7] : (~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X6),s('type.integer.int',X7)))) <=> p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X7),s('type.integer.int',X6)))))),
  file('thm.integer.INT_LE_SUB_LADD','thm.integer.INT_NOT_LT')).
fof(f434,plain,(
  p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK0),s('type.integer.int',sK2))),s('type.integer.int',sK1)))) | $spl22),
  inference(cnf_transformation,[],[f434_D])).
fof(f434_D,plain,(
  p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK0),s('type.integer.int',sK2))),s('type.integer.int',sK1)))) <=> ~$spl22),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl22])])).
fof(f442,plain,(
  s(bool,'T_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK1),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK0),s('type.integer.int',sK2))))) | $spl30),
  inference(cnf_transformation,[],[f442_D])).
fof(f442_D,plain,(
  s(bool,'T_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK1),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK0),s('type.integer.int',sK2))))) <=> ~$spl30),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl30])])).
fof(f503,plain,(
  $false | ($spl12 | $spl20)),
  inference(subsumption_resolution,[],[f502,f33])).
fof(f33,plain,(
  ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f13])).
fof(f13,plain,(
  ~p(s(bool,'F_0'))),
  inference(flattening,[],[f2])).
fof(f2,axiom,(
  ~p(s(bool,'F_0'))),
  file('thm.integer.INT_LE_SUB_LADD',aHL_FALSITY)).
fof(f502,plain,(
  p(s(bool,'F_0')) | ($spl12 | $spl20)),
  inference(forward_demodulation,[],[f493,f433])).
fof(f493,plain,(
  p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK0),s('type.integer.int',sK2))),s('type.integer.int',sK1)))) | $spl12),
  inference(resolution,[],[f470,f39])).
fof(f39,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int',X1)))) | p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X1),s('type.integer.int',X0))))) )),
  inference(cnf_transformation,[],[f28])).
fof(f470,plain,(
  ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK1),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK0),s('type.integer.int',sK2)))))) | $spl12),
  inference(backward_demodulation,[],[f42,f363])).
fof(f363,plain,(
  ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK1),s('type.integer.int',sK2))),s('type.integer.int',sK0)))) | $spl12),
  inference(subsumption_resolution,[],[f353,f31])).
fof(f353,plain,(
  ~p(s(bool,'T_0')) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK1),s('type.integer.int',sK2))),s('type.integer.int',sK0)))) | $spl12),
  inference(superposition,[],[f40,f332])).
fof(f42,plain,(
  ( ! [X2,X0,X1] : (s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X2),s('type.integer.int',X1))))) = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X0),s('type.integer.int',X1))),s('type.integer.int',X2)))) )),
  inference(cnf_transformation,[],[f22])).
fof(f22,plain,(
  ! [X0,X1,X2] : s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X2),s('type.integer.int',X1))))) = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X0),s('type.integer.int',X1))),s('type.integer.int',X2)))),
  inference(rectify,[],[f11])).
fof(f11,axiom,(
  ! [X6,X7,X8] : s(bool,'const.integer.int_lt_2'(s('type.integer.int',X6),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X8),s('type.integer.int',X7))))) = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X6),s('type.integer.int',X7))),s('type.integer.int',X8)))),
  file('thm.integer.INT_LE_SUB_LADD','thm.integer.INT_LT_SUB_RADD')).
fof(f209,plain,(
  ( ! [X15] : (s(bool,'T_0') = s(bool,X15)) ) | $spl4),
  inference(cnf_transformation,[],[f209_D])).
fof(f209_D,plain,(
  ( ! [X15] : (s(bool,'T_0') = s(bool,X15)) ) <=> ~$spl4),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl4])])).
fof(f433,plain,(
  s(bool,'F_0') = s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK0),s('type.integer.int',sK2))),s('type.integer.int',sK1))) | $spl20),
  inference(cnf_transformation,[],[f433_D])).
fof(f433_D,plain,(
  s(bool,'F_0') = s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK0),s('type.integer.int',sK2))),s('type.integer.int',sK1))) <=> ~$spl20),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl20])])).
fof(f429,plain,(
  ( ! [X9] : (s(bool,'F_0') = s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK0),s('type.integer.int',sK2))),s('type.integer.int',sK1))) | s(bool,'T_0') = s(bool,X9)) ) | $spl10),
  inference(duplicate_literal_removal,[],[f386])).
fof(f386,plain,(
  ( ! [X9] : (s(bool,'F_0') = s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK0),s('type.integer.int',sK2))),s('type.integer.int',sK1))) | s(bool,'T_0') = s(bool,X9) | s(bool,'T_0') = s(bool,X9)) ) | $spl10),
  inference(superposition,[],[f331,f34])).
fof(f338,plain,(
  s(bool,'F_0') != s(bool,'const.integer.int_le_2'(s('type.integer.int',sK0),s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK1),s('type.integer.int',sK2))))) | $spl19),
  inference(cnf_transformation,[],[f338_D])).
fof(f338_D,plain,(
  s(bool,'F_0') != s(bool,'const.integer.int_le_2'(s('type.integer.int',sK0),s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK1),s('type.integer.int',sK2))))) <=> ~$spl19),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl19])])).
fof(f509,plain,(
  s(bool,'F_0') != s(bool,'const.integer.int_le_2'(s('type.integer.int',sK0),s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK1),s('type.integer.int',sK2))))) | $spl20),
  inference(forward_demodulation,[],[f30,f433])).
fof(f30,plain,(
  s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK0),s('type.integer.int',sK2))),s('type.integer.int',sK1))) != s(bool,'const.integer.int_le_2'(s('type.integer.int',sK0),s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK1),s('type.integer.int',sK2)))))),
  inference(cnf_transformation,[],[f25])).
fof(f25,plain,(
  s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK0),s('type.integer.int',sK2))),s('type.integer.int',sK1))) != s(bool,'const.integer.int_le_2'(s('type.integer.int',sK0),s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK1),s('type.integer.int',sK2)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2])],[f23])).
fof(f23,plain,(
  ? [X0,X1,X2] : s(bool,'const.integer.int_le_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X1),s('type.integer.int',X2))))) != s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int',X2))),s('type.integer.int',X1)))),
  inference(ennf_transformation,[],[f12])).
fof(f12,plain,(
  ~! [X0,X1,X2] : s(bool,'const.integer.int_le_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X1),s('type.integer.int',X2))))) = s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int',X2))),s('type.integer.int',X1)))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7,X8] : s(bool,'const.integer.int_le_2'(s('type.integer.int',X6),s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X7),s('type.integer.int',X8))))) = s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X6),s('type.integer.int',X8))),s('type.integer.int',X7)))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7,X8] : s(bool,'const.integer.int_le_2'(s('type.integer.int',X6),s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X7),s('type.integer.int',X8))))) = s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X6),s('type.integer.int',X8))),s('type.integer.int',X7)))),
  file('thm.integer.INT_LE_SUB_LADD','thm.integer.INT_LE_SUB_LADD')).
fof(f333,plain,(
  s(bool,'T_0') != s(bool,'const.integer.int_le_2'(s('type.integer.int',sK0),s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK1),s('type.integer.int',sK2))))) | $spl13),
  inference(cnf_transformation,[],[f333_D])).
fof(f333_D,plain,(
  s(bool,'T_0') != s(bool,'const.integer.int_le_2'(s('type.integer.int',sK0),s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK1),s('type.integer.int',sK2))))) <=> ~$spl13),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl13])])).
fof(f326,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,'const.integer.int_le_2'(s('type.integer.int',sK0),s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK1),s('type.integer.int',sK2))))) | s(bool,X0) = s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK0),s('type.integer.int',sK2))),s('type.integer.int',sK1))) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f30,f44])).
fof(f332,plain,(
  s(bool,'T_0') = s(bool,'const.integer.int_le_2'(s('type.integer.int',sK0),s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK1),s('type.integer.int',sK2))))) | $spl12),
  inference(cnf_transformation,[],[f332_D])).
fof(f332_D,plain,(
  s(bool,'T_0') = s(bool,'const.integer.int_le_2'(s('type.integer.int',sK0),s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK1),s('type.integer.int',sK2))))) <=> ~$spl12),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl12])])).
fof(f345,plain,(
  ( ! [X2] : (s(bool,'T_0') = s(bool,'const.integer.int_le_2'(s('type.integer.int',sK0),s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK1),s('type.integer.int',sK2))))) | s(bool,'T_0') = s(bool,X2)) ) | $spl19),
  inference(subsumption_resolution,[],[f341,f34])).
fof(f341,plain,(
  ( ! [X2] : (s(bool,'F_0') != s(bool,X2) | s(bool,'T_0') = s(bool,'const.integer.int_le_2'(s('type.integer.int',sK0),s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK1),s('type.integer.int',sK2))))) | s(bool,'T_0') = s(bool,X2)) ) | $spl19),
  inference(superposition,[],[f338,f44])).
fof(f61,plain,(
  $false | $spl0),
  inference(resolution,[],[f58,f31])).
fof(f58,plain,(
  ( ! [X2] : (~p(s(bool,X2))) ) | $spl0),
  inference(superposition,[],[f33,f50])).
fof(f50,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0)) ) | $spl0),
  inference(cnf_transformation,[],[f50_D])).
fof(f50_D,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0)) ) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f52,plain,(
  s(bool,'T_0') != s(bool,'F_0') | $spl3),
  inference(cnf_transformation,[],[f52_D])).
fof(f52_D,plain,(
  s(bool,'T_0') != s(bool,'F_0') <=> ~$spl3),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl3])])).
fof(f49,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,'F_0') = s(bool,X0)) )),
  inference(equality_factoring,[],[f34])).
fof(f245,plain,(
  $false | ($spl3 | $spl4)),
  inference(trivial_inequality_removal,[],[f242])).
fof(f242,plain,(
  s(bool,'T_0') != s(bool,'T_0') | ($spl3 | $spl4)),
  inference(superposition,[],[f52,f209])).
fof(f210,plain,(
  ( ! [X14,X13] : (p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X14),s('type.integer.int',X13)))) | s(bool,'T_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int',X13),s('type.integer.int',X14)))) ) | $spl6),
  inference(cnf_transformation,[],[f210_D])).
fof(f210_D,plain,(
  ( ! [X14,X13] : (p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X14),s('type.integer.int',X13)))) | s(bool,'T_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int',X13),s('type.integer.int',X14)))) ) <=> ~$spl6),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl6])])).
fof(f208,plain,(
  ( ! [X14,X15,X13] : (p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X14),s('type.integer.int',X13)))) | s(bool,'T_0') = s(bool,X15) | s(bool,'T_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int',X13),s('type.integer.int',X14)))) )),
  inference(subsumption_resolution,[],[f119,f46])).
fof(f46,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f33,f34])).
fof(f119,plain,(
  ( ! [X14,X15,X13] : (p(s(bool,X15)) | p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X14),s('type.integer.int',X13)))) | s(bool,'T_0') = s(bool,X15) | s(bool,'T_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int',X13),s('type.integer.int',X14)))) )),
  inference(superposition,[],[f39,f44])).
fof(f439,plain,(
  s(bool,'T_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK1),s('type.integer.int',sK2))),s('type.integer.int',sK0))) | $spl28),
  inference(cnf_transformation,[],[f439_D])).
fof(f439_D,plain,(
  s(bool,'T_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK1),s('type.integer.int',sK2))),s('type.integer.int',sK0))) <=> ~$spl28),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl28])])).
fof(f548,plain,(
  s(bool,'T_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK1),s('type.integer.int',sK2))),s('type.integer.int',sK0))) | ($spl6 | $spl18)),
  inference(subsumption_resolution,[],[f538,f33])).
fof(f538,plain,(
  p(s(bool,'F_0')) | s(bool,'T_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK1),s('type.integer.int',sK2))),s('type.integer.int',sK0))) | ($spl6 | $spl18)),
  inference(superposition,[],[f210,f337])).
fof(f337,plain,(
  s(bool,'F_0') = s(bool,'const.integer.int_le_2'(s('type.integer.int',sK0),s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK1),s('type.integer.int',sK2))))) | $spl18),
  inference(cnf_transformation,[],[f337_D])).
fof(f337_D,plain,(
  s(bool,'F_0') = s(bool,'const.integer.int_le_2'(s('type.integer.int',sK0),s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK1),s('type.integer.int',sK2))))) <=> ~$spl18),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl18])])).
fof(f631,plain,(
  $false | ($spl28 | $spl31)),
  inference(subsumption_resolution,[],[f615,f441])).
fof(f441,plain,(
  s(bool,'T_0') != s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK1),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK0),s('type.integer.int',sK2))))) | $spl31),
  inference(cnf_transformation,[],[f441_D])).
fof(f441_D,plain,(
  s(bool,'T_0') != s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK1),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK0),s('type.integer.int',sK2))))) <=> ~$spl31),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl31])])).
fof(f615,plain,(
  s(bool,'T_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK1),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK0),s('type.integer.int',sK2))))) | $spl28),
  inference(superposition,[],[f439,f42])).
% SZS output end Proof for thm.integer
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 37
% Passive clauses: 103
% Generated clauses: 594
% Final active clauses: 19
% Final passive clauses: 42
% Input formulas: 10
% Initial clauses: 13
% 
% Duplicate literals: 76
% Trivial inequalities: 12
% Fw subsumption resolutions: 52
% Fw demodulations: 12
% Bw demodulations: 9
% 
% Simple tautologies: 26
% Equational tautologies: 16
% Forward subsumptions: 251
% 
% Binary resolution: 23
% Forward superposition: 171
% Backward superposition: 138
% Self superposition: 28
% Equality factoring: 28
% 
% Split clauses: 24
% Split components: 48
% SAT solver clauses: 57
% SAT solver unit clauses: 8
% SAT solver binary clauses: 28
% SAT solver learnt clauses: 2
% SAT solver learnt literals: 1
% 
% Sat splits: 24
% Sat splitting refutations: 9
% 
% TWLsolver clauses: 54
% TWLsolver calls for satisfiability: 23
% 
% Memory used [KB]: 767
% Time elapsed: 0.022 s
% ------------------------------
% ------------------------------
% Success in time 0.024 s
