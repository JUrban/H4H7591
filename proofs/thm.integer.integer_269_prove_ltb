Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 300 next slice time: 5
dis+11_7_3 on thm.integer
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.integer
% SZS output start Proof for thm.integer
fof(f542,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f539,f229,f236,f252,f237,f247,f235,f521,f337,f334,f338,f231,f239,f238,f429,f249,f382,f55,f58,f56,f67,f292,f234])).
fof(f234,plain,(
  ( ! [X0] : (s(bool,X0) = s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK0),s('type.integer.int',sK1))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X0)) ) | $spl4),
  inference(cnf_transformation,[],[f234_D])).
fof(f234_D,plain,(
  ( ! [X0] : (s(bool,X0) = s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK0),s('type.integer.int',sK1))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X0)) ) <=> ~$spl4),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl4])])).
fof(f292,plain,(
  ( ! [X0] : (s(bool,X0) = s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK0),s('type.integer.int',sK1))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X0)) ) | $spl9),
  inference(trivial_inequality_removal,[],[f286])).
fof(f286,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,'T_0') | s(bool,X0) = s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK0),s('type.integer.int',sK1))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X0)) ) | $spl9),
  inference(superposition,[],[f237,f50])).
fof(f50,plain,(
  ( ! [X0,X1] : (s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X1) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f39,f39])).
fof(f39,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f3])).
fof(f3,axiom,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) | s(bool,'F_0') = s(bool,X0))),
  file('thm.integer.integer_269_prove_ltb',aHL_BOOL_CASES)).
fof(f67,plain,(
  $false | $spl0),
  inference(resolution,[],[f64,f35])).
fof(f35,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f1])).
fof(f1,axiom,(
  p(s(bool,'T_0'))),
  file('thm.integer.integer_269_prove_ltb',aHL_TRUTH)).
fof(f64,plain,(
  ( ! [X2] : (~p(s(bool,X2))) ) | $spl0),
  inference(superposition,[],[f37,f56])).
fof(f37,plain,(
  ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f15])).
fof(f15,plain,(
  ~p(s(bool,'F_0'))),
  inference(flattening,[],[f2])).
fof(f2,axiom,(
  ~p(s(bool,'F_0'))),
  file('thm.integer.integer_269_prove_ltb',aHL_FALSITY)).
fof(f56,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0)) ) | $spl0),
  inference(cnf_transformation,[],[f56_D])).
fof(f56_D,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0)) ) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f58,plain,(
  s(bool,'T_0') != s(bool,'F_0') | $spl3),
  inference(cnf_transformation,[],[f58_D])).
fof(f58_D,plain,(
  s(bool,'T_0') != s(bool,'F_0') <=> ~$spl3),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl3])])).
fof(f55,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,'F_0') = s(bool,X0)) )),
  inference(equality_factoring,[],[f39])).
fof(f382,plain,(
  $false | ($spl3 | $spl14)),
  inference(trivial_inequality_removal,[],[f374])).
fof(f374,plain,(
  s(bool,'T_0') != s(bool,'T_0') | ($spl3 | $spl14)),
  inference(superposition,[],[f58,f249])).
fof(f249,plain,(
  ( ! [X2] : (s(bool,'T_0') = s(bool,X2)) ) | $spl14),
  inference(cnf_transformation,[],[f249_D])).
fof(f249_D,plain,(
  ( ! [X2] : (s(bool,'T_0') = s(bool,X2)) ) <=> ~$spl14),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl14])])).
fof(f429,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,X0)) ) | ($spl4 | $spl10)),
  inference(subsumption_resolution,[],[f428,f239])).
fof(f428,plain,(
  ( ! [X0] : (s(bool,X0) = s(bool,'const.integer.int_le_2'(s('type.integer.int',sK0),s('type.integer.int',sK1))) | s(bool,'T_0') = s(bool,X0)) ) | $spl4),
  inference(forward_demodulation,[],[f410,f38])).
fof(f38,plain,(
  ( ! [X0] : (s('type.integer.int',X0) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X0)))) )),
  inference(cnf_transformation,[],[f16])).
fof(f16,plain,(
  ! [X0] : s('type.integer.int',X0) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X0)))),
  inference(rectify,[],[f12])).
fof(f12,axiom,(
  ! [X6] : s('type.integer.int',X6) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X6)))),
  file('thm.integer.integer_269_prove_ltb','thm.integer.INT_ADD_LID')).
fof(f410,plain,(
  ( ! [X0] : (s(bool,X0) = s(bool,'const.integer.int_le_2'(s('type.integer.int',sK0),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK1))))) | s(bool,'T_0') = s(bool,X0)) ) | $spl4),
  inference(superposition,[],[f48,f234])).
fof(f48,plain,(
  ( ! [X2,X0,X1] : (s(bool,'const.integer.int_le_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X2),s('type.integer.int',X1))))) = s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X0),s('type.integer.int',X1))),s('type.integer.int',X2)))) )),
  inference(cnf_transformation,[],[f25])).
fof(f25,plain,(
  ! [X0,X1,X2] : s(bool,'const.integer.int_le_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X2),s('type.integer.int',X1))))) = s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X0),s('type.integer.int',X1))),s('type.integer.int',X2)))),
  inference(rectify,[],[f13])).
fof(f13,axiom,(
  ! [X6,X7,X10] : s(bool,'const.integer.int_le_2'(s('type.integer.int',X6),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X10),s('type.integer.int',X7))))) = s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X6),s('type.integer.int',X7))),s('type.integer.int',X10)))),
  file('thm.integer.integer_269_prove_ltb','thm.integer.INT_LE_SUB_RADD')).
fof(f238,plain,(
  s(bool,'T_0') = s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK0),s('type.integer.int',sK1))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | $spl8),
  inference(cnf_transformation,[],[f238_D])).
fof(f238_D,plain,(
  s(bool,'T_0') = s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK0),s('type.integer.int',sK1))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) <=> ~$spl8),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl8])])).
fof(f239,plain,(
  ( ! [X2] : (s(bool,X2) != s(bool,'const.integer.int_le_2'(s('type.integer.int',sK0),s('type.integer.int',sK1))) | s(bool,'T_0') = s(bool,X2)) ) | $spl10),
  inference(cnf_transformation,[],[f239_D])).
fof(f239_D,plain,(
  ( ! [X2] : (s(bool,X2) != s(bool,'const.integer.int_le_2'(s('type.integer.int',sK0),s('type.integer.int',sK1))) | s(bool,'T_0') = s(bool,X2)) ) <=> ~$spl10),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl10])])).
fof(f231,plain,(
  ( ! [X2] : (s(bool,X2) != s(bool,'const.integer.int_le_2'(s('type.integer.int',sK0),s('type.integer.int',sK1))) | s(bool,'T_0') = s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK0),s('type.integer.int',sK1))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X2)) )),
  inference(superposition,[],[f228,f50])).
fof(f228,plain,(
  s(bool,'const.integer.int_le_2'(s('type.integer.int',sK0),s('type.integer.int',sK1))) != s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK0),s('type.integer.int',sK1))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))),
  inference(forward_demodulation,[],[f34,f46])).
fof(f46,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X0),s('type.integer.int',X1))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X1)))))) )),
  inference(cnf_transformation,[],[f22])).
fof(f22,plain,(
  ! [X0,X1] : s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X0),s('type.integer.int',X1))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X1)))))),
  inference(rectify,[],[f11])).
fof(f11,axiom,(
  ! [X6,X7] : s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X6),s('type.integer.int',X7))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X6),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X7)))))),
  file('thm.integer.integer_269_prove_ltb','thm.integer.int_sub')).
fof(f34,plain,(
  s(bool,'const.integer.int_le_2'(s('type.integer.int',sK0),s('type.integer.int',sK1))) != s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK0),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK1))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))),
  inference(cnf_transformation,[],[f28])).
fof(f28,plain,(
  s(bool,'const.integer.int_le_2'(s('type.integer.int',sK0),s('type.integer.int',sK1))) != s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK0),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK1))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1])],[f26])).
fof(f26,plain,(
  ? [X0,X1] : s(bool,'const.integer.int_le_2'(s('type.integer.int',X0),s('type.integer.int',X1))) != s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X1))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))),
  inference(ennf_transformation,[],[f14])).
fof(f14,plain,(
  ~! [X0,X1] : s(bool,'const.integer.int_le_2'(s('type.integer.int',X0),s('type.integer.int',X1))) = s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X1))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7] : s(bool,'const.integer.int_le_2'(s('type.integer.int',X6),s('type.integer.int',X7))) = s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X6),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X7))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7] : s(bool,'const.integer.int_le_2'(s('type.integer.int',X6),s('type.integer.int',X7))) = s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X6),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X7))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))),
  file('thm.integer.integer_269_prove_ltb','thm.integer.integer_269_prove_ltb')).
fof(f338,plain,(
  s(bool,'F_0') = s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK0),s('type.integer.int',sK1))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | $spl16),
  inference(cnf_transformation,[],[f338_D])).
fof(f338_D,plain,(
  s(bool,'F_0') = s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK0),s('type.integer.int',sK1))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) <=> ~$spl16),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl16])])).
fof(f334,plain,(
  ( ! [X9] : (s(bool,'F_0') = s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK0),s('type.integer.int',sK1))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X9)) ) | $spl4),
  inference(duplicate_literal_removal,[],[f297])).
fof(f297,plain,(
  ( ! [X9] : (s(bool,'F_0') = s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK0),s('type.integer.int',sK1))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X9) | s(bool,'T_0') = s(bool,X9)) ) | $spl4),
  inference(superposition,[],[f234,f39])).
fof(f337,plain,(
  s(bool,'F_0') != s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK0),s('type.integer.int',sK1))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | $spl17),
  inference(cnf_transformation,[],[f337_D])).
fof(f337_D,plain,(
  s(bool,'F_0') != s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK0),s('type.integer.int',sK1))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) <=> ~$spl17),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl17])])).
fof(f521,plain,(
  s(bool,'F_0') != s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK0),s('type.integer.int',sK1))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | $spl12),
  inference(forward_demodulation,[],[f228,f240])).
fof(f240,plain,(
  s(bool,'F_0') = s(bool,'const.integer.int_le_2'(s('type.integer.int',sK0),s('type.integer.int',sK1))) | $spl12),
  inference(cnf_transformation,[],[f240_D])).
fof(f240_D,plain,(
  s(bool,'F_0') = s(bool,'const.integer.int_le_2'(s('type.integer.int',sK0),s('type.integer.int',sK1))) <=> ~$spl12),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl12])])).
fof(f235,plain,(
  s(bool,'T_0') = s(bool,'const.integer.int_le_2'(s('type.integer.int',sK0),s('type.integer.int',sK1))) | $spl6),
  inference(cnf_transformation,[],[f235_D])).
fof(f235_D,plain,(
  s(bool,'T_0') = s(bool,'const.integer.int_le_2'(s('type.integer.int',sK0),s('type.integer.int',sK1))) <=> ~$spl6),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl6])])).
fof(f247,plain,(
  s(bool,'T_0') = s(bool,'const.integer.int_le_2'(s('type.integer.int',sK0),s('type.integer.int',sK1))) | $spl13),
  inference(trivial_inequality_removal,[],[f246])).
fof(f246,plain,(
  s(bool,'F_0') != s(bool,'F_0') | s(bool,'T_0') = s(bool,'const.integer.int_le_2'(s('type.integer.int',sK0),s('type.integer.int',sK1))) | $spl13),
  inference(superposition,[],[f241,f39])).
fof(f241,plain,(
  s(bool,'F_0') != s(bool,'const.integer.int_le_2'(s('type.integer.int',sK0),s('type.integer.int',sK1))) | $spl13),
  inference(cnf_transformation,[],[f241_D])).
fof(f241_D,plain,(
  s(bool,'F_0') != s(bool,'const.integer.int_le_2'(s('type.integer.int',sK0),s('type.integer.int',sK1))) <=> ~$spl13),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl13])])).
fof(f237,plain,(
  s(bool,'T_0') != s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK0),s('type.integer.int',sK1))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | $spl9),
  inference(cnf_transformation,[],[f237_D])).
fof(f237_D,plain,(
  s(bool,'T_0') != s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK0),s('type.integer.int',sK1))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) <=> ~$spl9),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl9])])).
fof(f252,plain,(
  s(bool,'T_0') != s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK0),s('type.integer.int',sK1))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | $spl6),
  inference(backward_demodulation,[],[f235,f228])).
fof(f236,plain,(
  s(bool,'T_0') != s(bool,'const.integer.int_le_2'(s('type.integer.int',sK0),s('type.integer.int',sK1))) | $spl7),
  inference(cnf_transformation,[],[f236_D])).
fof(f236_D,plain,(
  s(bool,'T_0') != s(bool,'const.integer.int_le_2'(s('type.integer.int',sK0),s('type.integer.int',sK1))) <=> ~$spl7),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl7])])).
fof(f229,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,'const.integer.int_le_2'(s('type.integer.int',sK0),s('type.integer.int',sK1))) | s(bool,X0) = s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK0),s('type.integer.int',sK1))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f228,f50])).
fof(f539,plain,(
  $false | ($spl7 | $spl8)),
  inference(subsumption_resolution,[],[f538,f236])).
fof(f538,plain,(
  s(bool,'T_0') = s(bool,'const.integer.int_le_2'(s('type.integer.int',sK0),s('type.integer.int',sK1))) | $spl8),
  inference(forward_demodulation,[],[f522,f38])).
fof(f522,plain,(
  s(bool,'T_0') = s(bool,'const.integer.int_le_2'(s('type.integer.int',sK0),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK1))))) | $spl8),
  inference(superposition,[],[f238,f48])).
% SZS output end Proof for thm.integer
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 25
% Passive clauses: 70
% Generated clauses: 495
% Final active clauses: 15
% Final passive clauses: 20
% Input formulas: 12
% Initial clauses: 15
% 
% Duplicate literals: 84
% Trivial inequalities: 11
% Fw subsumption resolutions: 16
% Fw demodulations: 20
% Bw demodulations: 3
% 
% Simple tautologies: 32
% Equational tautologies: 17
% Forward subsumptions: 230
% 
% Binary resolution: 5
% Forward superposition: 133
% Backward superposition: 122
% Self superposition: 34
% Equality factoring: 30
% Equality resolution: 1
% 
% Split clauses: 14
% Split components: 28
% SAT solver clauses: 30
% SAT solver unit clauses: 3
% SAT solver binary clauses: 16
% SAT solver learnt clauses: 2
% SAT solver learnt literals: 1
% 
% Sat splits: 14
% Sat splitting refutations: 7
% 
% TWLsolver clauses: 27
% TWLsolver calls for satisfiability: 12
% 
% Memory used [KB]: 767
% Time elapsed: 0.040 s
% ------------------------------
% ------------------------------
% Success in time 0.052 s
