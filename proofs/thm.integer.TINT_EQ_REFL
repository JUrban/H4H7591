Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 300 next slice time: 5
dis+11_7_3 on thm.integer
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.integer
% SZS output start Proof for thm.integer
fof(f1478,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f1467,f250,f255,f253,f296,f44,f47,f45,f57])).
fof(f57,plain,(
  $false | $spl0),
  inference(resolution,[],[f54,f27])).
fof(f27,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f1])).
fof(f1,axiom,(
  p(s(bool,'T_0'))),
  file('thm.integer.TINT_EQ_REFL',aHL_TRUTH)).
fof(f54,plain,(
  ( ! [X2] : (~p(s(bool,X2))) ) | $spl0),
  inference(superposition,[],[f29,f45])).
fof(f29,plain,(
  ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f12])).
fof(f12,plain,(
  ~p(s(bool,'F_0'))),
  inference(flattening,[],[f2])).
fof(f2,axiom,(
  ~p(s(bool,'F_0'))),
  file('thm.integer.TINT_EQ_REFL',aHL_FALSITY)).
fof(f45,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0)) ) | $spl0),
  inference(cnf_transformation,[],[f45_D])).
fof(f45_D,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0)) ) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f47,plain,(
  s(bool,'T_0') != s(bool,'F_0') | $spl3),
  inference(cnf_transformation,[],[f47_D])).
fof(f47_D,plain,(
  s(bool,'T_0') != s(bool,'F_0') <=> ~$spl3),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl3])])).
fof(f44,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,'F_0') = s(bool,X0)) )),
  inference(equality_factoring,[],[f30])).
fof(f30,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f3])).
fof(f3,axiom,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) | s(bool,'F_0') = s(bool,X0))),
  file('thm.integer.TINT_EQ_REFL',aHL_BOOL_CASES)).
fof(f296,plain,(
  $false | ($spl3 | $spl4)),
  inference(trivial_inequality_removal,[],[f291])).
fof(f291,plain,(
  s(bool,'T_0') != s(bool,'T_0') | ($spl3 | $spl4)),
  inference(superposition,[],[f47,f253])).
fof(f253,plain,(
  ( ! [X9] : (s(bool,'T_0') = s(bool,X9)) ) | $spl4),
  inference(cnf_transformation,[],[f253_D])).
fof(f253_D,plain,(
  ( ! [X9] : (s(bool,'T_0') = s(bool,X9)) ) <=> ~$spl4),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl4])])).
fof(f255,plain,(
  s(bool,'F_0') = s(bool,'const.integer.tint_eq_2'(s('type.pair.prod'('type.num.num','type.num.num'),sK0),s('type.pair.prod'('type.num.num','type.num.num'),sK0))) | $spl6),
  inference(cnf_transformation,[],[f255_D])).
fof(f255_D,plain,(
  s(bool,'F_0') = s(bool,'const.integer.tint_eq_2'(s('type.pair.prod'('type.num.num','type.num.num'),sK0),s('type.pair.prod'('type.num.num','type.num.num'),sK0))) <=> ~$spl6),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl6])])).
fof(f250,plain,(
  ( ! [X9] : (s(bool,'F_0') = s(bool,'const.integer.tint_eq_2'(s('type.pair.prod'('type.num.num','type.num.num'),sK0),s('type.pair.prod'('type.num.num','type.num.num'),sK0))) | s(bool,'T_0') = s(bool,X9)) )),
  inference(duplicate_literal_removal,[],[f216])).
fof(f216,plain,(
  ( ! [X9] : (s(bool,'F_0') = s(bool,'const.integer.tint_eq_2'(s('type.pair.prod'('type.num.num','type.num.num'),sK0),s('type.pair.prod'('type.num.num','type.num.num'),sK0))) | s(bool,'T_0') = s(bool,X9) | s(bool,'T_0') = s(bool,X9)) )),
  inference(superposition,[],[f197,f30])).
fof(f197,plain,(
  ( ! [X9] : (s(bool,X9) = s(bool,'const.integer.tint_eq_2'(s('type.pair.prod'('type.num.num','type.num.num'),sK0),s('type.pair.prod'('type.num.num','type.num.num'),sK0))) | s(bool,'T_0') = s(bool,X9)) )),
  inference(subsumption_resolution,[],[f127,f27])).
fof(f127,plain,(
  ( ! [X9] : (~p(s(bool,'T_0')) | s(bool,X9) = s(bool,'const.integer.tint_eq_2'(s('type.pair.prod'('type.num.num','type.num.num'),sK0),s('type.pair.prod'('type.num.num','type.num.num'),sK0))) | s(bool,'T_0') = s(bool,X9)) )),
  inference(superposition,[],[f26,f38])).
fof(f38,plain,(
  ( ! [X0,X1] : (s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X1) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f30,f30])).
fof(f26,plain,(
  ~p(s(bool,'const.integer.tint_eq_2'(s('type.pair.prod'('type.num.num','type.num.num'),sK0),s('type.pair.prod'('type.num.num','type.num.num'),sK0))))),
  inference(cnf_transformation,[],[f22])).
fof(f22,plain,(
  ~p(s(bool,'const.integer.tint_eq_2'(s('type.pair.prod'('type.num.num','type.num.num'),sK0),s('type.pair.prod'('type.num.num','type.num.num'),sK0))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0])],[f20])).
fof(f20,plain,(
  ? [X0] : ~p(s(bool,'const.integer.tint_eq_2'(s('type.pair.prod'('type.num.num','type.num.num'),X0),s('type.pair.prod'('type.num.num','type.num.num'),X0))))),
  inference(ennf_transformation,[],[f11])).
fof(f11,plain,(
  ~! [X0] : p(s(bool,'const.integer.tint_eq_2'(s('type.pair.prod'('type.num.num','type.num.num'),X0),s('type.pair.prod'('type.num.num','type.num.num'),X0))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : p(s(bool,'const.integer.tint_eq_2'(s('type.pair.prod'('type.num.num','type.num.num'),X6),s('type.pair.prod'('type.num.num','type.num.num'),X6))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : p(s(bool,'const.integer.tint_eq_2'(s('type.pair.prod'('type.num.num','type.num.num'),X6),s('type.pair.prod'('type.num.num','type.num.num'),X6))))),
  file('thm.integer.TINT_EQ_REFL','thm.integer.TINT_EQ_REFL')).
fof(f1467,plain,(
  $false | $spl6),
  inference(subsumption_resolution,[],[f1451,f29])).
fof(f1451,plain,(
  p(s(bool,'F_0')) | $spl6),
  inference(superposition,[],[f1420,f255])).
fof(f1420,plain,(
  ( ! [X0] : (p(s(bool,'const.integer.tint_eq_2'(s('type.pair.prod'('type.num.num','type.num.num'),X0),s('type.pair.prod'('type.num.num','type.num.num'),X0))))) )),
  inference(superposition,[],[f1416,f33])).
fof(f33,plain,(
  ( ! [X2,X0,X1] : (s('type.pair.prod'(X0,X1),X2) = s('type.pair.prod'(X0,X1),'const.pair.,_2'(s(X0,'const.pair.FST_1'(s('type.pair.prod'(X0,X1),X2))),s(X1,'const.pair.SND_1'(s('type.pair.prod'(X0,X1),X2)))))) )),
  inference(cnf_transformation,[],[f16])).
fof(f16,plain,(
  ! [X0,X1,X2] : s('type.pair.prod'(X0,X1),X2) = s('type.pair.prod'(X0,X1),'const.pair.,_2'(s(X0,'const.pair.FST_1'(s('type.pair.prod'(X0,X1),X2))),s(X1,'const.pair.SND_1'(s('type.pair.prod'(X0,X1),X2)))))),
  inference(flattening,[],[f15])).
fof(f15,plain,(
  ! [X0,X1] : ! [X2] : s('type.pair.prod'(X0,X1),X2) = s('type.pair.prod'(X0,X1),'const.pair.,_2'(s(X0,'const.pair.FST_1'(s('type.pair.prod'(X0,X1),X2))),s(X1,'const.pair.SND_1'(s('type.pair.prod'(X0,X1),X2)))))),
  inference(rectify,[],[f10])).
fof(f10,axiom,(
  ! [X7,X12] : ! [X6] : s('type.pair.prod'(X7,X12),X6) = s('type.pair.prod'(X7,X12),'const.pair.,_2'(s(X7,'const.pair.FST_1'(s('type.pair.prod'(X7,X12),X6))),s(X12,'const.pair.SND_1'(s('type.pair.prod'(X7,X12),X6)))))),
  file('thm.integer.TINT_EQ_REFL','thm.pair.PAIR')).
fof(f1416,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.integer.tint_eq_2'(s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',X0),s('type.num.num',X1))))))) )),
  inference(equality_resolution,[],[f36])).
fof(f36,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X3))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X1))) | p(s(bool,'const.integer.tint_eq_2'(s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',X2),s('type.num.num',X3))))))) )),
  inference(cnf_transformation,[],[f25])).
fof(f25,plain,(
  ! [X0,X1,X2,X3] : ((~p(s(bool,'const.integer.tint_eq_2'(s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',X2),s('type.num.num',X3)))))) | s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X3))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X1)))) & (s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X3))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X1))) | p(s(bool,'const.integer.tint_eq_2'(s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',X2),s('type.num.num',X3))))))))),
  inference(nnf_transformation,[],[f19])).
fof(f19,plain,(
  ! [X0,X1,X2,X3] : (p(s(bool,'const.integer.tint_eq_2'(s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',X2),s('type.num.num',X3)))))) <=> s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X3))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X1))))),
  inference(rectify,[],[f9])).
fof(f9,axiom,(
  ! [X8,X9,X10,X11] : (p(s(bool,'const.integer.tint_eq_2'(s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',X8),s('type.num.num',X9))),s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',X10),s('type.num.num',X11)))))) <=> s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X8),s('type.num.num',X11))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X10),s('type.num.num',X9))))),
  file('thm.integer.TINT_EQ_REFL','thm.integer.tint_eq')).
% SZS output end Proof for thm.integer
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 29
% Passive clauses: 213
% Generated clauses: 1373
% Final active clauses: 21
% Final passive clauses: 148
% Input formulas: 9
% Initial clauses: 11
% 
% Duplicate literals: 211
% Trivial inequalities: 24
% Fw subsumption resolutions: 78
% Fw demodulations: 11
% Bw demodulations: 4
% 
% Simple tautologies: 48
% Equational tautologies: 40
% Forward subsumptions: 610
% 
% Binary resolution: 16
% Forward superposition: 346
% Backward superposition: 407
% Self superposition: 127
% Equality factoring: 116
% Equality resolution: 1
% 
% Split clauses: 94
% Split components: 188
% SAT solver clauses: 146
% SAT solver unit clauses: 18
% SAT solver binary clauses: 88
% SAT solver learnt clauses: 1
% 
% Sat splits: 94
% Sat splitting refutations: 5
% 
% TWLsolver clauses: 138
% TWLsolver calls for satisfiability: 8
% 
% Memory used [KB]: 1151
% Time elapsed: 0.044 s
% ------------------------------
% ------------------------------
% Success in time 0.046 s
