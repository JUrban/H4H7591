Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 300 next slice time: 5
dis+11_7_3 on thm.arithmetic
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.arithmetic
% SZS output start Proof for thm.arithmetic
fof(f7160,plain,(
  $false),
  inference(subsumption_resolution,[],[f6945,f447])).
fof(f447,plain,(
  s('type.num.num',sK3) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',sK0))),s('type.num.num',sK2))),s('type.num.num',sK1)))),
  inference(forward_demodulation,[],[f59,f296])).
fof(f296,plain,(
  ( ! [X2] : (s('type.num.num','const.num.SUC_1'(s('type.num.num',X2))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) )),
  inference(forward_demodulation,[],[f283,f66])).
fof(f66,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) )),
  inference(cnf_transformation,[],[f26])).
fof(f26,plain,(
  ! [X0] : s('type.num.num',X0) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),
  inference(rectify,[],[f11])).
fof(f11,axiom,(
  ! [X10] : s('type.num.num',X10) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X10),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),
  file('thm.arithmetic.arithmetic_22|49|_prove_ltb','thm.arithmetic.MULT_RIGHT_|49|')).
fof(f283,plain,(
  ( ! [X2] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X2))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) )),
  inference(superposition,[],[f83,f66])).
fof(f83,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num',X1))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num',X1)))) )),
  inference(cnf_transformation,[],[f33])).
fof(f33,plain,(
  ! [X0,X1] : s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num',X1))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num',X1)))),
  inference(rectify,[],[f12])).
fof(f12,axiom,(
  ! [X10,X8] : s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X10))),s('type.num.num',X8))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X10),s('type.num.num',X8))),s('type.num.num',X8)))),
  file('thm.arithmetic.arithmetic_22|49|_prove_ltb','thm.arithmetic.MULT|split|1')).
fof(f59,plain,(
  s('type.num.num',sK3) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK0),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',sK2))),s('type.num.num',sK1)))),
  inference(cnf_transformation,[],[f46])).
fof(f46,plain,(
  s('type.num.num',sK3) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK0),s('type.num.num',sK2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK2),s('type.num.num',sK1))))) & s('type.num.num',sK3) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK0),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',sK2))),s('type.num.num',sK1)))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2,sK3])],[f39])).
fof(f39,plain,(
  ? [X0,X1,X2,X3] : (s('type.num.num',X3) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X1))))) & s('type.num.num',X3) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X2))),s('type.num.num',X1))))),
  inference(ennf_transformation,[],[f21])).
fof(f21,plain,(
  ~! [X0,X1,X2,X3] : (s('type.num.num',X3) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X1))))) => s('type.num.num',X3) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X2))),s('type.num.num',X1))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7,X8,X9] : (s('type.num.num',X9) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X6),s('type.num.num',X8))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X8),s('type.num.num',X7))))) => s('type.num.num',X9) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X8))),s('type.num.num',X7))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7,X8,X9] : (s('type.num.num',X9) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X6),s('type.num.num',X8))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X8),s('type.num.num',X7))))) => s('type.num.num',X9) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X8))),s('type.num.num',X7))))),
  file('thm.arithmetic.arithmetic_22|49|_prove_ltb','thm.arithmetic.arithmetic_22|49|_prove_ltb')).
fof(f6945,plain,(
  s('type.num.num',sK3) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',sK0))),s('type.num.num',sK2))),s('type.num.num',sK1)))),
  inference(superposition,[],[f589,f58])).
fof(f58,plain,(
  s('type.num.num',sK3) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK0),s('type.num.num',sK2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK2),s('type.num.num',sK1)))))),
  inference(cnf_transformation,[],[f46])).
fof(f589,plain,(
  ( ! [X12,X10,X11] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X10))),s('type.num.num',X11))),s('type.num.num',X12))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X10),s('type.num.num',X11))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X11),s('type.num.num',X12)))))) )),
  inference(superposition,[],[f86,f83])).
fof(f86,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X2))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num',X2)))) )),
  inference(cnf_transformation,[],[f37])).
fof(f37,plain,(
  ! [X0,X1,X2] : s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X2))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num',X2)))),
  inference(rectify,[],[f7])).
fof(f7,axiom,(
  ! [X10,X8,X7] : s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X10),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X8),s('type.num.num',X7))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X10),s('type.num.num',X8))),s('type.num.num',X7)))),
  file('thm.arithmetic.arithmetic_22|49|_prove_ltb','thm.arithmetic.ADD_ASSOC')).
% SZS output end Proof for thm.arithmetic
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 86
% Passive clauses: 588
% Generated clauses: 7074
% Final active clauses: 80
% Final passive clauses: 462
% Input formulas: 19
% Initial clauses: 30
% 
% Duplicate literals: 79
% Trivial inequalities: 6
% Fw subsumption resolutions: 17
% Fw demodulations: 1072
% Bw demodulations: 3
% 
% Simple tautologies: 32
% Equational tautologies: 15
% Forward subsumptions: 5093
% Fw demodulations to eq. taut.: 106
% 
% Binary resolution: 5
% Forward superposition: 3085
% Backward superposition: 2622
% Self superposition: 110
% Equality factoring: 28
% 
% Split clauses: 21
% Split components: 44
% SAT solver clauses: 30
% SAT solver unit clauses: 3
% SAT solver binary clauses: 16
% 
% Sat splits: 21
% Sat splitting refutations: 2
% 
% TWLsolver clauses: 30
% TWLsolver calls for satisfiability: 11
% 
% Memory used [KB]: 8571
% Time elapsed: 0.180 s
% ------------------------------
% ------------------------------
% Success in time 0.183 s
