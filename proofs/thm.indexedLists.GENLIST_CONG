Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.indexedLists
% (80900)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 651
% Passive clauses: 10765
% Generated clauses: 20393
% Final active clauses: 648
% Final passive clauses: 9755
% Input formulas: 69
% Initial clauses: 237
% 
% Duplicate literals: 326
% Trivial inequalities: 12
% Fw subsumption resolutions: 1483
% Fw demodulations: 476
% Bw demodulations: 2
% 
% Simple tautologies: 228
% Equational tautologies: 66
% Forward subsumptions: 6756
% 
% Binary resolution: 12924
% Factoring: 1541
% Forward superposition: 1655
% Backward superposition: 1511
% Self superposition: 34
% Equality factoring: 26
% Equality resolution: 11
% 
% Split clauses: 329
% Split components: 660
% SAT solver clauses: 616
% SAT solver unit clauses: 18
% SAT solver binary clauses: 173
% 
% Sat splits: 329
% 
% TWLsolver clauses: 616
% TWLsolver calls for satisfiability: 368
% 
% Memory used [KB]: 9850
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 144 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.indexedLists
% (80909)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 445
% Passive clauses: 2932
% Generated clauses: 12642
% Final active clauses: 439
% Final passive clauses: 2461
% Input formulas: 69
% Initial clauses: 237
% 
% Duplicate literals: 191
% Trivial inequalities: 11
% Fw subsumption resolutions: 798
% Fw demodulations: 747
% Bw demodulations: 29
% Condensations: 274
% Global subsumptions: 20
% 
% Simple tautologies: 253
% Equational tautologies: 28
% Forward subsumptions: 4091
% Bw demodulations to eq. taut.: 1
% 
% Binary resolution: 4437
% Factoring: 361
% Forward superposition: 1635
% Backward superposition: 889
% Self superposition: 38
% Equality factoring: 26
% Equality resolution: 11
% 
% Split clauses: 26
% Split components: 52
% SAT solver clauses: 3538
% SAT solver unit clauses: 244
% SAT solver binary clauses: 100
% SAT solver learnt clauses: 40
% SAT solver learnt literals: 12
% 
% Sat splits: 26
% Sat splitting refutations: 3
% 
% TWLsolver clauses: 3458
% TWLsolver calls for satisfiability: 2008
% 
% Memory used [KB]: 13944
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 136 next slice time: 103
lrs+11_2_br=off:cond=on:fde=none:gs=on:gsaa=full_model:lwlo=on:nwc=2:sas=minisat:stl=30:ssfp=100000:ssfq=1.4:smm=sco:ssnc=none:sp=occurrence:urr=on_98 on thm.indexedLists
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.indexedLists
% SZS output start Proof for thm.indexedLists
fof(f6229,plain,(
  $false),
  inference(subsumption_resolution,[],[f6213,f5943])).
fof(f5943,plain,(
  s(sK12,happ(s(fun('type.num.num',sK12),sK14),s('type.num.num',sK24(sK14,sK15,sK13,sK12)))) = s(sK12,happ(s(fun('type.num.num',sK12),sK15),s('type.num.num',sK24(sK14,sK15,sK13,sK12))))),
  inference(unit_resulting_resolution,[],[f5610,f348])).
fof(f348,plain,(
  ( ! [X4] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X4),s('type.num.num',sK13)))) | s(sK12,happ(s(fun('type.num.num',sK12),sK14),s('type.num.num',X4))) = s(sK12,happ(s(fun('type.num.num',sK12),sK15),s('type.num.num',X4)))) )),
  inference(cnf_transformation,[],[f238])).
fof(f238,plain,(
  ! [X4] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X4),s('type.num.num',sK13)))) | s(sK12,happ(s(fun('type.num.num',sK12),sK14),s('type.num.num',X4))) = s(sK12,happ(s(fun('type.num.num',sK12),sK15),s('type.num.num',X4)))) & s('type.list.list'(sK12),'const.list.GENLIST_2'(s(fun('type.num.num',sK12),sK14),s('type.num.num',sK13))) != s('type.list.list'(sK12),'const.list.GENLIST_2'(s(fun('type.num.num',sK12),sK15),s('type.num.num',sK13)))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK12,sK13,sK14,sK15])],[f172])).
fof(f172,plain,(
  ? [X0,X1,X2,X3] : (! [X4] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X4),s('type.num.num',X1)))) | s(X0,happ(s(fun('type.num.num',X0),X2),s('type.num.num',X4))) = s(X0,happ(s(fun('type.num.num',X0),X3),s('type.num.num',X4)))) & s('type.list.list'(X0),'const.list.GENLIST_2'(s(fun('type.num.num',X0),X2),s('type.num.num',X1))) != s('type.list.list'(X0),'const.list.GENLIST_2'(s(fun('type.num.num',X0),X3),s('type.num.num',X1))))),
  inference(ennf_transformation,[],[f72])).
fof(f72,plain,(
  ~! [X0,X1,X2,X3] : (! [X4] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X4),s('type.num.num',X1)))) => s(X0,happ(s(fun('type.num.num',X0),X2),s('type.num.num',X4))) = s(X0,happ(s(fun('type.num.num',X0),X3),s('type.num.num',X4)))) => s('type.list.list'(X0),'const.list.GENLIST_2'(s(fun('type.num.num',X0),X2),s('type.num.num',X1))) = s('type.list.list'(X0),'const.list.GENLIST_2'(s(fun('type.num.num',X0),X3),s('type.num.num',X1))))),
  inference(flattening,[],[f71])).
fof(f71,plain,(
  ~! [X0] : ! [X1,X2,X3] : (! [X4] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X4),s('type.num.num',X1)))) => s(X0,happ(s(fun('type.num.num',X0),X2),s('type.num.num',X4))) = s(X0,happ(s(fun('type.num.num',X0),X3),s('type.num.num',X4)))) => s('type.list.list'(X0),'const.list.GENLIST_2'(s(fun('type.num.num',X0),X2),s('type.num.num',X1))) = s('type.list.list'(X0),'const.list.GENLIST_2'(s(fun('type.num.num',X0),X3),s('type.num.num',X1))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : ! [X7,X8,X9] : (! [X10] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X10),s('type.num.num',X7)))) => s(X6,happ(s(fun('type.num.num',X6),X8),s('type.num.num',X10))) = s(X6,happ(s(fun('type.num.num',X6),X9),s('type.num.num',X10)))) => s('type.list.list'(X6),'const.list.GENLIST_2'(s(fun('type.num.num',X6),X8),s('type.num.num',X7))) = s('type.list.list'(X6),'const.list.GENLIST_2'(s(fun('type.num.num',X6),X9),s('type.num.num',X7))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : ! [X7,X8,X9] : (! [X10] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X10),s('type.num.num',X7)))) => s(X6,happ(s(fun('type.num.num',X6),X8),s('type.num.num',X10))) = s(X6,happ(s(fun('type.num.num',X6),X9),s('type.num.num',X10)))) => s('type.list.list'(X6),'const.list.GENLIST_2'(s(fun('type.num.num',X6),X8),s('type.num.num',X7))) = s('type.list.list'(X6),'const.list.GENLIST_2'(s(fun('type.num.num',X6),X9),s('type.num.num',X7))))),
  file('thm.indexedLists.GENLIST_CONG','thm.indexedLists.GENLIST_CONG')).
fof(f5610,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK24(sK14,sK15,sK13,sK12)),s('type.num.num',sK13))))),
  inference(unit_resulting_resolution,[],[f349,f443])).
fof(f443,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK24(X3,X2,X1,X0)),s('type.num.num',X1)))) | s('type.list.list'(X0),'const.list.GENLIST_2'(s(fun('type.num.num',X0),X2),s('type.num.num',X1))) = s('type.list.list'(X0),'const.list.GENLIST_2'(s(fun('type.num.num',X0),X3),s('type.num.num',X1)))) )),
  inference(cnf_transformation,[],[f291])).
fof(f291,plain,(
  ! [X0,X1,X2,X3] : ((s('type.list.list'(X0),'const.list.GENLIST_2'(s(fun('type.num.num',X0),X2),s('type.num.num',X1))) != s('type.list.list'(X0),'const.list.GENLIST_2'(s(fun('type.num.num',X0),X3),s('type.num.num',X1))) | ! [X5] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X5),s('type.num.num',X1)))) | s(X0,happ(s(fun('type.num.num',X0),X2),s('type.num.num',X5))) = s(X0,happ(s(fun('type.num.num',X0),X3),s('type.num.num',X5))))) & ((p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK24(X3,X2,X1,X0)),s('type.num.num',X1)))) & s(X0,happ(s(fun('type.num.num',X0),X2),s('type.num.num',sK24(X3,X2,X1,X0)))) != s(X0,happ(s(fun('type.num.num',X0),X3),s('type.num.num',sK24(X3,X2,X1,X0))))) | s('type.list.list'(X0),'const.list.GENLIST_2'(s(fun('type.num.num',X0),X2),s('type.num.num',X1))) = s('type.list.list'(X0),'const.list.GENLIST_2'(s(fun('type.num.num',X0),X3),s('type.num.num',X1)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK24])],[f290])).
fof(f290,plain,(
  ! [X0,X1,X2,X3] : ((s('type.list.list'(X0),'const.list.GENLIST_2'(s(fun('type.num.num',X0),X2),s('type.num.num',X1))) != s('type.list.list'(X0),'const.list.GENLIST_2'(s(fun('type.num.num',X0),X3),s('type.num.num',X1))) | ! [X5] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X5),s('type.num.num',X1)))) | s(X0,happ(s(fun('type.num.num',X0),X2),s('type.num.num',X5))) = s(X0,happ(s(fun('type.num.num',X0),X3),s('type.num.num',X5))))) & (? [X4] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X4),s('type.num.num',X1)))) & s(X0,happ(s(fun('type.num.num',X0),X2),s('type.num.num',X4))) != s(X0,happ(s(fun('type.num.num',X0),X3),s('type.num.num',X4)))) | s('type.list.list'(X0),'const.list.GENLIST_2'(s(fun('type.num.num',X0),X2),s('type.num.num',X1))) = s('type.list.list'(X0),'const.list.GENLIST_2'(s(fun('type.num.num',X0),X3),s('type.num.num',X1)))))),
  inference(rectify,[],[f289])).
fof(f289,plain,(
  ! [X0,X1,X2,X3] : ((s('type.list.list'(X0),'const.list.GENLIST_2'(s(fun('type.num.num',X0),X2),s('type.num.num',X1))) != s('type.list.list'(X0),'const.list.GENLIST_2'(s(fun('type.num.num',X0),X3),s('type.num.num',X1))) | ! [X4] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X4),s('type.num.num',X1)))) | s(X0,happ(s(fun('type.num.num',X0),X2),s('type.num.num',X4))) = s(X0,happ(s(fun('type.num.num',X0),X3),s('type.num.num',X4))))) & (? [X4] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X4),s('type.num.num',X1)))) & s(X0,happ(s(fun('type.num.num',X0),X2),s('type.num.num',X4))) != s(X0,happ(s(fun('type.num.num',X0),X3),s('type.num.num',X4)))) | s('type.list.list'(X0),'const.list.GENLIST_2'(s(fun('type.num.num',X0),X2),s('type.num.num',X1))) = s('type.list.list'(X0),'const.list.GENLIST_2'(s(fun('type.num.num',X0),X3),s('type.num.num',X1)))))),
  inference(nnf_transformation,[],[f193])).
fof(f193,plain,(
  ! [X0,X1,X2,X3] : (s('type.list.list'(X0),'const.list.GENLIST_2'(s(fun('type.num.num',X0),X2),s('type.num.num',X1))) = s('type.list.list'(X0),'const.list.GENLIST_2'(s(fun('type.num.num',X0),X3),s('type.num.num',X1))) <=> ! [X4] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X4),s('type.num.num',X1)))) | s(X0,happ(s(fun('type.num.num',X0),X2),s('type.num.num',X4))) = s(X0,happ(s(fun('type.num.num',X0),X3),s('type.num.num',X4)))))),
  inference(ennf_transformation,[],[f134])).
fof(f134,plain,(
  ! [X0,X1,X2,X3] : (s('type.list.list'(X0),'const.list.GENLIST_2'(s(fun('type.num.num',X0),X2),s('type.num.num',X1))) = s('type.list.list'(X0),'const.list.GENLIST_2'(s(fun('type.num.num',X0),X3),s('type.num.num',X1))) <=> ! [X4] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X4),s('type.num.num',X1)))) => s(X0,happ(s(fun('type.num.num',X0),X2),s('type.num.num',X4))) = s(X0,happ(s(fun('type.num.num',X0),X3),s('type.num.num',X4)))))),
  inference(flattening,[],[f133])).
fof(f133,plain,(
  ! [X0] : ! [X1,X2,X3] : (s('type.list.list'(X0),'const.list.GENLIST_2'(s(fun('type.num.num',X0),X2),s('type.num.num',X1))) = s('type.list.list'(X0),'const.list.GENLIST_2'(s(fun('type.num.num',X0),X3),s('type.num.num',X1))) <=> ! [X4] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X4),s('type.num.num',X1)))) => s(X0,happ(s(fun('type.num.num',X0),X2),s('type.num.num',X4))) = s(X0,happ(s(fun('type.num.num',X0),X3),s('type.num.num',X4)))))),
  inference(rectify,[],[f7])).
fof(f7,axiom,(
  ! [X6] : ! [X7,X11,X12] : (s('type.list.list'(X6),'const.list.GENLIST_2'(s(fun('type.num.num',X6),X11),s('type.num.num',X7))) = s('type.list.list'(X6),'const.list.GENLIST_2'(s(fun('type.num.num',X6),X12),s('type.num.num',X7))) <=> ! [X13] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X13),s('type.num.num',X7)))) => s(X6,happ(s(fun('type.num.num',X6),X11),s('type.num.num',X13))) = s(X6,happ(s(fun('type.num.num',X6),X12),s('type.num.num',X13)))))),
  file('thm.indexedLists.GENLIST_CONG','thm.list.GENLIST_FUN_EQ')).
fof(f349,plain,(
  s('type.list.list'(sK12),'const.list.GENLIST_2'(s(fun('type.num.num',sK12),sK14),s('type.num.num',sK13))) != s('type.list.list'(sK12),'const.list.GENLIST_2'(s(fun('type.num.num',sK12),sK15),s('type.num.num',sK13)))),
  inference(cnf_transformation,[],[f238])).
fof(f6213,plain,(
  s(sK12,happ(s(fun('type.num.num',sK12),sK14),s('type.num.num',sK24(sK14,sK15,sK13,sK12)))) != s(sK12,happ(s(fun('type.num.num',sK12),sK15),s('type.num.num',sK24(sK14,sK15,sK13,sK12))))),
  inference(unit_resulting_resolution,[],[f349,f444])).
fof(f444,plain,(
  ( ! [X2,X0,X3,X1] : (s(X0,happ(s(fun('type.num.num',X0),X2),s('type.num.num',sK24(X3,X2,X1,X0)))) != s(X0,happ(s(fun('type.num.num',X0),X3),s('type.num.num',sK24(X3,X2,X1,X0)))) | s('type.list.list'(X0),'const.list.GENLIST_2'(s(fun('type.num.num',X0),X2),s('type.num.num',X1))) = s('type.list.list'(X0),'const.list.GENLIST_2'(s(fun('type.num.num',X0),X3),s('type.num.num',X1)))) )),
  inference(cnf_transformation,[],[f291])).
% SZS output end Proof for thm.indexedLists
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 290
% Passive clauses: 663
% Generated clauses: 5902
% Final active clauses: 273
% Final passive clauses: 298
% Input formulas: 69
% Initial clauses: 237
% 
% Duplicate literals: 78
% Trivial inequalities: 15
% Fw subsumption resolutions: 415
% Fw demodulations: 470
% Bw demodulations: 45
% Condensations: 145
% Global subsumptions: 6
% 
% Simple tautologies: 96
% Equational tautologies: 66
% Forward subsumptions: 3491
% 
% Unit resulting resolution: 2713
% Factoring: 1
% Forward superposition: 796
% Backward superposition: 850
% Self superposition: 37
% Equality factoring: 30
% Equality resolution: 6
% 
% Split clauses: 36
% Split components: 72
% SAT solver clauses: 1148
% SAT solver unit clauses: 757
% SAT solver binary clauses: 203
% 
% Sat splits: 36
% Sat splitting refutations: 405
% 
% Memory used [KB]: 3454
% Time elapsed: 0.115 s
% ------------------------------
% ------------------------------
% Success in time 1.421 s
