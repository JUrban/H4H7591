Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 300 next slice time: 5
dis+11_7_3 on thm.transc
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.transc
% SZS output start Proof for thm.transc
fof(f203,plain,(
  $false),
  inference(trivial_inequality_removal,[],[f199])).
fof(f199,plain,(
  s('type.realax.real','const.transc.exp_1'(s('type.realax.real','const.realax.real_neg_1'(s('type.realax.real',sK0))))) != s('type.realax.real','const.transc.exp_1'(s('type.realax.real','const.realax.real_neg_1'(s('type.realax.real',sK0)))))),
  inference(superposition,[],[f20,f195])).
fof(f195,plain,(
  ( ! [X0] : (s('type.realax.real','const.transc.exp_1'(s('type.realax.real','const.realax.real_neg_1'(s('type.realax.real',X0))))) = s('type.realax.real','const.realax.inv_1'(s('type.realax.real','const.transc.exp_1'(s('type.realax.real',X0)))))) )),
  inference(trivial_inequality_removal,[],[f194])).
fof(f194,plain,(
  ( ! [X0] : (s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) != s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.realax.real','const.transc.exp_1'(s('type.realax.real','const.realax.real_neg_1'(s('type.realax.real',X0))))) = s('type.realax.real','const.realax.inv_1'(s('type.realax.real','const.transc.exp_1'(s('type.realax.real',X0)))))) )),
  inference(superposition,[],[f25,f23])).
fof(f23,plain,(
  ( ! [X0] : (s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real','const.transc.exp_1'(s('type.realax.real',X0))),s('type.realax.real','const.transc.exp_1'(s('type.realax.real','const.realax.real_neg_1'(s('type.realax.real',X0)))))))) )),
  inference(cnf_transformation,[],[f11])).
fof(f11,plain,(
  ! [X0] : s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real','const.transc.exp_1'(s('type.realax.real',X0))),s('type.realax.real','const.transc.exp_1'(s('type.realax.real','const.realax.real_neg_1'(s('type.realax.real',X0)))))))),
  inference(rectify,[],[f8])).
fof(f8,axiom,(
  ! [X6] : s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real','const.transc.exp_1'(s('type.realax.real',X6))),s('type.realax.real','const.transc.exp_1'(s('type.realax.real','const.realax.real_neg_1'(s('type.realax.real',X6)))))))),
  file('thm.transc.EXP_NEG','thm.transc.EXP_NEG_MUL')).
fof(f25,plain,(
  ( ! [X0,X1] : (s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real',X0),s('type.realax.real',X1))) != s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.realax.real',X1) = s('type.realax.real','const.realax.inv_1'(s('type.realax.real',X0)))) )),
  inference(cnf_transformation,[],[f16])).
fof(f16,plain,(
  ! [X0,X1] : (s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real',X0),s('type.realax.real',X1))) != s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.realax.real',X1) = s('type.realax.real','const.realax.inv_1'(s('type.realax.real',X0))))),
  inference(ennf_transformation,[],[f12])).
fof(f12,plain,(
  ! [X0,X1] : (s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real',X0),s('type.realax.real',X1))) = s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) => s('type.realax.real',X1) = s('type.realax.real','const.realax.inv_1'(s('type.realax.real',X0))))),
  inference(rectify,[],[f7])).
fof(f7,axiom,(
  ! [X6,X7] : (s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real',X6),s('type.realax.real',X7))) = s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) => s('type.realax.real',X7) = s('type.realax.real','const.realax.inv_1'(s('type.realax.real',X6))))),
  file('thm.transc.EXP_NEG','thm.real.REAL_RINV_UNIQ')).
fof(f20,plain,(
  s('type.realax.real','const.transc.exp_1'(s('type.realax.real','const.realax.real_neg_1'(s('type.realax.real',sK0))))) != s('type.realax.real','const.realax.inv_1'(s('type.realax.real','const.transc.exp_1'(s('type.realax.real',sK0)))))),
  inference(cnf_transformation,[],[f18])).
fof(f18,plain,(
  s('type.realax.real','const.transc.exp_1'(s('type.realax.real','const.realax.real_neg_1'(s('type.realax.real',sK0))))) != s('type.realax.real','const.realax.inv_1'(s('type.realax.real','const.transc.exp_1'(s('type.realax.real',sK0)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0])],[f15])).
fof(f15,plain,(
  ? [X0] : s('type.realax.real','const.transc.exp_1'(s('type.realax.real','const.realax.real_neg_1'(s('type.realax.real',X0))))) != s('type.realax.real','const.realax.inv_1'(s('type.realax.real','const.transc.exp_1'(s('type.realax.real',X0)))))),
  inference(ennf_transformation,[],[f9])).
fof(f9,plain,(
  ~! [X0] : s('type.realax.real','const.transc.exp_1'(s('type.realax.real','const.realax.real_neg_1'(s('type.realax.real',X0))))) = s('type.realax.real','const.realax.inv_1'(s('type.realax.real','const.transc.exp_1'(s('type.realax.real',X0)))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : s('type.realax.real','const.transc.exp_1'(s('type.realax.real','const.realax.real_neg_1'(s('type.realax.real',X6))))) = s('type.realax.real','const.realax.inv_1'(s('type.realax.real','const.transc.exp_1'(s('type.realax.real',X6)))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : s('type.realax.real','const.transc.exp_1'(s('type.realax.real','const.realax.real_neg_1'(s('type.realax.real',X6))))) = s('type.realax.real','const.realax.inv_1'(s('type.realax.real','const.transc.exp_1'(s('type.realax.real',X6)))))),
  file('thm.transc.EXP_NEG','thm.transc.EXP_NEG')).
% SZS output end Proof for thm.transc
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 13
% Passive clauses: 23
% Generated clauses: 169
% Final active clauses: 11
% Final passive clauses: 6
% Input formulas: 7
% Initial clauses: 7
% 
% Duplicate literals: 37
% Trivial inequalities: 4
% Fw demodulations: 1
% 
% Simple tautologies: 16
% Equational tautologies: 14
% Forward subsumptions: 69
% 
% Binary resolution: 4
% Forward superposition: 30
% Backward superposition: 34
% Self superposition: 26
% Equality factoring: 26
% 
% Split clauses: 1
% Split components: 2
% SAT solver clauses: 2
% SAT solver unit clauses: 1
% SAT solver binary clauses: 1
% 
% Sat splits: 1
% Sat splitting refutations: 1
% 
% TWLsolver clauses: 2
% TWLsolver calls for satisfiability: 2
% 
% Memory used [KB]: 639
% Time elapsed: 0.014 s
% ------------------------------
% ------------------------------
% Success in time 0.016 s
