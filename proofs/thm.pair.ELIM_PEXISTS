Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 300 next slice time: 5
dis+11_7_3 on thm.pair
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.pair
% SZS output start Proof for thm.pair
fof(f1123,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f1122,f216,f44,f65,f64,f43,f69,f67,f1121])).
fof(f1121,plain,(
  $false | ($spl2 | $spl6)),
  inference(subsumption_resolution,[],[f69,f65])).
fof(f67,plain,(
  p(s(bool,happ(s(fun(sK1,bool),happ(s(fun(sK0,fun(sK1,bool)),sK2),s(sK0,'const.pair.FST_1'(s('type.pair.prod'(sK0,sK1),sK3))))),s(sK1,'const.pair.SND_1'(s('type.pair.prod'(sK0,sK1),sK3)))))) | $spl4),
  inference(cnf_transformation,[],[f67_D])).
fof(f67_D,plain,(
  p(s(bool,happ(s(fun(sK1,bool),happ(s(fun(sK0,fun(sK1,bool)),sK2),s(sK0,'const.pair.FST_1'(s('type.pair.prod'(sK0,sK1),sK3))))),s(sK1,'const.pair.SND_1'(s('type.pair.prod'(sK0,sK1),sK3)))))) <=> ~$spl4),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl4])])).
fof(f69,plain,(
  p(s(bool,happ(s(fun(sK1,bool),happ(s(fun(sK0,fun(sK1,bool)),sK2),s(sK0,sK4))),s(sK1,sK5)))) | $spl6),
  inference(cnf_transformation,[],[f69_D])).
fof(f69_D,plain,(
  p(s(bool,happ(s(fun(sK1,bool),happ(s(fun(sK0,fun(sK1,bool)),sK2),s(sK0,sK4))),s(sK1,sK5)))) <=> ~$spl6),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl6])])).
fof(f43,plain,(
  p(s(bool,happ(s(fun(sK1,bool),happ(s(fun(sK0,fun(sK1,bool)),sK2),s(sK0,sK4))),s(sK1,sK5)))) | p(s(bool,happ(s(fun(sK1,bool),happ(s(fun(sK0,fun(sK1,bool)),sK2),s(sK0,'const.pair.FST_1'(s('type.pair.prod'(sK0,sK1),sK3))))),s(sK1,'const.pair.SND_1'(s('type.pair.prod'(sK0,sK1),sK3))))))),
  inference(cnf_transformation,[],[f37])).
fof(f37,plain,(
  (p(s(bool,happ(s(fun(sK1,bool),happ(s(fun(sK0,fun(sK1,bool)),sK2),s(sK0,'const.pair.FST_1'(s('type.pair.prod'(sK0,sK1),sK3))))),s(sK1,'const.pair.SND_1'(s('type.pair.prod'(sK0,sK1),sK3)))))) | p(s(bool,happ(s(fun(sK1,bool),happ(s(fun(sK0,fun(sK1,bool)),sK2),s(sK0,sK4))),s(sK1,sK5))))) & (! [X5] : ~p(s(bool,happ(s(fun(sK1,bool),happ(s(fun(sK0,fun(sK1,bool)),sK2),s(sK0,'const.pair.FST_1'(s('type.pair.prod'(sK0,sK1),X5))))),s(sK1,'const.pair.SND_1'(s('type.pair.prod'(sK0,sK1),X5)))))) | ! [X3,X4] : ~p(s(bool,happ(s(fun(sK1,bool),happ(s(fun(sK0,fun(sK1,bool)),sK2),s(sK0,X3))),s(sK1,X4)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2,sK3,sK4,sK5])],[f36])).
fof(f36,plain,(
  ? [X0,X1,X2] : ((? [X8] : p(s(bool,happ(s(fun(X1,bool),happ(s(fun(X0,fun(X1,bool)),X2),s(X0,'const.pair.FST_1'(s('type.pair.prod'(X0,X1),X8))))),s(X1,'const.pair.SND_1'(s('type.pair.prod'(X0,X1),X8)))))) | ? [X6,X7] : p(s(bool,happ(s(fun(X1,bool),happ(s(fun(X0,fun(X1,bool)),X2),s(X0,X6))),s(X1,X7))))) & (! [X5] : ~p(s(bool,happ(s(fun(X1,bool),happ(s(fun(X0,fun(X1,bool)),X2),s(X0,'const.pair.FST_1'(s('type.pair.prod'(X0,X1),X5))))),s(X1,'const.pair.SND_1'(s('type.pair.prod'(X0,X1),X5)))))) | ! [X3,X4] : ~p(s(bool,happ(s(fun(X1,bool),happ(s(fun(X0,fun(X1,bool)),X2),s(X0,X3))),s(X1,X4))))))),
  inference(rectify,[],[f35])).
fof(f35,plain,(
  ? [X0,X1,X2] : ((? [X3] : p(s(bool,happ(s(fun(X1,bool),happ(s(fun(X0,fun(X1,bool)),X2),s(X0,'const.pair.FST_1'(s('type.pair.prod'(X0,X1),X3))))),s(X1,'const.pair.SND_1'(s('type.pair.prod'(X0,X1),X3)))))) | ? [X4,X5] : p(s(bool,happ(s(fun(X1,bool),happ(s(fun(X0,fun(X1,bool)),X2),s(X0,X4))),s(X1,X5))))) & (! [X3] : ~p(s(bool,happ(s(fun(X1,bool),happ(s(fun(X0,fun(X1,bool)),X2),s(X0,'const.pair.FST_1'(s('type.pair.prod'(X0,X1),X3))))),s(X1,'const.pair.SND_1'(s('type.pair.prod'(X0,X1),X3)))))) | ! [X4,X5] : ~p(s(bool,happ(s(fun(X1,bool),happ(s(fun(X0,fun(X1,bool)),X2),s(X0,X4))),s(X1,X5))))))),
  inference(nnf_transformation,[],[f31])).
fof(f31,plain,(
  ? [X0,X1,X2] : (? [X3] : p(s(bool,happ(s(fun(X1,bool),happ(s(fun(X0,fun(X1,bool)),X2),s(X0,'const.pair.FST_1'(s('type.pair.prod'(X0,X1),X3))))),s(X1,'const.pair.SND_1'(s('type.pair.prod'(X0,X1),X3)))))) <~> ? [X4,X5] : p(s(bool,happ(s(fun(X1,bool),happ(s(fun(X0,fun(X1,bool)),X2),s(X0,X4))),s(X1,X5)))))),
  inference(ennf_transformation,[],[f16])).
fof(f16,plain,(
  ~! [X0,X1,X2] : (? [X3] : p(s(bool,happ(s(fun(X1,bool),happ(s(fun(X0,fun(X1,bool)),X2),s(X0,'const.pair.FST_1'(s('type.pair.prod'(X0,X1),X3))))),s(X1,'const.pair.SND_1'(s('type.pair.prod'(X0,X1),X3)))))) <=> ? [X4,X5] : p(s(bool,happ(s(fun(X1,bool),happ(s(fun(X0,fun(X1,bool)),X2),s(X0,X4))),s(X1,X5)))))),
  inference(flattening,[],[f15])).
fof(f15,plain,(
  ~! [X0,X1] : ! [X2] : (? [X3] : p(s(bool,happ(s(fun(X1,bool),happ(s(fun(X0,fun(X1,bool)),X2),s(X0,'const.pair.FST_1'(s('type.pair.prod'(X0,X1),X3))))),s(X1,'const.pair.SND_1'(s('type.pair.prod'(X0,X1),X3)))))) <=> ? [X4,X5] : p(s(bool,happ(s(fun(X1,bool),happ(s(fun(X0,fun(X1,bool)),X2),s(X0,X4))),s(X1,X5)))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7] : ! [X8] : (? [X9] : p(s(bool,happ(s(fun(X7,bool),happ(s(fun(X6,fun(X7,bool)),X8),s(X6,'const.pair.FST_1'(s('type.pair.prod'(X6,X7),X9))))),s(X7,'const.pair.SND_1'(s('type.pair.prod'(X6,X7),X9)))))) <=> ? [X10,X11] : p(s(bool,happ(s(fun(X7,bool),happ(s(fun(X6,fun(X7,bool)),X8),s(X6,X10))),s(X7,X11)))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7] : ! [X8] : (? [X9] : p(s(bool,happ(s(fun(X7,bool),happ(s(fun(X6,fun(X7,bool)),X8),s(X6,'const.pair.FST_1'(s('type.pair.prod'(X6,X7),X9))))),s(X7,'const.pair.SND_1'(s('type.pair.prod'(X6,X7),X9)))))) <=> ? [X10,X11] : p(s(bool,happ(s(fun(X7,bool),happ(s(fun(X6,fun(X7,bool)),X8),s(X6,X10))),s(X7,X11)))))),
  file('thm.pair.ELIM_PEXISTS','thm.pair.ELIM_PEXISTS')).
fof(f64,plain,(
  ( ! [X5] : (~p(s(bool,happ(s(fun(sK1,bool),happ(s(fun(sK0,fun(sK1,bool)),sK2),s(sK0,'const.pair.FST_1'(s('type.pair.prod'(sK0,sK1),X5))))),s(sK1,'const.pair.SND_1'(s('type.pair.prod'(sK0,sK1),X5))))))) ) | $spl0),
  inference(cnf_transformation,[],[f64_D])).
fof(f64_D,plain,(
  ( ! [X5] : (~p(s(bool,happ(s(fun(sK1,bool),happ(s(fun(sK0,fun(sK1,bool)),sK2),s(sK0,'const.pair.FST_1'(s('type.pair.prod'(sK0,sK1),X5))))),s(sK1,'const.pair.SND_1'(s('type.pair.prod'(sK0,sK1),X5))))))) ) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f65,plain,(
  ( ! [X4,X3] : (~p(s(bool,happ(s(fun(sK1,bool),happ(s(fun(sK0,fun(sK1,bool)),sK2),s(sK0,X3))),s(sK1,X4))))) ) | $spl2),
  inference(cnf_transformation,[],[f65_D])).
fof(f65_D,plain,(
  ( ! [X4,X3] : (~p(s(bool,happ(s(fun(sK1,bool),happ(s(fun(sK0,fun(sK1,bool)),sK2),s(sK0,X3))),s(sK1,X4))))) ) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f44,plain,(
  ( ! [X4,X5,X3] : (~p(s(bool,happ(s(fun(sK1,bool),happ(s(fun(sK0,fun(sK1,bool)),sK2),s(sK0,X3))),s(sK1,X4)))) | ~p(s(bool,happ(s(fun(sK1,bool),happ(s(fun(sK0,fun(sK1,bool)),sK2),s(sK0,'const.pair.FST_1'(s('type.pair.prod'(sK0,sK1),X5))))),s(sK1,'const.pair.SND_1'(s('type.pair.prod'(sK0,sK1),X5))))))) )),
  inference(cnf_transformation,[],[f37])).
fof(f216,plain,(
  ( ! [X0,X1] : (~p(s(bool,happ(s(fun(sK1,bool),happ(s(fun(sK0,fun(sK1,bool)),sK2),s(sK0,X0))),s(sK1,X1))))) ) | $spl0),
  inference(forward_demodulation,[],[f211,f62])).
fof(f62,plain,(
  ( ! [X2,X0,X3,X1] : (s(X1,X3) = s(X1,'const.pair.SND_1'(s('type.pair.prod'(X0,X1),'const.pair.,_2'(s(X0,X2),s(X1,X3)))))) )),
  inference(cnf_transformation,[],[f28])).
fof(f28,plain,(
  ! [X0,X1,X2,X3] : s(X1,X3) = s(X1,'const.pair.SND_1'(s('type.pair.prod'(X0,X1),'const.pair.,_2'(s(X0,X2),s(X1,X3)))))),
  inference(flattening,[],[f27])).
fof(f27,plain,(
  ! [X0,X1] : ! [X2,X3] : s(X1,X3) = s(X1,'const.pair.SND_1'(s('type.pair.prod'(X0,X1),'const.pair.,_2'(s(X0,X2),s(X1,X3)))))),
  inference(rectify,[],[f14])).
fof(f14,axiom,(
  ! [X6,X7] : ! [X15,X16] : s(X7,X16) = s(X7,'const.pair.SND_1'(s('type.pair.prod'(X6,X7),'const.pair.,_2'(s(X6,X15),s(X7,X16)))))),
  file('thm.pair.ELIM_PEXISTS','thm.pair.SND')).
fof(f211,plain,(
  ( ! [X0,X1] : (~p(s(bool,happ(s(fun(sK1,bool),happ(s(fun(sK0,fun(sK1,bool)),sK2),s(sK0,X0))),s(sK1,'const.pair.SND_1'(s('type.pair.prod'(sK0,sK1),'const.pair.,_2'(s(sK0,X0),s(sK1,X1))))))))) ) | $spl0),
  inference(superposition,[],[f64,f61])).
fof(f61,plain,(
  ( ! [X2,X0,X3,X1] : (s(X1,X2) = s(X1,'const.pair.FST_1'(s('type.pair.prod'(X1,X0),'const.pair.,_2'(s(X1,X2),s(X0,X3)))))) )),
  inference(cnf_transformation,[],[f26])).
fof(f26,plain,(
  ! [X0,X1,X2,X3] : s(X1,X2) = s(X1,'const.pair.FST_1'(s('type.pair.prod'(X1,X0),'const.pair.,_2'(s(X1,X2),s(X0,X3)))))),
  inference(flattening,[],[f25])).
fof(f25,plain,(
  ! [X0,X1] : ! [X2,X3] : s(X1,X2) = s(X1,'const.pair.FST_1'(s('type.pair.prod'(X1,X0),'const.pair.,_2'(s(X1,X2),s(X0,X3)))))),
  inference(rectify,[],[f13])).
fof(f13,axiom,(
  ! [X7,X6] : ! [X15,X16] : s(X6,X15) = s(X6,'const.pair.FST_1'(s('type.pair.prod'(X6,X7),'const.pair.,_2'(s(X6,X15),s(X7,X16)))))),
  file('thm.pair.ELIM_PEXISTS','thm.pair.FST')).
fof(f1122,plain,(
  $false | ($spl2 | $spl4)),
  inference(subsumption_resolution,[],[f67,f65])).
% SZS output end Proof for thm.pair
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 26
% Passive clauses: 201
% Generated clauses: 1031
% Final active clauses: 25
% Final passive clauses: 152
% Input formulas: 13
% Initial clauses: 21
% 
% Duplicate literals: 96
% Trivial inequalities: 25
% Fw subsumption resolutions: 118
% Fw demodulations: 29
% 
% Simple tautologies: 59
% Equational tautologies: 28
% Forward subsumptions: 465
% 
% Binary resolution: 45
% Factoring: 1
% Forward superposition: 229
% Backward superposition: 353
% Self superposition: 48
% Equality factoring: 50
% Equality resolution: 5
% 
% Split clauses: 14
% Split components: 28
% SAT solver clauses: 28
% SAT solver unit clauses: 7
% SAT solver binary clauses: 14
% SAT solver learnt clauses: 2
% SAT solver learnt literals: 1
% 
% Sat splits: 14
% Sat splitting refutations: 3
% 
% TWLsolver clauses: 26
% TWLsolver calls for satisfiability: 12
% 
% Memory used [KB]: 1023
% Time elapsed: 0.031 s
% ------------------------------
% ------------------------------
% Success in time 0.033 s
