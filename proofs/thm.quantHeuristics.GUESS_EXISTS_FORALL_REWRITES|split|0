Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 299 next slice time: 5
dis+11_7_3 on thm.quantHeuristics
% (72748)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 641
% Passive clauses: 9048
% Generated clauses: 18217
% Final active clauses: 576
% Final passive clauses: 7528
% Input formulas: 40
% Initial clauses: 177
% 
% Duplicate literals: 304
% Trivial inequalities: 81
% Fw subsumption resolutions: 1878
% Fw demodulations: 195
% Bw demodulations: 9
% 
% Simple tautologies: 203
% Equational tautologies: 56
% Forward subsumptions: 5945
% 
% Binary resolution: 9761
% Factoring: 982
% Forward superposition: 1594
% Backward superposition: 2969
% Self superposition: 34
% Equality factoring: 34
% Equality resolution: 17
% 
% Split clauses: 592
% Split components: 1196
% SAT solver clauses: 887
% SAT solver unit clauses: 17
% SAT solver binary clauses: 145
% SAT solver learnt clauses: 1
% SAT solver learnt literals: 1
% 
% Sat splits: 592
% Sat splitting refutations: 5
% 
% TWLsolver clauses: 882
% TWLsolver calls for satisfiability: 342
% 
% Memory used [KB]: 10490
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 293 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.quantHeuristics
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.quantHeuristics
% SZS output start Proof for thm.quantHeuristics
fof(f3195,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f2953,f238,f425,f583,f587,f257,f440,f236,f428,f423,f2803,f2867,f2806,f431,f433,f335,f480,f237,f427,f424,f2955,f2979,f3174,f2817,f2843,f563,f567,f2862,f239,f430,f253,f438,f337,f477,f416,f476])).
fof(f476,plain,(
  ( ! [X4,X2,X0,X3,X1] : (p(s(bool,'const.quantHeuristics.GUESS_EXISTS_2'(s(fun(X2,X0),X3),s(fun(X0,bool),X1)))) | ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,happ(s(fun(X2,X0),X3),s(X2,X4))))))) ) | $spl70),
  inference(cnf_transformation,[],[f476_D])).
fof(f476_D,plain,(
  ( ! [X4,X2,X0,X3,X1] : (p(s(bool,'const.quantHeuristics.GUESS_EXISTS_2'(s(fun(X2,X0),X3),s(fun(X0,bool),X1)))) | ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,happ(s(fun(X2,X0),X3),s(X2,X4))))))) ) <=> ~$spl70),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl70])])).
fof(f416,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,happ(s(fun(X2,X0),X3),s(X2,X4)))))) | p(s(bool,'const.quantHeuristics.GUESS_EXISTS_2'(s(fun(X2,X0),X3),s(fun(X0,bool),X1))))) )),
  inference(condensation,[],[f338])).
fof(f338,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (p(s(bool,'const.quantHeuristics.GUESS_EXISTS_2'(s(fun(X1,X0),X2),s(fun(X0,bool),X3)))) | ~p(s(bool,happ(s(fun(X0,bool),X3),s(X0,happ(s(fun(X1,X0),X2),s(X1,X4)))))) | ~p(s(bool,happ(s(fun(X0,bool),X3),s(X0,X5))))) )),
  inference(cnf_transformation,[],[f200])).
fof(f200,plain,(
  ! [X0,X1,X2,X3] : ((~p(s(bool,'const.quantHeuristics.GUESS_EXISTS_2'(s(fun(X1,X0),X2),s(fun(X0,bool),X3)))) | ((! [X11] : ~p(s(bool,happ(s(fun(X0,bool),X3),s(X0,X11)))) | p(s(bool,happ(s(fun(X0,bool),X3),s(X0,happ(s(fun(X1,X0),X2),s(X1,sK31(X3,X2,X1,X0)))))))) & (! [X9] : ~p(s(bool,happ(s(fun(X0,bool),X3),s(X0,happ(s(fun(X1,X0),X2),s(X1,X9)))))) | p(s(bool,happ(s(fun(X0,bool),X3),s(X0,sK32(X3,X2,X1,X0)))))))) & (((p(s(bool,happ(s(fun(X0,bool),X3),s(X0,sK33(X3,X2,X1,X0))))) | p(s(bool,happ(s(fun(X0,bool),X3),s(X0,happ(s(fun(X1,X0),X2),s(X1,sK34(X3,X2,X1,X0)))))))) & (! [X5] : ~p(s(bool,happ(s(fun(X0,bool),X3),s(X0,X5)))) | ! [X4] : ~p(s(bool,happ(s(fun(X0,bool),X3),s(X0,happ(s(fun(X1,X0),X2),s(X1,X4)))))))) | p(s(bool,'const.quantHeuristics.GUESS_EXISTS_2'(s(fun(X1,X0),X2),s(fun(X0,bool),X3))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK31,sK32,sK33,sK34])],[f199])).
fof(f199,plain,(
  ! [X0,X1,X2,X3] : ((~p(s(bool,'const.quantHeuristics.GUESS_EXISTS_2'(s(fun(X1,X0),X2),s(fun(X0,bool),X3)))) | ((! [X11] : ~p(s(bool,happ(s(fun(X0,bool),X3),s(X0,X11)))) | ? [X10] : p(s(bool,happ(s(fun(X0,bool),X3),s(X0,happ(s(fun(X1,X0),X2),s(X1,X10))))))) & (! [X9] : ~p(s(bool,happ(s(fun(X0,bool),X3),s(X0,happ(s(fun(X1,X0),X2),s(X1,X9)))))) | ? [X8] : p(s(bool,happ(s(fun(X0,bool),X3),s(X0,X8))))))) & (((? [X7] : p(s(bool,happ(s(fun(X0,bool),X3),s(X0,X7)))) | ? [X6] : p(s(bool,happ(s(fun(X0,bool),X3),s(X0,happ(s(fun(X1,X0),X2),s(X1,X6))))))) & (! [X5] : ~p(s(bool,happ(s(fun(X0,bool),X3),s(X0,X5)))) | ! [X4] : ~p(s(bool,happ(s(fun(X0,bool),X3),s(X0,happ(s(fun(X1,X0),X2),s(X1,X4)))))))) | p(s(bool,'const.quantHeuristics.GUESS_EXISTS_2'(s(fun(X1,X0),X2),s(fun(X0,bool),X3))))))),
  inference(rectify,[],[f198])).
fof(f198,plain,(
  ! [X0,X1,X2,X3] : ((~p(s(bool,'const.quantHeuristics.GUESS_EXISTS_2'(s(fun(X1,X0),X2),s(fun(X0,bool),X3)))) | ((! [X4] : ~p(s(bool,happ(s(fun(X0,bool),X3),s(X0,X4)))) | ? [X5] : p(s(bool,happ(s(fun(X0,bool),X3),s(X0,happ(s(fun(X1,X0),X2),s(X1,X5))))))) & (! [X5] : ~p(s(bool,happ(s(fun(X0,bool),X3),s(X0,happ(s(fun(X1,X0),X2),s(X1,X5)))))) | ? [X4] : p(s(bool,happ(s(fun(X0,bool),X3),s(X0,X4))))))) & (((? [X4] : p(s(bool,happ(s(fun(X0,bool),X3),s(X0,X4)))) | ? [X5] : p(s(bool,happ(s(fun(X0,bool),X3),s(X0,happ(s(fun(X1,X0),X2),s(X1,X5))))))) & (! [X4] : ~p(s(bool,happ(s(fun(X0,bool),X3),s(X0,X4)))) | ! [X5] : ~p(s(bool,happ(s(fun(X0,bool),X3),s(X0,happ(s(fun(X1,X0),X2),s(X1,X5)))))))) | p(s(bool,'const.quantHeuristics.GUESS_EXISTS_2'(s(fun(X1,X0),X2),s(fun(X0,bool),X3))))))),
  inference(nnf_transformation,[],[f96])).
fof(f96,plain,(
  ! [X0,X1,X2,X3] : (p(s(bool,'const.quantHeuristics.GUESS_EXISTS_2'(s(fun(X1,X0),X2),s(fun(X0,bool),X3)))) <=> (? [X4] : p(s(bool,happ(s(fun(X0,bool),X3),s(X0,X4)))) <=> ? [X5] : p(s(bool,happ(s(fun(X0,bool),X3),s(X0,happ(s(fun(X1,X0),X2),s(X1,X5))))))))),
  inference(flattening,[],[f95])).
fof(f95,plain,(
  ! [X0,X1] : ! [X2,X3] : (p(s(bool,'const.quantHeuristics.GUESS_EXISTS_2'(s(fun(X1,X0),X2),s(fun(X0,bool),X3)))) <=> (? [X4] : p(s(bool,happ(s(fun(X0,bool),X3),s(X0,X4)))) <=> ? [X5] : p(s(bool,happ(s(fun(X0,bool),X3),s(X0,happ(s(fun(X1,X0),X2),s(X1,X5))))))))),
  inference(rectify,[],[f28])).
fof(f28,axiom,(
  ! [X6,X7] : ! [X8,X9] : (p(s(bool,'const.quantHeuristics.GUESS_EXISTS_2'(s(fun(X7,X6),X8),s(fun(X6,bool),X9)))) <=> (? [X10] : p(s(bool,happ(s(fun(X6,bool),X9),s(X6,X10)))) <=> ? [X11] : p(s(bool,happ(s(fun(X6,bool),X9),s(X6,happ(s(fun(X7,X6),X8),s(X7,X11))))))))),
  file('thm.quantHeuristics.GUESS_EXISTS_FORALL_REWRITES|split|0','thm.quantHeuristics.GUESS_EXISTS_def')).
fof(f477,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,'const.quantHeuristics.GUESS_EXISTS_2'(s(fun(X1,X0),X2),s(fun(X0,bool),X3)))) | p(s(bool,happ(s(fun(X0,bool),X3),s(X0,happ(s(fun(X1,X0),X2),s(X1,sK34(X3,X2,X1,X0))))))) | p(s(bool,happ(s(fun(X0,bool),X3),s(X0,sK33(X3,X2,X1,X0)))))) ) | $spl72),
  inference(cnf_transformation,[],[f477_D])).
fof(f477_D,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,'const.quantHeuristics.GUESS_EXISTS_2'(s(fun(X1,X0),X2),s(fun(X0,bool),X3)))) | p(s(bool,happ(s(fun(X0,bool),X3),s(X0,happ(s(fun(X1,X0),X2),s(X1,sK34(X3,X2,X1,X0))))))) | p(s(bool,happ(s(fun(X0,bool),X3),s(X0,sK33(X3,X2,X1,X0)))))) ) <=> ~$spl72),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl72])])).
fof(f337,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,'const.quantHeuristics.GUESS_EXISTS_2'(s(fun(X1,X0),X2),s(fun(X0,bool),X3)))) | p(s(bool,happ(s(fun(X0,bool),X3),s(X0,happ(s(fun(X1,X0),X2),s(X1,sK34(X3,X2,X1,X0))))))) | p(s(bool,happ(s(fun(X0,bool),X3),s(X0,sK33(X3,X2,X1,X0)))))) )),
  inference(cnf_transformation,[],[f200])).
fof(f438,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)) ) | $spl14),
  inference(cnf_transformation,[],[f438_D])).
fof(f438_D,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)) ) <=> ~$spl14),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl14])])).
fof(f253,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f151])).
fof(f151,plain,(
  ! [X0] : ((s(bool,'T_0') != s(bool,X0) | p(s(bool,X0))) & (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f51])).
fof(f51,plain,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) <=> p(s(bool,X0)))),
  inference(rectify,[],[f20])).
fof(f20,axiom,(
  ! [X15] : (s(bool,'T_0') = s(bool,X15) <=> p(s(bool,X15)))),
  file('thm.quantHeuristics.GUESS_EXISTS_FORALL_REWRITES|split|0','thm.bool.EQ_CLAUSES|split|0')).
fof(f430,plain,(
  p(s(bool,'T_0')) | $spl8),
  inference(cnf_transformation,[],[f430_D])).
fof(f430_D,plain,(
  p(s(bool,'T_0')) <=> ~$spl8),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl8])])).
fof(f239,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f9])).
fof(f9,axiom,(
  p(s(bool,'T_0'))),
  file('thm.quantHeuristics.GUESS_EXISTS_FORALL_REWRITES|split|0','thm.bool.TRUTH')).
fof(f2862,plain,(
  $false | ($spl8 | $spl224 | $spl1280)),
  inference(subsumption_resolution,[],[f2838,f430])).
fof(f2838,plain,(
  ~p(s(bool,'T_0')) | ($spl224 | $spl1280)),
  inference(superposition,[],[f2806,f567])).
fof(f567,plain,(
  s(bool,'T_0') = s(bool,happ(s(fun(sK12,bool),sK15),s(sK12,sK17))) | $spl224),
  inference(cnf_transformation,[],[f567_D])).
fof(f567_D,plain,(
  s(bool,'T_0') = s(bool,happ(s(fun(sK12,bool),sK15),s(sK12,sK17))) <=> ~$spl224),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl224])])).
fof(f563,plain,(
  s(bool,'T_0') = s(bool,happ(s(fun(sK12,bool),sK15),s(sK12,sK17))) | ($spl4 | $spl14)),
  inference(resolution,[],[f438,f427])).
fof(f2843,plain,(
  ( ! [X15] : (s(bool,'F_0') = s(bool,happ(s(fun(sK12,bool),sK15),s(sK12,X15)))) ) | $spl1284),
  inference(cnf_transformation,[],[f2843_D])).
fof(f2843_D,plain,(
  ( ! [X15] : (s(bool,'F_0') = s(bool,happ(s(fun(sK12,bool),sK15),s(sK12,X15)))) ) <=> ~$spl1284),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1284])])).
fof(f2817,plain,(
  ( ! [X15] : (s(bool,'F_0') = s(bool,happ(s(fun(sK12,bool),sK15),s(sK12,X15)))) ) | ($spl18 | $spl1280)),
  inference(resolution,[],[f2806,f440])).
fof(f3174,plain,(
  $false | ($spl11 | $spl72 | $spl1284 | $spl1336)),
  inference(subsumption_resolution,[],[f3173,f433])).
fof(f3173,plain,(
  p(s(bool,'F_0')) | ($spl11 | $spl72 | $spl1284 | $spl1336)),
  inference(forward_demodulation,[],[f3172,f2843])).
fof(f3172,plain,(
  p(s(bool,happ(s(fun(sK12,bool),sK15),s(sK12,sK33(sK15,sK14,sK13,sK12))))) | ($spl11 | $spl72 | $spl1284 | $spl1336)),
  inference(subsumption_resolution,[],[f3171,f433])).
fof(f3171,plain,(
  p(s(bool,'F_0')) | p(s(bool,happ(s(fun(sK12,bool),sK15),s(sK12,sK33(sK15,sK14,sK13,sK12))))) | ($spl11 | $spl72 | $spl1284 | $spl1336)),
  inference(forward_demodulation,[],[f3158,f2843])).
fof(f3158,plain,(
  p(s(bool,happ(s(fun(sK12,bool),sK15),s(sK12,happ(s(fun(sK13,sK12),sK14),s(sK13,sK34(sK15,sK14,sK13,sK12))))))) | p(s(bool,happ(s(fun(sK12,bool),sK15),s(sK12,sK33(sK15,sK14,sK13,sK12))))) | ($spl11 | $spl72 | $spl1336)),
  inference(subsumption_resolution,[],[f3114,f433])).
fof(f3114,plain,(
  p(s(bool,'F_0')) | p(s(bool,happ(s(fun(sK12,bool),sK15),s(sK12,happ(s(fun(sK13,sK12),sK14),s(sK13,sK34(sK15,sK14,sK13,sK12))))))) | p(s(bool,happ(s(fun(sK12,bool),sK15),s(sK12,sK33(sK15,sK14,sK13,sK12))))) | ($spl72 | $spl1336)),
  inference(superposition,[],[f477,f2979])).
fof(f2979,plain,(
  s(bool,'F_0') = s(bool,'const.quantHeuristics.GUESS_EXISTS_2'(s(fun(sK13,sK12),sK14),s(fun(sK12,bool),sK15))) | $spl1336),
  inference(cnf_transformation,[],[f2979_D])).
fof(f2979_D,plain,(
  s(bool,'F_0') = s(bool,'const.quantHeuristics.GUESS_EXISTS_2'(s(fun(sK13,sK12),sK14),s(fun(sK12,bool),sK15))) <=> ~$spl1336),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1336])])).
fof(f2955,plain,(
  s(bool,'F_0') = s(bool,'const.quantHeuristics.GUESS_EXISTS_2'(s(fun(sK13,sK12),sK14),s(fun(sK12,bool),sK15))) | ($spl1 | $spl18)),
  inference(resolution,[],[f424,f440])).
fof(f424,plain,(
  ~p(s(bool,'const.quantHeuristics.GUESS_EXISTS_2'(s(fun(sK13,sK12),sK14),s(fun(sK12,bool),sK15)))) | $spl1),
  inference(cnf_transformation,[],[f424_D])).
fof(f424_D,plain,(
  ~p(s(bool,'const.quantHeuristics.GUESS_EXISTS_2'(s(fun(sK13,sK12),sK14),s(fun(sK12,bool),sK15)))) <=> ~$spl1),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1])])).
fof(f427,plain,(
  p(s(bool,happ(s(fun(sK12,bool),sK15),s(sK12,sK17)))) | $spl4),
  inference(cnf_transformation,[],[f427_D])).
fof(f427_D,plain,(
  p(s(bool,happ(s(fun(sK12,bool),sK15),s(sK12,sK17)))) <=> ~$spl4),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl4])])).
fof(f237,plain,(
  p(s(bool,happ(s(fun(sK12,bool),sK15),s(sK12,sK17)))) | ~p(s(bool,'const.quantHeuristics.GUESS_EXISTS_2'(s(fun(sK13,sK12),sK14),s(fun(sK12,bool),sK15))))),
  inference(cnf_transformation,[],[f148])).
fof(f148,plain,(
  (p(s(bool,'const.quantHeuristics.GUESS_EXISTS_2'(s(fun(sK13,sK12),sK14),s(fun(sK12,bool),sK15)))) | ! [X6] : (~p(s(bool,happ(s(fun(sK12,bool),sK15),s(sK12,X6)))) | p(s(bool,happ(s(fun(sK12,bool),sK15),s(sK12,happ(s(fun(sK13,sK12),sK14),s(sK13,sK16(X6))))))))) & (~p(s(bool,'const.quantHeuristics.GUESS_EXISTS_2'(s(fun(sK13,sK12),sK14),s(fun(sK12,bool),sK15)))) | (p(s(bool,happ(s(fun(sK12,bool),sK15),s(sK12,sK17)))) & ! [X5] : ~p(s(bool,happ(s(fun(sK12,bool),sK15),s(sK12,happ(s(fun(sK13,sK12),sK14),s(sK13,X5))))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK12,sK13,sK14,sK15,sK16,sK17])],[f147])).
fof(f147,plain,(
  ? [X0,X1,X2,X3] : ((p(s(bool,'const.quantHeuristics.GUESS_EXISTS_2'(s(fun(X1,X0),X2),s(fun(X0,bool),X3)))) | ! [X6] : (~p(s(bool,happ(s(fun(X0,bool),X3),s(X0,X6)))) | ? [X7] : p(s(bool,happ(s(fun(X0,bool),X3),s(X0,happ(s(fun(X1,X0),X2),s(X1,X7)))))))) & (~p(s(bool,'const.quantHeuristics.GUESS_EXISTS_2'(s(fun(X1,X0),X2),s(fun(X0,bool),X3)))) | ? [X4] : (p(s(bool,happ(s(fun(X0,bool),X3),s(X0,X4)))) & ! [X5] : ~p(s(bool,happ(s(fun(X0,bool),X3),s(X0,happ(s(fun(X1,X0),X2),s(X1,X5)))))))))),
  inference(rectify,[],[f146])).
fof(f146,plain,(
  ? [X0,X1,X2,X3] : ((p(s(bool,'const.quantHeuristics.GUESS_EXISTS_2'(s(fun(X1,X0),X2),s(fun(X0,bool),X3)))) | ! [X4] : (~p(s(bool,happ(s(fun(X0,bool),X3),s(X0,X4)))) | ? [X5] : p(s(bool,happ(s(fun(X0,bool),X3),s(X0,happ(s(fun(X1,X0),X2),s(X1,X5)))))))) & (~p(s(bool,'const.quantHeuristics.GUESS_EXISTS_2'(s(fun(X1,X0),X2),s(fun(X0,bool),X3)))) | ? [X4] : (p(s(bool,happ(s(fun(X0,bool),X3),s(X0,X4)))) & ! [X5] : ~p(s(bool,happ(s(fun(X0,bool),X3),s(X0,happ(s(fun(X1,X0),X2),s(X1,X5)))))))))),
  inference(nnf_transformation,[],[f105])).
fof(f105,plain,(
  ? [X0,X1,X2,X3] : (p(s(bool,'const.quantHeuristics.GUESS_EXISTS_2'(s(fun(X1,X0),X2),s(fun(X0,bool),X3)))) <~> ! [X4] : (~p(s(bool,happ(s(fun(X0,bool),X3),s(X0,X4)))) | ? [X5] : p(s(bool,happ(s(fun(X0,bool),X3),s(X0,happ(s(fun(X1,X0),X2),s(X1,X5))))))))),
  inference(ennf_transformation,[],[f43])).
fof(f43,plain,(
  ~! [X0,X1,X2,X3] : (p(s(bool,'const.quantHeuristics.GUESS_EXISTS_2'(s(fun(X1,X0),X2),s(fun(X0,bool),X3)))) <=> ! [X4] : (p(s(bool,happ(s(fun(X0,bool),X3),s(X0,X4)))) => ? [X5] : p(s(bool,happ(s(fun(X0,bool),X3),s(X0,happ(s(fun(X1,X0),X2),s(X1,X5))))))))),
  inference(flattening,[],[f42])).
fof(f42,plain,(
  ~! [X0,X1] : ! [X2,X3] : (p(s(bool,'const.quantHeuristics.GUESS_EXISTS_2'(s(fun(X1,X0),X2),s(fun(X0,bool),X3)))) <=> ! [X4] : (p(s(bool,happ(s(fun(X0,bool),X3),s(X0,X4)))) => ? [X5] : p(s(bool,happ(s(fun(X0,bool),X3),s(X0,happ(s(fun(X1,X0),X2),s(X1,X5))))))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7] : ! [X8,X9] : (p(s(bool,'const.quantHeuristics.GUESS_EXISTS_2'(s(fun(X7,X6),X8),s(fun(X6,bool),X9)))) <=> ! [X10] : (p(s(bool,happ(s(fun(X6,bool),X9),s(X6,X10)))) => ? [X11] : p(s(bool,happ(s(fun(X6,bool),X9),s(X6,happ(s(fun(X7,X6),X8),s(X7,X11))))))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7] : ! [X8,X9] : (p(s(bool,'const.quantHeuristics.GUESS_EXISTS_2'(s(fun(X7,X6),X8),s(fun(X6,bool),X9)))) <=> ! [X10] : (p(s(bool,happ(s(fun(X6,bool),X9),s(X6,X10)))) => ? [X11] : p(s(bool,happ(s(fun(X6,bool),X9),s(X6,happ(s(fun(X7,X6),X8),s(X7,X11))))))))),
  file('thm.quantHeuristics.GUESS_EXISTS_FORALL_REWRITES|split|0','thm.quantHeuristics.GUESS_EXISTS_FORALL_REWRITES|split|0')).
fof(f480,plain,(
  ( ! [X2,X0,X3,X1,X11] : (p(s(bool,happ(s(fun(X0,bool),X3),s(X0,happ(s(fun(X1,X0),X2),s(X1,sK31(X3,X2,X1,X0))))))) | ~p(s(bool,happ(s(fun(X0,bool),X3),s(X0,X11)))) | ~p(s(bool,'const.quantHeuristics.GUESS_EXISTS_2'(s(fun(X1,X0),X2),s(fun(X0,bool),X3))))) ) | $spl76),
  inference(cnf_transformation,[],[f480_D])).
fof(f480_D,plain,(
  ( ! [X2,X0,X3,X1,X11] : (p(s(bool,happ(s(fun(X0,bool),X3),s(X0,happ(s(fun(X1,X0),X2),s(X1,sK31(X3,X2,X1,X0))))))) | ~p(s(bool,happ(s(fun(X0,bool),X3),s(X0,X11)))) | ~p(s(bool,'const.quantHeuristics.GUESS_EXISTS_2'(s(fun(X1,X0),X2),s(fun(X0,bool),X3))))) ) <=> ~$spl76),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl76])])).
fof(f335,plain,(
  ( ! [X2,X0,X3,X1,X11] : (p(s(bool,happ(s(fun(X0,bool),X3),s(X0,happ(s(fun(X1,X0),X2),s(X1,sK31(X3,X2,X1,X0))))))) | ~p(s(bool,happ(s(fun(X0,bool),X3),s(X0,X11)))) | ~p(s(bool,'const.quantHeuristics.GUESS_EXISTS_2'(s(fun(X1,X0),X2),s(fun(X0,bool),X3))))) )),
  inference(cnf_transformation,[],[f200])).
fof(f433,plain,(
  ~p(s(bool,'F_0')) | $spl11),
  inference(cnf_transformation,[],[f433_D])).
fof(f433_D,plain,(
  ~p(s(bool,'F_0')) <=> ~$spl11),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl11])])).
fof(f431,plain,(
  ~p(s(bool,'F_0'))),
  inference(global_subsumption,[],[f242,f239])).
fof(f242,plain,(
  ~p(s(bool,'T_0')) | ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f149])).
fof(f149,plain,(
  (p(s(bool,'T_0')) | p(s(bool,'F_0'))) & (~p(s(bool,'F_0')) | ~p(s(bool,'T_0')))),
  inference(nnf_transformation,[],[f44])).
fof(f44,plain,(
  ~p(s(bool,'T_0')) <=> p(s(bool,'F_0'))),
  inference(flattening,[],[f17])).
fof(f17,axiom,(
  ~p(s(bool,'T_0')) <=> p(s(bool,'F_0'))),
  file('thm.quantHeuristics.GUESS_EXISTS_FORALL_REWRITES|split|0','thm.bool.NOT_CLAUSES|split|1')).
fof(f2806,plain,(
  ( ! [X0] : (~p(s(bool,happ(s(fun(sK12,bool),sK15),s(sK12,X0))))) ) | $spl1280),
  inference(cnf_transformation,[],[f2806_D])).
fof(f2806_D,plain,(
  ( ! [X0] : (~p(s(bool,happ(s(fun(sK12,bool),sK15),s(sK12,X0))))) ) <=> ~$spl1280),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1280])])).
fof(f2867,plain,(
  ( ! [X6] : (~p(s(bool,happ(s(fun(sK12,bool),sK15),s(sK12,X6))))) ) | ($spl6 | $spl11 | $spl232)),
  inference(subsumption_resolution,[],[f2866,f433])).
fof(f2866,plain,(
  ( ! [X6] : (p(s(bool,'F_0')) | ~p(s(bool,happ(s(fun(sK12,bool),sK15),s(sK12,X6))))) ) | ($spl6 | $spl232)),
  inference(forward_demodulation,[],[f428,f587])).
fof(f2803,plain,(
  ( ! [X0] : (~p(s(bool,happ(s(fun(sK12,bool),sK15),s(sK12,X0)))) | ~p(s(bool,'const.quantHeuristics.GUESS_EXISTS_2'(s(fun(sK13,sK12),sK14),s(fun(sK12,bool),sK15))))) ) | ($spl11 | $spl76 | $spl232)),
  inference(subsumption_resolution,[],[f2789,f433])).
fof(f2789,plain,(
  ( ! [X0] : (p(s(bool,'F_0')) | ~p(s(bool,happ(s(fun(sK12,bool),sK15),s(sK12,X0)))) | ~p(s(bool,'const.quantHeuristics.GUESS_EXISTS_2'(s(fun(sK13,sK12),sK14),s(fun(sK12,bool),sK15))))) ) | ($spl76 | $spl232)),
  inference(superposition,[],[f480,f587])).
fof(f423,plain,(
  p(s(bool,'const.quantHeuristics.GUESS_EXISTS_2'(s(fun(sK13,sK12),sK14),s(fun(sK12,bool),sK15)))) | $spl0),
  inference(cnf_transformation,[],[f423_D])).
fof(f423_D,plain,(
  p(s(bool,'const.quantHeuristics.GUESS_EXISTS_2'(s(fun(sK13,sK12),sK14),s(fun(sK12,bool),sK15)))) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f428,plain,(
  ( ! [X6] : (p(s(bool,happ(s(fun(sK12,bool),sK15),s(sK12,happ(s(fun(sK13,sK12),sK14),s(sK13,sK16(X6))))))) | ~p(s(bool,happ(s(fun(sK12,bool),sK15),s(sK12,X6))))) ) | $spl6),
  inference(cnf_transformation,[],[f428_D])).
fof(f428_D,plain,(
  ( ! [X6] : (p(s(bool,happ(s(fun(sK12,bool),sK15),s(sK12,happ(s(fun(sK13,sK12),sK14),s(sK13,sK16(X6))))))) | ~p(s(bool,happ(s(fun(sK12,bool),sK15),s(sK12,X6))))) ) <=> ~$spl6),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl6])])).
fof(f236,plain,(
  ( ! [X6] : (p(s(bool,happ(s(fun(sK12,bool),sK15),s(sK12,happ(s(fun(sK13,sK12),sK14),s(sK13,sK16(X6))))))) | ~p(s(bool,happ(s(fun(sK12,bool),sK15),s(sK12,X6)))) | p(s(bool,'const.quantHeuristics.GUESS_EXISTS_2'(s(fun(sK13,sK12),sK14),s(fun(sK12,bool),sK15))))) )),
  inference(cnf_transformation,[],[f148])).
fof(f440,plain,(
  ( ! [X0] : (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)) ) | $spl18),
  inference(cnf_transformation,[],[f440_D])).
fof(f440_D,plain,(
  ( ! [X0] : (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)) ) <=> ~$spl18),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl18])])).
fof(f257,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f153])).
fof(f153,plain,(
  ! [X0] : ((s(bool,'F_0') != s(bool,X0) | ~p(s(bool,X0))) & (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f54])).
fof(f54,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(flattening,[],[f53])).
fof(f53,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(rectify,[],[f22])).
fof(f22,axiom,(
  ! [X15] : (s(bool,'F_0') = s(bool,X15) <=> ~p(s(bool,X15)))),
  file('thm.quantHeuristics.GUESS_EXISTS_FORALL_REWRITES|split|0','thm.bool.EQ_CLAUSES|split|2')).
fof(f587,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,happ(s(fun(sK12,bool),sK15),s(sK12,happ(s(fun(sK13,sK12),sK14),s(sK13,X0)))))) ) | $spl232),
  inference(cnf_transformation,[],[f587_D])).
fof(f587_D,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,happ(s(fun(sK12,bool),sK15),s(sK12,happ(s(fun(sK13,sK12),sK14),s(sK13,X0)))))) ) <=> ~$spl232),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl232])])).
fof(f583,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,happ(s(fun(sK12,bool),sK15),s(sK12,happ(s(fun(sK13,sK12),sK14),s(sK13,X0)))))) ) | ($spl2 | $spl18)),
  inference(resolution,[],[f440,f425])).
fof(f425,plain,(
  ( ! [X5] : (~p(s(bool,happ(s(fun(sK12,bool),sK15),s(sK12,happ(s(fun(sK13,sK12),sK14),s(sK13,X5))))))) ) | $spl2),
  inference(cnf_transformation,[],[f425_D])).
fof(f425_D,plain,(
  ( ! [X5] : (~p(s(bool,happ(s(fun(sK12,bool),sK15),s(sK12,happ(s(fun(sK13,sK12),sK14),s(sK13,X5))))))) ) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f238,plain,(
  ( ! [X5] : (~p(s(bool,happ(s(fun(sK12,bool),sK15),s(sK12,happ(s(fun(sK13,sK12),sK14),s(sK13,X5)))))) | ~p(s(bool,'const.quantHeuristics.GUESS_EXISTS_2'(s(fun(sK13,sK12),sK14),s(fun(sK12,bool),sK15))))) )),
  inference(cnf_transformation,[],[f148])).
fof(f2953,plain,(
  ( ! [X0] : (~p(s(bool,happ(s(fun(sK12,bool),sK15),s(sK12,happ(s(fun(sK13,sK12),sK14),s(sK13,X0))))))) ) | ($spl1 | $spl70)),
  inference(resolution,[],[f424,f476])).
% SZS output end Proof for thm.quantHeuristics
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 239
% Passive clauses: 709
% Generated clauses: 3044
% Final active clauses: 212
% Final passive clauses: 452
% Input formulas: 40
% Initial clauses: 177
% 
% Duplicate literals: 72
% Trivial inequalities: 4
% Fw subsumption resolutions: 233
% Fw demodulations: 77
% Bw demodulations: 23
% Condensations: 77
% Global subsumptions: 15
% 
% Simple tautologies: 159
% Equational tautologies: 4
% Forward subsumptions: 825
% Bw demodulations to eq. taut.: 4
% 
% Binary resolution: 1119
% Factoring: 45
% Forward superposition: 238
% Backward superposition: 122
% Self superposition: 2
% Equality factoring: 2
% Equality resolution: 1
% 
% Split clauses: 26
% Split components: 52
% SAT solver clauses: 1071
% SAT solver unit clauses: 184
% SAT solver binary clauses: 71
% SAT solver learnt clauses: 33
% SAT solver learnt literals: 20
% 
% Sat splits: 26
% Sat splitting refutations: 5
% 
% TWLsolver clauses: 1007
% TWLsolver calls for satisfiability: 1781
% 
% Memory used [KB]: 3837
% Time elapsed: 0.093 s
% ------------------------------
% ------------------------------
% Success in time 0.714 s
