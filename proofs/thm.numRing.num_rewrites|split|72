Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 299 next slice time: 5
dis+11_7_3 on thm.numRing
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.numRing
% SZS output start Proof for thm.numRing
fof(f1135,plain,(
  $false),
  inference(trivial_inequality_removal,[],[f1095])).
fof(f1095,plain,(
  s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK0))))) != s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK0)))))),
  inference(superposition,[],[f175,f208])).
fof(f208,plain,(
  ( ! [X0] : (s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X0)))))) )),
  inference(cnf_transformation,[],[f109])).
fof(f109,plain,(
  ! [X0] : s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X0)))))),
  inference(rectify,[],[f76])).
fof(f76,axiom,(
  ! [X9] : s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X9))))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X9)))))),
  file('thm.numRing.num_rewrites|split|72','thm.numeral.iDUB_removal|split|0')).
fof(f175,plain,(
  s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK0))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',sK0)))))),
  inference(cnf_transformation,[],[f160])).
fof(f160,plain,(
  s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK0))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',sK0)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0])],[f158])).
fof(f158,plain,(
  ? [X0] : s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X0)))))),
  inference(ennf_transformation,[],[f83])).
fof(f83,plain,(
  ~! [X0] : s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X0)))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X6))))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X6)))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X6))))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X6)))))),
  file('thm.numRing.num_rewrites|split|72','thm.numRing.num_rewrites|split|72')).
% SZS output end Proof for thm.numRing
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 57
% Passive clauses: 152
% Generated clauses: 936
% Final active clauses: 45
% Final passive clauses: 62
% Input formulas: 81
% Initial clauses: 94
% 
% Duplicate literals: 1
% Trivial inequalities: 10
% Fw subsumption resolutions: 13
% Fw demodulations: 69
% Bw demodulations: 11
% 
% Simple tautologies: 6
% Equational tautologies: 3
% Forward subsumptions: 655
% Fw demodulations to eq. taut.: 1
% 
% Binary resolution: 4
% Forward superposition: 438
% Backward superposition: 285
% Self superposition: 20
% Equality factoring: 2
% Equality resolution: 1
% 
% Split clauses: 13
% Split components: 26
% SAT solver clauses: 15
% SAT solver unit clauses: 1
% SAT solver binary clauses: 14
% 
% Sat splits: 13
% Sat splitting refutations: 1
% 
% TWLsolver clauses: 15
% TWLsolver calls for satisfiability: 4
% 
% Memory used [KB]: 1279
% Time elapsed: 0.025 s
% ------------------------------
% ------------------------------
% Success in time 0.029 s
