Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 300 next slice time: 5
dis+11_7_3 on thm.arithmetic
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.arithmetic
% SZS output start Proof for thm.arithmetic
fof(f304,plain,(
  $false),
  inference(trivial_inequality_removal,[],[f295])).
fof(f295,plain,(
  s('type.num.num','const.arithmetic.ABS_DIFF_2'(s('type.num.num',sK0),s('type.num.num',sK1))) != s('type.num.num','const.arithmetic.ABS_DIFF_2'(s('type.num.num',sK0),s('type.num.num',sK1)))),
  inference(superposition,[],[f30,f278])).
fof(f278,plain,(
  ( ! [X2,X3] : (s('type.num.num','const.arithmetic.ABS_DIFF_2'(s('type.num.num',X2),s('type.num.num',X3))) = s('type.num.num','const.arithmetic.ABS_DIFF_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X2))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X3)))))) )),
  inference(forward_demodulation,[],[f277,f41])).
fof(f41,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.ABS_DIFF_2'(s('type.num.num',X0),s('type.num.num',X1))) = s('type.num.num','const.bool.COND_3'(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X1),s('type.num.num',X0))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X0),s('type.num.num',X1)))))) )),
  inference(cnf_transformation,[],[f20])).
fof(f20,plain,(
  ! [X0,X1] : s('type.num.num','const.arithmetic.ABS_DIFF_2'(s('type.num.num',X0),s('type.num.num',X1))) = s('type.num.num','const.bool.COND_3'(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X1),s('type.num.num',X0))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X0),s('type.num.num',X1)))))),
  inference(rectify,[],[f9])).
fof(f9,axiom,(
  ! [X6,X7] : s('type.num.num','const.arithmetic.ABS_DIFF_2'(s('type.num.num',X6),s('type.num.num',X7))) = s('type.num.num','const.bool.COND_3'(s(bool,'const.prim_rec.<_2'(s('type.num.num',X6),s('type.num.num',X7))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X7),s('type.num.num',X6))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X6),s('type.num.num',X7)))))),
  file('thm.arithmetic.ABS_DIFF_SUC','thm.arithmetic.ABS_DIFF_def')).
fof(f277,plain,(
  ( ! [X2,X3] : (s('type.num.num','const.arithmetic.ABS_DIFF_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X2))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X3))))) = s('type.num.num','const.bool.COND_3'(s(bool,'const.prim_rec.<_2'(s('type.num.num',X2),s('type.num.num',X3))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X3),s('type.num.num',X2))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X2),s('type.num.num',X3)))))) )),
  inference(forward_demodulation,[],[f276,f40])).
fof(f40,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X0),s('type.num.num',X1))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X1)))))) )),
  inference(cnf_transformation,[],[f19])).
fof(f19,plain,(
  ! [X0,X1] : s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X0),s('type.num.num',X1))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X1)))))),
  inference(rectify,[],[f8])).
fof(f8,axiom,(
  ! [X6,X7] : s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X6),s('type.num.num',X7))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X6))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X7)))))),
  file('thm.arithmetic.ABS_DIFF_SUC','thm.arithmetic.SUB_MONO_EQ')).
fof(f276,plain,(
  ( ! [X2,X3] : (s('type.num.num','const.arithmetic.ABS_DIFF_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X2))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X3))))) = s('type.num.num','const.bool.COND_3'(s(bool,'const.prim_rec.<_2'(s('type.num.num',X2),s('type.num.num',X3))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X3))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X2))))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X2),s('type.num.num',X3)))))) )),
  inference(forward_demodulation,[],[f256,f40])).
fof(f256,plain,(
  ( ! [X2,X3] : (s('type.num.num','const.arithmetic.ABS_DIFF_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X2))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X3))))) = s('type.num.num','const.bool.COND_3'(s(bool,'const.prim_rec.<_2'(s('type.num.num',X2),s('type.num.num',X3))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X3))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X2))))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X2))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X3)))))))) )),
  inference(superposition,[],[f41,f39])).
fof(f39,plain,(
  ( ! [X0,X1] : (s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X1)))))) )),
  inference(cnf_transformation,[],[f18])).
fof(f18,plain,(
  ! [X0,X1] : s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X1)))))),
  inference(rectify,[],[f7])).
fof(f7,axiom,(
  ! [X7,X6] : s(bool,'const.prim_rec.<_2'(s('type.num.num',X7),s('type.num.num',X6))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X7))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X6)))))),
  file('thm.arithmetic.ABS_DIFF_SUC','thm.prim_rec.LESS_MONO_EQ')).
fof(f30,plain,(
  s('type.num.num','const.arithmetic.ABS_DIFF_2'(s('type.num.num',sK0),s('type.num.num',sK1))) != s('type.num.num','const.arithmetic.ABS_DIFF_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',sK0))),s('type.num.num','const.num.SUC_1'(s('type.num.num',sK1)))))),
  inference(cnf_transformation,[],[f25])).
fof(f25,plain,(
  s('type.num.num','const.arithmetic.ABS_DIFF_2'(s('type.num.num',sK0),s('type.num.num',sK1))) != s('type.num.num','const.arithmetic.ABS_DIFF_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',sK0))),s('type.num.num','const.num.SUC_1'(s('type.num.num',sK1)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1])],[f23])).
fof(f23,plain,(
  ? [X0,X1] : s('type.num.num','const.arithmetic.ABS_DIFF_2'(s('type.num.num',X0),s('type.num.num',X1))) != s('type.num.num','const.arithmetic.ABS_DIFF_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X1)))))),
  inference(ennf_transformation,[],[f13])).
fof(f13,plain,(
  ~! [X0,X1] : s('type.num.num','const.arithmetic.ABS_DIFF_2'(s('type.num.num',X0),s('type.num.num',X1))) = s('type.num.num','const.arithmetic.ABS_DIFF_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X1)))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7] : s('type.num.num','const.arithmetic.ABS_DIFF_2'(s('type.num.num',X6),s('type.num.num',X7))) = s('type.num.num','const.arithmetic.ABS_DIFF_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X6))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X7)))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7] : s('type.num.num','const.arithmetic.ABS_DIFF_2'(s('type.num.num',X6),s('type.num.num',X7))) = s('type.num.num','const.arithmetic.ABS_DIFF_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X6))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X7)))))),
  file('thm.arithmetic.ABS_DIFF_SUC','thm.arithmetic.ABS_DIFF_SUC')).
% SZS output end Proof for thm.arithmetic
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 16
% Passive clauses: 53
% Generated clauses: 256
% Final active clauses: 14
% Final passive clauses: 31
% Input formulas: 11
% Initial clauses: 13
% 
% Duplicate literals: 41
% Trivial inequalities: 4
% Fw demodulations: 20
% 
% Simple tautologies: 18
% Equational tautologies: 15
% Forward subsumptions: 97
% 
% Binary resolution: 4
% Forward superposition: 62
% Backward superposition: 60
% Self superposition: 30
% Equality factoring: 26
% 
% Split clauses: 1
% Split components: 2
% SAT solver clauses: 2
% SAT solver unit clauses: 1
% SAT solver binary clauses: 1
% 
% Sat splits: 1
% Sat splitting refutations: 1
% 
% TWLsolver clauses: 2
% TWLsolver calls for satisfiability: 2
% 
% Memory used [KB]: 767
% Time elapsed: 0.018 s
% ------------------------------
% ------------------------------
% Success in time 0.019 s
