Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.rich_list
% (98731)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 1150
% Passive clauses: 7692
% Generated clauses: 47089
% Final active clauses: 1047
% Final passive clauses: 6117
% Input formulas: 517
% Initial clauses: 889
% 
% Duplicate literals: 258
% Trivial inequalities: 68
% Fw subsumption resolutions: 1949
% Fw demodulations: 3640
% Bw demodulations: 87
% 
% Simple tautologies: 310
% Equational tautologies: 27
% Forward subsumptions: 32927
% Fw demodulations to eq. taut.: 7
% 
% Binary resolution: 6812
% Factoring: 1388
% Forward superposition: 15810
% Backward superposition: 16068
% Self superposition: 65
% Equality factoring: 2
% Equality resolution: 10
% 
% Split clauses: 362
% Split components: 726
% SAT solver clauses: 614
% SAT solver unit clauses: 18
% SAT solver binary clauses: 86
% 
% Sat splits: 362
% Sat splitting refutations: 5
% 
% TWLsolver clauses: 613
% TWLsolver calls for satisfiability: 452
% 
% Memory used [KB]: 30063
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 143 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.rich_list
% (98744)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 680
% Passive clauses: 4512
% Generated clauses: 34539
% Final active clauses: 655
% Final passive clauses: 3681
% Input formulas: 517
% Initial clauses: 889
% 
% Duplicate literals: 111
% Trivial inequalities: 50
% Fw subsumption resolutions: 1028
% Fw demodulations: 4142
% Bw demodulations: 173
% Condensations: 74
% Global subsumptions: 36
% 
% Simple tautologies: 316
% Equational tautologies: 16
% Forward subsumptions: 19173
% Fw demodulations to eq. taut.: 7
% Bw demodulations to eq. taut.: 3
% 
% Binary resolution: 2697
% Factoring: 160
% Forward superposition: 12399
% Backward superposition: 8331
% Self superposition: 96
% Equality factoring: 2
% Equality resolution: 12
% 
% Split clauses: 19
% Split components: 38
% SAT solver clauses: 6013
% SAT solver unit clauses: 1150
% SAT solver binary clauses: 290
% SAT solver learnt clauses: 72
% SAT solver learnt literals: 12
% 
% Sat splits: 19
% 
% TWLsolver clauses: 5869
% TWLsolver calls for satisfiability: 4838
% 
% Memory used [KB]: 35052
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 136 next slice time: 103
lrs+11_2_br=off:cond=on:fde=none:gs=on:gsaa=full_model:lwlo=on:nwc=2:sas=minisat:stl=30:ssfp=100000:ssfq=1.4:smm=sco:ssnc=none:sp=occurrence:urr=on_98 on thm.rich_list
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.rich_list
% SZS output start Proof for thm.rich_list
fof(f45766,plain,(
  $false),
  inference(subsumption_resolution,[],[f45597,f2132])).
fof(f2132,plain,(
  ( ! [X2,X0,X1] : (s('type.list.list'(X0),'const.rich_list.BUTLASTN_2'(s('type.num.num',X1),s('type.list.list'(X0),X2))) = s('type.list.list'(X0),'const.list.REVERSE_1'(s('type.list.list'(X0),'const.list.DROP_2'(s('type.num.num',X1),s('type.list.list'(X0),'const.list.REVERSE_1'(s('type.list.list'(X0),X2)))))))) )),
  inference(cnf_transformation,[],[f834])).
fof(f834,plain,(
  ! [X0,X1,X2] : s('type.list.list'(X0),'const.rich_list.BUTLASTN_2'(s('type.num.num',X1),s('type.list.list'(X0),X2))) = s('type.list.list'(X0),'const.list.REVERSE_1'(s('type.list.list'(X0),'const.list.DROP_2'(s('type.num.num',X1),s('type.list.list'(X0),'const.list.REVERSE_1'(s('type.list.list'(X0),X2)))))))),
  inference(flattening,[],[f833])).
fof(f833,plain,(
  ! [X0] : ! [X1,X2] : s('type.list.list'(X0),'const.rich_list.BUTLASTN_2'(s('type.num.num',X1),s('type.list.list'(X0),X2))) = s('type.list.list'(X0),'const.list.REVERSE_1'(s('type.list.list'(X0),'const.list.DROP_2'(s('type.num.num',X1),s('type.list.list'(X0),'const.list.REVERSE_1'(s('type.list.list'(X0),X2)))))))),
  inference(rectify,[],[f7])).
fof(f7,axiom,(
  ! [X6] : ! [X7,X9] : s('type.list.list'(X6),'const.rich_list.BUTLASTN_2'(s('type.num.num',X7),s('type.list.list'(X6),X9))) = s('type.list.list'(X6),'const.list.REVERSE_1'(s('type.list.list'(X6),'const.list.DROP_2'(s('type.num.num',X7),s('type.list.list'(X6),'const.list.REVERSE_1'(s('type.list.list'(X6),X9)))))))),
  file('thm.rich_list.DROP_REVERSE','thm.rich_list.BUTLASTN_def')).
fof(f45597,plain,(
  s('type.list.list'(sK13),'const.rich_list.BUTLASTN_2'(s('type.num.num',sK14),s('type.list.list'(sK13),sK15))) != s('type.list.list'(sK13),'const.list.REVERSE_1'(s('type.list.list'(sK13),'const.list.DROP_2'(s('type.num.num',sK14),s('type.list.list'(sK13),'const.list.REVERSE_1'(s('type.list.list'(sK13),sK15)))))))),
  inference(unit_resulting_resolution,[],[f1853,f2207])).
fof(f2207,plain,(
  ( ! [X2,X0,X1] : (s('type.list.list'(X0),X2) != s('type.list.list'(X0),'const.list.REVERSE_1'(s('type.list.list'(X0),X1))) | s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.REVERSE_1'(s('type.list.list'(X0),X2)))) )),
  inference(cnf_transformation,[],[f1642])).
fof(f1642,plain,(
  ! [X0,X1,X2] : ((s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.REVERSE_1'(s('type.list.list'(X0),X2))) | s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.REVERSE_1'(s('type.list.list'(X0),X1)))) & (s('type.list.list'(X0),X2) != s('type.list.list'(X0),'const.list.REVERSE_1'(s('type.list.list'(X0),X1))) | s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.REVERSE_1'(s('type.list.list'(X0),X2)))))),
  inference(nnf_transformation,[],[f968])).
fof(f968,plain,(
  ! [X0,X1,X2] : (s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.REVERSE_1'(s('type.list.list'(X0),X2))) <=> s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.REVERSE_1'(s('type.list.list'(X0),X1))))),
  inference(flattening,[],[f967])).
fof(f967,plain,(
  ! [X0] : ! [X1,X2] : (s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.REVERSE_1'(s('type.list.list'(X0),X2))) <=> s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.REVERSE_1'(s('type.list.list'(X0),X1))))),
  inference(rectify,[],[f82])).
fof(f82,axiom,(
  ! [X6] : ! [X19,X20] : (s('type.list.list'(X6),X19) = s('type.list.list'(X6),'const.list.REVERSE_1'(s('type.list.list'(X6),X20))) <=> s('type.list.list'(X6),X20) = s('type.list.list'(X6),'const.list.REVERSE_1'(s('type.list.list'(X6),X19))))),
  file('thm.rich_list.DROP_REVERSE','thm.list.SWAP_REVERSE')).
fof(f1853,plain,(
  s('type.list.list'(sK13),'const.list.REVERSE_1'(s('type.list.list'(sK13),'const.rich_list.BUTLASTN_2'(s('type.num.num',sK14),s('type.list.list'(sK13),sK15))))) != s('type.list.list'(sK13),'const.list.DROP_2'(s('type.num.num',sK14),s('type.list.list'(sK13),'const.list.REVERSE_1'(s('type.list.list'(sK13),sK15)))))),
  inference(cnf_transformation,[],[f1540])).
fof(f1540,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK14),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK13),sK15)))))) & s('type.list.list'(sK13),'const.list.REVERSE_1'(s('type.list.list'(sK13),'const.rich_list.BUTLASTN_2'(s('type.num.num',sK14),s('type.list.list'(sK13),sK15))))) != s('type.list.list'(sK13),'const.list.DROP_2'(s('type.num.num',sK14),s('type.list.list'(sK13),'const.list.REVERSE_1'(s('type.list.list'(sK13),sK15)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK13,sK14,sK15])],[f1365])).
fof(f1365,plain,(
  ? [X0,X1,X2] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2)))))) & s('type.list.list'(X0),'const.list.REVERSE_1'(s('type.list.list'(X0),'const.rich_list.BUTLASTN_2'(s('type.num.num',X1),s('type.list.list'(X0),X2))))) != s('type.list.list'(X0),'const.list.DROP_2'(s('type.num.num',X1),s('type.list.list'(X0),'const.list.REVERSE_1'(s('type.list.list'(X0),X2))))))),
  inference(ennf_transformation,[],[f520])).
fof(f520,plain,(
  ~! [X0,X1,X2] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2)))))) => s('type.list.list'(X0),'const.list.REVERSE_1'(s('type.list.list'(X0),'const.rich_list.BUTLASTN_2'(s('type.num.num',X1),s('type.list.list'(X0),X2))))) = s('type.list.list'(X0),'const.list.DROP_2'(s('type.num.num',X1),s('type.list.list'(X0),'const.list.REVERSE_1'(s('type.list.list'(X0),X2))))))),
  inference(flattening,[],[f519])).
fof(f519,plain,(
  ~! [X0] : ! [X1,X2] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2)))))) => s('type.list.list'(X0),'const.list.REVERSE_1'(s('type.list.list'(X0),'const.rich_list.BUTLASTN_2'(s('type.num.num',X1),s('type.list.list'(X0),X2))))) = s('type.list.list'(X0),'const.list.DROP_2'(s('type.num.num',X1),s('type.list.list'(X0),'const.list.REVERSE_1'(s('type.list.list'(X0),X2))))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : ! [X7,X8] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X7),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X8)))))) => s('type.list.list'(X6),'const.list.REVERSE_1'(s('type.list.list'(X6),'const.rich_list.BUTLASTN_2'(s('type.num.num',X7),s('type.list.list'(X6),X8))))) = s('type.list.list'(X6),'const.list.DROP_2'(s('type.num.num',X7),s('type.list.list'(X6),'const.list.REVERSE_1'(s('type.list.list'(X6),X8))))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : ! [X7,X8] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X7),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X8)))))) => s('type.list.list'(X6),'const.list.REVERSE_1'(s('type.list.list'(X6),'const.rich_list.BUTLASTN_2'(s('type.num.num',X7),s('type.list.list'(X6),X8))))) = s('type.list.list'(X6),'const.list.DROP_2'(s('type.num.num',X7),s('type.list.list'(X6),'const.list.REVERSE_1'(s('type.list.list'(X6),X8))))))),
  file('thm.rich_list.DROP_REVERSE','thm.rich_list.DROP_REVERSE')).
% SZS output end Proof for thm.rich_list
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 806
% Passive clauses: 5635
% Generated clauses: 43927
% Final active clauses: 766
% Final passive clauses: 3936
% Input formulas: 517
% Initial clauses: 889
% 
% Duplicate literals: 9
% Trivial inequalities: 64
% Fw subsumption resolutions: 1114
% Fw demodulations: 6451
% Bw demodulations: 218
% Condensations: 22
% 
% Simple tautologies: 156
% Equational tautologies: 43
% Forward subsumptions: 28577
% Fw demodulations to eq. taut.: 478
% Bw demodulations to eq. taut.: 26
% 
% Unit resulting resolution: 12320
% Factoring: 1
% Forward superposition: 12170
% Backward superposition: 10483
% Self superposition: 100
% Equality factoring: 2
% Equality resolution: 14
% 
% Split clauses: 22
% Split components: 44
% SAT solver clauses: 6933
% SAT solver unit clauses: 3239
% SAT solver binary clauses: 3078
% 
% Sat splits: 22
% Sat splitting refutations: 1252
% 
% Memory used [KB]: 28656
% Time elapsed: 0.779 s
% ------------------------------
% ------------------------------
% Success in time 2.12 s
