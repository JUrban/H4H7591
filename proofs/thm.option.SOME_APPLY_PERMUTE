Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 300 next slice time: 5
dis+11_7_3 on thm.option
% (59714)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 176
% Passive clauses: 3543
% Generated clauses: 25007
% Final active clauses: 133
% Final passive clauses: 3020
% Input formulas: 14
% Initial clauses: 16
% 
% Duplicate literals: 1418
% Trivial inequalities: 345
% Fw subsumption resolutions: 2765
% Fw demodulations: 3523
% Bw demodulations: 33
% 
% Simple tautologies: 369
% Equational tautologies: 51
% Forward subsumptions: 11476
% Fw demodulations to eq. taut.: 8
% Bw demodulations to eq. taut.: 2
% 
% Binary resolution: 18
% Forward superposition: 8255
% Backward superposition: 7921
% Self superposition: 281
% Equality factoring: 143
% Equality resolution: 35
% 
% Split clauses: 722
% Split components: 1459
% SAT solver clauses: 1661
% SAT solver unit clauses: 4
% SAT solver binary clauses: 102
% 
% Sat splits: 722
% Sat splitting refutations: 3
% 
% TWLsolver clauses: 1641
% TWLsolver calls for satisfiability: 143
% 
% Memory used [KB]: 13816
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 293 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.option
% (59733)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 120
% Passive clauses: 1459
% Generated clauses: 11439
% Final active clauses: 114
% Final passive clauses: 1297
% Input formulas: 14
% Initial clauses: 16
% 
% Duplicate literals: 545
% Trivial inequalities: 93
% Fw subsumption resolutions: 645
% Fw demodulations: 1283
% Bw demodulations: 39
% Condensations: 545
% 
% Simple tautologies: 145
% Equational tautologies: 20
% Forward subsumptions: 4597
% Fw demodulations to eq. taut.: 14
% Bw demodulations to eq. taut.: 3
% 
% Binary resolution: 10
% Forward superposition: 4247
% Backward superposition: 2368
% Self superposition: 85
% Equality factoring: 34
% Equality resolution: 32
% 
% Split clauses: 79
% Split components: 163
% SAT solver clauses: 2057
% SAT solver unit clauses: 25
% SAT solver binary clauses: 31
% 
% Sat splits: 79
% Sat splitting refutations: 9
% 
% TWLsolver clauses: 2057
% TWLsolver calls for satisfiability: 147
% 
% Memory used [KB]: 13048
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 286 next slice time: 103
lrs+11_2_br=off:cond=on:fde=none:gs=on:gsaa=full_model:lwlo=on:nwc=2:sas=minisat:stl=30:ssfp=100000:ssfq=1.4:smm=sco:ssnc=none:sp=occurrence:urr=on_98 on thm.option
% (59752)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 542
% Passive clauses: 11023
% Generated clauses: 92254
% Final active clauses: 84
% Final passive clauses: 1141
% Input formulas: 14
% Initial clauses: 16
% Discarded non-redundant clauses: 1697
% 
% Duplicate literals: 5223
% Trivial inequalities: 1102
% Fw subsumption resolutions: 3980
% Fw demodulations: 7406
% Bw demodulations: 6332
% Condensations: 6890
% Global subsumptions: 1608
% 
% Simple tautologies: 1060
% Equational tautologies: 1031
% Forward subsumptions: 49873
% Fw demodulations to eq. taut.: 805
% Bw demodulations to eq. taut.: 538
% 
% Unit resulting resolution: 4534
% Forward superposition: 19487
% Backward superposition: 21033
% Self superposition: 426
% Equality factoring: 213
% Equality resolution: 110
% 
% Split clauses: 332
% Split components: 688
% SAT solver clauses: 15170
% SAT solver unit clauses: 62
% SAT solver binary clauses: 1037
% 
% Sat splits: 332
% Sat splitting refutations: 1873
% 
% Memory used [KB]: 72791
% Time elapsed: 10.400 s
% ------------------------------
% ------------------------------
% remaining time: 182 next slice time: 39
dis+11_5_fde=none:nwc=1:sas=minisat:sd=1:ss=axioms:st=5.0:sos=all:sdd=large:sser=off:sfr=on:ssfp=100000:ssfq=2.0:ssnc=none_37 on thm.option
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.option
% SZS output start Proof for thm.option
fof(f44364,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f69,f74,f79,f91,f143,f150,f147,f145,f173,f174,f218,f219,f78,f220,f295,f432,f436,f230,f102,f511,f518,f515,f556,f595,f596,f81,f798,f865,f872,f885,f1444,f1466,f1464,f1489,f1529,f1532,f1535,f1537,f1492,f1539,f1540,f1543,f1534,f1545,f1552,f1531,f1554,f1663,f1690,f1667,f1694,f1692,f1683,f1707,f1905,f2001,f2004,f2186,f2189,f2188,f2181,f2190,f71,f2261,f2241,f2270,f2265,f2263,f2333,f2262,f2341,f2355,f1710,f1910,f1658,f2356,f2357,f777,f2360,f669,f480,f2364,f363,f356,f76,f2372,f2054,f890,f2428,f2601,f2608,f2902,f2904,f3003,f3004,f808,f3350,f3370,f3687,f3698,f3696,f3913,f3915,f3955,f3953,f3916,f3958,f3956,f4205,f4219,f4217,f4349,f4366,f4508,f4563,f4509,f4565,f4540,f4570,f4541,f4571,f4542,f4573,f4574,f4577,f4662,f4665,f4336,f4671,f4672,f72,f3361,f4676,f3360,f4677,f4678,f4681,f3364,f4682,f2972,f73,f4689,f4591,f4698,f3928,f4700,f4701,f2898,f4702,f4703,f2905,f2838,f4704,f2803,f4708,f2715,f4710,f4712,f4713,f4714,f4715,f1326,f4716,f1045,f4717,f4719,f4720,f4721,f4722,f4613,f2269,f2831,f892,f4732,f2459,f891,f681,f691,f513,f4737,f2819,f4738,f4610,f4740,f3872,f4741,f2863,f2692,f4743,f4744,f809,f1035,f4745,f684,f678,f4747,f4882,f4883,f4916,f5252,f5707,f5700,f5716,f5863,f2028,f5935,f5978,f6151,f6152,f6188,f6189,f6154,f5895,f6544,f7006,f7038,f3369,f7042,f7044,f7046,f7047,f7370,f7426,f8023,f9095,f9149,f9456,f9479,f9477,f10017,f10026,f10024,f10421,f5709,f12092,f12164,f12876,f12892,f12952,f12951,f12979,f2371,f13019,f13654,f13657,f13607,f13609,f13610,f13611,f13612,f13613,f13614,f13615,f15123,f15124,f16591,f16593,f16594,f16595,f16596,f16597,f16598,f16599,f16717,f16718,f16719,f16720,f15778,f16729,f15770,f16731,f16732,f16742,f16743,f16744,f16746,f16747,f16748,f16749,f16750,f16752,f16753,f16754,f16755,f16756,f16757,f16758,f12321,f16761,f16763,f10969,f16774,f10967,f16775,f16776,f10386,f16779,f10385,f16780,f10384,f16781,f10383,f16782,f16783,f10423,f9121,f16784,f8215,f16785,f5955,f16787,f16788,f5682,f2602,f16791,f16792,f2605,f2603,f16796,f16797,f11193,f16799,f16857,f4711,f16858,f512,f16859,f16860,f2029,f16865,f4742,f870,f8985,f2025,f2024,f16879,f795,f16880,f100,f17126,f17291,f17363,f17500,f16751,f17714,f17836,f17994,f18018,f18074,f18098,f18380,f18404,f18466,f18490,f19249,f19868,f19893,f19984,f20009,f20675,f20676,f20677,f20678,f20679,f20680,f20686,f8060,f1689,f20932,f16759,f21203,f16745,f5268,f21722,f21724,f21822,f21823,f21826,f21828,f22177,f22831,f16671,f16670,f23082,f12093,f22859,f13668,f13667,f22979,f16665,f16664,f23156,f7045,f23007,f13663,f13662,f23470,f23466,f23472,f23155,f23154,f23476,f23081,f23478,f23080,f23078,f1708,f23480,f23483,f23484,f21977,f23485,f23486,f23477,f20810,f23474,f20721,f23487,f20720,f20719,f20717,f23489,f20744,f20743,f20742,f23479,f20741,f20740,f20739,f20111,f20061,f19655,f23491,f19654,f19653,f19652,f23473,f23502,f23503,f23505,f23506,f23508,f3914,f23509,f23512,f23488,f1709,f23677,f12944,f4564,f23881,f21726,f23882,f25730,f25731,f16724,f16722,f25739,f25747,f25741,f25740,f19334,f25755,f1542,f14708,f25758,f25757,f25788,f25955,f26004,f26005,f26008,f26089,f26341,f26343,f27175,f28859,f28860,f29416,f16668,f29636,f29448,f13665,f29533,f16669,f29730,f7043,f29565,f13666,f30159,f30391,f30192,f30291,f29630,f29725,f30469,f29637,f30324,f29666,f29753,f36521,f36537,f36536,f36843,f36845,f13656,f37312,f37368,f37367,f37928,f3950,f41180,f3952,f41203,f42061,f42092,f5266,f44363])).
fof(f44363,plain,(
  $false | $spl4),
  inference(trivial_inequality_removal,[],[f44344])).
fof(f44344,plain,(
  s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),sK3))) != s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),sK3))) | $spl4),
  inference(superposition,[],[f44332,f76])).
fof(f44332,plain,(
  ( ! [X0] : (s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),sK3))) != s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),'const.option.SOME_1'(s(fun(sK0,sK1),X0)))))) )),
  inference(subsumption_resolution,[],[f44331,f49])).
fof(f49,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.option.option'(X0),'const.option.SOME_1'(s(X0,happ(s(fun(X1,X0),X2),s(X1,X3))))) = s('type.option.option'(X0),'const.option.OPTION_MAP_2'(s(fun(X1,X0),X2),s('type.option.option'(X1),'const.option.SOME_1'(s(X1,X3)))))) )),
  inference(cnf_transformation,[],[f33])).
fof(f33,plain,(
  ! [X0,X1,X2,X3] : s('type.option.option'(X0),'const.option.SOME_1'(s(X0,happ(s(fun(X1,X0),X2),s(X1,X3))))) = s('type.option.option'(X0),'const.option.OPTION_MAP_2'(s(fun(X1,X0),X2),s('type.option.option'(X1),'const.option.SOME_1'(s(X1,X3)))))),
  inference(flattening,[],[f32])).
fof(f32,plain,(
  ! [X0,X1] : ! [X2,X3] : s('type.option.option'(X0),'const.option.SOME_1'(s(X0,happ(s(fun(X1,X0),X2),s(X1,X3))))) = s('type.option.option'(X0),'const.option.OPTION_MAP_2'(s(fun(X1,X0),X2),s('type.option.option'(X1),'const.option.SOME_1'(s(X1,X3)))))),
  inference(rectify,[],[f11])).
fof(f11,axiom,(
  ! [X7,X6] : ! [X9,X8] : s('type.option.option'(X7),'const.option.SOME_1'(s(X7,happ(s(fun(X6,X7),X9),s(X6,X8))))) = s('type.option.option'(X7),'const.option.OPTION_MAP_2'(s(fun(X6,X7),X9),s('type.option.option'(X6),'const.option.SOME_1'(s(X6,X8)))))),
  file('thm.option.SOME_APPLY_PERMUTE','thm.option.OPTION_MAP_DEF|split|0')).
fof(f44331,plain,(
  ( ! [X0] : (s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,happ(s(fun(sK0,sK1),X0),s(sK0,sK2))))) != s('type.option.option'(sK1),'const.option.OPTION_MAP_2'(s(fun(sK0,sK1),X0),s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))))) | s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),sK3))) != s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),'const.option.SOME_1'(s(fun(sK0,sK1),X0)))))) )),
  inference(forward_demodulation,[],[f44330,f48])).
fof(f48,plain,(
  ( ! [X2,X0,X3,X1] : (s(X0,happ(s(fun(X1,X0),X3),s(X1,X2))) = s(X0,happ(s(fun(fun(X1,X0),X0),'_dstsel_0_x0_1'(s(X1,X2))),s(fun(X1,X0),X3)))) )),
  inference(cnf_transformation,[],[f31])).
fof(f31,plain,(
  ! [X0,X1,X2,X3] : s(X0,happ(s(fun(X1,X0),X3),s(X1,X2))) = s(X0,happ(s(fun(fun(X1,X0),X0),'_dstsel_0_x0_1'(s(X1,X2))),s(fun(X1,X0),X3)))),
  inference(flattening,[],[f30])).
fof(f30,plain,(
  ! [X0,X1] : ! [X2,X3] : s(X0,happ(s(fun(X1,X0),X3),s(X1,X2))) = s(X0,happ(s(fun(fun(X1,X0),X0),'_dstsel_0_x0_1'(s(X1,X2))),s(fun(X1,X0),X3)))),
  inference(rectify,[],[f15])).
fof(f15,axiom,(
  ! [X12,X13] : ! [X14,X15] : s(X12,happ(s(fun(X13,X12),X15),s(X13,X14))) = s(X12,happ(s(fun(fun(X13,X12),X12),'_dstsel_0_x0_1'(s(X13,X14))),s(fun(X13,X12),X15)))),
  file('thm.option.SOME_APPLY_PERMUTE','_dstsel_0_x0_ax')).
fof(f44330,plain,(
  ( ! [X0] : (s('type.option.option'(sK1),'const.option.OPTION_MAP_2'(s(fun(sK0,sK1),X0),s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))))) != s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,happ(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))),s(fun(sK0,sK1),X0))))) | s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),sK3))) != s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),'const.option.SOME_1'(s(fun(sK0,sK1),X0)))))) )),
  inference(forward_demodulation,[],[f44275,f40])).
fof(f40,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.option.option'(X0),'const.option.OPTION_MAP_2'(s(fun(X1,X0),X2),s('type.option.option'(X1),X3))) = s('type.option.option'(X0),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(X1,X0)),'const.option.SOME_1'(s(fun(X1,X0),X2))),s('type.option.option'(X1),X3)))) )),
  inference(cnf_transformation,[],[f19])).
fof(f19,plain,(
  ! [X0,X1,X2,X3] : s('type.option.option'(X0),'const.option.OPTION_MAP_2'(s(fun(X1,X0),X2),s('type.option.option'(X1),X3))) = s('type.option.option'(X0),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(X1,X0)),'const.option.SOME_1'(s(fun(X1,X0),X2))),s('type.option.option'(X1),X3)))),
  inference(flattening,[],[f18])).
fof(f18,plain,(
  ! [X0,X1] : ! [X2,X3] : s('type.option.option'(X0),'const.option.OPTION_MAP_2'(s(fun(X1,X0),X2),s('type.option.option'(X1),X3))) = s('type.option.option'(X0),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(X1,X0)),'const.option.SOME_1'(s(fun(X1,X0),X2))),s('type.option.option'(X1),X3)))),
  inference(rectify,[],[f14])).
fof(f14,axiom,(
  ! [X6,X7] : ! [X9,X8] : s('type.option.option'(X6),'const.option.OPTION_MAP_2'(s(fun(X7,X6),X9),s('type.option.option'(X7),X8))) = s('type.option.option'(X6),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(X7,X6)),'const.option.SOME_1'(s(fun(X7,X6),X9))),s('type.option.option'(X7),X8)))),
  file('thm.option.SOME_APPLY_PERMUTE','thm.option.OPTION_APPLY_def|split|1')).
fof(f44275,plain,(
  ( ! [X0] : (s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,happ(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))),s(fun(sK0,sK1),X0))))) != s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(sK0,sK1)),'const.option.SOME_1'(s(fun(sK0,sK1),X0))),s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))))) | s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),sK3))) != s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),'const.option.SOME_1'(s(fun(sK0,sK1),X0)))))) )),
  inference(superposition,[],[f478,f49])).
fof(f478,plain,(
  ( ! [X0] : (s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(sK0,sK1)),X0),s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))))) != s('type.option.option'(sK1),'const.option.OPTION_MAP_2'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))),s('type.option.option'(fun(sK0,sK1)),X0))) | s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),sK3))) != s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),X0)))) )),
  inference(superposition,[],[f65,f43])).
fof(f43,plain,(
  ( ! [X2,X0,X1] : (s(X0,X1) = s(X0,X2) | s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X1))) != s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X2)))) )),
  inference(cnf_transformation,[],[f36])).
fof(f36,plain,(
  ! [X0,X1,X2] : ((s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X1))) != s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X2))) | s(X0,X1) = s(X0,X2)) & (s(X0,X1) != s(X0,X2) | s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X1))) = s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X2)))))),
  inference(nnf_transformation,[],[f25])).
fof(f25,plain,(
  ! [X0,X1,X2] : (s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X1))) = s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X2))) <=> s(X0,X1) = s(X0,X2))),
  inference(flattening,[],[f24])).
fof(f24,plain,(
  ! [X0] : ! [X1,X2] : (s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X1))) = s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X2))) <=> s(X0,X1) = s(X0,X2))),
  inference(rectify,[],[f10])).
fof(f10,axiom,(
  ! [X6] : ! [X8,X11] : (s('type.option.option'(X6),'const.option.SOME_1'(s(X6,X8))) = s('type.option.option'(X6),'const.option.SOME_1'(s(X6,X11))) <=> s(X6,X8) = s(X6,X11))),
  file('thm.option.SOME_APPLY_PERMUTE','thm.option.SOME_|49||49|')).
fof(f65,plain,(
  s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(sK0,sK1)),sK3),s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))))) != s('type.option.option'(sK1),'const.option.OPTION_MAP_2'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))),s('type.option.option'(fun(sK0,sK1)),sK3)))),
  inference(superposition,[],[f39,f40])).
fof(f39,plain,(
  s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(sK0,sK1)),sK3),s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))))) != s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))),s('type.option.option'(fun(sK0,sK1)),sK3)))),
  inference(cnf_transformation,[],[f35])).
fof(f35,plain,(
  s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(sK0,sK1)),sK3),s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))))) != s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))),s('type.option.option'(fun(sK0,sK1)),sK3)))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2,sK3])],[f34])).
fof(f34,plain,(
  ? [X0,X1,X2,X3] : s('type.option.option'(X1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(X0,X1)),X3),s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X2))))) != s('type.option.option'(X1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(X0,X1),X1)),'const.option.SOME_1'(s(fun(fun(X0,X1),X1),'_dstsel_0_x0_1'(s(X0,X2))))),s('type.option.option'(fun(X0,X1)),X3)))),
  inference(ennf_transformation,[],[f17])).
fof(f17,plain,(
  ~! [X0,X1,X2,X3] : s('type.option.option'(X1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(X0,X1)),X3),s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X2))))) = s('type.option.option'(X1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(X0,X1),X1)),'const.option.SOME_1'(s(fun(fun(X0,X1),X1),'_dstsel_0_x0_1'(s(X0,X2))))),s('type.option.option'(fun(X0,X1)),X3)))),
  inference(flattening,[],[f16])).
fof(f16,plain,(
  ~! [X0,X1] : ! [X2,X3] : s('type.option.option'(X1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(X0,X1)),X3),s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X2))))) = s('type.option.option'(X1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(X0,X1),X1)),'const.option.SOME_1'(s(fun(fun(X0,X1),X1),'_dstsel_0_x0_1'(s(X0,X2))))),s('type.option.option'(fun(X0,X1)),X3)))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7] : ! [X8,X9] : s('type.option.option'(X7),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(X6,X7)),X9),s('type.option.option'(X6),'const.option.SOME_1'(s(X6,X8))))) = s('type.option.option'(X7),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(X6,X7),X7)),'const.option.SOME_1'(s(fun(fun(X6,X7),X7),'_dstsel_0_x0_1'(s(X6,X8))))),s('type.option.option'(fun(X6,X7)),X9)))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7] : ! [X8,X9] : s('type.option.option'(X7),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(X6,X7)),X9),s('type.option.option'(X6),'const.option.SOME_1'(s(X6,X8))))) = s('type.option.option'(X7),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(X6,X7),X7)),'const.option.SOME_1'(s(fun(fun(X6,X7),X7),'_dstsel_0_x0_1'(s(X6,X8))))),s('type.option.option'(fun(X6,X7)),X9)))),
  file('thm.option.SOME_APPLY_PERMUTE','thm.option.SOME_APPLY_PERMUTE')).
fof(f5266,plain,(
  ( ! [X17] : (s('type.option.option'(sK1),X17) = s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,sK4(X17,sK1))))) ) | $spl198),
  inference(cnf_transformation,[],[f5266_D])).
fof(f5266_D,plain,(
  ( ! [X17] : (s('type.option.option'(sK1),X17) = s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,sK4(X17,sK1))))) ) <=> ~$spl198),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl198])])).
fof(f42092,plain,(
  ( ! [X54] : (s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),X54))) != s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),'const.option.OPTION_MAP_2'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))),s('type.option.option'(fun(sK0,sK1)),sK3))))) | s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),'const.option.NONE_0'))) != s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),X54)))) ) | $spl404),
  inference(cnf_transformation,[],[f42092_D])).
fof(f42092_D,plain,(
  ( ! [X54] : (s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),X54))) != s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),'const.option.OPTION_MAP_2'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))),s('type.option.option'(fun(sK0,sK1)),sK3))))) | s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),'const.option.NONE_0'))) != s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),X54)))) ) <=> ~$spl404),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl404])])).
fof(f42061,plain,(
  ( ! [X54,X53] : (s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),X54))) != s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),'const.option.OPTION_MAP_2'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))),s('type.option.option'(fun(sK0,sK1)),sK3))))) | s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),'const.option.NONE_0'))) != s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),X54))) | s('type.option.option'(sK1),X53) = s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,sK4(X53,sK1))))) ) | $spl2),
  inference(trivial_inequality_removal,[],[f42043])).
fof(f42043,plain,(
  ( ! [X54,X53] : (s('type.option.option'(sK1),X53) != s('type.option.option'(sK1),X53) | s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),X54))) != s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),'const.option.OPTION_MAP_2'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))),s('type.option.option'(fun(sK0,sK1)),sK3))))) | s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),'const.option.NONE_0'))) != s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),X54))) | s('type.option.option'(sK1),X53) = s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,sK4(X53,sK1))))) ) | $spl2),
  inference(superposition,[],[f26478,f47])).
fof(f47,plain,(
  ( ! [X0,X1] : (s('type.option.option'(X0),X1) = s('type.option.option'(X0),'const.option.SOME_1'(s(X0,sK4(X1,X0)))) | s('type.option.option'(X0),'const.option.NONE_0') = s('type.option.option'(X0),X1)) )),
  inference(cnf_transformation,[],[f38])).
fof(f38,plain,(
  ! [X0,X1] : (s('type.option.option'(X0),'const.option.NONE_0') = s('type.option.option'(X0),X1) | s('type.option.option'(X0),X1) = s('type.option.option'(X0),'const.option.SOME_1'(s(X0,sK4(X1,X0)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK4])],[f29])).
fof(f29,plain,(
  ! [X0,X1] : (s('type.option.option'(X0),'const.option.NONE_0') = s('type.option.option'(X0),X1) | ? [X2] : s('type.option.option'(X0),X1) = s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X2))))),
  inference(flattening,[],[f28])).
fof(f28,plain,(
  ! [X0] : ! [X1] : (s('type.option.option'(X0),'const.option.NONE_0') = s('type.option.option'(X0),X1) | ? [X2] : s('type.option.option'(X0),X1) = s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X2))))),
  inference(rectify,[],[f9])).
fof(f9,axiom,(
  ! [X6] : ! [X10] : (s('type.option.option'(X6),'const.option.NONE_0') = s('type.option.option'(X6),X10) | ? [X8] : s('type.option.option'(X6),X10) = s('type.option.option'(X6),'const.option.SOME_1'(s(X6,X8))))),
  file('thm.option.SOME_APPLY_PERMUTE','thm.option.option_nchotomy')).
fof(f26478,plain,(
  ( ! [X33,X32] : (s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),X33) | s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),X32))) != s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),'const.option.OPTION_MAP_2'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))),s('type.option.option'(fun(sK0,sK1)),sK3))))) | s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),X32))) != s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),X33)))) ) | $spl2),
  inference(superposition,[],[f26048,f43])).
fof(f26048,plain,(
  ( ! [X0] : (s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),X0) | s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),X0))) != s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),'const.option.OPTION_MAP_2'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))),s('type.option.option'(fun(sK0,sK1)),sK3)))))) ) | $spl2),
  inference(forward_demodulation,[],[f26043,f40])).
fof(f26043,plain,(
  ( ! [X0] : (s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),X0) | s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),X0))) != s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))),s('type.option.option'(fun(sK0,sK1)),sK3)))))) ) | $spl2),
  inference(superposition,[],[f25868,f43])).
fof(f25868,plain,(
  s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))),s('type.option.option'(fun(sK0,sK1)),sK3))) | $spl2),
  inference(backward_demodulation,[],[f72,f39])).
fof(f41203,plain,(
  ( ! [X36] : (s('type.option.option'(fun(fun(sK0,sK1),sK1)),X36) != s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),sK4('const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),sK4('const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2)))),fun(fun(sK0,sK1),sK1)))),fun(fun(sK0,sK1),sK1))))) | s('type.option.option'('type.option.option'(fun(fun(sK0,sK1),sK1))),'const.option.NONE_0') = s('type.option.option'('type.option.option'(fun(fun(sK0,sK1),sK1))),'const.option.SOME_1'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),X36)))) ) | $spl402),
  inference(cnf_transformation,[],[f41203_D])).
fof(f41203_D,plain,(
  ( ! [X36] : (s('type.option.option'(fun(fun(sK0,sK1),sK1)),X36) != s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),sK4('const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),sK4('const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2)))),fun(fun(sK0,sK1),sK1)))),fun(fun(sK0,sK1),sK1))))) | s('type.option.option'('type.option.option'(fun(fun(sK0,sK1),sK1))),'const.option.NONE_0') = s('type.option.option'('type.option.option'(fun(fun(sK0,sK1),sK1))),'const.option.SOME_1'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),X36)))) ) <=> ~$spl402),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl402])])).
fof(f3952,plain,(
  s('type.option.option'('type.option.option'(fun(fun(sK0,sK1),sK1))),'const.option.NONE_0') != s('type.option.option'('type.option.option'(fun(fun(sK0,sK1),sK1))),'const.option.SOME_1'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))))) | $spl119),
  inference(cnf_transformation,[],[f3952_D])).
fof(f3952_D,plain,(
  s('type.option.option'('type.option.option'(fun(fun(sK0,sK1),sK1))),'const.option.NONE_0') != s('type.option.option'('type.option.option'(fun(fun(sK0,sK1),sK1))),'const.option.SOME_1'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))))) <=> ~$spl119),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl119])])).
fof(f41180,plain,(
  ( ! [X36] : (s('type.option.option'('type.option.option'(fun(fun(sK0,sK1),sK1))),'const.option.NONE_0') != s('type.option.option'('type.option.option'(fun(fun(sK0,sK1),sK1))),'const.option.SOME_1'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))))) | s('type.option.option'(fun(fun(sK0,sK1),sK1)),X36) != s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),sK4('const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),sK4('const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2)))),fun(fun(sK0,sK1),sK1)))),fun(fun(sK0,sK1),sK1))))) | s('type.option.option'('type.option.option'(fun(fun(sK0,sK1),sK1))),'const.option.NONE_0') = s('type.option.option'('type.option.option'(fun(fun(sK0,sK1),sK1))),'const.option.SOME_1'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),X36)))) ) | ($spl0 | $spl32 | $spl77)),
  inference(superposition,[],[f9051,f2308])).
fof(f2308,plain,(
  s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))) = s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),sK4('const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),sK4('const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2)))),fun(fun(sK0,sK1),sK1)))),fun(fun(sK0,sK1),sK1))))) | ($spl0 | $spl77)),
  inference(forward_demodulation,[],[f2307,f71])).
fof(f2307,plain,(
  s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),sK4('const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2)))),fun(fun(sK0,sK1),sK1))))) = s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),sK4('const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),sK4('const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2)))),fun(fun(sK0,sK1),sK1)))),fun(fun(sK0,sK1),sK1))))) | ($spl0 | $spl77)),
  inference(subsumption_resolution,[],[f2283,f2188])).
fof(f2283,plain,(
  s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.NONE_0') = s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))) | s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),sK4('const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2)))),fun(fun(sK0,sK1),sK1))))) = s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),sK4('const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),sK4('const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2)))),fun(fun(sK0,sK1),sK1)))),fun(fun(sK0,sK1),sK1))))) | $spl0),
  inference(superposition,[],[f71,f47])).
fof(f9051,plain,(
  ( ! [X14,X12,X15] : (s('type.option.option'(X12),'const.option.NONE_0') != s('type.option.option'(X12),'const.option.SOME_1'(s(X12,X14))) | s(X12,X14) != s(X12,X15) | s('type.option.option'(X12),'const.option.NONE_0') = s('type.option.option'(X12),'const.option.SOME_1'(s(X12,X15)))) ) | $spl32),
  inference(forward_demodulation,[],[f9018,f4951])).
fof(f4951,plain,(
  ( ! [X4,X5] : (s('type.option.option'(X4),'const.option.NONE_0') = s('type.option.option'(X4),'const.option.SOME_1'(s(X4,happ(s(fun('type.option.option'(sK0),X4),X5),s('type.option.option'(sK0),'const.option.NONE_0')))))) ) | $spl32),
  inference(forward_demodulation,[],[f4929,f42])).
fof(f42,plain,(
  ( ! [X2,X0,X1] : (s('type.option.option'(X1),'const.option.NONE_0') = s('type.option.option'(X1),'const.option.OPTION_MAP_2'(s(fun(X0,X1),X2),s('type.option.option'(X0),'const.option.NONE_0')))) )),
  inference(cnf_transformation,[],[f23])).
fof(f23,plain,(
  ! [X0,X1,X2] : s('type.option.option'(X1),'const.option.NONE_0') = s('type.option.option'(X1),'const.option.OPTION_MAP_2'(s(fun(X0,X1),X2),s('type.option.option'(X0),'const.option.NONE_0')))),
  inference(flattening,[],[f22])).
fof(f22,plain,(
  ! [X0,X1] : ! [X2] : s('type.option.option'(X1),'const.option.NONE_0') = s('type.option.option'(X1),'const.option.OPTION_MAP_2'(s(fun(X0,X1),X2),s('type.option.option'(X0),'const.option.NONE_0')))),
  inference(rectify,[],[f12])).
fof(f12,axiom,(
  ! [X6,X7] : ! [X9] : s('type.option.option'(X7),'const.option.NONE_0') = s('type.option.option'(X7),'const.option.OPTION_MAP_2'(s(fun(X6,X7),X9),s('type.option.option'(X6),'const.option.NONE_0')))),
  file('thm.option.SOME_APPLY_PERMUTE','thm.option.OPTION_MAP_DEF|split|1')).
fof(f4929,plain,(
  ( ! [X4,X5] : (s('type.option.option'(X4),'const.option.OPTION_MAP_2'(s(fun('type.option.option'(sK0),X4),X5),s('type.option.option'('type.option.option'(sK0)),'const.option.NONE_0'))) = s('type.option.option'(X4),'const.option.SOME_1'(s(X4,happ(s(fun('type.option.option'(sK0),X4),X5),s('type.option.option'(sK0),'const.option.NONE_0')))))) ) | $spl32),
  inference(superposition,[],[f49,f891])).
fof(f9018,plain,(
  ( ! [X14,X12,X15,X13] : (s(X12,X14) != s(X12,X15) | s('type.option.option'(X12),'const.option.NONE_0') = s('type.option.option'(X12),'const.option.SOME_1'(s(X12,X15))) | s('type.option.option'(X12),'const.option.SOME_1'(s(X12,X14))) != s('type.option.option'(X12),'const.option.SOME_1'(s(X12,happ(s(fun('type.option.option'(sK0),X12),X13),s('type.option.option'(sK0),'const.option.NONE_0')))))) ) | $spl32),
  inference(superposition,[],[f5285,f43])).
fof(f5285,plain,(
  ( ! [X6,X4,X5] : (s(X4,X6) != s(X4,happ(s(fun('type.option.option'(sK0),X4),X5),s('type.option.option'(sK0),'const.option.NONE_0'))) | s('type.option.option'(X4),'const.option.NONE_0') = s('type.option.option'(X4),'const.option.SOME_1'(s(X4,X6)))) ) | $spl32),
  inference(superposition,[],[f4951,f44])).
fof(f44,plain,(
  ( ! [X2,X0,X1] : (s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X1))) = s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X2))) | s(X0,X1) != s(X0,X2)) )),
  inference(cnf_transformation,[],[f36])).
fof(f3950,plain,(
  ( ! [X57] : (s('type.option.option'(fun(fun(sK0,sK1),sK1)),X57) != s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),sK4('const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2)))),fun(fun(sK0,sK1),sK1))))) | s('type.option.option'('type.option.option'(fun(fun(sK0,sK1),sK1))),'const.option.NONE_0') = s('type.option.option'('type.option.option'(fun(fun(sK0,sK1),sK1))),'const.option.SOME_1'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),X57)))) ) | $spl116),
  inference(cnf_transformation,[],[f3950_D])).
fof(f3950_D,plain,(
  ( ! [X57] : (s('type.option.option'(fun(fun(sK0,sK1),sK1)),X57) != s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),sK4('const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2)))),fun(fun(sK0,sK1),sK1))))) | s('type.option.option'('type.option.option'(fun(fun(sK0,sK1),sK1))),'const.option.NONE_0') = s('type.option.option'('type.option.option'(fun(fun(sK0,sK1),sK1))),'const.option.SOME_1'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),X57)))) ) <=> ~$spl116),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl116])])).
fof(f37928,plain,(
  ( ! [X107] : (s('type.option.option'('type.option.option'(fun(fun(sK0,sK1),sK1))),'const.option.NONE_0') != s('type.option.option'('type.option.option'(fun(fun(sK0,sK1),sK1))),'const.option.SOME_1'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))))) | s('type.option.option'(fun(fun(sK0,sK1),sK1)),X107) != s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),sK4('const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2)))),fun(fun(sK0,sK1),sK1))))) | s('type.option.option'('type.option.option'(fun(fun(sK0,sK1),sK1))),'const.option.NONE_0') = s('type.option.option'('type.option.option'(fun(fun(sK0,sK1),sK1))),'const.option.SOME_1'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),X107)))) ) | ($spl0 | $spl32)),
  inference(superposition,[],[f9051,f71])).
fof(f37367,plain,(
  s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),'const.option.NONE_0'))) = s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),sK4('const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),'const.option.NONE_0')),'type.option.option'(fun(sK0,sK1)))))) | $spl398),
  inference(cnf_transformation,[],[f37367_D])).
fof(f37367_D,plain,(
  s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),'const.option.NONE_0'))) = s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),sK4('const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),'const.option.NONE_0')),'type.option.option'(fun(sK0,sK1)))))) <=> ~$spl398),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl398])])).
fof(f37368,plain,(
  ( ! [X4] : (s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.NONE_0') != s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),X4))) | s('type.option.option'(sK1),'const.option.NONE_0') = s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))),s('type.option.option'(fun(sK0,sK1)),X4)))) ) | $spl400),
  inference(cnf_transformation,[],[f37368_D])).
fof(f37368_D,plain,(
  ( ! [X4] : (s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.NONE_0') != s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),X4))) | s('type.option.option'(sK1),'const.option.NONE_0') = s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))),s('type.option.option'(fun(sK0,sK1)),X4)))) ) <=> ~$spl400),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl400])])).
fof(f37312,plain,(
  ( ! [X4] : (s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.NONE_0') != s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),X4))) | s('type.option.option'(sK1),'const.option.NONE_0') = s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))),s('type.option.option'(fun(sK0,sK1)),X4))) | s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),'const.option.NONE_0'))) = s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),sK4('const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),'const.option.NONE_0')),'type.option.option'(fun(sK0,sK1))))))) ) | $spl6),
  inference(superposition,[],[f322,f47])).
fof(f322,plain,(
  ( ! [X1] : (s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),'const.option.NONE_0'))) != s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),X1))) | s('type.option.option'(sK1),'const.option.NONE_0') = s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))),s('type.option.option'(fun(sK0,sK1)),X1)))) ) | $spl6),
  inference(superposition,[],[f77,f43])).
fof(f77,plain,(
  s('type.option.option'(sK1),'const.option.NONE_0') = s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))),s('type.option.option'(fun(sK0,sK1)),'const.option.NONE_0'))) | $spl6),
  inference(cnf_transformation,[],[f77_D])).
fof(f77_D,plain,(
  s('type.option.option'(sK1),'const.option.NONE_0') = s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))),s('type.option.option'(fun(sK0,sK1)),'const.option.NONE_0'))) <=> ~$spl6),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl6])])).
fof(f13656,plain,(
  s('type.option.option'(sK1),'const.option.OPTION_MAP_2'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))),s('type.option.option'(fun(sK0,sK1)),sK3))) = s('type.option.option'(sK1),sK4('const.option.SOME_1'(s('type.option.option'(sK1),'const.option.OPTION_MAP_2'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))),s('type.option.option'(fun(sK0,sK1)),sK3)))),'type.option.option'(sK1))) | $spl242),
  inference(cnf_transformation,[],[f13656_D])).
fof(f13656_D,plain,(
  s('type.option.option'(sK1),'const.option.OPTION_MAP_2'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))),s('type.option.option'(fun(sK0,sK1)),sK3))) = s('type.option.option'(sK1),sK4('const.option.SOME_1'(s('type.option.option'(sK1),'const.option.OPTION_MAP_2'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))),s('type.option.option'(fun(sK0,sK1)),sK3)))),'type.option.option'(sK1))) <=> ~$spl242),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl242])])).
fof(f36845,plain,(
  s('type.option.option'(sK1),'const.option.OPTION_MAP_2'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))),s('type.option.option'(fun(sK0,sK1)),sK3))) = s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,sK4('const.option.SOME_1'(s(sK1,sK4('const.option.SOME_1'(s(sK1,sK4('const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))),s('type.option.option'(fun(sK0,sK1)),sK3)),sK1))),sK1))),sK1)))) | $spl396),
  inference(cnf_transformation,[],[f36845_D])).
fof(f36845_D,plain,(
  s('type.option.option'(sK1),'const.option.OPTION_MAP_2'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))),s('type.option.option'(fun(sK0,sK1)),sK3))) = s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,sK4('const.option.SOME_1'(s(sK1,sK4('const.option.SOME_1'(s(sK1,sK4('const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))),s('type.option.option'(fun(sK0,sK1)),sK3)),sK1))),sK1))),sK1)))) <=> ~$spl396),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl396])])).
fof(f36843,plain,(
  s('type.option.option'(sK1),'const.option.OPTION_MAP_2'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))),s('type.option.option'(fun(sK0,sK1)),sK3))) = s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,sK4('const.option.SOME_1'(s(sK1,sK4('const.option.SOME_1'(s(sK1,sK4('const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))),s('type.option.option'(fun(sK0,sK1)),sK3)),sK1))),sK1))),sK1)))) | s('type.option.option'(sK1),'const.option.OPTION_MAP_2'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))),s('type.option.option'(fun(sK0,sK1)),sK3))) = s('type.option.option'(sK1),sK4('const.option.SOME_1'(s('type.option.option'(sK1),'const.option.OPTION_MAP_2'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))),s('type.option.option'(fun(sK0,sK1)),sK3)))),'type.option.option'(sK1))) | ($spl6 | $spl100 | $spl115)),
  inference(forward_demodulation,[],[f36803,f2605])).
fof(f36803,plain,(
  s('type.option.option'(sK1),'const.option.OPTION_MAP_2'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))),s('type.option.option'(fun(sK0,sK1)),sK3))) = s('type.option.option'(sK1),sK4('const.option.SOME_1'(s('type.option.option'(sK1),'const.option.OPTION_MAP_2'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))),s('type.option.option'(fun(sK0,sK1)),sK3)))),'type.option.option'(sK1))) | s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,sK4('const.option.SOME_1'(s(sK1,sK4('const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))),s('type.option.option'(fun(sK0,sK1)),sK3)),sK1))),sK1)))) = s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,sK4('const.option.SOME_1'(s(sK1,sK4('const.option.SOME_1'(s(sK1,sK4('const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))),s('type.option.option'(fun(sK0,sK1)),sK3)),sK1))),sK1))),sK1)))) | ($spl6 | $spl100 | $spl115)),
  inference(superposition,[],[f13528,f2605])).
fof(f13528,plain,(
  ( ! [X0] : (s('type.option.option'(sK1),X0) = s('type.option.option'(sK1),sK4('const.option.SOME_1'(s('type.option.option'(sK1),X0)),'type.option.option'(sK1))) | s('type.option.option'(sK1),X0) = s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,sK4(X0,sK1))))) ) | ($spl6 | $spl115)),
  inference(superposition,[],[f13522,f47])).
fof(f13522,plain,(
  s('type.option.option'(sK1),'const.option.NONE_0') = s('type.option.option'(sK1),sK4('const.option.SOME_1'(s('type.option.option'(sK1),'const.option.NONE_0')),'type.option.option'(sK1))) | ($spl6 | $spl115)),
  inference(forward_demodulation,[],[f13472,f77])).
fof(f13472,plain,(
  s('type.option.option'(sK1),sK4('const.option.SOME_1'(s('type.option.option'(sK1),'const.option.NONE_0')),'type.option.option'(sK1))) = s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))),s('type.option.option'(fun(sK0,sK1)),'const.option.NONE_0'))) | ($spl6 | $spl115)),
  inference(trivial_inequality_removal,[],[f13456])).
fof(f13456,plain,(
  s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),'const.option.NONE_0'))) != s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),'const.option.NONE_0'))) | s('type.option.option'(sK1),sK4('const.option.SOME_1'(s('type.option.option'(sK1),'const.option.NONE_0')),'type.option.option'(sK1))) = s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))),s('type.option.option'(fun(sK0,sK1)),'const.option.NONE_0'))) | ($spl6 | $spl115)),
  inference(superposition,[],[f330,f3708])).
fof(f3708,plain,(
  s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),'const.option.NONE_0'))) = s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),sK4('const.option.SOME_1'(s('type.option.option'(sK1),'const.option.NONE_0')),'type.option.option'(sK1))))) | $spl115),
  inference(trivial_inequality_removal,[],[f3705])).
fof(f3705,plain,(
  s('type.option.option'('type.option.option'(sK1)),'const.option.NONE_0') != s('type.option.option'('type.option.option'(sK1)),'const.option.NONE_0') | s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),'const.option.NONE_0'))) = s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),sK4('const.option.SOME_1'(s('type.option.option'(sK1),'const.option.NONE_0')),'type.option.option'(sK1))))) | $spl115),
  inference(superposition,[],[f3698,f47])).
fof(f330,plain,(
  ( ! [X3] : (s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),'const.option.NONE_0'))) != s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),X3))) | s('type.option.option'(sK1),X3) = s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))),s('type.option.option'(fun(sK0,sK1)),'const.option.NONE_0')))) ) | $spl6),
  inference(superposition,[],[f43,f77])).
fof(f36536,plain,(
  s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),'const.option.OPTION_MAP_2'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))),s('type.option.option'(fun(sK0,sK1)),sK3))))) = s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),sK4('const.option.SOME_1'(s('type.option.option'(sK1),'const.option.OPTION_MAP_2'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))),s('type.option.option'(fun(sK0,sK1)),sK3)))),'type.option.option'(sK1))))) | $spl392),
  inference(cnf_transformation,[],[f36536_D])).
fof(f36536_D,plain,(
  s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),'const.option.OPTION_MAP_2'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))),s('type.option.option'(fun(sK0,sK1)),sK3))))) = s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),sK4('const.option.SOME_1'(s('type.option.option'(sK1),'const.option.OPTION_MAP_2'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))),s('type.option.option'(fun(sK0,sK1)),sK3)))),'type.option.option'(sK1))))) <=> ~$spl392),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl392])])).
fof(f36537,plain,(
  ( ! [X6,X7] : (s('type.option.option'('type.option.option'(sK1)),'const.option.NONE_0') != s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),X6))) | s('type.option.option'(sK1),X7) = s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,sK4(X7,sK1)))) | s('type.option.option'(sK1),X6) != s('type.option.option'(sK1),X7)) ) | $spl394),
  inference(cnf_transformation,[],[f36537_D])).
fof(f36537_D,plain,(
  ( ! [X6,X7] : (s('type.option.option'('type.option.option'(sK1)),'const.option.NONE_0') != s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),X6))) | s('type.option.option'(sK1),X7) = s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,sK4(X7,sK1)))) | s('type.option.option'(sK1),X6) != s('type.option.option'(sK1),X7)) ) <=> ~$spl394),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl394])])).
fof(f36521,plain,(
  ( ! [X6,X7] : (s('type.option.option'('type.option.option'(sK1)),'const.option.NONE_0') != s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),X6))) | s('type.option.option'(sK1),X6) != s('type.option.option'(sK1),X7) | s('type.option.option'(sK1),X7) = s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,sK4(X7,sK1)))) | s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),'const.option.OPTION_MAP_2'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))),s('type.option.option'(fun(sK0,sK1)),sK3))))) = s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),sK4('const.option.SOME_1'(s('type.option.option'(sK1),'const.option.OPTION_MAP_2'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))),s('type.option.option'(fun(sK0,sK1)),sK3)))),'type.option.option'(sK1)))))) ) | $spl2),
  inference(superposition,[],[f26451,f47])).
fof(f26451,plain,(
  ( ! [X0,X1] : (s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),X1))) != s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),'const.option.OPTION_MAP_2'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))),s('type.option.option'(fun(sK0,sK1)),sK3))))) | s('type.option.option'(sK1),X0) != s('type.option.option'(sK1),X1) | s('type.option.option'(sK1),X0) = s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,sK4(X0,sK1))))) ) | $spl2),
  inference(superposition,[],[f26048,f47])).
fof(f29753,plain,(
  ( ! [X248] : (s('type.option.option'(sK1),happ(s(fun(sK0,'type.option.option'(sK1)),X248),s(sK0,sK4('const.option.NONE_0',sK0)))) = s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,sK4(happ(s(fun(sK0,'type.option.option'(sK1)),X248),s(sK0,sK4('const.option.NONE_0',sK0))),sK1))))) ) | $spl390),
  inference(cnf_transformation,[],[f29753_D])).
fof(f29753_D,plain,(
  ( ! [X248] : (s('type.option.option'(sK1),happ(s(fun(sK0,'type.option.option'(sK1)),X248),s(sK0,sK4('const.option.NONE_0',sK0)))) = s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,sK4(happ(s(fun(sK0,'type.option.option'(sK1)),X248),s(sK0,sK4('const.option.NONE_0',sK0))),sK1))))) ) <=> ~$spl390),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl390])])).
fof(f29666,plain,(
  ( ! [X291] : (s('type.option.option'(sK1),happ(s(fun(sK0,'type.option.option'(sK1)),X291),s(sK0,sK4('const.option.NONE_0',sK0)))) = s('type.option.option'(sK1),sK4('const.option.SOME_1'(s('type.option.option'(sK1),happ(s(fun(sK0,'type.option.option'(sK1)),X291),s(sK0,sK4('const.option.NONE_0',sK0))))),'type.option.option'(sK1)))) ) | $spl386),
  inference(cnf_transformation,[],[f29666_D])).
fof(f29666_D,plain,(
  ( ! [X291] : (s('type.option.option'(sK1),happ(s(fun(sK0,'type.option.option'(sK1)),X291),s(sK0,sK4('const.option.NONE_0',sK0)))) = s('type.option.option'(sK1),sK4('const.option.SOME_1'(s('type.option.option'(sK1),happ(s(fun(sK0,'type.option.option'(sK1)),X291),s(sK0,sK4('const.option.NONE_0',sK0))))),'type.option.option'(sK1)))) ) <=> ~$spl386),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl386])])).
fof(f30324,plain,(
  ( ! [X282,X283] : (s('type.option.option'(sK1),happ(s(fun(sK0,'type.option.option'(sK1)),X283),s(sK0,sK4('const.option.NONE_0',sK0)))) = s('type.option.option'(sK1),sK4('const.option.SOME_1'(s('type.option.option'(sK1),happ(s(fun(sK0,'type.option.option'(sK1)),X283),s(sK0,sK4('const.option.NONE_0',sK0))))),'type.option.option'(sK1))) | s('type.option.option'(sK1),happ(s(fun(sK0,'type.option.option'(sK1)),X282),s(sK0,sK4('const.option.NONE_0',sK0)))) = s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,sK4(happ(s(fun(sK0,'type.option.option'(sK1)),X282),s(sK0,sK4('const.option.NONE_0',sK0))),sK1))))) ) | ($spl6 | $spl32 | $spl115 | $spl376)),
  inference(superposition,[],[f13528,f29322])).
fof(f29322,plain,(
  ( ! [X2,X0,X3] : (s(X0,happ(s(fun(sK0,X0),X2),s(sK0,sK4('const.option.NONE_0',sK0)))) = s(X0,happ(s(fun(sK0,X0),X3),s(sK0,sK4('const.option.NONE_0',sK0))))) ) | ($spl32 | $spl376)),
  inference(superposition,[],[f26853,f26853])).
fof(f26853,plain,(
  ( ! [X19,X20,X18] : (s(X18,happ(s(fun('type.option.option'(sK0),X18),X20),s('type.option.option'(sK0),'const.option.NONE_0'))) = s(X18,happ(s(fun(sK0,X18),X19),s(sK0,sK4('const.option.NONE_0',sK0))))) ) | ($spl32 | $spl376)),
  inference(trivial_inequality_removal,[],[f26794])).
fof(f26794,plain,(
  ( ! [X19,X20,X18] : (s('type.option.option'(X18),'const.option.NONE_0') != s('type.option.option'(X18),'const.option.NONE_0') | s(X18,happ(s(fun('type.option.option'(sK0),X18),X20),s('type.option.option'(sK0),'const.option.NONE_0'))) = s(X18,happ(s(fun(sK0,X18),X19),s(sK0,sK4('const.option.NONE_0',sK0))))) ) | ($spl32 | $spl376)),
  inference(superposition,[],[f5290,f26133])).
fof(f26133,plain,(
  ( ! [X4,X5] : (s('type.option.option'(X4),'const.option.NONE_0') = s('type.option.option'(X4),'const.option.SOME_1'(s(X4,happ(s(fun(sK0,X4),X5),s(sK0,sK4('const.option.NONE_0',sK0))))))) ) | $spl376),
  inference(forward_demodulation,[],[f26103,f42])).
fof(f26103,plain,(
  ( ! [X4,X5] : (s('type.option.option'(X4),'const.option.OPTION_MAP_2'(s(fun(sK0,X4),X5),s('type.option.option'(sK0),'const.option.NONE_0'))) = s('type.option.option'(X4),'const.option.SOME_1'(s(X4,happ(s(fun(sK0,X4),X5),s(sK0,sK4('const.option.NONE_0',sK0))))))) ) | $spl376),
  inference(superposition,[],[f49,f25757])).
fof(f5290,plain,(
  ( ! [X4,X2,X3] : (s('type.option.option'(X2),'const.option.NONE_0') != s('type.option.option'(X2),'const.option.SOME_1'(s(X2,X4))) | s(X2,X4) = s(X2,happ(s(fun('type.option.option'(sK0),X2),X3),s('type.option.option'(sK0),'const.option.NONE_0')))) ) | $spl32),
  inference(superposition,[],[f43,f4951])).
fof(f29637,plain,(
  ( ! [X231] : (s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),happ(s(fun(sK0,'type.option.option'(fun(fun(sK0,sK1),sK1))),X231),s(sK0,sK4('const.option.NONE_0',sK0)))),s('type.option.option'(fun(sK0,sK1)),sK3)))) ) | $spl384),
  inference(cnf_transformation,[],[f29637_D])).
fof(f29637_D,plain,(
  ( ! [X231] : (s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),happ(s(fun(sK0,'type.option.option'(fun(fun(sK0,sK1),sK1))),X231),s(sK0,sK4('const.option.NONE_0',sK0)))),s('type.option.option'(fun(sK0,sK1)),sK3)))) ) <=> ~$spl384),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl384])])).
fof(f30469,plain,(
  ( ! [X221] : (s('type.option.option'('type.option.option'(fun(fun(sK0,sK1),sK1))),'const.option.NONE_0') != s('type.option.option'('type.option.option'(fun(fun(sK0,sK1),sK1))),'const.option.SOME_1'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))))) | s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),happ(s(fun(sK0,'type.option.option'(fun(fun(sK0,sK1),sK1))),X221),s(sK0,sK4('const.option.NONE_0',sK0)))),s('type.option.option'(fun(sK0,sK1)),sK3)))) ) | ($spl2 | $spl32 | $spl376)),
  inference(forward_demodulation,[],[f30296,f26133])).
fof(f30296,plain,(
  ( ! [X220,X221] : (s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),happ(s(fun(sK0,'type.option.option'(fun(fun(sK0,sK1),sK1))),X221),s(sK0,sK4('const.option.NONE_0',sK0)))),s('type.option.option'(fun(sK0,sK1)),sK3))) | s('type.option.option'('type.option.option'(fun(fun(sK0,sK1),sK1))),'const.option.SOME_1'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))))) != s('type.option.option'('type.option.option'(fun(fun(sK0,sK1),sK1))),'const.option.SOME_1'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),happ(s(fun(sK0,'type.option.option'(fun(fun(sK0,sK1),sK1))),X220),s(sK0,sK4('const.option.NONE_0',sK0))))))) ) | ($spl2 | $spl32 | $spl376)),
  inference(superposition,[],[f26035,f29322])).
fof(f26035,plain,(
  ( ! [X2] : (s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),X2),s('type.option.option'(fun(sK0,sK1)),sK3))) | s('type.option.option'('type.option.option'(fun(fun(sK0,sK1),sK1))),'const.option.SOME_1'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),X2))) != s('type.option.option'('type.option.option'(fun(fun(sK0,sK1),sK1))),'const.option.SOME_1'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2)))))))) ) | $spl2),
  inference(superposition,[],[f25868,f43])).
fof(f29725,plain,(
  ( ! [X178] : (s('type.option.option'(fun(sK0,sK1)),happ(s(fun(sK0,'type.option.option'(fun(sK0,sK1))),X178),s(sK0,sK4('const.option.NONE_0',sK0)))) = s('type.option.option'(fun(sK0,sK1)),'const.option.SOME_1'(s(fun(sK0,sK1),sK4(happ(s(fun(sK0,'type.option.option'(fun(sK0,sK1))),X178),s(sK0,sK4('const.option.NONE_0',sK0))),fun(sK0,sK1)))))) ) | $spl388),
  inference(cnf_transformation,[],[f29725_D])).
fof(f29725_D,plain,(
  ( ! [X178] : (s('type.option.option'(fun(sK0,sK1)),happ(s(fun(sK0,'type.option.option'(fun(sK0,sK1))),X178),s(sK0,sK4('const.option.NONE_0',sK0)))) = s('type.option.option'(fun(sK0,sK1)),'const.option.SOME_1'(s(fun(sK0,sK1),sK4(happ(s(fun(sK0,'type.option.option'(fun(sK0,sK1))),X178),s(sK0,sK4('const.option.NONE_0',sK0))),fun(sK0,sK1)))))) ) <=> ~$spl388),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl388])])).
fof(f29630,plain,(
  ( ! [X221] : (s('type.option.option'(sK1),'const.option.NONE_0') = s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))),s('type.option.option'(fun(sK0,sK1)),happ(s(fun(sK0,'type.option.option'(fun(sK0,sK1))),X221),s(sK0,sK4('const.option.NONE_0',sK0))))))) ) | $spl382),
  inference(cnf_transformation,[],[f29630_D])).
fof(f29630_D,plain,(
  ( ! [X221] : (s('type.option.option'(sK1),'const.option.NONE_0') = s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))),s('type.option.option'(fun(sK0,sK1)),happ(s(fun(sK0,'type.option.option'(fun(sK0,sK1))),X221),s(sK0,sK4('const.option.NONE_0',sK0))))))) ) <=> ~$spl382),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl382])])).
fof(f30291,plain,(
  ( ! [X210,X211] : (s('type.option.option'(sK1),'const.option.NONE_0') = s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))),s('type.option.option'(fun(sK0,sK1)),happ(s(fun(sK0,'type.option.option'(fun(sK0,sK1))),X211),s(sK0,sK4('const.option.NONE_0',sK0)))))) | s('type.option.option'(fun(sK0,sK1)),happ(s(fun(sK0,'type.option.option'(fun(sK0,sK1))),X210),s(sK0,sK4('const.option.NONE_0',sK0)))) = s('type.option.option'(fun(sK0,sK1)),'const.option.SOME_1'(s(fun(sK0,sK1),sK4(happ(s(fun(sK0,'type.option.option'(fun(sK0,sK1))),X210),s(sK0,sK4('const.option.NONE_0',sK0))),fun(sK0,sK1)))))) ) | ($spl6 | $spl32 | $spl376)),
  inference(superposition,[],[f320,f29322])).
fof(f320,plain,(
  ( ! [X0] : (s('type.option.option'(sK1),'const.option.NONE_0') = s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))),s('type.option.option'(fun(sK0,sK1)),X0))) | s('type.option.option'(fun(sK0,sK1)),X0) = s('type.option.option'(fun(sK0,sK1)),'const.option.SOME_1'(s(fun(sK0,sK1),sK4(X0,fun(sK0,sK1)))))) ) | $spl6),
  inference(superposition,[],[f77,f47])).
fof(f30192,plain,(
  ( ! [X282,X283] : (s('type.option.option'(sK1),happ(s(fun(sK0,'type.option.option'(sK1)),X283),s(sK0,sK4('const.option.NONE_0',sK0)))) = s('type.option.option'(sK1),sK4('const.option.SOME_1'(s('type.option.option'(sK1),happ(s(fun(sK0,'type.option.option'(sK1)),X283),s(sK0,sK4('const.option.NONE_0',sK0))))),'type.option.option'(sK1))) | s('type.option.option'(sK1),happ(s(fun(sK0,'type.option.option'(sK1)),X282),s(sK0,sK4('const.option.NONE_0',sK0)))) = s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,sK4(happ(s(fun(sK0,'type.option.option'(sK1)),X282),s(sK0,sK4('const.option.NONE_0',sK0))),sK1))))) ) | ($spl6 | $spl32 | $spl115 | $spl376)),
  inference(superposition,[],[f13528,f29322])).
fof(f30391,plain,(
  ( ! [X221] : (s('type.option.option'('type.option.option'(fun(fun(sK0,sK1),sK1))),'const.option.NONE_0') != s('type.option.option'('type.option.option'(fun(fun(sK0,sK1),sK1))),'const.option.SOME_1'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))))) | s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),happ(s(fun(sK0,'type.option.option'(fun(fun(sK0,sK1),sK1))),X221),s(sK0,sK4('const.option.NONE_0',sK0)))),s('type.option.option'(fun(sK0,sK1)),sK3)))) ) | ($spl2 | $spl32 | $spl376)),
  inference(forward_demodulation,[],[f30164,f26133])).
fof(f30164,plain,(
  ( ! [X220,X221] : (s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),happ(s(fun(sK0,'type.option.option'(fun(fun(sK0,sK1),sK1))),X221),s(sK0,sK4('const.option.NONE_0',sK0)))),s('type.option.option'(fun(sK0,sK1)),sK3))) | s('type.option.option'('type.option.option'(fun(fun(sK0,sK1),sK1))),'const.option.SOME_1'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))))) != s('type.option.option'('type.option.option'(fun(fun(sK0,sK1),sK1))),'const.option.SOME_1'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),happ(s(fun(sK0,'type.option.option'(fun(fun(sK0,sK1),sK1))),X220),s(sK0,sK4('const.option.NONE_0',sK0))))))) ) | ($spl2 | $spl32 | $spl376)),
  inference(superposition,[],[f26035,f29322])).
fof(f30159,plain,(
  ( ! [X210,X211] : (s('type.option.option'(sK1),'const.option.NONE_0') = s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))),s('type.option.option'(fun(sK0,sK1)),happ(s(fun(sK0,'type.option.option'(fun(sK0,sK1))),X211),s(sK0,sK4('const.option.NONE_0',sK0)))))) | s('type.option.option'(fun(sK0,sK1)),happ(s(fun(sK0,'type.option.option'(fun(sK0,sK1))),X210),s(sK0,sK4('const.option.NONE_0',sK0)))) = s('type.option.option'(fun(sK0,sK1)),'const.option.SOME_1'(s(fun(sK0,sK1),sK4(happ(s(fun(sK0,'type.option.option'(fun(sK0,sK1))),X210),s(sK0,sK4('const.option.NONE_0',sK0))),fun(sK0,sK1)))))) ) | ($spl6 | $spl32 | $spl376)),
  inference(superposition,[],[f320,f29322])).
fof(f13666,plain,(
  ( ! [X53] : (s('type.option.option'(sK1),happ(s(fun('type.option.option'(sK0),'type.option.option'(sK1)),X53),s('type.option.option'(sK0),'const.option.NONE_0'))) = s('type.option.option'(sK1),sK4('const.option.SOME_1'(s('type.option.option'(sK1),happ(s(fun('type.option.option'(sK0),'type.option.option'(sK1)),X53),s('type.option.option'(sK0),'const.option.NONE_0')))),'type.option.option'(sK1)))) ) | $spl250),
  inference(cnf_transformation,[],[f13666_D])).
fof(f13666_D,plain,(
  ( ! [X53] : (s('type.option.option'(sK1),happ(s(fun('type.option.option'(sK0),'type.option.option'(sK1)),X53),s('type.option.option'(sK0),'const.option.NONE_0'))) = s('type.option.option'(sK1),sK4('const.option.SOME_1'(s('type.option.option'(sK1),happ(s(fun('type.option.option'(sK0),'type.option.option'(sK1)),X53),s('type.option.option'(sK0),'const.option.NONE_0')))),'type.option.option'(sK1)))) ) <=> ~$spl250),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl250])])).
fof(f29565,plain,(
  ( ! [X249,X248] : (s('type.option.option'(sK1),happ(s(fun('type.option.option'(sK0),'type.option.option'(sK1)),X249),s('type.option.option'(sK0),'const.option.NONE_0'))) = s('type.option.option'(sK1),sK4('const.option.SOME_1'(s('type.option.option'(sK1),happ(s(fun('type.option.option'(sK0),'type.option.option'(sK1)),X249),s('type.option.option'(sK0),'const.option.NONE_0')))),'type.option.option'(sK1))) | s('type.option.option'(sK1),happ(s(fun(sK0,'type.option.option'(sK1)),X248),s(sK0,sK4('const.option.NONE_0',sK0)))) = s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,sK4(happ(s(fun(sK0,'type.option.option'(sK1)),X248),s(sK0,sK4('const.option.NONE_0',sK0))),sK1))))) ) | ($spl6 | $spl32 | $spl115 | $spl376)),
  inference(superposition,[],[f13528,f26853])).
fof(f7043,plain,(
  ( ! [X30] : (s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),happ(s(fun('type.option.option'(sK0),'type.option.option'(fun(fun(sK0,sK1),sK1))),X30),s('type.option.option'(sK0),'const.option.NONE_0'))),s('type.option.option'(fun(sK0,sK1)),sK3)))) ) | $spl214),
  inference(cnf_transformation,[],[f7043_D])).
fof(f7043_D,plain,(
  ( ! [X30] : (s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),happ(s(fun('type.option.option'(sK0),'type.option.option'(fun(fun(sK0,sK1),sK1))),X30),s('type.option.option'(sK0),'const.option.NONE_0'))),s('type.option.option'(fun(sK0,sK1)),sK3)))) ) <=> ~$spl214),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl214])])).
fof(f29730,plain,(
  ( ! [X189] : (s('type.option.option'('type.option.option'(fun(fun(sK0,sK1),sK1))),'const.option.NONE_0') != s('type.option.option'('type.option.option'(fun(fun(sK0,sK1),sK1))),'const.option.SOME_1'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))))) | s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),happ(s(fun('type.option.option'(sK0),'type.option.option'(fun(fun(sK0,sK1),sK1))),X189),s('type.option.option'(sK0),'const.option.NONE_0'))),s('type.option.option'(fun(sK0,sK1)),sK3)))) ) | ($spl2 | $spl32 | $spl376)),
  inference(forward_demodulation,[],[f29538,f26133])).
fof(f29538,plain,(
  ( ! [X189,X188] : (s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),happ(s(fun('type.option.option'(sK0),'type.option.option'(fun(fun(sK0,sK1),sK1))),X189),s('type.option.option'(sK0),'const.option.NONE_0'))),s('type.option.option'(fun(sK0,sK1)),sK3))) | s('type.option.option'('type.option.option'(fun(fun(sK0,sK1),sK1))),'const.option.SOME_1'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))))) != s('type.option.option'('type.option.option'(fun(fun(sK0,sK1),sK1))),'const.option.SOME_1'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),happ(s(fun(sK0,'type.option.option'(fun(fun(sK0,sK1),sK1))),X188),s(sK0,sK4('const.option.NONE_0',sK0))))))) ) | ($spl2 | $spl32 | $spl376)),
  inference(superposition,[],[f26035,f26853])).
fof(f16669,plain,(
  ( ! [X51] : (s('type.option.option'(sK1),'const.option.NONE_0') = s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))),s('type.option.option'(fun(sK0,sK1)),happ(s(fun('type.option.option'(sK0),'type.option.option'(fun(sK0,sK1))),X51),s('type.option.option'(sK0),'const.option.NONE_0')))))) ) | $spl264),
  inference(cnf_transformation,[],[f16669_D])).
fof(f16669_D,plain,(
  ( ! [X51] : (s('type.option.option'(sK1),'const.option.NONE_0') = s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))),s('type.option.option'(fun(sK0,sK1)),happ(s(fun('type.option.option'(sK0),'type.option.option'(fun(sK0,sK1))),X51),s('type.option.option'(sK0),'const.option.NONE_0')))))) ) <=> ~$spl264),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl264])])).
fof(f29533,plain,(
  ( ! [X178,X179] : (s('type.option.option'(sK1),'const.option.NONE_0') = s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))),s('type.option.option'(fun(sK0,sK1)),happ(s(fun('type.option.option'(sK0),'type.option.option'(fun(sK0,sK1))),X179),s('type.option.option'(sK0),'const.option.NONE_0'))))) | s('type.option.option'(fun(sK0,sK1)),happ(s(fun(sK0,'type.option.option'(fun(sK0,sK1))),X178),s(sK0,sK4('const.option.NONE_0',sK0)))) = s('type.option.option'(fun(sK0,sK1)),'const.option.SOME_1'(s(fun(sK0,sK1),sK4(happ(s(fun(sK0,'type.option.option'(fun(sK0,sK1))),X178),s(sK0,sK4('const.option.NONE_0',sK0))),fun(sK0,sK1)))))) ) | ($spl6 | $spl32 | $spl376)),
  inference(superposition,[],[f320,f26853])).
fof(f13665,plain,(
  ( ! [X52] : (s('type.option.option'(sK1),happ(s(fun('type.option.option'(sK0),'type.option.option'(sK1)),X52),s('type.option.option'(sK0),'const.option.NONE_0'))) = s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,sK4(happ(s(fun('type.option.option'(sK0),'type.option.option'(sK1)),X52),s('type.option.option'(sK0),'const.option.NONE_0')),sK1))))) ) | $spl248),
  inference(cnf_transformation,[],[f13665_D])).
fof(f13665_D,plain,(
  ( ! [X52] : (s('type.option.option'(sK1),happ(s(fun('type.option.option'(sK0),'type.option.option'(sK1)),X52),s('type.option.option'(sK0),'const.option.NONE_0'))) = s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,sK4(happ(s(fun('type.option.option'(sK0),'type.option.option'(sK1)),X52),s('type.option.option'(sK0),'const.option.NONE_0')),sK1))))) ) <=> ~$spl248),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl248])])).
fof(f29448,plain,(
  ( ! [X290,X291] : (s('type.option.option'(sK1),happ(s(fun(sK0,'type.option.option'(sK1)),X291),s(sK0,sK4('const.option.NONE_0',sK0)))) = s('type.option.option'(sK1),sK4('const.option.SOME_1'(s('type.option.option'(sK1),happ(s(fun(sK0,'type.option.option'(sK1)),X291),s(sK0,sK4('const.option.NONE_0',sK0))))),'type.option.option'(sK1))) | s('type.option.option'(sK1),happ(s(fun('type.option.option'(sK0),'type.option.option'(sK1)),X290),s('type.option.option'(sK0),'const.option.NONE_0'))) = s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,sK4(happ(s(fun('type.option.option'(sK0),'type.option.option'(sK1)),X290),s('type.option.option'(sK0),'const.option.NONE_0')),sK1))))) ) | ($spl6 | $spl32 | $spl115 | $spl376)),
  inference(superposition,[],[f13528,f26853])).
fof(f29636,plain,(
  ( ! [X231] : (s('type.option.option'('type.option.option'(fun(fun(sK0,sK1),sK1))),'const.option.NONE_0') != s('type.option.option'('type.option.option'(fun(fun(sK0,sK1),sK1))),'const.option.SOME_1'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))))) | s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),happ(s(fun(sK0,'type.option.option'(fun(fun(sK0,sK1),sK1))),X231),s(sK0,sK4('const.option.NONE_0',sK0)))),s('type.option.option'(fun(sK0,sK1)),sK3)))) ) | ($spl2 | $spl32 | $spl376)),
  inference(forward_demodulation,[],[f29421,f4951])).
fof(f29421,plain,(
  ( ! [X231,X230] : (s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),happ(s(fun(sK0,'type.option.option'(fun(fun(sK0,sK1),sK1))),X231),s(sK0,sK4('const.option.NONE_0',sK0)))),s('type.option.option'(fun(sK0,sK1)),sK3))) | s('type.option.option'('type.option.option'(fun(fun(sK0,sK1),sK1))),'const.option.SOME_1'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))))) != s('type.option.option'('type.option.option'(fun(fun(sK0,sK1),sK1))),'const.option.SOME_1'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),happ(s(fun('type.option.option'(sK0),'type.option.option'(fun(fun(sK0,sK1),sK1))),X230),s('type.option.option'(sK0),'const.option.NONE_0')))))) ) | ($spl2 | $spl32 | $spl376)),
  inference(superposition,[],[f26035,f26853])).
fof(f16668,plain,(
  ( ! [X50] : (s('type.option.option'(fun(sK0,sK1)),happ(s(fun('type.option.option'(sK0),'type.option.option'(fun(sK0,sK1))),X50),s('type.option.option'(sK0),'const.option.NONE_0'))) = s('type.option.option'(fun(sK0,sK1)),'const.option.SOME_1'(s(fun(sK0,sK1),sK4(happ(s(fun('type.option.option'(sK0),'type.option.option'(fun(sK0,sK1))),X50),s('type.option.option'(sK0),'const.option.NONE_0')),fun(sK0,sK1)))))) ) | $spl262),
  inference(cnf_transformation,[],[f16668_D])).
fof(f16668_D,plain,(
  ( ! [X50] : (s('type.option.option'(fun(sK0,sK1)),happ(s(fun('type.option.option'(sK0),'type.option.option'(fun(sK0,sK1))),X50),s('type.option.option'(sK0),'const.option.NONE_0'))) = s('type.option.option'(fun(sK0,sK1)),'const.option.SOME_1'(s(fun(sK0,sK1),sK4(happ(s(fun('type.option.option'(sK0),'type.option.option'(fun(sK0,sK1))),X50),s('type.option.option'(sK0),'const.option.NONE_0')),fun(sK0,sK1)))))) ) <=> ~$spl262),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl262])])).
fof(f29416,plain,(
  ( ! [X220,X221] : (s('type.option.option'(sK1),'const.option.NONE_0') = s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))),s('type.option.option'(fun(sK0,sK1)),happ(s(fun(sK0,'type.option.option'(fun(sK0,sK1))),X221),s(sK0,sK4('const.option.NONE_0',sK0)))))) | s('type.option.option'(fun(sK0,sK1)),happ(s(fun('type.option.option'(sK0),'type.option.option'(fun(sK0,sK1))),X220),s('type.option.option'(sK0),'const.option.NONE_0'))) = s('type.option.option'(fun(sK0,sK1)),'const.option.SOME_1'(s(fun(sK0,sK1),sK4(happ(s(fun('type.option.option'(sK0),'type.option.option'(fun(sK0,sK1))),X220),s('type.option.option'(sK0),'const.option.NONE_0')),fun(sK0,sK1)))))) ) | ($spl6 | $spl32 | $spl376)),
  inference(superposition,[],[f320,f26853])).
fof(f28860,plain,(
  ( ! [X39] : (s('type.option.option'('type.option.option'(fun(fun(sK0,sK1),sK1))),'const.option.NONE_0') != s('type.option.option'('type.option.option'(fun(fun(sK0,sK1),sK1))),'const.option.SOME_1'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))))) | s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),happ(s(fun('type.option.option'(sK0),'type.option.option'(fun(fun(sK0,sK1),sK1))),X39),s('type.option.option'(sK0),'const.option.NONE_0'))),s('type.option.option'(fun(sK0,sK1)),sK3)))) ) | ($spl2 | $spl32)),
  inference(forward_demodulation,[],[f28825,f4951])).
fof(f28825,plain,(
  ( ! [X39,X38] : (s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),happ(s(fun('type.option.option'(sK0),'type.option.option'(fun(fun(sK0,sK1),sK1))),X39),s('type.option.option'(sK0),'const.option.NONE_0'))),s('type.option.option'(fun(sK0,sK1)),sK3))) | s('type.option.option'('type.option.option'(fun(fun(sK0,sK1),sK1))),'const.option.SOME_1'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))))) != s('type.option.option'('type.option.option'(fun(fun(sK0,sK1),sK1))),'const.option.SOME_1'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),happ(s(fun('type.option.option'(sK0),'type.option.option'(fun(fun(sK0,sK1),sK1))),X38),s('type.option.option'(sK0),'const.option.NONE_0')))))) ) | ($spl2 | $spl32)),
  inference(superposition,[],[f26035,f9128])).
fof(f9128,plain,(
  ( ! [X26,X24,X25] : (s(X24,happ(s(fun('type.option.option'(sK0),X24),X25),s('type.option.option'(sK0),'const.option.NONE_0'))) = s(X24,happ(s(fun('type.option.option'(sK0),X24),X26),s('type.option.option'(sK0),'const.option.NONE_0')))) ) | $spl32),
  inference(trivial_inequality_removal,[],[f9111])).
fof(f9111,plain,(
  ( ! [X26,X24,X25] : (s('type.option.option'(X24),'const.option.NONE_0') != s('type.option.option'(X24),'const.option.NONE_0') | s(X24,happ(s(fun('type.option.option'(sK0),X24),X25),s('type.option.option'(sK0),'const.option.NONE_0'))) = s(X24,happ(s(fun('type.option.option'(sK0),X24),X26),s('type.option.option'(sK0),'const.option.NONE_0')))) ) | $spl32),
  inference(superposition,[],[f5290,f4951])).
fof(f28859,plain,(
  ( ! [X37] : (s('type.option.option'('type.option.option'(fun(fun(sK0,sK1),sK1))),'const.option.NONE_0') != s('type.option.option'('type.option.option'(fun(fun(sK0,sK1),sK1))),'const.option.SOME_1'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))))) | s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),happ(s(fun('type.option.option'(sK0),'type.option.option'(fun(fun(sK0,sK1),sK1))),X37),s('type.option.option'(sK0),'const.option.NONE_0'))),s('type.option.option'(fun(sK0,sK1)),sK3)))) ) | ($spl2 | $spl32)),
  inference(forward_demodulation,[],[f28824,f4951])).
fof(f28824,plain,(
  ( ! [X37,X36] : (s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),happ(s(fun('type.option.option'(sK0),'type.option.option'(fun(fun(sK0,sK1),sK1))),X37),s('type.option.option'(sK0),'const.option.NONE_0'))),s('type.option.option'(fun(sK0,sK1)),sK3))) | s('type.option.option'('type.option.option'(fun(fun(sK0,sK1),sK1))),'const.option.SOME_1'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))))) != s('type.option.option'('type.option.option'(fun(fun(sK0,sK1),sK1))),'const.option.SOME_1'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),happ(s(fun('type.option.option'(sK0),'type.option.option'(fun(fun(sK0,sK1),sK1))),X36),s('type.option.option'(sK0),'const.option.NONE_0')))))) ) | ($spl2 | $spl32)),
  inference(superposition,[],[f26035,f9128])).
fof(f27175,plain,(
  $false | ($spl19 | $spl36 | $spl180 | $spl375)),
  inference(subsumption_resolution,[],[f27174,f512])).
fof(f27174,plain,(
  s('type.option.option'(sK0),'const.option.NONE_0') = s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))) | ($spl36 | $spl180 | $spl375)),
  inference(forward_demodulation,[],[f27173,f1465])).
fof(f1465,plain,(
  s('type.option.option'(sK0),'const.option.NONE_0') = s('type.option.option'(sK0),sK4('const.option.SOME_1'(s('type.option.option'(sK0),'const.option.NONE_0')),'type.option.option'(sK0))) | $spl36),
  inference(cnf_transformation,[],[f1465_D])).
fof(f1465_D,plain,(
  s('type.option.option'(sK0),'const.option.NONE_0') = s('type.option.option'(sK0),sK4('const.option.SOME_1'(s('type.option.option'(sK0),'const.option.NONE_0')),'type.option.option'(sK0))) <=> ~$spl36),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl36])])).
fof(f27173,plain,(
  s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))) = s('type.option.option'(sK0),sK4('const.option.SOME_1'(s('type.option.option'(sK0),'const.option.NONE_0')),'type.option.option'(sK0))) | ($spl36 | $spl180 | $spl375)),
  inference(subsumption_resolution,[],[f27138,f1465])).
fof(f27138,plain,(
  s('type.option.option'(sK0),'const.option.NONE_0') != s('type.option.option'(sK0),sK4('const.option.SOME_1'(s('type.option.option'(sK0),'const.option.NONE_0')),'type.option.option'(sK0))) | s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))) = s('type.option.option'(sK0),sK4('const.option.SOME_1'(s('type.option.option'(sK0),'const.option.NONE_0')),'type.option.option'(sK0))) | ($spl180 | $spl375)),
  inference(superposition,[],[f25755,f4732])).
fof(f26343,plain,(
  $false | ($spl11 | $spl19)),
  inference(subsumption_resolution,[],[f26338,f512])).
fof(f26338,plain,(
  s('type.option.option'(sK0),'const.option.NONE_0') = s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))) | $spl11),
  inference(trivial_inequality_removal,[],[f26332])).
fof(f26332,plain,(
  s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))) != s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))) | s('type.option.option'(sK0),'const.option.NONE_0') = s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))) | $spl11),
  inference(superposition,[],[f99,f47])).
fof(f99,plain,(
  s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))) != s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK4('const.option.SOME_1'(s(sK0,sK2)),sK0)))) | $spl11),
  inference(cnf_transformation,[],[f99_D])).
fof(f99_D,plain,(
  s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))) != s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK4('const.option.SOME_1'(s(sK0,sK2)),sK0)))) <=> ~$spl11),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl11])])).
fof(f26341,plain,(
  $false | ($spl11 | $spl19 | $spl32 | $spl36)),
  inference(subsumption_resolution,[],[f26340,f512])).
fof(f26340,plain,(
  s('type.option.option'(sK0),'const.option.NONE_0') = s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))) | ($spl11 | $spl32 | $spl36)),
  inference(forward_demodulation,[],[f26339,f1465])).
fof(f26339,plain,(
  s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))) = s('type.option.option'(sK0),sK4('const.option.SOME_1'(s('type.option.option'(sK0),'const.option.NONE_0')),'type.option.option'(sK0))) | ($spl11 | $spl32 | $spl36)),
  inference(trivial_inequality_removal,[],[f26330])).
fof(f26330,plain,(
  s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))) != s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))) | s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))) = s('type.option.option'(sK0),sK4('const.option.SOME_1'(s('type.option.option'(sK0),'const.option.NONE_0')),'type.option.option'(sK0))) | ($spl11 | $spl32 | $spl36)),
  inference(superposition,[],[f99,f14615])).
fof(f14615,plain,(
  ( ! [X0] : (s('type.option.option'(sK0),X0) = s('type.option.option'(sK0),sK4('const.option.SOME_1'(s('type.option.option'(sK0),'const.option.NONE_0')),'type.option.option'(sK0))) | s('type.option.option'(sK0),X0) = s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK4(X0,sK0))))) ) | ($spl32 | $spl36)),
  inference(trivial_inequality_removal,[],[f14596])).
fof(f14596,plain,(
  ( ! [X0] : (s('type.option.option'('type.option.option'(sK0)),'const.option.NONE_0') != s('type.option.option'('type.option.option'(sK0)),'const.option.NONE_0') | s('type.option.option'(sK0),X0) = s('type.option.option'(sK0),sK4('const.option.SOME_1'(s('type.option.option'(sK0),'const.option.NONE_0')),'type.option.option'(sK0))) | s('type.option.option'(sK0),X0) = s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK4(X0,sK0))))) ) | ($spl32 | $spl36)),
  inference(superposition,[],[f4987,f4917])).
fof(f4917,plain,(
  ( ! [X0] : (s('type.option.option'('type.option.option'(sK0)),'const.option.NONE_0') = s('type.option.option'('type.option.option'(sK0)),'const.option.SOME_1'(s('type.option.option'(sK0),X0))) | s('type.option.option'(sK0),X0) = s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK4(X0,sK0))))) ) | $spl32),
  inference(superposition,[],[f891,f47])).
fof(f4987,plain,(
  ( ! [X3] : (s('type.option.option'('type.option.option'(sK0)),'const.option.NONE_0') != s('type.option.option'('type.option.option'(sK0)),'const.option.SOME_1'(s('type.option.option'(sK0),X3))) | s('type.option.option'(sK0),X3) = s('type.option.option'(sK0),sK4('const.option.SOME_1'(s('type.option.option'(sK0),'const.option.NONE_0')),'type.option.option'(sK0)))) ) | ($spl32 | $spl36)),
  inference(forward_demodulation,[],[f4972,f891])).
fof(f4972,plain,(
  ( ! [X3] : (s('type.option.option'('type.option.option'(sK0)),'const.option.SOME_1'(s('type.option.option'(sK0),'const.option.NONE_0'))) != s('type.option.option'('type.option.option'(sK0)),'const.option.SOME_1'(s('type.option.option'(sK0),X3))) | s('type.option.option'(sK0),X3) = s('type.option.option'(sK0),sK4('const.option.SOME_1'(s('type.option.option'(sK0),'const.option.NONE_0')),'type.option.option'(sK0)))) ) | $spl36),
  inference(superposition,[],[f43,f1465])).
fof(f26089,plain,(
  $false | ($spl11 | $spl26)),
  inference(subsumption_resolution,[],[f99,f870])).
fof(f26008,plain,(
  $false | ($spl19 | $spl28 | $spl32)),
  inference(subsumption_resolution,[],[f26007,f512])).
fof(f26007,plain,(
  s('type.option.option'(sK0),'const.option.NONE_0') = s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))) | ($spl28 | $spl32)),
  inference(forward_demodulation,[],[f25996,f5549])).
fof(f5549,plain,(
  ( ! [X9] : (s('type.option.option'(sK0),'const.option.NONE_0') = s('type.option.option'(sK0),happ(s(fun('type.option.option'(sK0),'type.option.option'(sK0)),X9),s('type.option.option'(sK0),'const.option.NONE_0')))) ) | $spl32),
  inference(trivial_inequality_removal,[],[f5544])).
fof(f5544,plain,(
  ( ! [X9] : (s('type.option.option'('type.option.option'(sK0)),'const.option.NONE_0') != s('type.option.option'('type.option.option'(sK0)),'const.option.NONE_0') | s('type.option.option'(sK0),'const.option.NONE_0') = s('type.option.option'(sK0),happ(s(fun('type.option.option'(sK0),'type.option.option'(sK0)),X9),s('type.option.option'(sK0),'const.option.NONE_0')))) ) | $spl32),
  inference(superposition,[],[f4925,f4951])).
fof(f4925,plain,(
  ( ! [X0] : (s('type.option.option'('type.option.option'(sK0)),'const.option.NONE_0') != s('type.option.option'('type.option.option'(sK0)),'const.option.SOME_1'(s('type.option.option'(sK0),X0))) | s('type.option.option'(sK0),'const.option.NONE_0') = s('type.option.option'(sK0),X0)) ) | $spl32),
  inference(superposition,[],[f43,f891])).
fof(f25996,plain,(
  ( ! [X6] : (s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))) = s('type.option.option'(sK0),happ(s(fun('type.option.option'(sK0),'type.option.option'(sK0)),X6),s('type.option.option'(sK0),'const.option.NONE_0')))) ) | ($spl28 | $spl32)),
  inference(trivial_inequality_removal,[],[f25978])).
fof(f25978,plain,(
  ( ! [X6] : (s('type.option.option'('type.option.option'(sK0)),'const.option.NONE_0') != s('type.option.option'('type.option.option'(sK0)),'const.option.NONE_0') | s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))) = s('type.option.option'(sK0),happ(s(fun('type.option.option'(sK0),'type.option.option'(sK0)),X6),s('type.option.option'(sK0),'const.option.NONE_0')))) ) | ($spl28 | $spl32)),
  inference(superposition,[],[f5290,f16874])).
fof(f16874,plain,(
  s('type.option.option'('type.option.option'(sK0)),'const.option.NONE_0') = s('type.option.option'('type.option.option'(sK0)),'const.option.SOME_1'(s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))))) | ($spl28 | $spl32)),
  inference(forward_demodulation,[],[f871,f891])).
fof(f871,plain,(
  s('type.option.option'('type.option.option'(sK0)),'const.option.SOME_1'(s('type.option.option'(sK0),'const.option.NONE_0'))) = s('type.option.option'('type.option.option'(sK0)),'const.option.SOME_1'(s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))))) | $spl28),
  inference(cnf_transformation,[],[f871_D])).
fof(f871_D,plain,(
  s('type.option.option'('type.option.option'(sK0)),'const.option.SOME_1'(s('type.option.option'(sK0),'const.option.NONE_0'))) = s('type.option.option'('type.option.option'(sK0)),'const.option.SOME_1'(s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))))) <=> ~$spl28),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl28])])).
fof(f26005,plain,(
  $false | ($spl19 | $spl28 | $spl32)),
  inference(subsumption_resolution,[],[f25997,f512])).
fof(f25997,plain,(
  s('type.option.option'(sK0),'const.option.NONE_0') = s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))) | ($spl28 | $spl32)),
  inference(trivial_inequality_removal,[],[f25972])).
fof(f25972,plain,(
  s('type.option.option'('type.option.option'(sK0)),'const.option.NONE_0') != s('type.option.option'('type.option.option'(sK0)),'const.option.NONE_0') | s('type.option.option'(sK0),'const.option.NONE_0') = s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))) | ($spl28 | $spl32)),
  inference(superposition,[],[f4925,f16874])).
fof(f26004,plain,(
  $false | ($spl19 | $spl28 | $spl32 | $spl36)),
  inference(subsumption_resolution,[],[f26003,f512])).
fof(f26003,plain,(
  s('type.option.option'(sK0),'const.option.NONE_0') = s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))) | ($spl28 | $spl32 | $spl36)),
  inference(forward_demodulation,[],[f25998,f1465])).
fof(f25998,plain,(
  s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))) = s('type.option.option'(sK0),sK4('const.option.SOME_1'(s('type.option.option'(sK0),'const.option.NONE_0')),'type.option.option'(sK0))) | ($spl28 | $spl32 | $spl36)),
  inference(trivial_inequality_removal,[],[f25971])).
fof(f25971,plain,(
  s('type.option.option'('type.option.option'(sK0)),'const.option.NONE_0') != s('type.option.option'('type.option.option'(sK0)),'const.option.NONE_0') | s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))) = s('type.option.option'(sK0),sK4('const.option.SOME_1'(s('type.option.option'(sK0),'const.option.NONE_0')),'type.option.option'(sK0))) | ($spl28 | $spl32 | $spl36)),
  inference(superposition,[],[f4987,f16874])).
fof(f25955,plain,(
  $false | ($spl19 | $spl32 | $spl370)),
  inference(subsumption_resolution,[],[f25930,f512])).
fof(f25930,plain,(
  s('type.option.option'(sK0),'const.option.NONE_0') = s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))) | ($spl32 | $spl370)),
  inference(superposition,[],[f4951,f25740])).
fof(f25788,plain,(
  $false | ($spl19 | $spl36 | $spl40)),
  inference(subsumption_resolution,[],[f5079,f512])).
fof(f5079,plain,(
  s('type.option.option'(sK0),'const.option.NONE_0') = s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))) | ($spl36 | $spl40)),
  inference(forward_demodulation,[],[f1530,f1465])).
fof(f1530,plain,(
  s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))) = s('type.option.option'(sK0),sK4('const.option.SOME_1'(s('type.option.option'(sK0),'const.option.NONE_0')),'type.option.option'(sK0))) | $spl40),
  inference(cnf_transformation,[],[f1530_D])).
fof(f1530_D,plain,(
  s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))) = s('type.option.option'(sK0),sK4('const.option.SOME_1'(s('type.option.option'(sK0),'const.option.NONE_0')),'type.option.option'(sK0))) <=> ~$spl40),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl40])])).
fof(f25757,plain,(
  s('type.option.option'(sK0),'const.option.NONE_0') = s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK4('const.option.NONE_0',sK0)))) | $spl376),
  inference(cnf_transformation,[],[f25757_D])).
fof(f25757_D,plain,(
  s('type.option.option'(sK0),'const.option.NONE_0') = s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK4('const.option.NONE_0',sK0)))) <=> ~$spl376),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl376])])).
fof(f25758,plain,(
  ( ! [X45] : (s('type.option.option'(sK0),X45) = s('type.option.option'(sK0),sK4('const.option.SOME_1'(s('type.option.option'(sK0),X45)),'type.option.option'(sK0))) | s('type.option.option'(sK0),X45) = s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK4(X45,sK0))))) ) | $spl378),
  inference(cnf_transformation,[],[f25758_D])).
fof(f25758_D,plain,(
  ( ! [X45] : (s('type.option.option'(sK0),X45) = s('type.option.option'(sK0),sK4('const.option.SOME_1'(s('type.option.option'(sK0),X45)),'type.option.option'(sK0))) | s('type.option.option'(sK0),X45) = s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK4(X45,sK0))))) ) <=> ~$spl378),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl378])])).
fof(f14708,plain,(
  ( ! [X45] : (s('type.option.option'(sK0),X45) = s('type.option.option'(sK0),sK4('const.option.SOME_1'(s('type.option.option'(sK0),X45)),'type.option.option'(sK0))) | s('type.option.option'(sK0),'const.option.NONE_0') = s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK4('const.option.NONE_0',sK0)))) | s('type.option.option'(sK0),X45) = s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK4(X45,sK0))))) ) | ($spl32 | $spl36)),
  inference(superposition,[],[f14615,f47])).
fof(f1542,plain,(
  s(sK0,sK2) = s(sK0,sK4(sK4('const.option.SOME_1'(s('type.option.option'(sK0),'const.option.NONE_0')),'type.option.option'(sK0)),sK0)) | $spl48),
  inference(cnf_transformation,[],[f1542_D])).
fof(f1542_D,plain,(
  s(sK0,sK2) = s(sK0,sK4(sK4('const.option.SOME_1'(s('type.option.option'(sK0),'const.option.NONE_0')),'type.option.option'(sK0)),sK0)) <=> ~$spl48),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl48])])).
fof(f25755,plain,(
  s('type.option.option'(sK0),'const.option.NONE_0') != s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK4(sK4('const.option.SOME_1'(s('type.option.option'(sK0),'const.option.NONE_0')),'type.option.option'(sK0)),sK0)))) | $spl375),
  inference(cnf_transformation,[],[f25755_D])).
fof(f25755_D,plain,(
  s('type.option.option'(sK0),'const.option.NONE_0') != s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK4(sK4('const.option.SOME_1'(s('type.option.option'(sK0),'const.option.NONE_0')),'type.option.option'(sK0)),sK0)))) <=> ~$spl375),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl375])])).
fof(f19334,plain,(
  s('type.option.option'(sK0),'const.option.NONE_0') != s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK4(sK4('const.option.SOME_1'(s('type.option.option'(sK0),'const.option.NONE_0')),'type.option.option'(sK0)),sK0)))) | s(sK0,sK2) = s(sK0,sK4(sK4('const.option.SOME_1'(s('type.option.option'(sK0),'const.option.NONE_0')),'type.option.option'(sK0)),sK0)) | ($spl36 | $spl43 | $spl178)),
  inference(superposition,[],[f19271,f4722])).
fof(f19271,plain,(
  s('type.option.option'(sK0),'const.option.NONE_0') != s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK4('const.option.SOME_1'(s(sK0,sK4(sK4('const.option.SOME_1'(s('type.option.option'(sK0),'const.option.NONE_0')),'type.option.option'(sK0)),sK0))),sK0)))) | ($spl36 | $spl43)),
  inference(forward_demodulation,[],[f1533,f1465])).
fof(f1533,plain,(
  s('type.option.option'(sK0),sK4('const.option.SOME_1'(s('type.option.option'(sK0),'const.option.NONE_0')),'type.option.option'(sK0))) != s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK4('const.option.SOME_1'(s(sK0,sK4(sK4('const.option.SOME_1'(s('type.option.option'(sK0),'const.option.NONE_0')),'type.option.option'(sK0)),sK0))),sK0)))) | $spl43),
  inference(cnf_transformation,[],[f1533_D])).
fof(f1533_D,plain,(
  s('type.option.option'(sK0),sK4('const.option.SOME_1'(s('type.option.option'(sK0),'const.option.NONE_0')),'type.option.option'(sK0))) != s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK4('const.option.SOME_1'(s(sK0,sK4(sK4('const.option.SOME_1'(s('type.option.option'(sK0),'const.option.NONE_0')),'type.option.option'(sK0)),sK0))),sK0)))) <=> ~$spl43),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl43])])).
fof(f25740,plain,(
  ( ! [X317] : (s(sK0,sK2) = s(sK0,happ(s(fun('type.option.option'(sK0),sK0),X317),s('type.option.option'(sK0),'const.option.NONE_0')))) ) | $spl370),
  inference(cnf_transformation,[],[f25740_D])).
fof(f25740_D,plain,(
  ( ! [X317] : (s(sK0,sK2) = s(sK0,happ(s(fun('type.option.option'(sK0),sK0),X317),s('type.option.option'(sK0),'const.option.NONE_0')))) ) <=> ~$spl370),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl370])])).
fof(f25741,plain,(
  ( ! [X318] : (s('type.option.option'(sK0),'const.option.NONE_0') = s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK4('const.option.SOME_1'(s(sK0,happ(s(fun('type.option.option'(sK0),sK0),X318),s('type.option.option'(sK0),'const.option.NONE_0')))),sK0))))) ) | $spl372),
  inference(cnf_transformation,[],[f25741_D])).
fof(f25741_D,plain,(
  ( ! [X318] : (s('type.option.option'(sK0),'const.option.NONE_0') = s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK4('const.option.SOME_1'(s(sK0,happ(s(fun('type.option.option'(sK0),sK0),X318),s('type.option.option'(sK0),'const.option.NONE_0')))),sK0))))) ) <=> ~$spl372),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl372])])).
fof(f25747,plain,(
  ( ! [X318,X317] : (s('type.option.option'(sK0),'const.option.NONE_0') = s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK4('const.option.SOME_1'(s(sK0,happ(s(fun('type.option.option'(sK0),sK0),X318),s('type.option.option'(sK0),'const.option.NONE_0')))),sK0)))) | s(sK0,sK2) = s(sK0,happ(s(fun('type.option.option'(sK0),sK0),X317),s('type.option.option'(sK0),'const.option.NONE_0')))) ) | ($spl32 | $spl178)),
  inference(forward_demodulation,[],[f19904,f4951])).
fof(f19904,plain,(
  ( ! [X318,X317] : (s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,happ(s(fun('type.option.option'(sK0),sK0),X318),s('type.option.option'(sK0),'const.option.NONE_0'))))) = s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK4('const.option.SOME_1'(s(sK0,happ(s(fun('type.option.option'(sK0),sK0),X318),s('type.option.option'(sK0),'const.option.NONE_0')))),sK0)))) | s(sK0,sK2) = s(sK0,happ(s(fun('type.option.option'(sK0),sK0),X317),s('type.option.option'(sK0),'const.option.NONE_0')))) ) | ($spl32 | $spl178)),
  inference(superposition,[],[f4722,f9128])).
fof(f25739,plain,(
  ( ! [X318,X317] : (s('type.option.option'(sK0),'const.option.NONE_0') = s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK4('const.option.SOME_1'(s(sK0,happ(s(fun('type.option.option'(sK0),sK0),X318),s('type.option.option'(sK0),'const.option.NONE_0')))),sK0)))) | s(sK0,sK2) = s(sK0,happ(s(fun('type.option.option'(sK0),sK0),X317),s('type.option.option'(sK0),'const.option.NONE_0')))) ) | ($spl32 | $spl178)),
  inference(forward_demodulation,[],[f20020,f4951])).
fof(f20020,plain,(
  ( ! [X318,X317] : (s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,happ(s(fun('type.option.option'(sK0),sK0),X318),s('type.option.option'(sK0),'const.option.NONE_0'))))) = s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK4('const.option.SOME_1'(s(sK0,happ(s(fun('type.option.option'(sK0),sK0),X318),s('type.option.option'(sK0),'const.option.NONE_0')))),sK0)))) | s(sK0,sK2) = s(sK0,happ(s(fun('type.option.option'(sK0),sK0),X317),s('type.option.option'(sK0),'const.option.NONE_0')))) ) | ($spl32 | $spl178)),
  inference(superposition,[],[f4722,f9128])).
fof(f16722,plain,(
  s('type.option.option'(sK1),'const.option.NONE_0') = s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))),s('type.option.option'(fun(sK0,sK1)),sK3))) | $spl272),
  inference(cnf_transformation,[],[f16722_D])).
fof(f16722_D,plain,(
  s('type.option.option'(sK1),'const.option.NONE_0') = s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))),s('type.option.option'(fun(sK0,sK1)),sK3))) <=> ~$spl272),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl272])])).
fof(f16724,plain,(
  s('type.option.option'(fun(sK0,sK1)),sK3) = s('type.option.option'(fun(sK0,sK1)),'const.option.SOME_1'(s(fun(sK0,sK1),sK4(sK4('const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),sK3)),'type.option.option'(fun(sK0,sK1))),fun(sK0,sK1))))) | $spl274),
  inference(cnf_transformation,[],[f16724_D])).
fof(f16724_D,plain,(
  s('type.option.option'(fun(sK0,sK1)),sK3) = s('type.option.option'(fun(sK0,sK1)),'const.option.SOME_1'(s(fun(sK0,sK1),sK4(sK4('const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),sK3)),'type.option.option'(fun(sK0,sK1))),fun(sK0,sK1))))) <=> ~$spl274),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl274])])).
fof(f25731,plain,(
  s('type.option.option'(fun(sK0,sK1)),sK3) = s('type.option.option'(fun(sK0,sK1)),'const.option.SOME_1'(s(fun(sK0,sK1),sK4(sK4('const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),sK3)),'type.option.option'(fun(sK0,sK1))),fun(sK0,sK1))))) | s('type.option.option'(sK1),'const.option.NONE_0') = s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))),s('type.option.option'(fun(sK0,sK1)),sK3))) | ($spl4 | $spl6 | $spl54)),
  inference(forward_demodulation,[],[f23529,f12620])).
fof(f12620,plain,(
  s('type.option.option'(fun(sK0,sK1)),sK3) = s('type.option.option'(fun(sK0,sK1)),sK4('const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),sK3)),'type.option.option'(fun(sK0,sK1)))) | ($spl4 | $spl54)),
  inference(forward_demodulation,[],[f12601,f76])).
fof(f12601,plain,(
  s('type.option.option'(fun(sK0,sK1)),'const.option.SOME_1'(s(fun(sK0,sK1),sK4(sK3,fun(sK0,sK1))))) = s('type.option.option'(fun(sK0,sK1)),sK4('const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),sK3)),'type.option.option'(fun(sK0,sK1)))) | ($spl4 | $spl54)),
  inference(trivial_inequality_removal,[],[f12586])).
fof(f12586,plain,(
  s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),sK3))) != s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),sK3))) | s('type.option.option'(fun(sK0,sK1)),'const.option.SOME_1'(s(fun(sK0,sK1),sK4(sK3,fun(sK0,sK1))))) = s('type.option.option'(fun(sK0,sK1)),sK4('const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),sK3)),'type.option.option'(fun(sK0,sK1)))) | ($spl4 | $spl54)),
  inference(superposition,[],[f2537,f1689])).
fof(f2537,plain,(
  ( ! [X10] : (s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),sK3))) != s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),X10))) | s('type.option.option'(fun(sK0,sK1)),X10) = s('type.option.option'(fun(sK0,sK1)),'const.option.SOME_1'(s(fun(sK0,sK1),sK4(sK3,fun(sK0,sK1)))))) ) | $spl4),
  inference(superposition,[],[f43,f76])).
fof(f23529,plain,(
  s('type.option.option'(sK1),'const.option.NONE_0') = s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))),s('type.option.option'(fun(sK0,sK1)),sK3))) | s('type.option.option'(fun(sK0,sK1)),sK4('const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),sK3)),'type.option.option'(fun(sK0,sK1)))) = s('type.option.option'(fun(sK0,sK1)),'const.option.SOME_1'(s(fun(sK0,sK1),sK4(sK4('const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),sK3)),'type.option.option'(fun(sK0,sK1))),fun(sK0,sK1))))) | ($spl4 | $spl6 | $spl54)),
  inference(superposition,[],[f320,f12620])).
fof(f25730,plain,(
  $false | ($spl4 | $spl12 | $spl18)),
  inference(trivial_inequality_removal,[],[f25710])).
fof(f25710,plain,(
  s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),sK3))) != s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),sK3))) | ($spl4 | $spl12 | $spl18)),
  inference(superposition,[],[f25108,f76])).
fof(f25108,plain,(
  ( ! [X0] : (s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),sK3))) != s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),'const.option.SOME_1'(s(fun(sK0,sK1),X0)))))) ) | ($spl12 | $spl18)),
  inference(subsumption_resolution,[],[f25107,f16934])).
fof(f16934,plain,(
  ( ! [X4,X5] : (s('type.option.option'(X4),'const.option.NONE_0') = s('type.option.option'(X4),'const.option.SOME_1'(s(X4,happ(s(fun(sK0,X4),X5),s(sK0,sK2)))))) ) | $spl18),
  inference(forward_demodulation,[],[f16897,f42])).
fof(f16897,plain,(
  ( ! [X4,X5] : (s('type.option.option'(X4),'const.option.OPTION_MAP_2'(s(fun(sK0,X4),X5),s('type.option.option'(sK0),'const.option.NONE_0'))) = s('type.option.option'(X4),'const.option.SOME_1'(s(X4,happ(s(fun(sK0,X4),X5),s(sK0,sK2)))))) ) | $spl18),
  inference(superposition,[],[f49,f513])).
fof(f25107,plain,(
  ( ! [X0] : (s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,happ(s(fun(sK0,sK1),X0),s(sK0,sK2))))) | s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),sK3))) != s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),'const.option.SOME_1'(s(fun(sK0,sK1),X0)))))) ) | ($spl12 | $spl18)),
  inference(forward_demodulation,[],[f25068,f48])).
fof(f25068,plain,(
  ( ! [X0] : (s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,happ(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))),s(fun(sK0,sK1),X0))))) | s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),sK3))) != s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),'const.option.SOME_1'(s(fun(sK0,sK1),X0)))))) ) | ($spl12 | $spl18)),
  inference(superposition,[],[f17281,f49])).
fof(f17281,plain,(
  ( ! [X0] : (s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),'const.option.OPTION_MAP_2'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))),s('type.option.option'(fun(sK0,sK1)),X0))) | s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),sK3))) != s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),X0)))) ) | ($spl12 | $spl18)),
  inference(superposition,[],[f17184,f43])).
fof(f17184,plain,(
  s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),'const.option.OPTION_MAP_2'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))),s('type.option.option'(fun(sK0,sK1)),sK3))) | ($spl12 | $spl18)),
  inference(superposition,[],[f17127,f40])).
fof(f17127,plain,(
  s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))),s('type.option.option'(fun(sK0,sK1)),sK3))) | ($spl12 | $spl18)),
  inference(backward_demodulation,[],[f101,f16958])).
fof(f16958,plain,(
  s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(sK0,sK1)),sK3),s('type.option.option'(sK0),'const.option.NONE_0'))) != s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))),s('type.option.option'(fun(sK0,sK1)),sK3))) | $spl18),
  inference(forward_demodulation,[],[f39,f513])).
fof(f101,plain,(
  s('type.option.option'(sK1),'const.option.NONE_0') = s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(sK0,sK1)),sK3),s('type.option.option'(sK0),'const.option.NONE_0'))) | $spl12),
  inference(cnf_transformation,[],[f101_D])).
fof(f101_D,plain,(
  s('type.option.option'(sK1),'const.option.NONE_0') = s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(sK0,sK1)),sK3),s('type.option.option'(sK0),'const.option.NONE_0'))) <=> ~$spl12),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl12])])).
fof(f23882,plain,(
  ( ! [X10] : (s(sK0,sK2) = s(sK0,happ(s(fun('type.option.option'(sK0),sK0),X10),s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK4('const.option.SOME_1'(s(sK0,sK2)),sK0))))))) ) | $spl368),
  inference(cnf_transformation,[],[f23882_D])).
fof(f23882_D,plain,(
  ( ! [X10] : (s(sK0,sK2) = s(sK0,happ(s(fun('type.option.option'(sK0),sK0),X10),s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK4('const.option.SOME_1'(s(sK0,sK2)),sK0))))))) ) <=> ~$spl368),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl368])])).
fof(f21726,plain,(
  s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK4('const.option.SOME_1'(s(sK0,sK2)),sK0)))) = s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK4('const.option.SOME_1'(s(sK0,sK4('const.option.SOME_1'(s(sK0,sK4('const.option.SOME_1'(s(sK0,sK2)),sK0))),sK0))),sK0)))) | $spl334),
  inference(cnf_transformation,[],[f21726_D])).
fof(f21726_D,plain,(
  s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK4('const.option.SOME_1'(s(sK0,sK2)),sK0)))) = s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK4('const.option.SOME_1'(s(sK0,sK4('const.option.SOME_1'(s(sK0,sK4('const.option.SOME_1'(s(sK0,sK2)),sK0))),sK0))),sK0)))) <=> ~$spl334),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl334])])).
fof(f23881,plain,(
  ( ! [X10] : (s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK4('const.option.SOME_1'(s(sK0,sK2)),sK0)))) = s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK4('const.option.SOME_1'(s(sK0,sK4('const.option.SOME_1'(s(sK0,sK4('const.option.SOME_1'(s(sK0,sK2)),sK0))),sK0))),sK0)))) | s(sK0,sK2) = s(sK0,happ(s(fun('type.option.option'(sK0),sK0),X10),s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK4('const.option.SOME_1'(s(sK0,sK2)),sK0))))))) ) | ($spl11 | $spl18 | $spl32)),
  inference(forward_demodulation,[],[f23768,f17306])).
fof(f17306,plain,(
  s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK4('const.option.SOME_1'(s(sK0,sK2)),sK0)))) = s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK4('const.option.SOME_1'(s(sK0,sK4('const.option.SOME_1'(s(sK0,sK2)),sK0))),sK0)))) | ($spl11 | $spl18)),
  inference(trivial_inequality_removal,[],[f17303])).
fof(f17303,plain,(
  s('type.option.option'(sK0),'const.option.NONE_0') != s('type.option.option'(sK0),'const.option.NONE_0') | s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK4('const.option.SOME_1'(s(sK0,sK2)),sK0)))) = s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK4('const.option.SOME_1'(s(sK0,sK4('const.option.SOME_1'(s(sK0,sK2)),sK0))),sK0)))) | ($spl11 | $spl18)),
  inference(superposition,[],[f17292,f47])).
fof(f17292,plain,(
  s('type.option.option'(sK0),'const.option.NONE_0') != s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK4('const.option.SOME_1'(s(sK0,sK2)),sK0)))) | ($spl11 | $spl18)),
  inference(forward_demodulation,[],[f99,f513])).
fof(f23768,plain,(
  ( ! [X10] : (s(sK0,sK2) = s(sK0,happ(s(fun('type.option.option'(sK0),sK0),X10),s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK4('const.option.SOME_1'(s(sK0,sK2)),sK0)))))) | s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK4('const.option.SOME_1'(s(sK0,sK4('const.option.SOME_1'(s(sK0,sK2)),sK0))),sK0)))) = s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK4('const.option.SOME_1'(s(sK0,sK4('const.option.SOME_1'(s(sK0,sK4('const.option.SOME_1'(s(sK0,sK2)),sK0))),sK0))),sK0))))) ) | ($spl11 | $spl18 | $spl32)),
  inference(superposition,[],[f17046,f17306])).
fof(f17046,plain,(
  ( ! [X0,X1] : (s(sK0,sK2) = s(sK0,happ(s(fun('type.option.option'(sK0),sK0),X1),s('type.option.option'(sK0),X0))) | s('type.option.option'(sK0),X0) = s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK4(X0,sK0))))) ) | ($spl18 | $spl32)),
  inference(superposition,[],[f16928,f47])).
fof(f16928,plain,(
  ( ! [X7] : (s(sK0,sK2) = s(sK0,happ(s(fun('type.option.option'(sK0),sK0),X7),s('type.option.option'(sK0),'const.option.NONE_0')))) ) | ($spl18 | $spl32)),
  inference(trivial_inequality_removal,[],[f16899])).
fof(f16899,plain,(
  ( ! [X7] : (s('type.option.option'(sK0),'const.option.NONE_0') != s('type.option.option'(sK0),'const.option.NONE_0') | s(sK0,sK2) = s(sK0,happ(s(fun('type.option.option'(sK0),sK0),X7),s('type.option.option'(sK0),'const.option.NONE_0')))) ) | ($spl18 | $spl32)),
  inference(superposition,[],[f5290,f513])).
fof(f4564,plain,(
  ( ! [X52] : (s('type.option.option'('type.option.option'('type.option.option'(sK0))),'const.option.NONE_0') != s('type.option.option'('type.option.option'('type.option.option'(sK0))),'const.option.SOME_1'(s('type.option.option'('type.option.option'(sK0)),'const.option.SOME_1'(s('type.option.option'(sK0),X52))))) | s('type.option.option'(sK0),X52) = s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK4(X52,sK0))))) ) | $spl136),
  inference(cnf_transformation,[],[f4564_D])).
fof(f4564_D,plain,(
  ( ! [X52] : (s('type.option.option'('type.option.option'('type.option.option'(sK0))),'const.option.NONE_0') != s('type.option.option'('type.option.option'('type.option.option'(sK0))),'const.option.SOME_1'(s('type.option.option'('type.option.option'(sK0)),'const.option.SOME_1'(s('type.option.option'(sK0),X52))))) | s('type.option.option'(sK0),X52) = s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK4(X52,sK0))))) ) <=> ~$spl136),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl136])])).
fof(f12944,plain,(
  ( ! [X130] : (s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),happ(s(fun('type.option.option'('type.option.option'(sK0)),'type.option.option'(sK1)),X130),s('type.option.option'('type.option.option'(sK0)),'const.option.NONE_0')))) ) | $spl234),
  inference(cnf_transformation,[],[f12944_D])).
fof(f12944_D,plain,(
  ( ! [X130] : (s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),happ(s(fun('type.option.option'('type.option.option'(sK0)),'type.option.option'(sK1)),X130),s('type.option.option'('type.option.option'(sK0)),'const.option.NONE_0')))) ) <=> ~$spl234),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl234])])).
fof(f23677,plain,(
  ( ! [X130,X129] : (s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),happ(s(fun('type.option.option'('type.option.option'(sK0)),'type.option.option'(sK1)),X130),s('type.option.option'('type.option.option'(sK0)),'const.option.NONE_0'))) | s('type.option.option'('type.option.option'('type.option.option'(sK0))),'const.option.NONE_0') != s('type.option.option'('type.option.option'('type.option.option'(sK0))),'const.option.SOME_1'(s('type.option.option'('type.option.option'(sK0)),'const.option.SOME_1'(s('type.option.option'(sK0),X129))))) | s('type.option.option'(sK0),X129) = s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK4(X129,sK0))))) ) | ($spl6 | $spl18 | $spl32 | $spl115)),
  inference(superposition,[],[f23248,f4917])).
fof(f23248,plain,(
  ( ! [X21,X20,X18] : (s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),happ(s(fun(X18,'type.option.option'(sK1)),X21),s(X18,X20))) | s('type.option.option'(X18),'const.option.NONE_0') != s('type.option.option'(X18),'const.option.SOME_1'(s(X18,X20)))) ) | ($spl6 | $spl18 | $spl115)),
  inference(forward_demodulation,[],[f23231,f16934])).
fof(f23231,plain,(
  ( ! [X21,X19,X20,X18] : (s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),happ(s(fun(X18,'type.option.option'(sK1)),X21),s(X18,X20))) | s('type.option.option'(X18),'const.option.SOME_1'(s(X18,X20))) != s('type.option.option'(X18),'const.option.SOME_1'(s(X18,happ(s(fun(sK0,X18),X19),s(sK0,sK2)))))) ) | ($spl6 | $spl18 | $spl115)),
  inference(superposition,[],[f23099,f43])).
fof(f23099,plain,(
  ( ! [X668,X667,X669] : (s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),happ(s(fun(X667,'type.option.option'(sK1)),X668),s(X667,happ(s(fun(sK0,X667),X669),s(sK0,sK2)))))) ) | ($spl6 | $spl18 | $spl115)),
  inference(subsumption_resolution,[],[f23098,f3698])).
fof(f23098,plain,(
  ( ! [X668,X667,X669] : (s('type.option.option'('type.option.option'(sK1)),'const.option.NONE_0') = s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),'const.option.NONE_0'))) | s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),happ(s(fun(X667,'type.option.option'(sK1)),X668),s(X667,happ(s(fun(sK0,X667),X669),s(sK0,sK2)))))) ) | ($spl6 | $spl18)),
  inference(forward_demodulation,[],[f23097,f16934])).
fof(f23097,plain,(
  ( ! [X666,X668,X667,X669] : (s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),happ(s(fun(X667,'type.option.option'(sK1)),X668),s(X667,happ(s(fun(sK0,X667),X669),s(sK0,sK2))))) | s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),'const.option.NONE_0'))) = s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),happ(s(fun(sK0,'type.option.option'(sK1)),X666),s(sK0,sK2)))))) ) | ($spl6 | $spl18)),
  inference(forward_demodulation,[],[f23096,f42])).
fof(f23096,plain,(
  ( ! [X666,X668,X667,X669] : (s('type.option.option'(sK1),'const.option.OPTION_MAP_2'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))),s('type.option.option'(fun(sK0,sK1)),'const.option.NONE_0'))) != s('type.option.option'(sK1),happ(s(fun(X667,'type.option.option'(sK1)),X668),s(X667,happ(s(fun(sK0,X667),X669),s(sK0,sK2))))) | s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),'const.option.NONE_0'))) = s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),happ(s(fun(sK0,'type.option.option'(sK1)),X666),s(sK0,sK2)))))) ) | ($spl6 | $spl18)),
  inference(forward_demodulation,[],[f22854,f40])).
fof(f22854,plain,(
  ( ! [X666,X668,X667,X669] : (s('type.option.option'(sK1),happ(s(fun(X667,'type.option.option'(sK1)),X668),s(X667,happ(s(fun(sK0,X667),X669),s(sK0,sK2))))) != s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))),s('type.option.option'(fun(sK0,sK1)),'const.option.NONE_0'))) | s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),'const.option.NONE_0'))) = s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),happ(s(fun(sK0,'type.option.option'(sK1)),X666),s(sK0,sK2)))))) ) | ($spl6 | $spl18)),
  inference(superposition,[],[f334,f20890])).
fof(f20890,plain,(
  ( ! [X43,X41,X44,X42,X40] : (s(X40,happ(s(fun(sK0,X40),X44),s(sK0,sK2))) = s(X40,happ(s(fun(X41,X40),X42),s(X41,happ(s(fun(sK0,X41),X43),s(sK0,sK2)))))) ) | $spl18),
  inference(trivial_inequality_removal,[],[f20805])).
fof(f20805,plain,(
  ( ! [X43,X41,X44,X42,X40] : (s('type.option.option'(X40),'const.option.NONE_0') != s('type.option.option'(X40),'const.option.NONE_0') | s(X40,happ(s(fun(sK0,X40),X44),s(sK0,sK2))) = s(X40,happ(s(fun(X41,X40),X42),s(X41,happ(s(fun(sK0,X41),X43),s(sK0,sK2)))))) ) | $spl18),
  inference(superposition,[],[f17402,f17484])).
fof(f17484,plain,(
  ( ! [X14,X17,X15,X16] : (s('type.option.option'(X16),'const.option.NONE_0') = s('type.option.option'(X16),'const.option.SOME_1'(s(X16,happ(s(fun(X14,X16),X17),s(X14,happ(s(fun(sK0,X14),X15),s(sK0,sK2)))))))) ) | $spl18),
  inference(forward_demodulation,[],[f17406,f42])).
fof(f17406,plain,(
  ( ! [X14,X17,X15,X16] : (s('type.option.option'(X16),'const.option.OPTION_MAP_2'(s(fun(X14,X16),X17),s('type.option.option'(X14),'const.option.NONE_0'))) = s('type.option.option'(X16),'const.option.SOME_1'(s(X16,happ(s(fun(X14,X16),X17),s(X14,happ(s(fun(sK0,X14),X15),s(sK0,sK2)))))))) ) | $spl18),
  inference(superposition,[],[f49,f16934])).
fof(f17402,plain,(
  ( ! [X4,X2,X3] : (s('type.option.option'(X2),'const.option.NONE_0') != s('type.option.option'(X2),'const.option.SOME_1'(s(X2,X4))) | s(X2,X4) = s(X2,happ(s(fun(sK0,X2),X3),s(sK0,sK2)))) ) | $spl18),
  inference(superposition,[],[f43,f16934])).
fof(f334,plain,(
  ( ! [X7] : (s('type.option.option'(sK1),X7) != s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))),s('type.option.option'(fun(sK0,sK1)),'const.option.NONE_0'))) | s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),'const.option.NONE_0'))) = s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),X7)))) ) | $spl6),
  inference(superposition,[],[f44,f77])).
fof(f1709,plain,(
  s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.NONE_0') != s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),sK3))) | $spl65),
  inference(cnf_transformation,[],[f1709_D])).
fof(f1709_D,plain,(
  s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.NONE_0') != s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),sK3))) <=> ~$spl65),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl65])])).
fof(f23488,plain,(
  ( ! [X12] : (s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(sK0,sK1)),happ(s(fun('type.option.option'(sK0),'type.option.option'(fun(sK0,sK1))),X12),s('type.option.option'(sK0),'const.option.NONE_0'))),s('type.option.option'(sK0),'const.option.NONE_0'))) != s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))),s('type.option.option'(fun(sK0,sK1)),happ(s(fun('type.option.option'(sK0),'type.option.option'(fun(sK0,sK1))),X12),s('type.option.option'(sK0),'const.option.NONE_0')))))) ) | $spl356),
  inference(cnf_transformation,[],[f23488_D])).
fof(f23488_D,plain,(
  ( ! [X12] : (s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(sK0,sK1)),happ(s(fun('type.option.option'(sK0),'type.option.option'(fun(sK0,sK1))),X12),s('type.option.option'(sK0),'const.option.NONE_0'))),s('type.option.option'(sK0),'const.option.NONE_0'))) != s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))),s('type.option.option'(fun(sK0,sK1)),happ(s(fun('type.option.option'(sK0),'type.option.option'(fun(sK0,sK1))),X12),s('type.option.option'(sK0),'const.option.NONE_0')))))) ) <=> ~$spl356),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl356])])).
fof(f23512,plain,(
  ( ! [X23] : (s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(sK0,sK1)),happ(s(fun('type.option.option'(sK0),'type.option.option'(fun(sK0,sK1))),X23),s('type.option.option'(sK0),'const.option.NONE_0'))),s('type.option.option'(sK0),'const.option.NONE_0'))) != s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))),s('type.option.option'(fun(sK0,sK1)),happ(s(fun('type.option.option'(sK0),'type.option.option'(fun(sK0,sK1))),X23),s('type.option.option'(sK0),'const.option.NONE_0'))))) | s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.NONE_0') != s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),sK3)))) ) | ($spl18 | $spl82)),
  inference(forward_demodulation,[],[f2711,f513])).
fof(f2711,plain,(
  ( ! [X23] : (s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.NONE_0') != s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),sK3))) | s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(sK0,sK1)),happ(s(fun('type.option.option'(sK0),'type.option.option'(fun(sK0,sK1))),X23),s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))))),s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))))) != s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))),s('type.option.option'(fun(sK0,sK1)),happ(s(fun('type.option.option'(sK0),'type.option.option'(fun(sK0,sK1))),X23),s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2)))))))) ) | $spl82),
  inference(superposition,[],[f63,f2488])).
fof(f2488,plain,(
  ( ! [X0,X1] : (s('type.option.option'(X0),'const.option.NONE_0') = s('type.option.option'(X0),'const.option.SOME_1'(s(X0,happ(s(fun('type.option.option'(sK0),X0),X1),s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2)))))))) ) | $spl82),
  inference(forward_demodulation,[],[f2466,f42])).
fof(f2466,plain,(
  ( ! [X0,X1] : (s('type.option.option'(X0),'const.option.OPTION_MAP_2'(s(fun('type.option.option'(sK0),X0),X1),s('type.option.option'('type.option.option'(sK0)),'const.option.NONE_0'))) = s('type.option.option'(X0),'const.option.SOME_1'(s(X0,happ(s(fun('type.option.option'(sK0),X0),X1),s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2)))))))) ) | $spl82),
  inference(superposition,[],[f49,f2263])).
fof(f63,plain,(
  ( ! [X0] : (s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),sK3))) != s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),X0))) | s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(sK0,sK1)),X0),s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))))) != s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))),s('type.option.option'(fun(sK0,sK1)),X0)))) )),
  inference(superposition,[],[f39,f43])).
fof(f23509,plain,(
  ( ! [X25] : (s('type.option.option'(fun(sK0,sK1)),X25) != s('type.option.option'(fun(sK0,sK1)),'const.option.SOME_1'(s(fun(sK0,sK1),sK4(sK3,fun(sK0,sK1))))) | s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.NONE_0') = s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),X25)))) ) | $spl366),
  inference(cnf_transformation,[],[f23509_D])).
fof(f23509_D,plain,(
  ( ! [X25] : (s('type.option.option'(fun(sK0,sK1)),X25) != s('type.option.option'(fun(sK0,sK1)),'const.option.SOME_1'(s(fun(sK0,sK1),sK4(sK3,fun(sK0,sK1))))) | s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.NONE_0') = s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),X25)))) ) <=> ~$spl366),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl366])])).
fof(f3914,plain,(
  ( ! [X58] : (s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.NONE_0') != s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),sK3))) | s('type.option.option'(fun(sK0,sK1)),X58) != s('type.option.option'(fun(sK0,sK1)),'const.option.SOME_1'(s(fun(sK0,sK1),sK4(sK3,fun(sK0,sK1))))) | s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.NONE_0') = s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),X58)))) ) | ($spl4 | $spl82)),
  inference(superposition,[],[f3896,f76])).
fof(f3896,plain,(
  ( ! [X2,X0,X3] : (s('type.option.option'(X0),'const.option.NONE_0') != s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X2))) | s(X0,X2) != s(X0,X3) | s('type.option.option'(X0),'const.option.NONE_0') = s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X3)))) ) | $spl82),
  inference(forward_demodulation,[],[f3875,f2488])).
fof(f3875,plain,(
  ( ! [X2,X0,X3,X1] : (s(X0,X2) != s(X0,X3) | s('type.option.option'(X0),'const.option.NONE_0') = s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X3))) | s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X2))) != s('type.option.option'(X0),'const.option.SOME_1'(s(X0,happ(s(fun('type.option.option'(sK0),X0),X1),s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2)))))))) ) | $spl82),
  inference(superposition,[],[f2699,f43])).
fof(f2699,plain,(
  ( ! [X6,X4,X5] : (s(X4,X6) != s(X4,happ(s(fun('type.option.option'(sK0),X4),X5),s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))))) | s('type.option.option'(X4),'const.option.NONE_0') = s('type.option.option'(X4),'const.option.SOME_1'(s(X4,X6)))) ) | $spl82),
  inference(superposition,[],[f2488,f44])).
fof(f23508,plain,(
  ( ! [X25] : (s('type.option.option'(fun(sK0,sK1)),X25) != s('type.option.option'(fun(sK0,sK1)),'const.option.SOME_1'(s(fun(sK0,sK1),sK4(sK3,fun(sK0,sK1))))) | s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.NONE_0') != s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),sK3))) | s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.NONE_0') = s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),X25)))) ) | ($spl4 | $spl15 | $spl82)),
  inference(forward_demodulation,[],[f8471,f8478])).
fof(f8478,plain,(
  s(fun(sK0,sK1),sK4(sK3,fun(sK0,sK1))) = s(fun(sK0,sK1),sK4('const.option.SOME_1'(s(fun(sK0,sK1),sK4(sK3,fun(sK0,sK1)))),fun(sK0,sK1))) | ($spl4 | $spl15)),
  inference(trivial_inequality_removal,[],[f8445])).
fof(f8445,plain,(
  s('type.option.option'(fun(sK0,sK1)),sK3) != s('type.option.option'(fun(sK0,sK1)),sK3) | s(fun(sK0,sK1),sK4(sK3,fun(sK0,sK1))) = s(fun(sK0,sK1),sK4('const.option.SOME_1'(s(fun(sK0,sK1),sK4(sK3,fun(sK0,sK1)))),fun(sK0,sK1))) | ($spl4 | $spl15)),
  inference(superposition,[],[f2529,f2551])).
fof(f2551,plain,(
  s('type.option.option'(fun(sK0,sK1)),sK3) = s('type.option.option'(fun(sK0,sK1)),'const.option.SOME_1'(s(fun(sK0,sK1),sK4('const.option.SOME_1'(s(fun(sK0,sK1),sK4(sK3,fun(sK0,sK1)))),fun(sK0,sK1))))) | ($spl4 | $spl15)),
  inference(forward_demodulation,[],[f2550,f76])).
fof(f2550,plain,(
  s('type.option.option'(fun(sK0,sK1)),'const.option.SOME_1'(s(fun(sK0,sK1),sK4(sK3,fun(sK0,sK1))))) = s('type.option.option'(fun(sK0,sK1)),'const.option.SOME_1'(s(fun(sK0,sK1),sK4('const.option.SOME_1'(s(fun(sK0,sK1),sK4(sK3,fun(sK0,sK1)))),fun(sK0,sK1))))) | ($spl4 | $spl15)),
  inference(subsumption_resolution,[],[f2524,f144])).
fof(f144,plain,(
  s('type.option.option'(fun(sK0,sK1)),'const.option.NONE_0') != s('type.option.option'(fun(sK0,sK1)),sK3) | $spl15),
  inference(cnf_transformation,[],[f144_D])).
fof(f144_D,plain,(
  s('type.option.option'(fun(sK0,sK1)),'const.option.NONE_0') != s('type.option.option'(fun(sK0,sK1)),sK3) <=> ~$spl15),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl15])])).
fof(f2524,plain,(
  s('type.option.option'(fun(sK0,sK1)),'const.option.NONE_0') = s('type.option.option'(fun(sK0,sK1)),sK3) | s('type.option.option'(fun(sK0,sK1)),'const.option.SOME_1'(s(fun(sK0,sK1),sK4(sK3,fun(sK0,sK1))))) = s('type.option.option'(fun(sK0,sK1)),'const.option.SOME_1'(s(fun(sK0,sK1),sK4('const.option.SOME_1'(s(fun(sK0,sK1),sK4(sK3,fun(sK0,sK1)))),fun(sK0,sK1))))) | $spl4),
  inference(superposition,[],[f76,f47])).
fof(f2529,plain,(
  ( ! [X3] : (s('type.option.option'(fun(sK0,sK1)),sK3) != s('type.option.option'(fun(sK0,sK1)),'const.option.SOME_1'(s(fun(sK0,sK1),X3))) | s(fun(sK0,sK1),X3) = s(fun(sK0,sK1),sK4(sK3,fun(sK0,sK1)))) ) | $spl4),
  inference(superposition,[],[f43,f76])).
fof(f8471,plain,(
  ( ! [X25] : (s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.NONE_0') != s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),sK3))) | s('type.option.option'(fun(sK0,sK1)),X25) != s('type.option.option'(fun(sK0,sK1)),'const.option.SOME_1'(s(fun(sK0,sK1),sK4('const.option.SOME_1'(s(fun(sK0,sK1),sK4(sK3,fun(sK0,sK1)))),fun(sK0,sK1))))) | s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.NONE_0') = s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),X25)))) ) | ($spl4 | $spl15 | $spl82)),
  inference(superposition,[],[f3896,f2551])).
fof(f23506,plain,(
  ( ! [X12,X13,X11] : (s('type.option.option'(fun(sK0,sK1)),sK3) = s('type.option.option'(fun(sK0,sK1)),happ(s(fun(X11,'type.option.option'(fun(sK0,sK1))),X12),s(X11,happ(s(fun('type.option.option'(sK0),X11),X13),s('type.option.option'(sK0),'const.option.NONE_0')))))) ) | $spl364),
  inference(cnf_transformation,[],[f23506_D])).
fof(f23506_D,plain,(
  ( ! [X12,X13,X11] : (s('type.option.option'(fun(sK0,sK1)),sK3) = s('type.option.option'(fun(sK0,sK1)),happ(s(fun(X11,'type.option.option'(fun(sK0,sK1))),X12),s(X11,happ(s(fun('type.option.option'(sK0),X11),X13),s('type.option.option'(sK0),'const.option.NONE_0')))))) ) <=> ~$spl364),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl364])])).
fof(f23505,plain,(
  ( ! [X12,X13,X11] : (s('type.option.option'(fun(sK0,sK1)),sK3) = s('type.option.option'(fun(sK0,sK1)),happ(s(fun(X11,'type.option.option'(fun(sK0,sK1))),X12),s(X11,happ(s(fun('type.option.option'(sK0),X11),X13),s('type.option.option'(sK0),'const.option.NONE_0'))))) | s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.NONE_0') != s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),sK3)))) ) | ($spl4 | $spl32)),
  inference(forward_demodulation,[],[f12592,f76])).
fof(f12592,plain,(
  ( ! [X12,X13,X11] : (s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.NONE_0') != s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),sK3))) | s('type.option.option'(fun(sK0,sK1)),'const.option.SOME_1'(s(fun(sK0,sK1),sK4(sK3,fun(sK0,sK1))))) = s('type.option.option'(fun(sK0,sK1)),happ(s(fun(X11,'type.option.option'(fun(sK0,sK1))),X12),s(X11,happ(s(fun('type.option.option'(sK0),X11),X13),s('type.option.option'(sK0),'const.option.NONE_0')))))) ) | ($spl4 | $spl32)),
  inference(superposition,[],[f2537,f5336])).
fof(f5336,plain,(
  ( ! [X14,X17,X15,X16] : (s('type.option.option'(X16),'const.option.NONE_0') = s('type.option.option'(X16),'const.option.SOME_1'(s(X16,happ(s(fun(X14,X16),X17),s(X14,happ(s(fun('type.option.option'(sK0),X14),X15),s('type.option.option'(sK0),'const.option.NONE_0')))))))) ) | $spl32),
  inference(forward_demodulation,[],[f5294,f42])).
fof(f5294,plain,(
  ( ! [X14,X17,X15,X16] : (s('type.option.option'(X16),'const.option.OPTION_MAP_2'(s(fun(X14,X16),X17),s('type.option.option'(X14),'const.option.NONE_0'))) = s('type.option.option'(X16),'const.option.SOME_1'(s(X16,happ(s(fun(X14,X16),X17),s(X14,happ(s(fun('type.option.option'(sK0),X14),X15),s('type.option.option'(sK0),'const.option.NONE_0')))))))) ) | $spl32),
  inference(superposition,[],[f49,f4951])).
fof(f23503,plain,(
  ( ! [X20] : (s('type.option.option'(fun(sK0,sK1)),sK3) = s('type.option.option'(fun(sK0,sK1)),X20) | s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),X20))) = s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),sK4('const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),X20)),'type.option.option'(fun(sK0,sK1))))))) ) | $spl362),
  inference(cnf_transformation,[],[f23503_D])).
fof(f23503_D,plain,(
  ( ! [X20] : (s('type.option.option'(fun(sK0,sK1)),sK3) = s('type.option.option'(fun(sK0,sK1)),X20) | s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),X20))) = s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),sK4('const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),X20)),'type.option.option'(fun(sK0,sK1))))))) ) <=> ~$spl362),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl362])])).
fof(f23502,plain,(
  ( ! [X20] : (s('type.option.option'(fun(sK0,sK1)),sK3) = s('type.option.option'(fun(sK0,sK1)),X20) | s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.NONE_0') != s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),sK3))) | s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),X20))) = s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),sK4('const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),X20)),'type.option.option'(fun(sK0,sK1))))))) ) | $spl4),
  inference(forward_demodulation,[],[f12597,f76])).
fof(f12597,plain,(
  ( ! [X20] : (s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.NONE_0') != s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),sK3))) | s('type.option.option'(fun(sK0,sK1)),X20) = s('type.option.option'(fun(sK0,sK1)),'const.option.SOME_1'(s(fun(sK0,sK1),sK4(sK3,fun(sK0,sK1))))) | s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),X20))) = s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),sK4('const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),X20)),'type.option.option'(fun(sK0,sK1))))))) ) | $spl4),
  inference(superposition,[],[f2537,f47])).
fof(f23473,plain,(
  ( ! [X501] : (s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))),s('type.option.option'(fun(sK0,sK1)),happ(s(fun(sK0,'type.option.option'(fun(sK0,sK1))),X501),s(sK0,sK2)))))) ) | $spl338),
  inference(cnf_transformation,[],[f23473_D])).
fof(f23473_D,plain,(
  ( ! [X501] : (s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))),s('type.option.option'(fun(sK0,sK1)),happ(s(fun(sK0,'type.option.option'(fun(sK0,sK1))),X501),s(sK0,sK2)))))) ) <=> ~$spl338),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl338])])).
fof(f19652,plain,(
  ( ! [X37] : (s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.NONE_0') != s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),sK3))) | s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))),s('type.option.option'(fun(sK0,sK1)),happ(s(fun(sK0,'type.option.option'(fun(sK0,sK1))),X37),s(sK0,sK2)))))) ) | ($spl12 | $spl18 | $spl32)),
  inference(forward_demodulation,[],[f19619,f4951])).
fof(f19619,plain,(
  ( ! [X37,X36] : (s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))),s('type.option.option'(fun(sK0,sK1)),happ(s(fun(sK0,'type.option.option'(fun(sK0,sK1))),X37),s(sK0,sK2))))) | s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),sK3))) != s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),happ(s(fun('type.option.option'(sK0),'type.option.option'(fun(sK0,sK1))),X36),s('type.option.option'(sK0),'const.option.NONE_0')))))) ) | ($spl12 | $spl18 | $spl32)),
  inference(superposition,[],[f17181,f17473])).
fof(f17473,plain,(
  ( ! [X23,X21,X22] : (s(X21,happ(s(fun(sK0,X21),X22),s(sK0,sK2))) = s(X21,happ(s(fun('type.option.option'(sK0),X21),X23),s('type.option.option'(sK0),'const.option.NONE_0')))) ) | ($spl18 | $spl32)),
  inference(trivial_inequality_removal,[],[f17408])).
fof(f17408,plain,(
  ( ! [X23,X21,X22] : (s('type.option.option'(X21),'const.option.NONE_0') != s('type.option.option'(X21),'const.option.NONE_0') | s(X21,happ(s(fun(sK0,X21),X22),s(sK0,sK2))) = s(X21,happ(s(fun('type.option.option'(sK0),X21),X23),s('type.option.option'(sK0),'const.option.NONE_0')))) ) | ($spl18 | $spl32)),
  inference(superposition,[],[f5290,f16934])).
fof(f17181,plain,(
  ( ! [X0] : (s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))),s('type.option.option'(fun(sK0,sK1)),X0))) | s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),sK3))) != s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),X0)))) ) | ($spl12 | $spl18)),
  inference(superposition,[],[f17127,f43])).
fof(f19653,plain,(
  ( ! [X39] : (s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.NONE_0') != s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),sK3))) | s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))),s('type.option.option'(fun(sK0,sK1)),happ(s(fun(sK0,'type.option.option'(fun(sK0,sK1))),X39),s(sK0,sK2)))))) ) | ($spl12 | $spl18 | $spl32)),
  inference(forward_demodulation,[],[f19620,f16934])).
fof(f19620,plain,(
  ( ! [X39,X38] : (s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))),s('type.option.option'(fun(sK0,sK1)),happ(s(fun(sK0,'type.option.option'(fun(sK0,sK1))),X39),s(sK0,sK2))))) | s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),sK3))) != s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),happ(s(fun(sK0,'type.option.option'(fun(sK0,sK1))),X38),s(sK0,sK2)))))) ) | ($spl12 | $spl18 | $spl32)),
  inference(superposition,[],[f17181,f17949])).
fof(f17949,plain,(
  ( ! [X2,X0,X3] : (s(X0,happ(s(fun(sK0,X0),X2),s(sK0,sK2))) = s(X0,happ(s(fun(sK0,X0),X3),s(sK0,sK2)))) ) | ($spl18 | $spl32)),
  inference(superposition,[],[f17473,f17473])).
fof(f19654,plain,(
  ( ! [X41] : (s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.NONE_0') != s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),sK3))) | s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))),s('type.option.option'(fun(sK0,sK1)),happ(s(fun(sK0,'type.option.option'(fun(sK0,sK1))),X41),s(sK0,sK2)))))) ) | ($spl12 | $spl18 | $spl32)),
  inference(forward_demodulation,[],[f19621,f16934])).
fof(f19621,plain,(
  ( ! [X41,X40] : (s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))),s('type.option.option'(fun(sK0,sK1)),happ(s(fun(sK0,'type.option.option'(fun(sK0,sK1))),X41),s(sK0,sK2))))) | s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),sK3))) != s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),happ(s(fun(sK0,'type.option.option'(fun(sK0,sK1))),X40),s(sK0,sK2)))))) ) | ($spl12 | $spl18 | $spl32)),
  inference(superposition,[],[f17181,f17949])).
fof(f23491,plain,(
  ( ! [X242] : (s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))),s('type.option.option'(fun(sK0,sK1)),happ(s(fun('type.option.option'(sK0),'type.option.option'(fun(sK0,sK1))),X242),s('type.option.option'(sK0),'const.option.NONE_0')))))) ) | $spl360),
  inference(cnf_transformation,[],[f23491_D])).
fof(f23491_D,plain,(
  ( ! [X242] : (s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))),s('type.option.option'(fun(sK0,sK1)),happ(s(fun('type.option.option'(sK0),'type.option.option'(fun(sK0,sK1))),X242),s('type.option.option'(sK0),'const.option.NONE_0')))))) ) <=> ~$spl360),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl360])])).
fof(f19655,plain,(
  ( ! [X43] : (s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.NONE_0') != s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),sK3))) | s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))),s('type.option.option'(fun(sK0,sK1)),happ(s(fun('type.option.option'(sK0),'type.option.option'(fun(sK0,sK1))),X43),s('type.option.option'(sK0),'const.option.NONE_0')))))) ) | ($spl12 | $spl18 | $spl32)),
  inference(forward_demodulation,[],[f19622,f16934])).
fof(f19622,plain,(
  ( ! [X43,X42] : (s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))),s('type.option.option'(fun(sK0,sK1)),happ(s(fun('type.option.option'(sK0),'type.option.option'(fun(sK0,sK1))),X43),s('type.option.option'(sK0),'const.option.NONE_0'))))) | s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),sK3))) != s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),happ(s(fun(sK0,'type.option.option'(fun(sK0,sK1))),X42),s(sK0,sK2)))))) ) | ($spl12 | $spl18 | $spl32)),
  inference(superposition,[],[f17181,f17473])).
fof(f20061,plain,(
  ( ! [X242] : (s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.NONE_0') != s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),sK3))) | s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))),s('type.option.option'(fun(sK0,sK1)),happ(s(fun('type.option.option'(sK0),'type.option.option'(fun(sK0,sK1))),X242),s('type.option.option'(sK0),'const.option.NONE_0')))))) ) | ($spl12 | $spl18 | $spl32)),
  inference(forward_demodulation,[],[f19872,f4951])).
fof(f19872,plain,(
  ( ! [X241,X242] : (s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))),s('type.option.option'(fun(sK0,sK1)),happ(s(fun('type.option.option'(sK0),'type.option.option'(fun(sK0,sK1))),X242),s('type.option.option'(sK0),'const.option.NONE_0'))))) | s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),sK3))) != s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),happ(s(fun('type.option.option'(sK0),'type.option.option'(fun(sK0,sK1))),X241),s('type.option.option'(sK0),'const.option.NONE_0')))))) ) | ($spl12 | $spl18 | $spl32)),
  inference(superposition,[],[f17181,f9128])).
fof(f20111,plain,(
  ( ! [X242] : (s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.NONE_0') != s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),sK3))) | s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))),s('type.option.option'(fun(sK0,sK1)),happ(s(fun('type.option.option'(sK0),'type.option.option'(fun(sK0,sK1))),X242),s('type.option.option'(sK0),'const.option.NONE_0')))))) ) | ($spl12 | $spl18 | $spl32)),
  inference(forward_demodulation,[],[f19988,f4951])).
fof(f19988,plain,(
  ( ! [X241,X242] : (s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))),s('type.option.option'(fun(sK0,sK1)),happ(s(fun('type.option.option'(sK0),'type.option.option'(fun(sK0,sK1))),X242),s('type.option.option'(sK0),'const.option.NONE_0'))))) | s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),sK3))) != s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),happ(s(fun('type.option.option'(sK0),'type.option.option'(fun(sK0,sK1))),X241),s('type.option.option'(sK0),'const.option.NONE_0')))))) ) | ($spl12 | $spl18 | $spl32)),
  inference(superposition,[],[f17181,f9128])).
fof(f20739,plain,(
  ( ! [X36] : (s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.NONE_0') != s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),sK3))) | s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(sK0,sK1)),happ(s(fun('type.option.option'(sK0),'type.option.option'(fun(sK0,sK1))),X36),s('type.option.option'(sK0),'const.option.NONE_0'))),s('type.option.option'(sK0),'const.option.NONE_0'))) != s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))),s('type.option.option'(fun(sK0,sK1)),happ(s(fun('type.option.option'(sK0),'type.option.option'(fun(sK0,sK1))),X36),s('type.option.option'(sK0),'const.option.NONE_0')))))) ) | ($spl18 | $spl32)),
  inference(forward_demodulation,[],[f20707,f4951])).
fof(f20707,plain,(
  ( ! [X37,X36] : (s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),sK3))) != s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),happ(s(fun('type.option.option'(sK0),'type.option.option'(fun(sK0,sK1))),X37),s('type.option.option'(sK0),'const.option.NONE_0'))))) | s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(sK0,sK1)),happ(s(fun('type.option.option'(sK0),'type.option.option'(fun(sK0,sK1))),X36),s('type.option.option'(sK0),'const.option.NONE_0'))),s('type.option.option'(sK0),'const.option.NONE_0'))) != s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))),s('type.option.option'(fun(sK0,sK1)),happ(s(fun('type.option.option'(sK0),'type.option.option'(fun(sK0,sK1))),X36),s('type.option.option'(sK0),'const.option.NONE_0')))))) ) | ($spl18 | $spl32)),
  inference(superposition,[],[f17101,f9128])).
fof(f17101,plain,(
  ( ! [X0] : (s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),sK3))) != s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),X0))) | s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(sK0,sK1)),X0),s('type.option.option'(sK0),'const.option.NONE_0'))) != s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))),s('type.option.option'(fun(sK0,sK1)),X0)))) ) | $spl18),
  inference(superposition,[],[f16958,f43])).
fof(f20740,plain,(
  ( ! [X38] : (s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.NONE_0') != s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),sK3))) | s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(sK0,sK1)),happ(s(fun('type.option.option'(sK0),'type.option.option'(fun(sK0,sK1))),X38),s('type.option.option'(sK0),'const.option.NONE_0'))),s('type.option.option'(sK0),'const.option.NONE_0'))) != s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))),s('type.option.option'(fun(sK0,sK1)),happ(s(fun('type.option.option'(sK0),'type.option.option'(fun(sK0,sK1))),X38),s('type.option.option'(sK0),'const.option.NONE_0')))))) ) | ($spl18 | $spl32)),
  inference(forward_demodulation,[],[f20708,f4951])).
fof(f20708,plain,(
  ( ! [X39,X38] : (s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),sK3))) != s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),happ(s(fun('type.option.option'(sK0),'type.option.option'(fun(sK0,sK1))),X39),s('type.option.option'(sK0),'const.option.NONE_0'))))) | s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(sK0,sK1)),happ(s(fun('type.option.option'(sK0),'type.option.option'(fun(sK0,sK1))),X38),s('type.option.option'(sK0),'const.option.NONE_0'))),s('type.option.option'(sK0),'const.option.NONE_0'))) != s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))),s('type.option.option'(fun(sK0,sK1)),happ(s(fun('type.option.option'(sK0),'type.option.option'(fun(sK0,sK1))),X38),s('type.option.option'(sK0),'const.option.NONE_0')))))) ) | ($spl18 | $spl32)),
  inference(superposition,[],[f17101,f9128])).
fof(f20741,plain,(
  ( ! [X40] : (s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.NONE_0') != s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),sK3))) | s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(sK0,sK1)),happ(s(fun('type.option.option'(sK0),'type.option.option'(fun(sK0,sK1))),X40),s('type.option.option'(sK0),'const.option.NONE_0'))),s('type.option.option'(sK0),'const.option.NONE_0'))) != s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))),s('type.option.option'(fun(sK0,sK1)),happ(s(fun('type.option.option'(sK0),'type.option.option'(fun(sK0,sK1))),X40),s('type.option.option'(sK0),'const.option.NONE_0')))))) ) | ($spl18 | $spl32)),
  inference(forward_demodulation,[],[f20709,f16934])).
fof(f20709,plain,(
  ( ! [X41,X40] : (s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),sK3))) != s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),happ(s(fun(sK0,'type.option.option'(fun(sK0,sK1))),X41),s(sK0,sK2))))) | s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(sK0,sK1)),happ(s(fun('type.option.option'(sK0),'type.option.option'(fun(sK0,sK1))),X40),s('type.option.option'(sK0),'const.option.NONE_0'))),s('type.option.option'(sK0),'const.option.NONE_0'))) != s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))),s('type.option.option'(fun(sK0,sK1)),happ(s(fun('type.option.option'(sK0),'type.option.option'(fun(sK0,sK1))),X40),s('type.option.option'(sK0),'const.option.NONE_0')))))) ) | ($spl18 | $spl32)),
  inference(superposition,[],[f17101,f17473])).
fof(f23479,plain,(
  ( ! [X590] : (s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(sK0,sK1)),happ(s(fun(sK0,'type.option.option'(fun(sK0,sK1))),X590),s(sK0,sK2))),s('type.option.option'(sK0),'const.option.NONE_0'))) != s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))),s('type.option.option'(fun(sK0,sK1)),happ(s(fun(sK0,'type.option.option'(fun(sK0,sK1))),X590),s(sK0,sK2)))))) ) | $spl346),
  inference(cnf_transformation,[],[f23479_D])).
fof(f23479_D,plain,(
  ( ! [X590] : (s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(sK0,sK1)),happ(s(fun(sK0,'type.option.option'(fun(sK0,sK1))),X590),s(sK0,sK2))),s('type.option.option'(sK0),'const.option.NONE_0'))) != s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))),s('type.option.option'(fun(sK0,sK1)),happ(s(fun(sK0,'type.option.option'(fun(sK0,sK1))),X590),s(sK0,sK2)))))) ) <=> ~$spl346),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl346])])).
fof(f20742,plain,(
  ( ! [X42] : (s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.NONE_0') != s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),sK3))) | s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(sK0,sK1)),happ(s(fun(sK0,'type.option.option'(fun(sK0,sK1))),X42),s(sK0,sK2))),s('type.option.option'(sK0),'const.option.NONE_0'))) != s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))),s('type.option.option'(fun(sK0,sK1)),happ(s(fun(sK0,'type.option.option'(fun(sK0,sK1))),X42),s(sK0,sK2)))))) ) | ($spl18 | $spl32)),
  inference(forward_demodulation,[],[f20710,f16934])).
fof(f20710,plain,(
  ( ! [X43,X42] : (s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),sK3))) != s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),happ(s(fun(sK0,'type.option.option'(fun(sK0,sK1))),X43),s(sK0,sK2))))) | s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(sK0,sK1)),happ(s(fun(sK0,'type.option.option'(fun(sK0,sK1))),X42),s(sK0,sK2))),s('type.option.option'(sK0),'const.option.NONE_0'))) != s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))),s('type.option.option'(fun(sK0,sK1)),happ(s(fun(sK0,'type.option.option'(fun(sK0,sK1))),X42),s(sK0,sK2)))))) ) | ($spl18 | $spl32)),
  inference(superposition,[],[f17101,f17949])).
fof(f20743,plain,(
  ( ! [X44] : (s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.NONE_0') != s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),sK3))) | s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(sK0,sK1)),happ(s(fun(sK0,'type.option.option'(fun(sK0,sK1))),X44),s(sK0,sK2))),s('type.option.option'(sK0),'const.option.NONE_0'))) != s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))),s('type.option.option'(fun(sK0,sK1)),happ(s(fun(sK0,'type.option.option'(fun(sK0,sK1))),X44),s(sK0,sK2)))))) ) | ($spl18 | $spl32)),
  inference(forward_demodulation,[],[f20711,f16934])).
fof(f20711,plain,(
  ( ! [X45,X44] : (s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),sK3))) != s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),happ(s(fun(sK0,'type.option.option'(fun(sK0,sK1))),X45),s(sK0,sK2))))) | s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(sK0,sK1)),happ(s(fun(sK0,'type.option.option'(fun(sK0,sK1))),X44),s(sK0,sK2))),s('type.option.option'(sK0),'const.option.NONE_0'))) != s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))),s('type.option.option'(fun(sK0,sK1)),happ(s(fun(sK0,'type.option.option'(fun(sK0,sK1))),X44),s(sK0,sK2)))))) ) | ($spl18 | $spl32)),
  inference(superposition,[],[f17101,f17949])).
fof(f20744,plain,(
  ( ! [X46] : (s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.NONE_0') != s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),sK3))) | s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(sK0,sK1)),happ(s(fun(sK0,'type.option.option'(fun(sK0,sK1))),X46),s(sK0,sK2))),s('type.option.option'(sK0),'const.option.NONE_0'))) != s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))),s('type.option.option'(fun(sK0,sK1)),happ(s(fun(sK0,'type.option.option'(fun(sK0,sK1))),X46),s(sK0,sK2)))))) ) | ($spl18 | $spl32)),
  inference(forward_demodulation,[],[f20712,f4951])).
fof(f20712,plain,(
  ( ! [X47,X46] : (s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),sK3))) != s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),happ(s(fun('type.option.option'(sK0),'type.option.option'(fun(sK0,sK1))),X47),s('type.option.option'(sK0),'const.option.NONE_0'))))) | s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(sK0,sK1)),happ(s(fun(sK0,'type.option.option'(fun(sK0,sK1))),X46),s(sK0,sK2))),s('type.option.option'(sK0),'const.option.NONE_0'))) != s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))),s('type.option.option'(fun(sK0,sK1)),happ(s(fun(sK0,'type.option.option'(fun(sK0,sK1))),X46),s(sK0,sK2)))))) ) | ($spl18 | $spl32)),
  inference(superposition,[],[f17101,f17473])).
fof(f23489,plain,(
  ( ! [X10,X8,X9] : (s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(sK0,sK1)),happ(s(fun(X8,'type.option.option'(fun(sK0,sK1))),X9),s(X8,happ(s(fun('type.option.option'(sK0),X8),X10),s('type.option.option'(sK0),'const.option.NONE_0'))))),s('type.option.option'(sK0),'const.option.NONE_0'))) != s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))),s('type.option.option'(fun(sK0,sK1)),happ(s(fun(X8,'type.option.option'(fun(sK0,sK1))),X9),s(X8,happ(s(fun('type.option.option'(sK0),X8),X10),s('type.option.option'(sK0),'const.option.NONE_0')))))))) ) | $spl358),
  inference(cnf_transformation,[],[f23489_D])).
fof(f23489_D,plain,(
  ( ! [X10,X8,X9] : (s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(sK0,sK1)),happ(s(fun(X8,'type.option.option'(fun(sK0,sK1))),X9),s(X8,happ(s(fun('type.option.option'(sK0),X8),X10),s('type.option.option'(sK0),'const.option.NONE_0'))))),s('type.option.option'(sK0),'const.option.NONE_0'))) != s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))),s('type.option.option'(fun(sK0,sK1)),happ(s(fun(X8,'type.option.option'(fun(sK0,sK1))),X9),s(X8,happ(s(fun('type.option.option'(sK0),X8),X10),s('type.option.option'(sK0),'const.option.NONE_0')))))))) ) <=> ~$spl358),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl358])])).
fof(f20717,plain,(
  ( ! [X10,X8,X9] : (s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.NONE_0') != s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),sK3))) | s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(sK0,sK1)),happ(s(fun(X8,'type.option.option'(fun(sK0,sK1))),X9),s(X8,happ(s(fun('type.option.option'(sK0),X8),X10),s('type.option.option'(sK0),'const.option.NONE_0'))))),s('type.option.option'(sK0),'const.option.NONE_0'))) != s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))),s('type.option.option'(fun(sK0,sK1)),happ(s(fun(X8,'type.option.option'(fun(sK0,sK1))),X9),s(X8,happ(s(fun('type.option.option'(sK0),X8),X10),s('type.option.option'(sK0),'const.option.NONE_0')))))))) ) | ($spl18 | $spl32)),
  inference(superposition,[],[f17101,f5336])).
fof(f20719,plain,(
  ( ! [X12] : (s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.NONE_0') != s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),sK3))) | s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(sK0,sK1)),happ(s(fun('type.option.option'(sK0),'type.option.option'(fun(sK0,sK1))),X12),s('type.option.option'(sK0),'const.option.NONE_0'))),s('type.option.option'(sK0),'const.option.NONE_0'))) != s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))),s('type.option.option'(fun(sK0,sK1)),happ(s(fun('type.option.option'(sK0),'type.option.option'(fun(sK0,sK1))),X12),s('type.option.option'(sK0),'const.option.NONE_0')))))) ) | ($spl18 | $spl32)),
  inference(superposition,[],[f17101,f4951])).
fof(f20720,plain,(
  ( ! [X13] : (s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.NONE_0') != s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),sK3))) | s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(sK0,sK1)),happ(s(fun(sK0,'type.option.option'(fun(sK0,sK1))),X13),s(sK0,sK2))),s('type.option.option'(sK0),'const.option.NONE_0'))) != s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))),s('type.option.option'(fun(sK0,sK1)),happ(s(fun(sK0,'type.option.option'(fun(sK0,sK1))),X13),s(sK0,sK2)))))) ) | $spl18),
  inference(superposition,[],[f17101,f16934])).
fof(f23487,plain,(
  ( ! [X14] : (s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(sK0,sK1)),X14),s('type.option.option'(sK0),'const.option.NONE_0'))) != s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))),s('type.option.option'(fun(sK0,sK1)),X14))) | s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),X14))) = s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),sK4('const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),X14)),'type.option.option'(fun(sK0,sK1))))))) ) | $spl354),
  inference(cnf_transformation,[],[f23487_D])).
fof(f23487_D,plain,(
  ( ! [X14] : (s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(sK0,sK1)),X14),s('type.option.option'(sK0),'const.option.NONE_0'))) != s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))),s('type.option.option'(fun(sK0,sK1)),X14))) | s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),X14))) = s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),sK4('const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),X14)),'type.option.option'(fun(sK0,sK1))))))) ) <=> ~$spl354),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl354])])).
fof(f20721,plain,(
  ( ! [X14] : (s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.NONE_0') != s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),sK3))) | s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(sK0,sK1)),X14),s('type.option.option'(sK0),'const.option.NONE_0'))) != s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))),s('type.option.option'(fun(sK0,sK1)),X14))) | s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),X14))) = s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),sK4('const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),X14)),'type.option.option'(fun(sK0,sK1))))))) ) | $spl18),
  inference(superposition,[],[f17101,f47])).
fof(f23474,plain,(
  ( ! [X494,X496,X495] : (s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(sK0,sK1)),happ(s(fun(X494,'type.option.option'(fun(sK0,sK1))),X495),s(X494,happ(s(fun(sK0,X494),X496),s(sK0,sK2))))),s('type.option.option'(sK0),'const.option.NONE_0'))) != s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))),s('type.option.option'(fun(sK0,sK1)),happ(s(fun(X494,'type.option.option'(fun(sK0,sK1))),X495),s(X494,happ(s(fun(sK0,X494),X496),s(sK0,sK2)))))))) ) | $spl340),
  inference(cnf_transformation,[],[f23474_D])).
fof(f23474_D,plain,(
  ( ! [X494,X496,X495] : (s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(sK0,sK1)),happ(s(fun(X494,'type.option.option'(fun(sK0,sK1))),X495),s(X494,happ(s(fun(sK0,X494),X496),s(sK0,sK2))))),s('type.option.option'(sK0),'const.option.NONE_0'))) != s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))),s('type.option.option'(fun(sK0,sK1)),happ(s(fun(X494,'type.option.option'(fun(sK0,sK1))),X495),s(X494,happ(s(fun(sK0,X494),X496),s(sK0,sK2)))))))) ) <=> ~$spl340),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl340])])).
fof(f20810,plain,(
  ( ! [X64,X62,X63] : (s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.NONE_0') != s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),sK3))) | s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(sK0,sK1)),happ(s(fun(X62,'type.option.option'(fun(sK0,sK1))),X63),s(X62,happ(s(fun(sK0,X62),X64),s(sK0,sK2))))),s('type.option.option'(sK0),'const.option.NONE_0'))) != s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))),s('type.option.option'(fun(sK0,sK1)),happ(s(fun(X62,'type.option.option'(fun(sK0,sK1))),X63),s(X62,happ(s(fun(sK0,X62),X64),s(sK0,sK2)))))))) ) | $spl18),
  inference(superposition,[],[f17101,f17484])).
fof(f23477,plain,(
  ( ! [X486,X488,X487] : (s('type.option.option'(fun(sK0,sK1)),sK3) = s('type.option.option'(fun(sK0,sK1)),happ(s(fun(X486,'type.option.option'(fun(sK0,sK1))),X487),s(X486,happ(s(fun(sK0,X486),X488),s(sK0,sK2)))))) ) | $spl342),
  inference(cnf_transformation,[],[f23477_D])).
fof(f23477_D,plain,(
  ( ! [X486,X488,X487] : (s('type.option.option'(fun(sK0,sK1)),sK3) = s('type.option.option'(fun(sK0,sK1)),happ(s(fun(X486,'type.option.option'(fun(sK0,sK1))),X487),s(X486,happ(s(fun(sK0,X486),X488),s(sK0,sK2)))))) ) <=> ~$spl342),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl342])])).
fof(f23486,plain,(
  ( ! [X66,X67,X65] : (s('type.option.option'(fun(sK0,sK1)),sK3) = s('type.option.option'(fun(sK0,sK1)),happ(s(fun(X65,'type.option.option'(fun(sK0,sK1))),X66),s(X65,happ(s(fun(sK0,X65),X67),s(sK0,sK2))))) | s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.NONE_0') != s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),sK3)))) ) | ($spl4 | $spl18)),
  inference(forward_demodulation,[],[f20811,f76])).
fof(f20811,plain,(
  ( ! [X66,X67,X65] : (s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.NONE_0') != s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),sK3))) | s('type.option.option'(fun(sK0,sK1)),'const.option.SOME_1'(s(fun(sK0,sK1),sK4(sK3,fun(sK0,sK1))))) = s('type.option.option'(fun(sK0,sK1)),happ(s(fun(X65,'type.option.option'(fun(sK0,sK1))),X66),s(X65,happ(s(fun(sK0,X65),X67),s(sK0,sK2)))))) ) | ($spl4 | $spl18)),
  inference(superposition,[],[f2537,f17484])).
fof(f23485,plain,(
  ( ! [X78,X76,X77] : (s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(sK0,sK1)),happ(s(fun(X76,'type.option.option'(fun(sK0,sK1))),happ(s(fun(sK0,fun(X76,'type.option.option'(fun(sK0,sK1)))),X77),s(sK0,sK2))),s(X76,X78))),s('type.option.option'(sK0),'const.option.NONE_0'))) != s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))),s('type.option.option'(fun(sK0,sK1)),happ(s(fun(X76,'type.option.option'(fun(sK0,sK1))),happ(s(fun(sK0,fun(X76,'type.option.option'(fun(sK0,sK1)))),X77),s(sK0,sK2))),s(X76,X78)))))) ) | $spl352),
  inference(cnf_transformation,[],[f23485_D])).
fof(f23485_D,plain,(
  ( ! [X78,X76,X77] : (s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(sK0,sK1)),happ(s(fun(X76,'type.option.option'(fun(sK0,sK1))),happ(s(fun(sK0,fun(X76,'type.option.option'(fun(sK0,sK1)))),X77),s(sK0,sK2))),s(X76,X78))),s('type.option.option'(sK0),'const.option.NONE_0'))) != s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))),s('type.option.option'(fun(sK0,sK1)),happ(s(fun(X76,'type.option.option'(fun(sK0,sK1))),happ(s(fun(sK0,fun(X76,'type.option.option'(fun(sK0,sK1)))),X77),s(sK0,sK2))),s(X76,X78)))))) ) <=> ~$spl352),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl352])])).
fof(f21977,plain,(
  ( ! [X78,X76,X77] : (s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.NONE_0') != s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),sK3))) | s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(sK0,sK1)),happ(s(fun(X76,'type.option.option'(fun(sK0,sK1))),happ(s(fun(sK0,fun(X76,'type.option.option'(fun(sK0,sK1)))),X77),s(sK0,sK2))),s(X76,X78))),s('type.option.option'(sK0),'const.option.NONE_0'))) != s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))),s('type.option.option'(fun(sK0,sK1)),happ(s(fun(X76,'type.option.option'(fun(sK0,sK1))),happ(s(fun(sK0,fun(X76,'type.option.option'(fun(sK0,sK1)))),X77),s(sK0,sK2))),s(X76,X78)))))) ) | $spl18),
  inference(superposition,[],[f17101,f20783])).
fof(f20783,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.option.option'(X0),'const.option.NONE_0') = s('type.option.option'(X0),'const.option.SOME_1'(s(X0,happ(s(fun(X1,X0),happ(s(fun(sK0,fun(X1,X0)),X3),s(sK0,sK2))),s(X1,X2)))))) ) | $spl18),
  inference(superposition,[],[f17484,f48])).
fof(f23484,plain,(
  ( ! [X80,X81,X79] : (s('type.option.option'(fun(sK0,sK1)),sK3) = s('type.option.option'(fun(sK0,sK1)),happ(s(fun(X79,'type.option.option'(fun(sK0,sK1))),happ(s(fun(sK0,fun(X79,'type.option.option'(fun(sK0,sK1)))),X80),s(sK0,sK2))),s(X79,X81)))) ) | $spl350),
  inference(cnf_transformation,[],[f23484_D])).
fof(f23484_D,plain,(
  ( ! [X80,X81,X79] : (s('type.option.option'(fun(sK0,sK1)),sK3) = s('type.option.option'(fun(sK0,sK1)),happ(s(fun(X79,'type.option.option'(fun(sK0,sK1))),happ(s(fun(sK0,fun(X79,'type.option.option'(fun(sK0,sK1)))),X80),s(sK0,sK2))),s(X79,X81)))) ) <=> ~$spl350),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl350])])).
fof(f23483,plain,(
  ( ! [X80,X81,X79] : (s('type.option.option'(fun(sK0,sK1)),sK3) = s('type.option.option'(fun(sK0,sK1)),happ(s(fun(X79,'type.option.option'(fun(sK0,sK1))),happ(s(fun(sK0,fun(X79,'type.option.option'(fun(sK0,sK1)))),X80),s(sK0,sK2))),s(X79,X81))) | s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.NONE_0') != s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),sK3)))) ) | ($spl4 | $spl18)),
  inference(forward_demodulation,[],[f21978,f76])).
fof(f21978,plain,(
  ( ! [X80,X81,X79] : (s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.NONE_0') != s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),sK3))) | s('type.option.option'(fun(sK0,sK1)),'const.option.SOME_1'(s(fun(sK0,sK1),sK4(sK3,fun(sK0,sK1))))) = s('type.option.option'(fun(sK0,sK1)),happ(s(fun(X79,'type.option.option'(fun(sK0,sK1))),happ(s(fun(sK0,fun(X79,'type.option.option'(fun(sK0,sK1)))),X80),s(sK0,sK2))),s(X79,X81)))) ) | ($spl4 | $spl18)),
  inference(superposition,[],[f2537,f20783])).
fof(f23480,plain,(
  ( ! [X588,X589,X587] : (s('type.option.option'(fun(sK0,sK1)),sK3) != s('type.option.option'(fun(sK0,sK1)),happ(s(fun(X587,'type.option.option'(fun(sK0,sK1))),X588),s(X587,happ(s(fun(sK0,X587),X589),s(sK0,sK2)))))) ) | $spl348),
  inference(cnf_transformation,[],[f23480_D])).
fof(f23480_D,plain,(
  ( ! [X588,X589,X587] : (s('type.option.option'(fun(sK0,sK1)),sK3) != s('type.option.option'(fun(sK0,sK1)),happ(s(fun(X587,'type.option.option'(fun(sK0,sK1))),X588),s(X587,happ(s(fun(sK0,X587),X589),s(sK0,sK2)))))) ) <=> ~$spl348),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl348])])).
fof(f1708,plain,(
  s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.NONE_0') = s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),sK3))) | $spl64),
  inference(cnf_transformation,[],[f1708_D])).
fof(f1708_D,plain,(
  s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.NONE_0') = s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),sK3))) <=> ~$spl64),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl64])])).
fof(f23078,plain,(
  ( ! [X588,X589,X587] : (s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.NONE_0') = s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),sK3))) | s('type.option.option'(fun(sK0,sK1)),sK3) != s('type.option.option'(fun(sK0,sK1)),happ(s(fun(X587,'type.option.option'(fun(sK0,sK1))),X588),s(X587,happ(s(fun(sK0,X587),X589),s(sK0,sK2)))))) ) | ($spl4 | $spl18)),
  inference(forward_demodulation,[],[f23077,f16934])).
fof(f23077,plain,(
  ( ! [X588,X586,X589,X587] : (s('type.option.option'(fun(sK0,sK1)),sK3) != s('type.option.option'(fun(sK0,sK1)),happ(s(fun(X587,'type.option.option'(fun(sK0,sK1))),X588),s(X587,happ(s(fun(sK0,X587),X589),s(sK0,sK2))))) | s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),sK3))) = s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),happ(s(fun(sK0,'type.option.option'(fun(sK0,sK1))),X586),s(sK0,sK2)))))) ) | ($spl4 | $spl18)),
  inference(forward_demodulation,[],[f22834,f76])).
fof(f22834,plain,(
  ( ! [X588,X586,X589,X587] : (s('type.option.option'(fun(sK0,sK1)),'const.option.SOME_1'(s(fun(sK0,sK1),sK4(sK3,fun(sK0,sK1))))) != s('type.option.option'(fun(sK0,sK1)),happ(s(fun(X587,'type.option.option'(fun(sK0,sK1))),X588),s(X587,happ(s(fun(sK0,X587),X589),s(sK0,sK2))))) | s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),sK3))) = s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),happ(s(fun(sK0,'type.option.option'(fun(sK0,sK1))),X586),s(sK0,sK2)))))) ) | ($spl4 | $spl18)),
  inference(superposition,[],[f2541,f20890])).
fof(f2541,plain,(
  ( ! [X14] : (s('type.option.option'(fun(sK0,sK1)),X14) != s('type.option.option'(fun(sK0,sK1)),'const.option.SOME_1'(s(fun(sK0,sK1),sK4(sK3,fun(sK0,sK1))))) | s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),sK3))) = s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),X14)))) ) | $spl4),
  inference(superposition,[],[f44,f76])).
fof(f23080,plain,(
  ( ! [X590] : (s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.NONE_0') != s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),sK3))) | s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(sK0,sK1)),happ(s(fun(sK0,'type.option.option'(fun(sK0,sK1))),X590),s(sK0,sK2))),s('type.option.option'(sK0),'const.option.NONE_0'))) != s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))),s('type.option.option'(fun(sK0,sK1)),happ(s(fun(sK0,'type.option.option'(fun(sK0,sK1))),X590),s(sK0,sK2)))))) ) | $spl18),
  inference(forward_demodulation,[],[f22835,f17484])).
fof(f22835,plain,(
  ( ! [X592,X590,X593,X591] : (s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),sK3))) != s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),happ(s(fun(X591,'type.option.option'(fun(sK0,sK1))),X592),s(X591,happ(s(fun(sK0,X591),X593),s(sK0,sK2))))))) | s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(sK0,sK1)),happ(s(fun(sK0,'type.option.option'(fun(sK0,sK1))),X590),s(sK0,sK2))),s('type.option.option'(sK0),'const.option.NONE_0'))) != s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))),s('type.option.option'(fun(sK0,sK1)),happ(s(fun(sK0,'type.option.option'(fun(sK0,sK1))),X590),s(sK0,sK2)))))) ) | $spl18),
  inference(superposition,[],[f17101,f20890])).
fof(f23478,plain,(
  ( ! [X596,X597,X595] : (s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))),s('type.option.option'(fun(sK0,sK1)),happ(s(fun(X595,'type.option.option'(fun(sK0,sK1))),X596),s(X595,happ(s(fun(sK0,X595),X597),s(sK0,sK2)))))))) ) | $spl344),
  inference(cnf_transformation,[],[f23478_D])).
fof(f23478_D,plain,(
  ( ! [X596,X597,X595] : (s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))),s('type.option.option'(fun(sK0,sK1)),happ(s(fun(X595,'type.option.option'(fun(sK0,sK1))),X596),s(X595,happ(s(fun(sK0,X595),X597),s(sK0,sK2)))))))) ) <=> ~$spl344),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl344])])).
fof(f23081,plain,(
  ( ! [X596,X597,X595] : (s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.NONE_0') != s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),sK3))) | s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))),s('type.option.option'(fun(sK0,sK1)),happ(s(fun(X595,'type.option.option'(fun(sK0,sK1))),X596),s(X595,happ(s(fun(sK0,X595),X597),s(sK0,sK2)))))))) ) | ($spl12 | $spl18)),
  inference(forward_demodulation,[],[f22836,f16934])).
fof(f22836,plain,(
  ( ! [X596,X594,X597,X595] : (s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))),s('type.option.option'(fun(sK0,sK1)),happ(s(fun(X595,'type.option.option'(fun(sK0,sK1))),X596),s(X595,happ(s(fun(sK0,X595),X597),s(sK0,sK2))))))) | s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),sK3))) != s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),happ(s(fun(sK0,'type.option.option'(fun(sK0,sK1))),X594),s(sK0,sK2)))))) ) | ($spl12 | $spl18)),
  inference(superposition,[],[f17181,f20890])).
fof(f23476,plain,(
  ( ! [X486,X488,X487] : (s('type.option.option'(fun(sK0,sK1)),sK3) = s('type.option.option'(fun(sK0,sK1)),happ(s(fun(X486,'type.option.option'(fun(sK0,sK1))),X487),s(X486,happ(s(fun(sK0,X486),X488),s(sK0,sK2))))) | s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.NONE_0') != s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),sK3)))) ) | ($spl4 | $spl18)),
  inference(forward_demodulation,[],[f23152,f76])).
fof(f23152,plain,(
  ( ! [X486,X488,X487] : (s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.NONE_0') != s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),sK3))) | s('type.option.option'(fun(sK0,sK1)),'const.option.SOME_1'(s(fun(sK0,sK1),sK4(sK3,fun(sK0,sK1))))) = s('type.option.option'(fun(sK0,sK1)),happ(s(fun(X486,'type.option.option'(fun(sK0,sK1))),X487),s(X486,happ(s(fun(sK0,X486),X488),s(sK0,sK2)))))) ) | ($spl4 | $spl18)),
  inference(forward_demodulation,[],[f22981,f16934])).
fof(f22981,plain,(
  ( ! [X486,X488,X487,X489] : (s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),sK3))) != s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),happ(s(fun(sK0,'type.option.option'(fun(sK0,sK1))),X489),s(sK0,sK2))))) | s('type.option.option'(fun(sK0,sK1)),'const.option.SOME_1'(s(fun(sK0,sK1),sK4(sK3,fun(sK0,sK1))))) = s('type.option.option'(fun(sK0,sK1)),happ(s(fun(X486,'type.option.option'(fun(sK0,sK1))),X487),s(X486,happ(s(fun(sK0,X486),X488),s(sK0,sK2)))))) ) | ($spl4 | $spl18)),
  inference(superposition,[],[f2537,f20890])).
fof(f23154,plain,(
  ( ! [X494,X496,X495] : (s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.NONE_0') != s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),sK3))) | s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(sK0,sK1)),happ(s(fun(X494,'type.option.option'(fun(sK0,sK1))),X495),s(X494,happ(s(fun(sK0,X494),X496),s(sK0,sK2))))),s('type.option.option'(sK0),'const.option.NONE_0'))) != s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))),s('type.option.option'(fun(sK0,sK1)),happ(s(fun(X494,'type.option.option'(fun(sK0,sK1))),X495),s(X494,happ(s(fun(sK0,X494),X496),s(sK0,sK2)))))))) ) | $spl18),
  inference(forward_demodulation,[],[f22983,f16934])).
fof(f22983,plain,(
  ( ! [X494,X496,X495,X497] : (s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),sK3))) != s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),happ(s(fun(sK0,'type.option.option'(fun(sK0,sK1))),X497),s(sK0,sK2))))) | s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(sK0,sK1)),happ(s(fun(X494,'type.option.option'(fun(sK0,sK1))),X495),s(X494,happ(s(fun(sK0,X494),X496),s(sK0,sK2))))),s('type.option.option'(sK0),'const.option.NONE_0'))) != s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))),s('type.option.option'(fun(sK0,sK1)),happ(s(fun(X494,'type.option.option'(fun(sK0,sK1))),X495),s(X494,happ(s(fun(sK0,X494),X496),s(sK0,sK2)))))))) ) | $spl18),
  inference(superposition,[],[f17101,f20890])).
fof(f23155,plain,(
  ( ! [X501] : (s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.NONE_0') != s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),sK3))) | s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))),s('type.option.option'(fun(sK0,sK1)),happ(s(fun(sK0,'type.option.option'(fun(sK0,sK1))),X501),s(sK0,sK2)))))) ) | ($spl12 | $spl18)),
  inference(forward_demodulation,[],[f22984,f17484])).
fof(f22984,plain,(
  ( ! [X499,X500,X498,X501] : (s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))),s('type.option.option'(fun(sK0,sK1)),happ(s(fun(sK0,'type.option.option'(fun(sK0,sK1))),X501),s(sK0,sK2))))) | s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),sK3))) != s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),happ(s(fun(X498,'type.option.option'(fun(sK0,sK1))),X499),s(X498,happ(s(fun(sK0,X498),X500),s(sK0,sK2)))))))) ) | ($spl12 | $spl18)),
  inference(superposition,[],[f17181,f20890])).
fof(f23472,plain,(
  s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),sK4('const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),sK3)),'type.option.option'(fun(sK0,sK1)))))) = s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),sK4('const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),sK4('const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),sK3)),'type.option.option'(fun(sK0,sK1))))),'type.option.option'(fun(sK0,sK1)))))) | $spl336),
  inference(cnf_transformation,[],[f23472_D])).
fof(f23472_D,plain,(
  s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),sK4('const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),sK3)),'type.option.option'(fun(sK0,sK1)))))) = s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),sK4('const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),sK4('const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),sK3)),'type.option.option'(fun(sK0,sK1))))),'type.option.option'(fun(sK0,sK1)))))) <=> ~$spl336),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl336])])).
fof(f23466,plain,(
  s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.NONE_0') != s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),sK3))) | s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),sK4('const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),sK3)),'type.option.option'(fun(sK0,sK1)))))) = s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),sK4('const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),sK4('const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),sK3)),'type.option.option'(fun(sK0,sK1))))),'type.option.option'(fun(sK0,sK1)))))) | $spl55),
  inference(superposition,[],[f1688,f47])).
fof(f1688,plain,(
  s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),sK3))) != s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),sK4('const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),sK3)),'type.option.option'(fun(sK0,sK1)))))) | $spl55),
  inference(cnf_transformation,[],[f1688_D])).
fof(f1688_D,plain,(
  s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),sK3))) != s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),sK4('const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),sK3)),'type.option.option'(fun(sK0,sK1)))))) <=> ~$spl55),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl55])])).
fof(f23470,plain,(
  $false | ($spl55 | $spl65)),
  inference(subsumption_resolution,[],[f23469,f1709])).
fof(f23469,plain,(
  s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.NONE_0') = s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),sK3))) | $spl55),
  inference(trivial_inequality_removal,[],[f23463])).
fof(f23463,plain,(
  s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),sK3))) != s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),sK3))) | s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.NONE_0') = s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),sK3))) | $spl55),
  inference(superposition,[],[f1688,f47])).
fof(f13662,plain,(
  ( ! [X47,X45,X46] : (s('type.option.option'(sK1),happ(s(fun(X45,'type.option.option'(sK1)),X46),s(X45,happ(s(fun(sK0,X45),X47),s(sK0,sK2))))) = s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,sK4(happ(s(fun(X45,'type.option.option'(sK1)),X46),s(X45,happ(s(fun(sK0,X45),X47),s(sK0,sK2)))),sK1))))) ) | $spl244),
  inference(cnf_transformation,[],[f13662_D])).
fof(f13662_D,plain,(
  ( ! [X47,X45,X46] : (s('type.option.option'(sK1),happ(s(fun(X45,'type.option.option'(sK1)),X46),s(X45,happ(s(fun(sK0,X45),X47),s(sK0,sK2))))) = s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,sK4(happ(s(fun(X45,'type.option.option'(sK1)),X46),s(X45,happ(s(fun(sK0,X45),X47),s(sK0,sK2)))),sK1))))) ) <=> ~$spl244),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl244])])).
fof(f13663,plain,(
  ( ! [X48] : (s('type.option.option'(sK1),happ(s(fun(sK0,'type.option.option'(sK1)),X48),s(sK0,sK2))) = s('type.option.option'(sK1),sK4('const.option.SOME_1'(s('type.option.option'(sK1),happ(s(fun(sK0,'type.option.option'(sK1)),X48),s(sK0,sK2)))),'type.option.option'(sK1)))) ) | $spl246),
  inference(cnf_transformation,[],[f13663_D])).
fof(f13663_D,plain,(
  ( ! [X48] : (s('type.option.option'(sK1),happ(s(fun(sK0,'type.option.option'(sK1)),X48),s(sK0,sK2))) = s('type.option.option'(sK1),sK4('const.option.SOME_1'(s('type.option.option'(sK1),happ(s(fun(sK0,'type.option.option'(sK1)),X48),s(sK0,sK2)))),'type.option.option'(sK1)))) ) <=> ~$spl246),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl246])])).
fof(f23007,plain,(
  ( ! [X592,X590,X593,X591] : (s('type.option.option'(sK1),happ(s(fun(sK0,'type.option.option'(sK1)),X593),s(sK0,sK2))) = s('type.option.option'(sK1),sK4('const.option.SOME_1'(s('type.option.option'(sK1),happ(s(fun(sK0,'type.option.option'(sK1)),X593),s(sK0,sK2)))),'type.option.option'(sK1))) | s('type.option.option'(sK1),happ(s(fun(X590,'type.option.option'(sK1)),X591),s(X590,happ(s(fun(sK0,X590),X592),s(sK0,sK2))))) = s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,sK4(happ(s(fun(X590,'type.option.option'(sK1)),X591),s(X590,happ(s(fun(sK0,X590),X592),s(sK0,sK2)))),sK1))))) ) | ($spl6 | $spl18 | $spl115)),
  inference(superposition,[],[f13528,f20890])).
fof(f7045,plain,(
  ( ! [X32] : (s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),happ(s(fun(sK0,'type.option.option'(fun(fun(sK0,sK1),sK1))),X32),s(sK0,sK2))),s('type.option.option'(fun(sK0,sK1)),sK3)))) ) | $spl216),
  inference(cnf_transformation,[],[f7045_D])).
fof(f7045_D,plain,(
  ( ! [X32] : (s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),happ(s(fun(sK0,'type.option.option'(fun(fun(sK0,sK1),sK1))),X32),s(sK0,sK2))),s('type.option.option'(fun(sK0,sK1)),sK3)))) ) <=> ~$spl216),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl216])])).
fof(f23156,plain,(
  ( ! [X505] : (s('type.option.option'('type.option.option'(fun(fun(sK0,sK1),sK1))),'const.option.NONE_0') != s('type.option.option'('type.option.option'(fun(fun(sK0,sK1),sK1))),'const.option.SOME_1'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))))) | s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),happ(s(fun(sK0,'type.option.option'(fun(fun(sK0,sK1),sK1))),X505),s(sK0,sK2))),s('type.option.option'(fun(sK0,sK1)),sK3)))) ) | ($spl12 | $spl18)),
  inference(forward_demodulation,[],[f22985,f17484])).
fof(f22985,plain,(
  ( ! [X505,X502,X504,X503] : (s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),happ(s(fun(sK0,'type.option.option'(fun(fun(sK0,sK1),sK1))),X505),s(sK0,sK2))),s('type.option.option'(fun(sK0,sK1)),sK3))) | s('type.option.option'('type.option.option'(fun(fun(sK0,sK1),sK1))),'const.option.SOME_1'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))))) != s('type.option.option'('type.option.option'(fun(fun(sK0,sK1),sK1))),'const.option.SOME_1'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),happ(s(fun(X502,'type.option.option'(fun(fun(sK0,sK1),sK1))),X503),s(X502,happ(s(fun(sK0,X502),X504),s(sK0,sK2)))))))) ) | ($spl12 | $spl18)),
  inference(superposition,[],[f17178,f20890])).
fof(f17178,plain,(
  ( ! [X2] : (s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),X2),s('type.option.option'(fun(sK0,sK1)),sK3))) | s('type.option.option'('type.option.option'(fun(fun(sK0,sK1),sK1))),'const.option.SOME_1'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),X2))) != s('type.option.option'('type.option.option'(fun(fun(sK0,sK1),sK1))),'const.option.SOME_1'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2)))))))) ) | ($spl12 | $spl18)),
  inference(superposition,[],[f17127,f43])).
fof(f16664,plain,(
  ( ! [X45,X43,X44] : (s('type.option.option'(fun(sK0,sK1)),happ(s(fun(X43,'type.option.option'(fun(sK0,sK1))),X44),s(X43,happ(s(fun(sK0,X43),X45),s(sK0,sK2))))) = s('type.option.option'(fun(sK0,sK1)),'const.option.SOME_1'(s(fun(sK0,sK1),sK4(happ(s(fun(X43,'type.option.option'(fun(sK0,sK1))),X44),s(X43,happ(s(fun(sK0,X43),X45),s(sK0,sK2)))),fun(sK0,sK1)))))) ) | $spl258),
  inference(cnf_transformation,[],[f16664_D])).
fof(f16664_D,plain,(
  ( ! [X45,X43,X44] : (s('type.option.option'(fun(sK0,sK1)),happ(s(fun(X43,'type.option.option'(fun(sK0,sK1))),X44),s(X43,happ(s(fun(sK0,X43),X45),s(sK0,sK2))))) = s('type.option.option'(fun(sK0,sK1)),'const.option.SOME_1'(s(fun(sK0,sK1),sK4(happ(s(fun(X43,'type.option.option'(fun(sK0,sK1))),X44),s(X43,happ(s(fun(sK0,X43),X45),s(sK0,sK2)))),fun(sK0,sK1)))))) ) <=> ~$spl258),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl258])])).
fof(f16665,plain,(
  ( ! [X46] : (s('type.option.option'(sK1),'const.option.NONE_0') = s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))),s('type.option.option'(fun(sK0,sK1)),happ(s(fun(sK0,'type.option.option'(fun(sK0,sK1))),X46),s(sK0,sK2)))))) ) | $spl260),
  inference(cnf_transformation,[],[f16665_D])).
fof(f16665_D,plain,(
  ( ! [X46] : (s('type.option.option'(sK1),'const.option.NONE_0') = s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))),s('type.option.option'(fun(sK0,sK1)),happ(s(fun(sK0,'type.option.option'(fun(sK0,sK1))),X46),s(sK0,sK2)))))) ) <=> ~$spl260),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl260])])).
fof(f22979,plain,(
  ( ! [X478,X480,X479,X481] : (s('type.option.option'(sK1),'const.option.NONE_0') = s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))),s('type.option.option'(fun(sK0,sK1)),happ(s(fun(sK0,'type.option.option'(fun(sK0,sK1))),X481),s(sK0,sK2))))) | s('type.option.option'(fun(sK0,sK1)),happ(s(fun(X478,'type.option.option'(fun(sK0,sK1))),X479),s(X478,happ(s(fun(sK0,X478),X480),s(sK0,sK2))))) = s('type.option.option'(fun(sK0,sK1)),'const.option.SOME_1'(s(fun(sK0,sK1),sK4(happ(s(fun(X478,'type.option.option'(fun(sK0,sK1))),X479),s(X478,happ(s(fun(sK0,X478),X480),s(sK0,sK2)))),fun(sK0,sK1)))))) ) | ($spl6 | $spl18)),
  inference(superposition,[],[f320,f20890])).
fof(f13667,plain,(
  ( ! [X58] : (s('type.option.option'(sK1),happ(s(fun(sK0,'type.option.option'(sK1)),X58),s(sK0,sK2))) = s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,sK4(happ(s(fun(sK0,'type.option.option'(sK1)),X58),s(sK0,sK2)),sK1))))) ) | $spl252),
  inference(cnf_transformation,[],[f13667_D])).
fof(f13667_D,plain,(
  ( ! [X58] : (s('type.option.option'(sK1),happ(s(fun(sK0,'type.option.option'(sK1)),X58),s(sK0,sK2))) = s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,sK4(happ(s(fun(sK0,'type.option.option'(sK1)),X58),s(sK0,sK2)),sK1))))) ) <=> ~$spl252),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl252])])).
fof(f13668,plain,(
  ( ! [X61,X59,X60] : (s('type.option.option'(sK1),happ(s(fun(X59,'type.option.option'(sK1)),X60),s(X59,happ(s(fun(sK0,X59),X61),s(sK0,sK2))))) = s('type.option.option'(sK1),sK4('const.option.SOME_1'(s('type.option.option'(sK1),happ(s(fun(X59,'type.option.option'(sK1)),X60),s(X59,happ(s(fun(sK0,X59),X61),s(sK0,sK2)))))),'type.option.option'(sK1)))) ) | $spl254),
  inference(cnf_transformation,[],[f13668_D])).
fof(f13668_D,plain,(
  ( ! [X61,X59,X60] : (s('type.option.option'(sK1),happ(s(fun(X59,'type.option.option'(sK1)),X60),s(X59,happ(s(fun(sK0,X59),X61),s(sK0,sK2))))) = s('type.option.option'(sK1),sK4('const.option.SOME_1'(s('type.option.option'(sK1),happ(s(fun(X59,'type.option.option'(sK1)),X60),s(X59,happ(s(fun(sK0,X59),X61),s(sK0,sK2)))))),'type.option.option'(sK1)))) ) <=> ~$spl254),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl254])])).
fof(f22859,plain,(
  ( ! [X689,X687,X688,X686] : (s('type.option.option'(sK1),happ(s(fun(X687,'type.option.option'(sK1)),X688),s(X687,happ(s(fun(sK0,X687),X689),s(sK0,sK2))))) = s('type.option.option'(sK1),sK4('const.option.SOME_1'(s('type.option.option'(sK1),happ(s(fun(X687,'type.option.option'(sK1)),X688),s(X687,happ(s(fun(sK0,X687),X689),s(sK0,sK2)))))),'type.option.option'(sK1))) | s('type.option.option'(sK1),happ(s(fun(sK0,'type.option.option'(sK1)),X686),s(sK0,sK2))) = s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,sK4(happ(s(fun(sK0,'type.option.option'(sK1)),X686),s(sK0,sK2)),sK1))))) ) | ($spl6 | $spl18 | $spl115)),
  inference(superposition,[],[f13528,f20890])).
fof(f12093,plain,(
  ( ! [X573,X572,X574] : (s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),happ(s(fun(X572,'type.option.option'(fun(fun(sK0,sK1),sK1))),X573),s(X572,happ(s(fun(sK0,X572),X574),s(sK0,sK2))))),s('type.option.option'(fun(sK0,sK1)),sK3)))) ) | $spl232),
  inference(cnf_transformation,[],[f12093_D])).
fof(f12093_D,plain,(
  ( ! [X573,X572,X574] : (s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),happ(s(fun(X572,'type.option.option'(fun(fun(sK0,sK1),sK1))),X573),s(X572,happ(s(fun(sK0,X572),X574),s(sK0,sK2))))),s('type.option.option'(fun(sK0,sK1)),sK3)))) ) <=> ~$spl232),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl232])])).
fof(f23082,plain,(
  ( ! [X600,X601,X599] : (s('type.option.option'('type.option.option'(fun(fun(sK0,sK1),sK1))),'const.option.NONE_0') != s('type.option.option'('type.option.option'(fun(fun(sK0,sK1),sK1))),'const.option.SOME_1'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))))) | s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),happ(s(fun(X599,'type.option.option'(fun(fun(sK0,sK1),sK1))),X600),s(X599,happ(s(fun(sK0,X599),X601),s(sK0,sK2))))),s('type.option.option'(fun(sK0,sK1)),sK3)))) ) | ($spl12 | $spl18)),
  inference(forward_demodulation,[],[f22837,f16934])).
fof(f22837,plain,(
  ( ! [X600,X598,X601,X599] : (s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),happ(s(fun(X599,'type.option.option'(fun(fun(sK0,sK1),sK1))),X600),s(X599,happ(s(fun(sK0,X599),X601),s(sK0,sK2))))),s('type.option.option'(fun(sK0,sK1)),sK3))) | s('type.option.option'('type.option.option'(fun(fun(sK0,sK1),sK1))),'const.option.SOME_1'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))))) != s('type.option.option'('type.option.option'(fun(fun(sK0,sK1),sK1))),'const.option.SOME_1'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),happ(s(fun(sK0,'type.option.option'(fun(fun(sK0,sK1),sK1))),X598),s(sK0,sK2)))))) ) | ($spl12 | $spl18)),
  inference(superposition,[],[f17178,f20890])).
fof(f16670,plain,(
  ( ! [X56] : (s('type.option.option'(fun(sK0,sK1)),happ(s(fun(sK0,'type.option.option'(fun(sK0,sK1))),X56),s(sK0,sK2))) = s('type.option.option'(fun(sK0,sK1)),'const.option.SOME_1'(s(fun(sK0,sK1),sK4(happ(s(fun(sK0,'type.option.option'(fun(sK0,sK1))),X56),s(sK0,sK2)),fun(sK0,sK1)))))) ) | $spl266),
  inference(cnf_transformation,[],[f16670_D])).
fof(f16670_D,plain,(
  ( ! [X56] : (s('type.option.option'(fun(sK0,sK1)),happ(s(fun(sK0,'type.option.option'(fun(sK0,sK1))),X56),s(sK0,sK2))) = s('type.option.option'(fun(sK0,sK1)),'const.option.SOME_1'(s(fun(sK0,sK1),sK4(happ(s(fun(sK0,'type.option.option'(fun(sK0,sK1))),X56),s(sK0,sK2)),fun(sK0,sK1)))))) ) <=> ~$spl266),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl266])])).
fof(f16671,plain,(
  ( ! [X59,X57,X58] : (s('type.option.option'(sK1),'const.option.NONE_0') = s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))),s('type.option.option'(fun(sK0,sK1)),happ(s(fun(X57,'type.option.option'(fun(sK0,sK1))),X58),s(X57,happ(s(fun(sK0,X57),X59),s(sK0,sK2)))))))) ) | $spl268),
  inference(cnf_transformation,[],[f16671_D])).
fof(f16671_D,plain,(
  ( ! [X59,X57,X58] : (s('type.option.option'(sK1),'const.option.NONE_0') = s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))),s('type.option.option'(fun(sK0,sK1)),happ(s(fun(X57,'type.option.option'(fun(sK0,sK1))),X58),s(X57,happ(s(fun(sK0,X57),X59),s(sK0,sK2)))))))) ) <=> ~$spl268),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl268])])).
fof(f22831,plain,(
  ( ! [X575,X576,X574,X577] : (s('type.option.option'(sK1),'const.option.NONE_0') = s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))),s('type.option.option'(fun(sK0,sK1)),happ(s(fun(X575,'type.option.option'(fun(sK0,sK1))),X576),s(X575,happ(s(fun(sK0,X575),X577),s(sK0,sK2))))))) | s('type.option.option'(fun(sK0,sK1)),happ(s(fun(sK0,'type.option.option'(fun(sK0,sK1))),X574),s(sK0,sK2))) = s('type.option.option'(fun(sK0,sK1)),'const.option.SOME_1'(s(fun(sK0,sK1),sK4(happ(s(fun(sK0,'type.option.option'(fun(sK0,sK1))),X574),s(sK0,sK2)),fun(sK0,sK1)))))) ) | ($spl6 | $spl18)),
  inference(superposition,[],[f320,f20890])).
fof(f22177,plain,(
  $false | ($spl11 | $spl18 | $spl32 | $spl170)),
  inference(subsumption_resolution,[],[f22176,f17292])).
fof(f22176,plain,(
  s('type.option.option'(sK0),'const.option.NONE_0') = s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK4('const.option.SOME_1'(s(sK0,sK2)),sK0)))) | ($spl18 | $spl32 | $spl170)),
  inference(forward_demodulation,[],[f22175,f16928])).
fof(f22175,plain,(
  ( ! [X25] : (s('type.option.option'(sK0),'const.option.NONE_0') = s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK4('const.option.SOME_1'(s(sK0,happ(s(fun('type.option.option'(sK0),sK0),X25),s('type.option.option'(sK0),'const.option.NONE_0')))),sK0))))) ) | ($spl18 | $spl170)),
  inference(forward_demodulation,[],[f4715,f513])).
fof(f21828,plain,(
  $false | ($spl11 | $spl18 | $spl32 | $spl332)),
  inference(subsumption_resolution,[],[f21827,f17292])).
fof(f21827,plain,(
  s('type.option.option'(sK0),'const.option.NONE_0') = s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK4('const.option.SOME_1'(s(sK0,sK2)),sK0)))) | ($spl18 | $spl32 | $spl332)),
  inference(forward_demodulation,[],[f21805,f17470])).
fof(f17470,plain,(
  ( ! [X33] : (s('type.option.option'(sK0),'const.option.NONE_0') = s('type.option.option'(sK0),happ(s(fun(sK0,'type.option.option'(sK0)),X33),s(sK0,sK2)))) ) | ($spl18 | $spl32)),
  inference(trivial_inequality_removal,[],[f17414])).
fof(f17414,plain,(
  ( ! [X33] : (s('type.option.option'('type.option.option'(sK0)),'const.option.NONE_0') != s('type.option.option'('type.option.option'(sK0)),'const.option.NONE_0') | s('type.option.option'(sK0),'const.option.NONE_0') = s('type.option.option'(sK0),happ(s(fun(sK0,'type.option.option'(sK0)),X33),s(sK0,sK2)))) ) | ($spl18 | $spl32)),
  inference(superposition,[],[f4925,f16934])).
fof(f21805,plain,(
  ( ! [X8] : (s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK4('const.option.SOME_1'(s(sK0,sK2)),sK0)))) = s('type.option.option'(sK0),happ(s(fun(sK0,'type.option.option'(sK0)),X8),s(sK0,sK2)))) ) | ($spl18 | $spl332)),
  inference(trivial_inequality_removal,[],[f21778])).
fof(f21778,plain,(
  ( ! [X8] : (s('type.option.option'('type.option.option'(sK0)),'const.option.NONE_0') != s('type.option.option'('type.option.option'(sK0)),'const.option.NONE_0') | s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK4('const.option.SOME_1'(s(sK0,sK2)),sK0)))) = s('type.option.option'(sK0),happ(s(fun(sK0,'type.option.option'(sK0)),X8),s(sK0,sK2)))) ) | ($spl18 | $spl332)),
  inference(superposition,[],[f17402,f21724])).
fof(f21826,plain,(
  $false | ($spl11 | $spl18 | $spl32 | $spl332)),
  inference(subsumption_resolution,[],[f21825,f17292])).
fof(f21825,plain,(
  s('type.option.option'(sK0),'const.option.NONE_0') = s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK4('const.option.SOME_1'(s(sK0,sK2)),sK0)))) | ($spl32 | $spl332)),
  inference(forward_demodulation,[],[f21806,f5549])).
fof(f21806,plain,(
  ( ! [X7] : (s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK4('const.option.SOME_1'(s(sK0,sK2)),sK0)))) = s('type.option.option'(sK0),happ(s(fun('type.option.option'(sK0),'type.option.option'(sK0)),X7),s('type.option.option'(sK0),'const.option.NONE_0')))) ) | ($spl32 | $spl332)),
  inference(trivial_inequality_removal,[],[f21777])).
fof(f21777,plain,(
  ( ! [X7] : (s('type.option.option'('type.option.option'(sK0)),'const.option.NONE_0') != s('type.option.option'('type.option.option'(sK0)),'const.option.NONE_0') | s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK4('const.option.SOME_1'(s(sK0,sK2)),sK0)))) = s('type.option.option'(sK0),happ(s(fun('type.option.option'(sK0),'type.option.option'(sK0)),X7),s('type.option.option'(sK0),'const.option.NONE_0')))) ) | ($spl32 | $spl332)),
  inference(superposition,[],[f5290,f21724])).
fof(f21823,plain,(
  $false | ($spl11 | $spl18 | $spl32 | $spl332)),
  inference(subsumption_resolution,[],[f21808,f17292])).
fof(f21808,plain,(
  s('type.option.option'(sK0),'const.option.NONE_0') = s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK4('const.option.SOME_1'(s(sK0,sK2)),sK0)))) | ($spl32 | $spl332)),
  inference(trivial_inequality_removal,[],[f21770])).
fof(f21770,plain,(
  s('type.option.option'('type.option.option'(sK0)),'const.option.NONE_0') != s('type.option.option'('type.option.option'(sK0)),'const.option.NONE_0') | s('type.option.option'(sK0),'const.option.NONE_0') = s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK4('const.option.SOME_1'(s(sK0,sK2)),sK0)))) | ($spl32 | $spl332)),
  inference(superposition,[],[f4925,f21724])).
fof(f21822,plain,(
  $false | ($spl11 | $spl18 | $spl32 | $spl36 | $spl332)),
  inference(subsumption_resolution,[],[f21821,f17292])).
fof(f21821,plain,(
  s('type.option.option'(sK0),'const.option.NONE_0') = s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK4('const.option.SOME_1'(s(sK0,sK2)),sK0)))) | ($spl32 | $spl36 | $spl332)),
  inference(forward_demodulation,[],[f21809,f1465])).
fof(f21809,plain,(
  s('type.option.option'(sK0),sK4('const.option.SOME_1'(s('type.option.option'(sK0),'const.option.NONE_0')),'type.option.option'(sK0))) = s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK4('const.option.SOME_1'(s(sK0,sK2)),sK0)))) | ($spl32 | $spl36 | $spl332)),
  inference(trivial_inequality_removal,[],[f21769])).
fof(f21769,plain,(
  s('type.option.option'('type.option.option'(sK0)),'const.option.NONE_0') != s('type.option.option'('type.option.option'(sK0)),'const.option.NONE_0') | s('type.option.option'(sK0),sK4('const.option.SOME_1'(s('type.option.option'(sK0),'const.option.NONE_0')),'type.option.option'(sK0))) = s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK4('const.option.SOME_1'(s(sK0,sK2)),sK0)))) | ($spl32 | $spl36 | $spl332)),
  inference(superposition,[],[f4987,f21724])).
fof(f21724,plain,(
  s('type.option.option'('type.option.option'(sK0)),'const.option.NONE_0') = s('type.option.option'('type.option.option'(sK0)),'const.option.SOME_1'(s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK4('const.option.SOME_1'(s(sK0,sK2)),sK0)))))) | $spl332),
  inference(cnf_transformation,[],[f21724_D])).
fof(f21724_D,plain,(
  s('type.option.option'('type.option.option'(sK0)),'const.option.NONE_0') = s('type.option.option'('type.option.option'(sK0)),'const.option.SOME_1'(s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK4('const.option.SOME_1'(s(sK0,sK2)),sK0)))))) <=> ~$spl332),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl332])])).
fof(f21722,plain,(
  s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK4('const.option.SOME_1'(s(sK0,sK2)),sK0)))) = s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK4('const.option.SOME_1'(s(sK0,sK4('const.option.SOME_1'(s(sK0,sK4('const.option.SOME_1'(s(sK0,sK2)),sK0))),sK0))),sK0)))) | s('type.option.option'('type.option.option'(sK0)),'const.option.NONE_0') = s('type.option.option'('type.option.option'(sK0)),'const.option.SOME_1'(s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK4('const.option.SOME_1'(s(sK0,sK2)),sK0)))))) | ($spl11 | $spl18 | $spl32)),
  inference(forward_demodulation,[],[f21678,f17306])).
fof(f21678,plain,(
  s('type.option.option'('type.option.option'(sK0)),'const.option.NONE_0') = s('type.option.option'('type.option.option'(sK0)),'const.option.SOME_1'(s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK4('const.option.SOME_1'(s(sK0,sK2)),sK0)))))) | s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK4('const.option.SOME_1'(s(sK0,sK4('const.option.SOME_1'(s(sK0,sK2)),sK0))),sK0)))) = s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK4('const.option.SOME_1'(s(sK0,sK4('const.option.SOME_1'(s(sK0,sK4('const.option.SOME_1'(s(sK0,sK2)),sK0))),sK0))),sK0)))) | ($spl11 | $spl18 | $spl32)),
  inference(superposition,[],[f4917,f17306])).
fof(f5268,plain,(
  s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),'const.option.NONE_0'))) != s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),'const.option.OPTION_MAP_2'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))),s('type.option.option'(fun(sK0,sK1)),sK3))))) | $spl201),
  inference(cnf_transformation,[],[f5268_D])).
fof(f5268_D,plain,(
  s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),'const.option.NONE_0'))) != s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),'const.option.OPTION_MAP_2'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))),s('type.option.option'(fun(sK0,sK1)),sK3))))) <=> ~$spl201),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl201])])).
fof(f16745,plain,(
  ( ! [X35,X36,X34] : (s('type.option.option'(sK1),'const.option.NONE_0') = s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,sK4('const.option.OPTION_MAP_2'(s(fun(X34,sK1),happ(s(fun(sK0,fun(X34,sK1)),X35),s(sK0,sK2))),s('type.option.option'(X34),X36)),sK1))))) ) | $spl284),
  inference(cnf_transformation,[],[f16745_D])).
fof(f16745_D,plain,(
  ( ! [X35,X36,X34] : (s('type.option.option'(sK1),'const.option.NONE_0') = s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,sK4('const.option.OPTION_MAP_2'(s(fun(X34,sK1),happ(s(fun(sK0,fun(X34,sK1)),X35),s(sK0,sK2))),s('type.option.option'(X34),X36)),sK1))))) ) <=> ~$spl284),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl284])])).
fof(f21203,plain,(
  ( ! [X78,X76,X77] : (s('type.option.option'(sK1),'const.option.NONE_0') = s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,sK4('const.option.OPTION_MAP_2'(s(fun(X76,sK1),happ(s(fun(sK0,fun(X76,sK1)),X77),s(sK0,sK2))),s('type.option.option'(X76),X78)),sK1)))) | s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),'const.option.NONE_0'))) != s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),'const.option.OPTION_MAP_2'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))),s('type.option.option'(fun(sK0,sK1)),sK3)))))) ) | ($spl18 | $spl92)),
  inference(forward_demodulation,[],[f21143,f17485])).
fof(f17485,plain,(
  ( ! [X28,X26,X27,X25] : (s('type.option.option'(X26),'const.option.NONE_0') = s('type.option.option'(X26),'const.option.OPTION_MAP_2'(s(fun(X25,X26),happ(s(fun(sK0,fun(X25,X26)),X27),s(sK0,sK2))),s('type.option.option'(X25),X28)))) ) | $spl18),
  inference(forward_demodulation,[],[f17410,f41])).
fof(f41,plain,(
  ( ! [X2,X0,X1] : (s('type.option.option'(X1),'const.option.NONE_0') = s('type.option.option'(X1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(X0,X1)),'const.option.NONE_0'),s('type.option.option'(X0),X2)))) )),
  inference(cnf_transformation,[],[f21])).
fof(f21,plain,(
  ! [X0,X1,X2] : s('type.option.option'(X1),'const.option.NONE_0') = s('type.option.option'(X1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(X0,X1)),'const.option.NONE_0'),s('type.option.option'(X0),X2)))),
  inference(flattening,[],[f20])).
fof(f20,plain,(
  ! [X0,X1] : ! [X2] : s('type.option.option'(X1),'const.option.NONE_0') = s('type.option.option'(X1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(X0,X1)),'const.option.NONE_0'),s('type.option.option'(X0),X2)))),
  inference(rectify,[],[f13])).
fof(f13,axiom,(
  ! [X7,X6] : ! [X8] : s('type.option.option'(X6),'const.option.NONE_0') = s('type.option.option'(X6),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(X7,X6)),'const.option.NONE_0'),s('type.option.option'(X7),X8)))),
  file('thm.option.SOME_APPLY_PERMUTE','thm.option.OPTION_APPLY_def|split|0')).
fof(f17410,plain,(
  ( ! [X28,X26,X27,X25] : (s('type.option.option'(X26),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(X25,X26)),'const.option.NONE_0'),s('type.option.option'(X25),X28))) = s('type.option.option'(X26),'const.option.OPTION_MAP_2'(s(fun(X25,X26),happ(s(fun(sK0,fun(X25,X26)),X27),s(sK0,sK2))),s('type.option.option'(X25),X28)))) ) | $spl18),
  inference(superposition,[],[f40,f16934])).
fof(f21143,plain,(
  ( ! [X78,X76,X77] : (s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),'const.option.NONE_0'))) != s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),'const.option.OPTION_MAP_2'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))),s('type.option.option'(fun(sK0,sK1)),sK3))))) | s('type.option.option'(sK1),'const.option.OPTION_MAP_2'(s(fun(X76,sK1),happ(s(fun(sK0,fun(X76,sK1)),X77),s(sK0,sK2))),s('type.option.option'(X76),X78))) = s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,sK4('const.option.OPTION_MAP_2'(s(fun(X76,sK1),happ(s(fun(sK0,fun(X76,sK1)),X77),s(sK0,sK2))),s('type.option.option'(X76),X78)),sK1))))) ) | ($spl18 | $spl92)),
  inference(superposition,[],[f2360,f17485])).
fof(f16759,plain,(
  ( ! [X12,X13,X11] : (s('type.option.option'(sK1),'const.option.NONE_0') = s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,sK4('const.option.SOME_1'(s(sK1,happ(s(fun(X11,sK1),X12),s(X11,happ(s(fun(sK0,X11),X13),s(sK0,sK2)))))),sK1))))) ) | $spl298),
  inference(cnf_transformation,[],[f16759_D])).
fof(f16759_D,plain,(
  ( ! [X12,X13,X11] : (s('type.option.option'(sK1),'const.option.NONE_0') = s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,sK4('const.option.SOME_1'(s(sK1,happ(s(fun(X11,sK1),X12),s(X11,happ(s(fun(sK0,X11),X13),s(sK0,sK2)))))),sK1))))) ) <=> ~$spl298),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl298])])).
fof(f20932,plain,(
  ( ! [X173,X174,X172] : (s('type.option.option'(sK1),'const.option.NONE_0') = s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,sK4('const.option.SOME_1'(s(sK1,happ(s(fun(X172,sK1),X173),s(X172,happ(s(fun(sK0,X172),X174),s(sK0,sK2)))))),sK1)))) | s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),'const.option.NONE_0'))) != s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),'const.option.OPTION_MAP_2'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))),s('type.option.option'(fun(sK0,sK1)),sK3)))))) ) | ($spl18 | $spl92)),
  inference(forward_demodulation,[],[f20845,f17484])).
fof(f20845,plain,(
  ( ! [X173,X174,X172] : (s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),'const.option.NONE_0'))) != s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),'const.option.OPTION_MAP_2'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))),s('type.option.option'(fun(sK0,sK1)),sK3))))) | s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,happ(s(fun(X172,sK1),X173),s(X172,happ(s(fun(sK0,X172),X174),s(sK0,sK2))))))) = s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,sK4('const.option.SOME_1'(s(sK1,happ(s(fun(X172,sK1),X173),s(X172,happ(s(fun(sK0,X172),X174),s(sK0,sK2)))))),sK1))))) ) | ($spl18 | $spl92)),
  inference(superposition,[],[f2360,f17484])).
fof(f1689,plain,(
  s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),sK3))) = s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),sK4('const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),sK3)),'type.option.option'(fun(sK0,sK1)))))) | $spl54),
  inference(cnf_transformation,[],[f1689_D])).
fof(f1689_D,plain,(
  s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),sK3))) = s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),sK4('const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),sK3)),'type.option.option'(fun(sK0,sK1)))))) <=> ~$spl54),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl54])])).
fof(f8060,plain,(
  ( ! [X4] : (s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.NONE_0') != s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),X4))) | s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(sK0,sK1)),X4),s('type.option.option'(sK0),'const.option.NONE_0'))) != s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))),s('type.option.option'(fun(sK0,sK1)),X4)))) ) | $spl218),
  inference(cnf_transformation,[],[f8060_D])).
fof(f8060_D,plain,(
  ( ! [X4] : (s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.NONE_0') != s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),X4))) | s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(sK0,sK1)),X4),s('type.option.option'(sK0),'const.option.NONE_0'))) != s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))),s('type.option.option'(fun(sK0,sK1)),X4)))) ) <=> ~$spl218),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl218])])).
fof(f20686,plain,(
  ( ! [X4] : (s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.NONE_0') != s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),X4))) | s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(sK0,sK1)),X4),s('type.option.option'(sK0),'const.option.NONE_0'))) != s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))),s('type.option.option'(fun(sK0,sK1)),X4))) | s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),sK3))) = s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),sK4('const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),sK3)),'type.option.option'(fun(sK0,sK1))))))) ) | $spl18),
  inference(superposition,[],[f17101,f47])).
fof(f20680,plain,(
  ( ! [X47] : (s('type.option.option'('type.option.option'(fun(fun(sK0,sK1),sK1))),'const.option.NONE_0') != s('type.option.option'('type.option.option'(fun(fun(sK0,sK1),sK1))),'const.option.SOME_1'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))))) | s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),happ(s(fun('type.option.option'(sK0),'type.option.option'(fun(fun(sK0,sK1),sK1))),X47),s('type.option.option'(sK0),'const.option.NONE_0'))),s('type.option.option'(fun(sK0,sK1)),sK3)))) ) | ($spl12 | $spl18 | $spl32)),
  inference(forward_demodulation,[],[f20641,f16934])).
fof(f20641,plain,(
  ( ! [X47,X46] : (s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),happ(s(fun('type.option.option'(sK0),'type.option.option'(fun(fun(sK0,sK1),sK1))),X47),s('type.option.option'(sK0),'const.option.NONE_0'))),s('type.option.option'(fun(sK0,sK1)),sK3))) | s('type.option.option'('type.option.option'(fun(fun(sK0,sK1),sK1))),'const.option.SOME_1'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))))) != s('type.option.option'('type.option.option'(fun(fun(sK0,sK1),sK1))),'const.option.SOME_1'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),happ(s(fun(sK0,'type.option.option'(fun(fun(sK0,sK1),sK1))),X46),s(sK0,sK2)))))) ) | ($spl12 | $spl18 | $spl32)),
  inference(superposition,[],[f17178,f17473])).
fof(f20679,plain,(
  ( ! [X45] : (s('type.option.option'('type.option.option'(fun(fun(sK0,sK1),sK1))),'const.option.NONE_0') != s('type.option.option'('type.option.option'(fun(fun(sK0,sK1),sK1))),'const.option.SOME_1'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))))) | s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),happ(s(fun(sK0,'type.option.option'(fun(fun(sK0,sK1),sK1))),X45),s(sK0,sK2))),s('type.option.option'(fun(sK0,sK1)),sK3)))) ) | ($spl12 | $spl18 | $spl32)),
  inference(forward_demodulation,[],[f20640,f16934])).
fof(f20640,plain,(
  ( ! [X45,X44] : (s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),happ(s(fun(sK0,'type.option.option'(fun(fun(sK0,sK1),sK1))),X45),s(sK0,sK2))),s('type.option.option'(fun(sK0,sK1)),sK3))) | s('type.option.option'('type.option.option'(fun(fun(sK0,sK1),sK1))),'const.option.SOME_1'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))))) != s('type.option.option'('type.option.option'(fun(fun(sK0,sK1),sK1))),'const.option.SOME_1'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),happ(s(fun(sK0,'type.option.option'(fun(fun(sK0,sK1),sK1))),X44),s(sK0,sK2)))))) ) | ($spl12 | $spl18 | $spl32)),
  inference(superposition,[],[f17178,f17949])).
fof(f20678,plain,(
  ( ! [X43] : (s('type.option.option'('type.option.option'(fun(fun(sK0,sK1),sK1))),'const.option.NONE_0') != s('type.option.option'('type.option.option'(fun(fun(sK0,sK1),sK1))),'const.option.SOME_1'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))))) | s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),happ(s(fun(sK0,'type.option.option'(fun(fun(sK0,sK1),sK1))),X43),s(sK0,sK2))),s('type.option.option'(fun(sK0,sK1)),sK3)))) ) | ($spl12 | $spl18 | $spl32)),
  inference(forward_demodulation,[],[f20639,f16934])).
fof(f20639,plain,(
  ( ! [X43,X42] : (s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),happ(s(fun(sK0,'type.option.option'(fun(fun(sK0,sK1),sK1))),X43),s(sK0,sK2))),s('type.option.option'(fun(sK0,sK1)),sK3))) | s('type.option.option'('type.option.option'(fun(fun(sK0,sK1),sK1))),'const.option.SOME_1'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))))) != s('type.option.option'('type.option.option'(fun(fun(sK0,sK1),sK1))),'const.option.SOME_1'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),happ(s(fun(sK0,'type.option.option'(fun(fun(sK0,sK1),sK1))),X42),s(sK0,sK2)))))) ) | ($spl12 | $spl18 | $spl32)),
  inference(superposition,[],[f17178,f17949])).
fof(f20677,plain,(
  ( ! [X41] : (s('type.option.option'('type.option.option'(fun(fun(sK0,sK1),sK1))),'const.option.NONE_0') != s('type.option.option'('type.option.option'(fun(fun(sK0,sK1),sK1))),'const.option.SOME_1'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))))) | s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),happ(s(fun(sK0,'type.option.option'(fun(fun(sK0,sK1),sK1))),X41),s(sK0,sK2))),s('type.option.option'(fun(sK0,sK1)),sK3)))) ) | ($spl12 | $spl18 | $spl32)),
  inference(forward_demodulation,[],[f20638,f4951])).
fof(f20638,plain,(
  ( ! [X41,X40] : (s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),happ(s(fun(sK0,'type.option.option'(fun(fun(sK0,sK1),sK1))),X41),s(sK0,sK2))),s('type.option.option'(fun(sK0,sK1)),sK3))) | s('type.option.option'('type.option.option'(fun(fun(sK0,sK1),sK1))),'const.option.SOME_1'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))))) != s('type.option.option'('type.option.option'(fun(fun(sK0,sK1),sK1))),'const.option.SOME_1'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),happ(s(fun('type.option.option'(sK0),'type.option.option'(fun(fun(sK0,sK1),sK1))),X40),s('type.option.option'(sK0),'const.option.NONE_0')))))) ) | ($spl12 | $spl18 | $spl32)),
  inference(superposition,[],[f17178,f17473])).
fof(f20676,plain,(
  ( ! [X39] : (s('type.option.option'('type.option.option'(fun(fun(sK0,sK1),sK1))),'const.option.NONE_0') != s('type.option.option'('type.option.option'(fun(fun(sK0,sK1),sK1))),'const.option.SOME_1'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))))) | s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),happ(s(fun('type.option.option'(sK0),'type.option.option'(fun(fun(sK0,sK1),sK1))),X39),s('type.option.option'(sK0),'const.option.NONE_0'))),s('type.option.option'(fun(sK0,sK1)),sK3)))) ) | ($spl12 | $spl18 | $spl32)),
  inference(forward_demodulation,[],[f20637,f4951])).
fof(f20637,plain,(
  ( ! [X39,X38] : (s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),happ(s(fun('type.option.option'(sK0),'type.option.option'(fun(fun(sK0,sK1),sK1))),X39),s('type.option.option'(sK0),'const.option.NONE_0'))),s('type.option.option'(fun(sK0,sK1)),sK3))) | s('type.option.option'('type.option.option'(fun(fun(sK0,sK1),sK1))),'const.option.SOME_1'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))))) != s('type.option.option'('type.option.option'(fun(fun(sK0,sK1),sK1))),'const.option.SOME_1'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),happ(s(fun('type.option.option'(sK0),'type.option.option'(fun(fun(sK0,sK1),sK1))),X38),s('type.option.option'(sK0),'const.option.NONE_0')))))) ) | ($spl12 | $spl18 | $spl32)),
  inference(superposition,[],[f17178,f9128])).
fof(f20675,plain,(
  ( ! [X37] : (s('type.option.option'('type.option.option'(fun(fun(sK0,sK1),sK1))),'const.option.NONE_0') != s('type.option.option'('type.option.option'(fun(fun(sK0,sK1),sK1))),'const.option.SOME_1'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))))) | s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),happ(s(fun('type.option.option'(sK0),'type.option.option'(fun(fun(sK0,sK1),sK1))),X37),s('type.option.option'(sK0),'const.option.NONE_0'))),s('type.option.option'(fun(sK0,sK1)),sK3)))) ) | ($spl12 | $spl18 | $spl32)),
  inference(forward_demodulation,[],[f20636,f4951])).
fof(f20636,plain,(
  ( ! [X37,X36] : (s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),happ(s(fun('type.option.option'(sK0),'type.option.option'(fun(fun(sK0,sK1),sK1))),X37),s('type.option.option'(sK0),'const.option.NONE_0'))),s('type.option.option'(fun(sK0,sK1)),sK3))) | s('type.option.option'('type.option.option'(fun(fun(sK0,sK1),sK1))),'const.option.SOME_1'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))))) != s('type.option.option'('type.option.option'(fun(fun(sK0,sK1),sK1))),'const.option.SOME_1'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),happ(s(fun('type.option.option'(sK0),'type.option.option'(fun(fun(sK0,sK1),sK1))),X36),s('type.option.option'(sK0),'const.option.NONE_0')))))) ) | ($spl12 | $spl18 | $spl32)),
  inference(superposition,[],[f17178,f9128])).
fof(f20009,plain,(
  ( ! [X283,X284] : (s('type.option.option'(sK1),happ(s(fun('type.option.option'(sK0),'type.option.option'(sK1)),X284),s('type.option.option'(sK0),'const.option.NONE_0'))) = s('type.option.option'(sK1),sK4('const.option.SOME_1'(s('type.option.option'(sK1),happ(s(fun('type.option.option'(sK0),'type.option.option'(sK1)),X284),s('type.option.option'(sK0),'const.option.NONE_0')))),'type.option.option'(sK1))) | s('type.option.option'(sK1),happ(s(fun('type.option.option'(sK0),'type.option.option'(sK1)),X283),s('type.option.option'(sK0),'const.option.NONE_0'))) = s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,sK4(happ(s(fun('type.option.option'(sK0),'type.option.option'(sK1)),X283),s('type.option.option'(sK0),'const.option.NONE_0')),sK1))))) ) | ($spl6 | $spl32 | $spl115)),
  inference(superposition,[],[f13528,f9128])).
fof(f19984,plain,(
  ( ! [X233,X234] : (s('type.option.option'(sK1),'const.option.NONE_0') = s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))),s('type.option.option'(fun(sK0,sK1)),happ(s(fun('type.option.option'(sK0),'type.option.option'(fun(sK0,sK1))),X234),s('type.option.option'(sK0),'const.option.NONE_0'))))) | s('type.option.option'(fun(sK0,sK1)),happ(s(fun('type.option.option'(sK0),'type.option.option'(fun(sK0,sK1))),X233),s('type.option.option'(sK0),'const.option.NONE_0'))) = s('type.option.option'(fun(sK0,sK1)),'const.option.SOME_1'(s(fun(sK0,sK1),sK4(happ(s(fun('type.option.option'(sK0),'type.option.option'(fun(sK0,sK1))),X233),s('type.option.option'(sK0),'const.option.NONE_0')),fun(sK0,sK1)))))) ) | ($spl6 | $spl32)),
  inference(superposition,[],[f320,f9128])).
fof(f19893,plain,(
  ( ! [X283,X284] : (s('type.option.option'(sK1),happ(s(fun('type.option.option'(sK0),'type.option.option'(sK1)),X284),s('type.option.option'(sK0),'const.option.NONE_0'))) = s('type.option.option'(sK1),sK4('const.option.SOME_1'(s('type.option.option'(sK1),happ(s(fun('type.option.option'(sK0),'type.option.option'(sK1)),X284),s('type.option.option'(sK0),'const.option.NONE_0')))),'type.option.option'(sK1))) | s('type.option.option'(sK1),happ(s(fun('type.option.option'(sK0),'type.option.option'(sK1)),X283),s('type.option.option'(sK0),'const.option.NONE_0'))) = s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,sK4(happ(s(fun('type.option.option'(sK0),'type.option.option'(sK1)),X283),s('type.option.option'(sK0),'const.option.NONE_0')),sK1))))) ) | ($spl6 | $spl32 | $spl115)),
  inference(superposition,[],[f13528,f9128])).
fof(f19868,plain,(
  ( ! [X233,X234] : (s('type.option.option'(sK1),'const.option.NONE_0') = s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))),s('type.option.option'(fun(sK0,sK1)),happ(s(fun('type.option.option'(sK0),'type.option.option'(fun(sK0,sK1))),X234),s('type.option.option'(sK0),'const.option.NONE_0'))))) | s('type.option.option'(fun(sK0,sK1)),happ(s(fun('type.option.option'(sK0),'type.option.option'(fun(sK0,sK1))),X233),s('type.option.option'(sK0),'const.option.NONE_0'))) = s('type.option.option'(fun(sK0,sK1)),'const.option.SOME_1'(s(fun(sK0,sK1),sK4(happ(s(fun('type.option.option'(sK0),'type.option.option'(fun(sK0,sK1))),X233),s('type.option.option'(sK0),'const.option.NONE_0')),fun(sK0,sK1)))))) ) | ($spl6 | $spl32)),
  inference(superposition,[],[f320,f9128])).
fof(f19249,plain,(
  $false | ($spl11 | $spl18 | $spl42 | $spl82 | $spl102)),
  inference(subsumption_resolution,[],[f19212,f17292])).
fof(f19212,plain,(
  s('type.option.option'(sK0),'const.option.NONE_0') = s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK4('const.option.SOME_1'(s(sK0,sK2)),sK0)))) | ($spl18 | $spl42 | $spl82 | $spl102)),
  inference(backward_demodulation,[],[f19178,f4575])).
fof(f4575,plain,(
  s('type.option.option'(sK0),'const.option.NONE_0') = s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK4('const.option.SOME_1'(s(sK0,sK4(sK4('const.option.SOME_1'(s('type.option.option'(sK0),'const.option.NONE_0')),'type.option.option'(sK0)),sK0))),sK0)))) | ($spl42 | $spl82 | $spl102)),
  inference(forward_demodulation,[],[f1534,f3446])).
fof(f3446,plain,(
  ( ! [X9] : (s('type.option.option'(sK0),X9) = s('type.option.option'(sK0),sK4('const.option.SOME_1'(s('type.option.option'(sK0),X9)),'type.option.option'(sK0)))) ) | ($spl82 | $spl102)),
  inference(subsumption_resolution,[],[f3434,f43])).
fof(f3434,plain,(
  ( ! [X9] : (s('type.option.option'(sK0),X9) = s('type.option.option'(sK0),sK4('const.option.SOME_1'(s('type.option.option'(sK0),X9)),'type.option.option'(sK0))) | s('type.option.option'('type.option.option'(sK0)),'const.option.SOME_1'(s('type.option.option'(sK0),X9))) = s('type.option.option'('type.option.option'(sK0)),'const.option.SOME_1'(s('type.option.option'(sK0),sK4('const.option.SOME_1'(s('type.option.option'(sK0),X9)),'type.option.option'(sK0)))))) ) | ($spl82 | $spl102)),
  inference(trivial_inequality_removal,[],[f3431])).
fof(f3431,plain,(
  ( ! [X9] : (s('type.option.option'('type.option.option'(sK0)),'const.option.NONE_0') != s('type.option.option'('type.option.option'(sK0)),'const.option.NONE_0') | s('type.option.option'(sK0),X9) = s('type.option.option'(sK0),sK4('const.option.SOME_1'(s('type.option.option'(sK0),X9)),'type.option.option'(sK0))) | s('type.option.option'('type.option.option'(sK0)),'const.option.SOME_1'(s('type.option.option'(sK0),X9))) = s('type.option.option'('type.option.option'(sK0)),'const.option.SOME_1'(s('type.option.option'(sK0),sK4('const.option.SOME_1'(s('type.option.option'(sK0),X9)),'type.option.option'(sK0)))))) ) | ($spl82 | $spl102)),
  inference(superposition,[],[f2948,f47])).
fof(f2948,plain,(
  ( ! [X2] : (s('type.option.option'('type.option.option'(sK0)),'const.option.NONE_0') != s('type.option.option'('type.option.option'(sK0)),'const.option.SOME_1'(s('type.option.option'(sK0),X2))) | s('type.option.option'(sK0),X2) = s('type.option.option'(sK0),sK4('const.option.SOME_1'(s('type.option.option'(sK0),X2)),'type.option.option'(sK0)))) ) | ($spl82 | $spl102)),
  inference(forward_demodulation,[],[f2921,f2263])).
fof(f2921,plain,(
  ( ! [X2] : (s('type.option.option'(sK0),X2) = s('type.option.option'(sK0),sK4('const.option.SOME_1'(s('type.option.option'(sK0),X2)),'type.option.option'(sK0))) | s('type.option.option'('type.option.option'(sK0)),'const.option.SOME_1'(s('type.option.option'(sK0),X2))) != s('type.option.option'('type.option.option'(sK0)),'const.option.SOME_1'(s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2)))))) ) | $spl102),
  inference(superposition,[],[f2904,f43])).
fof(f19178,plain,(
  s(sK0,sK2) = s(sK0,sK4(sK4('const.option.SOME_1'(s('type.option.option'(sK0),'const.option.NONE_0')),'type.option.option'(sK0)),sK0)) | ($spl18 | $spl42 | $spl82 | $spl102)),
  inference(trivial_inequality_removal,[],[f19133])).
fof(f19133,plain,(
  s('type.option.option'(sK0),'const.option.NONE_0') != s('type.option.option'(sK0),'const.option.NONE_0') | s(sK0,sK2) = s(sK0,sK4(sK4('const.option.SOME_1'(s('type.option.option'(sK0),'const.option.NONE_0')),'type.option.option'(sK0)),sK0)) | ($spl18 | $spl42 | $spl82 | $spl102)),
  inference(superposition,[],[f16893,f19075])).
fof(f19075,plain,(
  s('type.option.option'(sK0),'const.option.NONE_0') = s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK4(sK4('const.option.SOME_1'(s('type.option.option'(sK0),'const.option.NONE_0')),'type.option.option'(sK0)),sK0)))) | ($spl42 | $spl82 | $spl102)),
  inference(duplicate_literal_removal,[],[f19033])).
fof(f19033,plain,(
  s('type.option.option'(sK0),'const.option.NONE_0') = s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK4(sK4('const.option.SOME_1'(s('type.option.option'(sK0),'const.option.NONE_0')),'type.option.option'(sK0)),sK0)))) | s('type.option.option'(sK0),'const.option.NONE_0') = s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK4(sK4('const.option.SOME_1'(s('type.option.option'(sK0),'const.option.NONE_0')),'type.option.option'(sK0)),sK0)))) | ($spl42 | $spl82 | $spl102)),
  inference(superposition,[],[f47,f4575])).
fof(f16893,plain,(
  ( ! [X0] : (s('type.option.option'(sK0),'const.option.NONE_0') != s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,X0))) | s(sK0,sK2) = s(sK0,X0)) ) | $spl18),
  inference(superposition,[],[f43,f513])).
fof(f18490,plain,(
  ( ! [X210,X209] : (s('type.option.option'(sK1),happ(s(fun(sK0,'type.option.option'(sK1)),X210),s(sK0,sK2))) = s('type.option.option'(sK1),sK4('const.option.SOME_1'(s('type.option.option'(sK1),happ(s(fun(sK0,'type.option.option'(sK1)),X210),s(sK0,sK2)))),'type.option.option'(sK1))) | s('type.option.option'(sK1),happ(s(fun(sK0,'type.option.option'(sK1)),X209),s(sK0,sK2))) = s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,sK4(happ(s(fun(sK0,'type.option.option'(sK1)),X209),s(sK0,sK2)),sK1))))) ) | ($spl6 | $spl18 | $spl32 | $spl115)),
  inference(superposition,[],[f13528,f17949])).
fof(f18466,plain,(
  ( ! [X161,X162] : (s('type.option.option'(sK1),'const.option.NONE_0') = s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))),s('type.option.option'(fun(sK0,sK1)),happ(s(fun(sK0,'type.option.option'(fun(sK0,sK1))),X162),s(sK0,sK2))))) | s('type.option.option'(fun(sK0,sK1)),happ(s(fun(sK0,'type.option.option'(fun(sK0,sK1))),X161),s(sK0,sK2))) = s('type.option.option'(fun(sK0,sK1)),'const.option.SOME_1'(s(fun(sK0,sK1),sK4(happ(s(fun(sK0,'type.option.option'(fun(sK0,sK1))),X161),s(sK0,sK2)),fun(sK0,sK1)))))) ) | ($spl6 | $spl18 | $spl32)),
  inference(superposition,[],[f320,f17949])).
fof(f18404,plain,(
  ( ! [X210,X209] : (s('type.option.option'(sK1),happ(s(fun(sK0,'type.option.option'(sK1)),X210),s(sK0,sK2))) = s('type.option.option'(sK1),sK4('const.option.SOME_1'(s('type.option.option'(sK1),happ(s(fun(sK0,'type.option.option'(sK1)),X210),s(sK0,sK2)))),'type.option.option'(sK1))) | s('type.option.option'(sK1),happ(s(fun(sK0,'type.option.option'(sK1)),X209),s(sK0,sK2))) = s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,sK4(happ(s(fun(sK0,'type.option.option'(sK1)),X209),s(sK0,sK2)),sK1))))) ) | ($spl6 | $spl18 | $spl32 | $spl115)),
  inference(superposition,[],[f13528,f17949])).
fof(f18380,plain,(
  ( ! [X161,X162] : (s('type.option.option'(sK1),'const.option.NONE_0') = s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))),s('type.option.option'(fun(sK0,sK1)),happ(s(fun(sK0,'type.option.option'(fun(sK0,sK1))),X162),s(sK0,sK2))))) | s('type.option.option'(fun(sK0,sK1)),happ(s(fun(sK0,'type.option.option'(fun(sK0,sK1))),X161),s(sK0,sK2))) = s('type.option.option'(fun(sK0,sK1)),'const.option.SOME_1'(s(fun(sK0,sK1),sK4(happ(s(fun(sK0,'type.option.option'(fun(sK0,sK1))),X161),s(sK0,sK2)),fun(sK0,sK1)))))) ) | ($spl6 | $spl18 | $spl32)),
  inference(superposition,[],[f320,f17949])).
fof(f18098,plain,(
  ( ! [X202,X201] : (s('type.option.option'(sK1),happ(s(fun(sK0,'type.option.option'(sK1)),X202),s(sK0,sK2))) = s('type.option.option'(sK1),sK4('const.option.SOME_1'(s('type.option.option'(sK1),happ(s(fun(sK0,'type.option.option'(sK1)),X202),s(sK0,sK2)))),'type.option.option'(sK1))) | s('type.option.option'(sK1),happ(s(fun('type.option.option'(sK0),'type.option.option'(sK1)),X201),s('type.option.option'(sK0),'const.option.NONE_0'))) = s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,sK4(happ(s(fun('type.option.option'(sK0),'type.option.option'(sK1)),X201),s('type.option.option'(sK0),'const.option.NONE_0')),sK1))))) ) | ($spl6 | $spl18 | $spl32 | $spl115)),
  inference(superposition,[],[f13528,f17473])).
fof(f18074,plain,(
  ( ! [X154,X153] : (s('type.option.option'(sK1),'const.option.NONE_0') = s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))),s('type.option.option'(fun(sK0,sK1)),happ(s(fun(sK0,'type.option.option'(fun(sK0,sK1))),X154),s(sK0,sK2))))) | s('type.option.option'(fun(sK0,sK1)),happ(s(fun('type.option.option'(sK0),'type.option.option'(fun(sK0,sK1))),X153),s('type.option.option'(sK0),'const.option.NONE_0'))) = s('type.option.option'(fun(sK0,sK1)),'const.option.SOME_1'(s(fun(sK0,sK1),sK4(happ(s(fun('type.option.option'(sK0),'type.option.option'(fun(sK0,sK1))),X153),s('type.option.option'(sK0),'const.option.NONE_0')),fun(sK0,sK1)))))) ) | ($spl6 | $spl18 | $spl32)),
  inference(superposition,[],[f320,f17473])).
fof(f18018,plain,(
  ( ! [X184,X183] : (s('type.option.option'(sK1),happ(s(fun('type.option.option'(sK0),'type.option.option'(sK1)),X184),s('type.option.option'(sK0),'const.option.NONE_0'))) = s('type.option.option'(sK1),sK4('const.option.SOME_1'(s('type.option.option'(sK1),happ(s(fun('type.option.option'(sK0),'type.option.option'(sK1)),X184),s('type.option.option'(sK0),'const.option.NONE_0')))),'type.option.option'(sK1))) | s('type.option.option'(sK1),happ(s(fun(sK0,'type.option.option'(sK1)),X183),s(sK0,sK2))) = s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,sK4(happ(s(fun(sK0,'type.option.option'(sK1)),X183),s(sK0,sK2)),sK1))))) ) | ($spl6 | $spl18 | $spl32 | $spl115)),
  inference(superposition,[],[f13528,f17473])).
fof(f17994,plain,(
  ( ! [X136,X135] : (s('type.option.option'(sK1),'const.option.NONE_0') = s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))),s('type.option.option'(fun(sK0,sK1)),happ(s(fun('type.option.option'(sK0),'type.option.option'(fun(sK0,sK1))),X136),s('type.option.option'(sK0),'const.option.NONE_0'))))) | s('type.option.option'(fun(sK0,sK1)),happ(s(fun(sK0,'type.option.option'(fun(sK0,sK1))),X135),s(sK0,sK2))) = s('type.option.option'(fun(sK0,sK1)),'const.option.SOME_1'(s(fun(sK0,sK1),sK4(happ(s(fun(sK0,'type.option.option'(fun(sK0,sK1))),X135),s(sK0,sK2)),fun(sK0,sK1)))))) ) | ($spl6 | $spl18 | $spl32)),
  inference(superposition,[],[f320,f17473])).
fof(f17836,plain,(
  $false | ($spl11 | $spl18 | $spl158)),
  inference(equality_resolution,[],[f17826])).
fof(f17826,plain,(
  ( ! [X77] : (s(sK0,X77) != s(sK0,sK4('const.option.SOME_1'(s(sK0,sK2)),sK0))) ) | ($spl11 | $spl18 | $spl158)),
  inference(subsumption_resolution,[],[f4700,f17301])).
fof(f17301,plain,(
  ( ! [X0] : (s(sK0,X0) != s(sK0,sK4('const.option.SOME_1'(s(sK0,sK2)),sK0)) | s('type.option.option'(sK0),'const.option.NONE_0') != s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,X0)))) ) | ($spl11 | $spl18)),
  inference(superposition,[],[f17292,f44])).
fof(f17714,plain,(
  ( ! [X24] : (s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),'const.option.NONE_0'))) != s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),'const.option.OPTION_MAP_2'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))),s('type.option.option'(fun(sK0,sK1)),sK3))))) | s('type.option.option'(sK1),X24) = s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,sK4(X24,sK1))))) ) | ($spl12 | $spl18)),
  inference(trivial_inequality_removal,[],[f17704])).
fof(f17704,plain,(
  ( ! [X24] : (s('type.option.option'(sK1),X24) != s('type.option.option'(sK1),X24) | s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),'const.option.NONE_0'))) != s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),'const.option.OPTION_MAP_2'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))),s('type.option.option'(fun(sK0,sK1)),sK3))))) | s('type.option.option'(sK1),X24) = s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,sK4(X24,sK1))))) ) | ($spl12 | $spl18)),
  inference(superposition,[],[f17193,f47])).
fof(f17193,plain,(
  ( ! [X0] : (s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),X0) | s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),X0))) != s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),'const.option.OPTION_MAP_2'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))),s('type.option.option'(fun(sK0,sK1)),sK3)))))) ) | ($spl12 | $spl18)),
  inference(forward_demodulation,[],[f17186,f40])).
fof(f17186,plain,(
  ( ! [X0] : (s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),X0) | s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),X0))) != s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))),s('type.option.option'(fun(sK0,sK1)),sK3)))))) ) | ($spl12 | $spl18)),
  inference(superposition,[],[f17127,f43])).
fof(f16751,plain,(
  ( ! [X22] : (s('type.option.option'(sK1),'const.option.NONE_0') = s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,sK4('const.option.SOME_1'(s(sK1,happ(s(fun(sK0,sK1),X22),s(sK0,sK2)))),sK1))))) ) | $spl290),
  inference(cnf_transformation,[],[f16751_D])).
fof(f16751_D,plain,(
  ( ! [X22] : (s('type.option.option'(sK1),'const.option.NONE_0') = s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,sK4('const.option.SOME_1'(s(sK1,happ(s(fun(sK0,sK1),X22),s(sK0,sK2)))),sK1))))) ) <=> ~$spl290),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl290])])).
fof(f17500,plain,(
  ( ! [X58] : (s('type.option.option'(sK1),'const.option.NONE_0') = s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,sK4('const.option.SOME_1'(s(sK1,happ(s(fun(sK0,sK1),X58),s(sK0,sK2)))),sK1)))) | s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),'const.option.NONE_0'))) != s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),'const.option.OPTION_MAP_2'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))),s('type.option.option'(fun(sK0,sK1)),sK3)))))) ) | ($spl18 | $spl92)),
  inference(forward_demodulation,[],[f17439,f16934])).
fof(f17439,plain,(
  ( ! [X58] : (s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),'const.option.NONE_0'))) != s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),'const.option.OPTION_MAP_2'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))),s('type.option.option'(fun(sK0,sK1)),sK3))))) | s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,happ(s(fun(sK0,sK1),X58),s(sK0,sK2))))) = s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,sK4('const.option.SOME_1'(s(sK1,happ(s(fun(sK0,sK1),X58),s(sK0,sK2)))),sK1))))) ) | ($spl18 | $spl92)),
  inference(superposition,[],[f2360,f16934])).
fof(f17363,plain,(
  $false | ($spl11 | $spl18 | $spl172)),
  inference(subsumption_resolution,[],[f17322,f513])).
fof(f17322,plain,(
  s('type.option.option'(sK0),'const.option.NONE_0') != s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))) | ($spl11 | $spl18 | $spl172)),
  inference(superposition,[],[f17292,f4716])).
fof(f17291,plain,(
  $false | ($spl11 | $spl18 | $spl196)),
  inference(trivial_inequality_removal,[],[f17290])).
fof(f17290,plain,(
  s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))) != s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))) | ($spl11 | $spl18 | $spl196)),
  inference(forward_demodulation,[],[f99,f17228])).
fof(f17228,plain,(
  s(sK0,sK2) = s(sK0,sK4('const.option.SOME_1'(s(sK0,sK2)),sK0)) | ($spl18 | $spl196)),
  inference(trivial_inequality_removal,[],[f17213])).
fof(f17213,plain,(
  s('type.option.option'(sK0),'const.option.NONE_0') != s('type.option.option'(sK0),'const.option.NONE_0') | s(sK0,sK2) = s(sK0,sK4('const.option.SOME_1'(s(sK0,sK2)),sK0)) | ($spl18 | $spl196)),
  inference(superposition,[],[f16893,f4747])).
fof(f17126,plain,(
  $false | ($spl4 | $spl13)),
  inference(subsumption_resolution,[],[f3636,f102])).
fof(f3636,plain,(
  s('type.option.option'(sK1),'const.option.NONE_0') = s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(sK0,sK1)),sK3),s('type.option.option'(sK0),'const.option.NONE_0'))) | $spl4),
  inference(superposition,[],[f2527,f42])).
fof(f2527,plain,(
  ( ! [X0] : (s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(sK0,sK1)),sK3),s('type.option.option'(sK0),X0))) = s('type.option.option'(sK1),'const.option.OPTION_MAP_2'(s(fun(sK0,sK1),sK4(sK3,fun(sK0,sK1))),s('type.option.option'(sK0),X0)))) ) | $spl4),
  inference(superposition,[],[f40,f76])).
fof(f100,plain,(
  s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))) = s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK4('const.option.SOME_1'(s(sK0,sK2)),sK0)))) | $spl10),
  inference(cnf_transformation,[],[f100_D])).
fof(f100_D,plain,(
  s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))) = s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK4('const.option.SOME_1'(s(sK0,sK2)),sK0)))) <=> ~$spl10),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl10])])).
fof(f16880,plain,(
  ( ! [X4] : (s('type.option.option'(sK1),X4) != s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(sK0,sK1)),sK3),s('type.option.option'(sK0),'const.option.NONE_0'))) | s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),X4))) != s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),'const.option.OPTION_MAP_2'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))),s('type.option.option'(fun(sK0,sK1)),sK3)))))) ) | $spl330),
  inference(cnf_transformation,[],[f16880_D])).
fof(f16880_D,plain,(
  ( ! [X4] : (s('type.option.option'(sK1),X4) != s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(sK0,sK1)),sK3),s('type.option.option'(sK0),'const.option.NONE_0'))) | s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),X4))) != s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),'const.option.OPTION_MAP_2'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))),s('type.option.option'(fun(sK0,sK1)),sK3)))))) ) <=> ~$spl330),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl330])])).
fof(f795,plain,(
  ( ! [X4] : (s('type.option.option'(sK1),X4) != s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(sK0,sK1)),sK3),s('type.option.option'(sK0),'const.option.NONE_0'))) | s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),X4))) != s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),'const.option.OPTION_MAP_2'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))),s('type.option.option'(fun(sK0,sK1)),sK3))))) | s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))) = s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK4('const.option.SOME_1'(s(sK0,sK2)),sK0))))) )),
  inference(superposition,[],[f82,f47])).
fof(f82,plain,(
  ( ! [X0] : (s('type.option.option'(sK1),X0) != s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(sK0,sK1)),sK3),s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))))) | s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),X0))) != s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),'const.option.OPTION_MAP_2'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))),s('type.option.option'(fun(sK0,sK1)),sK3)))))) )),
  inference(forward_demodulation,[],[f67,f40])).
fof(f67,plain,(
  ( ! [X0] : (s('type.option.option'(sK1),X0) != s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(sK0,sK1)),sK3),s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))))) | s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),X0))) != s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))),s('type.option.option'(fun(sK0,sK1)),sK3)))))) )),
  inference(superposition,[],[f39,f43])).
fof(f16879,plain,(
  $false | ($spl11 | $spl176)),
  inference(trivial_inequality_removal,[],[f16878])).
fof(f16878,plain,(
  s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))) != s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))) | ($spl11 | $spl176)),
  inference(forward_demodulation,[],[f99,f4720])).
fof(f2024,plain,(
  ( ! [X59] : (s('type.option.option'('type.option.option'('type.option.option'(sK0))),'const.option.NONE_0') = s('type.option.option'('type.option.option'('type.option.option'(sK0))),'const.option.SOME_1'(s('type.option.option'('type.option.option'(sK0)),'const.option.SOME_1'(s('type.option.option'(sK0),X59))))) | s('type.option.option'(sK0),X59) = s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK4(X59,sK0))))) ) | $spl68),
  inference(cnf_transformation,[],[f2024_D])).
fof(f2024_D,plain,(
  ( ! [X59] : (s('type.option.option'('type.option.option'('type.option.option'(sK0))),'const.option.NONE_0') = s('type.option.option'('type.option.option'('type.option.option'(sK0))),'const.option.SOME_1'(s('type.option.option'('type.option.option'(sK0)),'const.option.SOME_1'(s('type.option.option'(sK0),X59))))) | s('type.option.option'(sK0),X59) = s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK4(X59,sK0))))) ) <=> ~$spl68),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl68])])).
fof(f2025,plain,(
  ( ! [X60] : (s('type.option.option'('type.option.option'(sK0)),'const.option.NONE_0') != s('type.option.option'('type.option.option'(sK0)),happ(s(fun('type.option.option'(sK0),'type.option.option'('type.option.option'(sK0))),X60),s('type.option.option'(sK0),'const.option.NONE_0')))) ) | $spl70),
  inference(cnf_transformation,[],[f2025_D])).
fof(f2025_D,plain,(
  ( ! [X60] : (s('type.option.option'('type.option.option'(sK0)),'const.option.NONE_0') != s('type.option.option'('type.option.option'(sK0)),happ(s(fun('type.option.option'(sK0),'type.option.option'('type.option.option'(sK0))),X60),s('type.option.option'(sK0),'const.option.NONE_0')))) ) <=> ~$spl70),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl70])])).
fof(f8985,plain,(
  ( ! [X101,X100] : (s('type.option.option'('type.option.option'(sK0)),'const.option.NONE_0') != s('type.option.option'('type.option.option'(sK0)),happ(s(fun('type.option.option'(sK0),'type.option.option'('type.option.option'(sK0))),X101),s('type.option.option'(sK0),'const.option.NONE_0'))) | s('type.option.option'('type.option.option'('type.option.option'(sK0))),'const.option.NONE_0') = s('type.option.option'('type.option.option'('type.option.option'(sK0))),'const.option.SOME_1'(s('type.option.option'('type.option.option'(sK0)),'const.option.SOME_1'(s('type.option.option'(sK0),X100))))) | s('type.option.option'(sK0),X100) = s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK4(X100,sK0))))) ) | $spl32),
  inference(superposition,[],[f5285,f4917])).
fof(f870,plain,(
  ( ! [X14] : (s('type.option.option'(sK0),X14) = s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK4(X14,sK0))))) ) | $spl26),
  inference(cnf_transformation,[],[f870_D])).
fof(f870_D,plain,(
  ( ! [X14] : (s('type.option.option'(sK0),X14) = s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK4(X14,sK0))))) ) <=> ~$spl26),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl26])])).
fof(f4742,plain,(
  ( ! [X4] : (s('type.option.option'(sK0),'const.option.NONE_0') = s('type.option.option'(sK0),happ(s(fun('type.option.option'(sK0),'type.option.option'(sK0)),X4),s('type.option.option'(sK0),'const.option.NONE_0')))) ) | $spl190),
  inference(cnf_transformation,[],[f4742_D])).
fof(f4742_D,plain,(
  ( ! [X4] : (s('type.option.option'(sK0),'const.option.NONE_0') = s('type.option.option'(sK0),happ(s(fun('type.option.option'(sK0),'type.option.option'(sK0)),X4),s('type.option.option'(sK0),'const.option.NONE_0')))) ) <=> ~$spl190),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl190])])).
fof(f16865,plain,(
  ( ! [X59,X58] : (s('type.option.option'(sK0),'const.option.NONE_0') = s('type.option.option'(sK0),happ(s(fun('type.option.option'(sK0),'type.option.option'(sK0)),X59),s('type.option.option'(sK0),'const.option.NONE_0'))) | s('type.option.option'(sK0),X58) = s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK4(X58,sK0))))) ) | ($spl32 | $spl36)),
  inference(forward_demodulation,[],[f15127,f1465])).
fof(f15127,plain,(
  ( ! [X59,X58] : (s('type.option.option'(sK0),sK4('const.option.SOME_1'(s('type.option.option'(sK0),'const.option.NONE_0')),'type.option.option'(sK0))) = s('type.option.option'(sK0),happ(s(fun('type.option.option'(sK0),'type.option.option'(sK0)),X59),s('type.option.option'(sK0),'const.option.NONE_0'))) | s('type.option.option'(sK0),X58) = s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK4(X58,sK0))))) ) | ($spl32 | $spl36)),
  inference(subsumption_resolution,[],[f14897,f4917])).
fof(f14897,plain,(
  ( ! [X59,X58] : (s('type.option.option'('type.option.option'(sK0)),'const.option.NONE_0') != s('type.option.option'('type.option.option'(sK0)),'const.option.SOME_1'(s('type.option.option'(sK0),X58))) | s('type.option.option'(sK0),sK4('const.option.SOME_1'(s('type.option.option'(sK0),'const.option.NONE_0')),'type.option.option'(sK0))) = s('type.option.option'(sK0),happ(s(fun('type.option.option'(sK0),'type.option.option'(sK0)),X59),s('type.option.option'(sK0),'const.option.NONE_0'))) | s('type.option.option'(sK0),X58) = s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK4(X58,sK0))))) ) | ($spl32 | $spl36)),
  inference(superposition,[],[f5290,f14615])).
fof(f2029,plain,(
  ( ! [X67] : (s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),happ(s(fun('type.option.option'(sK0),'type.option.option'(sK1)),X67),s('type.option.option'(sK0),'const.option.NONE_0')))) ) | $spl74),
  inference(cnf_transformation,[],[f2029_D])).
fof(f2029_D,plain,(
  ( ! [X67] : (s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),happ(s(fun('type.option.option'(sK0),'type.option.option'(sK1)),X67),s('type.option.option'(sK0),'const.option.NONE_0')))) ) <=> ~$spl74),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl74])])).
fof(f16860,plain,(
  ( ! [X51] : (s('type.option.option'('type.option.option'(sK1)),'const.option.NONE_0') = s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),'const.option.OPTION_MAP_2'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))),s('type.option.option'(fun(sK0,sK1)),X51))))) | s('type.option.option'(fun(sK0,sK1)),X51) = s('type.option.option'(fun(sK0,sK1)),'const.option.SOME_1'(s(fun(sK0,sK1),sK4(X51,fun(sK0,sK1)))))) ) | $spl328),
  inference(cnf_transformation,[],[f16860_D])).
fof(f16860_D,plain,(
  ( ! [X51] : (s('type.option.option'('type.option.option'(sK1)),'const.option.NONE_0') = s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),'const.option.OPTION_MAP_2'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))),s('type.option.option'(fun(sK0,sK1)),X51))))) | s('type.option.option'(fun(sK0,sK1)),X51) = s('type.option.option'(fun(sK0,sK1)),'const.option.SOME_1'(s(fun(sK0,sK1),sK4(X51,fun(sK0,sK1)))))) ) <=> ~$spl328),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl328])])).
fof(f16859,plain,(
  ( ! [X52,X51] : (s('type.option.option'('type.option.option'(sK1)),'const.option.NONE_0') = s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),'const.option.OPTION_MAP_2'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))),s('type.option.option'(fun(sK0,sK1)),X51))))) | s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),happ(s(fun('type.option.option'(sK0),'type.option.option'(sK1)),X52),s('type.option.option'(sK0),'const.option.NONE_0'))) | s('type.option.option'(fun(sK0,sK1)),X51) = s('type.option.option'(fun(sK0,sK1)),'const.option.SOME_1'(s(fun(sK0,sK1),sK4(X51,fun(sK0,sK1)))))) ) | ($spl6 | $spl32)),
  inference(forward_demodulation,[],[f16635,f40])).
fof(f16635,plain,(
  ( ! [X52,X51] : (s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),happ(s(fun('type.option.option'(sK0),'type.option.option'(sK1)),X52),s('type.option.option'(sK0),'const.option.NONE_0'))) | s('type.option.option'('type.option.option'(sK1)),'const.option.NONE_0') = s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))),s('type.option.option'(fun(sK0,sK1)),X51))))) | s('type.option.option'(fun(sK0,sK1)),X51) = s('type.option.option'(fun(sK0,sK1)),'const.option.SOME_1'(s(fun(sK0,sK1),sK4(X51,fun(sK0,sK1)))))) ) | ($spl6 | $spl32)),
  inference(superposition,[],[f5285,f320])).
fof(f512,plain,(
  s('type.option.option'(sK0),'const.option.NONE_0') != s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))) | $spl19),
  inference(cnf_transformation,[],[f512_D])).
fof(f512_D,plain,(
  s('type.option.option'(sK0),'const.option.NONE_0') != s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))) <=> ~$spl19),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl19])])).
fof(f16858,plain,(
  ( ! [X26] : (s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(sK0,sK1)),sK3),s('type.option.option'(sK0),'const.option.NONE_0'))) != s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,happ(s(fun('type.option.option'(sK0),sK0),X26),s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))))))))),s('type.option.option'(fun(sK0,sK1)),sK3)))) ) | $spl326),
  inference(cnf_transformation,[],[f16858_D])).
fof(f16858_D,plain,(
  ( ! [X26] : (s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(sK0,sK1)),sK3),s('type.option.option'(sK0),'const.option.NONE_0'))) != s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,happ(s(fun('type.option.option'(sK0),sK0),X26),s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))))))))),s('type.option.option'(fun(sK0,sK1)),sK3)))) ) <=> ~$spl326),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl326])])).
fof(f4711,plain,(
  ( ! [X26] : (s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(sK0,sK1)),sK3),s('type.option.option'(sK0),'const.option.NONE_0'))) != s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,happ(s(fun('type.option.option'(sK0),sK0),X26),s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))))))))),s('type.option.option'(fun(sK0,sK1)),sK3))) | s('type.option.option'(sK0),'const.option.NONE_0') != s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2)))) ) | $spl82),
  inference(forward_demodulation,[],[f2714,f2488])).
fof(f2714,plain,(
  ( ! [X26] : (s('type.option.option'(sK0),'const.option.NONE_0') != s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))) | s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(sK0,sK1)),sK3),s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,happ(s(fun('type.option.option'(sK0),sK0),X26),s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))))))))) != s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,happ(s(fun('type.option.option'(sK0),sK0),X26),s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))))))))),s('type.option.option'(fun(sK0,sK1)),sK3)))) ) | $spl82),
  inference(superposition,[],[f53,f2488])).
fof(f53,plain,(
  ( ! [X0] : (s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))) != s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,X0))) | s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(sK0,sK1)),sK3),s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,X0))))) != s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,X0))))),s('type.option.option'(fun(sK0,sK1)),sK3)))) )),
  inference(superposition,[],[f39,f43])).
fof(f16857,plain,(
  $false | ($spl2 | $spl10 | $spl13 | $spl18)),
  inference(subsumption_resolution,[],[f102,f4961])).
fof(f4961,plain,(
  s('type.option.option'(sK1),'const.option.NONE_0') = s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(sK0,sK1)),sK3),s('type.option.option'(sK0),'const.option.NONE_0'))) | ($spl2 | $spl10 | $spl18)),
  inference(forward_demodulation,[],[f72,f4735])).
fof(f4735,plain,(
  s('type.option.option'(sK0),'const.option.NONE_0') = s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))) | ($spl10 | $spl18)),
  inference(forward_demodulation,[],[f527,f741])).
fof(f741,plain,(
  s(sK0,sK2) = s(sK0,sK4('const.option.SOME_1'(s(sK0,sK2)),sK0)) | $spl10),
  inference(equality_resolution,[],[f493])).
fof(f493,plain,(
  ( ! [X2] : (s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))) != s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,X2))) | s(sK0,X2) = s(sK0,sK4('const.option.SOME_1'(s(sK0,sK2)),sK0))) ) | $spl10),
  inference(superposition,[],[f43,f100])).
fof(f527,plain,(
  s('type.option.option'(sK0),'const.option.NONE_0') = s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK4('const.option.SOME_1'(s(sK0,sK2)),sK0)))) | ($spl10 | $spl18)),
  inference(backward_demodulation,[],[f513,f100])).
fof(f16799,plain,(
  s('type.option.option'('type.option.option'('type.option.option'(fun(sK0,sK1)))),'const.option.NONE_0') != s('type.option.option'('type.option.option'('type.option.option'(fun(sK0,sK1)))),'const.option.SOME_1'(s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.NONE_0'))) | $spl325),
  inference(cnf_transformation,[],[f16799_D])).
fof(f16799_D,plain,(
  s('type.option.option'('type.option.option'('type.option.option'(fun(sK0,sK1)))),'const.option.NONE_0') != s('type.option.option'('type.option.option'('type.option.option'(fun(sK0,sK1)))),'const.option.SOME_1'(s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.NONE_0'))) <=> ~$spl325),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl325])])).
fof(f11193,plain,(
  s('type.option.option'('type.option.option'('type.option.option'(fun(sK0,sK1)))),'const.option.NONE_0') != s('type.option.option'('type.option.option'('type.option.option'(fun(sK0,sK1)))),'const.option.SOME_1'(s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.NONE_0'))) | s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),sK3))) = s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),sK4('const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),sK3)),'type.option.option'(fun(sK0,sK1)))))) | $spl225),
  inference(superposition,[],[f9479,f47])).
fof(f16797,plain,(
  ( ! [X4] : (s('type.option.option'(fun(sK0,sK1)),sK3) = s('type.option.option'(fun(sK0,sK1)),X4) | s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.NONE_0') != s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),X4)))) ) | $spl322),
  inference(cnf_transformation,[],[f16797_D])).
fof(f16797_D,plain,(
  ( ! [X4] : (s('type.option.option'(fun(sK0,sK1)),sK3) = s('type.option.option'(fun(sK0,sK1)),X4) | s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.NONE_0') != s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),X4)))) ) <=> ~$spl322),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl322])])).
fof(f16796,plain,(
  ( ! [X4] : (s('type.option.option'(fun(sK0,sK1)),sK3) = s('type.option.option'(fun(sK0,sK1)),X4) | s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.NONE_0') != s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),X4))) | s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),sK3))) = s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),sK4('const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),sK3)),'type.option.option'(fun(sK0,sK1))))))) ) | $spl4),
  inference(forward_demodulation,[],[f12554,f76])).
fof(f12554,plain,(
  ( ! [X4] : (s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.NONE_0') != s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),X4))) | s('type.option.option'(fun(sK0,sK1)),X4) = s('type.option.option'(fun(sK0,sK1)),'const.option.SOME_1'(s(fun(sK0,sK1),sK4(sK3,fun(sK0,sK1))))) | s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),sK3))) = s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),sK4('const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),sK3)),'type.option.option'(fun(sK0,sK1))))))) ) | $spl4),
  inference(superposition,[],[f2537,f47])).
fof(f2603,plain,(
  s('type.option.option'(sK1),'const.option.NONE_0') = s('type.option.option'(sK1),'const.option.OPTION_MAP_2'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))),s('type.option.option'(fun(sK0,sK1)),sK3))) | $spl98),
  inference(cnf_transformation,[],[f2603_D])).
fof(f2603_D,plain,(
  s('type.option.option'(sK1),'const.option.NONE_0') = s('type.option.option'(sK1),'const.option.OPTION_MAP_2'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))),s('type.option.option'(fun(sK0,sK1)),sK3))) <=> ~$spl98),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl98])])).
fof(f2605,plain,(
  s('type.option.option'(sK1),'const.option.OPTION_MAP_2'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))),s('type.option.option'(fun(sK0,sK1)),sK3))) = s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,sK4('const.option.SOME_1'(s(sK1,sK4('const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))),s('type.option.option'(fun(sK0,sK1)),sK3)),sK1))),sK1)))) | $spl100),
  inference(cnf_transformation,[],[f2605_D])).
fof(f2605_D,plain,(
  s('type.option.option'(sK1),'const.option.OPTION_MAP_2'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))),s('type.option.option'(fun(sK0,sK1)),sK3))) = s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,sK4('const.option.SOME_1'(s(sK1,sK4('const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))),s('type.option.option'(fun(sK0,sK1)),sK3)),sK1))),sK1)))) <=> ~$spl100),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl100])])).
fof(f16792,plain,(
  s('type.option.option'(sK1),'const.option.OPTION_MAP_2'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))),s('type.option.option'(fun(sK0,sK1)),sK3))) = s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,sK4('const.option.SOME_1'(s(sK1,sK4('const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))),s('type.option.option'(fun(sK0,sK1)),sK3)),sK1))),sK1)))) | s('type.option.option'(sK1),'const.option.NONE_0') = s('type.option.option'(sK1),'const.option.OPTION_MAP_2'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))),s('type.option.option'(fun(sK0,sK1)),sK3))) | $spl8),
  inference(forward_demodulation,[],[f5673,f81])).
fof(f5673,plain,(
  s('type.option.option'(sK1),'const.option.NONE_0') = s('type.option.option'(sK1),'const.option.OPTION_MAP_2'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))),s('type.option.option'(fun(sK0,sK1)),sK3))) | s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,sK4('const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))),s('type.option.option'(fun(sK0,sK1)),sK3)),sK1)))) = s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,sK4('const.option.SOME_1'(s(sK1,sK4('const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))),s('type.option.option'(fun(sK0,sK1)),sK3)),sK1))),sK1)))) | $spl8),
  inference(superposition,[],[f81,f47])).
fof(f16791,plain,(
  ( ! [X6] : (s(sK1,X6) != s(sK1,sK4('const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))),s('type.option.option'(fun(sK0,sK1)),sK3)),sK1)) | s('type.option.option'(sK1),'const.option.NONE_0') = s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,X6)))) ) | $spl320),
  inference(cnf_transformation,[],[f16791_D])).
fof(f16791_D,plain,(
  ( ! [X6] : (s(sK1,X6) != s(sK1,sK4('const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))),s('type.option.option'(fun(sK0,sK1)),sK3)),sK1)) | s('type.option.option'(sK1),'const.option.NONE_0') = s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,X6)))) ) <=> ~$spl320),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl320])])).
fof(f2602,plain,(
  s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),'const.option.OPTION_MAP_2'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))),s('type.option.option'(fun(sK0,sK1)),sK3))) | $spl99),
  inference(cnf_transformation,[],[f2602_D])).
fof(f2602_D,plain,(
  s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),'const.option.OPTION_MAP_2'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))),s('type.option.option'(fun(sK0,sK1)),sK3))) <=> ~$spl99),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl99])])).
fof(f5682,plain,(
  ( ! [X6] : (s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),'const.option.OPTION_MAP_2'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))),s('type.option.option'(fun(sK0,sK1)),sK3))) | s(sK1,X6) != s(sK1,sK4('const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))),s('type.option.option'(fun(sK0,sK1)),sK3)),sK1)) | s('type.option.option'(sK1),'const.option.NONE_0') = s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,X6)))) ) | ($spl8 | $spl82)),
  inference(superposition,[],[f3896,f81])).
fof(f16788,plain,(
  s('type.option.option'(sK1),'const.option.OPTION_MAP_2'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))),s('type.option.option'(fun(sK0,sK1)),sK3))) = s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,sK4('const.option.SOME_1'(s(sK1,sK4('const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))),s('type.option.option'(fun(sK0,sK1)),sK3)),sK1))),sK1)))) | s('type.option.option'(sK1),'const.option.NONE_0') = s('type.option.option'(sK1),'const.option.OPTION_MAP_2'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))),s('type.option.option'(fun(sK0,sK1)),sK3))) | $spl8),
  inference(forward_demodulation,[],[f5687,f81])).
fof(f5687,plain,(
  s('type.option.option'(sK1),'const.option.NONE_0') = s('type.option.option'(sK1),'const.option.OPTION_MAP_2'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))),s('type.option.option'(fun(sK0,sK1)),sK3))) | s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,sK4('const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))),s('type.option.option'(fun(sK0,sK1)),sK3)),sK1)))) = s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,sK4('const.option.SOME_1'(s(sK1,sK4('const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))),s('type.option.option'(fun(sK0,sK1)),sK3)),sK1))),sK1)))) | $spl8),
  inference(superposition,[],[f47,f81])).
fof(f16787,plain,(
  ( ! [X32] : (s(sK1,happ(s(fun(sK0,sK1),X32),s(sK0,sK2))) = s(sK1,sK4('const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))),s('type.option.option'(fun(sK0,sK1)),sK3)),sK1))) ) | $spl318),
  inference(cnf_transformation,[],[f16787_D])).
fof(f16787_D,plain,(
  ( ! [X32] : (s(sK1,happ(s(fun(sK0,sK1),X32),s(sK0,sK2))) = s(sK1,sK4('const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))),s('type.option.option'(fun(sK0,sK1)),sK3)),sK1))) ) <=> ~$spl318),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl318])])).
fof(f5955,plain,(
  ( ! [X32] : (s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),'const.option.OPTION_MAP_2'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))),s('type.option.option'(fun(sK0,sK1)),sK3))) | s(sK1,happ(s(fun(sK0,sK1),X32),s(sK0,sK2))) = s(sK1,sK4('const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))),s('type.option.option'(fun(sK0,sK1)),sK3)),sK1))) ) | ($spl8 | $spl10 | $spl18)),
  inference(superposition,[],[f5096,f81])).
fof(f5096,plain,(
  ( ! [X4,X2,X3] : (s('type.option.option'(X2),'const.option.NONE_0') != s('type.option.option'(X2),'const.option.SOME_1'(s(X2,X4))) | s(X2,X4) = s(X2,happ(s(fun(sK0,X2),X3),s(sK0,sK2)))) ) | ($spl10 | $spl18)),
  inference(superposition,[],[f43,f4796])).
fof(f4796,plain,(
  ( ! [X4,X5] : (s('type.option.option'(X4),'const.option.NONE_0') = s('type.option.option'(X4),'const.option.SOME_1'(s(X4,happ(s(fun(sK0,X4),X5),s(sK0,sK2)))))) ) | ($spl10 | $spl18)),
  inference(forward_demodulation,[],[f4771,f42])).
fof(f4771,plain,(
  ( ! [X4,X5] : (s('type.option.option'(X4),'const.option.OPTION_MAP_2'(s(fun(sK0,X4),X5),s('type.option.option'(sK0),'const.option.NONE_0'))) = s('type.option.option'(X4),'const.option.SOME_1'(s(X4,happ(s(fun(sK0,X4),X5),s(sK0,sK2)))))) ) | ($spl10 | $spl18)),
  inference(superposition,[],[f49,f4735])).
fof(f16785,plain,(
  ( ! [X37] : (s(sK0,sK2) = s(sK0,happ(s(fun(sK1,sK0),X37),s(sK1,sK4('const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))),s('type.option.option'(fun(sK0,sK1)),sK3)),sK1))))) ) | $spl316),
  inference(cnf_transformation,[],[f16785_D])).
fof(f16785_D,plain,(
  ( ! [X37] : (s(sK0,sK2) = s(sK0,happ(s(fun(sK1,sK0),X37),s(sK1,sK4('const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))),s('type.option.option'(fun(sK0,sK1)),sK3)),sK1))))) ) <=> ~$spl316),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl316])])).
fof(f8215,plain,(
  ( ! [X37] : (s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),'const.option.OPTION_MAP_2'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))),s('type.option.option'(fun(sK0,sK1)),sK3))) | s(sK0,sK2) = s(sK0,happ(s(fun(sK1,sK0),X37),s(sK1,sK4('const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))),s('type.option.option'(fun(sK0,sK1)),sK3)),sK1))))) ) | ($spl8 | $spl10 | $spl18)),
  inference(superposition,[],[f7684,f81])).
fof(f7684,plain,(
  ( ! [X14,X12,X15] : (s('type.option.option'(X12),'const.option.NONE_0') != s('type.option.option'(X12),'const.option.SOME_1'(s(X12,X14))) | s(sK0,sK2) = s(sK0,happ(s(fun(X12,sK0),X15),s(X12,X14)))) ) | ($spl10 | $spl18)),
  inference(forward_demodulation,[],[f7633,f4796])).
fof(f7633,plain,(
  ( ! [X14,X12,X15,X13] : (s(sK0,sK2) = s(sK0,happ(s(fun(X12,sK0),X15),s(X12,X14))) | s('type.option.option'(X12),'const.option.SOME_1'(s(X12,X14))) != s('type.option.option'(X12),'const.option.SOME_1'(s(X12,happ(s(fun(sK0,X12),X13),s(sK0,sK2)))))) ) | ($spl10 | $spl18)),
  inference(superposition,[],[f7572,f43])).
fof(f7572,plain,(
  ( ! [X61,X62,X63] : (s(sK0,sK2) = s(sK0,happ(s(fun(X61,sK0),X62),s(X61,happ(s(fun(sK0,X61),X63),s(sK0,sK2)))))) ) | ($spl10 | $spl18)),
  inference(trivial_inequality_removal,[],[f7531])).
fof(f7531,plain,(
  ( ! [X61,X62,X63] : (s('type.option.option'(sK0),'const.option.NONE_0') != s('type.option.option'(sK0),'const.option.NONE_0') | s(sK0,sK2) = s(sK0,happ(s(fun(X61,sK0),X62),s(X61,happ(s(fun(sK0,X61),X63),s(sK0,sK2)))))) ) | ($spl10 | $spl18)),
  inference(superposition,[],[f4767,f5140])).
fof(f5140,plain,(
  ( ! [X14,X17,X15,X16] : (s('type.option.option'(X16),'const.option.NONE_0') = s('type.option.option'(X16),'const.option.SOME_1'(s(X16,happ(s(fun(X14,X16),X17),s(X14,happ(s(fun(sK0,X14),X15),s(sK0,sK2)))))))) ) | ($spl10 | $spl18)),
  inference(forward_demodulation,[],[f5100,f42])).
fof(f5100,plain,(
  ( ! [X14,X17,X15,X16] : (s('type.option.option'(X16),'const.option.OPTION_MAP_2'(s(fun(X14,X16),X17),s('type.option.option'(X14),'const.option.NONE_0'))) = s('type.option.option'(X16),'const.option.SOME_1'(s(X16,happ(s(fun(X14,X16),X17),s(X14,happ(s(fun(sK0,X14),X15),s(sK0,sK2)))))))) ) | ($spl10 | $spl18)),
  inference(superposition,[],[f49,f4796])).
fof(f4767,plain,(
  ( ! [X0] : (s('type.option.option'(sK0),'const.option.NONE_0') != s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,X0))) | s(sK0,sK2) = s(sK0,X0)) ) | ($spl10 | $spl18)),
  inference(superposition,[],[f43,f4735])).
fof(f16784,plain,(
  ( ! [X39] : (s(sK1,happ(s(fun('type.option.option'(sK0),sK1),X39),s('type.option.option'(sK0),'const.option.NONE_0'))) = s(sK1,sK4('const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))),s('type.option.option'(fun(sK0,sK1)),sK3)),sK1))) ) | $spl314),
  inference(cnf_transformation,[],[f16784_D])).
fof(f16784_D,plain,(
  ( ! [X39] : (s(sK1,happ(s(fun('type.option.option'(sK0),sK1),X39),s('type.option.option'(sK0),'const.option.NONE_0'))) = s(sK1,sK4('const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))),s('type.option.option'(fun(sK0,sK1)),sK3)),sK1))) ) <=> ~$spl314),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl314])])).
fof(f9121,plain,(
  ( ! [X39] : (s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),'const.option.OPTION_MAP_2'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))),s('type.option.option'(fun(sK0,sK1)),sK3))) | s(sK1,happ(s(fun('type.option.option'(sK0),sK1),X39),s('type.option.option'(sK0),'const.option.NONE_0'))) = s(sK1,sK4('const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))),s('type.option.option'(fun(sK0,sK1)),sK3)),sK1))) ) | ($spl8 | $spl32)),
  inference(superposition,[],[f5290,f81])).
fof(f10423,plain,(
  s('type.option.option'(sK1),'const.option.OPTION_MAP_2'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))),s('type.option.option'(fun(sK0,sK1)),sK3))) = s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,sK4('const.option.SOME_1'(s(sK1,sK4('const.option.OPTION_MAP_2'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))),s('type.option.option'(fun(sK0,sK1)),sK3)),sK1))),sK1)))) | $spl230),
  inference(cnf_transformation,[],[f10423_D])).
fof(f10423_D,plain,(
  s('type.option.option'(sK1),'const.option.OPTION_MAP_2'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))),s('type.option.option'(fun(sK0,sK1)),sK3))) = s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,sK4('const.option.SOME_1'(s(sK1,sK4('const.option.OPTION_MAP_2'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))),s('type.option.option'(fun(sK0,sK1)),sK3)),sK1))),sK1)))) <=> ~$spl230),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl230])])).
fof(f16783,plain,(
  s('type.option.option'(sK1),'const.option.OPTION_MAP_2'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))),s('type.option.option'(fun(sK0,sK1)),sK3))) = s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,sK4('const.option.SOME_1'(s(sK1,sK4('const.option.OPTION_MAP_2'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))),s('type.option.option'(fun(sK0,sK1)),sK3)),sK1))),sK1)))) | s('type.option.option'(sK1),'const.option.NONE_0') = s('type.option.option'(sK1),'const.option.OPTION_MAP_2'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))),s('type.option.option'(fun(sK0,sK1)),sK3))) | $spl94),
  inference(forward_demodulation,[],[f10375,f2364])).
fof(f10375,plain,(
  s('type.option.option'(sK1),'const.option.NONE_0') = s('type.option.option'(sK1),'const.option.OPTION_MAP_2'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))),s('type.option.option'(fun(sK0,sK1)),sK3))) | s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,sK4('const.option.OPTION_MAP_2'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))),s('type.option.option'(fun(sK0,sK1)),sK3)),sK1)))) = s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,sK4('const.option.SOME_1'(s(sK1,sK4('const.option.OPTION_MAP_2'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))),s('type.option.option'(fun(sK0,sK1)),sK3)),sK1))),sK1)))) | $spl94),
  inference(superposition,[],[f2364,f47])).
fof(f16782,plain,(
  ( ! [X6] : (s(sK1,X6) != s(sK1,sK4('const.option.OPTION_MAP_2'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))),s('type.option.option'(fun(sK0,sK1)),sK3)),sK1)) | s('type.option.option'(sK1),'const.option.NONE_0') = s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,X6)))) ) | $spl312),
  inference(cnf_transformation,[],[f16782_D])).
fof(f16782_D,plain,(
  ( ! [X6] : (s(sK1,X6) != s(sK1,sK4('const.option.OPTION_MAP_2'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))),s('type.option.option'(fun(sK0,sK1)),sK3)),sK1)) | s('type.option.option'(sK1),'const.option.NONE_0') = s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,X6)))) ) <=> ~$spl312),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl312])])).
fof(f10383,plain,(
  ( ! [X6] : (s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),'const.option.OPTION_MAP_2'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))),s('type.option.option'(fun(sK0,sK1)),sK3))) | s(sK1,X6) != s(sK1,sK4('const.option.OPTION_MAP_2'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))),s('type.option.option'(fun(sK0,sK1)),sK3)),sK1)) | s('type.option.option'(sK1),'const.option.NONE_0') = s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,X6)))) ) | ($spl82 | $spl94)),
  inference(superposition,[],[f3896,f2364])).
fof(f16781,plain,(
  ( ! [X7] : (s(sK1,happ(s(fun(sK0,sK1),X7),s(sK0,sK2))) = s(sK1,sK4('const.option.OPTION_MAP_2'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))),s('type.option.option'(fun(sK0,sK1)),sK3)),sK1))) ) | $spl310),
  inference(cnf_transformation,[],[f16781_D])).
fof(f16781_D,plain,(
  ( ! [X7] : (s(sK1,happ(s(fun(sK0,sK1),X7),s(sK0,sK2))) = s(sK1,sK4('const.option.OPTION_MAP_2'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))),s('type.option.option'(fun(sK0,sK1)),sK3)),sK1))) ) <=> ~$spl310),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl310])])).
fof(f10384,plain,(
  ( ! [X7] : (s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),'const.option.OPTION_MAP_2'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))),s('type.option.option'(fun(sK0,sK1)),sK3))) | s(sK1,happ(s(fun(sK0,sK1),X7),s(sK0,sK2))) = s(sK1,sK4('const.option.OPTION_MAP_2'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))),s('type.option.option'(fun(sK0,sK1)),sK3)),sK1))) ) | ($spl10 | $spl18 | $spl94)),
  inference(superposition,[],[f5096,f2364])).
fof(f16780,plain,(
  ( ! [X8] : (s(sK1,happ(s(fun('type.option.option'(sK0),sK1),X8),s('type.option.option'(sK0),'const.option.NONE_0'))) = s(sK1,sK4('const.option.OPTION_MAP_2'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))),s('type.option.option'(fun(sK0,sK1)),sK3)),sK1))) ) | $spl308),
  inference(cnf_transformation,[],[f16780_D])).
fof(f16780_D,plain,(
  ( ! [X8] : (s(sK1,happ(s(fun('type.option.option'(sK0),sK1),X8),s('type.option.option'(sK0),'const.option.NONE_0'))) = s(sK1,sK4('const.option.OPTION_MAP_2'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))),s('type.option.option'(fun(sK0,sK1)),sK3)),sK1))) ) <=> ~$spl308),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl308])])).
fof(f10385,plain,(
  ( ! [X8] : (s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),'const.option.OPTION_MAP_2'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))),s('type.option.option'(fun(sK0,sK1)),sK3))) | s(sK1,happ(s(fun('type.option.option'(sK0),sK1),X8),s('type.option.option'(sK0),'const.option.NONE_0'))) = s(sK1,sK4('const.option.OPTION_MAP_2'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))),s('type.option.option'(fun(sK0,sK1)),sK3)),sK1))) ) | ($spl32 | $spl94)),
  inference(superposition,[],[f5290,f2364])).
fof(f16779,plain,(
  ( ! [X9] : (s(sK0,sK2) = s(sK0,happ(s(fun(sK1,sK0),X9),s(sK1,sK4('const.option.OPTION_MAP_2'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))),s('type.option.option'(fun(sK0,sK1)),sK3)),sK1))))) ) | $spl306),
  inference(cnf_transformation,[],[f16779_D])).
fof(f16779_D,plain,(
  ( ! [X9] : (s(sK0,sK2) = s(sK0,happ(s(fun(sK1,sK0),X9),s(sK1,sK4('const.option.OPTION_MAP_2'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))),s('type.option.option'(fun(sK0,sK1)),sK3)),sK1))))) ) <=> ~$spl306),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl306])])).
fof(f10386,plain,(
  ( ! [X9] : (s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),'const.option.OPTION_MAP_2'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))),s('type.option.option'(fun(sK0,sK1)),sK3))) | s(sK0,sK2) = s(sK0,happ(s(fun(sK1,sK0),X9),s(sK1,sK4('const.option.OPTION_MAP_2'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))),s('type.option.option'(fun(sK0,sK1)),sK3)),sK1))))) ) | ($spl10 | $spl18 | $spl94)),
  inference(superposition,[],[f7684,f2364])).
fof(f16776,plain,(
  s('type.option.option'(sK1),'const.option.OPTION_MAP_2'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))),s('type.option.option'(fun(sK0,sK1)),sK3))) = s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,sK4('const.option.SOME_1'(s(sK1,sK4('const.option.OPTION_MAP_2'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))),s('type.option.option'(fun(sK0,sK1)),sK3)),sK1))),sK1)))) | s('type.option.option'(sK1),'const.option.NONE_0') = s('type.option.option'(sK1),'const.option.OPTION_MAP_2'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))),s('type.option.option'(fun(sK0,sK1)),sK3))) | $spl94),
  inference(forward_demodulation,[],[f10392,f2364])).
fof(f10392,plain,(
  s('type.option.option'(sK1),'const.option.NONE_0') = s('type.option.option'(sK1),'const.option.OPTION_MAP_2'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))),s('type.option.option'(fun(sK0,sK1)),sK3))) | s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,sK4('const.option.OPTION_MAP_2'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))),s('type.option.option'(fun(sK0,sK1)),sK3)),sK1)))) = s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,sK4('const.option.SOME_1'(s(sK1,sK4('const.option.OPTION_MAP_2'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))),s('type.option.option'(fun(sK0,sK1)),sK3)),sK1))),sK1)))) | $spl94),
  inference(superposition,[],[f47,f2364])).
fof(f16775,plain,(
  ( ! [X53] : (s('type.option.option'(sK0),'const.option.NONE_0') = s('type.option.option'(sK0),happ(s(fun(sK1,'type.option.option'(sK0)),X53),s(sK1,sK4('const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))),s('type.option.option'(fun(sK0,sK1)),sK3)),sK1))))) ) | $spl304),
  inference(cnf_transformation,[],[f16775_D])).
fof(f16775_D,plain,(
  ( ! [X53] : (s('type.option.option'(sK0),'const.option.NONE_0') = s('type.option.option'(sK0),happ(s(fun(sK1,'type.option.option'(sK0)),X53),s(sK1,sK4('const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))),s('type.option.option'(fun(sK0,sK1)),sK3)),sK1))))) ) <=> ~$spl304),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl304])])).
fof(f10967,plain,(
  ( ! [X53] : (s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),'const.option.OPTION_MAP_2'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))),s('type.option.option'(fun(sK0,sK1)),sK3))) | s('type.option.option'(sK0),'const.option.NONE_0') = s('type.option.option'(sK0),happ(s(fun(sK1,'type.option.option'(sK0)),X53),s(sK1,sK4('const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))),s('type.option.option'(fun(sK0,sK1)),sK3)),sK1))))) ) | ($spl8 | $spl10 | $spl18 | $spl32)),
  inference(superposition,[],[f8138,f81])).
fof(f8138,plain,(
  ( ! [X14,X12,X15] : (s('type.option.option'(X12),'const.option.NONE_0') != s('type.option.option'(X12),'const.option.SOME_1'(s(X12,X14))) | s('type.option.option'(sK0),'const.option.NONE_0') = s('type.option.option'(sK0),happ(s(fun(X12,'type.option.option'(sK0)),X15),s(X12,X14)))) ) | ($spl10 | $spl18 | $spl32)),
  inference(forward_demodulation,[],[f8103,f4796])).
fof(f8103,plain,(
  ( ! [X14,X12,X15,X13] : (s('type.option.option'(sK0),'const.option.NONE_0') = s('type.option.option'(sK0),happ(s(fun(X12,'type.option.option'(sK0)),X15),s(X12,X14))) | s('type.option.option'(X12),'const.option.SOME_1'(s(X12,X14))) != s('type.option.option'(X12),'const.option.SOME_1'(s(X12,happ(s(fun(sK0,X12),X13),s(sK0,sK2)))))) ) | ($spl10 | $spl18 | $spl32)),
  inference(superposition,[],[f7575,f43])).
fof(f7575,plain,(
  ( ! [X54,X52,X53] : (s('type.option.option'(sK0),'const.option.NONE_0') = s('type.option.option'(sK0),happ(s(fun(X52,'type.option.option'(sK0)),X53),s(X52,happ(s(fun(sK0,X52),X54),s(sK0,sK2)))))) ) | ($spl10 | $spl18 | $spl32)),
  inference(trivial_inequality_removal,[],[f7528])).
fof(f7528,plain,(
  ( ! [X54,X52,X53] : (s('type.option.option'('type.option.option'(sK0)),'const.option.NONE_0') != s('type.option.option'('type.option.option'(sK0)),'const.option.NONE_0') | s('type.option.option'(sK0),'const.option.NONE_0') = s('type.option.option'(sK0),happ(s(fun(X52,'type.option.option'(sK0)),X53),s(X52,happ(s(fun(sK0,X52),X54),s(sK0,sK2)))))) ) | ($spl10 | $spl18 | $spl32)),
  inference(superposition,[],[f4925,f5140])).
fof(f16774,plain,(
  ( ! [X55] : (s('type.option.option'(sK0),'const.option.NONE_0') = s('type.option.option'(sK0),happ(s(fun(sK1,'type.option.option'(sK0)),X55),s(sK1,sK4('const.option.OPTION_MAP_2'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))),s('type.option.option'(fun(sK0,sK1)),sK3)),sK1))))) ) | $spl302),
  inference(cnf_transformation,[],[f16774_D])).
fof(f16774_D,plain,(
  ( ! [X55] : (s('type.option.option'(sK0),'const.option.NONE_0') = s('type.option.option'(sK0),happ(s(fun(sK1,'type.option.option'(sK0)),X55),s(sK1,sK4('const.option.OPTION_MAP_2'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))),s('type.option.option'(fun(sK0,sK1)),sK3)),sK1))))) ) <=> ~$spl302),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl302])])).
fof(f10969,plain,(
  ( ! [X55] : (s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),'const.option.OPTION_MAP_2'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))),s('type.option.option'(fun(sK0,sK1)),sK3))) | s('type.option.option'(sK0),'const.option.NONE_0') = s('type.option.option'(sK0),happ(s(fun(sK1,'type.option.option'(sK0)),X55),s(sK1,sK4('const.option.OPTION_MAP_2'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))),s('type.option.option'(fun(sK0,sK1)),sK3)),sK1))))) ) | ($spl10 | $spl18 | $spl32 | $spl94)),
  inference(superposition,[],[f8138,f2364])).
fof(f16763,plain,(
  s('type.option.option'(sK1),'const.option.NONE_0') = s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,sK4('const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))),s('type.option.option'(fun(sK0,sK1)),'const.option.NONE_0')),sK1)))) | $spl300),
  inference(cnf_transformation,[],[f16763_D])).
fof(f16763_D,plain,(
  s('type.option.option'(sK1),'const.option.NONE_0') = s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,sK4('const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))),s('type.option.option'(fun(sK0,sK1)),'const.option.NONE_0')),sK1)))) <=> ~$spl300),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl300])])).
fof(f16761,plain,(
  s('type.option.option'(sK1),'const.option.NONE_0') = s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,sK4('const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))),s('type.option.option'(fun(sK0,sK1)),'const.option.NONE_0')),sK1)))) | s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),'const.option.NONE_0'))) != s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),'const.option.OPTION_MAP_2'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))),s('type.option.option'(fun(sK0,sK1)),sK3))))) | ($spl6 | $spl92)),
  inference(forward_demodulation,[],[f16760,f42])).
fof(f16760,plain,(
  s('type.option.option'(sK1),'const.option.OPTION_MAP_2'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))),s('type.option.option'(fun(sK0,sK1)),'const.option.NONE_0'))) = s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,sK4('const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))),s('type.option.option'(fun(sK0,sK1)),'const.option.NONE_0')),sK1)))) | s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),'const.option.NONE_0'))) != s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),'const.option.OPTION_MAP_2'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))),s('type.option.option'(fun(sK0,sK1)),sK3))))) | ($spl6 | $spl92)),
  inference(forward_demodulation,[],[f12261,f40])).
fof(f12261,plain,(
  s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),'const.option.NONE_0'))) != s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),'const.option.OPTION_MAP_2'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))),s('type.option.option'(fun(sK0,sK1)),sK3))))) | s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))),s('type.option.option'(fun(sK0,sK1)),'const.option.NONE_0'))) = s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,sK4('const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))),s('type.option.option'(fun(sK0,sK1)),'const.option.NONE_0')),sK1)))) | ($spl6 | $spl92)),
  inference(superposition,[],[f2360,f77])).
fof(f12321,plain,(
  ( ! [X2] : (s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),'const.option.NONE_0'))) != s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),'const.option.OPTION_MAP_2'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))),s('type.option.option'(fun(sK0,sK1)),sK3))))) | s('type.option.option'(sK1),X2) = s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,sK4(X2,sK1))))) ) | $spl92),
  inference(duplicate_literal_removal,[],[f12266])).
fof(f12266,plain,(
  ( ! [X2] : (s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),'const.option.NONE_0'))) != s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),'const.option.OPTION_MAP_2'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))),s('type.option.option'(fun(sK0,sK1)),sK3))))) | s('type.option.option'(sK1),X2) = s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,sK4(X2,sK1)))) | s('type.option.option'(sK1),X2) = s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,sK4(X2,sK1))))) ) | $spl92),
  inference(superposition,[],[f2360,f47])).
fof(f16758,plain,(
  ( ! [X12,X13,X11] : (s('type.option.option'(sK1),'const.option.NONE_0') = s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,sK4('const.option.SOME_1'(s(sK1,happ(s(fun(X11,sK1),X12),s(X11,happ(s(fun(sK0,X11),X13),s(sK0,sK2)))))),sK1)))) | s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),'const.option.NONE_0'))) != s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),'const.option.OPTION_MAP_2'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))),s('type.option.option'(fun(sK0,sK1)),sK3)))))) ) | ($spl10 | $spl18 | $spl92)),
  inference(forward_demodulation,[],[f12270,f5140])).
fof(f12270,plain,(
  ( ! [X12,X13,X11] : (s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),'const.option.NONE_0'))) != s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),'const.option.OPTION_MAP_2'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))),s('type.option.option'(fun(sK0,sK1)),sK3))))) | s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,happ(s(fun(X11,sK1),X12),s(X11,happ(s(fun(sK0,X11),X13),s(sK0,sK2))))))) = s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,sK4('const.option.SOME_1'(s(sK1,happ(s(fun(X11,sK1),X12),s(X11,happ(s(fun(sK0,X11),X13),s(sK0,sK2)))))),sK1))))) ) | ($spl10 | $spl18 | $spl92)),
  inference(superposition,[],[f2360,f5140])).
fof(f16757,plain,(
  ( ! [X14,X15,X16] : (s('type.option.option'(sK1),'const.option.NONE_0') = s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,sK4('const.option.SOME_1'(s(sK1,happ(s(fun(X14,sK1),X15),s(X14,happ(s(fun('type.option.option'(sK0),X14),X16),s('type.option.option'(sK0),'const.option.NONE_0')))))),sK1))))) ) | $spl296),
  inference(cnf_transformation,[],[f16757_D])).
fof(f16757_D,plain,(
  ( ! [X14,X15,X16] : (s('type.option.option'(sK1),'const.option.NONE_0') = s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,sK4('const.option.SOME_1'(s(sK1,happ(s(fun(X14,sK1),X15),s(X14,happ(s(fun('type.option.option'(sK0),X14),X16),s('type.option.option'(sK0),'const.option.NONE_0')))))),sK1))))) ) <=> ~$spl296),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl296])])).
fof(f16756,plain,(
  ( ! [X14,X15,X16] : (s('type.option.option'(sK1),'const.option.NONE_0') = s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,sK4('const.option.SOME_1'(s(sK1,happ(s(fun(X14,sK1),X15),s(X14,happ(s(fun('type.option.option'(sK0),X14),X16),s('type.option.option'(sK0),'const.option.NONE_0')))))),sK1)))) | s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),'const.option.NONE_0'))) != s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),'const.option.OPTION_MAP_2'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))),s('type.option.option'(fun(sK0,sK1)),sK3)))))) ) | ($spl32 | $spl92)),
  inference(forward_demodulation,[],[f12271,f5336])).
fof(f12271,plain,(
  ( ! [X14,X15,X16] : (s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),'const.option.NONE_0'))) != s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),'const.option.OPTION_MAP_2'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))),s('type.option.option'(fun(sK0,sK1)),sK3))))) | s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,happ(s(fun(X14,sK1),X15),s(X14,happ(s(fun('type.option.option'(sK0),X14),X16),s('type.option.option'(sK0),'const.option.NONE_0'))))))) = s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,sK4('const.option.SOME_1'(s(sK1,happ(s(fun(X14,sK1),X15),s(X14,happ(s(fun('type.option.option'(sK0),X14),X16),s('type.option.option'(sK0),'const.option.NONE_0')))))),sK1))))) ) | ($spl32 | $spl92)),
  inference(superposition,[],[f2360,f5336])).
fof(f16755,plain,(
  ( ! [X19,X17,X18] : (s('type.option.option'(sK1),'const.option.NONE_0') = s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,sK4('const.option.SOME_1'(s(sK1,happ(s(fun(X17,sK1),happ(s(fun(sK0,fun(X17,sK1)),X18),s(sK0,sK2))),s(X17,X19)))),sK1))))) ) | $spl294),
  inference(cnf_transformation,[],[f16755_D])).
fof(f16755_D,plain,(
  ( ! [X19,X17,X18] : (s('type.option.option'(sK1),'const.option.NONE_0') = s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,sK4('const.option.SOME_1'(s(sK1,happ(s(fun(X17,sK1),happ(s(fun(sK0,fun(X17,sK1)),X18),s(sK0,sK2))),s(X17,X19)))),sK1))))) ) <=> ~$spl294),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl294])])).
fof(f16754,plain,(
  ( ! [X19,X17,X18] : (s('type.option.option'(sK1),'const.option.NONE_0') = s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,sK4('const.option.SOME_1'(s(sK1,happ(s(fun(X17,sK1),happ(s(fun(sK0,fun(X17,sK1)),X18),s(sK0,sK2))),s(X17,X19)))),sK1)))) | s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),'const.option.NONE_0'))) != s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),'const.option.OPTION_MAP_2'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))),s('type.option.option'(fun(sK0,sK1)),sK3)))))) ) | ($spl10 | $spl18 | $spl92)),
  inference(forward_demodulation,[],[f12272,f7508])).
fof(f7508,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.option.option'(X0),'const.option.NONE_0') = s('type.option.option'(X0),'const.option.SOME_1'(s(X0,happ(s(fun(X1,X0),happ(s(fun(sK0,fun(X1,X0)),X3),s(sK0,sK2))),s(X1,X2)))))) ) | ($spl10 | $spl18)),
  inference(superposition,[],[f5140,f48])).
fof(f12272,plain,(
  ( ! [X19,X17,X18] : (s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),'const.option.NONE_0'))) != s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),'const.option.OPTION_MAP_2'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))),s('type.option.option'(fun(sK0,sK1)),sK3))))) | s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,happ(s(fun(X17,sK1),happ(s(fun(sK0,fun(X17,sK1)),X18),s(sK0,sK2))),s(X17,X19))))) = s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,sK4('const.option.SOME_1'(s(sK1,happ(s(fun(X17,sK1),happ(s(fun(sK0,fun(X17,sK1)),X18),s(sK0,sK2))),s(X17,X19)))),sK1))))) ) | ($spl10 | $spl18 | $spl92)),
  inference(superposition,[],[f2360,f7508])).
fof(f16753,plain,(
  ( ! [X21] : (s('type.option.option'(sK1),'const.option.NONE_0') = s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,sK4('const.option.SOME_1'(s(sK1,happ(s(fun('type.option.option'(sK0),sK1),X21),s('type.option.option'(sK0),'const.option.NONE_0')))),sK1))))) ) | $spl292),
  inference(cnf_transformation,[],[f16753_D])).
fof(f16753_D,plain,(
  ( ! [X21] : (s('type.option.option'(sK1),'const.option.NONE_0') = s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,sK4('const.option.SOME_1'(s(sK1,happ(s(fun('type.option.option'(sK0),sK1),X21),s('type.option.option'(sK0),'const.option.NONE_0')))),sK1))))) ) <=> ~$spl292),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl292])])).
fof(f16752,plain,(
  ( ! [X21] : (s('type.option.option'(sK1),'const.option.NONE_0') = s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,sK4('const.option.SOME_1'(s(sK1,happ(s(fun('type.option.option'(sK0),sK1),X21),s('type.option.option'(sK0),'const.option.NONE_0')))),sK1)))) | s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),'const.option.NONE_0'))) != s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),'const.option.OPTION_MAP_2'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))),s('type.option.option'(fun(sK0,sK1)),sK3)))))) ) | ($spl32 | $spl92)),
  inference(forward_demodulation,[],[f12274,f4951])).
fof(f12274,plain,(
  ( ! [X21] : (s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),'const.option.NONE_0'))) != s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),'const.option.OPTION_MAP_2'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))),s('type.option.option'(fun(sK0,sK1)),sK3))))) | s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,happ(s(fun('type.option.option'(sK0),sK1),X21),s('type.option.option'(sK0),'const.option.NONE_0'))))) = s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,sK4('const.option.SOME_1'(s(sK1,happ(s(fun('type.option.option'(sK0),sK1),X21),s('type.option.option'(sK0),'const.option.NONE_0')))),sK1))))) ) | ($spl32 | $spl92)),
  inference(superposition,[],[f2360,f4951])).
fof(f16750,plain,(
  ( ! [X22] : (s('type.option.option'(sK1),'const.option.NONE_0') = s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,sK4('const.option.SOME_1'(s(sK1,happ(s(fun(sK0,sK1),X22),s(sK0,sK2)))),sK1)))) | s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),'const.option.NONE_0'))) != s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),'const.option.OPTION_MAP_2'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))),s('type.option.option'(fun(sK0,sK1)),sK3)))))) ) | ($spl10 | $spl18 | $spl92)),
  inference(forward_demodulation,[],[f12275,f4796])).
fof(f12275,plain,(
  ( ! [X22] : (s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),'const.option.NONE_0'))) != s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),'const.option.OPTION_MAP_2'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))),s('type.option.option'(fun(sK0,sK1)),sK3))))) | s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,happ(s(fun(sK0,sK1),X22),s(sK0,sK2))))) = s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,sK4('const.option.SOME_1'(s(sK1,happ(s(fun(sK0,sK1),X22),s(sK0,sK2)))),sK1))))) ) | ($spl10 | $spl18 | $spl92)),
  inference(superposition,[],[f2360,f4796])).
fof(f16749,plain,(
  ( ! [X26,X27] : (s('type.option.option'(sK1),'const.option.NONE_0') = s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,sK4('const.option.OPTION_APPLY_2'(s('type.option.option'(fun(X26,sK1)),'const.option.NONE_0'),s('type.option.option'(X26),X27)),sK1))))) ) | $spl288),
  inference(cnf_transformation,[],[f16749_D])).
fof(f16749_D,plain,(
  ( ! [X26,X27] : (s('type.option.option'(sK1),'const.option.NONE_0') = s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,sK4('const.option.OPTION_APPLY_2'(s('type.option.option'(fun(X26,sK1)),'const.option.NONE_0'),s('type.option.option'(X26),X27)),sK1))))) ) <=> ~$spl288),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl288])])).
fof(f16748,plain,(
  ( ! [X26,X27] : (s('type.option.option'(sK1),'const.option.NONE_0') = s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,sK4('const.option.OPTION_APPLY_2'(s('type.option.option'(fun(X26,sK1)),'const.option.NONE_0'),s('type.option.option'(X26),X27)),sK1)))) | s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),'const.option.NONE_0'))) != s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),'const.option.OPTION_MAP_2'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))),s('type.option.option'(fun(sK0,sK1)),sK3)))))) ) | $spl92),
  inference(forward_demodulation,[],[f12277,f41])).
fof(f12277,plain,(
  ( ! [X26,X27] : (s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),'const.option.NONE_0'))) != s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),'const.option.OPTION_MAP_2'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))),s('type.option.option'(fun(sK0,sK1)),sK3))))) | s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(X26,sK1)),'const.option.NONE_0'),s('type.option.option'(X26),X27))) = s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,sK4('const.option.OPTION_APPLY_2'(s('type.option.option'(fun(X26,sK1)),'const.option.NONE_0'),s('type.option.option'(X26),X27)),sK1))))) ) | $spl92),
  inference(superposition,[],[f2360,f41])).
fof(f16747,plain,(
  ( ! [X30,X29] : (s('type.option.option'(sK1),'const.option.NONE_0') = s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,sK4('const.option.OPTION_MAP_2'(s(fun(X29,sK1),X30),s('type.option.option'(X29),'const.option.NONE_0')),sK1))))) ) | $spl286),
  inference(cnf_transformation,[],[f16747_D])).
fof(f16747_D,plain,(
  ( ! [X30,X29] : (s('type.option.option'(sK1),'const.option.NONE_0') = s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,sK4('const.option.OPTION_MAP_2'(s(fun(X29,sK1),X30),s('type.option.option'(X29),'const.option.NONE_0')),sK1))))) ) <=> ~$spl286),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl286])])).
fof(f16746,plain,(
  ( ! [X30,X29] : (s('type.option.option'(sK1),'const.option.NONE_0') = s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,sK4('const.option.OPTION_MAP_2'(s(fun(X29,sK1),X30),s('type.option.option'(X29),'const.option.NONE_0')),sK1)))) | s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),'const.option.NONE_0'))) != s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),'const.option.OPTION_MAP_2'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))),s('type.option.option'(fun(sK0,sK1)),sK3)))))) ) | $spl92),
  inference(forward_demodulation,[],[f12278,f42])).
fof(f12278,plain,(
  ( ! [X30,X29] : (s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),'const.option.NONE_0'))) != s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),'const.option.OPTION_MAP_2'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))),s('type.option.option'(fun(sK0,sK1)),sK3))))) | s('type.option.option'(sK1),'const.option.OPTION_MAP_2'(s(fun(X29,sK1),X30),s('type.option.option'(X29),'const.option.NONE_0'))) = s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,sK4('const.option.OPTION_MAP_2'(s(fun(X29,sK1),X30),s('type.option.option'(X29),'const.option.NONE_0')),sK1))))) ) | $spl92),
  inference(superposition,[],[f2360,f42])).
fof(f16744,plain,(
  ( ! [X35,X36,X34] : (s('type.option.option'(sK1),'const.option.NONE_0') = s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,sK4('const.option.OPTION_MAP_2'(s(fun(X34,sK1),happ(s(fun(sK0,fun(X34,sK1)),X35),s(sK0,sK2))),s('type.option.option'(X34),X36)),sK1)))) | s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),'const.option.NONE_0'))) != s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),'const.option.OPTION_MAP_2'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))),s('type.option.option'(fun(sK0,sK1)),sK3)))))) ) | ($spl10 | $spl18 | $spl92)),
  inference(forward_demodulation,[],[f12280,f5141])).
fof(f5141,plain,(
  ( ! [X24,X23,X25,X22] : (s('type.option.option'(X23),'const.option.NONE_0') = s('type.option.option'(X23),'const.option.OPTION_MAP_2'(s(fun(X22,X23),happ(s(fun(sK0,fun(X22,X23)),X24),s(sK0,sK2))),s('type.option.option'(X22),X25)))) ) | ($spl10 | $spl18)),
  inference(forward_demodulation,[],[f5103,f41])).
fof(f5103,plain,(
  ( ! [X24,X23,X25,X22] : (s('type.option.option'(X23),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(X22,X23)),'const.option.NONE_0'),s('type.option.option'(X22),X25))) = s('type.option.option'(X23),'const.option.OPTION_MAP_2'(s(fun(X22,X23),happ(s(fun(sK0,fun(X22,X23)),X24),s(sK0,sK2))),s('type.option.option'(X22),X25)))) ) | ($spl10 | $spl18)),
  inference(superposition,[],[f40,f4796])).
fof(f12280,plain,(
  ( ! [X35,X36,X34] : (s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),'const.option.NONE_0'))) != s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),'const.option.OPTION_MAP_2'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))),s('type.option.option'(fun(sK0,sK1)),sK3))))) | s('type.option.option'(sK1),'const.option.OPTION_MAP_2'(s(fun(X34,sK1),happ(s(fun(sK0,fun(X34,sK1)),X35),s(sK0,sK2))),s('type.option.option'(X34),X36))) = s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,sK4('const.option.OPTION_MAP_2'(s(fun(X34,sK1),happ(s(fun(sK0,fun(X34,sK1)),X35),s(sK0,sK2))),s('type.option.option'(X34),X36)),sK1))))) ) | ($spl10 | $spl18 | $spl92)),
  inference(superposition,[],[f2360,f5141])).
fof(f16743,plain,(
  ( ! [X39,X37,X38] : (s('type.option.option'(sK1),'const.option.NONE_0') = s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,sK4('const.option.OPTION_MAP_2'(s(fun(X37,sK1),happ(s(fun('type.option.option'(sK0),fun(X37,sK1)),X38),s('type.option.option'(sK0),'const.option.NONE_0'))),s('type.option.option'(X37),X39)),sK1))))) ) | $spl282),
  inference(cnf_transformation,[],[f16743_D])).
fof(f16743_D,plain,(
  ( ! [X39,X37,X38] : (s('type.option.option'(sK1),'const.option.NONE_0') = s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,sK4('const.option.OPTION_MAP_2'(s(fun(X37,sK1),happ(s(fun('type.option.option'(sK0),fun(X37,sK1)),X38),s('type.option.option'(sK0),'const.option.NONE_0'))),s('type.option.option'(X37),X39)),sK1))))) ) <=> ~$spl282),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl282])])).
fof(f16742,plain,(
  ( ! [X39,X37,X38] : (s('type.option.option'(sK1),'const.option.NONE_0') = s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,sK4('const.option.OPTION_MAP_2'(s(fun(X37,sK1),happ(s(fun('type.option.option'(sK0),fun(X37,sK1)),X38),s('type.option.option'(sK0),'const.option.NONE_0'))),s('type.option.option'(X37),X39)),sK1)))) | s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),'const.option.NONE_0'))) != s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),'const.option.OPTION_MAP_2'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))),s('type.option.option'(fun(sK0,sK1)),sK3)))))) ) | ($spl32 | $spl92)),
  inference(forward_demodulation,[],[f12281,f5337])).
fof(f5337,plain,(
  ( ! [X24,X23,X25,X22] : (s('type.option.option'(X23),'const.option.NONE_0') = s('type.option.option'(X23),'const.option.OPTION_MAP_2'(s(fun(X22,X23),happ(s(fun('type.option.option'(sK0),fun(X22,X23)),X24),s('type.option.option'(sK0),'const.option.NONE_0'))),s('type.option.option'(X22),X25)))) ) | $spl32),
  inference(forward_demodulation,[],[f5297,f41])).
fof(f5297,plain,(
  ( ! [X24,X23,X25,X22] : (s('type.option.option'(X23),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(X22,X23)),'const.option.NONE_0'),s('type.option.option'(X22),X25))) = s('type.option.option'(X23),'const.option.OPTION_MAP_2'(s(fun(X22,X23),happ(s(fun('type.option.option'(sK0),fun(X22,X23)),X24),s('type.option.option'(sK0),'const.option.NONE_0'))),s('type.option.option'(X22),X25)))) ) | $spl32),
  inference(superposition,[],[f40,f4951])).
fof(f12281,plain,(
  ( ! [X39,X37,X38] : (s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),'const.option.NONE_0'))) != s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),'const.option.OPTION_MAP_2'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))),s('type.option.option'(fun(sK0,sK1)),sK3))))) | s('type.option.option'(sK1),'const.option.OPTION_MAP_2'(s(fun(X37,sK1),happ(s(fun('type.option.option'(sK0),fun(X37,sK1)),X38),s('type.option.option'(sK0),'const.option.NONE_0'))),s('type.option.option'(X37),X39))) = s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,sK4('const.option.OPTION_MAP_2'(s(fun(X37,sK1),happ(s(fun('type.option.option'(sK0),fun(X37,sK1)),X38),s('type.option.option'(sK0),'const.option.NONE_0'))),s('type.option.option'(X37),X39)),sK1))))) ) | ($spl32 | $spl92)),
  inference(superposition,[],[f2360,f5337])).
fof(f16732,plain,(
  ( ! [X1] : (s('type.option.option'(sK0),'const.option.NONE_0') != s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK4(sK4('const.option.SOME_1'(s('type.option.option'(sK0),X1)),'type.option.option'(sK0)),sK0)))) | s('type.option.option'(sK0),X1) = s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK4(X1,sK0))))) ) | $spl280),
  inference(cnf_transformation,[],[f16732_D])).
fof(f16732_D,plain,(
  ( ! [X1] : (s('type.option.option'(sK0),'const.option.NONE_0') != s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK4(sK4('const.option.SOME_1'(s('type.option.option'(sK0),X1)),'type.option.option'(sK0)),sK0)))) | s('type.option.option'(sK0),X1) = s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK4(X1,sK0))))) ) <=> ~$spl280),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl280])])).
fof(f16731,plain,(
  s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(sK0,sK1)),sK3),s('type.option.option'(sK0),'const.option.NONE_0'))) != s('type.option.option'(sK1),'const.option.OPTION_MAP_2'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))),s('type.option.option'(fun(sK0,sK1)),sK3))) | $spl279),
  inference(cnf_transformation,[],[f16731_D])).
fof(f16731_D,plain,(
  s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(sK0,sK1)),sK3),s('type.option.option'(sK0),'const.option.NONE_0'))) != s('type.option.option'(sK1),'const.option.OPTION_MAP_2'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))),s('type.option.option'(fun(sK0,sK1)),sK3))) <=> ~$spl279),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl279])])).
fof(f15770,plain,(
  ( ! [X1] : (s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(sK0,sK1)),sK3),s('type.option.option'(sK0),'const.option.NONE_0'))) != s('type.option.option'(sK1),'const.option.OPTION_MAP_2'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))),s('type.option.option'(fun(sK0,sK1)),sK3))) | s('type.option.option'(sK0),'const.option.NONE_0') != s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK4(sK4('const.option.SOME_1'(s('type.option.option'(sK0),X1)),'type.option.option'(sK0)),sK0)))) | s('type.option.option'(sK0),X1) = s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK4(X1,sK0))))) ) | ($spl10 | $spl18 | $spl42 | $spl82 | $spl102 | $spl176)),
  inference(forward_demodulation,[],[f15736,f4735])).
fof(f15736,plain,(
  ( ! [X1] : (s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(sK0,sK1)),sK3),s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))))) != s('type.option.option'(sK1),'const.option.OPTION_MAP_2'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))),s('type.option.option'(fun(sK0,sK1)),sK3))) | s('type.option.option'(sK0),'const.option.NONE_0') != s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK4(sK4('const.option.SOME_1'(s('type.option.option'(sK0),X1)),'type.option.option'(sK0)),sK0)))) | s('type.option.option'(sK0),X1) = s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK4(X1,sK0))))) ) | ($spl10 | $spl18 | $spl42 | $spl82 | $spl102 | $spl176)),
  inference(superposition,[],[f15732,f5783])).
fof(f5783,plain,(
  ( ! [X0] : (s(sK0,sK2) = s(sK0,sK4(sK4('const.option.SOME_1'(s('type.option.option'(sK0),X0)),'type.option.option'(sK0)),sK0)) | s('type.option.option'(sK0),X0) = s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK4(X0,sK0))))) ) | ($spl10 | $spl18 | $spl42 | $spl82 | $spl102 | $spl176)),
  inference(superposition,[],[f5760,f47])).
fof(f5760,plain,(
  s(sK0,sK2) = s(sK0,sK4(sK4('const.option.SOME_1'(s('type.option.option'(sK0),'const.option.NONE_0')),'type.option.option'(sK0)),sK0)) | ($spl10 | $spl18 | $spl42 | $spl82 | $spl102 | $spl176)),
  inference(trivial_inequality_removal,[],[f5731])).
fof(f5731,plain,(
  s('type.option.option'(sK0),'const.option.NONE_0') != s('type.option.option'(sK0),'const.option.NONE_0') | s(sK0,sK2) = s(sK0,sK4(sK4('const.option.SOME_1'(s('type.option.option'(sK0),'const.option.NONE_0')),'type.option.option'(sK0)),sK0)) | ($spl10 | $spl18 | $spl42 | $spl82 | $spl102 | $spl176)),
  inference(superposition,[],[f4767,f5717])).
fof(f5717,plain,(
  s('type.option.option'(sK0),'const.option.NONE_0') = s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK4(sK4('const.option.SOME_1'(s('type.option.option'(sK0),'const.option.NONE_0')),'type.option.option'(sK0)),sK0)))) | ($spl42 | $spl82 | $spl102 | $spl176)),
  inference(forward_demodulation,[],[f4575,f4720])).
fof(f15732,plain,(
  ( ! [X0] : (s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(sK0,sK1)),sK3),s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,X0))))) != s('type.option.option'(sK1),'const.option.OPTION_MAP_2'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,X0))),s('type.option.option'(fun(sK0,sK1)),sK3))) | s('type.option.option'(sK0),'const.option.NONE_0') != s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,X0)))) ) | ($spl10 | $spl18)),
  inference(forward_demodulation,[],[f473,f4735])).
fof(f473,plain,(
  ( ! [X0] : (s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(sK0,sK1)),sK3),s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,X0))))) != s('type.option.option'(sK1),'const.option.OPTION_MAP_2'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,X0))),s('type.option.option'(fun(sK0,sK1)),sK3))) | s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))) != s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,X0)))) )),
  inference(superposition,[],[f65,f43])).
fof(f16729,plain,(
  ( ! [X4,X5] : (s('type.option.option'(sK0),'const.option.NONE_0') != s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,happ(s(fun('type.option.option'(sK0),sK0),X4),s('type.option.option'(sK0),X5))))) | s('type.option.option'(sK0),X5) = s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK4(X5,sK0))))) ) | $spl276),
  inference(cnf_transformation,[],[f16729_D])).
fof(f16729_D,plain,(
  ( ! [X4,X5] : (s('type.option.option'(sK0),'const.option.NONE_0') != s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,happ(s(fun('type.option.option'(sK0),sK0),X4),s('type.option.option'(sK0),X5))))) | s('type.option.option'(sK0),X5) = s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK4(X5,sK0))))) ) <=> ~$spl276),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl276])])).
fof(f15778,plain,(
  ( ! [X4,X5] : (s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(sK0,sK1)),sK3),s('type.option.option'(sK0),'const.option.NONE_0'))) != s('type.option.option'(sK1),'const.option.OPTION_MAP_2'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))),s('type.option.option'(fun(sK0,sK1)),sK3))) | s('type.option.option'(sK0),'const.option.NONE_0') != s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,happ(s(fun('type.option.option'(sK0),sK0),X4),s('type.option.option'(sK0),X5))))) | s('type.option.option'(sK0),X5) = s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK4(X5,sK0))))) ) | ($spl10 | $spl18 | $spl32)),
  inference(forward_demodulation,[],[f15739,f4735])).
fof(f15739,plain,(
  ( ! [X4,X5] : (s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(sK0,sK1)),sK3),s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))))) != s('type.option.option'(sK1),'const.option.OPTION_MAP_2'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))),s('type.option.option'(fun(sK0,sK1)),sK3))) | s('type.option.option'(sK0),'const.option.NONE_0') != s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,happ(s(fun('type.option.option'(sK0),sK0),X4),s('type.option.option'(sK0),X5))))) | s('type.option.option'(sK0),X5) = s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK4(X5,sK0))))) ) | ($spl10 | $spl18 | $spl32)),
  inference(superposition,[],[f15732,f8947])).
fof(f8947,plain,(
  ( ! [X17,X16] : (s(sK0,sK2) = s(sK0,happ(s(fun('type.option.option'(sK0),sK0),X17),s('type.option.option'(sK0),X16))) | s('type.option.option'(sK0),X16) = s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK4(X16,sK0))))) ) | ($spl10 | $spl18 | $spl32)),
  inference(trivial_inequality_removal,[],[f8923])).
fof(f8923,plain,(
  ( ! [X17,X16] : (s('type.option.option'('type.option.option'(sK0)),'const.option.NONE_0') != s('type.option.option'('type.option.option'(sK0)),'const.option.NONE_0') | s(sK0,sK2) = s(sK0,happ(s(fun('type.option.option'(sK0),sK0),X17),s('type.option.option'(sK0),X16))) | s('type.option.option'(sK0),X16) = s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK4(X16,sK0))))) ) | ($spl10 | $spl18 | $spl32)),
  inference(superposition,[],[f7684,f4917])).
fof(f16720,plain,(
  s('type.option.option'(fun(sK0,sK1)),sK3) = s('type.option.option'(fun(sK0,sK1)),'const.option.SOME_1'(s(fun(sK0,sK1),sK4(sK4('const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),sK3)),'type.option.option'(fun(sK0,sK1))),fun(sK0,sK1))))) | s('type.option.option'(sK1),'const.option.NONE_0') = s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))),s('type.option.option'(fun(sK0,sK1)),sK3))) | ($spl4 | $spl6 | $spl54)),
  inference(forward_demodulation,[],[f16569,f12620])).
fof(f16569,plain,(
  s('type.option.option'(sK1),'const.option.NONE_0') = s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))),s('type.option.option'(fun(sK0,sK1)),sK3))) | s('type.option.option'(fun(sK0,sK1)),sK4('const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),sK3)),'type.option.option'(fun(sK0,sK1)))) = s('type.option.option'(fun(sK0,sK1)),'const.option.SOME_1'(s(fun(sK0,sK1),sK4(sK4('const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),sK3)),'type.option.option'(fun(sK0,sK1))),fun(sK0,sK1))))) | ($spl4 | $spl6 | $spl54)),
  inference(superposition,[],[f320,f12620])).
fof(f16719,plain,(
  ( ! [X5] : (s('type.option.option'(sK1),'const.option.OPTION_MAP_2'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))),s('type.option.option'(fun(sK0,sK1)),X5))) = s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,sK4('const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))),s('type.option.option'(fun(sK0,sK1)),X5)),sK1)))) | s('type.option.option'(fun(sK0,sK1)),X5) = s('type.option.option'(fun(sK0,sK1)),'const.option.SOME_1'(s(fun(sK0,sK1),sK4(X5,fun(sK0,sK1)))))) ) | $spl270),
  inference(cnf_transformation,[],[f16719_D])).
fof(f16719_D,plain,(
  ( ! [X5] : (s('type.option.option'(sK1),'const.option.OPTION_MAP_2'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))),s('type.option.option'(fun(sK0,sK1)),X5))) = s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,sK4('const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))),s('type.option.option'(fun(sK0,sK1)),X5)),sK1)))) | s('type.option.option'(fun(sK0,sK1)),X5) = s('type.option.option'(fun(sK0,sK1)),'const.option.SOME_1'(s(fun(sK0,sK1),sK4(X5,fun(sK0,sK1)))))) ) <=> ~$spl270),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl270])])).
fof(f16718,plain,(
  ( ! [X5] : (s('type.option.option'(sK1),'const.option.OPTION_MAP_2'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))),s('type.option.option'(fun(sK0,sK1)),X5))) = s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,sK4('const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))),s('type.option.option'(fun(sK0,sK1)),X5)),sK1)))) | s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),'const.option.NONE_0'))) != s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),'const.option.OPTION_MAP_2'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))),s('type.option.option'(fun(sK0,sK1)),sK3))))) | s('type.option.option'(fun(sK0,sK1)),X5) = s('type.option.option'(fun(sK0,sK1)),'const.option.SOME_1'(s(fun(sK0,sK1),sK4(X5,fun(sK0,sK1)))))) ) | ($spl6 | $spl92)),
  inference(forward_demodulation,[],[f16612,f40])).
fof(f16612,plain,(
  ( ! [X5] : (s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),'const.option.NONE_0'))) != s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),'const.option.OPTION_MAP_2'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))),s('type.option.option'(fun(sK0,sK1)),sK3))))) | s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))),s('type.option.option'(fun(sK0,sK1)),X5))) = s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,sK4('const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))),s('type.option.option'(fun(sK0,sK1)),X5)),sK1)))) | s('type.option.option'(fun(sK0,sK1)),X5) = s('type.option.option'(fun(sK0,sK1)),'const.option.SOME_1'(s(fun(sK0,sK1),sK4(X5,fun(sK0,sK1)))))) ) | ($spl6 | $spl92)),
  inference(superposition,[],[f2360,f320])).
fof(f16717,plain,(
  $false | ($spl4 | $spl10 | $spl12 | $spl18)),
  inference(trivial_inequality_removal,[],[f16697])).
fof(f16697,plain,(
  s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),sK3))) != s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),sK3))) | ($spl4 | $spl10 | $spl12 | $spl18)),
  inference(superposition,[],[f14554,f76])).
fof(f14554,plain,(
  ( ! [X0] : (s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),sK3))) != s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),'const.option.SOME_1'(s(fun(sK0,sK1),X0)))))) ) | ($spl10 | $spl12 | $spl18)),
  inference(subsumption_resolution,[],[f14553,f4796])).
fof(f14553,plain,(
  ( ! [X0] : (s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,happ(s(fun(sK0,sK1),X0),s(sK0,sK2))))) | s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),sK3))) != s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),'const.option.SOME_1'(s(fun(sK0,sK1),X0)))))) ) | ($spl10 | $spl12 | $spl18)),
  inference(forward_demodulation,[],[f14514,f48])).
fof(f14514,plain,(
  ( ! [X0] : (s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,happ(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))),s(fun(sK0,sK1),X0))))) | s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),sK3))) != s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),'const.option.SOME_1'(s(fun(sK0,sK1),X0)))))) ) | ($spl10 | $spl12 | $spl18)),
  inference(superposition,[],[f5071,f49])).
fof(f5071,plain,(
  ( ! [X0] : (s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),'const.option.OPTION_MAP_2'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))),s('type.option.option'(fun(sK0,sK1)),X0))) | s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),sK3))) != s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),X0)))) ) | ($spl10 | $spl12 | $spl18)),
  inference(superposition,[],[f4896,f43])).
fof(f4896,plain,(
  s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),'const.option.OPTION_MAP_2'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))),s('type.option.option'(fun(sK0,sK1)),sK3))) | ($spl10 | $spl12 | $spl18)),
  inference(superposition,[],[f4807,f40])).
fof(f4807,plain,(
  s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))),s('type.option.option'(fun(sK0,sK1)),sK3))) | ($spl10 | $spl12 | $spl18)),
  inference(forward_demodulation,[],[f4806,f101])).
fof(f4806,plain,(
  s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(sK0,sK1)),sK3),s('type.option.option'(sK0),'const.option.NONE_0'))) != s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))),s('type.option.option'(fun(sK0,sK1)),sK3))) | ($spl10 | $spl18)),
  inference(forward_demodulation,[],[f39,f4735])).
fof(f16599,plain,(
  ( ! [X64,X65] : (s('type.option.option'(sK1),'const.option.NONE_0') = s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))),s('type.option.option'(fun(sK0,sK1)),happ(s(fun(sK0,'type.option.option'(fun(sK0,sK1))),X65),s(sK0,sK2))))) | s('type.option.option'(fun(sK0,sK1)),happ(s(fun(sK0,'type.option.option'(fun(sK0,sK1))),X64),s(sK0,sK2))) = s('type.option.option'(fun(sK0,sK1)),'const.option.SOME_1'(s(fun(sK0,sK1),sK4(happ(s(fun(sK0,'type.option.option'(fun(sK0,sK1))),X64),s(sK0,sK2)),fun(sK0,sK1)))))) ) | ($spl6 | $spl10 | $spl18)),
  inference(superposition,[],[f320,f5962])).
fof(f5962,plain,(
  ( ! [X17,X18,X16] : (s(X16,happ(s(fun(sK0,X16),X17),s(sK0,sK2))) = s(X16,happ(s(fun(sK0,X16),X18),s(sK0,sK2)))) ) | ($spl10 | $spl18)),
  inference(trivial_inequality_removal,[],[f5945])).
fof(f5945,plain,(
  ( ! [X17,X18,X16] : (s('type.option.option'(X16),'const.option.NONE_0') != s('type.option.option'(X16),'const.option.NONE_0') | s(X16,happ(s(fun(sK0,X16),X17),s(sK0,sK2))) = s(X16,happ(s(fun(sK0,X16),X18),s(sK0,sK2)))) ) | ($spl10 | $spl18)),
  inference(superposition,[],[f5096,f4796])).
fof(f16598,plain,(
  ( ! [X62,X63] : (s('type.option.option'(sK1),'const.option.NONE_0') = s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))),s('type.option.option'(fun(sK0,sK1)),happ(s(fun(sK0,'type.option.option'(fun(sK0,sK1))),X63),s(sK0,sK2))))) | s('type.option.option'(fun(sK0,sK1)),happ(s(fun(sK0,'type.option.option'(fun(sK0,sK1))),X62),s(sK0,sK2))) = s('type.option.option'(fun(sK0,sK1)),'const.option.SOME_1'(s(fun(sK0,sK1),sK4(happ(s(fun(sK0,'type.option.option'(fun(sK0,sK1))),X62),s(sK0,sK2)),fun(sK0,sK1)))))) ) | ($spl6 | $spl10 | $spl18)),
  inference(superposition,[],[f320,f5962])).
fof(f16597,plain,(
  ( ! [X61,X60] : (s('type.option.option'(sK1),'const.option.NONE_0') = s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))),s('type.option.option'(fun(sK0,sK1)),happ(s(fun('type.option.option'(sK0),'type.option.option'(fun(sK0,sK1))),X61),s('type.option.option'(sK0),'const.option.NONE_0'))))) | s('type.option.option'(fun(sK0,sK1)),happ(s(fun(sK0,'type.option.option'(fun(sK0,sK1))),X60),s(sK0,sK2))) = s('type.option.option'(fun(sK0,sK1)),'const.option.SOME_1'(s(fun(sK0,sK1),sK4(happ(s(fun(sK0,'type.option.option'(fun(sK0,sK1))),X60),s(sK0,sK2)),fun(sK0,sK1)))))) ) | ($spl6 | $spl10 | $spl18 | $spl32)),
  inference(superposition,[],[f320,f5961])).
fof(f5961,plain,(
  ( ! [X21,X19,X20] : (s(X19,happ(s(fun(sK0,X19),X21),s(sK0,sK2))) = s(X19,happ(s(fun('type.option.option'(sK0),X19),X20),s('type.option.option'(sK0),'const.option.NONE_0')))) ) | ($spl10 | $spl18 | $spl32)),
  inference(trivial_inequality_removal,[],[f5946])).
fof(f5946,plain,(
  ( ! [X21,X19,X20] : (s('type.option.option'(X19),'const.option.NONE_0') != s('type.option.option'(X19),'const.option.NONE_0') | s(X19,happ(s(fun(sK0,X19),X21),s(sK0,sK2))) = s(X19,happ(s(fun('type.option.option'(sK0),X19),X20),s('type.option.option'(sK0),'const.option.NONE_0')))) ) | ($spl10 | $spl18 | $spl32)),
  inference(superposition,[],[f5096,f4951])).
fof(f16596,plain,(
  ( ! [X59,X57,X58,X56] : (s('type.option.option'(sK1),'const.option.NONE_0') = s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))),s('type.option.option'(fun(sK0,sK1)),happ(s(fun(X57,'type.option.option'(fun(sK0,sK1))),X58),s(X57,happ(s(fun(sK0,X57),X59),s(sK0,sK2))))))) | s('type.option.option'(fun(sK0,sK1)),happ(s(fun(sK0,'type.option.option'(fun(sK0,sK1))),X56),s(sK0,sK2))) = s('type.option.option'(fun(sK0,sK1)),'const.option.SOME_1'(s(fun(sK0,sK1),sK4(happ(s(fun(sK0,'type.option.option'(fun(sK0,sK1))),X56),s(sK0,sK2)),fun(sK0,sK1)))))) ) | ($spl6 | $spl10 | $spl18)),
  inference(superposition,[],[f320,f7576])).
fof(f7576,plain,(
  ( ! [X39,X37,X35,X38,X36] : (s(X35,happ(s(fun(sK0,X35),X39),s(sK0,sK2))) = s(X35,happ(s(fun(X36,X35),X37),s(X36,happ(s(fun(sK0,X36),X38),s(sK0,sK2)))))) ) | ($spl10 | $spl18)),
  inference(trivial_inequality_removal,[],[f7524])).
fof(f7524,plain,(
  ( ! [X39,X37,X35,X38,X36] : (s('type.option.option'(X35),'const.option.NONE_0') != s('type.option.option'(X35),'const.option.NONE_0') | s(X35,happ(s(fun(sK0,X35),X39),s(sK0,sK2))) = s(X35,happ(s(fun(X36,X35),X37),s(X36,happ(s(fun(sK0,X36),X38),s(sK0,sK2)))))) ) | ($spl10 | $spl18)),
  inference(superposition,[],[f5096,f5140])).
fof(f16595,plain,(
  ( ! [X54,X55] : (s('type.option.option'(sK1),'const.option.NONE_0') = s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))),s('type.option.option'(fun(sK0,sK1)),happ(s(fun(sK0,'type.option.option'(fun(sK0,sK1))),X55),s(sK0,sK2))))) | s('type.option.option'(fun(sK0,sK1)),happ(s(fun('type.option.option'(sK0),'type.option.option'(fun(sK0,sK1))),X54),s('type.option.option'(sK0),'const.option.NONE_0'))) = s('type.option.option'(fun(sK0,sK1)),'const.option.SOME_1'(s(fun(sK0,sK1),sK4(happ(s(fun('type.option.option'(sK0),'type.option.option'(fun(sK0,sK1))),X54),s('type.option.option'(sK0),'const.option.NONE_0')),fun(sK0,sK1)))))) ) | ($spl6 | $spl10 | $spl18 | $spl32)),
  inference(superposition,[],[f320,f5961])).
fof(f16594,plain,(
  ( ! [X52,X53] : (s('type.option.option'(sK1),'const.option.NONE_0') = s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))),s('type.option.option'(fun(sK0,sK1)),happ(s(fun('type.option.option'(sK0),'type.option.option'(fun(sK0,sK1))),X53),s('type.option.option'(sK0),'const.option.NONE_0'))))) | s('type.option.option'(fun(sK0,sK1)),happ(s(fun('type.option.option'(sK0),'type.option.option'(fun(sK0,sK1))),X52),s('type.option.option'(sK0),'const.option.NONE_0'))) = s('type.option.option'(fun(sK0,sK1)),'const.option.SOME_1'(s(fun(sK0,sK1),sK4(happ(s(fun('type.option.option'(sK0),'type.option.option'(fun(sK0,sK1))),X52),s('type.option.option'(sK0),'const.option.NONE_0')),fun(sK0,sK1)))))) ) | ($spl6 | $spl10 | $spl18 | $spl32)),
  inference(superposition,[],[f320,f6358])).
fof(f6358,plain,(
  ( ! [X2,X0,X3] : (s(X0,happ(s(fun('type.option.option'(sK0),X0),X2),s('type.option.option'(sK0),'const.option.NONE_0'))) = s(X0,happ(s(fun('type.option.option'(sK0),X0),X3),s('type.option.option'(sK0),'const.option.NONE_0')))) ) | ($spl10 | $spl18 | $spl32)),
  inference(superposition,[],[f5961,f5961])).
fof(f16593,plain,(
  ( ! [X50,X51] : (s('type.option.option'(sK1),'const.option.NONE_0') = s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))),s('type.option.option'(fun(sK0,sK1)),happ(s(fun('type.option.option'(sK0),'type.option.option'(fun(sK0,sK1))),X51),s('type.option.option'(sK0),'const.option.NONE_0'))))) | s('type.option.option'(fun(sK0,sK1)),happ(s(fun('type.option.option'(sK0),'type.option.option'(fun(sK0,sK1))),X50),s('type.option.option'(sK0),'const.option.NONE_0'))) = s('type.option.option'(fun(sK0,sK1)),'const.option.SOME_1'(s(fun(sK0,sK1),sK4(happ(s(fun('type.option.option'(sK0),'type.option.option'(fun(sK0,sK1))),X50),s('type.option.option'(sK0),'const.option.NONE_0')),fun(sK0,sK1)))))) ) | ($spl6 | $spl10 | $spl18 | $spl32)),
  inference(superposition,[],[f320,f6358])).
fof(f16591,plain,(
  ( ! [X45,X43,X46,X44] : (s('type.option.option'(sK1),'const.option.NONE_0') = s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))),s('type.option.option'(fun(sK0,sK1)),happ(s(fun(sK0,'type.option.option'(fun(sK0,sK1))),X46),s(sK0,sK2))))) | s('type.option.option'(fun(sK0,sK1)),happ(s(fun(X43,'type.option.option'(fun(sK0,sK1))),X44),s(X43,happ(s(fun(sK0,X43),X45),s(sK0,sK2))))) = s('type.option.option'(fun(sK0,sK1)),'const.option.SOME_1'(s(fun(sK0,sK1),sK4(happ(s(fun(X43,'type.option.option'(fun(sK0,sK1))),X44),s(X43,happ(s(fun(sK0,X43),X45),s(sK0,sK2)))),fun(sK0,sK1)))))) ) | ($spl6 | $spl10 | $spl18)),
  inference(superposition,[],[f320,f7576])).
fof(f15124,plain,(
  ( ! [X51] : (s('type.option.option'(sK0),X51) != s('type.option.option'(sK0),sK4('const.option.SOME_1'(s('type.option.option'(sK0),'const.option.NONE_0')),'type.option.option'(sK0))) | s('type.option.option'('type.option.option'(sK0)),'const.option.NONE_0') = s('type.option.option'('type.option.option'(sK0)),'const.option.SOME_1'(s('type.option.option'(sK0),X51)))) ) | $spl256),
  inference(cnf_transformation,[],[f15124_D])).
fof(f15124_D,plain,(
  ( ! [X51] : (s('type.option.option'(sK0),X51) != s('type.option.option'(sK0),sK4('const.option.SOME_1'(s('type.option.option'(sK0),'const.option.NONE_0')),'type.option.option'(sK0))) | s('type.option.option'('type.option.option'(sK0)),'const.option.NONE_0') = s('type.option.option'('type.option.option'(sK0)),'const.option.SOME_1'(s('type.option.option'(sK0),X51)))) ) <=> ~$spl256),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl256])])).
fof(f15123,plain,(
  ( ! [X50,X51] : (s('type.option.option'(sK0),X51) != s('type.option.option'(sK0),sK4('const.option.SOME_1'(s('type.option.option'(sK0),'const.option.NONE_0')),'type.option.option'(sK0))) | s('type.option.option'('type.option.option'(sK0)),'const.option.NONE_0') = s('type.option.option'('type.option.option'(sK0)),'const.option.SOME_1'(s('type.option.option'(sK0),X51))) | s('type.option.option'(sK0),X50) = s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK4(X50,sK0))))) ) | ($spl32 | $spl36 | $spl82)),
  inference(subsumption_resolution,[],[f14895,f4917])).
fof(f14895,plain,(
  ( ! [X50,X51] : (s('type.option.option'('type.option.option'(sK0)),'const.option.NONE_0') != s('type.option.option'('type.option.option'(sK0)),'const.option.SOME_1'(s('type.option.option'(sK0),X50))) | s('type.option.option'(sK0),X51) != s('type.option.option'(sK0),sK4('const.option.SOME_1'(s('type.option.option'(sK0),'const.option.NONE_0')),'type.option.option'(sK0))) | s('type.option.option'('type.option.option'(sK0)),'const.option.NONE_0') = s('type.option.option'('type.option.option'(sK0)),'const.option.SOME_1'(s('type.option.option'(sK0),X51))) | s('type.option.option'(sK0),X50) = s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK4(X50,sK0))))) ) | ($spl32 | $spl36 | $spl82)),
  inference(superposition,[],[f3896,f14615])).
fof(f13615,plain,(
  ( ! [X66,X67] : (s('type.option.option'(sK1),happ(s(fun(sK0,'type.option.option'(sK1)),X67),s(sK0,sK2))) = s('type.option.option'(sK1),sK4('const.option.SOME_1'(s('type.option.option'(sK1),happ(s(fun(sK0,'type.option.option'(sK1)),X67),s(sK0,sK2)))),'type.option.option'(sK1))) | s('type.option.option'(sK1),happ(s(fun(sK0,'type.option.option'(sK1)),X66),s(sK0,sK2))) = s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,sK4(happ(s(fun(sK0,'type.option.option'(sK1)),X66),s(sK0,sK2)),sK1))))) ) | ($spl6 | $spl10 | $spl18 | $spl115)),
  inference(superposition,[],[f13528,f5962])).
fof(f13614,plain,(
  ( ! [X64,X65] : (s('type.option.option'(sK1),happ(s(fun(sK0,'type.option.option'(sK1)),X65),s(sK0,sK2))) = s('type.option.option'(sK1),sK4('const.option.SOME_1'(s('type.option.option'(sK1),happ(s(fun(sK0,'type.option.option'(sK1)),X65),s(sK0,sK2)))),'type.option.option'(sK1))) | s('type.option.option'(sK1),happ(s(fun(sK0,'type.option.option'(sK1)),X64),s(sK0,sK2))) = s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,sK4(happ(s(fun(sK0,'type.option.option'(sK1)),X64),s(sK0,sK2)),sK1))))) ) | ($spl6 | $spl10 | $spl18 | $spl115)),
  inference(superposition,[],[f13528,f5962])).
fof(f13613,plain,(
  ( ! [X62,X63] : (s('type.option.option'(sK1),happ(s(fun('type.option.option'(sK0),'type.option.option'(sK1)),X63),s('type.option.option'(sK0),'const.option.NONE_0'))) = s('type.option.option'(sK1),sK4('const.option.SOME_1'(s('type.option.option'(sK1),happ(s(fun('type.option.option'(sK0),'type.option.option'(sK1)),X63),s('type.option.option'(sK0),'const.option.NONE_0')))),'type.option.option'(sK1))) | s('type.option.option'(sK1),happ(s(fun(sK0,'type.option.option'(sK1)),X62),s(sK0,sK2))) = s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,sK4(happ(s(fun(sK0,'type.option.option'(sK1)),X62),s(sK0,sK2)),sK1))))) ) | ($spl6 | $spl10 | $spl18 | $spl32 | $spl115)),
  inference(superposition,[],[f13528,f5961])).
fof(f13612,plain,(
  ( ! [X61,X59,X60,X58] : (s('type.option.option'(sK1),happ(s(fun(X59,'type.option.option'(sK1)),X60),s(X59,happ(s(fun(sK0,X59),X61),s(sK0,sK2))))) = s('type.option.option'(sK1),sK4('const.option.SOME_1'(s('type.option.option'(sK1),happ(s(fun(X59,'type.option.option'(sK1)),X60),s(X59,happ(s(fun(sK0,X59),X61),s(sK0,sK2)))))),'type.option.option'(sK1))) | s('type.option.option'(sK1),happ(s(fun(sK0,'type.option.option'(sK1)),X58),s(sK0,sK2))) = s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,sK4(happ(s(fun(sK0,'type.option.option'(sK1)),X58),s(sK0,sK2)),sK1))))) ) | ($spl6 | $spl10 | $spl18 | $spl115)),
  inference(superposition,[],[f13528,f7576])).
fof(f13611,plain,(
  ( ! [X57,X56] : (s('type.option.option'(sK1),happ(s(fun(sK0,'type.option.option'(sK1)),X57),s(sK0,sK2))) = s('type.option.option'(sK1),sK4('const.option.SOME_1'(s('type.option.option'(sK1),happ(s(fun(sK0,'type.option.option'(sK1)),X57),s(sK0,sK2)))),'type.option.option'(sK1))) | s('type.option.option'(sK1),happ(s(fun('type.option.option'(sK0),'type.option.option'(sK1)),X56),s('type.option.option'(sK0),'const.option.NONE_0'))) = s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,sK4(happ(s(fun('type.option.option'(sK0),'type.option.option'(sK1)),X56),s('type.option.option'(sK0),'const.option.NONE_0')),sK1))))) ) | ($spl6 | $spl10 | $spl18 | $spl32 | $spl115)),
  inference(superposition,[],[f13528,f5961])).
fof(f13610,plain,(
  ( ! [X54,X55] : (s('type.option.option'(sK1),happ(s(fun('type.option.option'(sK0),'type.option.option'(sK1)),X55),s('type.option.option'(sK0),'const.option.NONE_0'))) = s('type.option.option'(sK1),sK4('const.option.SOME_1'(s('type.option.option'(sK1),happ(s(fun('type.option.option'(sK0),'type.option.option'(sK1)),X55),s('type.option.option'(sK0),'const.option.NONE_0')))),'type.option.option'(sK1))) | s('type.option.option'(sK1),happ(s(fun('type.option.option'(sK0),'type.option.option'(sK1)),X54),s('type.option.option'(sK0),'const.option.NONE_0'))) = s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,sK4(happ(s(fun('type.option.option'(sK0),'type.option.option'(sK1)),X54),s('type.option.option'(sK0),'const.option.NONE_0')),sK1))))) ) | ($spl6 | $spl10 | $spl18 | $spl32 | $spl115)),
  inference(superposition,[],[f13528,f6358])).
fof(f13609,plain,(
  ( ! [X52,X53] : (s('type.option.option'(sK1),happ(s(fun('type.option.option'(sK0),'type.option.option'(sK1)),X53),s('type.option.option'(sK0),'const.option.NONE_0'))) = s('type.option.option'(sK1),sK4('const.option.SOME_1'(s('type.option.option'(sK1),happ(s(fun('type.option.option'(sK0),'type.option.option'(sK1)),X53),s('type.option.option'(sK0),'const.option.NONE_0')))),'type.option.option'(sK1))) | s('type.option.option'(sK1),happ(s(fun('type.option.option'(sK0),'type.option.option'(sK1)),X52),s('type.option.option'(sK0),'const.option.NONE_0'))) = s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,sK4(happ(s(fun('type.option.option'(sK0),'type.option.option'(sK1)),X52),s('type.option.option'(sK0),'const.option.NONE_0')),sK1))))) ) | ($spl6 | $spl10 | $spl18 | $spl32 | $spl115)),
  inference(superposition,[],[f13528,f6358])).
fof(f13607,plain,(
  ( ! [X47,X45,X48,X46] : (s('type.option.option'(sK1),happ(s(fun(sK0,'type.option.option'(sK1)),X48),s(sK0,sK2))) = s('type.option.option'(sK1),sK4('const.option.SOME_1'(s('type.option.option'(sK1),happ(s(fun(sK0,'type.option.option'(sK1)),X48),s(sK0,sK2)))),'type.option.option'(sK1))) | s('type.option.option'(sK1),happ(s(fun(X45,'type.option.option'(sK1)),X46),s(X45,happ(s(fun(sK0,X45),X47),s(sK0,sK2))))) = s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,sK4(happ(s(fun(X45,'type.option.option'(sK1)),X46),s(X45,happ(s(fun(sK0,X45),X47),s(sK0,sK2)))),sK1))))) ) | ($spl6 | $spl10 | $spl18 | $spl115)),
  inference(superposition,[],[f13528,f7576])).
fof(f13657,plain,(
  s('type.option.option'(sK1),'const.option.OPTION_MAP_2'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))),s('type.option.option'(fun(sK0,sK1)),sK3))) = s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,sK4('const.option.SOME_1'(s(sK1,sK4('const.option.OPTION_MAP_2'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))),s('type.option.option'(fun(sK0,sK1)),sK3)),sK1))),sK1)))) | s('type.option.option'(sK1),'const.option.OPTION_MAP_2'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))),s('type.option.option'(fun(sK0,sK1)),sK3))) = s('type.option.option'(sK1),sK4('const.option.SOME_1'(s('type.option.option'(sK1),'const.option.OPTION_MAP_2'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))),s('type.option.option'(fun(sK0,sK1)),sK3)))),'type.option.option'(sK1))) | ($spl6 | $spl94 | $spl115)),
  inference(forward_demodulation,[],[f13581,f2364])).
fof(f13581,plain,(
  s('type.option.option'(sK1),'const.option.OPTION_MAP_2'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))),s('type.option.option'(fun(sK0,sK1)),sK3))) = s('type.option.option'(sK1),sK4('const.option.SOME_1'(s('type.option.option'(sK1),'const.option.OPTION_MAP_2'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))),s('type.option.option'(fun(sK0,sK1)),sK3)))),'type.option.option'(sK1))) | s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,sK4('const.option.OPTION_MAP_2'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))),s('type.option.option'(fun(sK0,sK1)),sK3)),sK1)))) = s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,sK4('const.option.SOME_1'(s(sK1,sK4('const.option.OPTION_MAP_2'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))),s('type.option.option'(fun(sK0,sK1)),sK3)),sK1))),sK1)))) | ($spl6 | $spl94 | $spl115)),
  inference(superposition,[],[f13528,f2364])).
fof(f13654,plain,(
  s('type.option.option'(sK1),'const.option.OPTION_MAP_2'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))),s('type.option.option'(fun(sK0,sK1)),sK3))) = s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,sK4('const.option.SOME_1'(s(sK1,sK4('const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))),s('type.option.option'(fun(sK0,sK1)),sK3)),sK1))),sK1)))) | s('type.option.option'(sK1),'const.option.OPTION_MAP_2'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))),s('type.option.option'(fun(sK0,sK1)),sK3))) = s('type.option.option'(sK1),sK4('const.option.SOME_1'(s('type.option.option'(sK1),'const.option.OPTION_MAP_2'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))),s('type.option.option'(fun(sK0,sK1)),sK3)))),'type.option.option'(sK1))) | ($spl6 | $spl8 | $spl115)),
  inference(forward_demodulation,[],[f13579,f81])).
fof(f13579,plain,(
  s('type.option.option'(sK1),'const.option.OPTION_MAP_2'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))),s('type.option.option'(fun(sK0,sK1)),sK3))) = s('type.option.option'(sK1),sK4('const.option.SOME_1'(s('type.option.option'(sK1),'const.option.OPTION_MAP_2'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))),s('type.option.option'(fun(sK0,sK1)),sK3)))),'type.option.option'(sK1))) | s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,sK4('const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))),s('type.option.option'(fun(sK0,sK1)),sK3)),sK1)))) = s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,sK4('const.option.SOME_1'(s(sK1,sK4('const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))),s('type.option.option'(fun(sK0,sK1)),sK3)),sK1))),sK1)))) | ($spl6 | $spl8 | $spl115)),
  inference(superposition,[],[f13528,f81])).
fof(f13019,plain,(
  ( ! [X0] : (s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),sK3))) = s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),X0))) | s('type.option.option'(fun(sK0,sK1)),X0) = s('type.option.option'(fun(sK0,sK1)),'const.option.SOME_1'(s(fun(sK0,sK1),sK4(X0,fun(sK0,sK1)))))) ) | $spl240),
  inference(cnf_transformation,[],[f13019_D])).
fof(f13019_D,plain,(
  ( ! [X0] : (s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),sK3))) = s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),X0))) | s('type.option.option'(fun(sK0,sK1)),X0) = s('type.option.option'(fun(sK0,sK1)),'const.option.SOME_1'(s(fun(sK0,sK1),sK4(X0,fun(sK0,sK1)))))) ) <=> ~$spl240),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl240])])).
fof(f2371,plain,(
  s('type.option.option'(fun(sK0,sK1)),'const.option.NONE_0') != s('type.option.option'(fun(sK0,sK1)),'const.option.SOME_1'(s(fun(sK0,sK1),sK4(sK3,fun(sK0,sK1))))) | $spl97),
  inference(cnf_transformation,[],[f2371_D])).
fof(f2371_D,plain,(
  s('type.option.option'(fun(sK0,sK1)),'const.option.NONE_0') != s('type.option.option'(fun(sK0,sK1)),'const.option.SOME_1'(s(fun(sK0,sK1),sK4(sK3,fun(sK0,sK1))))) <=> ~$spl97),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl97])])).
fof(f12979,plain,(
  ( ! [X0] : (s('type.option.option'(fun(sK0,sK1)),'const.option.NONE_0') != s('type.option.option'(fun(sK0,sK1)),'const.option.SOME_1'(s(fun(sK0,sK1),sK4(sK3,fun(sK0,sK1))))) | s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),sK3))) = s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),X0))) | s('type.option.option'(fun(sK0,sK1)),X0) = s('type.option.option'(fun(sK0,sK1)),'const.option.SOME_1'(s(fun(sK0,sK1),sK4(X0,fun(sK0,sK1)))))) ) | $spl4),
  inference(superposition,[],[f2541,f47])).
fof(f12951,plain,(
  ( ! [X161] : (s('type.option.option'('type.option.option'(sK1)),'const.option.NONE_0') != s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(sK0,sK1)),sK3),s('type.option.option'(sK0),X161))))) | s('type.option.option'(sK0),X161) = s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK4(X161,sK0))))) ) | $spl236),
  inference(cnf_transformation,[],[f12951_D])).
fof(f12951_D,plain,(
  ( ! [X161] : (s('type.option.option'('type.option.option'(sK1)),'const.option.NONE_0') != s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(sK0,sK1)),sK3),s('type.option.option'(sK0),X161))))) | s('type.option.option'(sK0),X161) = s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK4(X161,sK0))))) ) <=> ~$spl236),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl236])])).
fof(f12952,plain,(
  ( ! [X162] : (s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),happ(s(fun('type.option.option'(sK1),'type.option.option'(sK1)),X162),s('type.option.option'(sK1),'const.option.NONE_0')))) ) | $spl238),
  inference(cnf_transformation,[],[f12952_D])).
fof(f12952_D,plain,(
  ( ! [X162] : (s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),happ(s(fun('type.option.option'(sK1),'type.option.option'(sK1)),X162),s('type.option.option'(sK1),'const.option.NONE_0')))) ) <=> ~$spl238),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl238])])).
fof(f12892,plain,(
  ( ! [X161,X162] : (s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),happ(s(fun('type.option.option'(sK1),'type.option.option'(sK1)),X162),s('type.option.option'(sK1),'const.option.NONE_0'))) | s('type.option.option'('type.option.option'(sK1)),'const.option.NONE_0') != s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(sK0,sK1)),sK3),s('type.option.option'(sK0),X161))))) | s('type.option.option'(sK0),X161) = s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK4(X161,sK0))))) ) | ($spl10 | $spl12 | $spl18 | $spl115)),
  inference(superposition,[],[f12257,f2496])).
fof(f2496,plain,(
  ( ! [X0] : (s('type.option.option'(sK1),'const.option.NONE_0') = s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(sK0,sK1)),sK3),s('type.option.option'(sK0),X0))) | s('type.option.option'(sK0),X0) = s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK4(X0,sK0))))) ) | $spl12),
  inference(superposition,[],[f101,f47])).
fof(f12257,plain,(
  ( ! [X21,X20,X18] : (s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),happ(s(fun(X18,'type.option.option'(sK1)),X21),s(X18,X20))) | s('type.option.option'(X18),'const.option.NONE_0') != s('type.option.option'(X18),'const.option.SOME_1'(s(X18,X20)))) ) | ($spl10 | $spl18 | $spl115)),
  inference(forward_demodulation,[],[f12240,f4796])).
fof(f12240,plain,(
  ( ! [X21,X19,X20,X18] : (s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),happ(s(fun(X18,'type.option.option'(sK1)),X21),s(X18,X20))) | s('type.option.option'(X18),'const.option.SOME_1'(s(X18,X20))) != s('type.option.option'(X18),'const.option.SOME_1'(s(X18,happ(s(fun(sK0,X18),X19),s(sK0,sK2)))))) ) | ($spl10 | $spl18 | $spl115)),
  inference(superposition,[],[f12102,f43])).
fof(f12102,plain,(
  ( ! [X633,X632,X634] : (s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),happ(s(fun(X632,'type.option.option'(sK1)),X633),s(X632,happ(s(fun(sK0,X632),X634),s(sK0,sK2)))))) ) | ($spl10 | $spl18 | $spl115)),
  inference(subsumption_resolution,[],[f11869,f4796])).
fof(f11869,plain,(
  ( ! [X633,X631,X632,X634] : (s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),happ(s(fun(X632,'type.option.option'(sK1)),X633),s(X632,happ(s(fun(sK0,X632),X634),s(sK0,sK2))))) | s('type.option.option'('type.option.option'(sK1)),'const.option.NONE_0') != s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),happ(s(fun(sK0,'type.option.option'(sK1)),X631),s(sK0,sK2)))))) ) | ($spl10 | $spl18 | $spl115)),
  inference(superposition,[],[f3703,f7576])).
fof(f3703,plain,(
  ( ! [X0] : (s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),X0) | s('type.option.option'('type.option.option'(sK1)),'const.option.NONE_0') != s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),X0)))) ) | $spl115),
  inference(superposition,[],[f3698,f44])).
fof(f12876,plain,(
  ( ! [X130,X129] : (s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),happ(s(fun('type.option.option'('type.option.option'(sK0)),'type.option.option'(sK1)),X130),s('type.option.option'('type.option.option'(sK0)),'const.option.NONE_0'))) | s('type.option.option'('type.option.option'('type.option.option'(sK0))),'const.option.NONE_0') != s('type.option.option'('type.option.option'('type.option.option'(sK0))),'const.option.SOME_1'(s('type.option.option'('type.option.option'(sK0)),'const.option.SOME_1'(s('type.option.option'(sK0),X129))))) | s('type.option.option'(sK0),X129) = s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK4(X129,sK0))))) ) | ($spl10 | $spl18 | $spl32 | $spl115)),
  inference(superposition,[],[f12257,f4917])).
fof(f12164,plain,(
  ( ! [X489] : (s('type.option.option'('type.option.option'(fun(fun(sK0,sK1),sK1))),'const.option.NONE_0') != s('type.option.option'('type.option.option'(fun(fun(sK0,sK1),sK1))),'const.option.SOME_1'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))))) | s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),happ(s(fun(sK0,'type.option.option'(fun(fun(sK0,sK1),sK1))),X489),s(sK0,sK2))),s('type.option.option'(fun(sK0,sK1)),sK3)))) ) | ($spl10 | $spl12 | $spl18)),
  inference(forward_demodulation,[],[f12002,f5140])).
fof(f12002,plain,(
  ( ! [X486,X488,X487,X489] : (s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),happ(s(fun(sK0,'type.option.option'(fun(fun(sK0,sK1),sK1))),X489),s(sK0,sK2))),s('type.option.option'(fun(sK0,sK1)),sK3))) | s('type.option.option'('type.option.option'(fun(fun(sK0,sK1),sK1))),'const.option.SOME_1'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))))) != s('type.option.option'('type.option.option'(fun(fun(sK0,sK1),sK1))),'const.option.SOME_1'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),happ(s(fun(X486,'type.option.option'(fun(fun(sK0,sK1),sK1))),X487),s(X486,happ(s(fun(sK0,X486),X488),s(sK0,sK2)))))))) ) | ($spl10 | $spl12 | $spl18)),
  inference(superposition,[],[f4791,f7576])).
fof(f4791,plain,(
  ( ! [X2] : (s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),X2),s('type.option.option'(fun(sK0,sK1)),sK3))) | s('type.option.option'('type.option.option'(fun(fun(sK0,sK1),sK1))),'const.option.SOME_1'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),X2))) != s('type.option.option'('type.option.option'(fun(fun(sK0,sK1),sK1))),'const.option.SOME_1'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2)))))))) ) | ($spl10 | $spl12 | $spl18)),
  inference(forward_demodulation,[],[f4751,f101])).
fof(f4751,plain,(
  ( ! [X2] : (s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(sK0,sK1)),sK3),s('type.option.option'(sK0),'const.option.NONE_0'))) != s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),X2),s('type.option.option'(fun(sK0,sK1)),sK3))) | s('type.option.option'('type.option.option'(fun(fun(sK0,sK1),sK1))),'const.option.SOME_1'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),X2))) != s('type.option.option'('type.option.option'(fun(fun(sK0,sK1),sK1))),'const.option.SOME_1'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2)))))))) ) | ($spl10 | $spl18)),
  inference(backward_demodulation,[],[f4735,f60])).
fof(f60,plain,(
  ( ! [X2] : (s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(sK0,sK1)),sK3),s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))))) != s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),X2),s('type.option.option'(fun(sK0,sK1)),sK3))) | s('type.option.option'('type.option.option'(fun(fun(sK0,sK1),sK1))),'const.option.SOME_1'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),X2))) != s('type.option.option'('type.option.option'(fun(fun(sK0,sK1),sK1))),'const.option.SOME_1'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2)))))))) )),
  inference(superposition,[],[f39,f43])).
fof(f12092,plain,(
  ( ! [X573,X572,X574] : (s('type.option.option'('type.option.option'(fun(fun(sK0,sK1),sK1))),'const.option.NONE_0') != s('type.option.option'('type.option.option'(fun(fun(sK0,sK1),sK1))),'const.option.SOME_1'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))))) | s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),happ(s(fun(X572,'type.option.option'(fun(fun(sK0,sK1),sK1))),X573),s(X572,happ(s(fun(sK0,X572),X574),s(sK0,sK2))))),s('type.option.option'(fun(sK0,sK1)),sK3)))) ) | ($spl10 | $spl12 | $spl18)),
  inference(forward_demodulation,[],[f11854,f4796])).
fof(f11854,plain,(
  ( ! [X573,X571,X572,X574] : (s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),happ(s(fun(X572,'type.option.option'(fun(fun(sK0,sK1),sK1))),X573),s(X572,happ(s(fun(sK0,X572),X574),s(sK0,sK2))))),s('type.option.option'(fun(sK0,sK1)),sK3))) | s('type.option.option'('type.option.option'(fun(fun(sK0,sK1),sK1))),'const.option.SOME_1'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))))) != s('type.option.option'('type.option.option'(fun(fun(sK0,sK1),sK1))),'const.option.SOME_1'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),happ(s(fun(sK0,'type.option.option'(fun(fun(sK0,sK1),sK1))),X571),s(sK0,sK2)))))) ) | ($spl10 | $spl12 | $spl18)),
  inference(superposition,[],[f4791,f7576])).
fof(f5709,plain,(
  s('type.option.option'('type.option.option'(sK1)),'const.option.NONE_0') != s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),'const.option.OPTION_MAP_2'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))),s('type.option.option'(fun(sK0,sK1)),sK3))))) | $spl203),
  inference(cnf_transformation,[],[f5709_D])).
fof(f5709_D,plain,(
  s('type.option.option'('type.option.option'(sK1)),'const.option.NONE_0') != s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),'const.option.OPTION_MAP_2'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))),s('type.option.option'(fun(sK0,sK1)),sK3))))) <=> ~$spl203),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl203])])).
fof(f10421,plain,(
  s('type.option.option'(sK1),'const.option.OPTION_MAP_2'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))),s('type.option.option'(fun(sK0,sK1)),sK3))) = s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,sK4('const.option.SOME_1'(s(sK1,sK4('const.option.OPTION_MAP_2'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))),s('type.option.option'(fun(sK0,sK1)),sK3)),sK1))),sK1)))) | s('type.option.option'('type.option.option'(sK1)),'const.option.NONE_0') != s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),'const.option.OPTION_MAP_2'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))),s('type.option.option'(fun(sK0,sK1)),sK3))))) | ($spl94 | $spl115)),
  inference(forward_demodulation,[],[f10389,f2364])).
fof(f10389,plain,(
  s('type.option.option'('type.option.option'(sK1)),'const.option.NONE_0') != s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),'const.option.OPTION_MAP_2'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))),s('type.option.option'(fun(sK0,sK1)),sK3))))) | s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,sK4('const.option.OPTION_MAP_2'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))),s('type.option.option'(fun(sK0,sK1)),sK3)),sK1)))) = s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,sK4('const.option.SOME_1'(s(sK1,sK4('const.option.OPTION_MAP_2'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))),s('type.option.option'(fun(sK0,sK1)),sK3)),sK1))),sK1)))) | ($spl94 | $spl115)),
  inference(superposition,[],[f3699,f2364])).
fof(f3699,plain,(
  ( ! [X0] : (s('type.option.option'('type.option.option'(sK1)),'const.option.NONE_0') != s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),X0))) | s('type.option.option'(sK1),X0) = s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,sK4(X0,sK1))))) ) | $spl115),
  inference(superposition,[],[f3698,f47])).
fof(f10024,plain,(
  s('type.option.option'('type.option.option'(fun(fun(sK0,sK1),sK1))),'const.option.SOME_1'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))))) = s('type.option.option'('type.option.option'(fun(fun(sK0,sK1),sK1))),'const.option.SOME_1'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),sK4('const.option.SOME_1'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2)))))),'type.option.option'(fun(fun(sK0,sK1),sK1)))))) | $spl226),
  inference(cnf_transformation,[],[f10024_D])).
fof(f10024_D,plain,(
  s('type.option.option'('type.option.option'(fun(fun(sK0,sK1),sK1))),'const.option.SOME_1'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))))) = s('type.option.option'('type.option.option'(fun(fun(sK0,sK1),sK1))),'const.option.SOME_1'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),sK4('const.option.SOME_1'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2)))))),'type.option.option'(fun(fun(sK0,sK1),sK1)))))) <=> ~$spl226),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl226])])).
fof(f10026,plain,(
  s('type.option.option'('type.option.option'(fun(fun(sK0,sK1),sK1))),'const.option.NONE_0') != s('type.option.option'('type.option.option'(fun(fun(sK0,sK1),sK1))),'const.option.SOME_1'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.NONE_0'))) | $spl229),
  inference(cnf_transformation,[],[f10026_D])).
fof(f10026_D,plain,(
  s('type.option.option'('type.option.option'(fun(fun(sK0,sK1),sK1))),'const.option.NONE_0') != s('type.option.option'('type.option.option'(fun(fun(sK0,sK1),sK1))),'const.option.SOME_1'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.NONE_0'))) <=> ~$spl229),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl229])])).
fof(f10017,plain,(
  s('type.option.option'('type.option.option'(fun(fun(sK0,sK1),sK1))),'const.option.NONE_0') != s('type.option.option'('type.option.option'(fun(fun(sK0,sK1),sK1))),'const.option.SOME_1'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.NONE_0'))) | s('type.option.option'('type.option.option'(fun(fun(sK0,sK1),sK1))),'const.option.SOME_1'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))))) = s('type.option.option'('type.option.option'(fun(fun(sK0,sK1),sK1))),'const.option.SOME_1'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),sK4('const.option.SOME_1'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2)))))),'type.option.option'(fun(fun(sK0,sK1),sK1)))))) | $spl109),
  inference(superposition,[],[f3369,f47])).
fof(f9477,plain,(
  ( ! [X27] : (s('type.option.option'('type.option.option'(fun(sK0,sK1))),X27) != s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),sK4('const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),sK3)),'type.option.option'(fun(sK0,sK1)))))) | s('type.option.option'('type.option.option'('type.option.option'(fun(sK0,sK1)))),'const.option.NONE_0') = s('type.option.option'('type.option.option'('type.option.option'(fun(sK0,sK1)))),'const.option.SOME_1'(s('type.option.option'('type.option.option'(fun(sK0,sK1))),X27)))) ) | $spl222),
  inference(cnf_transformation,[],[f9477_D])).
fof(f9477_D,plain,(
  ( ! [X27] : (s('type.option.option'('type.option.option'(fun(sK0,sK1))),X27) != s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),sK4('const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),sK3)),'type.option.option'(fun(sK0,sK1)))))) | s('type.option.option'('type.option.option'('type.option.option'(fun(sK0,sK1)))),'const.option.NONE_0') = s('type.option.option'('type.option.option'('type.option.option'(fun(sK0,sK1)))),'const.option.SOME_1'(s('type.option.option'('type.option.option'(fun(sK0,sK1))),X27)))) ) <=> ~$spl222),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl222])])).
fof(f9479,plain,(
  s('type.option.option'('type.option.option'('type.option.option'(fun(sK0,sK1)))),'const.option.NONE_0') != s('type.option.option'('type.option.option'('type.option.option'(fun(sK0,sK1)))),'const.option.SOME_1'(s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),sK3))))) | $spl225),
  inference(cnf_transformation,[],[f9479_D])).
fof(f9479_D,plain,(
  s('type.option.option'('type.option.option'('type.option.option'(fun(sK0,sK1)))),'const.option.NONE_0') != s('type.option.option'('type.option.option'('type.option.option'(fun(sK0,sK1)))),'const.option.SOME_1'(s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),sK3))))) <=> ~$spl225),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl225])])).
fof(f9456,plain,(
  ( ! [X27] : (s('type.option.option'('type.option.option'('type.option.option'(fun(sK0,sK1)))),'const.option.NONE_0') != s('type.option.option'('type.option.option'('type.option.option'(fun(sK0,sK1)))),'const.option.SOME_1'(s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),sK3))))) | s('type.option.option'('type.option.option'(fun(sK0,sK1))),X27) != s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),sK4('const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),sK3)),'type.option.option'(fun(sK0,sK1)))))) | s('type.option.option'('type.option.option'('type.option.option'(fun(sK0,sK1)))),'const.option.NONE_0') = s('type.option.option'('type.option.option'('type.option.option'(fun(sK0,sK1)))),'const.option.SOME_1'(s('type.option.option'('type.option.option'(fun(sK0,sK1))),X27)))) ) | ($spl54 | $spl82)),
  inference(superposition,[],[f3896,f1689])).
fof(f9149,plain,(
  ( ! [X124] : (s('type.option.option'(sK1),happ(s(fun('type.option.option'(sK0),'type.option.option'(sK1)),X124),s('type.option.option'(sK0),'const.option.NONE_0'))) = s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,sK4('const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))),s('type.option.option'(fun(sK0,sK1)),sK3)),sK1))))) ) | $spl220),
  inference(cnf_transformation,[],[f9149_D])).
fof(f9149_D,plain,(
  ( ! [X124] : (s('type.option.option'(sK1),happ(s(fun('type.option.option'(sK0),'type.option.option'(sK1)),X124),s('type.option.option'(sK0),'const.option.NONE_0'))) = s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,sK4('const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))),s('type.option.option'(fun(sK0,sK1)),sK3)),sK1))))) ) <=> ~$spl220),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl220])])).
fof(f9095,plain,(
  ( ! [X124] : (s('type.option.option'('type.option.option'(sK1)),'const.option.NONE_0') != s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),'const.option.OPTION_MAP_2'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))),s('type.option.option'(fun(sK0,sK1)),sK3))))) | s('type.option.option'(sK1),happ(s(fun('type.option.option'(sK0),'type.option.option'(sK1)),X124),s('type.option.option'(sK0),'const.option.NONE_0'))) = s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,sK4('const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))),s('type.option.option'(fun(sK0,sK1)),sK3)),sK1))))) ) | ($spl8 | $spl32)),
  inference(superposition,[],[f5290,f81])).
fof(f8023,plain,(
  ( ! [X4] : (s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.NONE_0') != s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),X4))) | s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(sK0,sK1)),X4),s('type.option.option'(sK0),'const.option.NONE_0'))) != s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))),s('type.option.option'(fun(sK0,sK1)),X4))) | s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),sK3))) = s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),sK4('const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),sK3)),'type.option.option'(fun(sK0,sK1))))))) ) | ($spl10 | $spl18)),
  inference(superposition,[],[f4752,f47])).
fof(f4752,plain,(
  ( ! [X0] : (s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),sK3))) != s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),X0))) | s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(sK0,sK1)),X0),s('type.option.option'(sK0),'const.option.NONE_0'))) != s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))),s('type.option.option'(fun(sK0,sK1)),X0)))) ) | ($spl10 | $spl18)),
  inference(backward_demodulation,[],[f4735,f63])).
fof(f7426,plain,(
  ( ! [X153] : (s('type.option.option'('type.option.option'(fun(fun(sK0,sK1),sK1))),'const.option.NONE_0') != s('type.option.option'('type.option.option'(fun(fun(sK0,sK1),sK1))),'const.option.SOME_1'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))))) | s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),happ(s(fun('type.option.option'(sK0),'type.option.option'(fun(fun(sK0,sK1),sK1))),X153),s('type.option.option'(sK0),'const.option.NONE_0'))),s('type.option.option'(fun(sK0,sK1)),sK3)))) ) | ($spl10 | $spl12 | $spl18 | $spl32)),
  inference(forward_demodulation,[],[f7302,f4951])).
fof(f7302,plain,(
  ( ! [X152,X153] : (s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),happ(s(fun('type.option.option'(sK0),'type.option.option'(fun(fun(sK0,sK1),sK1))),X153),s('type.option.option'(sK0),'const.option.NONE_0'))),s('type.option.option'(fun(sK0,sK1)),sK3))) | s('type.option.option'('type.option.option'(fun(fun(sK0,sK1),sK1))),'const.option.SOME_1'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))))) != s('type.option.option'('type.option.option'(fun(fun(sK0,sK1),sK1))),'const.option.SOME_1'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),happ(s(fun('type.option.option'(sK0),'type.option.option'(fun(fun(sK0,sK1),sK1))),X152),s('type.option.option'(sK0),'const.option.NONE_0')))))) ) | ($spl10 | $spl12 | $spl18 | $spl32)),
  inference(superposition,[],[f4791,f6358])).
fof(f7370,plain,(
  ( ! [X153] : (s('type.option.option'('type.option.option'(fun(fun(sK0,sK1),sK1))),'const.option.NONE_0') != s('type.option.option'('type.option.option'(fun(fun(sK0,sK1),sK1))),'const.option.SOME_1'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))))) | s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),happ(s(fun('type.option.option'(sK0),'type.option.option'(fun(fun(sK0,sK1),sK1))),X153),s('type.option.option'(sK0),'const.option.NONE_0'))),s('type.option.option'(fun(sK0,sK1)),sK3)))) ) | ($spl10 | $spl12 | $spl18 | $spl32)),
  inference(forward_demodulation,[],[f7217,f4951])).
fof(f7217,plain,(
  ( ! [X152,X153] : (s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),happ(s(fun('type.option.option'(sK0),'type.option.option'(fun(fun(sK0,sK1),sK1))),X153),s('type.option.option'(sK0),'const.option.NONE_0'))),s('type.option.option'(fun(sK0,sK1)),sK3))) | s('type.option.option'('type.option.option'(fun(fun(sK0,sK1),sK1))),'const.option.SOME_1'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))))) != s('type.option.option'('type.option.option'(fun(fun(sK0,sK1),sK1))),'const.option.SOME_1'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),happ(s(fun('type.option.option'(sK0),'type.option.option'(fun(fun(sK0,sK1),sK1))),X152),s('type.option.option'(sK0),'const.option.NONE_0')))))) ) | ($spl10 | $spl12 | $spl18 | $spl32)),
  inference(superposition,[],[f4791,f6358])).
fof(f7047,plain,(
  ( ! [X36] : (s('type.option.option'('type.option.option'(fun(fun(sK0,sK1),sK1))),'const.option.NONE_0') != s('type.option.option'('type.option.option'(fun(fun(sK0,sK1),sK1))),'const.option.SOME_1'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))))) | s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),happ(s(fun(sK0,'type.option.option'(fun(fun(sK0,sK1),sK1))),X36),s(sK0,sK2))),s('type.option.option'(fun(sK0,sK1)),sK3)))) ) | ($spl10 | $spl12 | $spl18 | $spl32)),
  inference(forward_demodulation,[],[f7015,f4951])).
fof(f7015,plain,(
  ( ! [X35,X36] : (s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),happ(s(fun(sK0,'type.option.option'(fun(fun(sK0,sK1),sK1))),X36),s(sK0,sK2))),s('type.option.option'(fun(sK0,sK1)),sK3))) | s('type.option.option'('type.option.option'(fun(fun(sK0,sK1),sK1))),'const.option.SOME_1'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))))) != s('type.option.option'('type.option.option'(fun(fun(sK0,sK1),sK1))),'const.option.SOME_1'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),happ(s(fun('type.option.option'(sK0),'type.option.option'(fun(fun(sK0,sK1),sK1))),X35),s('type.option.option'(sK0),'const.option.NONE_0')))))) ) | ($spl10 | $spl12 | $spl18 | $spl32)),
  inference(superposition,[],[f4791,f5961])).
fof(f7046,plain,(
  ( ! [X34] : (s('type.option.option'('type.option.option'(fun(fun(sK0,sK1),sK1))),'const.option.NONE_0') != s('type.option.option'('type.option.option'(fun(fun(sK0,sK1),sK1))),'const.option.SOME_1'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))))) | s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),happ(s(fun(sK0,'type.option.option'(fun(fun(sK0,sK1),sK1))),X34),s(sK0,sK2))),s('type.option.option'(fun(sK0,sK1)),sK3)))) ) | ($spl10 | $spl12 | $spl18)),
  inference(forward_demodulation,[],[f7014,f4796])).
fof(f7014,plain,(
  ( ! [X33,X34] : (s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),happ(s(fun(sK0,'type.option.option'(fun(fun(sK0,sK1),sK1))),X34),s(sK0,sK2))),s('type.option.option'(fun(sK0,sK1)),sK3))) | s('type.option.option'('type.option.option'(fun(fun(sK0,sK1),sK1))),'const.option.SOME_1'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))))) != s('type.option.option'('type.option.option'(fun(fun(sK0,sK1),sK1))),'const.option.SOME_1'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),happ(s(fun(sK0,'type.option.option'(fun(fun(sK0,sK1),sK1))),X33),s(sK0,sK2)))))) ) | ($spl10 | $spl12 | $spl18)),
  inference(superposition,[],[f4791,f5962])).
fof(f7044,plain,(
  ( ! [X32] : (s('type.option.option'('type.option.option'(fun(fun(sK0,sK1),sK1))),'const.option.NONE_0') != s('type.option.option'('type.option.option'(fun(fun(sK0,sK1),sK1))),'const.option.SOME_1'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))))) | s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),happ(s(fun(sK0,'type.option.option'(fun(fun(sK0,sK1),sK1))),X32),s(sK0,sK2))),s('type.option.option'(fun(sK0,sK1)),sK3)))) ) | ($spl10 | $spl12 | $spl18)),
  inference(forward_demodulation,[],[f7013,f4796])).
fof(f7013,plain,(
  ( ! [X31,X32] : (s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),happ(s(fun(sK0,'type.option.option'(fun(fun(sK0,sK1),sK1))),X32),s(sK0,sK2))),s('type.option.option'(fun(sK0,sK1)),sK3))) | s('type.option.option'('type.option.option'(fun(fun(sK0,sK1),sK1))),'const.option.SOME_1'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))))) != s('type.option.option'('type.option.option'(fun(fun(sK0,sK1),sK1))),'const.option.SOME_1'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),happ(s(fun(sK0,'type.option.option'(fun(fun(sK0,sK1),sK1))),X31),s(sK0,sK2)))))) ) | ($spl10 | $spl12 | $spl18)),
  inference(superposition,[],[f4791,f5962])).
fof(f7042,plain,(
  ( ! [X30] : (s('type.option.option'('type.option.option'(fun(fun(sK0,sK1),sK1))),'const.option.NONE_0') != s('type.option.option'('type.option.option'(fun(fun(sK0,sK1),sK1))),'const.option.SOME_1'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))))) | s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),happ(s(fun('type.option.option'(sK0),'type.option.option'(fun(fun(sK0,sK1),sK1))),X30),s('type.option.option'(sK0),'const.option.NONE_0'))),s('type.option.option'(fun(sK0,sK1)),sK3)))) ) | ($spl10 | $spl12 | $spl18 | $spl32)),
  inference(forward_demodulation,[],[f7012,f4796])).
fof(f7012,plain,(
  ( ! [X30,X29] : (s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),happ(s(fun('type.option.option'(sK0),'type.option.option'(fun(fun(sK0,sK1),sK1))),X30),s('type.option.option'(sK0),'const.option.NONE_0'))),s('type.option.option'(fun(sK0,sK1)),sK3))) | s('type.option.option'('type.option.option'(fun(fun(sK0,sK1),sK1))),'const.option.SOME_1'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))))) != s('type.option.option'('type.option.option'(fun(fun(sK0,sK1),sK1))),'const.option.SOME_1'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),happ(s(fun(sK0,'type.option.option'(fun(fun(sK0,sK1),sK1))),X29),s(sK0,sK2)))))) ) | ($spl10 | $spl12 | $spl18 | $spl32)),
  inference(superposition,[],[f4791,f5961])).
fof(f3369,plain,(
  s('type.option.option'('type.option.option'(fun(fun(sK0,sK1),sK1))),'const.option.SOME_1'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.NONE_0'))) != s('type.option.option'('type.option.option'(fun(fun(sK0,sK1),sK1))),'const.option.SOME_1'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))))) | $spl109),
  inference(cnf_transformation,[],[f3369_D])).
fof(f3369_D,plain,(
  s('type.option.option'('type.option.option'(fun(fun(sK0,sK1),sK1))),'const.option.SOME_1'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.NONE_0'))) != s('type.option.option'('type.option.option'(fun(fun(sK0,sK1),sK1))),'const.option.SOME_1'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))))) <=> ~$spl109),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl109])])).
fof(f7038,plain,(
  ( ! [X16] : (s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),X16),s('type.option.option'(fun(sK0,sK1)),sK3))) | s('type.option.option'(fun(fun(sK0,sK1),sK1)),X16) = s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),sK4(X16,fun(fun(sK0,sK1),sK1)))))) ) | $spl212),
  inference(cnf_transformation,[],[f7038_D])).
fof(f7038_D,plain,(
  ( ! [X16] : (s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),X16),s('type.option.option'(fun(sK0,sK1)),sK3))) | s('type.option.option'(fun(fun(sK0,sK1),sK1)),X16) = s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),sK4(X16,fun(fun(sK0,sK1),sK1)))))) ) <=> ~$spl212),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl212])])).
fof(f7006,plain,(
  ( ! [X16] : (s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),X16),s('type.option.option'(fun(sK0,sK1)),sK3))) | s('type.option.option'('type.option.option'(fun(fun(sK0,sK1),sK1))),'const.option.SOME_1'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.NONE_0'))) != s('type.option.option'('type.option.option'(fun(fun(sK0,sK1),sK1))),'const.option.SOME_1'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))))) | s('type.option.option'(fun(fun(sK0,sK1),sK1)),X16) = s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),sK4(X16,fun(fun(sK0,sK1),sK1)))))) ) | ($spl10 | $spl12 | $spl18)),
  inference(superposition,[],[f4791,f47])).
fof(f6544,plain,(
  ( ! [X153] : (s('type.option.option'('type.option.option'(sK1)),'const.option.NONE_0') != s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),'const.option.OPTION_MAP_2'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))),s('type.option.option'(fun(sK0,sK1)),sK3))))) | s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),happ(s(fun('type.option.option'(sK0),'type.option.option'(sK1)),X153),s('type.option.option'(sK0),'const.option.NONE_0')))) ) | ($spl10 | $spl12 | $spl18 | $spl32)),
  inference(forward_demodulation,[],[f6431,f4796])).
fof(f6431,plain,(
  ( ! [X152,X153] : (s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),happ(s(fun('type.option.option'(sK0),'type.option.option'(sK1)),X153),s('type.option.option'(sK0),'const.option.NONE_0'))) | s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),happ(s(fun(sK0,'type.option.option'(sK1)),X152),s(sK0,sK2))))) != s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),'const.option.OPTION_MAP_2'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))),s('type.option.option'(fun(sK0,sK1)),sK3)))))) ) | ($spl10 | $spl12 | $spl18 | $spl32)),
  inference(superposition,[],[f4904,f5961])).
fof(f4904,plain,(
  ( ! [X0] : (s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),X0) | s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),X0))) != s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),'const.option.OPTION_MAP_2'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))),s('type.option.option'(fun(sK0,sK1)),sK3)))))) ) | ($spl10 | $spl12 | $spl18)),
  inference(forward_demodulation,[],[f4898,f40])).
fof(f4898,plain,(
  ( ! [X0] : (s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),X0) | s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),X0))) != s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))),s('type.option.option'(fun(sK0,sK1)),sK3)))))) ) | ($spl10 | $spl12 | $spl18)),
  inference(superposition,[],[f4807,f43])).
fof(f5895,plain,(
  ( ! [X76] : (s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),happ(s(fun(sK0,'type.option.option'(sK1)),X76),s(sK0,sK2)))) ) | $spl206),
  inference(cnf_transformation,[],[f5895_D])).
fof(f5895_D,plain,(
  ( ! [X76] : (s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),happ(s(fun(sK0,'type.option.option'(sK1)),X76),s(sK0,sK2)))) ) <=> ~$spl206),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl206])])).
fof(f6154,plain,(
  s('type.option.option'('type.option.option'('type.option.option'(sK1))),'const.option.NONE_0') != s('type.option.option'('type.option.option'('type.option.option'(sK1))),'const.option.SOME_1'(s('type.option.option'('type.option.option'(sK1)),'const.option.NONE_0'))) | $spl211),
  inference(cnf_transformation,[],[f6154_D])).
fof(f6154_D,plain,(
  s('type.option.option'('type.option.option'('type.option.option'(sK1))),'const.option.NONE_0') != s('type.option.option'('type.option.option'('type.option.option'(sK1))),'const.option.SOME_1'(s('type.option.option'('type.option.option'(sK1)),'const.option.NONE_0'))) <=> ~$spl211),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl211])])).
fof(f6189,plain,(
  ( ! [X124] : (s('type.option.option'('type.option.option'('type.option.option'(sK1))),'const.option.NONE_0') != s('type.option.option'('type.option.option'('type.option.option'(sK1))),'const.option.SOME_1'(s('type.option.option'('type.option.option'(sK1)),'const.option.NONE_0'))) | s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),happ(s(fun(sK0,'type.option.option'(sK1)),X124),s(sK0,sK2)))) ) | ($spl10 | $spl18 | $spl127)),
  inference(forward_demodulation,[],[f6108,f4796])).
fof(f6108,plain,(
  ( ! [X123,X124] : (s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),happ(s(fun(sK0,'type.option.option'(sK1)),X124),s(sK0,sK2))) | s('type.option.option'('type.option.option'('type.option.option'(sK1))),'const.option.NONE_0') != s('type.option.option'('type.option.option'('type.option.option'(sK1))),'const.option.SOME_1'(s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),happ(s(fun(sK0,'type.option.option'(sK1)),X123),s(sK0,sK2)))))))) ) | ($spl10 | $spl18 | $spl127)),
  inference(superposition,[],[f3976,f5962])).
fof(f3976,plain,(
  ( ! [X0] : (s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),X0) | s('type.option.option'('type.option.option'('type.option.option'(sK1))),'const.option.NONE_0') != s('type.option.option'('type.option.option'('type.option.option'(sK1))),'const.option.SOME_1'(s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),X0)))))) ) | $spl127),
  inference(superposition,[],[f3958,f44])).
fof(f6188,plain,(
  ( ! [X122] : (s('type.option.option'('type.option.option'(sK1)),'const.option.NONE_0') != s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),'const.option.OPTION_MAP_2'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))),s('type.option.option'(fun(sK0,sK1)),sK3))))) | s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),happ(s(fun(sK0,'type.option.option'(sK1)),X122),s(sK0,sK2)))) ) | ($spl10 | $spl12 | $spl18)),
  inference(forward_demodulation,[],[f6107,f4796])).
fof(f6107,plain,(
  ( ! [X121,X122] : (s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),happ(s(fun(sK0,'type.option.option'(sK1)),X122),s(sK0,sK2))) | s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),happ(s(fun(sK0,'type.option.option'(sK1)),X121),s(sK0,sK2))))) != s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),'const.option.OPTION_MAP_2'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))),s('type.option.option'(fun(sK0,sK1)),sK3)))))) ) | ($spl10 | $spl12 | $spl18)),
  inference(superposition,[],[f4904,f5962])).
fof(f6152,plain,(
  ( ! [X124] : (s('type.option.option'('type.option.option'('type.option.option'(sK1))),'const.option.NONE_0') != s('type.option.option'('type.option.option'('type.option.option'(sK1))),'const.option.SOME_1'(s('type.option.option'('type.option.option'(sK1)),'const.option.NONE_0'))) | s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),happ(s(fun(sK0,'type.option.option'(sK1)),X124),s(sK0,sK2)))) ) | ($spl10 | $spl18 | $spl127)),
  inference(forward_demodulation,[],[f6052,f4796])).
fof(f6052,plain,(
  ( ! [X123,X124] : (s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),happ(s(fun(sK0,'type.option.option'(sK1)),X124),s(sK0,sK2))) | s('type.option.option'('type.option.option'('type.option.option'(sK1))),'const.option.NONE_0') != s('type.option.option'('type.option.option'('type.option.option'(sK1))),'const.option.SOME_1'(s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),happ(s(fun(sK0,'type.option.option'(sK1)),X123),s(sK0,sK2)))))))) ) | ($spl10 | $spl18 | $spl127)),
  inference(superposition,[],[f3976,f5962])).
fof(f6151,plain,(
  ( ! [X122] : (s('type.option.option'('type.option.option'(sK1)),'const.option.NONE_0') != s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),'const.option.OPTION_MAP_2'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))),s('type.option.option'(fun(sK0,sK1)),sK3))))) | s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),happ(s(fun(sK0,'type.option.option'(sK1)),X122),s(sK0,sK2)))) ) | ($spl10 | $spl12 | $spl18)),
  inference(forward_demodulation,[],[f6051,f4796])).
fof(f6051,plain,(
  ( ! [X121,X122] : (s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),happ(s(fun(sK0,'type.option.option'(sK1)),X122),s(sK0,sK2))) | s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),happ(s(fun(sK0,'type.option.option'(sK1)),X121),s(sK0,sK2))))) != s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),'const.option.OPTION_MAP_2'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))),s('type.option.option'(fun(sK0,sK1)),sK3)))))) ) | ($spl10 | $spl12 | $spl18)),
  inference(superposition,[],[f4904,f5962])).
fof(f5978,plain,(
  ( ! [X79] : (s('type.option.option'(sK1),happ(s(fun(sK0,'type.option.option'(sK1)),X79),s(sK0,sK2))) = s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,sK4('const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))),s('type.option.option'(fun(sK0,sK1)),sK3)),sK1))))) ) | $spl208),
  inference(cnf_transformation,[],[f5978_D])).
fof(f5978_D,plain,(
  ( ! [X79] : (s('type.option.option'(sK1),happ(s(fun(sK0,'type.option.option'(sK1)),X79),s(sK0,sK2))) = s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,sK4('const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))),s('type.option.option'(fun(sK0,sK1)),sK3)),sK1))))) ) <=> ~$spl208),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl208])])).
fof(f5935,plain,(
  ( ! [X79] : (s('type.option.option'('type.option.option'(sK1)),'const.option.NONE_0') != s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),'const.option.OPTION_MAP_2'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))),s('type.option.option'(fun(sK0,sK1)),sK3))))) | s('type.option.option'(sK1),happ(s(fun(sK0,'type.option.option'(sK1)),X79),s(sK0,sK2))) = s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,sK4('const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))),s('type.option.option'(fun(sK0,sK1)),sK3)),sK1))))) ) | ($spl8 | $spl10 | $spl18)),
  inference(superposition,[],[f5096,f81])).
fof(f2028,plain,(
  ( ! [X66] : (s('type.option.option'('type.option.option'(sK1)),'const.option.NONE_0') = s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(sK0,sK1)),sK3),s('type.option.option'(sK0),X66))))) | s('type.option.option'(sK0),X66) = s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK4(X66,sK0))))) ) | $spl72),
  inference(cnf_transformation,[],[f2028_D])).
fof(f2028_D,plain,(
  ( ! [X66] : (s('type.option.option'('type.option.option'(sK1)),'const.option.NONE_0') = s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(sK0,sK1)),sK3),s('type.option.option'(sK0),X66))))) | s('type.option.option'(sK0),X66) = s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK4(X66,sK0))))) ) <=> ~$spl72),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl72])])).
fof(f5863,plain,(
  ( ! [X76,X75] : (s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),happ(s(fun(sK0,'type.option.option'(sK1)),X76),s(sK0,sK2))) | s('type.option.option'('type.option.option'(sK1)),'const.option.NONE_0') = s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(sK0,sK1)),sK3),s('type.option.option'(sK0),X75))))) | s('type.option.option'(sK0),X75) = s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK4(X75,sK0))))) ) | ($spl10 | $spl12 | $spl18)),
  inference(superposition,[],[f5091,f2496])).
fof(f5091,plain,(
  ( ! [X6,X4,X5] : (s(X4,X6) != s(X4,happ(s(fun(sK0,X4),X5),s(sK0,sK2))) | s('type.option.option'(X4),'const.option.NONE_0') = s('type.option.option'(X4),'const.option.SOME_1'(s(X4,X6)))) ) | ($spl10 | $spl18)),
  inference(superposition,[],[f4796,f44])).
fof(f5716,plain,(
  ( ! [X22] : (s('type.option.option'(sK1),X22) != s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,sK4('const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))),s('type.option.option'(fun(sK0,sK1)),sK3)),sK1)))) | s('type.option.option'('type.option.option'(sK1)),'const.option.NONE_0') = s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),X22)))) ) | $spl204),
  inference(cnf_transformation,[],[f5716_D])).
fof(f5716_D,plain,(
  ( ! [X22] : (s('type.option.option'(sK1),X22) != s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,sK4('const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))),s('type.option.option'(fun(sK0,sK1)),sK3)),sK1)))) | s('type.option.option'('type.option.option'(sK1)),'const.option.NONE_0') = s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),X22)))) ) <=> ~$spl204),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl204])])).
fof(f5700,plain,(
  ( ! [X22] : (s('type.option.option'('type.option.option'(sK1)),'const.option.NONE_0') != s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),'const.option.OPTION_MAP_2'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))),s('type.option.option'(fun(sK0,sK1)),sK3))))) | s('type.option.option'(sK1),X22) != s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,sK4('const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))),s('type.option.option'(fun(sK0,sK1)),sK3)),sK1)))) | s('type.option.option'('type.option.option'(sK1)),'const.option.NONE_0') = s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),X22)))) ) | ($spl8 | $spl82)),
  inference(superposition,[],[f3896,f81])).
fof(f5707,plain,(
  s('type.option.option'(sK1),'const.option.OPTION_MAP_2'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))),s('type.option.option'(fun(sK0,sK1)),sK3))) = s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,sK4('const.option.SOME_1'(s(sK1,sK4('const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))),s('type.option.option'(fun(sK0,sK1)),sK3)),sK1))),sK1)))) | s('type.option.option'('type.option.option'(sK1)),'const.option.NONE_0') != s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),'const.option.OPTION_MAP_2'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))),s('type.option.option'(fun(sK0,sK1)),sK3))))) | ($spl8 | $spl115)),
  inference(forward_demodulation,[],[f5685,f81])).
fof(f5685,plain,(
  s('type.option.option'('type.option.option'(sK1)),'const.option.NONE_0') != s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),'const.option.OPTION_MAP_2'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))),s('type.option.option'(fun(sK0,sK1)),sK3))))) | s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,sK4('const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))),s('type.option.option'(fun(sK0,sK1)),sK3)),sK1)))) = s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,sK4('const.option.SOME_1'(s(sK1,sK4('const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))),s('type.option.option'(fun(sK0,sK1)),sK3)),sK1))),sK1)))) | ($spl8 | $spl115)),
  inference(superposition,[],[f3699,f81])).
fof(f5252,plain,(
  ( ! [X17] : (s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),'const.option.NONE_0'))) != s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),'const.option.OPTION_MAP_2'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))),s('type.option.option'(fun(sK0,sK1)),sK3))))) | s('type.option.option'(sK1),X17) = s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,sK4(X17,sK1))))) ) | ($spl10 | $spl12 | $spl18)),
  inference(trivial_inequality_removal,[],[f5244])).
fof(f5244,plain,(
  ( ! [X17] : (s('type.option.option'(sK1),X17) != s('type.option.option'(sK1),X17) | s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),'const.option.NONE_0'))) != s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),'const.option.OPTION_MAP_2'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))),s('type.option.option'(fun(sK0,sK1)),sK3))))) | s('type.option.option'(sK1),X17) = s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,sK4(X17,sK1))))) ) | ($spl10 | $spl12 | $spl18)),
  inference(superposition,[],[f4904,f47])).
fof(f4916,plain,(
  $false | ($spl10 | $spl18 | $spl33 | $spl82)),
  inference(subsumption_resolution,[],[f4753,f892])).
fof(f4753,plain,(
  s('type.option.option'('type.option.option'(sK0)),'const.option.NONE_0') = s('type.option.option'('type.option.option'(sK0)),'const.option.SOME_1'(s('type.option.option'(sK0),'const.option.NONE_0'))) | ($spl10 | $spl18 | $spl82)),
  inference(backward_demodulation,[],[f4735,f2263])).
fof(f4883,plain,(
  $false | ($spl10 | $spl18 | $spl29 | $spl82)),
  inference(subsumption_resolution,[],[f4753,f4718])).
fof(f4718,plain,(
  s('type.option.option'('type.option.option'(sK0)),'const.option.NONE_0') != s('type.option.option'('type.option.option'(sK0)),'const.option.SOME_1'(s('type.option.option'(sK0),'const.option.NONE_0'))) | ($spl29 | $spl82)),
  inference(forward_demodulation,[],[f872,f2263])).
fof(f4882,plain,(
  $false | ($spl29 | $spl32 | $spl82)),
  inference(subsumption_resolution,[],[f891,f4718])).
fof(f4747,plain,(
  s('type.option.option'(sK0),'const.option.NONE_0') = s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK4('const.option.SOME_1'(s(sK0,sK2)),sK0)))) | $spl196),
  inference(cnf_transformation,[],[f4747_D])).
fof(f4747_D,plain,(
  s('type.option.option'(sK0),'const.option.NONE_0') = s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK4('const.option.SOME_1'(s(sK0,sK2)),sK0)))) <=> ~$spl196),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl196])])).
fof(f678,plain,(
  s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))) = s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK4('const.option.SOME_1'(s(sK0,sK2)),sK0)))) | s('type.option.option'(sK0),'const.option.NONE_0') = s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK4('const.option.SOME_1'(s(sK0,sK2)),sK0)))) | $spl20),
  inference(superposition,[],[f515,f47])).
fof(f684,plain,(
  s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))) = s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK4('const.option.SOME_1'(s(sK0,sK2)),sK0)))) | s('type.option.option'(sK0),'const.option.NONE_0') = s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK4('const.option.SOME_1'(s(sK0,sK2)),sK0)))) | $spl20),
  inference(superposition,[],[f47,f515])).
fof(f4745,plain,(
  ( ! [X4] : (s('type.option.option'(sK0),'const.option.NONE_0') != s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,X4))) | s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(sK0,sK1)),sK3),s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,X4))))) != s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,X4))))),s('type.option.option'(fun(sK0,sK1)),sK3)))) ) | $spl194),
  inference(cnf_transformation,[],[f4745_D])).
fof(f4745_D,plain,(
  ( ! [X4] : (s('type.option.option'(sK0),'const.option.NONE_0') != s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,X4))) | s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(sK0,sK1)),sK3),s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,X4))))) != s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,X4))))),s('type.option.option'(fun(sK0,sK1)),sK3)))) ) <=> ~$spl194),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl194])])).
fof(f1035,plain,(
  ( ! [X4] : (s('type.option.option'(sK0),'const.option.NONE_0') != s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,X4))) | s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(sK0,sK1)),sK3),s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,X4))))) != s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,X4))))),s('type.option.option'(fun(sK0,sK1)),sK3))) | s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))) = s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK4('const.option.SOME_1'(s(sK0,sK2)),sK0))))) )),
  inference(superposition,[],[f53,f47])).
fof(f809,plain,(
  ( ! [X0] : (s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),X0) | s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),X0))) != s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),'const.option.OPTION_MAP_2'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))),s('type.option.option'(fun(sK0,sK1)),sK3)))))) ) | $spl24),
  inference(cnf_transformation,[],[f809_D])).
fof(f809_D,plain,(
  ( ! [X0] : (s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),X0) | s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),X0))) != s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),'const.option.OPTION_MAP_2'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))),s('type.option.option'(fun(sK0,sK1)),sK3)))))) ) <=> ~$spl24),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl24])])).
fof(f4744,plain,(
  ( ! [X4] : (s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),X4) | s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),X4))) != s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),'const.option.OPTION_MAP_2'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))),s('type.option.option'(fun(sK0,sK1)),sK3))))) | s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))) = s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK4('const.option.SOME_1'(s(sK0,sK2)),sK0))))) ) | $spl12),
  inference(forward_demodulation,[],[f795,f101])).
fof(f4743,plain,(
  ( ! [X6,X7] : (s('type.option.option'(X6),'const.option.NONE_0') = s('type.option.option'(X6),'const.option.SOME_1'(s(X6,happ(s(fun('type.option.option'(sK0),X6),X7),s('type.option.option'(sK0),'const.option.NONE_0')))))) ) | $spl192),
  inference(cnf_transformation,[],[f4743_D])).
fof(f4743_D,plain,(
  ( ! [X6,X7] : (s('type.option.option'(X6),'const.option.NONE_0') = s('type.option.option'(X6),'const.option.SOME_1'(s(X6,happ(s(fun('type.option.option'(sK0),X6),X7),s('type.option.option'(sK0),'const.option.NONE_0')))))) ) <=> ~$spl192),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl192])])).
fof(f2692,plain,(
  ( ! [X6,X7] : (s('type.option.option'(X6),'const.option.NONE_0') = s('type.option.option'(X6),'const.option.SOME_1'(s(X6,happ(s(fun('type.option.option'(sK0),X6),X7),s('type.option.option'(sK0),'const.option.NONE_0'))))) | s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))) = s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK4('const.option.SOME_1'(s(sK0,sK2)),sK0))))) ) | $spl82),
  inference(superposition,[],[f2488,f47])).
fof(f2863,plain,(
  ( ! [X4] : (s('type.option.option'(sK0),'const.option.NONE_0') = s('type.option.option'(sK0),happ(s(fun('type.option.option'(sK0),'type.option.option'(sK0)),X4),s('type.option.option'(sK0),'const.option.NONE_0'))) | s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))) = s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK4('const.option.SOME_1'(s(sK0,sK2)),sK0))))) ) | $spl82),
  inference(superposition,[],[f2853,f47])).
fof(f2853,plain,(
  ( ! [X8] : (s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))) = s('type.option.option'(sK0),happ(s(fun('type.option.option'(sK0),'type.option.option'(sK0)),X8),s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2)))))) ) | $spl82),
  inference(trivial_inequality_removal,[],[f2848])).
fof(f2848,plain,(
  ( ! [X8] : (s('type.option.option'('type.option.option'(sK0)),'const.option.NONE_0') != s('type.option.option'('type.option.option'(sK0)),'const.option.NONE_0') | s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))) = s('type.option.option'(sK0),happ(s(fun('type.option.option'(sK0),'type.option.option'(sK0)),X8),s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2)))))) ) | $spl82),
  inference(superposition,[],[f2467,f2488])).
fof(f2467,plain,(
  ( ! [X2] : (s('type.option.option'('type.option.option'(sK0)),'const.option.NONE_0') != s('type.option.option'('type.option.option'(sK0)),'const.option.SOME_1'(s('type.option.option'(sK0),X2))) | s('type.option.option'(sK0),X2) = s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2)))) ) | $spl82),
  inference(superposition,[],[f43,f2263])).
fof(f4741,plain,(
  ( ! [X10,X8,X9] : (s(X8,X9) != s(X8,happ(s(fun('type.option.option'(sK0),X8),X10),s('type.option.option'(sK0),'const.option.NONE_0'))) | s('type.option.option'(X8),'const.option.NONE_0') = s('type.option.option'(X8),'const.option.SOME_1'(s(X8,X9)))) ) | $spl188),
  inference(cnf_transformation,[],[f4741_D])).
fof(f4741_D,plain,(
  ( ! [X10,X8,X9] : (s(X8,X9) != s(X8,happ(s(fun('type.option.option'(sK0),X8),X10),s('type.option.option'(sK0),'const.option.NONE_0'))) | s('type.option.option'(X8),'const.option.NONE_0') = s('type.option.option'(X8),'const.option.SOME_1'(s(X8,X9)))) ) <=> ~$spl188),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl188])])).
fof(f3872,plain,(
  ( ! [X10,X8,X9] : (s(X8,X9) != s(X8,happ(s(fun('type.option.option'(sK0),X8),X10),s('type.option.option'(sK0),'const.option.NONE_0'))) | s('type.option.option'(X8),'const.option.NONE_0') = s('type.option.option'(X8),'const.option.SOME_1'(s(X8,X9))) | s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))) = s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK4('const.option.SOME_1'(s(sK0,sK2)),sK0))))) ) | $spl82),
  inference(superposition,[],[f2699,f47])).
fof(f4740,plain,(
  s('type.option.option'('type.option.option'(sK0)),'const.option.NONE_0') = s('type.option.option'('type.option.option'(sK0)),'const.option.SOME_1'(s('type.option.option'(sK0),sK4('const.option.SOME_1'(s('type.option.option'(sK0),'const.option.NONE_0')),'type.option.option'(sK0))))) | $spl186),
  inference(cnf_transformation,[],[f4740_D])).
fof(f4740_D,plain,(
  s('type.option.option'('type.option.option'(sK0)),'const.option.NONE_0') = s('type.option.option'('type.option.option'(sK0)),'const.option.SOME_1'(s('type.option.option'(sK0),sK4('const.option.SOME_1'(s('type.option.option'(sK0),'const.option.NONE_0')),'type.option.option'(sK0))))) <=> ~$spl186),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl186])])).
fof(f4610,plain,(
  s('type.option.option'('type.option.option'(sK0)),'const.option.NONE_0') = s('type.option.option'('type.option.option'(sK0)),'const.option.SOME_1'(s('type.option.option'(sK0),sK4('const.option.SOME_1'(s('type.option.option'(sK0),'const.option.NONE_0')),'type.option.option'(sK0))))) | s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))) = s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK4('const.option.SOME_1'(s(sK0,sK2)),sK0)))) | ($spl30 | $spl82)),
  inference(superposition,[],[f4578,f47])).
fof(f4578,plain,(
  s('type.option.option'('type.option.option'(sK0)),'const.option.NONE_0') = s('type.option.option'('type.option.option'(sK0)),'const.option.SOME_1'(s('type.option.option'(sK0),sK4('const.option.SOME_1'(s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2)))),'type.option.option'(sK0))))) | ($spl30 | $spl82)),
  inference(forward_demodulation,[],[f890,f2263])).
fof(f4738,plain,(
  ( ! [X4] : (s('type.option.option'(sK0),'const.option.NONE_0') != s('type.option.option'(sK0),X4) | s('type.option.option'('type.option.option'(sK0)),'const.option.NONE_0') = s('type.option.option'('type.option.option'(sK0)),'const.option.SOME_1'(s('type.option.option'(sK0),X4)))) ) | $spl184),
  inference(cnf_transformation,[],[f4738_D])).
fof(f4738_D,plain,(
  ( ! [X4] : (s('type.option.option'(sK0),'const.option.NONE_0') != s('type.option.option'(sK0),X4) | s('type.option.option'('type.option.option'(sK0)),'const.option.NONE_0') = s('type.option.option'('type.option.option'(sK0)),'const.option.SOME_1'(s('type.option.option'(sK0),X4)))) ) <=> ~$spl184),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl184])])).
fof(f2819,plain,(
  ( ! [X4] : (s('type.option.option'(sK0),'const.option.NONE_0') != s('type.option.option'(sK0),X4) | s('type.option.option'('type.option.option'(sK0)),'const.option.NONE_0') = s('type.option.option'('type.option.option'(sK0)),'const.option.SOME_1'(s('type.option.option'(sK0),X4))) | s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))) = s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK4('const.option.SOME_1'(s(sK0,sK2)),sK0))))) ) | $spl82),
  inference(superposition,[],[f2462,f47])).
fof(f2462,plain,(
  ( ! [X0] : (s('type.option.option'(sK0),X0) != s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))) | s('type.option.option'('type.option.option'(sK0)),'const.option.NONE_0') = s('type.option.option'('type.option.option'(sK0)),'const.option.SOME_1'(s('type.option.option'(sK0),X0)))) ) | $spl82),
  inference(superposition,[],[f2263,f44])).
fof(f4737,plain,(
  s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK4('const.option.SOME_1'(s(sK0,sK4('const.option.SOME_1'(s(sK0,sK2)),sK0))),sK0)))) = s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK4('const.option.SOME_1'(s(sK0,sK4('const.option.SOME_1'(s(sK0,sK4('const.option.SOME_1'(s(sK0,sK2)),sK0))),sK0))),sK0)))) | $spl182),
  inference(cnf_transformation,[],[f4737_D])).
fof(f4737_D,plain,(
  s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK4('const.option.SOME_1'(s(sK0,sK4('const.option.SOME_1'(s(sK0,sK2)),sK0))),sK0)))) = s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK4('const.option.SOME_1'(s(sK0,sK4('const.option.SOME_1'(s(sK0,sK4('const.option.SOME_1'(s(sK0,sK2)),sK0))),sK0))),sK0)))) <=> ~$spl182),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl182])])).
fof(f513,plain,(
  s('type.option.option'(sK0),'const.option.NONE_0') = s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))) | $spl18),
  inference(cnf_transformation,[],[f513_D])).
fof(f513_D,plain,(
  s('type.option.option'(sK0),'const.option.NONE_0') = s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))) <=> ~$spl18),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl18])])).
fof(f691,plain,(
  s('type.option.option'(sK0),'const.option.NONE_0') = s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))) | s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK4('const.option.SOME_1'(s(sK0,sK4('const.option.SOME_1'(s(sK0,sK2)),sK0))),sK0)))) = s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK4('const.option.SOME_1'(s(sK0,sK4('const.option.SOME_1'(s(sK0,sK4('const.option.SOME_1'(s(sK0,sK2)),sK0))),sK0))),sK0)))) | $spl20),
  inference(superposition,[],[f47,f515])).
fof(f681,plain,(
  s('type.option.option'(sK0),'const.option.NONE_0') = s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))) | s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK4('const.option.SOME_1'(s(sK0,sK4('const.option.SOME_1'(s(sK0,sK2)),sK0))),sK0)))) = s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK4('const.option.SOME_1'(s(sK0,sK4('const.option.SOME_1'(s(sK0,sK4('const.option.SOME_1'(s(sK0,sK2)),sK0))),sK0))),sK0)))) | $spl20),
  inference(superposition,[],[f515,f47])).
fof(f891,plain,(
  s('type.option.option'('type.option.option'(sK0)),'const.option.NONE_0') = s('type.option.option'('type.option.option'(sK0)),'const.option.SOME_1'(s('type.option.option'(sK0),'const.option.NONE_0'))) | $spl32),
  inference(cnf_transformation,[],[f891_D])).
fof(f891_D,plain,(
  s('type.option.option'('type.option.option'(sK0)),'const.option.NONE_0') = s('type.option.option'('type.option.option'(sK0)),'const.option.SOME_1'(s('type.option.option'(sK0),'const.option.NONE_0'))) <=> ~$spl32),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl32])])).
fof(f2459,plain,(
  s('type.option.option'('type.option.option'(sK0)),'const.option.NONE_0') = s('type.option.option'('type.option.option'(sK0)),'const.option.SOME_1'(s('type.option.option'(sK0),'const.option.NONE_0'))) | s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))) = s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK4('const.option.SOME_1'(s(sK0,sK2)),sK0)))) | $spl82),
  inference(superposition,[],[f2263,f47])).
fof(f4732,plain,(
  ( ! [X1] : (s('type.option.option'(sK0),X1) = s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK4(X1,sK0)))) | s('type.option.option'(sK0),X1) = s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2)))) ) | $spl180),
  inference(cnf_transformation,[],[f4732_D])).
fof(f4732_D,plain,(
  ( ! [X1] : (s('type.option.option'(sK0),X1) = s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK4(X1,sK0)))) | s('type.option.option'(sK0),X1) = s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2)))) ) <=> ~$spl180),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl180])])).
fof(f892,plain,(
  s('type.option.option'('type.option.option'(sK0)),'const.option.NONE_0') != s('type.option.option'('type.option.option'(sK0)),'const.option.SOME_1'(s('type.option.option'(sK0),'const.option.NONE_0'))) | $spl33),
  inference(cnf_transformation,[],[f892_D])).
fof(f892_D,plain,(
  s('type.option.option'('type.option.option'(sK0)),'const.option.NONE_0') != s('type.option.option'('type.option.option'(sK0)),'const.option.SOME_1'(s('type.option.option'(sK0),'const.option.NONE_0'))) <=> ~$spl33),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl33])])).
fof(f2831,plain,(
  ( ! [X1] : (s('type.option.option'('type.option.option'(sK0)),'const.option.NONE_0') != s('type.option.option'('type.option.option'(sK0)),'const.option.SOME_1'(s('type.option.option'(sK0),'const.option.NONE_0'))) | s('type.option.option'(sK0),X1) = s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))) | s('type.option.option'(sK0),X1) = s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK4(X1,sK0))))) ) | $spl82),
  inference(superposition,[],[f2467,f47])).
fof(f2269,plain,(
  s('type.option.option'(sK0),sK4('const.option.SOME_1'(s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2)))),'type.option.option'(sK0))) = s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK4(sK4('const.option.SOME_1'(s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2)))),'type.option.option'(sK0)),sK0)))) | $spl86),
  inference(cnf_transformation,[],[f2269_D])).
fof(f2269_D,plain,(
  s('type.option.option'(sK0),sK4('const.option.SOME_1'(s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2)))),'type.option.option'(sK0))) = s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK4(sK4('const.option.SOME_1'(s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2)))),'type.option.option'(sK0)),sK0)))) <=> ~$spl86),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl86])])).
fof(f4613,plain,(
  s('type.option.option'('type.option.option'(sK0)),'const.option.NONE_0') = s('type.option.option'('type.option.option'(sK0)),'const.option.SOME_1'(s('type.option.option'(sK0),'const.option.NONE_0'))) | s('type.option.option'(sK0),sK4('const.option.SOME_1'(s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2)))),'type.option.option'(sK0))) = s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK4(sK4('const.option.SOME_1'(s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2)))),'type.option.option'(sK0)),sK0)))) | ($spl30 | $spl82)),
  inference(superposition,[],[f4578,f47])).
fof(f4722,plain,(
  ( ! [X8] : (s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,X8))) = s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK4('const.option.SOME_1'(s(sK0,X8)),sK0)))) | s(sK0,sK2) = s(sK0,X8)) ) | $spl178),
  inference(cnf_transformation,[],[f4722_D])).
fof(f4722_D,plain,(
  ( ! [X8] : (s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,X8))) = s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK4('const.option.SOME_1'(s(sK0,X8)),sK0)))) | s(sK0,sK2) = s(sK0,X8)) ) <=> ~$spl178),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl178])])).
fof(f4721,plain,(
  ( ! [X8] : (s(sK0,sK2) = s(sK0,X8) | s('type.option.option'(sK0),'const.option.NONE_0') != s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))) | s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,X8))) = s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK4('const.option.SOME_1'(s(sK0,X8)),sK0))))) ) | $spl10),
  inference(forward_demodulation,[],[f738,f741])).
fof(f738,plain,(
  ( ! [X8] : (s('type.option.option'(sK0),'const.option.NONE_0') != s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))) | s(sK0,X8) = s(sK0,sK4('const.option.SOME_1'(s(sK0,sK2)),sK0)) | s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,X8))) = s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK4('const.option.SOME_1'(s(sK0,X8)),sK0))))) ) | $spl10),
  inference(superposition,[],[f493,f47])).
fof(f4720,plain,(
  ( ! [X8] : (s(sK0,X8) = s(sK0,sK4('const.option.SOME_1'(s(sK0,X8)),sK0))) ) | $spl176),
  inference(cnf_transformation,[],[f4720_D])).
fof(f4720_D,plain,(
  ( ! [X8] : (s(sK0,X8) = s(sK0,sK4('const.option.SOME_1'(s(sK0,X8)),sK0))) ) <=> ~$spl176),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl176])])).
fof(f4719,plain,(
  ( ! [X8] : (s('type.option.option'(sK0),'const.option.NONE_0') != s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))) | s(sK0,X8) = s(sK0,sK4('const.option.SOME_1'(s(sK0,X8)),sK0))) ) | $spl10),
  inference(subsumption_resolution,[],[f836,f43])).
fof(f836,plain,(
  ( ! [X8] : (s('type.option.option'(sK0),'const.option.NONE_0') != s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))) | s(sK0,X8) = s(sK0,sK4('const.option.SOME_1'(s(sK0,X8)),sK0)) | s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,X8))) = s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK4('const.option.SOME_1'(s(sK0,X8)),sK0))))) ) | $spl10),
  inference(superposition,[],[f744,f47])).
fof(f744,plain,(
  ( ! [X0] : (s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))) != s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,X0))) | s(sK0,X0) = s(sK0,sK4('const.option.SOME_1'(s(sK0,X0)),sK0))) ) | $spl10),
  inference(superposition,[],[f741,f43])).
fof(f4717,plain,(
  ( ! [X8] : (s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(sK0,sK1)),sK3),s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,X8))))) != s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,X8))))),s('type.option.option'(fun(sK0,sK1)),sK3))) | s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,X8))) = s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK4('const.option.SOME_1'(s(sK0,X8)),sK0))))) ) | $spl174),
  inference(cnf_transformation,[],[f4717_D])).
fof(f4717_D,plain,(
  ( ! [X8] : (s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(sK0,sK1)),sK3),s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,X8))))) != s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,X8))))),s('type.option.option'(fun(sK0,sK1)),sK3))) | s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,X8))) = s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK4('const.option.SOME_1'(s(sK0,X8)),sK0))))) ) <=> ~$spl174),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl174])])).
fof(f1045,plain,(
  ( ! [X8] : (s('type.option.option'(sK0),'const.option.NONE_0') != s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))) | s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(sK0,sK1)),sK3),s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,X8))))) != s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,X8))))),s('type.option.option'(fun(sK0,sK1)),sK3))) | s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,X8))) = s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK4('const.option.SOME_1'(s(sK0,X8)),sK0))))) )),
  inference(superposition,[],[f53,f47])).
fof(f4716,plain,(
  ( ! [X8] : (s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,X8))) = s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK4('const.option.SOME_1'(s(sK0,X8)),sK0))))) ) | $spl172),
  inference(cnf_transformation,[],[f4716_D])).
fof(f4716_D,plain,(
  ( ! [X8] : (s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,X8))) = s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK4('const.option.SOME_1'(s(sK0,X8)),sK0))))) ) <=> ~$spl172),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl172])])).
fof(f1326,plain,(
  ( ! [X8] : (s('type.option.option'(sK0),'const.option.NONE_0') != s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))) | s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,X8))) = s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK4('const.option.SOME_1'(s(sK0,X8)),sK0))))) ) | $spl10),
  inference(duplicate_literal_removal,[],[f1322])).
fof(f1322,plain,(
  ( ! [X8] : (s('type.option.option'(sK0),'const.option.NONE_0') != s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))) | s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,X8))) = s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK4('const.option.SOME_1'(s(sK0,X8)),sK0)))) | s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,X8))) = s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK4('const.option.SOME_1'(s(sK0,X8)),sK0))))) ) | $spl10),
  inference(superposition,[],[f483,f47])).
fof(f483,plain,(
  ( ! [X0] : (s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))) != s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,X0))) | s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,X0))) = s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK4('const.option.SOME_1'(s(sK0,X0)),sK0))))) ) | $spl10),
  inference(superposition,[],[f100,f43])).
fof(f4715,plain,(
  ( ! [X25] : (s('type.option.option'(sK0),'const.option.NONE_0') = s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK4('const.option.SOME_1'(s(sK0,happ(s(fun('type.option.option'(sK0),sK0),X25),s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2)))))),sK0))))) ) | $spl170),
  inference(cnf_transformation,[],[f4715_D])).
fof(f4715_D,plain,(
  ( ! [X25] : (s('type.option.option'(sK0),'const.option.NONE_0') = s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK4('const.option.SOME_1'(s(sK0,happ(s(fun('type.option.option'(sK0),sK0),X25),s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2)))))),sK0))))) ) <=> ~$spl170),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl170])])).
fof(f4714,plain,(
  ( ! [X25] : (s('type.option.option'(sK0),'const.option.NONE_0') = s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK4('const.option.SOME_1'(s(sK0,happ(s(fun('type.option.option'(sK0),sK0),X25),s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2)))))),sK0)))) | s('type.option.option'(sK0),'const.option.NONE_0') != s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2)))) ) | ($spl10 | $spl82)),
  inference(forward_demodulation,[],[f2713,f2488])).
fof(f2713,plain,(
  ( ! [X25] : (s('type.option.option'(sK0),'const.option.NONE_0') != s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))) | s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,happ(s(fun('type.option.option'(sK0),sK0),X25),s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))))))) = s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK4('const.option.SOME_1'(s(sK0,happ(s(fun('type.option.option'(sK0),sK0),X25),s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2)))))),sK0))))) ) | ($spl10 | $spl82)),
  inference(superposition,[],[f483,f2488])).
fof(f4713,plain,(
  ( ! [X26] : (s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,happ(s(fun('type.option.option'(sK0),sK0),X26),s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))))))))),s('type.option.option'(fun(sK0,sK1)),sK3)))) ) | $spl168),
  inference(cnf_transformation,[],[f4713_D])).
fof(f4713_D,plain,(
  ( ! [X26] : (s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,happ(s(fun('type.option.option'(sK0),sK0),X26),s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))))))))),s('type.option.option'(fun(sK0,sK1)),sK3)))) ) <=> ~$spl168),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl168])])).
fof(f4712,plain,(
  ( ! [X26] : (s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,happ(s(fun('type.option.option'(sK0),sK0),X26),s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))))))))),s('type.option.option'(fun(sK0,sK1)),sK3))) | s('type.option.option'(sK0),'const.option.NONE_0') != s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2)))) ) | ($spl12 | $spl82)),
  inference(forward_demodulation,[],[f4711,f101])).
fof(f4710,plain,(
  ( ! [X27] : (s(sK0,happ(s(fun('type.option.option'(sK0),sK0),X27),s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))))) = s(sK0,sK4('const.option.SOME_1'(s(sK0,happ(s(fun('type.option.option'(sK0),sK0),X27),s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2)))))),sK0))) ) | $spl166),
  inference(cnf_transformation,[],[f4710_D])).
fof(f4710_D,plain,(
  ( ! [X27] : (s(sK0,happ(s(fun('type.option.option'(sK0),sK0),X27),s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))))) = s(sK0,sK4('const.option.SOME_1'(s(sK0,happ(s(fun('type.option.option'(sK0),sK0),X27),s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2)))))),sK0))) ) <=> ~$spl166),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl166])])).
fof(f2715,plain,(
  ( ! [X27] : (s('type.option.option'(sK0),'const.option.NONE_0') != s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))) | s(sK0,happ(s(fun('type.option.option'(sK0),sK0),X27),s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))))) = s(sK0,sK4('const.option.SOME_1'(s(sK0,happ(s(fun('type.option.option'(sK0),sK0),X27),s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2)))))),sK0))) ) | ($spl10 | $spl82)),
  inference(superposition,[],[f744,f2488])).
fof(f4708,plain,(
  ( ! [X1] : (s('type.option.option'('type.option.option'(sK0)),'const.option.NONE_0') = s('type.option.option'('type.option.option'(sK0)),'const.option.SOME_1'(s('type.option.option'(sK0),X1))) | s('type.option.option'(sK0),X1) = s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK4(X1,sK0))))) ) | $spl164),
  inference(cnf_transformation,[],[f4708_D])).
fof(f4708_D,plain,(
  ( ! [X1] : (s('type.option.option'('type.option.option'(sK0)),'const.option.NONE_0') = s('type.option.option'('type.option.option'(sK0)),'const.option.SOME_1'(s('type.option.option'(sK0),X1))) | s('type.option.option'(sK0),X1) = s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK4(X1,sK0))))) ) <=> ~$spl164),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl164])])).
fof(f2803,plain,(
  ( ! [X1] : (s('type.option.option'(sK0),'const.option.NONE_0') != s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))) | s('type.option.option'('type.option.option'(sK0)),'const.option.NONE_0') = s('type.option.option'('type.option.option'(sK0)),'const.option.SOME_1'(s('type.option.option'(sK0),X1))) | s('type.option.option'(sK0),X1) = s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK4(X1,sK0))))) ) | $spl82),
  inference(superposition,[],[f2462,f47])).
fof(f4704,plain,(
  ( ! [X16] : (s('type.option.option'('type.option.option'(sK0)),'const.option.NONE_0') != s('type.option.option'('type.option.option'(sK0)),'const.option.SOME_1'(s('type.option.option'(sK0),X16))) | s('type.option.option'(sK0),X16) = s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK4(X16,sK0))))) ) | $spl162),
  inference(cnf_transformation,[],[f4704_D])).
fof(f4704_D,plain,(
  ( ! [X16] : (s('type.option.option'('type.option.option'(sK0)),'const.option.NONE_0') != s('type.option.option'('type.option.option'(sK0)),'const.option.SOME_1'(s('type.option.option'(sK0),X16))) | s('type.option.option'(sK0),X16) = s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK4(X16,sK0))))) ) <=> ~$spl162),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl162])])).
fof(f2838,plain,(
  ( ! [X16] : (s('type.option.option'('type.option.option'(sK0)),'const.option.NONE_0') != s('type.option.option'('type.option.option'(sK0)),'const.option.SOME_1'(s('type.option.option'(sK0),X16))) | s('type.option.option'(sK0),'const.option.NONE_0') = s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))) | s('type.option.option'(sK0),X16) = s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK4(X16,sK0))))) ) | $spl82),
  inference(superposition,[],[f2467,f47])).
fof(f2905,plain,(
  ( ! [X2] : (s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))) = s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK4(happ(s(fun('type.option.option'(sK0),'type.option.option'(sK0)),X2),s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2)))),sK0))))) ) | $spl104),
  inference(cnf_transformation,[],[f2905_D])).
fof(f2905_D,plain,(
  ( ! [X2] : (s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))) = s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK4(happ(s(fun('type.option.option'(sK0),'type.option.option'(sK0)),X2),s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2)))),sK0))))) ) <=> ~$spl104),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl104])])).
fof(f4703,plain,(
  ( ! [X1] : (s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))) = s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK4(happ(s(fun('type.option.option'(sK0),'type.option.option'(sK0)),X1),s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2)))),sK0)))) | s('type.option.option'(sK0),'const.option.NONE_0') = s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2)))) ) | $spl82),
  inference(forward_demodulation,[],[f2866,f2853])).
fof(f2866,plain,(
  ( ! [X1] : (s('type.option.option'(sK0),'const.option.NONE_0') = s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))) | s('type.option.option'(sK0),happ(s(fun('type.option.option'(sK0),'type.option.option'(sK0)),X1),s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))))) = s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK4(happ(s(fun('type.option.option'(sK0),'type.option.option'(sK0)),X1),s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2)))),sK0))))) ) | $spl82),
  inference(superposition,[],[f2853,f47])).
fof(f4702,plain,(
  ( ! [X0] : (s(sK0,sK2) = s(sK0,sK4(happ(s(fun('type.option.option'(sK0),'type.option.option'(sK0)),X0),s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2)))),sK0))) ) | $spl160),
  inference(cnf_transformation,[],[f4702_D])).
fof(f4702_D,plain,(
  ( ! [X0] : (s(sK0,sK2) = s(sK0,sK4(happ(s(fun('type.option.option'(sK0),'type.option.option'(sK0)),X0),s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2)))),sK0))) ) <=> ~$spl160),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl160])])).
fof(f2898,plain,(
  ( ! [X0] : (s('type.option.option'(sK0),'const.option.NONE_0') = s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))) | s(sK0,sK2) = s(sK0,sK4(happ(s(fun('type.option.option'(sK0),'type.option.option'(sK0)),X0),s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2)))),sK0))) ) | ($spl10 | $spl82)),
  inference(forward_demodulation,[],[f2891,f2853])).
fof(f2891,plain,(
  ( ! [X0] : (s(sK0,sK2) = s(sK0,sK4(happ(s(fun('type.option.option'(sK0),'type.option.option'(sK0)),X0),s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2)))),sK0)) | s('type.option.option'(sK0),'const.option.NONE_0') = s('type.option.option'(sK0),happ(s(fun('type.option.option'(sK0),'type.option.option'(sK0)),X0),s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2)))))) ) | ($spl10 | $spl82)),
  inference(trivial_inequality_removal,[],[f2869])).
fof(f2869,plain,(
  ( ! [X0] : (s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))) != s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))) | s(sK0,sK2) = s(sK0,sK4(happ(s(fun('type.option.option'(sK0),'type.option.option'(sK0)),X0),s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2)))),sK0)) | s('type.option.option'(sK0),'const.option.NONE_0') = s('type.option.option'(sK0),happ(s(fun('type.option.option'(sK0),'type.option.option'(sK0)),X0),s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2)))))) ) | ($spl10 | $spl82)),
  inference(superposition,[],[f1335,f2853])).
fof(f1335,plain,(
  ( ! [X4] : (s('type.option.option'(sK0),X4) != s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))) | s(sK0,sK2) = s(sK0,sK4(X4,sK0)) | s('type.option.option'(sK0),'const.option.NONE_0') = s('type.option.option'(sK0),X4)) ) | $spl10),
  inference(forward_demodulation,[],[f737,f741])).
fof(f737,plain,(
  ( ! [X4] : (s('type.option.option'(sK0),X4) != s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))) | s(sK0,sK4(X4,sK0)) = s(sK0,sK4('const.option.SOME_1'(s(sK0,sK2)),sK0)) | s('type.option.option'(sK0),'const.option.NONE_0') = s('type.option.option'(sK0),X4)) ) | $spl10),
  inference(superposition,[],[f493,f47])).
fof(f4701,plain,(
  ( ! [X6] : (s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))) = s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK4(happ(s(fun('type.option.option'(sK0),'type.option.option'(sK0)),X6),s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2)))),sK0)))) | s('type.option.option'(sK0),'const.option.NONE_0') = s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2)))) ) | $spl82),
  inference(forward_demodulation,[],[f2875,f2853])).
fof(f2875,plain,(
  ( ! [X6] : (s('type.option.option'(sK0),'const.option.NONE_0') = s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))) | s('type.option.option'(sK0),happ(s(fun('type.option.option'(sK0),'type.option.option'(sK0)),X6),s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))))) = s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK4(happ(s(fun('type.option.option'(sK0),'type.option.option'(sK0)),X6),s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2)))),sK0))))) ) | $spl82),
  inference(superposition,[],[f47,f2853])).
fof(f4700,plain,(
  ( ! [X77] : (s(sK0,X77) != s(sK0,sK4('const.option.SOME_1'(s(sK0,sK2)),sK0)) | s('type.option.option'(sK0),'const.option.NONE_0') = s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,X77)))) ) | $spl158),
  inference(cnf_transformation,[],[f4700_D])).
fof(f4700_D,plain,(
  ( ! [X77] : (s(sK0,X77) != s(sK0,sK4('const.option.SOME_1'(s(sK0,sK2)),sK0)) | s('type.option.option'(sK0),'const.option.NONE_0') = s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,X77)))) ) <=> ~$spl158),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl158])])).
fof(f3928,plain,(
  ( ! [X77] : (s('type.option.option'(sK0),'const.option.NONE_0') != s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))) | s(sK0,X77) != s(sK0,sK4('const.option.SOME_1'(s(sK0,sK2)),sK0)) | s('type.option.option'(sK0),'const.option.NONE_0') = s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,X77)))) ) | ($spl10 | $spl82)),
  inference(superposition,[],[f3896,f741])).
fof(f4698,plain,(
  s('type.option.option'(sK0),sK4('const.option.SOME_1'(s('type.option.option'(sK0),'const.option.NONE_0')),'type.option.option'(sK0))) = s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK4(sK4('const.option.SOME_1'(s('type.option.option'(sK0),'const.option.NONE_0')),'type.option.option'(sK0)),sK0)))) | $spl156),
  inference(cnf_transformation,[],[f4698_D])).
fof(f4698_D,plain,(
  s('type.option.option'(sK0),sK4('const.option.SOME_1'(s('type.option.option'(sK0),'const.option.NONE_0')),'type.option.option'(sK0))) = s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK4(sK4('const.option.SOME_1'(s('type.option.option'(sK0),'const.option.NONE_0')),'type.option.option'(sK0)),sK0)))) <=> ~$spl156),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl156])])).
fof(f4591,plain,(
  s('type.option.option'(sK0),'const.option.NONE_0') != s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))) | s('type.option.option'(sK0),sK4('const.option.SOME_1'(s('type.option.option'(sK0),'const.option.NONE_0')),'type.option.option'(sK0))) = s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK4(sK4('const.option.SOME_1'(s('type.option.option'(sK0),'const.option.NONE_0')),'type.option.option'(sK0)),sK0)))) | $spl41),
  inference(superposition,[],[f1531,f47])).
fof(f4689,plain,(
  ( ! [X0] : (s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),'const.option.NONE_0'))) != s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),X0))) | s('type.option.option'(sK1),X0) = s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,sK4(X0,sK1))))) ) | $spl154),
  inference(cnf_transformation,[],[f4689_D])).
fof(f4689_D,plain,(
  ( ! [X0] : (s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),'const.option.NONE_0'))) != s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),X0))) | s('type.option.option'(sK1),X0) = s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,sK4(X0,sK1))))) ) <=> ~$spl154),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl154])])).
fof(f73,plain,(
  s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(sK0,sK1)),sK3),s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))))) | $spl3),
  inference(cnf_transformation,[],[f73_D])).
fof(f73_D,plain,(
  s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(sK0,sK1)),sK3),s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))))) <=> ~$spl3),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl3])])).
fof(f2972,plain,(
  ( ! [X0] : (s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(sK0,sK1)),sK3),s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))))) | s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),'const.option.NONE_0'))) != s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),X0))) | s('type.option.option'(sK1),X0) = s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,sK4(X0,sK1))))) ) | $spl98),
  inference(superposition,[],[f2646,f47])).
fof(f2646,plain,(
  ( ! [X0] : (s('type.option.option'(sK1),X0) != s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(sK0,sK1)),sK3),s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))))) | s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),'const.option.NONE_0'))) != s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),X0)))) ) | $spl98),
  inference(backward_demodulation,[],[f2603,f82])).
fof(f4682,plain,(
  ( ! [X0] : (s('type.option.option'('type.option.option'(fun(fun(sK0,sK1),sK1))),'const.option.SOME_1'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),X0))) != s('type.option.option'('type.option.option'(fun(fun(sK0,sK1),sK1))),'const.option.SOME_1'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))))) | s('type.option.option'(fun(fun(sK0,sK1),sK1)),X0) = s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),sK4(X0,fun(fun(sK0,sK1),sK1)))))) ) | $spl152),
  inference(cnf_transformation,[],[f4682_D])).
fof(f4682_D,plain,(
  ( ! [X0] : (s('type.option.option'('type.option.option'(fun(fun(sK0,sK1),sK1))),'const.option.SOME_1'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),X0))) != s('type.option.option'('type.option.option'(fun(fun(sK0,sK1),sK1))),'const.option.SOME_1'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))))) | s('type.option.option'(fun(fun(sK0,sK1),sK1)),X0) = s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),sK4(X0,fun(fun(sK0,sK1),sK1)))))) ) <=> ~$spl152),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl152])])).
fof(f3364,plain,(
  ( ! [X0] : (s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(sK0,sK1)),sK3),s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))))) | s('type.option.option'('type.option.option'(fun(fun(sK0,sK1),sK1))),'const.option.SOME_1'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),X0))) != s('type.option.option'('type.option.option'(fun(fun(sK0,sK1),sK1))),'const.option.SOME_1'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))))) | s('type.option.option'(fun(fun(sK0,sK1),sK1)),X0) = s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),sK4(X0,fun(fun(sK0,sK1),sK1)))))) )),
  inference(forward_demodulation,[],[f3342,f41])).
fof(f3342,plain,(
  ( ! [X0] : (s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(sK0,sK1)),sK3),s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))))) != s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.NONE_0'),s('type.option.option'(fun(sK0,sK1)),sK3))) | s('type.option.option'('type.option.option'(fun(fun(sK0,sK1),sK1))),'const.option.SOME_1'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),X0))) != s('type.option.option'('type.option.option'(fun(fun(sK0,sK1),sK1))),'const.option.SOME_1'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))))) | s('type.option.option'(fun(fun(sK0,sK1),sK1)),X0) = s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),sK4(X0,fun(fun(sK0,sK1),sK1)))))) )),
  inference(superposition,[],[f60,f47])).
fof(f4681,plain,(
  s('type.option.option'('type.option.option'(fun(fun(sK0,sK1),sK1))),'const.option.SOME_1'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.NONE_0'))) != s('type.option.option'('type.option.option'(fun(fun(sK0,sK1),sK1))),'const.option.SOME_1'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))))) | s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(sK0,sK1)),sK3),s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))))) | $spl82),
  inference(forward_demodulation,[],[f4680,f42])).
fof(f4680,plain,(
  ( ! [X9] : (s('type.option.option'('type.option.option'(fun(fun(sK0,sK1),sK1))),'const.option.SOME_1'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))))) != s('type.option.option'('type.option.option'(fun(fun(sK0,sK1),sK1))),'const.option.SOME_1'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.OPTION_MAP_2'(s(fun('type.option.option'(sK0),fun(fun(sK0,sK1),sK1)),X9),s('type.option.option'('type.option.option'(sK0)),'const.option.NONE_0'))))) | s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(sK0,sK1)),sK3),s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2)))))) ) | $spl82),
  inference(forward_demodulation,[],[f4679,f2263])).
fof(f4679,plain,(
  ( ! [X9] : (s('type.option.option'('type.option.option'(fun(fun(sK0,sK1),sK1))),'const.option.SOME_1'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))))) != s('type.option.option'('type.option.option'(fun(fun(sK0,sK1),sK1))),'const.option.SOME_1'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.OPTION_MAP_2'(s(fun('type.option.option'(sK0),fun(fun(sK0,sK1),sK1)),X9),s('type.option.option'('type.option.option'(sK0)),'const.option.SOME_1'(s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))))))))) | s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(sK0,sK1)),sK3),s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2)))))) ) | $spl82),
  inference(forward_demodulation,[],[f3365,f49])).
fof(f3365,plain,(
  ( ! [X9] : (s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(sK0,sK1)),sK3),s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))))) | s('type.option.option'('type.option.option'(fun(fun(sK0,sK1),sK1))),'const.option.SOME_1'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))))) != s('type.option.option'('type.option.option'(fun(fun(sK0,sK1),sK1))),'const.option.SOME_1'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),happ(s(fun('type.option.option'(sK0),fun(fun(sK0,sK1),sK1)),X9),s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2)))))))))) ) | $spl82),
  inference(forward_demodulation,[],[f3347,f41])).
fof(f3347,plain,(
  ( ! [X9] : (s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(sK0,sK1)),sK3),s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))))) != s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.NONE_0'),s('type.option.option'(fun(sK0,sK1)),sK3))) | s('type.option.option'('type.option.option'(fun(fun(sK0,sK1),sK1))),'const.option.SOME_1'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))))) != s('type.option.option'('type.option.option'(fun(fun(sK0,sK1),sK1))),'const.option.SOME_1'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),happ(s(fun('type.option.option'(sK0),fun(fun(sK0,sK1),sK1)),X9),s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2)))))))))) ) | $spl82),
  inference(superposition,[],[f60,f2488])).
fof(f4678,plain,(
  s('type.option.option'('type.option.option'(fun(fun(sK0,sK1),sK1))),'const.option.SOME_1'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.NONE_0'))) != s('type.option.option'('type.option.option'(fun(fun(sK0,sK1),sK1))),'const.option.SOME_1'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))))) | s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(sK0,sK1)),sK3),s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2)))))),
  inference(forward_demodulation,[],[f3367,f41])).
fof(f3367,plain,(
  ( ! [X14,X13] : (s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(sK0,sK1)),sK3),s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))))) | s('type.option.option'('type.option.option'(fun(fun(sK0,sK1),sK1))),'const.option.SOME_1'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))))) != s('type.option.option'('type.option.option'(fun(fun(sK0,sK1),sK1))),'const.option.SOME_1'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(X13,fun(fun(sK0,sK1),sK1))),'const.option.NONE_0'),s('type.option.option'(X13),X14)))))) )),
  inference(forward_demodulation,[],[f3349,f41])).
fof(f3349,plain,(
  ( ! [X14,X13] : (s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(sK0,sK1)),sK3),s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))))) != s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.NONE_0'),s('type.option.option'(fun(sK0,sK1)),sK3))) | s('type.option.option'('type.option.option'(fun(fun(sK0,sK1),sK1))),'const.option.SOME_1'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))))) != s('type.option.option'('type.option.option'(fun(fun(sK0,sK1),sK1))),'const.option.SOME_1'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(X13,fun(fun(sK0,sK1),sK1))),'const.option.NONE_0'),s('type.option.option'(X13),X14)))))) )),
  inference(superposition,[],[f60,f41])).
fof(f4677,plain,(
  s('type.option.option'('type.option.option'(fun(fun(sK0,sK1),sK1))),'const.option.SOME_1'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.NONE_0'))) != s('type.option.option'('type.option.option'(fun(fun(sK0,sK1),sK1))),'const.option.SOME_1'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))))) | s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(sK0,sK1)),sK3),s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2)))))),
  inference(forward_demodulation,[],[f3371,f42])).
fof(f3371,plain,(
  ( ! [X17,X16] : (s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(sK0,sK1)),sK3),s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))))) | s('type.option.option'('type.option.option'(fun(fun(sK0,sK1),sK1))),'const.option.SOME_1'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))))) != s('type.option.option'('type.option.option'(fun(fun(sK0,sK1),sK1))),'const.option.SOME_1'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.OPTION_MAP_2'(s(fun(X16,fun(fun(sK0,sK1),sK1)),X17),s('type.option.option'(X16),'const.option.NONE_0')))))) )),
  inference(forward_demodulation,[],[f3351,f41])).
fof(f3351,plain,(
  ( ! [X17,X16] : (s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(sK0,sK1)),sK3),s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))))) != s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.NONE_0'),s('type.option.option'(fun(sK0,sK1)),sK3))) | s('type.option.option'('type.option.option'(fun(fun(sK0,sK1),sK1))),'const.option.SOME_1'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))))) != s('type.option.option'('type.option.option'(fun(fun(sK0,sK1),sK1))),'const.option.SOME_1'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.OPTION_MAP_2'(s(fun(X16,fun(fun(sK0,sK1),sK1)),X17),s('type.option.option'(X16),'const.option.NONE_0')))))) )),
  inference(superposition,[],[f60,f42])).
fof(f3360,plain,(
  s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(sK0,sK1)),sK3),s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))))) | s('type.option.option'('type.option.option'(fun(fun(sK0,sK1),sK1))),'const.option.SOME_1'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.NONE_0'))) != s('type.option.option'('type.option.option'(fun(fun(sK0,sK1),sK1))),'const.option.SOME_1'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2)))))))),
  inference(superposition,[],[f60,f41])).
fof(f4676,plain,(
  ( ! [X1] : (s('type.option.option'('type.option.option'(fun(fun(sK0,sK1),sK1))),'const.option.SOME_1'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),X1))) != s('type.option.option'('type.option.option'(fun(fun(sK0,sK1),sK1))),'const.option.SOME_1'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))))) | s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),X1),s('type.option.option'(fun(sK0,sK1)),sK3))) = s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,sK4('const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),X1),s('type.option.option'(fun(sK0,sK1)),sK3)),sK1))))) ) | $spl150),
  inference(cnf_transformation,[],[f4676_D])).
fof(f4676_D,plain,(
  ( ! [X1] : (s('type.option.option'('type.option.option'(fun(fun(sK0,sK1),sK1))),'const.option.SOME_1'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),X1))) != s('type.option.option'('type.option.option'(fun(fun(sK0,sK1),sK1))),'const.option.SOME_1'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))))) | s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),X1),s('type.option.option'(fun(sK0,sK1)),sK3))) = s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,sK4('const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),X1),s('type.option.option'(fun(sK0,sK1)),sK3)),sK1))))) ) <=> ~$spl150),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl150])])).
fof(f3361,plain,(
  ( ! [X1] : (s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(sK0,sK1)),sK3),s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))))) | s('type.option.option'('type.option.option'(fun(fun(sK0,sK1),sK1))),'const.option.SOME_1'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),X1))) != s('type.option.option'('type.option.option'(fun(fun(sK0,sK1),sK1))),'const.option.SOME_1'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))))) | s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),X1),s('type.option.option'(fun(sK0,sK1)),sK3))) = s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,sK4('const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),X1),s('type.option.option'(fun(sK0,sK1)),sK3)),sK1))))) )),
  inference(superposition,[],[f60,f47])).
fof(f72,plain,(
  s('type.option.option'(sK1),'const.option.NONE_0') = s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(sK0,sK1)),sK3),s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))))) | $spl2),
  inference(cnf_transformation,[],[f72_D])).
fof(f72_D,plain,(
  s('type.option.option'(sK1),'const.option.NONE_0') = s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(sK0,sK1)),sK3),s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))))) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f4672,plain,(
  ( ! [X2] : (s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))) = s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK4(happ(s(fun('type.option.option'(sK0),'type.option.option'(sK0)),X2),s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2)))),sK0)))) | s('type.option.option'(sK1),'const.option.NONE_0') = s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(sK0,sK1)),sK3),s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2)))))) ) | ($spl12 | $spl82)),
  inference(forward_demodulation,[],[f4313,f2853])).
fof(f4313,plain,(
  ( ! [X2] : (s('type.option.option'(sK1),'const.option.NONE_0') = s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(sK0,sK1)),sK3),s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))))) | s('type.option.option'(sK0),happ(s(fun('type.option.option'(sK0),'type.option.option'(sK0)),X2),s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))))) = s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK4(happ(s(fun('type.option.option'(sK0),'type.option.option'(sK0)),X2),s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2)))),sK0))))) ) | ($spl12 | $spl82)),
  inference(superposition,[],[f2496,f2853])).
fof(f4671,plain,(
  ( ! [X5] : (s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),'const.option.NONE_0'))) != s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(sK0,sK1)),sK3),s('type.option.option'(sK0),X5))))) | s('type.option.option'(sK0),X5) = s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK4(X5,sK0))))) ) | $spl148),
  inference(cnf_transformation,[],[f4671_D])).
fof(f4671_D,plain,(
  ( ! [X5] : (s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),'const.option.NONE_0'))) != s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(sK0,sK1)),sK3),s('type.option.option'(sK0),X5))))) | s('type.option.option'(sK0),X5) = s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK4(X5,sK0))))) ) <=> ~$spl148),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl148])])).
fof(f4336,plain,(
  ( ! [X5] : (s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(sK0,sK1)),sK3),s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))))) | s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),'const.option.NONE_0'))) != s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(sK0,sK1)),sK3),s('type.option.option'(sK0),X5))))) | s('type.option.option'(sK0),X5) = s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK4(X5,sK0))))) ) | ($spl12 | $spl98)),
  inference(superposition,[],[f2646,f2496])).
fof(f4665,plain,(
  $false | ($spl30 | $spl82 | $spl103)),
  inference(subsumption_resolution,[],[f4664,f2903])).
fof(f2903,plain,(
  s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))) != s('type.option.option'(sK0),sK4('const.option.SOME_1'(s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2)))),'type.option.option'(sK0))) | $spl103),
  inference(cnf_transformation,[],[f2903_D])).
fof(f2903_D,plain,(
  s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))) != s('type.option.option'(sK0),sK4('const.option.SOME_1'(s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2)))),'type.option.option'(sK0))) <=> ~$spl103),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl103])])).
fof(f4664,plain,(
  s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))) = s('type.option.option'(sK0),sK4('const.option.SOME_1'(s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2)))),'type.option.option'(sK0))) | ($spl30 | $spl82)),
  inference(forward_demodulation,[],[f4649,f2853])).
fof(f4649,plain,(
  ( ! [X6] : (s('type.option.option'(sK0),sK4('const.option.SOME_1'(s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2)))),'type.option.option'(sK0))) = s('type.option.option'(sK0),happ(s(fun('type.option.option'(sK0),'type.option.option'(sK0)),X6),s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2)))))) ) | ($spl30 | $spl82)),
  inference(trivial_inequality_removal,[],[f4630])).
fof(f4630,plain,(
  ( ! [X6] : (s('type.option.option'('type.option.option'(sK0)),'const.option.NONE_0') != s('type.option.option'('type.option.option'(sK0)),'const.option.NONE_0') | s('type.option.option'(sK0),sK4('const.option.SOME_1'(s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2)))),'type.option.option'(sK0))) = s('type.option.option'(sK0),happ(s(fun('type.option.option'(sK0),'type.option.option'(sK0)),X6),s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2)))))) ) | ($spl30 | $spl82)),
  inference(superposition,[],[f2705,f4578])).
fof(f2705,plain,(
  ( ! [X6,X8,X7] : (s('type.option.option'(X6),'const.option.NONE_0') != s('type.option.option'(X6),'const.option.SOME_1'(s(X6,X8))) | s(X6,X8) = s(X6,happ(s(fun('type.option.option'(sK0),X6),X7),s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2)))))) ) | $spl82),
  inference(superposition,[],[f43,f2488])).
fof(f4662,plain,(
  $false | ($spl30 | $spl82 | $spl103)),
  inference(subsumption_resolution,[],[f4651,f2903])).
fof(f4651,plain,(
  s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))) = s('type.option.option'(sK0),sK4('const.option.SOME_1'(s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2)))),'type.option.option'(sK0))) | ($spl30 | $spl82)),
  inference(trivial_inequality_removal,[],[f4623])).
fof(f4623,plain,(
  s('type.option.option'('type.option.option'(sK0)),'const.option.NONE_0') != s('type.option.option'('type.option.option'(sK0)),'const.option.NONE_0') | s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))) = s('type.option.option'(sK0),sK4('const.option.SOME_1'(s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2)))),'type.option.option'(sK0))) | ($spl30 | $spl82)),
  inference(superposition,[],[f2467,f4578])).
fof(f4577,plain,(
  $false | ($spl37 | $spl82 | $spl102)),
  inference(subsumption_resolution,[],[f1466,f3446])).
fof(f4574,plain,(
  ( ! [X59,X58] : (s('type.option.option'('type.option.option'(sK0)),X59) != s('type.option.option'('type.option.option'(sK0)),'const.option.SOME_1'(s('type.option.option'(sK0),X58))) | s('type.option.option'(sK0),X58) = s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK4(X58,sK0)))) | s('type.option.option'('type.option.option'('type.option.option'(sK0))),'const.option.NONE_0') = s('type.option.option'('type.option.option'('type.option.option'(sK0))),'const.option.SOME_1'(s('type.option.option'('type.option.option'(sK0)),X59)))) ) | $spl146),
  inference(cnf_transformation,[],[f4574_D])).
fof(f4574_D,plain,(
  ( ! [X59,X58] : (s('type.option.option'('type.option.option'(sK0)),X59) != s('type.option.option'('type.option.option'(sK0)),'const.option.SOME_1'(s('type.option.option'(sK0),X58))) | s('type.option.option'(sK0),X58) = s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK4(X58,sK0)))) | s('type.option.option'('type.option.option'('type.option.option'(sK0))),'const.option.NONE_0') = s('type.option.option'('type.option.option'('type.option.option'(sK0))),'const.option.SOME_1'(s('type.option.option'('type.option.option'(sK0)),X59)))) ) <=> ~$spl146),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl146])])).
fof(f4573,plain,(
  s('type.option.option'('type.option.option'('type.option.option'(sK0))),'const.option.NONE_0') != s('type.option.option'('type.option.option'('type.option.option'(sK0))),'const.option.SOME_1'(s('type.option.option'('type.option.option'(sK0)),'const.option.SOME_1'(s('type.option.option'(sK0),'const.option.NONE_0'))))) | $spl145),
  inference(cnf_transformation,[],[f4573_D])).
fof(f4573_D,plain,(
  s('type.option.option'('type.option.option'('type.option.option'(sK0))),'const.option.NONE_0') != s('type.option.option'('type.option.option'('type.option.option'(sK0))),'const.option.SOME_1'(s('type.option.option'('type.option.option'(sK0)),'const.option.SOME_1'(s('type.option.option'(sK0),'const.option.NONE_0'))))) <=> ~$spl145),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl145])])).
fof(f4542,plain,(
  ( ! [X59,X58] : (s('type.option.option'('type.option.option'('type.option.option'(sK0))),'const.option.NONE_0') != s('type.option.option'('type.option.option'('type.option.option'(sK0))),'const.option.SOME_1'(s('type.option.option'('type.option.option'(sK0)),'const.option.SOME_1'(s('type.option.option'(sK0),'const.option.NONE_0'))))) | s('type.option.option'('type.option.option'(sK0)),X59) != s('type.option.option'('type.option.option'(sK0)),'const.option.SOME_1'(s('type.option.option'(sK0),X58))) | s('type.option.option'('type.option.option'('type.option.option'(sK0))),'const.option.NONE_0') = s('type.option.option'('type.option.option'('type.option.option'(sK0))),'const.option.SOME_1'(s('type.option.option'('type.option.option'(sK0)),X59))) | s('type.option.option'(sK0),X58) = s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK4(X58,sK0))))) ) | ($spl34 | $spl82)),
  inference(superposition,[],[f3896,f1464])).
fof(f4571,plain,(
  ( ! [X57,X56] : (s('type.option.option'('type.option.option'(sK0)),'const.option.SOME_1'(s('type.option.option'(sK0),X56))) = s('type.option.option'('type.option.option'(sK0)),happ(s(fun('type.option.option'(sK0),'type.option.option'('type.option.option'(sK0))),X57),s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))))) | s('type.option.option'(sK0),X56) = s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK4(X56,sK0))))) ) | $spl142),
  inference(cnf_transformation,[],[f4571_D])).
fof(f4571_D,plain,(
  ( ! [X57,X56] : (s('type.option.option'('type.option.option'(sK0)),'const.option.SOME_1'(s('type.option.option'(sK0),X56))) = s('type.option.option'('type.option.option'(sK0)),happ(s(fun('type.option.option'(sK0),'type.option.option'('type.option.option'(sK0))),X57),s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))))) | s('type.option.option'(sK0),X56) = s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK4(X56,sK0))))) ) <=> ~$spl142),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl142])])).
fof(f4541,plain,(
  ( ! [X57,X56] : (s('type.option.option'('type.option.option'('type.option.option'(sK0))),'const.option.NONE_0') != s('type.option.option'('type.option.option'('type.option.option'(sK0))),'const.option.SOME_1'(s('type.option.option'('type.option.option'(sK0)),'const.option.SOME_1'(s('type.option.option'(sK0),'const.option.NONE_0'))))) | s('type.option.option'('type.option.option'(sK0)),'const.option.SOME_1'(s('type.option.option'(sK0),X56))) = s('type.option.option'('type.option.option'(sK0)),happ(s(fun('type.option.option'(sK0),'type.option.option'('type.option.option'(sK0))),X57),s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))))) | s('type.option.option'(sK0),X56) = s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK4(X56,sK0))))) ) | ($spl34 | $spl82)),
  inference(superposition,[],[f2705,f1464])).
fof(f4570,plain,(
  ( ! [X55] : (s('type.option.option'('type.option.option'(sK0)),'const.option.SOME_1'(s('type.option.option'(sK0),'const.option.NONE_0'))) != s('type.option.option'('type.option.option'(sK0)),happ(s(fun('type.option.option'(sK0),'type.option.option'('type.option.option'(sK0))),X55),s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2)))))) ) | $spl140),
  inference(cnf_transformation,[],[f4570_D])).
fof(f4570_D,plain,(
  ( ! [X55] : (s('type.option.option'('type.option.option'(sK0)),'const.option.SOME_1'(s('type.option.option'(sK0),'const.option.NONE_0'))) != s('type.option.option'('type.option.option'(sK0)),happ(s(fun('type.option.option'(sK0),'type.option.option'('type.option.option'(sK0))),X55),s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2)))))) ) <=> ~$spl140),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl140])])).
fof(f4540,plain,(
  ( ! [X54,X55] : (s('type.option.option'('type.option.option'(sK0)),'const.option.SOME_1'(s('type.option.option'(sK0),'const.option.NONE_0'))) != s('type.option.option'('type.option.option'(sK0)),happ(s(fun('type.option.option'(sK0),'type.option.option'('type.option.option'(sK0))),X55),s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))))) | s('type.option.option'('type.option.option'('type.option.option'(sK0))),'const.option.NONE_0') = s('type.option.option'('type.option.option'('type.option.option'(sK0))),'const.option.SOME_1'(s('type.option.option'('type.option.option'(sK0)),'const.option.SOME_1'(s('type.option.option'(sK0),X54))))) | s('type.option.option'(sK0),X54) = s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK4(X54,sK0))))) ) | ($spl34 | $spl82)),
  inference(superposition,[],[f2699,f1464])).
fof(f4565,plain,(
  ( ! [X55] : (s('type.option.option'('type.option.option'(sK0)),X55) != s('type.option.option'('type.option.option'(sK0)),'const.option.SOME_1'(s('type.option.option'(sK0),'const.option.NONE_0'))) | s('type.option.option'('type.option.option'('type.option.option'(sK0))),'const.option.NONE_0') = s('type.option.option'('type.option.option'('type.option.option'(sK0))),'const.option.SOME_1'(s('type.option.option'('type.option.option'(sK0)),X55)))) ) | $spl138),
  inference(cnf_transformation,[],[f4565_D])).
fof(f4565_D,plain,(
  ( ! [X55] : (s('type.option.option'('type.option.option'(sK0)),X55) != s('type.option.option'('type.option.option'(sK0)),'const.option.SOME_1'(s('type.option.option'(sK0),'const.option.NONE_0'))) | s('type.option.option'('type.option.option'('type.option.option'(sK0))),'const.option.NONE_0') = s('type.option.option'('type.option.option'('type.option.option'(sK0))),'const.option.SOME_1'(s('type.option.option'('type.option.option'(sK0)),X55)))) ) <=> ~$spl138),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl138])])).
fof(f4509,plain,(
  ( ! [X54,X55] : (s('type.option.option'('type.option.option'('type.option.option'(sK0))),'const.option.NONE_0') != s('type.option.option'('type.option.option'('type.option.option'(sK0))),'const.option.SOME_1'(s('type.option.option'('type.option.option'(sK0)),'const.option.SOME_1'(s('type.option.option'(sK0),X54))))) | s('type.option.option'('type.option.option'(sK0)),X55) != s('type.option.option'('type.option.option'(sK0)),'const.option.SOME_1'(s('type.option.option'(sK0),'const.option.NONE_0'))) | s('type.option.option'('type.option.option'('type.option.option'(sK0))),'const.option.NONE_0') = s('type.option.option'('type.option.option'('type.option.option'(sK0))),'const.option.SOME_1'(s('type.option.option'('type.option.option'(sK0)),X55))) | s('type.option.option'(sK0),X54) = s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK4(X54,sK0))))) ) | ($spl34 | $spl82)),
  inference(superposition,[],[f3896,f1464])).
fof(f4563,plain,(
  ( ! [X53] : (s('type.option.option'('type.option.option'(sK0)),'const.option.SOME_1'(s('type.option.option'(sK0),'const.option.NONE_0'))) = s('type.option.option'('type.option.option'(sK0)),happ(s(fun('type.option.option'(sK0),'type.option.option'('type.option.option'(sK0))),X53),s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2)))))) ) | $spl134),
  inference(cnf_transformation,[],[f4563_D])).
fof(f4563_D,plain,(
  ( ! [X53] : (s('type.option.option'('type.option.option'(sK0)),'const.option.SOME_1'(s('type.option.option'(sK0),'const.option.NONE_0'))) = s('type.option.option'('type.option.option'(sK0)),happ(s(fun('type.option.option'(sK0),'type.option.option'('type.option.option'(sK0))),X53),s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2)))))) ) <=> ~$spl134),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl134])])).
fof(f4508,plain,(
  ( ! [X52,X53] : (s('type.option.option'('type.option.option'('type.option.option'(sK0))),'const.option.NONE_0') != s('type.option.option'('type.option.option'('type.option.option'(sK0))),'const.option.SOME_1'(s('type.option.option'('type.option.option'(sK0)),'const.option.SOME_1'(s('type.option.option'(sK0),X52))))) | s('type.option.option'('type.option.option'(sK0)),'const.option.SOME_1'(s('type.option.option'(sK0),'const.option.NONE_0'))) = s('type.option.option'('type.option.option'(sK0)),happ(s(fun('type.option.option'(sK0),'type.option.option'('type.option.option'(sK0))),X53),s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))))) | s('type.option.option'(sK0),X52) = s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK4(X52,sK0))))) ) | ($spl34 | $spl82)),
  inference(superposition,[],[f2705,f1464])).
fof(f4366,plain,(
  ( ! [X35] : (s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),happ(s(fun('type.option.option'(sK0),'type.option.option'(sK1)),X35),s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2)))))) ) | $spl132),
  inference(cnf_transformation,[],[f4366_D])).
fof(f4366_D,plain,(
  ( ! [X35] : (s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),happ(s(fun('type.option.option'(sK0),'type.option.option'(sK1)),X35),s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2)))))) ) <=> ~$spl132),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl132])])).
fof(f4349,plain,(
  ( ! [X35,X34] : (s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),happ(s(fun('type.option.option'(sK0),'type.option.option'(sK1)),X35),s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))))) | s('type.option.option'('type.option.option'(sK1)),'const.option.NONE_0') = s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(sK0,sK1)),sK3),s('type.option.option'(sK0),X34))))) | s('type.option.option'(sK0),X34) = s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK4(X34,sK0))))) ) | ($spl12 | $spl82)),
  inference(superposition,[],[f2699,f2496])).
fof(f4217,plain,(
  ( ! [X25] : (s('type.option.option'('type.option.option'('type.option.option'(sK0))),X25) != s('type.option.option'('type.option.option'('type.option.option'(sK0))),'const.option.SOME_1'(s('type.option.option'('type.option.option'(sK0)),sK4('const.option.SOME_1'(s('type.option.option'('type.option.option'(sK0)),'const.option.NONE_0')),'type.option.option'('type.option.option'(sK0)))))) | s('type.option.option'('type.option.option'('type.option.option'('type.option.option'(sK0)))),'const.option.NONE_0') = s('type.option.option'('type.option.option'('type.option.option'('type.option.option'(sK0)))),'const.option.SOME_1'(s('type.option.option'('type.option.option'('type.option.option'(sK0))),X25)))) ) | $spl128),
  inference(cnf_transformation,[],[f4217_D])).
fof(f4217_D,plain,(
  ( ! [X25] : (s('type.option.option'('type.option.option'('type.option.option'(sK0))),X25) != s('type.option.option'('type.option.option'('type.option.option'(sK0))),'const.option.SOME_1'(s('type.option.option'('type.option.option'(sK0)),sK4('const.option.SOME_1'(s('type.option.option'('type.option.option'(sK0)),'const.option.NONE_0')),'type.option.option'('type.option.option'(sK0)))))) | s('type.option.option'('type.option.option'('type.option.option'('type.option.option'(sK0)))),'const.option.NONE_0') = s('type.option.option'('type.option.option'('type.option.option'('type.option.option'(sK0)))),'const.option.SOME_1'(s('type.option.option'('type.option.option'('type.option.option'(sK0))),X25)))) ) <=> ~$spl128),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl128])])).
fof(f4219,plain,(
  s('type.option.option'('type.option.option'('type.option.option'('type.option.option'(sK0)))),'const.option.NONE_0') != s('type.option.option'('type.option.option'('type.option.option'('type.option.option'(sK0)))),'const.option.SOME_1'(s('type.option.option'('type.option.option'('type.option.option'(sK0))),'const.option.SOME_1'(s('type.option.option'('type.option.option'(sK0)),'const.option.NONE_0'))))) | $spl131),
  inference(cnf_transformation,[],[f4219_D])).
fof(f4219_D,plain,(
  s('type.option.option'('type.option.option'('type.option.option'('type.option.option'(sK0)))),'const.option.NONE_0') != s('type.option.option'('type.option.option'('type.option.option'('type.option.option'(sK0)))),'const.option.SOME_1'(s('type.option.option'('type.option.option'('type.option.option'(sK0))),'const.option.SOME_1'(s('type.option.option'('type.option.option'(sK0)),'const.option.NONE_0'))))) <=> ~$spl131),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl131])])).
fof(f4205,plain,(
  ( ! [X25] : (s('type.option.option'('type.option.option'('type.option.option'('type.option.option'(sK0)))),'const.option.NONE_0') != s('type.option.option'('type.option.option'('type.option.option'('type.option.option'(sK0)))),'const.option.SOME_1'(s('type.option.option'('type.option.option'('type.option.option'(sK0))),'const.option.SOME_1'(s('type.option.option'('type.option.option'(sK0)),'const.option.NONE_0'))))) | s('type.option.option'('type.option.option'('type.option.option'(sK0))),X25) != s('type.option.option'('type.option.option'('type.option.option'(sK0))),'const.option.SOME_1'(s('type.option.option'('type.option.option'(sK0)),sK4('const.option.SOME_1'(s('type.option.option'('type.option.option'(sK0)),'const.option.NONE_0')),'type.option.option'('type.option.option'(sK0)))))) | s('type.option.option'('type.option.option'('type.option.option'('type.option.option'(sK0)))),'const.option.NONE_0') = s('type.option.option'('type.option.option'('type.option.option'('type.option.option'(sK0)))),'const.option.SOME_1'(s('type.option.option'('type.option.option'('type.option.option'(sK0))),X25)))) ) | ($spl82 | $spl123)),
  inference(superposition,[],[f3896,f3971])).
fof(f3971,plain,(
  s('type.option.option'('type.option.option'('type.option.option'(sK0))),'const.option.SOME_1'(s('type.option.option'('type.option.option'(sK0)),'const.option.NONE_0'))) = s('type.option.option'('type.option.option'('type.option.option'(sK0))),'const.option.SOME_1'(s('type.option.option'('type.option.option'(sK0)),sK4('const.option.SOME_1'(s('type.option.option'('type.option.option'(sK0)),'const.option.NONE_0')),'type.option.option'('type.option.option'(sK0)))))) | $spl123),
  inference(trivial_inequality_removal,[],[f3968])).
fof(f3968,plain,(
  s('type.option.option'('type.option.option'('type.option.option'(sK0))),'const.option.NONE_0') != s('type.option.option'('type.option.option'('type.option.option'(sK0))),'const.option.NONE_0') | s('type.option.option'('type.option.option'('type.option.option'(sK0))),'const.option.SOME_1'(s('type.option.option'('type.option.option'(sK0)),'const.option.NONE_0'))) = s('type.option.option'('type.option.option'('type.option.option'(sK0))),'const.option.SOME_1'(s('type.option.option'('type.option.option'(sK0)),sK4('const.option.SOME_1'(s('type.option.option'('type.option.option'(sK0)),'const.option.NONE_0')),'type.option.option'('type.option.option'(sK0)))))) | $spl123),
  inference(superposition,[],[f3955,f47])).
fof(f3956,plain,(
  ( ! [X60] : (s('type.option.option'('type.option.option'(sK1)),X60) != s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),sK4('const.option.SOME_1'(s('type.option.option'(sK1),'const.option.NONE_0')),'type.option.option'(sK1))))) | s('type.option.option'('type.option.option'('type.option.option'(sK1))),'const.option.NONE_0') = s('type.option.option'('type.option.option'('type.option.option'(sK1))),'const.option.SOME_1'(s('type.option.option'('type.option.option'(sK1)),X60)))) ) | $spl124),
  inference(cnf_transformation,[],[f3956_D])).
fof(f3956_D,plain,(
  ( ! [X60] : (s('type.option.option'('type.option.option'(sK1)),X60) != s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),sK4('const.option.SOME_1'(s('type.option.option'(sK1),'const.option.NONE_0')),'type.option.option'(sK1))))) | s('type.option.option'('type.option.option'('type.option.option'(sK1))),'const.option.NONE_0') = s('type.option.option'('type.option.option'('type.option.option'(sK1))),'const.option.SOME_1'(s('type.option.option'('type.option.option'(sK1)),X60)))) ) <=> ~$spl124),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl124])])).
fof(f3958,plain,(
  s('type.option.option'('type.option.option'('type.option.option'(sK1))),'const.option.NONE_0') != s('type.option.option'('type.option.option'('type.option.option'(sK1))),'const.option.SOME_1'(s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),'const.option.NONE_0'))))) | $spl127),
  inference(cnf_transformation,[],[f3958_D])).
fof(f3958_D,plain,(
  s('type.option.option'('type.option.option'('type.option.option'(sK1))),'const.option.NONE_0') != s('type.option.option'('type.option.option'('type.option.option'(sK1))),'const.option.SOME_1'(s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),'const.option.NONE_0'))))) <=> ~$spl127),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl127])])).
fof(f3916,plain,(
  ( ! [X60] : (s('type.option.option'('type.option.option'('type.option.option'(sK1))),'const.option.NONE_0') != s('type.option.option'('type.option.option'('type.option.option'(sK1))),'const.option.SOME_1'(s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),'const.option.NONE_0'))))) | s('type.option.option'('type.option.option'(sK1)),X60) != s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),sK4('const.option.SOME_1'(s('type.option.option'(sK1),'const.option.NONE_0')),'type.option.option'(sK1))))) | s('type.option.option'('type.option.option'('type.option.option'(sK1))),'const.option.NONE_0') = s('type.option.option'('type.option.option'('type.option.option'(sK1))),'const.option.SOME_1'(s('type.option.option'('type.option.option'(sK1)),X60)))) ) | ($spl82 | $spl115)),
  inference(superposition,[],[f3896,f3708])).
fof(f3953,plain,(
  ( ! [X59] : (s('type.option.option'('type.option.option'(sK0)),X59) != s('type.option.option'('type.option.option'(sK0)),'const.option.SOME_1'(s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))))) | s('type.option.option'('type.option.option'('type.option.option'(sK0))),'const.option.NONE_0') = s('type.option.option'('type.option.option'('type.option.option'(sK0))),'const.option.SOME_1'(s('type.option.option'('type.option.option'(sK0)),X59)))) ) | $spl120),
  inference(cnf_transformation,[],[f3953_D])).
fof(f3953_D,plain,(
  ( ! [X59] : (s('type.option.option'('type.option.option'(sK0)),X59) != s('type.option.option'('type.option.option'(sK0)),'const.option.SOME_1'(s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))))) | s('type.option.option'('type.option.option'('type.option.option'(sK0))),'const.option.NONE_0') = s('type.option.option'('type.option.option'('type.option.option'(sK0))),'const.option.SOME_1'(s('type.option.option'('type.option.option'(sK0)),X59)))) ) <=> ~$spl120),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl120])])).
fof(f3955,plain,(
  s('type.option.option'('type.option.option'('type.option.option'(sK0))),'const.option.NONE_0') != s('type.option.option'('type.option.option'('type.option.option'(sK0))),'const.option.SOME_1'(s('type.option.option'('type.option.option'(sK0)),'const.option.NONE_0'))) | $spl123),
  inference(cnf_transformation,[],[f3955_D])).
fof(f3955_D,plain,(
  s('type.option.option'('type.option.option'('type.option.option'(sK0))),'const.option.NONE_0') != s('type.option.option'('type.option.option'('type.option.option'(sK0))),'const.option.SOME_1'(s('type.option.option'('type.option.option'(sK0)),'const.option.NONE_0'))) <=> ~$spl123),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl123])])).
fof(f3915,plain,(
  ( ! [X59] : (s('type.option.option'('type.option.option'('type.option.option'(sK0))),'const.option.NONE_0') != s('type.option.option'('type.option.option'('type.option.option'(sK0))),'const.option.SOME_1'(s('type.option.option'('type.option.option'(sK0)),'const.option.NONE_0'))) | s('type.option.option'('type.option.option'(sK0)),X59) != s('type.option.option'('type.option.option'(sK0)),'const.option.SOME_1'(s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))))) | s('type.option.option'('type.option.option'('type.option.option'(sK0))),'const.option.NONE_0') = s('type.option.option'('type.option.option'('type.option.option'(sK0))),'const.option.SOME_1'(s('type.option.option'('type.option.option'(sK0)),X59)))) ) | $spl82),
  inference(superposition,[],[f3896,f2263])).
fof(f3913,plain,(
  ( ! [X57] : (s('type.option.option'('type.option.option'(fun(fun(sK0,sK1),sK1))),'const.option.NONE_0') != s('type.option.option'('type.option.option'(fun(fun(sK0,sK1),sK1))),'const.option.SOME_1'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))))) | s('type.option.option'(fun(fun(sK0,sK1),sK1)),X57) != s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),sK4('const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2)))),fun(fun(sK0,sK1),sK1))))) | s('type.option.option'('type.option.option'(fun(fun(sK0,sK1),sK1))),'const.option.NONE_0') = s('type.option.option'('type.option.option'(fun(fun(sK0,sK1),sK1))),'const.option.SOME_1'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),X57)))) ) | ($spl0 | $spl82)),
  inference(superposition,[],[f3896,f71])).
fof(f3696,plain,(
  s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(sK0,sK1)),sK3),s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))))))) = s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),sK4('const.option.SOME_1'(s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(sK0,sK1)),sK3),s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2)))))),'type.option.option'(sK1))))) | $spl112),
  inference(cnf_transformation,[],[f3696_D])).
fof(f3696_D,plain,(
  s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(sK0,sK1)),sK3),s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))))))) = s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),sK4('const.option.SOME_1'(s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(sK0,sK1)),sK3),s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2)))))),'type.option.option'(sK1))))) <=> ~$spl112),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl112])])).
fof(f3698,plain,(
  s('type.option.option'('type.option.option'(sK1)),'const.option.NONE_0') != s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),'const.option.NONE_0'))) | $spl115),
  inference(cnf_transformation,[],[f3698_D])).
fof(f3698_D,plain,(
  s('type.option.option'('type.option.option'(sK1)),'const.option.NONE_0') != s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),'const.option.NONE_0'))) <=> ~$spl115),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl115])])).
fof(f3687,plain,(
  s('type.option.option'('type.option.option'(sK1)),'const.option.NONE_0') != s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),'const.option.NONE_0'))) | s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(sK0,sK1)),sK3),s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))))))) = s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),sK4('const.option.SOME_1'(s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(sK0,sK1)),sK3),s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2)))))),'type.option.option'(sK1))))) | $spl98),
  inference(superposition,[],[f2997,f47])).
fof(f2997,plain,(
  s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),'const.option.NONE_0'))) != s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(sK0,sK1)),sK3),s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))))))) | $spl98),
  inference(equality_resolution,[],[f2646])).
fof(f3370,plain,(
  ( ! [X15] : (s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(sK0,sK1)),sK3),s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))))) != s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),X15),s('type.option.option'(fun(sK0,sK1)),sK3))) | s('type.option.option'(fun(fun(sK0,sK1),sK1)),X15) = s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),sK4(X15,fun(fun(sK0,sK1),sK1)))))) ) | $spl110),
  inference(cnf_transformation,[],[f3370_D])).
fof(f3370_D,plain,(
  ( ! [X15] : (s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(sK0,sK1)),sK3),s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))))) != s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),X15),s('type.option.option'(fun(sK0,sK1)),sK3))) | s('type.option.option'(fun(fun(sK0,sK1),sK1)),X15) = s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),sK4(X15,fun(fun(sK0,sK1),sK1)))))) ) <=> ~$spl110),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl110])])).
fof(f3350,plain,(
  ( ! [X15] : (s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(sK0,sK1)),sK3),s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))))) != s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),X15),s('type.option.option'(fun(sK0,sK1)),sK3))) | s('type.option.option'('type.option.option'(fun(fun(sK0,sK1),sK1))),'const.option.SOME_1'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.NONE_0'))) != s('type.option.option'('type.option.option'(fun(fun(sK0,sK1),sK1))),'const.option.SOME_1'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))))) | s('type.option.option'(fun(fun(sK0,sK1),sK1)),X15) = s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),sK4(X15,fun(fun(sK0,sK1),sK1)))))) )),
  inference(superposition,[],[f60,f47])).
fof(f808,plain,(
  s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(sK0,sK1)),sK3),s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))))) = s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,sK4('const.option.OPTION_APPLY_2'(s('type.option.option'(fun(sK0,sK1)),sK3),s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2)))),sK1)))) | $spl22),
  inference(cnf_transformation,[],[f808_D])).
fof(f808_D,plain,(
  s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(sK0,sK1)),sK3),s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))))) = s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,sK4('const.option.OPTION_APPLY_2'(s('type.option.option'(fun(sK0,sK1)),sK3),s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2)))),sK1)))) <=> ~$spl22),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl22])])).
fof(f3004,plain,(
  ( ! [X0] : (s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),'const.option.NONE_0'))) != s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),X0)))) ) | $spl106),
  inference(cnf_transformation,[],[f3004_D])).
fof(f3004_D,plain,(
  ( ! [X0] : (s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),'const.option.NONE_0'))) != s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),X0)))) ) <=> ~$spl106),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl106])])).
fof(f3003,plain,(
  ( ! [X0] : (s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),'const.option.NONE_0'))) != s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),X0))) | s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(sK0,sK1)),sK3),s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))))) = s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,sK4('const.option.OPTION_APPLY_2'(s('type.option.option'(fun(sK0,sK1)),sK3),s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2)))),sK1))))) ) | $spl98),
  inference(subsumption_resolution,[],[f2994,f43])).
fof(f2994,plain,(
  ( ! [X0] : (s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),X0) | s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),'const.option.NONE_0'))) != s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),X0))) | s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(sK0,sK1)),sK3),s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))))) = s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,sK4('const.option.OPTION_APPLY_2'(s('type.option.option'(fun(sK0,sK1)),sK3),s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2)))),sK1))))) ) | $spl98),
  inference(superposition,[],[f2646,f47])).
fof(f2904,plain,(
  s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))) = s('type.option.option'(sK0),sK4('const.option.SOME_1'(s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2)))),'type.option.option'(sK0))) | $spl102),
  inference(cnf_transformation,[],[f2904_D])).
fof(f2904_D,plain,(
  s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))) = s('type.option.option'(sK0),sK4('const.option.SOME_1'(s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2)))),'type.option.option'(sK0))) <=> ~$spl102),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl102])])).
fof(f2902,plain,(
  ( ! [X2] : (s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))) = s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK4(happ(s(fun('type.option.option'(sK0),'type.option.option'(sK0)),X2),s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2)))),sK0)))) | s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))) = s('type.option.option'(sK0),sK4('const.option.SOME_1'(s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2)))),'type.option.option'(sK0)))) ) | ($spl36 | $spl82)),
  inference(forward_demodulation,[],[f2871,f2853])).
fof(f2871,plain,(
  ( ! [X2] : (s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))) = s('type.option.option'(sK0),sK4('const.option.SOME_1'(s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2)))),'type.option.option'(sK0))) | s('type.option.option'(sK0),happ(s(fun('type.option.option'(sK0),'type.option.option'(sK0)),X2),s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))))) = s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK4(happ(s(fun('type.option.option'(sK0),'type.option.option'(sK0)),X2),s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2)))),sK0))))) ) | ($spl36 | $spl82)),
  inference(superposition,[],[f1606,f2853])).
fof(f1606,plain,(
  ( ! [X0] : (s('type.option.option'(sK0),X0) = s('type.option.option'(sK0),sK4('const.option.SOME_1'(s('type.option.option'(sK0),X0)),'type.option.option'(sK0))) | s('type.option.option'(sK0),X0) = s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK4(X0,sK0))))) ) | $spl36),
  inference(superposition,[],[f1465,f47])).
fof(f2608,plain,(
  s('type.option.option'(sK1),'const.option.OPTION_MAP_2'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))),s('type.option.option'(fun(sK0,sK1)),sK3))) = s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,sK4('const.option.SOME_1'(s(sK1,sK4('const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))),s('type.option.option'(fun(sK0,sK1)),sK3)),sK1))),sK1)))) | s('type.option.option'(sK1),'const.option.NONE_0') = s('type.option.option'(sK1),'const.option.OPTION_MAP_2'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))),s('type.option.option'(fun(sK0,sK1)),sK3))) | $spl8),
  inference(forward_demodulation,[],[f2588,f81])).
fof(f2588,plain,(
  s('type.option.option'(sK1),'const.option.NONE_0') = s('type.option.option'(sK1),'const.option.OPTION_MAP_2'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))),s('type.option.option'(fun(sK0,sK1)),sK3))) | s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,sK4('const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))),s('type.option.option'(fun(sK0,sK1)),sK3)),sK1)))) = s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,sK4('const.option.SOME_1'(s(sK1,sK4('const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))),s('type.option.option'(fun(sK0,sK1)),sK3)),sK1))),sK1)))) | $spl8),
  inference(superposition,[],[f47,f81])).
fof(f2601,plain,(
  s('type.option.option'(sK1),'const.option.OPTION_MAP_2'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))),s('type.option.option'(fun(sK0,sK1)),sK3))) = s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,sK4('const.option.SOME_1'(s(sK1,sK4('const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))),s('type.option.option'(fun(sK0,sK1)),sK3)),sK1))),sK1)))) | s('type.option.option'(sK1),'const.option.NONE_0') = s('type.option.option'(sK1),'const.option.OPTION_MAP_2'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))),s('type.option.option'(fun(sK0,sK1)),sK3))) | $spl8),
  inference(forward_demodulation,[],[f2578,f81])).
fof(f2578,plain,(
  s('type.option.option'(sK1),'const.option.NONE_0') = s('type.option.option'(sK1),'const.option.OPTION_MAP_2'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))),s('type.option.option'(fun(sK0,sK1)),sK3))) | s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,sK4('const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))),s('type.option.option'(fun(sK0,sK1)),sK3)),sK1)))) = s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,sK4('const.option.SOME_1'(s(sK1,sK4('const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))),s('type.option.option'(fun(sK0,sK1)),sK3)),sK1))),sK1)))) | $spl8),
  inference(superposition,[],[f81,f47])).
fof(f2428,plain,(
  $false | ($spl19 | $spl32 | $spl82)),
  inference(subsumption_resolution,[],[f2263,f2375])).
fof(f2375,plain,(
  s('type.option.option'('type.option.option'(sK0)),'const.option.NONE_0') != s('type.option.option'('type.option.option'(sK0)),'const.option.SOME_1'(s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))))) | ($spl19 | $spl32)),
  inference(backward_demodulation,[],[f891,f863])).
fof(f863,plain,(
  s('type.option.option'('type.option.option'(sK0)),'const.option.SOME_1'(s('type.option.option'(sK0),'const.option.NONE_0'))) != s('type.option.option'('type.option.option'(sK0)),'const.option.SOME_1'(s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))))) | $spl19),
  inference(equality_resolution,[],[f576])).
fof(f576,plain,(
  ( ! [X2] : (s('type.option.option'(sK0),'const.option.NONE_0') != s('type.option.option'(sK0),X2) | s('type.option.option'('type.option.option'(sK0)),'const.option.SOME_1'(s('type.option.option'(sK0),X2))) != s('type.option.option'('type.option.option'(sK0)),'const.option.SOME_1'(s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2)))))) ) | $spl19),
  inference(superposition,[],[f512,f43])).
fof(f890,plain,(
  s('type.option.option'('type.option.option'(sK0)),'const.option.SOME_1'(s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))))) = s('type.option.option'('type.option.option'(sK0)),'const.option.SOME_1'(s('type.option.option'(sK0),sK4('const.option.SOME_1'(s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2)))),'type.option.option'(sK0))))) | $spl30),
  inference(cnf_transformation,[],[f890_D])).
fof(f890_D,plain,(
  s('type.option.option'('type.option.option'(sK0)),'const.option.SOME_1'(s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))))) = s('type.option.option'('type.option.option'(sK0)),'const.option.SOME_1'(s('type.option.option'(sK0),sK4('const.option.SOME_1'(s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2)))),'type.option.option'(sK0))))) <=> ~$spl30),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl30])])).
fof(f2054,plain,(
  s('type.option.option'('type.option.option'(sK0)),'const.option.NONE_0') != s('type.option.option'('type.option.option'(sK0)),'const.option.SOME_1'(s('type.option.option'(sK0),'const.option.NONE_0'))) | s('type.option.option'('type.option.option'(sK0)),'const.option.SOME_1'(s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))))) = s('type.option.option'('type.option.option'(sK0)),'const.option.SOME_1'(s('type.option.option'(sK0),sK4('const.option.SOME_1'(s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2)))),'type.option.option'(sK0))))) | $spl19),
  inference(superposition,[],[f863,f47])).
fof(f2372,plain,(
  s('type.option.option'(fun(sK0,sK1)),'const.option.NONE_0') = s('type.option.option'(fun(sK0,sK1)),'const.option.SOME_1'(s(fun(sK0,sK1),sK4(sK3,fun(sK0,sK1))))) | $spl96),
  inference(cnf_transformation,[],[f2372_D])).
fof(f2372_D,plain,(
  s('type.option.option'(fun(sK0,sK1)),'const.option.NONE_0') = s('type.option.option'(fun(sK0,sK1)),'const.option.SOME_1'(s(fun(sK0,sK1),sK4(sK3,fun(sK0,sK1))))) <=> ~$spl96),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl96])])).
fof(f76,plain,(
  s('type.option.option'(fun(sK0,sK1)),sK3) = s('type.option.option'(fun(sK0,sK1)),'const.option.SOME_1'(s(fun(sK0,sK1),sK4(sK3,fun(sK0,sK1))))) | $spl4),
  inference(cnf_transformation,[],[f76_D])).
fof(f76_D,plain,(
  s('type.option.option'(fun(sK0,sK1)),sK3) = s('type.option.option'(fun(sK0,sK1)),'const.option.SOME_1'(s(fun(sK0,sK1),sK4(sK3,fun(sK0,sK1))))) <=> ~$spl4),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl4])])).
fof(f356,plain,(
  s('type.option.option'(fun(sK0,sK1)),sK3) = s('type.option.option'(fun(sK0,sK1)),'const.option.SOME_1'(s(fun(sK0,sK1),sK4(sK3,fun(sK0,sK1))))) | s('type.option.option'(fun(sK0,sK1)),'const.option.NONE_0') = s('type.option.option'(fun(sK0,sK1)),'const.option.SOME_1'(s(fun(sK0,sK1),sK4(sK3,fun(sK0,sK1))))) | $spl16),
  inference(superposition,[],[f147,f47])).
fof(f363,plain,(
  s('type.option.option'(fun(sK0,sK1)),sK3) = s('type.option.option'(fun(sK0,sK1)),'const.option.SOME_1'(s(fun(sK0,sK1),sK4(sK3,fun(sK0,sK1))))) | s('type.option.option'(fun(sK0,sK1)),'const.option.NONE_0') = s('type.option.option'(fun(sK0,sK1)),'const.option.SOME_1'(s(fun(sK0,sK1),sK4(sK3,fun(sK0,sK1))))) | $spl16),
  inference(superposition,[],[f47,f147])).
fof(f2364,plain,(
  s('type.option.option'(sK1),'const.option.OPTION_MAP_2'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))),s('type.option.option'(fun(sK0,sK1)),sK3))) = s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,sK4('const.option.OPTION_MAP_2'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))),s('type.option.option'(fun(sK0,sK1)),sK3)),sK1)))) | $spl94),
  inference(cnf_transformation,[],[f2364_D])).
fof(f2364_D,plain,(
  s('type.option.option'(sK1),'const.option.OPTION_MAP_2'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))),s('type.option.option'(fun(sK0,sK1)),sK3))) = s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,sK4('const.option.OPTION_MAP_2'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))),s('type.option.option'(fun(sK0,sK1)),sK3)),sK1)))) <=> ~$spl94),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl94])])).
fof(f480,plain,(
  s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(sK0,sK1)),sK3),s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))))) | s('type.option.option'(sK1),'const.option.OPTION_MAP_2'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))),s('type.option.option'(fun(sK0,sK1)),sK3))) = s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,sK4('const.option.OPTION_MAP_2'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))),s('type.option.option'(fun(sK0,sK1)),sK3)),sK1))))),
  inference(superposition,[],[f65,f47])).
fof(f669,plain,(
  s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(sK0,sK1)),sK3),s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))))) | s('type.option.option'(sK1),'const.option.OPTION_MAP_2'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))),s('type.option.option'(fun(sK0,sK1)),sK3))) = s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,sK4('const.option.OPTION_MAP_2'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))),s('type.option.option'(fun(sK0,sK1)),sK3)),sK1))))),
  inference(superposition,[],[f65,f47])).
fof(f2360,plain,(
  ( ! [X1] : (s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),X1))) != s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),'const.option.OPTION_MAP_2'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))),s('type.option.option'(fun(sK0,sK1)),sK3))))) | s('type.option.option'(sK1),X1) = s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,sK4(X1,sK1))))) ) | $spl92),
  inference(cnf_transformation,[],[f2360_D])).
fof(f2360_D,plain,(
  ( ! [X1] : (s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),X1))) != s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),'const.option.OPTION_MAP_2'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))),s('type.option.option'(fun(sK0,sK1)),sK3))))) | s('type.option.option'(sK1),X1) = s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,sK4(X1,sK1))))) ) <=> ~$spl92),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl92])])).
fof(f777,plain,(
  ( ! [X1] : (s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(sK0,sK1)),sK3),s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))))) | s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),X1))) != s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),'const.option.OPTION_MAP_2'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))),s('type.option.option'(fun(sK0,sK1)),sK3))))) | s('type.option.option'(sK1),X1) = s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,sK4(X1,sK1))))) )),
  inference(superposition,[],[f82,f47])).
fof(f2357,plain,(
  ( ! [X0] : (s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),X0) | s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),X0))) != s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),'const.option.OPTION_MAP_2'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))),s('type.option.option'(fun(sK0,sK1)),sK3))))) | s('type.option.option'(fun(sK0,sK1)),sK3) = s('type.option.option'(fun(sK0,sK1)),'const.option.SOME_1'(s(fun(sK0,sK1),sK4(sK3,fun(sK0,sK1)))))) )),
  inference(forward_demodulation,[],[f788,f41])).
fof(f788,plain,(
  ( ! [X0] : (s('type.option.option'(sK1),X0) != s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(sK0,sK1)),'const.option.NONE_0'),s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))))) | s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),X0))) != s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),'const.option.OPTION_MAP_2'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))),s('type.option.option'(fun(sK0,sK1)),sK3))))) | s('type.option.option'(fun(sK0,sK1)),sK3) = s('type.option.option'(fun(sK0,sK1)),'const.option.SOME_1'(s(fun(sK0,sK1),sK4(sK3,fun(sK0,sK1)))))) )),
  inference(superposition,[],[f82,f47])).
fof(f2356,plain,(
  ( ! [X0] : (s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),'const.option.NONE_0'))) != s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),X0))) | s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(sK0,sK1)),X0),s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))))) != s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))),s('type.option.option'(fun(sK0,sK1)),X0)))) ) | $spl90),
  inference(cnf_transformation,[],[f2356_D])).
fof(f2356_D,plain,(
  ( ! [X0] : (s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),'const.option.NONE_0'))) != s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),X0))) | s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(sK0,sK1)),X0),s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))))) != s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))),s('type.option.option'(fun(sK0,sK1)),X0)))) ) <=> ~$spl90),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl90])])).
fof(f1658,plain,(
  ( ! [X0] : (s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),'const.option.NONE_0'))) != s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),X0))) | s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(sK0,sK1)),X0),s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))))) != s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))),s('type.option.option'(fun(sK0,sK1)),X0))) | s('type.option.option'(fun(sK0,sK1)),sK3) = s('type.option.option'(fun(sK0,sK1)),'const.option.SOME_1'(s(fun(sK0,sK1),sK4(sK3,fun(sK0,sK1)))))) )),
  inference(superposition,[],[f63,f47])).
fof(f1910,plain,(
  s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.NONE_0') != s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),'const.option.NONE_0'))) | $spl67),
  inference(cnf_transformation,[],[f1910_D])).
fof(f1910_D,plain,(
  s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.NONE_0') != s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),'const.option.NONE_0'))) <=> ~$spl67),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl67])])).
fof(f1710,plain,(
  s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.NONE_0') != s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),'const.option.NONE_0'))) | s('type.option.option'(fun(sK0,sK1)),sK3) = s('type.option.option'(fun(sK0,sK1)),'const.option.SOME_1'(s(fun(sK0,sK1),sK4(sK3,fun(sK0,sK1))))) | $spl65),
  inference(superposition,[],[f1709,f47])).
fof(f2355,plain,(
  $false | ($spl31 | $spl83)),
  inference(subsumption_resolution,[],[f2354,f889])).
fof(f889,plain,(
  s('type.option.option'('type.option.option'(sK0)),'const.option.SOME_1'(s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))))) != s('type.option.option'('type.option.option'(sK0)),'const.option.SOME_1'(s('type.option.option'(sK0),sK4('const.option.SOME_1'(s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2)))),'type.option.option'(sK0))))) | $spl31),
  inference(cnf_transformation,[],[f889_D])).
fof(f889_D,plain,(
  s('type.option.option'('type.option.option'(sK0)),'const.option.SOME_1'(s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))))) != s('type.option.option'('type.option.option'(sK0)),'const.option.SOME_1'(s('type.option.option'(sK0),sK4('const.option.SOME_1'(s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2)))),'type.option.option'(sK0))))) <=> ~$spl31),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl31])])).
fof(f2354,plain,(
  s('type.option.option'('type.option.option'(sK0)),'const.option.SOME_1'(s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))))) = s('type.option.option'('type.option.option'(sK0)),'const.option.SOME_1'(s('type.option.option'(sK0),sK4('const.option.SOME_1'(s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2)))),'type.option.option'(sK0))))) | $spl83),
  inference(trivial_inequality_removal,[],[f2351])).
fof(f2351,plain,(
  s('type.option.option'('type.option.option'(sK0)),'const.option.NONE_0') != s('type.option.option'('type.option.option'(sK0)),'const.option.NONE_0') | s('type.option.option'('type.option.option'(sK0)),'const.option.SOME_1'(s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))))) = s('type.option.option'('type.option.option'(sK0)),'const.option.SOME_1'(s('type.option.option'(sK0),sK4('const.option.SOME_1'(s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2)))),'type.option.option'(sK0))))) | $spl83),
  inference(superposition,[],[f2262,f47])).
fof(f2341,plain,(
  s('type.option.option'('type.option.option'(sK0)),'const.option.SOME_1'(s('type.option.option'(sK0),sK4('const.option.SOME_1'(s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2)))),'type.option.option'(sK0))))) = s('type.option.option'('type.option.option'(sK0)),'const.option.SOME_1'(s('type.option.option'(sK0),sK4('const.option.SOME_1'(s('type.option.option'(sK0),sK4('const.option.SOME_1'(s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2)))),'type.option.option'(sK0)))),'type.option.option'(sK0))))) | $spl88),
  inference(cnf_transformation,[],[f2341_D])).
fof(f2341_D,plain,(
  s('type.option.option'('type.option.option'(sK0)),'const.option.SOME_1'(s('type.option.option'(sK0),sK4('const.option.SOME_1'(s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2)))),'type.option.option'(sK0))))) = s('type.option.option'('type.option.option'(sK0)),'const.option.SOME_1'(s('type.option.option'(sK0),sK4('const.option.SOME_1'(s('type.option.option'(sK0),sK4('const.option.SOME_1'(s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2)))),'type.option.option'(sK0)))),'type.option.option'(sK0))))) <=> ~$spl88),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl88])])).
fof(f2262,plain,(
  s('type.option.option'('type.option.option'(sK0)),'const.option.NONE_0') != s('type.option.option'('type.option.option'(sK0)),'const.option.SOME_1'(s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))))) | $spl83),
  inference(cnf_transformation,[],[f2262_D])).
fof(f2262_D,plain,(
  s('type.option.option'('type.option.option'(sK0)),'const.option.NONE_0') != s('type.option.option'('type.option.option'(sK0)),'const.option.SOME_1'(s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))))) <=> ~$spl83),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl83])])).
fof(f2333,plain,(
  s('type.option.option'('type.option.option'(sK0)),'const.option.NONE_0') != s('type.option.option'('type.option.option'(sK0)),'const.option.SOME_1'(s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))))) | s('type.option.option'('type.option.option'(sK0)),'const.option.SOME_1'(s('type.option.option'(sK0),sK4('const.option.SOME_1'(s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2)))),'type.option.option'(sK0))))) = s('type.option.option'('type.option.option'(sK0)),'const.option.SOME_1'(s('type.option.option'(sK0),sK4('const.option.SOME_1'(s('type.option.option'(sK0),sK4('const.option.SOME_1'(s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2)))),'type.option.option'(sK0)))),'type.option.option'(sK0))))) | $spl31),
  inference(superposition,[],[f889,f47])).
fof(f2263,plain,(
  s('type.option.option'('type.option.option'(sK0)),'const.option.NONE_0') = s('type.option.option'('type.option.option'(sK0)),'const.option.SOME_1'(s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))))) | $spl82),
  inference(cnf_transformation,[],[f2263_D])).
fof(f2263_D,plain,(
  s('type.option.option'('type.option.option'(sK0)),'const.option.NONE_0') = s('type.option.option'('type.option.option'(sK0)),'const.option.SOME_1'(s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))))) <=> ~$spl82),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl82])])).
fof(f2265,plain,(
  s('type.option.option'('type.option.option'(sK0)),'const.option.SOME_1'(s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))))) = s('type.option.option'('type.option.option'(sK0)),'const.option.SOME_1'(s('type.option.option'(sK0),sK4('const.option.SOME_1'(s('type.option.option'(sK0),sK4('const.option.SOME_1'(s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2)))),'type.option.option'(sK0)))),'type.option.option'(sK0))))) | $spl84),
  inference(cnf_transformation,[],[f2265_D])).
fof(f2265_D,plain,(
  s('type.option.option'('type.option.option'(sK0)),'const.option.SOME_1'(s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))))) = s('type.option.option'('type.option.option'(sK0)),'const.option.SOME_1'(s('type.option.option'(sK0),sK4('const.option.SOME_1'(s('type.option.option'(sK0),sK4('const.option.SOME_1'(s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2)))),'type.option.option'(sK0)))),'type.option.option'(sK0))))) <=> ~$spl84),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl84])])).
fof(f2270,plain,(
  s('type.option.option'('type.option.option'(sK0)),'const.option.SOME_1'(s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))))) = s('type.option.option'('type.option.option'(sK0)),'const.option.SOME_1'(s('type.option.option'(sK0),sK4('const.option.SOME_1'(s('type.option.option'(sK0),sK4('const.option.SOME_1'(s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2)))),'type.option.option'(sK0)))),'type.option.option'(sK0))))) | s('type.option.option'('type.option.option'(sK0)),'const.option.NONE_0') = s('type.option.option'('type.option.option'(sK0)),'const.option.SOME_1'(s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))))) | $spl30),
  inference(forward_demodulation,[],[f2247,f890])).
fof(f2247,plain,(
  s('type.option.option'('type.option.option'(sK0)),'const.option.NONE_0') = s('type.option.option'('type.option.option'(sK0)),'const.option.SOME_1'(s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))))) | s('type.option.option'('type.option.option'(sK0)),'const.option.SOME_1'(s('type.option.option'(sK0),sK4('const.option.SOME_1'(s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2)))),'type.option.option'(sK0))))) = s('type.option.option'('type.option.option'(sK0)),'const.option.SOME_1'(s('type.option.option'(sK0),sK4('const.option.SOME_1'(s('type.option.option'(sK0),sK4('const.option.SOME_1'(s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2)))),'type.option.option'(sK0)))),'type.option.option'(sK0))))) | $spl30),
  inference(superposition,[],[f47,f890])).
fof(f2241,plain,(
  s('type.option.option'('type.option.option'(sK0)),'const.option.NONE_0') != s('type.option.option'('type.option.option'(sK0)),'const.option.SOME_1'(s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))))) | s('type.option.option'(sK0),sK4('const.option.SOME_1'(s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2)))),'type.option.option'(sK0))) = s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK4(sK4('const.option.SOME_1'(s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2)))),'type.option.option'(sK0)),sK0)))) | ($spl30 | $spl33)),
  inference(superposition,[],[f2035,f890])).
fof(f2035,plain,(
  ( ! [X0] : (s('type.option.option'('type.option.option'(sK0)),'const.option.NONE_0') != s('type.option.option'('type.option.option'(sK0)),'const.option.SOME_1'(s('type.option.option'(sK0),X0))) | s('type.option.option'(sK0),X0) = s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK4(X0,sK0))))) ) | $spl33),
  inference(superposition,[],[f892,f47])).
fof(f2261,plain,(
  s('type.option.option'('type.option.option'(sK0)),'const.option.SOME_1'(s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))))) = s('type.option.option'('type.option.option'(sK0)),'const.option.SOME_1'(s('type.option.option'(sK0),sK4('const.option.SOME_1'(s('type.option.option'(sK0),sK4('const.option.SOME_1'(s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2)))),'type.option.option'(sK0)))),'type.option.option'(sK0))))) | s('type.option.option'('type.option.option'(sK0)),'const.option.NONE_0') = s('type.option.option'('type.option.option'(sK0)),'const.option.SOME_1'(s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))))) | $spl30),
  inference(forward_demodulation,[],[f2238,f890])).
fof(f2238,plain,(
  s('type.option.option'('type.option.option'(sK0)),'const.option.NONE_0') = s('type.option.option'('type.option.option'(sK0)),'const.option.SOME_1'(s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))))) | s('type.option.option'('type.option.option'(sK0)),'const.option.SOME_1'(s('type.option.option'(sK0),sK4('const.option.SOME_1'(s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2)))),'type.option.option'(sK0))))) = s('type.option.option'('type.option.option'(sK0)),'const.option.SOME_1'(s('type.option.option'(sK0),sK4('const.option.SOME_1'(s('type.option.option'(sK0),sK4('const.option.SOME_1'(s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2)))),'type.option.option'(sK0)))),'type.option.option'(sK0))))) | $spl30),
  inference(superposition,[],[f890,f47])).
fof(f71,plain,(
  s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))) = s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),sK4('const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2)))),fun(fun(sK0,sK1),sK1))))) | $spl0),
  inference(cnf_transformation,[],[f71_D])).
fof(f71_D,plain,(
  s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))) = s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),sK4('const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2)))),fun(fun(sK0,sK1),sK1))))) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f2190,plain,(
  ( ! [X4] : (s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.NONE_0') != s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),X4))) | s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(sK0,sK1)),sK3),s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))))) != s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),X4))),s('type.option.option'(fun(sK0,sK1)),sK3)))) ) | $spl80),
  inference(cnf_transformation,[],[f2190_D])).
fof(f2190_D,plain,(
  ( ! [X4] : (s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.NONE_0') != s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),X4))) | s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(sK0,sK1)),sK3),s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))))) != s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),X4))),s('type.option.option'(fun(sK0,sK1)),sK3)))) ) <=> ~$spl80),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl80])])).
fof(f2181,plain,(
  ( ! [X4] : (s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.NONE_0') != s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),X4))) | s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(sK0,sK1)),sK3),s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))))) != s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),X4))),s('type.option.option'(fun(sK0,sK1)),sK3))) | s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))) = s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),sK4('const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2)))),fun(fun(sK0,sK1),sK1)))))) )),
  inference(superposition,[],[f55,f47])).
fof(f55,plain,(
  ( ! [X0] : (s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),X0))) != s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))) | s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(sK0,sK1)),sK3),s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))))) != s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),X0))),s('type.option.option'(fun(sK0,sK1)),sK3)))) )),
  inference(superposition,[],[f39,f43])).
fof(f2188,plain,(
  s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.NONE_0') != s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))) | $spl77),
  inference(cnf_transformation,[],[f2188_D])).
fof(f2188_D,plain,(
  s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.NONE_0') != s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))) <=> ~$spl77),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl77])])).
fof(f2189,plain,(
  ( ! [X8] : (s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(sK0,sK1)),sK3),s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))))) != s('type.option.option'(sK1),'const.option.OPTION_MAP_2'(s(fun(fun(sK0,sK1),sK1),X8),s('type.option.option'(fun(sK0,sK1)),sK3))) | s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),X8))) = s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),sK4('const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),X8)),fun(fun(sK0,sK1),sK1)))))) ) | $spl78),
  inference(cnf_transformation,[],[f2189_D])).
fof(f2189_D,plain,(
  ( ! [X8] : (s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(sK0,sK1)),sK3),s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))))) != s('type.option.option'(sK1),'const.option.OPTION_MAP_2'(s(fun(fun(sK0,sK1),sK1),X8),s('type.option.option'(fun(sK0,sK1)),sK3))) | s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),X8))) = s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),sK4('const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),X8)),fun(fun(sK0,sK1),sK1)))))) ) <=> ~$spl78),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl78])])).
fof(f2186,plain,(
  ( ! [X8] : (s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(sK0,sK1)),sK3),s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))))) != s('type.option.option'(sK1),'const.option.OPTION_MAP_2'(s(fun(fun(sK0,sK1),sK1),X8),s('type.option.option'(fun(sK0,sK1)),sK3))) | s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.NONE_0') != s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))) | s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),X8))) = s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),sK4('const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),X8)),fun(fun(sK0,sK1),sK1)))))) )),
  inference(forward_demodulation,[],[f2172,f40])).
fof(f2172,plain,(
  ( ! [X8] : (s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.NONE_0') != s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))) | s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(sK0,sK1)),sK3),s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))))) != s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),X8))),s('type.option.option'(fun(sK0,sK1)),sK3))) | s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),X8))) = s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),sK4('const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),X8)),fun(fun(sK0,sK1),sK1)))))) )),
  inference(superposition,[],[f55,f47])).
fof(f2004,plain,(
  ( ! [X66,X67] : (s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),happ(s(fun('type.option.option'(sK0),'type.option.option'(sK1)),X67),s('type.option.option'(sK0),'const.option.NONE_0'))) | s('type.option.option'('type.option.option'(sK1)),'const.option.NONE_0') = s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(sK0,sK1)),sK3),s('type.option.option'(sK0),X66))))) | s('type.option.option'(sK0),X66) = s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK4(X66,sK0))))) ) | ($spl12 | $spl32)),
  inference(superposition,[],[f1730,f449])).
fof(f449,plain,(
  ( ! [X0] : (s('type.option.option'(sK1),'const.option.NONE_0') = s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(sK0,sK1)),sK3),s('type.option.option'(sK0),X0))) | s('type.option.option'(sK0),X0) = s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK4(X0,sK0))))) ) | $spl12),
  inference(superposition,[],[f101,f47])).
fof(f1730,plain,(
  ( ! [X6,X4,X5] : (s(X4,X6) != s(X4,happ(s(fun('type.option.option'(sK0),X4),X5),s('type.option.option'(sK0),'const.option.NONE_0'))) | s('type.option.option'(X4),'const.option.NONE_0') = s('type.option.option'(X4),'const.option.SOME_1'(s(X4,X6)))) ) | $spl32),
  inference(superposition,[],[f1597,f44])).
fof(f1597,plain,(
  ( ! [X0,X1] : (s('type.option.option'(X0),'const.option.NONE_0') = s('type.option.option'(X0),'const.option.SOME_1'(s(X0,happ(s(fun('type.option.option'(sK0),X0),X1),s('type.option.option'(sK0),'const.option.NONE_0')))))) ) | $spl32),
  inference(forward_demodulation,[],[f1576,f42])).
fof(f1576,plain,(
  ( ! [X0,X1] : (s('type.option.option'(X0),'const.option.OPTION_MAP_2'(s(fun('type.option.option'(sK0),X0),X1),s('type.option.option'('type.option.option'(sK0)),'const.option.NONE_0'))) = s('type.option.option'(X0),'const.option.SOME_1'(s(X0,happ(s(fun('type.option.option'(sK0),X0),X1),s('type.option.option'(sK0),'const.option.NONE_0')))))) ) | $spl32),
  inference(superposition,[],[f49,f891])).
fof(f2001,plain,(
  ( ! [X59,X60] : (s('type.option.option'('type.option.option'(sK0)),'const.option.NONE_0') != s('type.option.option'('type.option.option'(sK0)),happ(s(fun('type.option.option'(sK0),'type.option.option'('type.option.option'(sK0))),X60),s('type.option.option'(sK0),'const.option.NONE_0'))) | s('type.option.option'('type.option.option'('type.option.option'(sK0))),'const.option.NONE_0') = s('type.option.option'('type.option.option'('type.option.option'(sK0))),'const.option.SOME_1'(s('type.option.option'('type.option.option'(sK0)),'const.option.SOME_1'(s('type.option.option'(sK0),X59))))) | s('type.option.option'(sK0),X59) = s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK4(X59,sK0))))) ) | $spl32),
  inference(superposition,[],[f1730,f1568])).
fof(f1568,plain,(
  ( ! [X0] : (s('type.option.option'('type.option.option'(sK0)),'const.option.NONE_0') = s('type.option.option'('type.option.option'(sK0)),'const.option.SOME_1'(s('type.option.option'(sK0),X0))) | s('type.option.option'(sK0),X0) = s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK4(X0,sK0))))) ) | $spl32),
  inference(superposition,[],[f891,f47])).
fof(f1905,plain,(
  s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.NONE_0') != s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),'const.option.NONE_0'))) | s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),sK3))) = s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),sK4('const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),sK3)),'type.option.option'(fun(sK0,sK1)))))) | $spl61),
  inference(superposition,[],[f1694,f47])).
fof(f1707,plain,(
  ( ! [X8] : (s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(sK0,sK1)),X8),s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))))) != s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))),s('type.option.option'(fun(sK0,sK1)),X8))) | s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),X8))) = s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),sK4('const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),X8)),'type.option.option'(fun(sK0,sK1))))))) ) | $spl62),
  inference(cnf_transformation,[],[f1707_D])).
fof(f1707_D,plain,(
  ( ! [X8] : (s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(sK0,sK1)),X8),s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))))) != s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))),s('type.option.option'(fun(sK0,sK1)),X8))) | s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),X8))) = s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),sK4('const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),X8)),'type.option.option'(fun(sK0,sK1))))))) ) <=> ~$spl62),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl62])])).
fof(f1683,plain,(
  ( ! [X8] : (s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.NONE_0') != s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),sK3))) | s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(sK0,sK1)),X8),s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))))) != s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))),s('type.option.option'(fun(sK0,sK1)),X8))) | s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),X8))) = s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),sK4('const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),X8)),'type.option.option'(fun(sK0,sK1))))))) )),
  inference(superposition,[],[f63,f47])).
fof(f1692,plain,(
  ( ! [X0] : (s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(sK0,sK1)),X0),s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))))) != s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))),s('type.option.option'(fun(sK0,sK1)),X0))) | s('type.option.option'(fun(sK0,sK1)),X0) = s('type.option.option'(fun(sK0,sK1)),'const.option.SOME_1'(s(fun(sK0,sK1),sK4(X0,fun(sK0,sK1)))))) ) | $spl58),
  inference(cnf_transformation,[],[f1692_D])).
fof(f1692_D,plain,(
  ( ! [X0] : (s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(sK0,sK1)),X0),s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))))) != s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))),s('type.option.option'(fun(sK0,sK1)),X0))) | s('type.option.option'(fun(sK0,sK1)),X0) = s('type.option.option'(fun(sK0,sK1)),'const.option.SOME_1'(s(fun(sK0,sK1),sK4(X0,fun(sK0,sK1)))))) ) <=> ~$spl58),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl58])])).
fof(f1694,plain,(
  s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),'const.option.NONE_0'))) != s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),sK3))) | $spl61),
  inference(cnf_transformation,[],[f1694_D])).
fof(f1694_D,plain,(
  s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),'const.option.NONE_0'))) != s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),sK3))) <=> ~$spl61),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl61])])).
fof(f1667,plain,(
  ( ! [X0] : (s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),'const.option.NONE_0'))) != s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),sK3))) | s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(sK0,sK1)),X0),s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))))) != s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))),s('type.option.option'(fun(sK0,sK1)),X0))) | s('type.option.option'(fun(sK0,sK1)),X0) = s('type.option.option'(fun(sK0,sK1)),'const.option.SOME_1'(s(fun(sK0,sK1),sK4(X0,fun(sK0,sK1)))))) )),
  inference(superposition,[],[f63,f47])).
fof(f1690,plain,(
  ( ! [X4] : (s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.NONE_0') != s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),X4))) | s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(sK0,sK1)),X4),s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))))) != s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))),s('type.option.option'(fun(sK0,sK1)),X4)))) ) | $spl56),
  inference(cnf_transformation,[],[f1690_D])).
fof(f1690_D,plain,(
  ( ! [X4] : (s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.NONE_0') != s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),X4))) | s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(sK0,sK1)),X4),s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))))) != s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))),s('type.option.option'(fun(sK0,sK1)),X4)))) ) <=> ~$spl56),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl56])])).
fof(f1663,plain,(
  ( ! [X4] : (s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.NONE_0') != s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),X4))) | s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(sK0,sK1)),X4),s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))))) != s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))),s('type.option.option'(fun(sK0,sK1)),X4))) | s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),sK3))) = s('type.option.option'('type.option.option'(fun(sK0,sK1))),'const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),sK4('const.option.SOME_1'(s('type.option.option'(fun(sK0,sK1)),sK3)),'type.option.option'(fun(sK0,sK1))))))) )),
  inference(superposition,[],[f63,f47])).
fof(f1554,plain,(
  s(sK0,sK2) = s(sK0,sK4('const.option.SOME_1'(s(sK0,sK4('const.option.SOME_1'(s(sK0,sK4(sK4('const.option.SOME_1'(s('type.option.option'(sK0),'const.option.NONE_0')),'type.option.option'(sK0)),sK0))),sK0))),sK0)) | $spl52),
  inference(cnf_transformation,[],[f1554_D])).
fof(f1554_D,plain,(
  s(sK0,sK2) = s(sK0,sK4('const.option.SOME_1'(s(sK0,sK4('const.option.SOME_1'(s(sK0,sK4(sK4('const.option.SOME_1'(s('type.option.option'(sK0),'const.option.NONE_0')),'type.option.option'(sK0)),sK0))),sK0))),sK0)) <=> ~$spl52),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl52])])).
fof(f1531,plain,(
  s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))) != s('type.option.option'(sK0),sK4('const.option.SOME_1'(s('type.option.option'(sK0),'const.option.NONE_0')),'type.option.option'(sK0))) | $spl41),
  inference(cnf_transformation,[],[f1531_D])).
fof(f1531_D,plain,(
  s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))) != s('type.option.option'(sK0),sK4('const.option.SOME_1'(s('type.option.option'(sK0),'const.option.NONE_0')),'type.option.option'(sK0))) <=> ~$spl41),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl41])])).
fof(f1552,plain,(
  s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))) != s('type.option.option'(sK0),sK4('const.option.SOME_1'(s('type.option.option'(sK0),'const.option.NONE_0')),'type.option.option'(sK0))) | s(sK0,sK2) = s(sK0,sK4('const.option.SOME_1'(s(sK0,sK4('const.option.SOME_1'(s(sK0,sK4(sK4('const.option.SOME_1'(s('type.option.option'(sK0),'const.option.NONE_0')),'type.option.option'(sK0)),sK0))),sK0))),sK0)) | ($spl10 | $spl19 | $spl37)),
  inference(subsumption_resolution,[],[f1551,f1466])).
fof(f1551,plain,(
  s('type.option.option'(sK0),'const.option.NONE_0') = s('type.option.option'(sK0),sK4('const.option.SOME_1'(s('type.option.option'(sK0),'const.option.NONE_0')),'type.option.option'(sK0))) | s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))) != s('type.option.option'(sK0),sK4('const.option.SOME_1'(s('type.option.option'(sK0),'const.option.NONE_0')),'type.option.option'(sK0))) | s(sK0,sK2) = s(sK0,sK4('const.option.SOME_1'(s(sK0,sK4('const.option.SOME_1'(s(sK0,sK4(sK4('const.option.SOME_1'(s('type.option.option'(sK0),'const.option.NONE_0')),'type.option.option'(sK0)),sK0))),sK0))),sK0)) | ($spl10 | $spl19 | $spl37)),
  inference(forward_demodulation,[],[f1509,f1477])).
fof(f1477,plain,(
  s('type.option.option'(sK0),sK4('const.option.SOME_1'(s('type.option.option'(sK0),'const.option.NONE_0')),'type.option.option'(sK0))) = s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK4(sK4('const.option.SOME_1'(s('type.option.option'(sK0),'const.option.NONE_0')),'type.option.option'(sK0)),sK0)))) | $spl37),
  inference(trivial_inequality_removal,[],[f1474])).
fof(f1474,plain,(
  s('type.option.option'(sK0),'const.option.NONE_0') != s('type.option.option'(sK0),'const.option.NONE_0') | s('type.option.option'(sK0),sK4('const.option.SOME_1'(s('type.option.option'(sK0),'const.option.NONE_0')),'type.option.option'(sK0))) = s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK4(sK4('const.option.SOME_1'(s('type.option.option'(sK0),'const.option.NONE_0')),'type.option.option'(sK0)),sK0)))) | $spl37),
  inference(superposition,[],[f1466,f47])).
fof(f1509,plain,(
  s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))) != s('type.option.option'(sK0),sK4('const.option.SOME_1'(s('type.option.option'(sK0),'const.option.NONE_0')),'type.option.option'(sK0))) | s(sK0,sK2) = s(sK0,sK4('const.option.SOME_1'(s(sK0,sK4('const.option.SOME_1'(s(sK0,sK4(sK4('const.option.SOME_1'(s('type.option.option'(sK0),'const.option.NONE_0')),'type.option.option'(sK0)),sK0))),sK0))),sK0)) | s('type.option.option'(sK0),'const.option.NONE_0') = s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK4(sK4('const.option.SOME_1'(s('type.option.option'(sK0),'const.option.NONE_0')),'type.option.option'(sK0)),sK0)))) | ($spl10 | $spl19 | $spl37)),
  inference(superposition,[],[f1399,f1477])).
fof(f1399,plain,(
  ( ! [X4] : (s('type.option.option'(sK0),X4) != s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))) | s(sK0,sK2) = s(sK0,sK4('const.option.SOME_1'(s(sK0,sK4(X4,sK0))),sK0)) | s('type.option.option'(sK0),'const.option.NONE_0') = s('type.option.option'(sK0),X4)) ) | ($spl10 | $spl19)),
  inference(superposition,[],[f1369,f47])).
fof(f1369,plain,(
  ( ! [X0] : (s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))) != s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,X0))) | s(sK0,sK2) = s(sK0,sK4('const.option.SOME_1'(s(sK0,X0)),sK0))) ) | ($spl10 | $spl19)),
  inference(equality_resolution,[],[f1355])).
fof(f1355,plain,(
  ( ! [X2,X1] : (s(sK0,X1) != s(sK0,X2) | s(sK0,sK2) = s(sK0,sK4('const.option.SOME_1'(s(sK0,X1)),sK0)) | s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))) != s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,X2)))) ) | ($spl10 | $spl19)),
  inference(subsumption_resolution,[],[f1337,f599])).
fof(f599,plain,(
  ( ! [X0,X1] : (s(sK0,X0) != s(sK0,X1) | s('type.option.option'(sK0),'const.option.NONE_0') != s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,X1))) | s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))) != s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,X0)))) ) | $spl19),
  inference(superposition,[],[f573,f43])).
fof(f573,plain,(
  ( ! [X0] : (s(sK0,sK2) != s(sK0,X0) | s('type.option.option'(sK0),'const.option.NONE_0') != s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,X0)))) ) | $spl19),
  inference(superposition,[],[f512,f44])).
fof(f1337,plain,(
  ( ! [X2,X1] : (s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))) != s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,X2))) | s(sK0,sK2) = s(sK0,sK4('const.option.SOME_1'(s(sK0,X1)),sK0)) | s('type.option.option'(sK0),'const.option.NONE_0') = s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,X1))) | s(sK0,X1) != s(sK0,X2)) ) | $spl10),
  inference(superposition,[],[f1335,f44])).
fof(f1545,plain,(
  s('type.option.option'(sK1),'const.option.NONE_0') = s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(sK0,sK1)),sK3),s('type.option.option'(sK0),sK4('const.option.SOME_1'(s('type.option.option'(sK0),'const.option.NONE_0')),'type.option.option'(sK0))))) | $spl50),
  inference(cnf_transformation,[],[f1545_D])).
fof(f1545_D,plain,(
  s('type.option.option'(sK1),'const.option.NONE_0') = s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(sK0,sK1)),sK3),s('type.option.option'(sK0),sK4('const.option.SOME_1'(s('type.option.option'(sK0),'const.option.NONE_0')),'type.option.option'(sK0))))) <=> ~$spl50),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl50])])).
fof(f1534,plain,(
  s('type.option.option'(sK0),sK4('const.option.SOME_1'(s('type.option.option'(sK0),'const.option.NONE_0')),'type.option.option'(sK0))) = s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK4('const.option.SOME_1'(s(sK0,sK4(sK4('const.option.SOME_1'(s('type.option.option'(sK0),'const.option.NONE_0')),'type.option.option'(sK0)),sK0))),sK0)))) | $spl42),
  inference(cnf_transformation,[],[f1534_D])).
fof(f1534_D,plain,(
  s('type.option.option'(sK0),sK4('const.option.SOME_1'(s('type.option.option'(sK0),'const.option.NONE_0')),'type.option.option'(sK0))) = s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK4('const.option.SOME_1'(s(sK0,sK4(sK4('const.option.SOME_1'(s('type.option.option'(sK0),'const.option.NONE_0')),'type.option.option'(sK0)),sK0))),sK0)))) <=> ~$spl42),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl42])])).
fof(f1543,plain,(
  s('type.option.option'(sK0),sK4('const.option.SOME_1'(s('type.option.option'(sK0),'const.option.NONE_0')),'type.option.option'(sK0))) = s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK4('const.option.SOME_1'(s(sK0,sK4(sK4('const.option.SOME_1'(s('type.option.option'(sK0),'const.option.NONE_0')),'type.option.option'(sK0)),sK0))),sK0)))) | s('type.option.option'(sK1),'const.option.NONE_0') = s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(sK0,sK1)),sK3),s('type.option.option'(sK0),sK4('const.option.SOME_1'(s('type.option.option'(sK0),'const.option.NONE_0')),'type.option.option'(sK0))))) | ($spl12 | $spl37)),
  inference(forward_demodulation,[],[f1501,f1477])).
fof(f1501,plain,(
  s('type.option.option'(sK1),'const.option.NONE_0') = s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(sK0,sK1)),sK3),s('type.option.option'(sK0),sK4('const.option.SOME_1'(s('type.option.option'(sK0),'const.option.NONE_0')),'type.option.option'(sK0))))) | s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK4(sK4('const.option.SOME_1'(s('type.option.option'(sK0),'const.option.NONE_0')),'type.option.option'(sK0)),sK0)))) = s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK4('const.option.SOME_1'(s(sK0,sK4(sK4('const.option.SOME_1'(s('type.option.option'(sK0),'const.option.NONE_0')),'type.option.option'(sK0)),sK0))),sK0)))) | ($spl12 | $spl37)),
  inference(superposition,[],[f449,f1477])).
fof(f1540,plain,(
  s(sK0,sK2) = s(sK0,sK4(sK4('const.option.SOME_1'(s('type.option.option'(sK0),'const.option.NONE_0')),'type.option.option'(sK0)),sK0)) | s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))) != s('type.option.option'(sK0),sK4('const.option.SOME_1'(s('type.option.option'(sK0),'const.option.NONE_0')),'type.option.option'(sK0))) | ($spl10 | $spl37)),
  inference(forward_demodulation,[],[f1494,f741])).
fof(f1494,plain,(
  s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))) != s('type.option.option'(sK0),sK4('const.option.SOME_1'(s('type.option.option'(sK0),'const.option.NONE_0')),'type.option.option'(sK0))) | s(sK0,sK4('const.option.SOME_1'(s(sK0,sK2)),sK0)) = s(sK0,sK4(sK4('const.option.SOME_1'(s('type.option.option'(sK0),'const.option.NONE_0')),'type.option.option'(sK0)),sK0)) | ($spl10 | $spl37)),
  inference(superposition,[],[f493,f1477])).
fof(f1539,plain,(
  s(sK0,sK4(sK4('const.option.SOME_1'(s('type.option.option'(sK0),'const.option.NONE_0')),'type.option.option'(sK0)),sK0)) = s(sK0,sK4('const.option.SOME_1'(s(sK0,sK4(sK4('const.option.SOME_1'(s('type.option.option'(sK0),'const.option.NONE_0')),'type.option.option'(sK0)),sK0))),sK0)) | $spl46),
  inference(cnf_transformation,[],[f1539_D])).
fof(f1539_D,plain,(
  s(sK0,sK4(sK4('const.option.SOME_1'(s('type.option.option'(sK0),'const.option.NONE_0')),'type.option.option'(sK0)),sK0)) = s(sK0,sK4('const.option.SOME_1'(s(sK0,sK4(sK4('const.option.SOME_1'(s('type.option.option'(sK0),'const.option.NONE_0')),'type.option.option'(sK0)),sK0))),sK0)) <=> ~$spl46),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl46])])).
fof(f1492,plain,(
  s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))) != s('type.option.option'(sK0),sK4('const.option.SOME_1'(s('type.option.option'(sK0),'const.option.NONE_0')),'type.option.option'(sK0))) | s(sK0,sK4(sK4('const.option.SOME_1'(s('type.option.option'(sK0),'const.option.NONE_0')),'type.option.option'(sK0)),sK0)) = s(sK0,sK4('const.option.SOME_1'(s(sK0,sK4(sK4('const.option.SOME_1'(s('type.option.option'(sK0),'const.option.NONE_0')),'type.option.option'(sK0)),sK0))),sK0)) | ($spl10 | $spl37)),
  inference(superposition,[],[f744,f1477])).
fof(f1537,plain,(
  s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(sK0,sK1)),sK3),s('type.option.option'(sK0),sK4('const.option.SOME_1'(s('type.option.option'(sK0),'const.option.NONE_0')),'type.option.option'(sK0))))) != s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK4(sK4('const.option.SOME_1'(s('type.option.option'(sK0),'const.option.NONE_0')),'type.option.option'(sK0)),sK0)))))),s('type.option.option'(fun(sK0,sK1)),sK3))) | $spl45),
  inference(cnf_transformation,[],[f1537_D])).
fof(f1537_D,plain,(
  s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(sK0,sK1)),sK3),s('type.option.option'(sK0),sK4('const.option.SOME_1'(s('type.option.option'(sK0),'const.option.NONE_0')),'type.option.option'(sK0))))) != s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK4(sK4('const.option.SOME_1'(s('type.option.option'(sK0),'const.option.NONE_0')),'type.option.option'(sK0)),sK0)))))),s('type.option.option'(fun(sK0,sK1)),sK3))) <=> ~$spl45),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl45])])).
fof(f1535,plain,(
  s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(sK0,sK1)),sK3),s('type.option.option'(sK0),sK4('const.option.SOME_1'(s('type.option.option'(sK0),'const.option.NONE_0')),'type.option.option'(sK0))))) != s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK4(sK4('const.option.SOME_1'(s('type.option.option'(sK0),'const.option.NONE_0')),'type.option.option'(sK0)),sK0)))))),s('type.option.option'(fun(sK0,sK1)),sK3))) | s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))) != s('type.option.option'(sK0),sK4('const.option.SOME_1'(s('type.option.option'(sK0),'const.option.NONE_0')),'type.option.option'(sK0))) | $spl37),
  inference(forward_demodulation,[],[f1491,f1477])).
fof(f1491,plain,(
  s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))) != s('type.option.option'(sK0),sK4('const.option.SOME_1'(s('type.option.option'(sK0),'const.option.NONE_0')),'type.option.option'(sK0))) | s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(sK0,sK1)),sK3),s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK4(sK4('const.option.SOME_1'(s('type.option.option'(sK0),'const.option.NONE_0')),'type.option.option'(sK0)),sK0)))))) != s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK4(sK4('const.option.SOME_1'(s('type.option.option'(sK0),'const.option.NONE_0')),'type.option.option'(sK0)),sK0)))))),s('type.option.option'(fun(sK0,sK1)),sK3))) | $spl37),
  inference(superposition,[],[f53,f1477])).
fof(f1532,plain,(
  s('type.option.option'(sK0),sK4('const.option.SOME_1'(s('type.option.option'(sK0),'const.option.NONE_0')),'type.option.option'(sK0))) = s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK4('const.option.SOME_1'(s(sK0,sK4(sK4('const.option.SOME_1'(s('type.option.option'(sK0),'const.option.NONE_0')),'type.option.option'(sK0)),sK0))),sK0)))) | s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))) != s('type.option.option'(sK0),sK4('const.option.SOME_1'(s('type.option.option'(sK0),'const.option.NONE_0')),'type.option.option'(sK0))) | ($spl10 | $spl37)),
  inference(forward_demodulation,[],[f1490,f1477])).
fof(f1490,plain,(
  s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))) != s('type.option.option'(sK0),sK4('const.option.SOME_1'(s('type.option.option'(sK0),'const.option.NONE_0')),'type.option.option'(sK0))) | s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK4(sK4('const.option.SOME_1'(s('type.option.option'(sK0),'const.option.NONE_0')),'type.option.option'(sK0)),sK0)))) = s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK4('const.option.SOME_1'(s(sK0,sK4(sK4('const.option.SOME_1'(s('type.option.option'(sK0),'const.option.NONE_0')),'type.option.option'(sK0)),sK0))),sK0)))) | ($spl10 | $spl37)),
  inference(superposition,[],[f483,f1477])).
fof(f1529,plain,(
  s(sK0,sK2) = s(sK0,sK4('const.option.SOME_1'(s(sK0,sK4(sK4('const.option.SOME_1'(s('type.option.option'(sK0),'const.option.NONE_0')),'type.option.option'(sK0)),sK0))),sK0)) | $spl38),
  inference(cnf_transformation,[],[f1529_D])).
fof(f1529_D,plain,(
  s(sK0,sK2) = s(sK0,sK4('const.option.SOME_1'(s(sK0,sK4(sK4('const.option.SOME_1'(s('type.option.option'(sK0),'const.option.NONE_0')),'type.option.option'(sK0)),sK0))),sK0)) <=> ~$spl38),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl38])])).
fof(f1489,plain,(
  s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))) != s('type.option.option'(sK0),sK4('const.option.SOME_1'(s('type.option.option'(sK0),'const.option.NONE_0')),'type.option.option'(sK0))) | s(sK0,sK2) = s(sK0,sK4('const.option.SOME_1'(s(sK0,sK4(sK4('const.option.SOME_1'(s('type.option.option'(sK0),'const.option.NONE_0')),'type.option.option'(sK0)),sK0))),sK0)) | ($spl10 | $spl19 | $spl37)),
  inference(superposition,[],[f1369,f1477])).
fof(f1464,plain,(
  ( ! [X0] : (s('type.option.option'('type.option.option'(sK0)),'const.option.SOME_1'(s('type.option.option'(sK0),'const.option.NONE_0'))) = s('type.option.option'('type.option.option'(sK0)),'const.option.SOME_1'(s('type.option.option'(sK0),X0))) | s('type.option.option'(sK0),X0) = s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK4(X0,sK0))))) ) | $spl34),
  inference(cnf_transformation,[],[f1464_D])).
fof(f1464_D,plain,(
  ( ! [X0] : (s('type.option.option'('type.option.option'(sK0)),'const.option.SOME_1'(s('type.option.option'(sK0),'const.option.NONE_0'))) = s('type.option.option'('type.option.option'(sK0)),'const.option.SOME_1'(s('type.option.option'(sK0),X0))) | s('type.option.option'(sK0),X0) = s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK4(X0,sK0))))) ) <=> ~$spl34),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl34])])).
fof(f1466,plain,(
  s('type.option.option'(sK0),'const.option.NONE_0') != s('type.option.option'(sK0),sK4('const.option.SOME_1'(s('type.option.option'(sK0),'const.option.NONE_0')),'type.option.option'(sK0))) | $spl37),
  inference(cnf_transformation,[],[f1466_D])).
fof(f1466_D,plain,(
  s('type.option.option'(sK0),'const.option.NONE_0') != s('type.option.option'(sK0),sK4('const.option.SOME_1'(s('type.option.option'(sK0),'const.option.NONE_0')),'type.option.option'(sK0))) <=> ~$spl37),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl37])])).
fof(f1444,plain,(
  ( ! [X0] : (s('type.option.option'(sK0),'const.option.NONE_0') != s('type.option.option'(sK0),sK4('const.option.SOME_1'(s('type.option.option'(sK0),'const.option.NONE_0')),'type.option.option'(sK0))) | s('type.option.option'('type.option.option'(sK0)),'const.option.SOME_1'(s('type.option.option'(sK0),'const.option.NONE_0'))) = s('type.option.option'('type.option.option'(sK0)),'const.option.SOME_1'(s('type.option.option'(sK0),X0))) | s('type.option.option'(sK0),X0) = s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK4(X0,sK0))))) ) | $spl33),
  inference(superposition,[],[f935,f47])).
fof(f935,plain,(
  ( ! [X0] : (s('type.option.option'(sK0),X0) != s('type.option.option'(sK0),sK4('const.option.SOME_1'(s('type.option.option'(sK0),'const.option.NONE_0')),'type.option.option'(sK0))) | s('type.option.option'('type.option.option'(sK0)),'const.option.SOME_1'(s('type.option.option'(sK0),'const.option.NONE_0'))) = s('type.option.option'('type.option.option'(sK0)),'const.option.SOME_1'(s('type.option.option'(sK0),X0)))) ) | $spl33),
  inference(superposition,[],[f902,f44])).
fof(f902,plain,(
  s('type.option.option'('type.option.option'(sK0)),'const.option.SOME_1'(s('type.option.option'(sK0),'const.option.NONE_0'))) = s('type.option.option'('type.option.option'(sK0)),'const.option.SOME_1'(s('type.option.option'(sK0),sK4('const.option.SOME_1'(s('type.option.option'(sK0),'const.option.NONE_0')),'type.option.option'(sK0))))) | $spl33),
  inference(trivial_inequality_removal,[],[f899])).
fof(f899,plain,(
  s('type.option.option'('type.option.option'(sK0)),'const.option.NONE_0') != s('type.option.option'('type.option.option'(sK0)),'const.option.NONE_0') | s('type.option.option'('type.option.option'(sK0)),'const.option.SOME_1'(s('type.option.option'(sK0),'const.option.NONE_0'))) = s('type.option.option'('type.option.option'(sK0)),'const.option.SOME_1'(s('type.option.option'(sK0),sK4('const.option.SOME_1'(s('type.option.option'(sK0),'const.option.NONE_0')),'type.option.option'(sK0))))) | $spl33),
  inference(superposition,[],[f892,f47])).
fof(f885,plain,(
  s('type.option.option'('type.option.option'(sK0)),'const.option.NONE_0') != s('type.option.option'('type.option.option'(sK0)),'const.option.SOME_1'(s('type.option.option'(sK0),'const.option.NONE_0'))) | s('type.option.option'('type.option.option'(sK0)),'const.option.SOME_1'(s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))))) = s('type.option.option'('type.option.option'(sK0)),'const.option.SOME_1'(s('type.option.option'(sK0),sK4('const.option.SOME_1'(s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2)))),'type.option.option'(sK0))))) | $spl19),
  inference(superposition,[],[f863,f47])).
fof(f872,plain,(
  s('type.option.option'('type.option.option'(sK0)),'const.option.SOME_1'(s('type.option.option'(sK0),'const.option.NONE_0'))) != s('type.option.option'('type.option.option'(sK0)),'const.option.SOME_1'(s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))))) | $spl29),
  inference(cnf_transformation,[],[f872_D])).
fof(f872_D,plain,(
  s('type.option.option'('type.option.option'(sK0)),'const.option.SOME_1'(s('type.option.option'(sK0),'const.option.NONE_0'))) != s('type.option.option'('type.option.option'(sK0)),'const.option.SOME_1'(s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))))) <=> ~$spl29),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl29])])).
fof(f865,plain,(
  ( ! [X14] : (s('type.option.option'('type.option.option'(sK0)),'const.option.SOME_1'(s('type.option.option'(sK0),'const.option.NONE_0'))) != s('type.option.option'('type.option.option'(sK0)),'const.option.SOME_1'(s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))))) | s('type.option.option'(sK0),X14) = s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK4(X14,sK0))))) ) | $spl19),
  inference(trivial_inequality_removal,[],[f857])).
fof(f857,plain,(
  ( ! [X14] : (s('type.option.option'(sK0),X14) != s('type.option.option'(sK0),X14) | s('type.option.option'('type.option.option'(sK0)),'const.option.SOME_1'(s('type.option.option'(sK0),'const.option.NONE_0'))) != s('type.option.option'('type.option.option'(sK0)),'const.option.SOME_1'(s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))))) | s('type.option.option'(sK0),X14) = s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK4(X14,sK0))))) ) | $spl19),
  inference(superposition,[],[f576,f47])).
fof(f798,plain,(
  ( ! [X0] : (s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),X0) | s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),X0))) != s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),'const.option.OPTION_MAP_2'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))),s('type.option.option'(fun(sK0,sK1)),sK3))))) | s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(sK0,sK1)),sK3),s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))))) = s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,sK4('const.option.OPTION_APPLY_2'(s('type.option.option'(fun(sK0,sK1)),sK3),s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2)))),sK1))))) )),
  inference(superposition,[],[f82,f47])).
fof(f81,plain,(
  s('type.option.option'(sK1),'const.option.OPTION_MAP_2'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))),s('type.option.option'(fun(sK0,sK1)),sK3))) = s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,sK4('const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))),s('type.option.option'(fun(sK0,sK1)),sK3)),sK1)))) | $spl8),
  inference(cnf_transformation,[],[f81_D])).
fof(f81_D,plain,(
  s('type.option.option'(sK1),'const.option.OPTION_MAP_2'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))),s('type.option.option'(fun(sK0,sK1)),sK3))) = s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,sK4('const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))),s('type.option.option'(fun(sK0,sK1)),sK3)),sK1)))) <=> ~$spl8),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl8])])).
fof(f596,plain,(
  s('type.option.option'(sK1),'const.option.OPTION_MAP_2'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))),s('type.option.option'(fun(sK0,sK1)),sK3))) = s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,sK4('const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))),s('type.option.option'(fun(sK0,sK1)),sK3)),sK1)))) | s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(sK0,sK1)),sK3),s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2)))))),
  inference(forward_demodulation,[],[f592,f40])).
fof(f592,plain,(
  s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(sK0,sK1)),sK3),s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))))) | s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))),s('type.option.option'(fun(sK0,sK1)),sK3))) = s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,sK4('const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))),s('type.option.option'(fun(sK0,sK1)),sK3)),sK1))))),
  inference(superposition,[],[f39,f47])).
fof(f595,plain,(
  s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(sK0,sK1)),sK3),s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))))) | s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))) = s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),sK4('const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2)))),fun(fun(sK0,sK1),sK1)))))),
  inference(forward_demodulation,[],[f585,f41])).
fof(f585,plain,(
  s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(sK0,sK1)),sK3),s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))))) != s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.NONE_0'),s('type.option.option'(fun(sK0,sK1)),sK3))) | s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))) = s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),sK4('const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2)))),fun(fun(sK0,sK1),sK1)))))),
  inference(superposition,[],[f39,f47])).
fof(f556,plain,(
  $false | ($spl3 | $spl12 | $spl18)),
  inference(subsumption_resolution,[],[f529,f101])).
fof(f529,plain,(
  s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(sK0,sK1)),sK3),s('type.option.option'(sK0),'const.option.NONE_0'))) | ($spl3 | $spl18)),
  inference(backward_demodulation,[],[f513,f73])).
fof(f515,plain,(
  s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))) = s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK4('const.option.SOME_1'(s(sK0,sK4('const.option.SOME_1'(s(sK0,sK2)),sK0))),sK0)))) | $spl20),
  inference(cnf_transformation,[],[f515_D])).
fof(f515_D,plain,(
  s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))) = s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK4('const.option.SOME_1'(s(sK0,sK4('const.option.SOME_1'(s(sK0,sK2)),sK0))),sK0)))) <=> ~$spl20),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl20])])).
fof(f518,plain,(
  s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))) = s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK4('const.option.SOME_1'(s(sK0,sK4('const.option.SOME_1'(s(sK0,sK2)),sK0))),sK0)))) | s('type.option.option'(sK0),'const.option.NONE_0') = s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))) | $spl10),
  inference(forward_demodulation,[],[f498,f100])).
fof(f498,plain,(
  s('type.option.option'(sK0),'const.option.NONE_0') = s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))) | s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK4('const.option.SOME_1'(s(sK0,sK2)),sK0)))) = s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK4('const.option.SOME_1'(s(sK0,sK4('const.option.SOME_1'(s(sK0,sK2)),sK0))),sK0)))) | $spl10),
  inference(superposition,[],[f47,f100])).
fof(f511,plain,(
  s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))) = s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK4('const.option.SOME_1'(s(sK0,sK4('const.option.SOME_1'(s(sK0,sK2)),sK0))),sK0)))) | s('type.option.option'(sK0),'const.option.NONE_0') = s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))) | $spl10),
  inference(forward_demodulation,[],[f489,f100])).
fof(f489,plain,(
  s('type.option.option'(sK0),'const.option.NONE_0') = s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))) | s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK4('const.option.SOME_1'(s(sK0,sK2)),sK0)))) = s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK4('const.option.SOME_1'(s(sK0,sK4('const.option.SOME_1'(s(sK0,sK2)),sK0))),sK0)))) | $spl10),
  inference(superposition,[],[f100,f47])).
fof(f102,plain,(
  s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(sK0,sK1)),sK3),s('type.option.option'(sK0),'const.option.NONE_0'))) | $spl13),
  inference(cnf_transformation,[],[f102_D])).
fof(f102_D,plain,(
  s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(sK0,sK1)),sK3),s('type.option.option'(sK0),'const.option.NONE_0'))) <=> ~$spl13),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl13])])).
fof(f230,plain,(
  s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(sK0,sK1)),sK3),s('type.option.option'(sK0),'const.option.NONE_0'))) | s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))) = s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK4('const.option.SOME_1'(s(sK0,sK2)),sK0)))) | $spl3),
  inference(superposition,[],[f73,f47])).
fof(f436,plain,(
  $false | ($spl3 | $spl13)),
  inference(subsumption_resolution,[],[f415,f102])).
fof(f415,plain,(
  s('type.option.option'(sK1),'const.option.NONE_0') = s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(sK0,sK1)),sK3),s('type.option.option'(sK0),'const.option.NONE_0'))) | $spl3),
  inference(superposition,[],[f42,f122])).
fof(f122,plain,(
  ( ! [X0] : (s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(sK0,sK1)),sK3),s('type.option.option'(sK0),X0))) = s('type.option.option'(sK1),'const.option.OPTION_MAP_2'(s(fun(sK0,sK1),sK4(sK3,fun(sK0,sK1))),s('type.option.option'(sK0),X0)))) ) | $spl3),
  inference(superposition,[],[f40,f98])).
fof(f98,plain,(
  s('type.option.option'(fun(sK0,sK1)),sK3) = s('type.option.option'(fun(sK0,sK1)),'const.option.SOME_1'(s(fun(sK0,sK1),sK4(sK3,fun(sK0,sK1))))) | $spl3),
  inference(subsumption_resolution,[],[f84,f41])).
fof(f84,plain,(
  s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(sK0,sK1)),'const.option.NONE_0'),s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))))) | s('type.option.option'(fun(sK0,sK1)),sK3) = s('type.option.option'(fun(sK0,sK1)),'const.option.SOME_1'(s(fun(sK0,sK1),sK4(sK3,fun(sK0,sK1))))) | $spl3),
  inference(superposition,[],[f73,f47])).
fof(f432,plain,(
  $false | ($spl3 | $spl13)),
  inference(subsumption_resolution,[],[f410,f102])).
fof(f410,plain,(
  s('type.option.option'(sK1),'const.option.NONE_0') = s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(sK0,sK1)),sK3),s('type.option.option'(sK0),'const.option.NONE_0'))) | $spl3),
  inference(superposition,[],[f122,f42])).
fof(f295,plain,(
  $false | $spl7),
  inference(subsumption_resolution,[],[f289,f42])).
fof(f289,plain,(
  s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),'const.option.OPTION_MAP_2'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))),s('type.option.option'(fun(sK0,sK1)),'const.option.NONE_0'))) | $spl7),
  inference(superposition,[],[f78,f40])).
fof(f220,plain,(
  s('type.option.option'(sK1),'const.option.OPTION_MAP_2'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))),s('type.option.option'(fun(sK0,sK1)),sK3))) = s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,sK4('const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))),s('type.option.option'(fun(sK0,sK1)),sK3)),sK1)))) | s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(sK0,sK1)),sK3),s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2)))))),
  inference(forward_demodulation,[],[f215,f40])).
fof(f215,plain,(
  s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(sK0,sK1)),sK3),s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))))) | s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))),s('type.option.option'(fun(sK0,sK1)),sK3))) = s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,sK4('const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))),s('type.option.option'(fun(sK0,sK1)),sK3)),sK1))))),
  inference(superposition,[],[f39,f47])).
fof(f78,plain,(
  s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))),s('type.option.option'(fun(sK0,sK1)),'const.option.NONE_0'))) | $spl7),
  inference(cnf_transformation,[],[f78_D])).
fof(f78_D,plain,(
  s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))),s('type.option.option'(fun(sK0,sK1)),'const.option.NONE_0'))) <=> ~$spl7),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl7])])).
fof(f219,plain,(
  s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))),s('type.option.option'(fun(sK0,sK1)),'const.option.NONE_0'))) | s('type.option.option'(fun(sK0,sK1)),sK3) = s('type.option.option'(fun(sK0,sK1)),'const.option.SOME_1'(s(fun(sK0,sK1),sK4(sK3,fun(sK0,sK1)))))),
  inference(forward_demodulation,[],[f211,f41])).
fof(f211,plain,(
  s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(sK0,sK1)),'const.option.NONE_0'),s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))))) != s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))),s('type.option.option'(fun(sK0,sK1)),'const.option.NONE_0'))) | s('type.option.option'(fun(sK0,sK1)),sK3) = s('type.option.option'(fun(sK0,sK1)),'const.option.SOME_1'(s(fun(sK0,sK1),sK4(sK3,fun(sK0,sK1)))))),
  inference(superposition,[],[f39,f47])).
fof(f218,plain,(
  s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(sK0,sK1)),sK3),s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))))) | s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))) = s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),sK4('const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2)))),fun(fun(sK0,sK1),sK1)))))),
  inference(forward_demodulation,[],[f208,f41])).
fof(f208,plain,(
  s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(sK0,sK1)),sK3),s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))))) != s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.NONE_0'),s('type.option.option'(fun(sK0,sK1)),sK3))) | s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))) = s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),sK4('const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2)))),fun(fun(sK0,sK1),sK1)))))),
  inference(superposition,[],[f39,f47])).
fof(f174,plain,(
  $false | ($spl3 | $spl14)),
  inference(subsumption_resolution,[],[f157,f41])).
fof(f157,plain,(
  s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(sK0,sK1)),'const.option.NONE_0'),s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))))) | ($spl3 | $spl14)),
  inference(backward_demodulation,[],[f145,f73])).
fof(f173,plain,(
  $false | ($spl13 | $spl14)),
  inference(subsumption_resolution,[],[f156,f41])).
fof(f156,plain,(
  s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(sK0,sK1)),'const.option.NONE_0'),s('type.option.option'(sK0),'const.option.NONE_0'))) | ($spl13 | $spl14)),
  inference(backward_demodulation,[],[f145,f102])).
fof(f145,plain,(
  s('type.option.option'(fun(sK0,sK1)),'const.option.NONE_0') = s('type.option.option'(fun(sK0,sK1)),sK3) | $spl14),
  inference(cnf_transformation,[],[f145_D])).
fof(f145_D,plain,(
  s('type.option.option'(fun(sK0,sK1)),'const.option.NONE_0') = s('type.option.option'(fun(sK0,sK1)),sK3) <=> ~$spl14),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl14])])).
fof(f147,plain,(
  s('type.option.option'(fun(sK0,sK1)),sK3) = s('type.option.option'(fun(sK0,sK1)),'const.option.SOME_1'(s(fun(sK0,sK1),sK4('const.option.SOME_1'(s(fun(sK0,sK1),sK4(sK3,fun(sK0,sK1)))),fun(sK0,sK1))))) | $spl16),
  inference(cnf_transformation,[],[f147_D])).
fof(f147_D,plain,(
  s('type.option.option'(fun(sK0,sK1)),sK3) = s('type.option.option'(fun(sK0,sK1)),'const.option.SOME_1'(s(fun(sK0,sK1),sK4('const.option.SOME_1'(s(fun(sK0,sK1),sK4(sK3,fun(sK0,sK1)))),fun(sK0,sK1))))) <=> ~$spl16),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl16])])).
fof(f150,plain,(
  s('type.option.option'(fun(sK0,sK1)),sK3) = s('type.option.option'(fun(sK0,sK1)),'const.option.SOME_1'(s(fun(sK0,sK1),sK4('const.option.SOME_1'(s(fun(sK0,sK1),sK4(sK3,fun(sK0,sK1)))),fun(sK0,sK1))))) | s('type.option.option'(fun(sK0,sK1)),'const.option.NONE_0') = s('type.option.option'(fun(sK0,sK1)),sK3) | $spl3),
  inference(forward_demodulation,[],[f128,f98])).
fof(f128,plain,(
  s('type.option.option'(fun(sK0,sK1)),'const.option.NONE_0') = s('type.option.option'(fun(sK0,sK1)),sK3) | s('type.option.option'(fun(sK0,sK1)),'const.option.SOME_1'(s(fun(sK0,sK1),sK4(sK3,fun(sK0,sK1))))) = s('type.option.option'(fun(sK0,sK1)),'const.option.SOME_1'(s(fun(sK0,sK1),sK4('const.option.SOME_1'(s(fun(sK0,sK1),sK4(sK3,fun(sK0,sK1)))),fun(sK0,sK1))))) | $spl3),
  inference(superposition,[],[f47,f98])).
fof(f143,plain,(
  s('type.option.option'(fun(sK0,sK1)),sK3) = s('type.option.option'(fun(sK0,sK1)),'const.option.SOME_1'(s(fun(sK0,sK1),sK4('const.option.SOME_1'(s(fun(sK0,sK1),sK4(sK3,fun(sK0,sK1)))),fun(sK0,sK1))))) | s('type.option.option'(fun(sK0,sK1)),'const.option.NONE_0') = s('type.option.option'(fun(sK0,sK1)),sK3) | $spl3),
  inference(forward_demodulation,[],[f119,f98])).
fof(f119,plain,(
  s('type.option.option'(fun(sK0,sK1)),'const.option.NONE_0') = s('type.option.option'(fun(sK0,sK1)),sK3) | s('type.option.option'(fun(sK0,sK1)),'const.option.SOME_1'(s(fun(sK0,sK1),sK4(sK3,fun(sK0,sK1))))) = s('type.option.option'(fun(sK0,sK1)),'const.option.SOME_1'(s(fun(sK0,sK1),sK4('const.option.SOME_1'(s(fun(sK0,sK1),sK4(sK3,fun(sK0,sK1)))),fun(sK0,sK1))))) | $spl3),
  inference(superposition,[],[f98,f47])).
fof(f91,plain,(
  s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(sK0,sK1)),sK3),s('type.option.option'(sK0),'const.option.NONE_0'))) | s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))) = s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK4('const.option.SOME_1'(s(sK0,sK2)),sK0)))) | $spl3),
  inference(superposition,[],[f73,f47])).
fof(f79,plain,(
  s('type.option.option'(sK1),'const.option.OPTION_MAP_2'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))),s('type.option.option'(fun(sK0,sK1)),sK3))) = s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,sK4('const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))),s('type.option.option'(fun(sK0,sK1)),sK3)),sK1)))) | s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(sK0,sK1)),sK3),s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2)))))),
  inference(forward_demodulation,[],[f66,f40])).
fof(f66,plain,(
  s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(sK0,sK1)),sK3),s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))))) | s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))),s('type.option.option'(fun(sK0,sK1)),sK3))) = s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,sK4('const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))),s('type.option.option'(fun(sK0,sK1)),sK3)),sK1))))),
  inference(superposition,[],[f39,f47])).
fof(f74,plain,(
  s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))),s('type.option.option'(fun(sK0,sK1)),'const.option.NONE_0'))) | s('type.option.option'(fun(sK0,sK1)),sK3) = s('type.option.option'(fun(sK0,sK1)),'const.option.SOME_1'(s(fun(sK0,sK1),sK4(sK3,fun(sK0,sK1)))))),
  inference(forward_demodulation,[],[f62,f41])).
fof(f62,plain,(
  s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(sK0,sK1)),'const.option.NONE_0'),s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))))) != s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))),s('type.option.option'(fun(sK0,sK1)),'const.option.NONE_0'))) | s('type.option.option'(fun(sK0,sK1)),sK3) = s('type.option.option'(fun(sK0,sK1)),'const.option.SOME_1'(s(fun(sK0,sK1),sK4(sK3,fun(sK0,sK1)))))),
  inference(superposition,[],[f39,f47])).
fof(f69,plain,(
  s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(sK0,sK1)),sK3),s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))))) | s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))) = s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),sK4('const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2)))),fun(fun(sK0,sK1),sK1)))))),
  inference(forward_demodulation,[],[f59,f41])).
fof(f59,plain,(
  s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(sK0,sK1)),sK3),s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))))) != s('type.option.option'(sK1),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.NONE_0'),s('type.option.option'(fun(sK0,sK1)),sK3))) | s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2))))) = s('type.option.option'(fun(fun(sK0,sK1),sK1)),'const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),sK4('const.option.SOME_1'(s(fun(fun(sK0,sK1),sK1),'_dstsel_0_x0_1'(s(sK0,sK2)))),fun(fun(sK0,sK1),sK1)))))),
  inference(superposition,[],[f39,f47])).
% SZS output end Proof for thm.option
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 663
% Passive clauses: 9108
% Generated clauses: 44733
% Final active clauses: 299
% Final passive clauses: 3735
% Input formulas: 14
% Initial clauses: 13
% 
% Selected by SInE selection: 11
% SInE iterations: 1
% 
% Duplicate literals: 80
% Trivial inequalities: 1808
% Fw subsumption resolutions: 2478
% Fw demodulations: 11476
% Bw demodulations: 49
% 
% Simple tautologies: 337
% Equational tautologies: 6
% Forward subsumptions: 19916
% Fw demodulations to eq. taut.: 259
% Bw demodulations to eq. taut.: 5
% 
% Forward superposition: 18600
% Backward superposition: 9158
% Self superposition: 116
% Equality factoring: 1
% Equality resolution: 216
% 
% Split clauses: 272
% Split components: 544
% SAT solver clauses: 312
% SAT solver unit clauses: 2
% SAT solver binary clauses: 38
% 
% Sat splits: 272
% Sat splitting refutations: 39
% 
% Memory used [KB]: 26609
% Time elapsed: 1.283 s
% ------------------------------
% ------------------------------
% Success in time 13.024 s
