Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.numpair
% (55952)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 1076
% Passive clauses: 8929
% Generated clauses: 47811
% Final active clauses: 1008
% Final passive clauses: 7413
% Input formulas: 261
% Initial clauses: 544
% 
% Duplicate literals: 147
% Trivial inequalities: 198
% Fw subsumption resolutions: 1727
% Fw demodulations: 8577
% Bw demodulations: 56
% 
% Simple tautologies: 335
% Equational tautologies: 30
% Forward subsumptions: 27300
% Fw demodulations to eq. taut.: 1
% 
% Binary resolution: 7443
% Factoring: 401
% Forward superposition: 16513
% Backward superposition: 11915
% Self superposition: 60
% Equality factoring: 2
% Equality resolution: 28
% 
% Split clauses: 478
% Split components: 958
% SAT solver clauses: 655
% SAT solver unit clauses: 28
% SAT solver binary clauses: 94
% 
% Sat splits: 478
% Sat splitting refutations: 9
% 
% TWLsolver clauses: 654
% TWLsolver calls for satisfiability: 379
% 
% Memory used [KB]: 22515
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 143 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.numpair
% (55969)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 584
% Passive clauses: 3487
% Generated clauses: 27378
% Final active clauses: 563
% Final passive clauses: 2648
% Input formulas: 261
% Initial clauses: 544
% 
% Duplicate literals: 102
% Trivial inequalities: 24
% Fw subsumption resolutions: 836
% Fw demodulations: 4872
% Bw demodulations: 273
% Condensations: 132
% Global subsumptions: 36
% 
% Simple tautologies: 298
% Equational tautologies: 14
% Forward subsumptions: 13250
% Fw demodulations to eq. taut.: 9
% Bw demodulations to eq. taut.: 2
% 
% Binary resolution: 3159
% Factoring: 266
% Forward superposition: 8808
% Backward superposition: 4617
% Self superposition: 72
% Equality factoring: 2
% Equality resolution: 9
% 
% Split clauses: 17
% Split components: 34
% SAT solver clauses: 4866
% SAT solver unit clauses: 674
% SAT solver binary clauses: 165
% SAT solver learnt clauses: 72
% SAT solver learnt literals: 14
% 
% Sat splits: 17
% Sat splitting refutations: 4
% 
% TWLsolver clauses: 4722
% TWLsolver calls for satisfiability: 3511
% 
% Memory used [KB]: 23666
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 136 next slice time: 103
lrs+11_2_br=off:cond=on:fde=none:gs=on:gsaa=full_model:lwlo=on:nwc=2:sas=minisat:stl=30:ssfp=100000:ssfq=1.4:smm=sco:ssnc=none:sp=occurrence:urr=on_98 on thm.numpair
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.numpair
% SZS output start Proof for thm.numpair
fof(f25288,plain,(
  $false),
  inference(trivial_inequality_removal,[],[f25287])).
fof(f25287,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.numpair.tri_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK14))))))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.numpair.tri_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK14)))))))),
  inference(backward_demodulation,[],[f25025,f15318])).
fof(f15318,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.numpair.tri_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK14))))))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK14))),s('type.num.num','const.numpair.tri_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK14)))))))))),
  inference(unit_resulting_resolution,[],[f1514,f1248])).
fof(f1248,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))) != s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))) | s('type.num.num',X0) = s('type.num.num',X1)) )),
  inference(cnf_transformation,[],[f833])).
fof(f833,plain,(
  ! [X0,X1] : ((s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))) != s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))) | s('type.num.num',X0) = s('type.num.num',X1)) & (s('type.num.num',X0) != s('type.num.num',X1) | s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',X1)))))),
  inference(nnf_transformation,[],[f505])).
fof(f505,plain,(
  ! [X0,X1] : (s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))) <=> s('type.num.num',X0) = s('type.num.num',X1))),
  inference(rectify,[],[f128])).
fof(f128,axiom,(
  ! [X13,X6] : (s('type.num.num','const.num.SUC_1'(s('type.num.num',X6))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',X13))) <=> s('type.num.num',X6) = s('type.num.num',X13))),
  file('thm.numpair.tri_def_compute|split|2','thm.prim_rec.INV_SUC_EQ')).
fof(f1514,plain,(
  s('type.num.num','const.numpair.tri_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK14))))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK14))),s('type.num.num','const.numpair.tri_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK14)))))))),
  inference(forward_demodulation,[],[f1511,f946])).
fof(f946,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f268])).
fof(f268,plain,(
  ! [X0] : s('type.num.num',X0) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))),
  inference(rectify,[],[f19])).
fof(f19,axiom,(
  ! [X12] : s('type.num.num',X12) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X12)))),
  file('thm.numpair.tri_def_compute|split|2','thm.arithmetic.NUMERAL_DEF')).
fof(f1511,plain,(
  s('type.num.num','const.numpair.tri_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK14))))))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK14))))),s('type.num.num','const.numpair.tri_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK14)))))))),
  inference(backward_demodulation,[],[f946,f926])).
fof(f926,plain,(
  s('type.num.num','const.numpair.tri_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK14))))))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK14))))),s('type.num.num','const.numpair.tri_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK14)))))))))),
  inference(cnf_transformation,[],[f700])).
fof(f700,plain,(
  s('type.num.num','const.numpair.tri_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK14))))))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK14))))),s('type.num.num','const.numpair.tri_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK14)))))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK14])],[f598])).
fof(f598,plain,(
  ? [X0] : s('type.num.num','const.numpair.tri_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))))))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))))),s('type.num.num','const.numpair.tri_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))))))),
  inference(ennf_transformation,[],[f263])).
fof(f263,plain,(
  ~! [X0] : s('type.num.num','const.numpair.tri_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))))),s('type.num.num','const.numpair.tri_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : s('type.num.num','const.numpair.tri_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X6))))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X6))))),s('type.num.num','const.numpair.tri_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X6)))))))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : s('type.num.num','const.numpair.tri_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X6))))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X6))))),s('type.num.num','const.numpair.tri_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X6)))))))))),
  file('thm.numpair.tri_def_compute|split|2','thm.numpair.tri_def_compute|split|2')).
fof(f25025,plain,(
  ( ! [X1] : (s('type.num.num','const.numpair.tri_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1))),s('type.num.num','const.numpair.tri_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1)))))))) )),
  inference(superposition,[],[f985,f965])).
fof(f965,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))) )),
  inference(cnf_transformation,[],[f287])).
fof(f287,plain,(
  ! [X0] : s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))),
  inference(rectify,[],[f228])).
fof(f228,axiom,(
  ! [X6] : s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X6))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X6)))))),
  file('thm.numpair.tri_def_compute|split|2','thm.numeral.numeral_suc|split|1')).
fof(f985,plain,(
  ( ! [X0] : (s('type.num.num','const.numpair.tri_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num','const.numpair.tri_1'(s('type.num.num',X0)))))) )),
  inference(cnf_transformation,[],[f307])).
fof(f307,plain,(
  ! [X0] : s('type.num.num','const.numpair.tri_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num','const.numpair.tri_1'(s('type.num.num',X0)))))),
  inference(rectify,[],[f8])).
fof(f8,axiom,(
  ! [X6] : s('type.num.num','const.numpair.tri_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X6))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X6))),s('type.num.num','const.numpair.tri_1'(s('type.num.num',X6)))))),
  file('thm.numpair.tri_def_compute|split|2','thm.numpair.tri_def|split|1')).
% SZS output end Proof for thm.numpair
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 542
% Passive clauses: 3132
% Generated clauses: 24354
% Final active clauses: 525
% Final passive clauses: 2476
% Input formulas: 261
% Initial clauses: 544
% 
% Duplicate literals: 10
% Trivial inequalities: 4
% Fw subsumption resolutions: 253
% Fw demodulations: 5054
% Bw demodulations: 131
% Condensations: 29
% 
% Simple tautologies: 123
% Equational tautologies: 32
% Forward subsumptions: 15203
% Fw demodulations to eq. taut.: 270
% 
% Unit resulting resolution: 5670
% Factoring: 1
% Forward superposition: 7669
% Backward superposition: 4925
% Self superposition: 59
% Equality factoring: 2
% Equality resolution: 6
% 
% Split clauses: 1
% Split components: 2
% SAT solver clauses: 3136
% SAT solver unit clauses: 2087
% SAT solver binary clauses: 855
% 
% Sat splits: 1
% 
% Memory used [KB]: 15095
% Time elapsed: 0.459 s
% ------------------------------
% ------------------------------
% Success in time 1.79 s
