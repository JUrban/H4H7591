Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 300 next slice time: 5
dis+11_7_3 on thm.numpair
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.numpair
% SZS output start Proof for thm.numpair
fof(f871,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f870,f89,f145,f143,f154,f90,f146,f144])).
fof(f144,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.numpair.tri_1'(s('type.num.num',sK0))) | $spl1),
  inference(cnf_transformation,[],[f144_D])).
fof(f144_D,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.numpair.tri_1'(s('type.num.num',sK0))) <=> ~$spl1),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1])])).
fof(f146,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num',sK0) | $spl3),
  inference(cnf_transformation,[],[f146_D])).
fof(f146_D,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num',sK0) <=> ~$spl3),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl3])])).
fof(f90,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num',sK0) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.numpair.tri_1'(s('type.num.num',sK0)))),
  inference(cnf_transformation,[],[f65])).
fof(f65,plain,(
  (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.numpair.tri_1'(s('type.num.num',sK0))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',sK0)) & (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.numpair.tri_1'(s('type.num.num',sK0))) | s('type.num.num','const.num.|48|_0') != s('type.num.num',sK0))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0])],[f64])).
fof(f64,plain,(
  ? [X0] : ((s('type.num.num','const.num.|48|_0') = s('type.num.num','const.numpair.tri_1'(s('type.num.num',X0))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X0)) & (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.numpair.tri_1'(s('type.num.num',X0))) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X0)))),
  inference(nnf_transformation,[],[f59])).
fof(f59,plain,(
  ? [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.numpair.tri_1'(s('type.num.num',X0))) <~> s('type.num.num','const.num.|48|_0') = s('type.num.num',X0))),
  inference(ennf_transformation,[],[f29])).
fof(f29,plain,(
  ~! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.numpair.tri_1'(s('type.num.num',X0))) <=> s('type.num.num','const.num.|48|_0') = s('type.num.num',X0))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.numpair.tri_1'(s('type.num.num',X6))) <=> s('type.num.num','const.num.|48|_0') = s('type.num.num',X6))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.numpair.tri_1'(s('type.num.num',X6))) <=> s('type.num.num','const.num.|48|_0') = s('type.num.num',X6))),
  file('thm.numpair.tri_eq_|48||split|1','thm.numpair.tri_eq_|48||split|1')).
fof(f154,plain,(
  $false | ($spl1 | $spl2)),
  inference(subsumption_resolution,[],[f93,f153])).
fof(f153,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.numpair.tri_1'(s('type.num.num','const.num.|48|_0'))) | ($spl1 | $spl2)),
  inference(forward_demodulation,[],[f144,f145])).
fof(f93,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.numpair.tri_1'(s('type.num.num','const.num.|48|_0')))),
  inference(cnf_transformation,[],[f27])).
fof(f27,axiom,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.numpair.tri_1'(s('type.num.num','const.num.|48|_0')))),
  file('thm.numpair.tri_eq_|48||split|1','thm.numpair.tri_def|split|0')).
fof(f143,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.numpair.tri_1'(s('type.num.num',sK0))) | $spl0),
  inference(cnf_transformation,[],[f143_D])).
fof(f143_D,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.numpair.tri_1'(s('type.num.num',sK0))) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f145,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num',sK0) | $spl2),
  inference(cnf_transformation,[],[f145_D])).
fof(f145_D,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num',sK0) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f89,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num',sK0) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.numpair.tri_1'(s('type.num.num',sK0)))),
  inference(cnf_transformation,[],[f65])).
fof(f870,plain,(
  $false | ($spl0 | $spl3)),
  inference(subsumption_resolution,[],[f869,f146])).
fof(f869,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num',sK0) | $spl0),
  inference(trivial_inequality_removal,[],[f867])).
fof(f867,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.num.|48|_0') | s('type.num.num','const.num.|48|_0') = s('type.num.num',sK0) | $spl0),
  inference(superposition,[],[f862,f143])).
fof(f862,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.numpair.tri_1'(s('type.num.num',X0))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X0)) )),
  inference(superposition,[],[f857,f101])).
fof(f101,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK1(X0)))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X0)) )),
  inference(cnf_transformation,[],[f68])).
fof(f68,plain,(
  ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num',X0) | s('type.num.num',X0) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK1(X0)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK1])],[f34])).
fof(f34,plain,(
  ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num',X0) | ? [X1] : s('type.num.num',X0) = s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))))),
  inference(rectify,[],[f7])).
fof(f7,axiom,(
  ! [X7] : (s('type.num.num','const.num.|48|_0') = s('type.num.num',X7) | ? [X6] : s('type.num.num',X7) = s('type.num.num','const.num.SUC_1'(s('type.num.num',X6))))),
  file('thm.numpair.tri_eq_|48||split|1','thm.arithmetic.num_CASES')).
fof(f857,plain,(
  ( ! [X1] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.numpair.tri_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1)))))) )),
  inference(subsumption_resolution,[],[f851,f128])).
fof(f128,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f50])).
fof(f50,plain,(
  ! [X0] : s('type.num.num','const.num.|48|_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))),
  inference(flattening,[],[f49])).
fof(f49,plain,(
  ! [X0] : ~s('type.num.num','const.num.|48|_0') = s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))),
  inference(rectify,[],[f26])).
fof(f26,axiom,(
  ! [X6] : ~s('type.num.num','const.num.|48|_0') = s('type.num.num','const.num.SUC_1'(s('type.num.num',X6)))),
  file('thm.numpair.tri_eq_|48||split|1','thm.num.NOT_SUC')).
fof(f851,plain,(
  ( ! [X1] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.numpair.tri_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))))) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.num.SUC_1'(s('type.num.num',X1)))) )),
  inference(superposition,[],[f137,f99])).
fof(f99,plain,(
  ( ! [X0] : (s('type.num.num','const.numpair.tri_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num','const.numpair.tri_1'(s('type.num.num',X0)))))) )),
  inference(cnf_transformation,[],[f33])).
fof(f33,plain,(
  ! [X0] : s('type.num.num','const.numpair.tri_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num','const.numpair.tri_1'(s('type.num.num',X0)))))),
  inference(rectify,[],[f28])).
fof(f28,axiom,(
  ! [X6] : s('type.num.num','const.numpair.tri_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X6))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X6))),s('type.num.num','const.numpair.tri_1'(s('type.num.num',X6)))))),
  file('thm.numpair.tri_eq_|48||split|1','thm.numpair.tri_def|split|1')).
fof(f137,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X0)) )),
  inference(cnf_transformation,[],[f87])).
fof(f87,plain,(
  ! [X0,X1] : ((s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))) | (s('type.num.num','const.num.|48|_0') = s('type.num.num',X0) & s('type.num.num','const.num.|48|_0') = s('type.num.num',X1))) & (s('type.num.num','const.num.|48|_0') != s('type.num.num',X0) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X1) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1)))))),
  inference(flattening,[],[f86])).
fof(f86,plain,(
  ! [X0,X1] : ((s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))) | (s('type.num.num','const.num.|48|_0') = s('type.num.num',X0) & s('type.num.num','const.num.|48|_0') = s('type.num.num',X1))) & ((s('type.num.num','const.num.|48|_0') != s('type.num.num',X0) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X1)) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1)))))),
  inference(nnf_transformation,[],[f56])).
fof(f56,plain,(
  ! [X0,X1] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))) <=> (s('type.num.num','const.num.|48|_0') = s('type.num.num',X0) & s('type.num.num','const.num.|48|_0') = s('type.num.num',X1)))),
  inference(rectify,[],[f8])).
fof(f8,axiom,(
  ! [X7,X6] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X7),s('type.num.num',X6))) <=> (s('type.num.num','const.num.|48|_0') = s('type.num.num',X7) & s('type.num.num','const.num.|48|_0') = s('type.num.num',X6)))),
  file('thm.numpair.tri_eq_|48||split|1','thm.arithmetic.ADD_EQ_|48|')).
% SZS output end Proof for thm.numpair
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 30
% Passive clauses: 131
% Generated clauses: 735
% Final active clauses: 28
% Final passive clauses: 87
% Input formulas: 27
% Initial clauses: 52
% 
% Duplicate literals: 86
% Trivial inequalities: 18
% Fw subsumption resolutions: 88
% Fw demodulations: 1
% 
% Simple tautologies: 70
% Equational tautologies: 29
% Forward subsumptions: 302
% 
% Binary resolution: 29
% Factoring: 1
% Forward superposition: 111
% Backward superposition: 244
% Self superposition: 43
% Equality factoring: 50
% Equality resolution: 4
% 
% Split clauses: 15
% Split components: 30
% SAT solver clauses: 26
% SAT solver unit clauses: 5
% SAT solver binary clauses: 20
% SAT solver learnt clauses: 2
% SAT solver learnt literals: 1
% 
% Sat splits: 15
% Sat splitting refutations: 2
% 
% TWLsolver clauses: 24
% TWLsolver calls for satisfiability: 5
% 
% Memory used [KB]: 767
% Time elapsed: 0.029 s
% ------------------------------
% ------------------------------
% Success in time 0.031 s
