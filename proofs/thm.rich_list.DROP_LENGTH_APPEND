Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.rich_list
% (99672)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 239
% Passive clauses: 3398
% Generated clauses: 23456
% Final active clauses: 224
% Final passive clauses: 2890
% Input formulas: 69
% Initial clauses: 110
% 
% Duplicate literals: 529
% Trivial inequalities: 371
% Fw subsumption resolutions: 2050
% Fw demodulations: 5319
% Bw demodulations: 12
% 
% Simple tautologies: 301
% Equational tautologies: 53
% Forward subsumptions: 10920
% Fw demodulations to eq. taut.: 73
% 
% Binary resolution: 376
% Factoring: 1
% Forward superposition: 9515
% Backward superposition: 5056
% Self superposition: 189
% Equality factoring: 90
% Equality resolution: 98
% 
% Split clauses: 200
% Split components: 401
% SAT solver clauses: 709
% SAT solver unit clauses: 47
% SAT solver binary clauses: 159
% 
% Sat splits: 200
% Sat splitting refutations: 2
% 
% TWLsolver clauses: 709
% TWLsolver calls for satisfiability: 164
% 
% Memory used [KB]: 15479
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 143 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.rich_list
% (99686)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 179
% Passive clauses: 1110
% Generated clauses: 18301
% Final active clauses: 159
% Final passive clauses: 860
% Input formulas: 69
% Initial clauses: 110
% 
% Duplicate literals: 598
% Trivial inequalities: 171
% Fw subsumption resolutions: 1290
% Fw demodulations: 2898
% Bw demodulations: 83
% Condensations: 975
% Global subsumptions: 8
% 
% Simple tautologies: 205
% Equational tautologies: 56
% Forward subsumptions: 9066
% Fw demodulations to eq. taut.: 69
% 
% Binary resolution: 333
% Factoring: 3
% Forward superposition: 6206
% Backward superposition: 4190
% Self superposition: 170
% Equality factoring: 90
% Equality resolution: 50
% 
% Split clauses: 96
% Split components: 192
% SAT solver clauses: 1960
% SAT solver unit clauses: 152
% SAT solver binary clauses: 62
% SAT solver learnt clauses: 16
% SAT solver learnt literals: 2
% 
% Sat splits: 96
% Sat splitting refutations: 11
% 
% TWLsolver clauses: 1928
% TWLsolver calls for satisfiability: 437
% 
% Memory used [KB]: 17142
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 136 next slice time: 103
lrs+11_2_br=off:cond=on:fde=none:gs=on:gsaa=full_model:lwlo=on:nwc=2:sas=minisat:stl=30:ssfp=100000:ssfq=1.4:smm=sco:ssnc=none:sp=occurrence:urr=on_98 on thm.rich_list
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.rich_list
% SZS output start Proof for thm.rich_list
fof(f14231,plain,(
  $false),
  inference(trivial_inequality_removal,[],[f14230])).
fof(f14230,plain,(
  ( ! [X0,X1] : (s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),X0),s('type.list.list'(sK0),sK2))),s('type.list.list'(sK0),X1))) != s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),X0),s('type.list.list'(sK0),sK2))),s('type.list.list'(sK0),X1)))) )),
  inference(backward_demodulation,[],[f14224,f6749])).
fof(f6749,plain,(
  ( ! [X0,X1] : (s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),X0),s('type.list.list'(sK0),sK2))),s('type.list.list'(sK0),X1))) != s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),X0),s('type.list.list'(sK0),'const.list.DROP_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),sK1),s('type.list.list'(sK0),sK2))))))),s('type.list.list'(sK0),X1)))) )),
  inference(unit_resulting_resolution,[],[f6719,f299])).
fof(f299,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),X1))) != s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X3),s('type.list.list'(X0),X1))) | s('type.list.list'(X0),X2) = s('type.list.list'(X0),X3)) )),
  inference(cnf_transformation,[],[f214])).
fof(f214,plain,(
  ! [X0,X1,X2,X3] : ((s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),X1))) != s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X3),s('type.list.list'(X0),X1))) | s('type.list.list'(X0),X2) = s('type.list.list'(X0),X3)) & (s('type.list.list'(X0),X2) != s('type.list.list'(X0),X3) | s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),X1))) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X3),s('type.list.list'(X0),X1)))))),
  inference(nnf_transformation,[],[f136])).
fof(f136,plain,(
  ! [X0,X1,X2,X3] : (s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),X1))) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X3),s('type.list.list'(X0),X1))) <=> s('type.list.list'(X0),X2) = s('type.list.list'(X0),X3))),
  inference(flattening,[],[f135])).
fof(f135,plain,(
  ! [X0] : ! [X1,X2,X3] : (s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),X1))) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X3),s('type.list.list'(X0),X1))) <=> s('type.list.list'(X0),X2) = s('type.list.list'(X0),X3))),
  inference(rectify,[],[f41])).
fof(f41,axiom,(
  ! [X6] : ! [X7,X8,X19] : (s('type.list.list'(X6),'const.list.APPEND_2'(s('type.list.list'(X6),X8),s('type.list.list'(X6),X7))) = s('type.list.list'(X6),'const.list.APPEND_2'(s('type.list.list'(X6),X19),s('type.list.list'(X6),X7))) <=> s('type.list.list'(X6),X8) = s('type.list.list'(X6),X19))),
  file('thm.rich_list.DROP_LENGTH_APPEND','thm.list.APPEND_|49||49||split|1')).
fof(f6719,plain,(
  ( ! [X0] : (s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),X0),s('type.list.list'(sK0),sK2))) != s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),X0),s('type.list.list'(sK0),'const.list.DROP_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),sK1),s('type.list.list'(sK0),sK2)))))))) )),
  inference(unit_resulting_resolution,[],[f229,f301])).
fof(f301,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),X2))) != s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),X3))) | s('type.list.list'(X0),X2) = s('type.list.list'(X0),X3)) )),
  inference(cnf_transformation,[],[f215])).
fof(f215,plain,(
  ! [X0,X1,X2,X3] : ((s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),X2))) != s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),X3))) | s('type.list.list'(X0),X2) = s('type.list.list'(X0),X3)) & (s('type.list.list'(X0),X2) != s('type.list.list'(X0),X3) | s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),X2))) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),X3)))))),
  inference(nnf_transformation,[],[f138])).
fof(f138,plain,(
  ! [X0,X1,X2,X3] : (s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),X2))) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),X3))) <=> s('type.list.list'(X0),X2) = s('type.list.list'(X0),X3))),
  inference(flattening,[],[f137])).
fof(f137,plain,(
  ! [X0] : ! [X1,X2,X3] : (s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),X2))) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),X3))) <=> s('type.list.list'(X0),X2) = s('type.list.list'(X0),X3))),
  inference(rectify,[],[f43])).
fof(f43,axiom,(
  ! [X6] : ! [X7,X8,X19] : (s('type.list.list'(X6),'const.list.APPEND_2'(s('type.list.list'(X6),X7),s('type.list.list'(X6),X8))) = s('type.list.list'(X6),'const.list.APPEND_2'(s('type.list.list'(X6),X7),s('type.list.list'(X6),X19))) <=> s('type.list.list'(X6),X8) = s('type.list.list'(X6),X19))),
  file('thm.rich_list.DROP_LENGTH_APPEND','thm.list.APPEND_|49||49||split|0')).
fof(f229,plain,(
  s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.DROP_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),sK1),s('type.list.list'(sK0),sK2)))))),
  inference(cnf_transformation,[],[f187])).
fof(f187,plain,(
  s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.DROP_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),sK1),s('type.list.list'(sK0),sK2)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2])],[f164])).
fof(f164,plain,(
  ? [X0,X1,X2] : s('type.list.list'(X0),X2) != s('type.list.list'(X0),'const.list.DROP_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),X2)))))),
  inference(ennf_transformation,[],[f72])).
fof(f72,plain,(
  ~! [X0,X1,X2] : s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.DROP_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),X2)))))),
  inference(flattening,[],[f71])).
fof(f71,plain,(
  ~! [X0] : ! [X1,X2] : s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.DROP_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),X2)))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : ! [X7,X8] : s('type.list.list'(X6),X8) = s('type.list.list'(X6),'const.list.DROP_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X7))),s('type.list.list'(X6),'const.list.APPEND_2'(s('type.list.list'(X6),X7),s('type.list.list'(X6),X8)))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : ! [X7,X8] : s('type.list.list'(X6),X8) = s('type.list.list'(X6),'const.list.DROP_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X7))),s('type.list.list'(X6),'const.list.APPEND_2'(s('type.list.list'(X6),X7),s('type.list.list'(X6),X8)))))),
  file('thm.rich_list.DROP_LENGTH_APPEND','thm.rich_list.DROP_LENGTH_APPEND')).
fof(f14224,plain,(
  ( ! [X6,X4,X5] : (s('type.list.list'(X4),X6) = s('type.list.list'(X4),'const.list.DROP_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X4),X5))),s('type.list.list'(X4),'const.list.APPEND_2'(s('type.list.list'(X4),X5),s('type.list.list'(X4),X6)))))) )),
  inference(forward_demodulation,[],[f14223,f283])).
fof(f283,plain,(
  ( ! [X0,X1] : (s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.NIL_0'),s('type.list.list'(X0),X1)))) )),
  inference(cnf_transformation,[],[f111])).
fof(f111,plain,(
  ! [X0,X1] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.NIL_0'),s('type.list.list'(X0),X1)))),
  inference(flattening,[],[f110])).
fof(f110,plain,(
  ! [X0] : ! [X1] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.NIL_0'),s('type.list.list'(X0),X1)))),
  inference(rectify,[],[f22])).
fof(f22,axiom,(
  ! [X6] : ! [X9] : s('type.list.list'(X6),X9) = s('type.list.list'(X6),'const.list.APPEND_2'(s('type.list.list'(X6),'const.list.NIL_0'),s('type.list.list'(X6),X9)))),
  file('thm.rich_list.DROP_LENGTH_APPEND','thm.list.APPEND|split|0')).
fof(f14223,plain,(
  ( ! [X6,X4,X5] : (s('type.list.list'(X4),'const.list.APPEND_2'(s('type.list.list'(X4),'const.list.NIL_0'),s('type.list.list'(X4),X6))) = s('type.list.list'(X4),'const.list.DROP_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X4),X5))),s('type.list.list'(X4),'const.list.APPEND_2'(s('type.list.list'(X4),X5),s('type.list.list'(X4),X6)))))) )),
  inference(forward_demodulation,[],[f14222,f284])).
fof(f284,plain,(
  ( ! [X0,X1] : (s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),'const.list.DROP_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.list.list'(X0),X1)))) )),
  inference(cnf_transformation,[],[f113])).
fof(f113,plain,(
  ! [X0,X1] : s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),'const.list.DROP_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.list.list'(X0),X1)))),
  inference(flattening,[],[f112])).
fof(f112,plain,(
  ! [X0] : ! [X1] : s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),'const.list.DROP_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.list.list'(X0),X1)))),
  inference(rectify,[],[f7])).
fof(f7,axiom,(
  ! [X6] : ! [X9] : s('type.list.list'(X6),'const.list.NIL_0') = s('type.list.list'(X6),'const.list.DROP_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X9))),s('type.list.list'(X6),X9)))),
  file('thm.rich_list.DROP_LENGTH_APPEND','thm.rich_list.DROP_LENGTH_NIL')).
fof(f14222,plain,(
  ( ! [X6,X4,X5] : (s('type.list.list'(X4),'const.list.APPEND_2'(s('type.list.list'(X4),'const.list.DROP_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X4),X5))),s('type.list.list'(X4),X5))),s('type.list.list'(X4),X6))) = s('type.list.list'(X4),'const.list.DROP_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X4),X5))),s('type.list.list'(X4),'const.list.APPEND_2'(s('type.list.list'(X4),X5),s('type.list.list'(X4),X6)))))) )),
  inference(subsumption_resolution,[],[f14135,f230])).
fof(f230,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f13])).
fof(f13,axiom,(
  p(s(bool,'T_0'))),
  file('thm.rich_list.DROP_LENGTH_APPEND','thm.bool.TRUTH')).
fof(f14135,plain,(
  ( ! [X6,X4,X5] : (~p(s(bool,'T_0')) | s('type.list.list'(X4),'const.list.APPEND_2'(s('type.list.list'(X4),'const.list.DROP_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X4),X5))),s('type.list.list'(X4),X5))),s('type.list.list'(X4),X6))) = s('type.list.list'(X4),'const.list.DROP_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X4),X5))),s('type.list.list'(X4),'const.list.APPEND_2'(s('type.list.list'(X4),X5),s('type.list.list'(X4),X6)))))) )),
  inference(superposition,[],[f293,f805])).
fof(f805,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X0)))) )),
  inference(unit_resulting_resolution,[],[f767,f251])).
fof(f251,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f190])).
fof(f190,plain,(
  ! [X0] : ((s(bool,'T_0') != s(bool,X0) | p(s(bool,X0))) & (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f88])).
fof(f88,plain,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) <=> p(s(bool,X0)))),
  inference(rectify,[],[f35])).
fof(f35,axiom,(
  ! [X11] : (s(bool,'T_0') = s(bool,X11) <=> p(s(bool,X11)))),
  file('thm.rich_list.DROP_LENGTH_APPEND','thm.bool.EQ_CLAUSES|split|1')).
fof(f767,plain,(
  ( ! [X0] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X0))))) )),
  inference(forward_demodulation,[],[f747,f237])).
fof(f237,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) )),
  inference(cnf_transformation,[],[f77])).
fof(f77,plain,(
  ! [X0] : s('type.num.num',X0) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))),
  inference(rectify,[],[f24])).
fof(f24,axiom,(
  ! [X16] : s('type.num.num',X16) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X16),s('type.num.num','const.num.|48|_0')))),
  file('thm.rich_list.DROP_LENGTH_APPEND','thm.arithmetic.SUB_|48||split|1')).
fof(f747,plain,(
  ( ! [X0] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0'))))))) )),
  inference(unit_resulting_resolution,[],[f237,f319])).
fof(f319,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0)))) | s('type.num.num',X0) != s('type.num.num',X1)) )),
  inference(cnf_transformation,[],[f220])).
fof(f220,plain,(
  ! [X0,X1] : ((s('type.num.num',X0) != s('type.num.num',X1) | (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1)))) & p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0)))))) & (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0)))) | s('type.num.num',X0) = s('type.num.num',X1)))),
  inference(flattening,[],[f219])).
fof(f219,plain,(
  ! [X0,X1] : ((s('type.num.num',X0) != s('type.num.num',X1) | (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1)))) & p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0)))))) & ((~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0))))) | s('type.num.num',X0) = s('type.num.num',X1)))),
  inference(nnf_transformation,[],[f150])).
fof(f150,plain,(
  ! [X0,X1] : (s('type.num.num',X0) = s('type.num.num',X1) <=> (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1)))) & p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0))))))),
  inference(rectify,[],[f61])).
fof(f61,axiom,(
  ! [X16,X10] : (s('type.num.num',X10) = s('type.num.num',X16) <=> (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X16),s('type.num.num',X10)))) & p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X10),s('type.num.num',X16))))))),
  file('thm.rich_list.DROP_LENGTH_APPEND','thm.arithmetic.EQ_LESS_EQ')).
fof(f293,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2)))))) | s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.DROP_2'(s('type.num.num',X1),s('type.list.list'(X0),X2))),s('type.list.list'(X0),X3))) = s('type.list.list'(X0),'const.list.DROP_2'(s('type.num.num',X1),s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),X3)))))) )),
  inference(cnf_transformation,[],[f176])).
fof(f176,plain,(
  ! [X0,X1,X2] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2)))))) | ! [X3] : s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.DROP_2'(s('type.num.num',X1),s('type.list.list'(X0),X2))),s('type.list.list'(X0),X3))) = s('type.list.list'(X0),'const.list.DROP_2'(s('type.num.num',X1),s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),X3))))))),
  inference(ennf_transformation,[],[f124])).
fof(f124,plain,(
  ! [X0,X1,X2] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2)))))) => ! [X3] : s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.DROP_2'(s('type.num.num',X1),s('type.list.list'(X0),X2))),s('type.list.list'(X0),X3))) = s('type.list.list'(X0),'const.list.DROP_2'(s('type.num.num',X1),s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),X3))))))),
  inference(flattening,[],[f123])).
fof(f123,plain,(
  ! [X0] : ! [X1,X2] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2)))))) => ! [X3] : s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.DROP_2'(s('type.num.num',X1),s('type.list.list'(X0),X2))),s('type.list.list'(X0),X3))) = s('type.list.list'(X0),'const.list.DROP_2'(s('type.num.num',X1),s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),X3))))))),
  inference(rectify,[],[f8])).
fof(f8,axiom,(
  ! [X6] : ! [X10,X7] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X10),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X7)))))) => ! [X8] : s('type.list.list'(X6),'const.list.APPEND_2'(s('type.list.list'(X6),'const.list.DROP_2'(s('type.num.num',X10),s('type.list.list'(X6),X7))),s('type.list.list'(X6),X8))) = s('type.list.list'(X6),'const.list.DROP_2'(s('type.num.num',X10),s('type.list.list'(X6),'const.list.APPEND_2'(s('type.list.list'(X6),X7),s('type.list.list'(X6),X8))))))),
  file('thm.rich_list.DROP_LENGTH_APPEND','thm.rich_list.DROP_APPEND|49|')).
% SZS output end Proof for thm.rich_list
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 158
% Passive clauses: 696
% Generated clauses: 13999
% Final active clauses: 124
% Final passive clauses: 416
% Input formulas: 69
% Initial clauses: 110
% 
% Duplicate literals: 517
% Trivial inequalities: 134
% Fw subsumption resolutions: 938
% Fw demodulations: 2274
% Bw demodulations: 149
% Condensations: 782
% Global subsumptions: 33
% 
% Simple tautologies: 200
% Equational tautologies: 104
% Forward subsumptions: 8102
% Fw demodulations to eq. taut.: 132
% Bw demodulations to eq. taut.: 6
% 
% Unit resulting resolution: 727
% Factoring: 1
% Forward superposition: 4309
% Backward superposition: 3633
% Self superposition: 149
% Equality factoring: 84
% Equality resolution: 31
% 
% Split clauses: 36
% Split components: 72
% SAT solver clauses: 837
% SAT solver unit clauses: 176
% SAT solver binary clauses: 410
% 
% Sat splits: 36
% Sat splitting refutations: 34
% 
% Memory used [KB]: 7547
% Time elapsed: 0.318 s
% ------------------------------
% ------------------------------
% Success in time 1.641 s
