Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 300 next slice time: 5
dis+11_7_3 on thm.seq
% (110465)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 90
% Passive clauses: 2764
% Generated clauses: 18915
% Final active clauses: 79
% Final passive clauses: 2578
% Input formulas: 9
% Initial clauses: 11
% 
% Duplicate literals: 1163
% Trivial inequalities: 246
% Fw subsumption resolutions: 2147
% Fw demodulations: 1739
% Bw demodulations: 9
% 
% Simple tautologies: 314
% Equational tautologies: 92
% Forward subsumptions: 8070
% Bw demodulations to eq. taut.: 1
% 
% Binary resolution: 31
% Forward superposition: 8084
% Backward superposition: 4769
% Self superposition: 321
% Equality factoring: 244
% Equality resolution: 11
% 
% Split clauses: 868
% Split components: 1747
% SAT solver clauses: 2120
% SAT solver unit clauses: 388
% SAT solver binary clauses: 546
% 
% Sat splits: 868
% Sat splitting refutations: 3
% 
% TWLsolver clauses: 2120
% TWLsolver calls for satisfiability: 84
% 
% Memory used [KB]: 7675
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 293 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.seq
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.seq
% SZS output start Proof for thm.seq
fof(f495,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f492,f28,f38,f29,f44,f68,f70,f26,f42,f31,f48,f32,f49,f450,f451,f65,f67,f27,f40,f388,f389,f34,f51,f36,f53,f71,f73,f30,f46])).
fof(f46,plain,(
  p(s(bool,'const.nets.dorder_1'(s(fun('type.num.num',fun('type.num.num',bool)),'const.arithmetic.>=_0')))) | $spl8),
  inference(cnf_transformation,[],[f46_D])).
fof(f46_D,plain,(
  p(s(bool,'const.nets.dorder_1'(s(fun('type.num.num',fun('type.num.num',bool)),'const.arithmetic.>=_0')))) <=> ~$spl8),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl8])])).
fof(f30,plain,(
  p(s(bool,'const.nets.dorder_1'(s(fun('type.num.num',fun('type.num.num',bool)),'const.arithmetic.>=_0'))))),
  inference(cnf_transformation,[],[f7])).
fof(f7,axiom,(
  p(s(bool,'const.nets.dorder_1'(s(fun('type.num.num',fun('type.num.num',bool)),'const.arithmetic.>=_0'))))),
  file('thm.seq.SEQ_UNIQ','thm.nets.DORDER_NGE')).
fof(f73,plain,(
  s(bool,'T_0') = s(bool,'const.nets.dorder_1'(s(fun('type.num.num',fun('type.num.num',bool)),'const.arithmetic.>=_0'))) | $spl30),
  inference(cnf_transformation,[],[f73_D])).
fof(f73_D,plain,(
  s(bool,'T_0') = s(bool,'const.nets.dorder_1'(s(fun('type.num.num',fun('type.num.num',bool)),'const.arithmetic.>=_0'))) <=> ~$spl30),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl30])])).
fof(f71,plain,(
  s(bool,'T_0') = s(bool,'const.nets.dorder_1'(s(fun('type.num.num',fun('type.num.num',bool)),'const.arithmetic.>=_0'))) | ($spl8 | $spl11 | $spl12)),
  inference(subsumption_resolution,[],[f60,f48])).
fof(f60,plain,(
  p(s(bool,'F_0')) | s(bool,'T_0') = s(bool,'const.nets.dorder_1'(s(fun('type.num.num',fun('type.num.num',bool)),'const.arithmetic.>=_0'))) | ($spl8 | $spl12)),
  inference(superposition,[],[f46,f49])).
fof(f53,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (~p(s(bool,'const.nets.tends_3'(s(fun(X0,X1),X4),s(X1,X2),s('type.pair.prod'('type.topology.topology'(X1),fun(X0,fun(X0,bool))),'const.pair.,_2'(s('type.topology.topology'(X1),'const.topology.mtop_1'(s('type.topology.metric'(X1),X6))),s(fun(X0,fun(X0,bool)),X5)))))) | ~p(s(bool,'const.nets.tends_3'(s(fun(X0,X1),X4),s(X1,X3),s('type.pair.prod'('type.topology.topology'(X1),fun(X0,fun(X0,bool))),'const.pair.,_2'(s('type.topology.topology'(X1),'const.topology.mtop_1'(s('type.topology.metric'(X1),X6))),s(fun(X0,fun(X0,bool)),X5)))))) | s(X1,X2) = s(X1,X3) | ~p(s(bool,'const.nets.dorder_1'(s(fun(X0,fun(X0,bool)),X5))))) ) | $spl20),
  inference(cnf_transformation,[],[f53_D])).
fof(f53_D,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (~p(s(bool,'const.nets.tends_3'(s(fun(X0,X1),X4),s(X1,X2),s('type.pair.prod'('type.topology.topology'(X1),fun(X0,fun(X0,bool))),'const.pair.,_2'(s('type.topology.topology'(X1),'const.topology.mtop_1'(s('type.topology.metric'(X1),X6))),s(fun(X0,fun(X0,bool)),X5)))))) | ~p(s(bool,'const.nets.tends_3'(s(fun(X0,X1),X4),s(X1,X3),s('type.pair.prod'('type.topology.topology'(X1),fun(X0,fun(X0,bool))),'const.pair.,_2'(s('type.topology.topology'(X1),'const.topology.mtop_1'(s('type.topology.metric'(X1),X6))),s(fun(X0,fun(X0,bool)),X5)))))) | s(X1,X2) = s(X1,X3) | ~p(s(bool,'const.nets.dorder_1'(s(fun(X0,fun(X0,bool)),X5))))) ) <=> ~$spl20),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl20])])).
fof(f36,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s(X1,X2) = s(X1,X3) | ~p(s(bool,'const.nets.tends_3'(s(fun(X0,X1),X4),s(X1,X2),s('type.pair.prod'('type.topology.topology'(X1),fun(X0,fun(X0,bool))),'const.pair.,_2'(s('type.topology.topology'(X1),'const.topology.mtop_1'(s('type.topology.metric'(X1),X6))),s(fun(X0,fun(X0,bool)),X5)))))) | ~p(s(bool,'const.nets.tends_3'(s(fun(X0,X1),X4),s(X1,X3),s('type.pair.prod'('type.topology.topology'(X1),fun(X0,fun(X0,bool))),'const.pair.,_2'(s('type.topology.topology'(X1),'const.topology.mtop_1'(s('type.topology.metric'(X1),X6))),s(fun(X0,fun(X0,bool)),X5)))))) | ~p(s(bool,'const.nets.dorder_1'(s(fun(X0,fun(X0,bool)),X5))))) )),
  inference(cnf_transformation,[],[f23])).
fof(f23,plain,(
  ! [X0,X1,X2,X3,X4,X5,X6] : (~p(s(bool,'const.nets.dorder_1'(s(fun(X0,fun(X0,bool)),X5)))) | ~p(s(bool,'const.nets.tends_3'(s(fun(X0,X1),X4),s(X1,X3),s('type.pair.prod'('type.topology.topology'(X1),fun(X0,fun(X0,bool))),'const.pair.,_2'(s('type.topology.topology'(X1),'const.topology.mtop_1'(s('type.topology.metric'(X1),X6))),s(fun(X0,fun(X0,bool)),X5)))))) | ~p(s(bool,'const.nets.tends_3'(s(fun(X0,X1),X4),s(X1,X2),s('type.pair.prod'('type.topology.topology'(X1),fun(X0,fun(X0,bool))),'const.pair.,_2'(s('type.topology.topology'(X1),'const.topology.mtop_1'(s('type.topology.metric'(X1),X6))),s(fun(X0,fun(X0,bool)),X5)))))) | s(X1,X2) = s(X1,X3))),
  inference(flattening,[],[f22])).
fof(f22,plain,(
  ! [X0,X1,X2,X3,X4,X5,X6] : (~p(s(bool,'const.nets.dorder_1'(s(fun(X0,fun(X0,bool)),X5)))) | ((~p(s(bool,'const.nets.tends_3'(s(fun(X0,X1),X4),s(X1,X3),s('type.pair.prod'('type.topology.topology'(X1),fun(X0,fun(X0,bool))),'const.pair.,_2'(s('type.topology.topology'(X1),'const.topology.mtop_1'(s('type.topology.metric'(X1),X6))),s(fun(X0,fun(X0,bool)),X5)))))) | ~p(s(bool,'const.nets.tends_3'(s(fun(X0,X1),X4),s(X1,X2),s('type.pair.prod'('type.topology.topology'(X1),fun(X0,fun(X0,bool))),'const.pair.,_2'(s('type.topology.topology'(X1),'const.topology.mtop_1'(s('type.topology.metric'(X1),X6))),s(fun(X0,fun(X0,bool)),X5))))))) | s(X1,X2) = s(X1,X3)))),
  inference(ennf_transformation,[],[f18])).
fof(f18,plain,(
  ! [X0,X1,X2,X3,X4,X5,X6] : (p(s(bool,'const.nets.dorder_1'(s(fun(X0,fun(X0,bool)),X5)))) => ((p(s(bool,'const.nets.tends_3'(s(fun(X0,X1),X4),s(X1,X3),s('type.pair.prod'('type.topology.topology'(X1),fun(X0,fun(X0,bool))),'const.pair.,_2'(s('type.topology.topology'(X1),'const.topology.mtop_1'(s('type.topology.metric'(X1),X6))),s(fun(X0,fun(X0,bool)),X5)))))) & p(s(bool,'const.nets.tends_3'(s(fun(X0,X1),X4),s(X1,X2),s('type.pair.prod'('type.topology.topology'(X1),fun(X0,fun(X0,bool))),'const.pair.,_2'(s('type.topology.topology'(X1),'const.topology.mtop_1'(s('type.topology.metric'(X1),X6))),s(fun(X0,fun(X0,bool)),X5))))))) => s(X1,X2) = s(X1,X3)))),
  inference(flattening,[],[f17])).
fof(f17,plain,(
  ! [X0,X1] : ! [X2,X3,X4,X5,X6] : (p(s(bool,'const.nets.dorder_1'(s(fun(X0,fun(X0,bool)),X5)))) => ((p(s(bool,'const.nets.tends_3'(s(fun(X0,X1),X4),s(X1,X3),s('type.pair.prod'('type.topology.topology'(X1),fun(X0,fun(X0,bool))),'const.pair.,_2'(s('type.topology.topology'(X1),'const.topology.mtop_1'(s('type.topology.metric'(X1),X6))),s(fun(X0,fun(X0,bool)),X5)))))) & p(s(bool,'const.nets.tends_3'(s(fun(X0,X1),X4),s(X1,X2),s('type.pair.prod'('type.topology.topology'(X1),fun(X0,fun(X0,bool))),'const.pair.,_2'(s('type.topology.topology'(X1),'const.topology.mtop_1'(s('type.topology.metric'(X1),X6))),s(fun(X0,fun(X0,bool)),X5))))))) => s(X1,X2) = s(X1,X3)))),
  inference(rectify,[],[f8])).
fof(f8,axiom,(
  ! [X9,X10] : ! [X7,X11,X6,X12,X13] : (p(s(bool,'const.nets.dorder_1'(s(fun(X9,fun(X9,bool)),X12)))) => ((p(s(bool,'const.nets.tends_3'(s(fun(X9,X10),X6),s(X10,X11),s('type.pair.prod'('type.topology.topology'(X10),fun(X9,fun(X9,bool))),'const.pair.,_2'(s('type.topology.topology'(X10),'const.topology.mtop_1'(s('type.topology.metric'(X10),X13))),s(fun(X9,fun(X9,bool)),X12)))))) & p(s(bool,'const.nets.tends_3'(s(fun(X9,X10),X6),s(X10,X7),s('type.pair.prod'('type.topology.topology'(X10),fun(X9,fun(X9,bool))),'const.pair.,_2'(s('type.topology.topology'(X10),'const.topology.mtop_1'(s('type.topology.metric'(X10),X13))),s(fun(X9,fun(X9,bool)),X12))))))) => s(X10,X7) = s(X10,X11)))),
  file('thm.seq.SEQ_UNIQ','thm.nets.MTOP_TENDS_UNIQ')).
fof(f51,plain,(
  ( ! [X0,X1] : (s(bool,'const.seq.-->_2'(s(fun('type.num.num','type.realax.real'),X0),s('type.realax.real',X1))) = s(bool,'const.nets.tends_3'(s(fun('type.num.num','type.realax.real'),X0),s('type.realax.real',X1),s('type.pair.prod'('type.topology.topology'('type.realax.real'),fun('type.num.num',fun('type.num.num',bool))),'const.pair.,_2'(s('type.topology.topology'('type.realax.real'),'const.topology.mtop_1'(s('type.topology.metric'('type.realax.real'),'const.topology.mr|49|_0'))),s(fun('type.num.num',fun('type.num.num',bool)),'const.arithmetic.>=_0')))))) ) | $spl16),
  inference(cnf_transformation,[],[f51_D])).
fof(f51_D,plain,(
  ( ! [X0,X1] : (s(bool,'const.seq.-->_2'(s(fun('type.num.num','type.realax.real'),X0),s('type.realax.real',X1))) = s(bool,'const.nets.tends_3'(s(fun('type.num.num','type.realax.real'),X0),s('type.realax.real',X1),s('type.pair.prod'('type.topology.topology'('type.realax.real'),fun('type.num.num',fun('type.num.num',bool))),'const.pair.,_2'(s('type.topology.topology'('type.realax.real'),'const.topology.mtop_1'(s('type.topology.metric'('type.realax.real'),'const.topology.mr|49|_0'))),s(fun('type.num.num',fun('type.num.num',bool)),'const.arithmetic.>=_0')))))) ) <=> ~$spl16),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl16])])).
fof(f34,plain,(
  ( ! [X0,X1] : (s(bool,'const.seq.-->_2'(s(fun('type.num.num','type.realax.real'),X0),s('type.realax.real',X1))) = s(bool,'const.nets.tends_3'(s(fun('type.num.num','type.realax.real'),X0),s('type.realax.real',X1),s('type.pair.prod'('type.topology.topology'('type.realax.real'),fun('type.num.num',fun('type.num.num',bool))),'const.pair.,_2'(s('type.topology.topology'('type.realax.real'),'const.topology.mtop_1'(s('type.topology.metric'('type.realax.real'),'const.topology.mr|49|_0'))),s(fun('type.num.num',fun('type.num.num',bool)),'const.arithmetic.>=_0')))))) )),
  inference(cnf_transformation,[],[f14])).
fof(f14,plain,(
  ! [X0,X1] : s(bool,'const.seq.-->_2'(s(fun('type.num.num','type.realax.real'),X0),s('type.realax.real',X1))) = s(bool,'const.nets.tends_3'(s(fun('type.num.num','type.realax.real'),X0),s('type.realax.real',X1),s('type.pair.prod'('type.topology.topology'('type.realax.real'),fun('type.num.num',fun('type.num.num',bool))),'const.pair.,_2'(s('type.topology.topology'('type.realax.real'),'const.topology.mtop_1'(s('type.topology.metric'('type.realax.real'),'const.topology.mr|49|_0'))),s(fun('type.num.num',fun('type.num.num',bool)),'const.arithmetic.>=_0')))))),
  inference(rectify,[],[f9])).
fof(f9,axiom,(
  ! [X6,X11] : s(bool,'const.seq.-->_2'(s(fun('type.num.num','type.realax.real'),X6),s('type.realax.real',X11))) = s(bool,'const.nets.tends_3'(s(fun('type.num.num','type.realax.real'),X6),s('type.realax.real',X11),s('type.pair.prod'('type.topology.topology'('type.realax.real'),fun('type.num.num',fun('type.num.num',bool))),'const.pair.,_2'(s('type.topology.topology'('type.realax.real'),'const.topology.mtop_1'(s('type.topology.metric'('type.realax.real'),'const.topology.mr|49|_0'))),s(fun('type.num.num',fun('type.num.num',bool)),'const.arithmetic.>=_0')))))),
  file('thm.seq.SEQ_UNIQ','thm.seq.tends_num_real')).
fof(f389,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.seq.-->_2'(s(fun('type.num.num','type.realax.real'),X0),s('type.realax.real',X2)))) | ~p(s(bool,'const.seq.-->_2'(s(fun('type.num.num','type.realax.real'),X0),s('type.realax.real',X1)))) | s('type.realax.real',X1) = s('type.realax.real',X2)) ) | $spl72),
  inference(cnf_transformation,[],[f389_D])).
fof(f389_D,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.seq.-->_2'(s(fun('type.num.num','type.realax.real'),X0),s('type.realax.real',X2)))) | ~p(s(bool,'const.seq.-->_2'(s(fun('type.num.num','type.realax.real'),X0),s('type.realax.real',X1)))) | s('type.realax.real',X1) = s('type.realax.real',X2)) ) <=> ~$spl72),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl72])])).
fof(f388,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.seq.-->_2'(s(fun('type.num.num','type.realax.real'),X0),s('type.realax.real',X2)))) | ~p(s(bool,'const.seq.-->_2'(s(fun('type.num.num','type.realax.real'),X0),s('type.realax.real',X1)))) | s('type.realax.real',X1) = s('type.realax.real',X2)) ) | ($spl6 | $spl16 | $spl20 | $spl30)),
  inference(subsumption_resolution,[],[f387,f44])).
fof(f387,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'T_0')) | ~p(s(bool,'const.seq.-->_2'(s(fun('type.num.num','type.realax.real'),X0),s('type.realax.real',X2)))) | ~p(s(bool,'const.seq.-->_2'(s(fun('type.num.num','type.realax.real'),X0),s('type.realax.real',X1)))) | s('type.realax.real',X1) = s('type.realax.real',X2)) ) | ($spl16 | $spl20 | $spl30)),
  inference(forward_demodulation,[],[f386,f73])).
fof(f386,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.seq.-->_2'(s(fun('type.num.num','type.realax.real'),X0),s('type.realax.real',X2)))) | ~p(s(bool,'const.seq.-->_2'(s(fun('type.num.num','type.realax.real'),X0),s('type.realax.real',X1)))) | s('type.realax.real',X1) = s('type.realax.real',X2) | ~p(s(bool,'const.nets.dorder_1'(s(fun('type.num.num',fun('type.num.num',bool)),'const.arithmetic.>=_0'))))) ) | ($spl16 | $spl20)),
  inference(forward_demodulation,[],[f352,f51])).
fof(f352,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.seq.-->_2'(s(fun('type.num.num','type.realax.real'),X0),s('type.realax.real',X1)))) | ~p(s(bool,'const.nets.tends_3'(s(fun('type.num.num','type.realax.real'),X0),s('type.realax.real',X2),s('type.pair.prod'('type.topology.topology'('type.realax.real'),fun('type.num.num',fun('type.num.num',bool))),'const.pair.,_2'(s('type.topology.topology'('type.realax.real'),'const.topology.mtop_1'(s('type.topology.metric'('type.realax.real'),'const.topology.mr|49|_0'))),s(fun('type.num.num',fun('type.num.num',bool)),'const.arithmetic.>=_0')))))) | s('type.realax.real',X1) = s('type.realax.real',X2) | ~p(s(bool,'const.nets.dorder_1'(s(fun('type.num.num',fun('type.num.num',bool)),'const.arithmetic.>=_0'))))) ) | ($spl16 | $spl20)),
  inference(superposition,[],[f53,f51])).
fof(f40,plain,(
  p(s(bool,'const.seq.-->_2'(s(fun('type.num.num','type.realax.real'),sK0),s('type.realax.real',sK2)))) | $spl2),
  inference(cnf_transformation,[],[f40_D])).
fof(f40_D,plain,(
  p(s(bool,'const.seq.-->_2'(s(fun('type.num.num','type.realax.real'),sK0),s('type.realax.real',sK2)))) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f27,plain,(
  p(s(bool,'const.seq.-->_2'(s(fun('type.num.num','type.realax.real'),sK0),s('type.realax.real',sK2))))),
  inference(cnf_transformation,[],[f24])).
fof(f24,plain,(
  p(s(bool,'const.seq.-->_2'(s(fun('type.num.num','type.realax.real'),sK0),s('type.realax.real',sK1)))) & p(s(bool,'const.seq.-->_2'(s(fun('type.num.num','type.realax.real'),sK0),s('type.realax.real',sK2)))) & s('type.realax.real',sK1) != s('type.realax.real',sK2)),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2])],[f20])).
fof(f20,plain,(
  ? [X0,X1,X2] : (p(s(bool,'const.seq.-->_2'(s(fun('type.num.num','type.realax.real'),X0),s('type.realax.real',X1)))) & p(s(bool,'const.seq.-->_2'(s(fun('type.num.num','type.realax.real'),X0),s('type.realax.real',X2)))) & s('type.realax.real',X1) != s('type.realax.real',X2))),
  inference(flattening,[],[f19])).
fof(f19,plain,(
  ? [X0,X1,X2] : ((p(s(bool,'const.seq.-->_2'(s(fun('type.num.num','type.realax.real'),X0),s('type.realax.real',X1)))) & p(s(bool,'const.seq.-->_2'(s(fun('type.num.num','type.realax.real'),X0),s('type.realax.real',X2))))) & s('type.realax.real',X1) != s('type.realax.real',X2))),
  inference(ennf_transformation,[],[f11])).
fof(f11,plain,(
  ~! [X0,X1,X2] : ((p(s(bool,'const.seq.-->_2'(s(fun('type.num.num','type.realax.real'),X0),s('type.realax.real',X1)))) & p(s(bool,'const.seq.-->_2'(s(fun('type.num.num','type.realax.real'),X0),s('type.realax.real',X2))))) => s('type.realax.real',X1) = s('type.realax.real',X2))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7,X8] : ((p(s(bool,'const.seq.-->_2'(s(fun('type.num.num','type.realax.real'),X6),s('type.realax.real',X7)))) & p(s(bool,'const.seq.-->_2'(s(fun('type.num.num','type.realax.real'),X6),s('type.realax.real',X8))))) => s('type.realax.real',X7) = s('type.realax.real',X8))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7,X8] : ((p(s(bool,'const.seq.-->_2'(s(fun('type.num.num','type.realax.real'),X6),s('type.realax.real',X7)))) & p(s(bool,'const.seq.-->_2'(s(fun('type.num.num','type.realax.real'),X6),s('type.realax.real',X8))))) => s('type.realax.real',X7) = s('type.realax.real',X8))),
  file('thm.seq.SEQ_UNIQ','thm.seq.SEQ_UNIQ')).
fof(f67,plain,(
  s(bool,'T_0') = s(bool,'const.seq.-->_2'(s(fun('type.num.num','type.realax.real'),sK0),s('type.realax.real',sK2))) | $spl26),
  inference(cnf_transformation,[],[f67_D])).
fof(f67_D,plain,(
  s(bool,'T_0') = s(bool,'const.seq.-->_2'(s(fun('type.num.num','type.realax.real'),sK0),s('type.realax.real',sK2))) <=> ~$spl26),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl26])])).
fof(f65,plain,(
  s(bool,'T_0') = s(bool,'const.seq.-->_2'(s(fun('type.num.num','type.realax.real'),sK0),s('type.realax.real',sK2))) | ($spl2 | $spl11 | $spl12)),
  inference(subsumption_resolution,[],[f58,f48])).
fof(f58,plain,(
  p(s(bool,'F_0')) | s(bool,'T_0') = s(bool,'const.seq.-->_2'(s(fun('type.num.num','type.realax.real'),sK0),s('type.realax.real',sK2))) | ($spl2 | $spl12)),
  inference(superposition,[],[f40,f49])).
fof(f451,plain,(
  ( ! [X0] : (~p(s(bool,'const.seq.-->_2'(s(fun('type.num.num','type.realax.real'),sK0),s('type.realax.real',X0)))) | s('type.realax.real',sK2) = s('type.realax.real',X0)) ) | $spl78),
  inference(cnf_transformation,[],[f451_D])).
fof(f451_D,plain,(
  ( ! [X0] : (~p(s(bool,'const.seq.-->_2'(s(fun('type.num.num','type.realax.real'),sK0),s('type.realax.real',X0)))) | s('type.realax.real',sK2) = s('type.realax.real',X0)) ) <=> ~$spl78),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl78])])).
fof(f450,plain,(
  ( ! [X0] : (~p(s(bool,'const.seq.-->_2'(s(fun('type.num.num','type.realax.real'),sK0),s('type.realax.real',X0)))) | s('type.realax.real',sK2) = s('type.realax.real',X0)) ) | ($spl6 | $spl26 | $spl72)),
  inference(subsumption_resolution,[],[f435,f44])).
fof(f435,plain,(
  ( ! [X0] : (~p(s(bool,'T_0')) | ~p(s(bool,'const.seq.-->_2'(s(fun('type.num.num','type.realax.real'),sK0),s('type.realax.real',X0)))) | s('type.realax.real',sK2) = s('type.realax.real',X0)) ) | ($spl26 | $spl72)),
  inference(superposition,[],[f389,f67])).
fof(f49,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) ) | $spl12),
  inference(cnf_transformation,[],[f49_D])).
fof(f49_D,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) ) <=> ~$spl12),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl12])])).
fof(f32,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f3])).
fof(f3,axiom,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) | s(bool,'F_0') = s(bool,X0))),
  file('thm.seq.SEQ_UNIQ',aHL_BOOL_CASES)).
fof(f48,plain,(
  ~p(s(bool,'F_0')) | $spl11),
  inference(cnf_transformation,[],[f48_D])).
fof(f48_D,plain,(
  ~p(s(bool,'F_0')) <=> ~$spl11),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl11])])).
fof(f31,plain,(
  ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f12])).
fof(f12,plain,(
  ~p(s(bool,'F_0'))),
  inference(flattening,[],[f2])).
fof(f2,axiom,(
  ~p(s(bool,'F_0'))),
  file('thm.seq.SEQ_UNIQ',aHL_FALSITY)).
fof(f42,plain,(
  p(s(bool,'const.seq.-->_2'(s(fun('type.num.num','type.realax.real'),sK0),s('type.realax.real',sK1)))) | $spl4),
  inference(cnf_transformation,[],[f42_D])).
fof(f42_D,plain,(
  p(s(bool,'const.seq.-->_2'(s(fun('type.num.num','type.realax.real'),sK0),s('type.realax.real',sK1)))) <=> ~$spl4),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl4])])).
fof(f26,plain,(
  p(s(bool,'const.seq.-->_2'(s(fun('type.num.num','type.realax.real'),sK0),s('type.realax.real',sK1))))),
  inference(cnf_transformation,[],[f24])).
fof(f70,plain,(
  s(bool,'T_0') = s(bool,'const.seq.-->_2'(s(fun('type.num.num','type.realax.real'),sK0),s('type.realax.real',sK1))) | $spl28),
  inference(cnf_transformation,[],[f70_D])).
fof(f70_D,plain,(
  s(bool,'T_0') = s(bool,'const.seq.-->_2'(s(fun('type.num.num','type.realax.real'),sK0),s('type.realax.real',sK1))) <=> ~$spl28),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl28])])).
fof(f68,plain,(
  s(bool,'T_0') = s(bool,'const.seq.-->_2'(s(fun('type.num.num','type.realax.real'),sK0),s('type.realax.real',sK1))) | ($spl4 | $spl11 | $spl12)),
  inference(subsumption_resolution,[],[f59,f48])).
fof(f59,plain,(
  p(s(bool,'F_0')) | s(bool,'T_0') = s(bool,'const.seq.-->_2'(s(fun('type.num.num','type.realax.real'),sK0),s('type.realax.real',sK1))) | ($spl4 | $spl12)),
  inference(superposition,[],[f42,f49])).
fof(f44,plain,(
  p(s(bool,'T_0')) | $spl6),
  inference(cnf_transformation,[],[f44_D])).
fof(f44_D,plain,(
  p(s(bool,'T_0')) <=> ~$spl6),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl6])])).
fof(f29,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f1])).
fof(f1,axiom,(
  p(s(bool,'T_0'))),
  file('thm.seq.SEQ_UNIQ',aHL_TRUTH)).
fof(f38,plain,(
  s('type.realax.real',sK1) != s('type.realax.real',sK2) | $spl1),
  inference(cnf_transformation,[],[f38_D])).
fof(f38_D,plain,(
  s('type.realax.real',sK1) != s('type.realax.real',sK2) <=> ~$spl1),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1])])).
fof(f28,plain,(
  s('type.realax.real',sK1) != s('type.realax.real',sK2)),
  inference(cnf_transformation,[],[f24])).
fof(f492,plain,(
  $false | ($spl1 | $spl6 | $spl28 | $spl78)),
  inference(subsumption_resolution,[],[f491,f38])).
fof(f491,plain,(
  s('type.realax.real',sK1) = s('type.realax.real',sK2) | ($spl6 | $spl28 | $spl78)),
  inference(subsumption_resolution,[],[f484,f44])).
fof(f484,plain,(
  ~p(s(bool,'T_0')) | s('type.realax.real',sK1) = s('type.realax.real',sK2) | ($spl28 | $spl78)),
  inference(superposition,[],[f451,f70])).
% SZS output end Proof for thm.seq
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 21
% Passive clauses: 49
% Generated clauses: 456
% Final active clauses: 18
% Final passive clauses: 21
% Input formulas: 9
% Initial clauses: 11
% 
% Duplicate literals: 56
% Trivial inequalities: 2
% Fw subsumption resolutions: 24
% Fw demodulations: 18
% Bw demodulations: 9
% Condensations: 48
% 
% Simple tautologies: 16
% Equational tautologies: 16
% Forward subsumptions: 127
% 
% Binary resolution: 8
% Factoring: 2
% Forward superposition: 110
% Backward superposition: 66
% Self superposition: 22
% Equality factoring: 26
% 
% Split clauses: 1
% Split components: 2
% SAT solver clauses: 105
% SAT solver unit clauses: 19
% SAT solver binary clauses: 7
% SAT solver learnt clauses: 1
% 
% Sat splits: 1
% Sat splitting refutations: 4
% 
% TWLsolver clauses: 104
% TWLsolver calls for satisfiability: 53
% 
% Memory used [KB]: 1151
% Time elapsed: 0.021 s
% ------------------------------
% ------------------------------
% Success in time 0.635 s
