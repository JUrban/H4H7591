Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 300 next slice time: 5
dis+11_7_3 on thm.lim
% (87914)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 87
% Passive clauses: 2711
% Generated clauses: 18355
% Final active clauses: 78
% Final passive clauses: 2547
% Input formulas: 8
% Initial clauses: 10
% 
% Duplicate literals: 1076
% Trivial inequalities: 258
% Fw subsumption resolutions: 2223
% Fw demodulations: 1713
% Bw demodulations: 6
% 
% Simple tautologies: 314
% Equational tautologies: 90
% Forward subsumptions: 7884
% Bw demodulations to eq. taut.: 1
% 
% Binary resolution: 32
% Forward superposition: 7988
% Backward superposition: 4348
% Self superposition: 314
% Equality factoring: 238
% Equality resolution: 13
% 
% Split clauses: 852
% Split components: 1715
% SAT solver clauses: 2102
% SAT solver unit clauses: 309
% SAT solver binary clauses: 548
% 
% Sat splits: 852
% Sat splitting refutations: 1
% 
% TWLsolver clauses: 2102
% TWLsolver calls for satisfiability: 86
% 
% Memory used [KB]: 7291
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 293 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.lim
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.lim
% SZS output start Proof for thm.lim
fof(f1881,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f1870,f28,f37,f29,f43,f64,f66,f26,f41,f30,f45,f31,f46,f1825,f1826,f61,f63,f27,f39,f416,f417,f34,f49,f35,f50,f86,f87,f32,f47])).
fof(f47,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,'const.nets.dorder_1'(s(fun(X0,fun(X0,bool)),'const.nets.tendsto_1'(s('type.pair.prod'('type.topology.metric'(X0),X0),'const.pair.,_2'(s('type.topology.metric'(X0),X1),s(X0,X2))))))))) ) | $spl12),
  inference(cnf_transformation,[],[f47_D])).
fof(f47_D,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,'const.nets.dorder_1'(s(fun(X0,fun(X0,bool)),'const.nets.tendsto_1'(s('type.pair.prod'('type.topology.metric'(X0),X0),'const.pair.,_2'(s('type.topology.metric'(X0),X1),s(X0,X2))))))))) ) <=> ~$spl12),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl12])])).
fof(f32,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,'const.nets.dorder_1'(s(fun(X0,fun(X0,bool)),'const.nets.tendsto_1'(s('type.pair.prod'('type.topology.metric'(X0),X0),'const.pair.,_2'(s('type.topology.metric'(X0),X1),s(X0,X2))))))))) )),
  inference(cnf_transformation,[],[f13])).
fof(f13,plain,(
  ! [X0,X1,X2] : p(s(bool,'const.nets.dorder_1'(s(fun(X0,fun(X0,bool)),'const.nets.tendsto_1'(s('type.pair.prod'('type.topology.metric'(X0),X0),'const.pair.,_2'(s('type.topology.metric'(X0),X1),s(X0,X2))))))))),
  inference(flattening,[],[f12])).
fof(f12,plain,(
  ! [X0] : ! [X1,X2] : p(s(bool,'const.nets.dorder_1'(s(fun(X0,fun(X0,bool)),'const.nets.tendsto_1'(s('type.pair.prod'('type.topology.metric'(X0),X0),'const.pair.,_2'(s('type.topology.metric'(X0),X1),s(X0,X2))))))))),
  inference(rectify,[],[f8])).
fof(f8,axiom,(
  ! [X11] : ! [X8,X9] : p(s(bool,'const.nets.dorder_1'(s(fun(X11,fun(X11,bool)),'const.nets.tendsto_1'(s('type.pair.prod'('type.topology.metric'(X11),X11),'const.pair.,_2'(s('type.topology.metric'(X11),X8),s(X11,X9))))))))),
  file('thm.lim.LIM_UNIQ','thm.nets.DORDER_TENDSTO')).
fof(f87,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,'const.nets.dorder_1'(s(fun(X0,fun(X0,bool)),'const.nets.tendsto_1'(s('type.pair.prod'('type.topology.metric'(X0),X0),'const.pair.,_2'(s('type.topology.metric'(X0),X1),s(X0,X2)))))))) ) | $spl32),
  inference(cnf_transformation,[],[f87_D])).
fof(f87_D,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,'const.nets.dorder_1'(s(fun(X0,fun(X0,bool)),'const.nets.tendsto_1'(s('type.pair.prod'('type.topology.metric'(X0),X0),'const.pair.,_2'(s('type.topology.metric'(X0),X1),s(X0,X2)))))))) ) <=> ~$spl32),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl32])])).
fof(f86,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,'const.nets.dorder_1'(s(fun(X0,fun(X0,bool)),'const.nets.tendsto_1'(s('type.pair.prod'('type.topology.metric'(X0),X0),'const.pair.,_2'(s('type.topology.metric'(X0),X1),s(X0,X2)))))))) ) | ($spl9 | $spl10 | $spl12)),
  inference(subsumption_resolution,[],[f85,f45])).
fof(f85,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,'F_0')) | s(bool,'T_0') = s(bool,'const.nets.dorder_1'(s(fun(X0,fun(X0,bool)),'const.nets.tendsto_1'(s('type.pair.prod'('type.topology.metric'(X0),X0),'const.pair.,_2'(s('type.topology.metric'(X0),X1),s(X0,X2)))))))) ) | ($spl10 | $spl12)),
  inference(superposition,[],[f47,f46])).
fof(f50,plain,(
  ( ! [X2,X0,X1] : (s(bool,'const.lim.tends_real_real_3'(s(fun('type.realax.real','type.realax.real'),X0),s('type.realax.real',X1),s('type.realax.real',X2))) = s(bool,'const.nets.tends_3'(s(fun('type.realax.real','type.realax.real'),X0),s('type.realax.real',X1),s('type.pair.prod'('type.topology.topology'('type.realax.real'),fun('type.realax.real',fun('type.realax.real',bool))),'const.pair.,_2'(s('type.topology.topology'('type.realax.real'),'const.topology.mtop_1'(s('type.topology.metric'('type.realax.real'),'const.topology.mr|49|_0'))),s(fun('type.realax.real',fun('type.realax.real',bool)),'const.nets.tendsto_1'(s('type.pair.prod'('type.topology.metric'('type.realax.real'),'type.realax.real'),'const.pair.,_2'(s('type.topology.metric'('type.realax.real'),'const.topology.mr|49|_0'),s('type.realax.real',X2)))))))))) ) | $spl18),
  inference(cnf_transformation,[],[f50_D])).
fof(f50_D,plain,(
  ( ! [X2,X0,X1] : (s(bool,'const.lim.tends_real_real_3'(s(fun('type.realax.real','type.realax.real'),X0),s('type.realax.real',X1),s('type.realax.real',X2))) = s(bool,'const.nets.tends_3'(s(fun('type.realax.real','type.realax.real'),X0),s('type.realax.real',X1),s('type.pair.prod'('type.topology.topology'('type.realax.real'),fun('type.realax.real',fun('type.realax.real',bool))),'const.pair.,_2'(s('type.topology.topology'('type.realax.real'),'const.topology.mtop_1'(s('type.topology.metric'('type.realax.real'),'const.topology.mr|49|_0'))),s(fun('type.realax.real',fun('type.realax.real',bool)),'const.nets.tendsto_1'(s('type.pair.prod'('type.topology.metric'('type.realax.real'),'type.realax.real'),'const.pair.,_2'(s('type.topology.metric'('type.realax.real'),'const.topology.mr|49|_0'),s('type.realax.real',X2)))))))))) ) <=> ~$spl18),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl18])])).
fof(f35,plain,(
  ( ! [X2,X0,X1] : (s(bool,'const.lim.tends_real_real_3'(s(fun('type.realax.real','type.realax.real'),X0),s('type.realax.real',X1),s('type.realax.real',X2))) = s(bool,'const.nets.tends_3'(s(fun('type.realax.real','type.realax.real'),X0),s('type.realax.real',X1),s('type.pair.prod'('type.topology.topology'('type.realax.real'),fun('type.realax.real',fun('type.realax.real',bool))),'const.pair.,_2'(s('type.topology.topology'('type.realax.real'),'const.topology.mtop_1'(s('type.topology.metric'('type.realax.real'),'const.topology.mr|49|_0'))),s(fun('type.realax.real',fun('type.realax.real',bool)),'const.nets.tendsto_1'(s('type.pair.prod'('type.topology.metric'('type.realax.real'),'type.realax.real'),'const.pair.,_2'(s('type.topology.metric'('type.realax.real'),'const.topology.mr|49|_0'),s('type.realax.real',X2)))))))))) )),
  inference(cnf_transformation,[],[f18])).
fof(f18,plain,(
  ! [X0,X1,X2] : s(bool,'const.lim.tends_real_real_3'(s(fun('type.realax.real','type.realax.real'),X0),s('type.realax.real',X1),s('type.realax.real',X2))) = s(bool,'const.nets.tends_3'(s(fun('type.realax.real','type.realax.real'),X0),s('type.realax.real',X1),s('type.pair.prod'('type.topology.topology'('type.realax.real'),fun('type.realax.real',fun('type.realax.real',bool))),'const.pair.,_2'(s('type.topology.topology'('type.realax.real'),'const.topology.mtop_1'(s('type.topology.metric'('type.realax.real'),'const.topology.mr|49|_0'))),s(fun('type.realax.real',fun('type.realax.real',bool)),'const.nets.tendsto_1'(s('type.pair.prod'('type.topology.metric'('type.realax.real'),'type.realax.real'),'const.pair.,_2'(s('type.topology.metric'('type.realax.real'),'const.topology.mr|49|_0'),s('type.realax.real',X2)))))))))),
  inference(rectify,[],[f7])).
fof(f7,axiom,(
  ! [X6,X7,X10] : s(bool,'const.lim.tends_real_real_3'(s(fun('type.realax.real','type.realax.real'),X6),s('type.realax.real',X7),s('type.realax.real',X10))) = s(bool,'const.nets.tends_3'(s(fun('type.realax.real','type.realax.real'),X6),s('type.realax.real',X7),s('type.pair.prod'('type.topology.topology'('type.realax.real'),fun('type.realax.real',fun('type.realax.real',bool))),'const.pair.,_2'(s('type.topology.topology'('type.realax.real'),'const.topology.mtop_1'(s('type.topology.metric'('type.realax.real'),'const.topology.mr|49|_0'))),s(fun('type.realax.real',fun('type.realax.real',bool)),'const.nets.tendsto_1'(s('type.pair.prod'('type.topology.metric'('type.realax.real'),'type.realax.real'),'const.pair.,_2'(s('type.topology.metric'('type.realax.real'),'const.topology.mr|49|_0'),s('type.realax.real',X10)))))))))),
  file('thm.lim.LIM_UNIQ','thm.lim.tends_real_real')).
fof(f49,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (~p(s(bool,'const.nets.tends_3'(s(fun(X0,X1),X4),s(X1,X2),s('type.pair.prod'('type.topology.topology'(X1),fun(X0,fun(X0,bool))),'const.pair.,_2'(s('type.topology.topology'(X1),'const.topology.mtop_1'(s('type.topology.metric'(X1),X6))),s(fun(X0,fun(X0,bool)),X5)))))) | ~p(s(bool,'const.nets.tends_3'(s(fun(X0,X1),X4),s(X1,X3),s('type.pair.prod'('type.topology.topology'(X1),fun(X0,fun(X0,bool))),'const.pair.,_2'(s('type.topology.topology'(X1),'const.topology.mtop_1'(s('type.topology.metric'(X1),X6))),s(fun(X0,fun(X0,bool)),X5)))))) | s(X1,X2) = s(X1,X3) | ~p(s(bool,'const.nets.dorder_1'(s(fun(X0,fun(X0,bool)),X5))))) ) | $spl16),
  inference(cnf_transformation,[],[f49_D])).
fof(f49_D,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (~p(s(bool,'const.nets.tends_3'(s(fun(X0,X1),X4),s(X1,X2),s('type.pair.prod'('type.topology.topology'(X1),fun(X0,fun(X0,bool))),'const.pair.,_2'(s('type.topology.topology'(X1),'const.topology.mtop_1'(s('type.topology.metric'(X1),X6))),s(fun(X0,fun(X0,bool)),X5)))))) | ~p(s(bool,'const.nets.tends_3'(s(fun(X0,X1),X4),s(X1,X3),s('type.pair.prod'('type.topology.topology'(X1),fun(X0,fun(X0,bool))),'const.pair.,_2'(s('type.topology.topology'(X1),'const.topology.mtop_1'(s('type.topology.metric'(X1),X6))),s(fun(X0,fun(X0,bool)),X5)))))) | s(X1,X2) = s(X1,X3) | ~p(s(bool,'const.nets.dorder_1'(s(fun(X0,fun(X0,bool)),X5))))) ) <=> ~$spl16),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl16])])).
fof(f34,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s(X1,X2) = s(X1,X3) | ~p(s(bool,'const.nets.tends_3'(s(fun(X0,X1),X4),s(X1,X2),s('type.pair.prod'('type.topology.topology'(X1),fun(X0,fun(X0,bool))),'const.pair.,_2'(s('type.topology.topology'(X1),'const.topology.mtop_1'(s('type.topology.metric'(X1),X6))),s(fun(X0,fun(X0,bool)),X5)))))) | ~p(s(bool,'const.nets.tends_3'(s(fun(X0,X1),X4),s(X1,X3),s('type.pair.prod'('type.topology.topology'(X1),fun(X0,fun(X0,bool))),'const.pair.,_2'(s('type.topology.topology'(X1),'const.topology.mtop_1'(s('type.topology.metric'(X1),X6))),s(fun(X0,fun(X0,bool)),X5)))))) | ~p(s(bool,'const.nets.dorder_1'(s(fun(X0,fun(X0,bool)),X5))))) )),
  inference(cnf_transformation,[],[f23])).
fof(f23,plain,(
  ! [X0,X1,X2,X3,X4,X5,X6] : (~p(s(bool,'const.nets.dorder_1'(s(fun(X0,fun(X0,bool)),X5)))) | ~p(s(bool,'const.nets.tends_3'(s(fun(X0,X1),X4),s(X1,X3),s('type.pair.prod'('type.topology.topology'(X1),fun(X0,fun(X0,bool))),'const.pair.,_2'(s('type.topology.topology'(X1),'const.topology.mtop_1'(s('type.topology.metric'(X1),X6))),s(fun(X0,fun(X0,bool)),X5)))))) | ~p(s(bool,'const.nets.tends_3'(s(fun(X0,X1),X4),s(X1,X2),s('type.pair.prod'('type.topology.topology'(X1),fun(X0,fun(X0,bool))),'const.pair.,_2'(s('type.topology.topology'(X1),'const.topology.mtop_1'(s('type.topology.metric'(X1),X6))),s(fun(X0,fun(X0,bool)),X5)))))) | s(X1,X2) = s(X1,X3))),
  inference(flattening,[],[f22])).
fof(f22,plain,(
  ! [X0,X1,X2,X3,X4,X5,X6] : (~p(s(bool,'const.nets.dorder_1'(s(fun(X0,fun(X0,bool)),X5)))) | ((~p(s(bool,'const.nets.tends_3'(s(fun(X0,X1),X4),s(X1,X3),s('type.pair.prod'('type.topology.topology'(X1),fun(X0,fun(X0,bool))),'const.pair.,_2'(s('type.topology.topology'(X1),'const.topology.mtop_1'(s('type.topology.metric'(X1),X6))),s(fun(X0,fun(X0,bool)),X5)))))) | ~p(s(bool,'const.nets.tends_3'(s(fun(X0,X1),X4),s(X1,X2),s('type.pair.prod'('type.topology.topology'(X1),fun(X0,fun(X0,bool))),'const.pair.,_2'(s('type.topology.topology'(X1),'const.topology.mtop_1'(s('type.topology.metric'(X1),X6))),s(fun(X0,fun(X0,bool)),X5))))))) | s(X1,X2) = s(X1,X3)))),
  inference(ennf_transformation,[],[f17])).
fof(f17,plain,(
  ! [X0,X1,X2,X3,X4,X5,X6] : (p(s(bool,'const.nets.dorder_1'(s(fun(X0,fun(X0,bool)),X5)))) => ((p(s(bool,'const.nets.tends_3'(s(fun(X0,X1),X4),s(X1,X3),s('type.pair.prod'('type.topology.topology'(X1),fun(X0,fun(X0,bool))),'const.pair.,_2'(s('type.topology.topology'(X1),'const.topology.mtop_1'(s('type.topology.metric'(X1),X6))),s(fun(X0,fun(X0,bool)),X5)))))) & p(s(bool,'const.nets.tends_3'(s(fun(X0,X1),X4),s(X1,X2),s('type.pair.prod'('type.topology.topology'(X1),fun(X0,fun(X0,bool))),'const.pair.,_2'(s('type.topology.topology'(X1),'const.topology.mtop_1'(s('type.topology.metric'(X1),X6))),s(fun(X0,fun(X0,bool)),X5))))))) => s(X1,X2) = s(X1,X3)))),
  inference(flattening,[],[f16])).
fof(f16,plain,(
  ! [X0,X1] : ! [X2,X3,X4,X5,X6] : (p(s(bool,'const.nets.dorder_1'(s(fun(X0,fun(X0,bool)),X5)))) => ((p(s(bool,'const.nets.tends_3'(s(fun(X0,X1),X4),s(X1,X3),s('type.pair.prod'('type.topology.topology'(X1),fun(X0,fun(X0,bool))),'const.pair.,_2'(s('type.topology.topology'(X1),'const.topology.mtop_1'(s('type.topology.metric'(X1),X6))),s(fun(X0,fun(X0,bool)),X5)))))) & p(s(bool,'const.nets.tends_3'(s(fun(X0,X1),X4),s(X1,X2),s('type.pair.prod'('type.topology.topology'(X1),fun(X0,fun(X0,bool))),'const.pair.,_2'(s('type.topology.topology'(X1),'const.topology.mtop_1'(s('type.topology.metric'(X1),X6))),s(fun(X0,fun(X0,bool)),X5))))))) => s(X1,X2) = s(X1,X3)))),
  inference(rectify,[],[f9])).
fof(f9,axiom,(
  ! [X12,X11] : ! [X13,X10,X9,X14,X15] : (p(s(bool,'const.nets.dorder_1'(s(fun(X12,fun(X12,bool)),X14)))) => ((p(s(bool,'const.nets.tends_3'(s(fun(X12,X11),X9),s(X11,X10),s('type.pair.prod'('type.topology.topology'(X11),fun(X12,fun(X12,bool))),'const.pair.,_2'(s('type.topology.topology'(X11),'const.topology.mtop_1'(s('type.topology.metric'(X11),X15))),s(fun(X12,fun(X12,bool)),X14)))))) & p(s(bool,'const.nets.tends_3'(s(fun(X12,X11),X9),s(X11,X13),s('type.pair.prod'('type.topology.topology'(X11),fun(X12,fun(X12,bool))),'const.pair.,_2'(s('type.topology.topology'(X11),'const.topology.mtop_1'(s('type.topology.metric'(X11),X15))),s(fun(X12,fun(X12,bool)),X14))))))) => s(X11,X10) = s(X11,X13)))),
  file('thm.lim.LIM_UNIQ','thm.nets.MTOP_TENDS_UNIQ')).
fof(f417,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,'const.lim.tends_real_real_3'(s(fun('type.realax.real','type.realax.real'),X0),s('type.realax.real',X3),s('type.realax.real',X2)))) | ~p(s(bool,'const.lim.tends_real_real_3'(s(fun('type.realax.real','type.realax.real'),X0),s('type.realax.real',X1),s('type.realax.real',X2)))) | s('type.realax.real',X1) = s('type.realax.real',X3)) ) | $spl68),
  inference(cnf_transformation,[],[f417_D])).
fof(f417_D,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,'const.lim.tends_real_real_3'(s(fun('type.realax.real','type.realax.real'),X0),s('type.realax.real',X3),s('type.realax.real',X2)))) | ~p(s(bool,'const.lim.tends_real_real_3'(s(fun('type.realax.real','type.realax.real'),X0),s('type.realax.real',X1),s('type.realax.real',X2)))) | s('type.realax.real',X1) = s('type.realax.real',X3)) ) <=> ~$spl68),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl68])])).
fof(f416,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,'const.lim.tends_real_real_3'(s(fun('type.realax.real','type.realax.real'),X0),s('type.realax.real',X3),s('type.realax.real',X2)))) | ~p(s(bool,'const.lim.tends_real_real_3'(s(fun('type.realax.real','type.realax.real'),X0),s('type.realax.real',X1),s('type.realax.real',X2)))) | s('type.realax.real',X1) = s('type.realax.real',X3)) ) | ($spl6 | $spl16 | $spl18 | $spl32)),
  inference(subsumption_resolution,[],[f415,f43])).
fof(f415,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,'T_0')) | ~p(s(bool,'const.lim.tends_real_real_3'(s(fun('type.realax.real','type.realax.real'),X0),s('type.realax.real',X3),s('type.realax.real',X2)))) | ~p(s(bool,'const.lim.tends_real_real_3'(s(fun('type.realax.real','type.realax.real'),X0),s('type.realax.real',X1),s('type.realax.real',X2)))) | s('type.realax.real',X1) = s('type.realax.real',X3)) ) | ($spl16 | $spl18 | $spl32)),
  inference(forward_demodulation,[],[f414,f87])).
fof(f414,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,'const.lim.tends_real_real_3'(s(fun('type.realax.real','type.realax.real'),X0),s('type.realax.real',X3),s('type.realax.real',X2)))) | ~p(s(bool,'const.lim.tends_real_real_3'(s(fun('type.realax.real','type.realax.real'),X0),s('type.realax.real',X1),s('type.realax.real',X2)))) | s('type.realax.real',X1) = s('type.realax.real',X3) | ~p(s(bool,'const.nets.dorder_1'(s(fun('type.realax.real',fun('type.realax.real',bool)),'const.nets.tendsto_1'(s('type.pair.prod'('type.topology.metric'('type.realax.real'),'type.realax.real'),'const.pair.,_2'(s('type.topology.metric'('type.realax.real'),'const.topology.mr|49|_0'),s('type.realax.real',X2))))))))) ) | ($spl16 | $spl18)),
  inference(forward_demodulation,[],[f381,f50])).
fof(f381,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,'const.lim.tends_real_real_3'(s(fun('type.realax.real','type.realax.real'),X0),s('type.realax.real',X1),s('type.realax.real',X2)))) | ~p(s(bool,'const.nets.tends_3'(s(fun('type.realax.real','type.realax.real'),X0),s('type.realax.real',X3),s('type.pair.prod'('type.topology.topology'('type.realax.real'),fun('type.realax.real',fun('type.realax.real',bool))),'const.pair.,_2'(s('type.topology.topology'('type.realax.real'),'const.topology.mtop_1'(s('type.topology.metric'('type.realax.real'),'const.topology.mr|49|_0'))),s(fun('type.realax.real',fun('type.realax.real',bool)),'const.nets.tendsto_1'(s('type.pair.prod'('type.topology.metric'('type.realax.real'),'type.realax.real'),'const.pair.,_2'(s('type.topology.metric'('type.realax.real'),'const.topology.mr|49|_0'),s('type.realax.real',X2)))))))))) | s('type.realax.real',X1) = s('type.realax.real',X3) | ~p(s(bool,'const.nets.dorder_1'(s(fun('type.realax.real',fun('type.realax.real',bool)),'const.nets.tendsto_1'(s('type.pair.prod'('type.topology.metric'('type.realax.real'),'type.realax.real'),'const.pair.,_2'(s('type.topology.metric'('type.realax.real'),'const.topology.mr|49|_0'),s('type.realax.real',X2))))))))) ) | ($spl16 | $spl18)),
  inference(superposition,[],[f49,f50])).
fof(f39,plain,(
  p(s(bool,'const.lim.tends_real_real_3'(s(fun('type.realax.real','type.realax.real'),sK0),s('type.realax.real',sK2),s('type.realax.real',sK3)))) | $spl2),
  inference(cnf_transformation,[],[f39_D])).
fof(f39_D,plain,(
  p(s(bool,'const.lim.tends_real_real_3'(s(fun('type.realax.real','type.realax.real'),sK0),s('type.realax.real',sK2),s('type.realax.real',sK3)))) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f27,plain,(
  p(s(bool,'const.lim.tends_real_real_3'(s(fun('type.realax.real','type.realax.real'),sK0),s('type.realax.real',sK2),s('type.realax.real',sK3))))),
  inference(cnf_transformation,[],[f24])).
fof(f24,plain,(
  p(s(bool,'const.lim.tends_real_real_3'(s(fun('type.realax.real','type.realax.real'),sK0),s('type.realax.real',sK1),s('type.realax.real',sK3)))) & p(s(bool,'const.lim.tends_real_real_3'(s(fun('type.realax.real','type.realax.real'),sK0),s('type.realax.real',sK2),s('type.realax.real',sK3)))) & s('type.realax.real',sK1) != s('type.realax.real',sK2)),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2,sK3])],[f20])).
fof(f20,plain,(
  ? [X0,X1,X2,X3] : (p(s(bool,'const.lim.tends_real_real_3'(s(fun('type.realax.real','type.realax.real'),X0),s('type.realax.real',X1),s('type.realax.real',X3)))) & p(s(bool,'const.lim.tends_real_real_3'(s(fun('type.realax.real','type.realax.real'),X0),s('type.realax.real',X2),s('type.realax.real',X3)))) & s('type.realax.real',X1) != s('type.realax.real',X2))),
  inference(flattening,[],[f19])).
fof(f19,plain,(
  ? [X0,X1,X2,X3] : ((p(s(bool,'const.lim.tends_real_real_3'(s(fun('type.realax.real','type.realax.real'),X0),s('type.realax.real',X1),s('type.realax.real',X3)))) & p(s(bool,'const.lim.tends_real_real_3'(s(fun('type.realax.real','type.realax.real'),X0),s('type.realax.real',X2),s('type.realax.real',X3))))) & s('type.realax.real',X1) != s('type.realax.real',X2))),
  inference(ennf_transformation,[],[f10])).
fof(f10,plain,(
  ~! [X0,X1,X2,X3] : ((p(s(bool,'const.lim.tends_real_real_3'(s(fun('type.realax.real','type.realax.real'),X0),s('type.realax.real',X1),s('type.realax.real',X3)))) & p(s(bool,'const.lim.tends_real_real_3'(s(fun('type.realax.real','type.realax.real'),X0),s('type.realax.real',X2),s('type.realax.real',X3))))) => s('type.realax.real',X1) = s('type.realax.real',X2))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7,X8,X9] : ((p(s(bool,'const.lim.tends_real_real_3'(s(fun('type.realax.real','type.realax.real'),X6),s('type.realax.real',X7),s('type.realax.real',X9)))) & p(s(bool,'const.lim.tends_real_real_3'(s(fun('type.realax.real','type.realax.real'),X6),s('type.realax.real',X8),s('type.realax.real',X9))))) => s('type.realax.real',X7) = s('type.realax.real',X8))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7,X8,X9] : ((p(s(bool,'const.lim.tends_real_real_3'(s(fun('type.realax.real','type.realax.real'),X6),s('type.realax.real',X7),s('type.realax.real',X9)))) & p(s(bool,'const.lim.tends_real_real_3'(s(fun('type.realax.real','type.realax.real'),X6),s('type.realax.real',X8),s('type.realax.real',X9))))) => s('type.realax.real',X7) = s('type.realax.real',X8))),
  file('thm.lim.LIM_UNIQ','thm.lim.LIM_UNIQ')).
fof(f63,plain,(
  s(bool,'T_0') = s(bool,'const.lim.tends_real_real_3'(s(fun('type.realax.real','type.realax.real'),sK0),s('type.realax.real',sK2),s('type.realax.real',sK3))) | $spl24),
  inference(cnf_transformation,[],[f63_D])).
fof(f63_D,plain,(
  s(bool,'T_0') = s(bool,'const.lim.tends_real_real_3'(s(fun('type.realax.real','type.realax.real'),sK0),s('type.realax.real',sK2),s('type.realax.real',sK3))) <=> ~$spl24),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl24])])).
fof(f61,plain,(
  s(bool,'T_0') = s(bool,'const.lim.tends_real_real_3'(s(fun('type.realax.real','type.realax.real'),sK0),s('type.realax.real',sK2),s('type.realax.real',sK3))) | ($spl2 | $spl9 | $spl10)),
  inference(subsumption_resolution,[],[f55,f45])).
fof(f55,plain,(
  p(s(bool,'F_0')) | s(bool,'T_0') = s(bool,'const.lim.tends_real_real_3'(s(fun('type.realax.real','type.realax.real'),sK0),s('type.realax.real',sK2),s('type.realax.real',sK3))) | ($spl2 | $spl10)),
  inference(superposition,[],[f39,f46])).
fof(f1826,plain,(
  ( ! [X0] : (~p(s(bool,'const.lim.tends_real_real_3'(s(fun('type.realax.real','type.realax.real'),sK0),s('type.realax.real',X0),s('type.realax.real',sK3)))) | s('type.realax.real',sK2) = s('type.realax.real',X0)) ) | $spl138),
  inference(cnf_transformation,[],[f1826_D])).
fof(f1826_D,plain,(
  ( ! [X0] : (~p(s(bool,'const.lim.tends_real_real_3'(s(fun('type.realax.real','type.realax.real'),sK0),s('type.realax.real',X0),s('type.realax.real',sK3)))) | s('type.realax.real',sK2) = s('type.realax.real',X0)) ) <=> ~$spl138),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl138])])).
fof(f1825,plain,(
  ( ! [X0] : (~p(s(bool,'const.lim.tends_real_real_3'(s(fun('type.realax.real','type.realax.real'),sK0),s('type.realax.real',X0),s('type.realax.real',sK3)))) | s('type.realax.real',sK2) = s('type.realax.real',X0)) ) | ($spl6 | $spl24 | $spl68)),
  inference(subsumption_resolution,[],[f1794,f43])).
fof(f1794,plain,(
  ( ! [X0] : (~p(s(bool,'T_0')) | ~p(s(bool,'const.lim.tends_real_real_3'(s(fun('type.realax.real','type.realax.real'),sK0),s('type.realax.real',X0),s('type.realax.real',sK3)))) | s('type.realax.real',sK2) = s('type.realax.real',X0)) ) | ($spl24 | $spl68)),
  inference(superposition,[],[f417,f63])).
fof(f46,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) ) | $spl10),
  inference(cnf_transformation,[],[f46_D])).
fof(f46_D,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) ) <=> ~$spl10),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl10])])).
fof(f31,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f3])).
fof(f3,axiom,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) | s(bool,'F_0') = s(bool,X0))),
  file('thm.lim.LIM_UNIQ',aHL_BOOL_CASES)).
fof(f45,plain,(
  ~p(s(bool,'F_0')) | $spl9),
  inference(cnf_transformation,[],[f45_D])).
fof(f45_D,plain,(
  ~p(s(bool,'F_0')) <=> ~$spl9),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl9])])).
fof(f30,plain,(
  ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f11])).
fof(f11,plain,(
  ~p(s(bool,'F_0'))),
  inference(flattening,[],[f2])).
fof(f2,axiom,(
  ~p(s(bool,'F_0'))),
  file('thm.lim.LIM_UNIQ',aHL_FALSITY)).
fof(f41,plain,(
  p(s(bool,'const.lim.tends_real_real_3'(s(fun('type.realax.real','type.realax.real'),sK0),s('type.realax.real',sK1),s('type.realax.real',sK3)))) | $spl4),
  inference(cnf_transformation,[],[f41_D])).
fof(f41_D,plain,(
  p(s(bool,'const.lim.tends_real_real_3'(s(fun('type.realax.real','type.realax.real'),sK0),s('type.realax.real',sK1),s('type.realax.real',sK3)))) <=> ~$spl4),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl4])])).
fof(f26,plain,(
  p(s(bool,'const.lim.tends_real_real_3'(s(fun('type.realax.real','type.realax.real'),sK0),s('type.realax.real',sK1),s('type.realax.real',sK3))))),
  inference(cnf_transformation,[],[f24])).
fof(f66,plain,(
  s(bool,'T_0') = s(bool,'const.lim.tends_real_real_3'(s(fun('type.realax.real','type.realax.real'),sK0),s('type.realax.real',sK1),s('type.realax.real',sK3))) | $spl26),
  inference(cnf_transformation,[],[f66_D])).
fof(f66_D,plain,(
  s(bool,'T_0') = s(bool,'const.lim.tends_real_real_3'(s(fun('type.realax.real','type.realax.real'),sK0),s('type.realax.real',sK1),s('type.realax.real',sK3))) <=> ~$spl26),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl26])])).
fof(f64,plain,(
  s(bool,'T_0') = s(bool,'const.lim.tends_real_real_3'(s(fun('type.realax.real','type.realax.real'),sK0),s('type.realax.real',sK1),s('type.realax.real',sK3))) | ($spl4 | $spl9 | $spl10)),
  inference(subsumption_resolution,[],[f56,f45])).
fof(f56,plain,(
  p(s(bool,'F_0')) | s(bool,'T_0') = s(bool,'const.lim.tends_real_real_3'(s(fun('type.realax.real','type.realax.real'),sK0),s('type.realax.real',sK1),s('type.realax.real',sK3))) | ($spl4 | $spl10)),
  inference(superposition,[],[f41,f46])).
fof(f43,plain,(
  p(s(bool,'T_0')) | $spl6),
  inference(cnf_transformation,[],[f43_D])).
fof(f43_D,plain,(
  p(s(bool,'T_0')) <=> ~$spl6),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl6])])).
fof(f29,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f1])).
fof(f1,axiom,(
  p(s(bool,'T_0'))),
  file('thm.lim.LIM_UNIQ',aHL_TRUTH)).
fof(f37,plain,(
  s('type.realax.real',sK1) != s('type.realax.real',sK2) | $spl1),
  inference(cnf_transformation,[],[f37_D])).
fof(f37_D,plain,(
  s('type.realax.real',sK1) != s('type.realax.real',sK2) <=> ~$spl1),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1])])).
fof(f28,plain,(
  s('type.realax.real',sK1) != s('type.realax.real',sK2)),
  inference(cnf_transformation,[],[f24])).
fof(f1870,plain,(
  $false | ($spl1 | $spl6 | $spl26 | $spl138)),
  inference(subsumption_resolution,[],[f1869,f37])).
fof(f1869,plain,(
  s('type.realax.real',sK1) = s('type.realax.real',sK2) | ($spl6 | $spl26 | $spl138)),
  inference(subsumption_resolution,[],[f1854,f43])).
fof(f1854,plain,(
  ~p(s(bool,'T_0')) | s('type.realax.real',sK1) = s('type.realax.real',sK2) | ($spl26 | $spl138)),
  inference(superposition,[],[f1826,f66])).
% SZS output end Proof for thm.lim
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 21
% Passive clauses: 76
% Generated clauses: 1813
% Final active clauses: 18
% Final passive clauses: 49
% Input formulas: 8
% Initial clauses: 10
% 
% Duplicate literals: 394
% Trivial inequalities: 14
% Fw subsumption resolutions: 52
% Fw demodulations: 14
% Bw demodulations: 8
% Condensations: 563
% 
% Simple tautologies: 38
% Equational tautologies: 36
% Forward subsumptions: 400
% 
% Binary resolution: 8
% Factoring: 2
% Forward superposition: 231
% Backward superposition: 258
% Self superposition: 107
% Equality factoring: 106
% 
% Split clauses: 5
% Split components: 10
% SAT solver clauses: 261
% SAT solver unit clauses: 17
% SAT solver binary clauses: 53
% SAT solver learnt clauses: 1
% 
% Sat splits: 5
% Sat splitting refutations: 4
% 
% TWLsolver clauses: 260
% TWLsolver calls for satisfiability: 54
% 
% Memory used [KB]: 2046
% Time elapsed: 0.206 s
% ------------------------------
% ------------------------------
% Success in time 0.819 s
