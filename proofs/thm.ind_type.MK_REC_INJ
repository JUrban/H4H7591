Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 300 next slice time: 5
dis+11_7_3 on thm.ind_type
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.ind_type
% SZS output start Proof for thm.ind_type
fof(f278,plain,(
  $false),
  inference(subsumption_resolution,[],[f277,f36])).
fof(f36,plain,(
  s(fun('type.num.num',fun(sK0,bool)),sK1) != s(fun('type.num.num',fun(sK0,bool)),sK2)),
  inference(cnf_transformation,[],[f28])).
fof(f28,plain,(
  s('type.ind_type.recspace'(sK0),'const.ind_type.mk_rec_1'(s(fun('type.num.num',fun(sK0,bool)),sK1))) = s('type.ind_type.recspace'(sK0),'const.ind_type.mk_rec_1'(s(fun('type.num.num',fun(sK0,bool)),sK2))) & p(s(bool,'const.ind_type.ZRECSPACE_1'(s(fun('type.num.num',fun(sK0,bool)),sK1)))) & p(s(bool,'const.ind_type.ZRECSPACE_1'(s(fun('type.num.num',fun(sK0,bool)),sK2)))) & s(fun('type.num.num',fun(sK0,bool)),sK1) != s(fun('type.num.num',fun(sK0,bool)),sK2)),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2])],[f26])).
fof(f26,plain,(
  ? [X0,X1,X2] : (s('type.ind_type.recspace'(X0),'const.ind_type.mk_rec_1'(s(fun('type.num.num',fun(X0,bool)),X1))) = s('type.ind_type.recspace'(X0),'const.ind_type.mk_rec_1'(s(fun('type.num.num',fun(X0,bool)),X2))) & p(s(bool,'const.ind_type.ZRECSPACE_1'(s(fun('type.num.num',fun(X0,bool)),X1)))) & p(s(bool,'const.ind_type.ZRECSPACE_1'(s(fun('type.num.num',fun(X0,bool)),X2)))) & s(fun('type.num.num',fun(X0,bool)),X1) != s(fun('type.num.num',fun(X0,bool)),X2))),
  inference(flattening,[],[f25])).
fof(f25,plain,(
  ? [X0,X1,X2] : (s('type.ind_type.recspace'(X0),'const.ind_type.mk_rec_1'(s(fun('type.num.num',fun(X0,bool)),X1))) = s('type.ind_type.recspace'(X0),'const.ind_type.mk_rec_1'(s(fun('type.num.num',fun(X0,bool)),X2))) & ((p(s(bool,'const.ind_type.ZRECSPACE_1'(s(fun('type.num.num',fun(X0,bool)),X1)))) & p(s(bool,'const.ind_type.ZRECSPACE_1'(s(fun('type.num.num',fun(X0,bool)),X2))))) & s(fun('type.num.num',fun(X0,bool)),X1) != s(fun('type.num.num',fun(X0,bool)),X2)))),
  inference(ennf_transformation,[],[f13])).
fof(f13,plain,(
  ~! [X0,X1,X2] : (s('type.ind_type.recspace'(X0),'const.ind_type.mk_rec_1'(s(fun('type.num.num',fun(X0,bool)),X1))) = s('type.ind_type.recspace'(X0),'const.ind_type.mk_rec_1'(s(fun('type.num.num',fun(X0,bool)),X2))) => ((p(s(bool,'const.ind_type.ZRECSPACE_1'(s(fun('type.num.num',fun(X0,bool)),X1)))) & p(s(bool,'const.ind_type.ZRECSPACE_1'(s(fun('type.num.num',fun(X0,bool)),X2))))) => s(fun('type.num.num',fun(X0,bool)),X1) = s(fun('type.num.num',fun(X0,bool)),X2)))),
  inference(flattening,[],[f12])).
fof(f12,plain,(
  ~! [X0] : ! [X1,X2] : (s('type.ind_type.recspace'(X0),'const.ind_type.mk_rec_1'(s(fun('type.num.num',fun(X0,bool)),X1))) = s('type.ind_type.recspace'(X0),'const.ind_type.mk_rec_1'(s(fun('type.num.num',fun(X0,bool)),X2))) => ((p(s(bool,'const.ind_type.ZRECSPACE_1'(s(fun('type.num.num',fun(X0,bool)),X1)))) & p(s(bool,'const.ind_type.ZRECSPACE_1'(s(fun('type.num.num',fun(X0,bool)),X2))))) => s(fun('type.num.num',fun(X0,bool)),X1) = s(fun('type.num.num',fun(X0,bool)),X2)))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : ! [X7,X8] : (s('type.ind_type.recspace'(X6),'const.ind_type.mk_rec_1'(s(fun('type.num.num',fun(X6,bool)),X7))) = s('type.ind_type.recspace'(X6),'const.ind_type.mk_rec_1'(s(fun('type.num.num',fun(X6,bool)),X8))) => ((p(s(bool,'const.ind_type.ZRECSPACE_1'(s(fun('type.num.num',fun(X6,bool)),X7)))) & p(s(bool,'const.ind_type.ZRECSPACE_1'(s(fun('type.num.num',fun(X6,bool)),X8))))) => s(fun('type.num.num',fun(X6,bool)),X7) = s(fun('type.num.num',fun(X6,bool)),X8)))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : ! [X7,X8] : (s('type.ind_type.recspace'(X6),'const.ind_type.mk_rec_1'(s(fun('type.num.num',fun(X6,bool)),X7))) = s('type.ind_type.recspace'(X6),'const.ind_type.mk_rec_1'(s(fun('type.num.num',fun(X6,bool)),X8))) => ((p(s(bool,'const.ind_type.ZRECSPACE_1'(s(fun('type.num.num',fun(X6,bool)),X7)))) & p(s(bool,'const.ind_type.ZRECSPACE_1'(s(fun('type.num.num',fun(X6,bool)),X8))))) => s(fun('type.num.num',fun(X6,bool)),X7) = s(fun('type.num.num',fun(X6,bool)),X8)))),
  file('thm.ind_type.MK_REC_INJ','thm.ind_type.MK_REC_INJ')).
fof(f277,plain,(
  s(fun('type.num.num',fun(sK0,bool)),sK1) = s(fun('type.num.num',fun(sK0,bool)),sK2)),
  inference(forward_demodulation,[],[f271,f269])).
fof(f269,plain,(
  s(fun('type.num.num',fun(sK0,bool)),sK1) = s(fun('type.num.num',fun(sK0,bool)),'const.ind_type.dest_rec_1'(s('type.ind_type.recspace'(sK0),'const.ind_type.mk_rec_1'(s(fun('type.num.num',fun(sK0,bool)),sK1)))))),
  inference(subsumption_resolution,[],[f262,f37])).
fof(f37,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f7])).
fof(f7,axiom,(
  p(s(bool,'T_0'))),
  file('thm.ind_type.MK_REC_INJ','thm.bool.TRUTH')).
fof(f262,plain,(
  ~p(s(bool,'T_0')) | s(fun('type.num.num',fun(sK0,bool)),sK1) = s(fun('type.num.num',fun(sK0,bool)),'const.ind_type.dest_rec_1'(s('type.ind_type.recspace'(sK0),'const.ind_type.mk_rec_1'(s(fun('type.num.num',fun(sK0,bool)),sK1)))))),
  inference(superposition,[],[f44,f58])).
fof(f58,plain,(
  s(bool,'T_0') = s(bool,'const.ind_type.ZRECSPACE_1'(s(fun('type.num.num',fun(sK0,bool)),sK1)))),
  inference(subsumption_resolution,[],[f54,f39])).
fof(f39,plain,(
  ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f14])).
fof(f14,plain,(
  ~p(s(bool,'F_0'))),
  inference(flattening,[],[f2])).
fof(f2,axiom,(
  ~p(s(bool,'F_0'))),
  file('thm.ind_type.MK_REC_INJ',aHL_FALSITY)).
fof(f54,plain,(
  p(s(bool,'F_0')) | s(bool,'T_0') = s(bool,'const.ind_type.ZRECSPACE_1'(s(fun('type.num.num',fun(sK0,bool)),sK1)))),
  inference(superposition,[],[f34,f40])).
fof(f40,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f3])).
fof(f3,axiom,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) | s(bool,'F_0') = s(bool,X0))),
  file('thm.ind_type.MK_REC_INJ',aHL_BOOL_CASES)).
fof(f34,plain,(
  p(s(bool,'const.ind_type.ZRECSPACE_1'(s(fun('type.num.num',fun(sK0,bool)),sK1))))),
  inference(cnf_transformation,[],[f28])).
fof(f44,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.ind_type.ZRECSPACE_1'(s(fun('type.num.num',fun(X0,bool)),X1)))) | s(fun('type.num.num',fun(X0,bool)),X1) = s(fun('type.num.num',fun(X0,bool)),'const.ind_type.dest_rec_1'(s('type.ind_type.recspace'(X0),'const.ind_type.mk_rec_1'(s(fun('type.num.num',fun(X0,bool)),X1)))))) )),
  inference(cnf_transformation,[],[f30])).
fof(f30,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.ind_type.ZRECSPACE_1'(s(fun('type.num.num',fun(X0,bool)),X1)))) | s(fun('type.num.num',fun(X0,bool)),X1) = s(fun('type.num.num',fun(X0,bool)),'const.ind_type.dest_rec_1'(s('type.ind_type.recspace'(X0),'const.ind_type.mk_rec_1'(s(fun('type.num.num',fun(X0,bool)),X1)))))) & (s(fun('type.num.num',fun(X0,bool)),X1) != s(fun('type.num.num',fun(X0,bool)),'const.ind_type.dest_rec_1'(s('type.ind_type.recspace'(X0),'const.ind_type.mk_rec_1'(s(fun('type.num.num',fun(X0,bool)),X1))))) | p(s(bool,'const.ind_type.ZRECSPACE_1'(s(fun('type.num.num',fun(X0,bool)),X1))))))),
  inference(nnf_transformation,[],[f20])).
fof(f20,plain,(
  ! [X0,X1] : (p(s(bool,'const.ind_type.ZRECSPACE_1'(s(fun('type.num.num',fun(X0,bool)),X1)))) <=> s(fun('type.num.num',fun(X0,bool)),X1) = s(fun('type.num.num',fun(X0,bool)),'const.ind_type.dest_rec_1'(s('type.ind_type.recspace'(X0),'const.ind_type.mk_rec_1'(s(fun('type.num.num',fun(X0,bool)),X1))))))),
  inference(flattening,[],[f19])).
fof(f19,plain,(
  ! [X0] : ! [X1] : (p(s(bool,'const.ind_type.ZRECSPACE_1'(s(fun('type.num.num',fun(X0,bool)),X1)))) <=> s(fun('type.num.num',fun(X0,bool)),X1) = s(fun('type.num.num',fun(X0,bool)),'const.ind_type.dest_rec_1'(s('type.ind_type.recspace'(X0),'const.ind_type.mk_rec_1'(s(fun('type.num.num',fun(X0,bool)),X1))))))),
  inference(rectify,[],[f11])).
fof(f11,axiom,(
  ! [X6] : ! [X10] : (p(s(bool,'const.ind_type.ZRECSPACE_1'(s(fun('type.num.num',fun(X6,bool)),X10)))) <=> s(fun('type.num.num',fun(X6,bool)),X10) = s(fun('type.num.num',fun(X6,bool)),'const.ind_type.dest_rec_1'(s('type.ind_type.recspace'(X6),'const.ind_type.mk_rec_1'(s(fun('type.num.num',fun(X6,bool)),X10))))))),
  file('thm.ind_type.MK_REC_INJ','thm.ind_type.recspace_repfns|split|1')).
fof(f271,plain,(
  s(fun('type.num.num',fun(sK0,bool)),sK2) = s(fun('type.num.num',fun(sK0,bool)),'const.ind_type.dest_rec_1'(s('type.ind_type.recspace'(sK0),'const.ind_type.mk_rec_1'(s(fun('type.num.num',fun(sK0,bool)),sK1)))))),
  inference(forward_demodulation,[],[f270,f33])).
fof(f33,plain,(
  s('type.ind_type.recspace'(sK0),'const.ind_type.mk_rec_1'(s(fun('type.num.num',fun(sK0,bool)),sK1))) = s('type.ind_type.recspace'(sK0),'const.ind_type.mk_rec_1'(s(fun('type.num.num',fun(sK0,bool)),sK2)))),
  inference(cnf_transformation,[],[f28])).
fof(f270,plain,(
  s(fun('type.num.num',fun(sK0,bool)),sK2) = s(fun('type.num.num',fun(sK0,bool)),'const.ind_type.dest_rec_1'(s('type.ind_type.recspace'(sK0),'const.ind_type.mk_rec_1'(s(fun('type.num.num',fun(sK0,bool)),sK2)))))),
  inference(subsumption_resolution,[],[f263,f37])).
fof(f263,plain,(
  ~p(s(bool,'T_0')) | s(fun('type.num.num',fun(sK0,bool)),sK2) = s(fun('type.num.num',fun(sK0,bool)),'const.ind_type.dest_rec_1'(s('type.ind_type.recspace'(sK0),'const.ind_type.mk_rec_1'(s(fun('type.num.num',fun(sK0,bool)),sK2)))))),
  inference(superposition,[],[f44,f59])).
fof(f59,plain,(
  s(bool,'T_0') = s(bool,'const.ind_type.ZRECSPACE_1'(s(fun('type.num.num',fun(sK0,bool)),sK2)))),
  inference(subsumption_resolution,[],[f55,f39])).
fof(f55,plain,(
  p(s(bool,'F_0')) | s(bool,'T_0') = s(bool,'const.ind_type.ZRECSPACE_1'(s(fun('type.num.num',fun(sK0,bool)),sK2)))),
  inference(superposition,[],[f35,f40])).
fof(f35,plain,(
  p(s(bool,'const.ind_type.ZRECSPACE_1'(s(fun('type.num.num',fun(sK0,bool)),sK2))))),
  inference(cnf_transformation,[],[f28])).
% SZS output end Proof for thm.ind_type
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 20
% Passive clauses: 50
% Generated clauses: 235
% Final active clauses: 15
% Final passive clauses: 18
% Input formulas: 10
% Initial clauses: 16
% 
% Duplicate literals: 45
% Trivial inequalities: 3
% Fw subsumption resolutions: 12
% Fw demodulations: 3
% Bw demodulations: 4
% 
% Simple tautologies: 18
% Equational tautologies: 15
% Forward subsumptions: 92
% Fw demodulations to eq. taut.: 1
% 
% Binary resolution: 6
% Forward superposition: 49
% Backward superposition: 42
% Self superposition: 25
% Equality factoring: 26
% 
% Split clauses: 1
% Split components: 2
% SAT solver clauses: 3
% SAT solver unit clauses: 2
% SAT solver binary clauses: 1
% 
% Sat splits: 1
% Sat splitting refutations: 2
% 
% TWLsolver clauses: 3
% TWLsolver calls for satisfiability: 2
% 
% Memory used [KB]: 767
% Time elapsed: 0.015 s
% ------------------------------
% ------------------------------
% Success in time 0.017 s
