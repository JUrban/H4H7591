Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.rich_list
% (133988)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 933
% Passive clauses: 7250
% Generated clauses: 21928
% Final active clauses: 928
% Final passive clauses: 5987
% Input formulas: 133
% Initial clauses: 375
% 
% Duplicate literals: 211
% Trivial inequalities: 102
% Fw subsumption resolutions: 1572
% Fw demodulations: 2482
% Bw demodulations: 4
% 
% Simple tautologies: 283
% Equational tautologies: 35
% Forward subsumptions: 9906
% Fw demodulations to eq. taut.: 17
% 
% Binary resolution: 7333
% Factoring: 941
% Forward superposition: 3906
% Backward superposition: 4821
% Self superposition: 59
% Equality factoring: 2
% Equality resolution: 15
% 
% Split clauses: 221
% Split components: 444
% SAT solver clauses: 380
% SAT solver unit clauses: 9
% SAT solver binary clauses: 72
% 
% Sat splits: 221
% 
% TWLsolver clauses: 380
% TWLsolver calls for satisfiability: 335
% 
% Memory used [KB]: 15479
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 143 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.rich_list
% (134011)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 476
% Passive clauses: 2590
% Generated clauses: 16715
% Final active clauses: 436
% Final passive clauses: 1844
% Input formulas: 133
% Initial clauses: 375
% 
% Duplicate literals: 102
% Trivial inequalities: 7
% Fw subsumption resolutions: 980
% Fw demodulations: 1902
% Bw demodulations: 276
% Condensations: 215
% Global subsumptions: 22
% 
% Simple tautologies: 257
% Equational tautologies: 9
% Forward subsumptions: 7412
% Fw demodulations to eq. taut.: 11
% 
% Binary resolution: 2964
% Factoring: 288
% Forward superposition: 2942
% Backward superposition: 2202
% Self superposition: 59
% Equality factoring: 2
% Equality resolution: 5
% 
% Split clauses: 105
% Split components: 210
% SAT solver clauses: 3496
% SAT solver unit clauses: 371
% SAT solver binary clauses: 103
% SAT solver learnt clauses: 45
% SAT solver learnt literals: 11
% 
% Sat splits: 105
% Sat splitting refutations: 7
% 
% TWLsolver clauses: 3407
% TWLsolver calls for satisfiability: 2517
% 
% Memory used [KB]: 19829
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 136 next slice time: 103
lrs+11_2_br=off:cond=on:fde=none:gs=on:gsaa=full_model:lwlo=on:nwc=2:sas=minisat:stl=30:ssfp=100000:ssfq=1.4:smm=sco:ssnc=none:sp=occurrence:urr=on_98 on thm.rich_list
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.rich_list
% SZS output start Proof for thm.rich_list
fof(f57361,plain,(
  $false),
  inference(equality_resolution,[],[f56670])).
fof(f56670,plain,(
  ( ! [X0,X1] : (s('type.list.list'(sK12),'const.list.SNOC_2'(s(sK12,X0),s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),'const.list.FLAT_1'(s('type.list.list'('type.list.list'(sK12)),sK14))),s('type.list.list'(sK12),sK13))))) != s('type.list.list'(sK12),'const.list.SNOC_2'(s(sK12,X1),s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),'const.list.FLAT_1'(s('type.list.list'('type.list.list'(sK12)),sK14))),s('type.list.list'(sK12),sK13)))))) )),
  inference(backward_demodulation,[],[f56656,f8917])).
fof(f8917,plain,(
  ( ! [X0,X1] : (s('type.list.list'(sK12),'const.list.SNOC_2'(s(sK12,X0),s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),'const.list.FLAT_1'(s('type.list.list'('type.list.list'(sK12)),sK14))),s('type.list.list'(sK12),sK13))))) != s('type.list.list'(sK12),'const.list.SNOC_2'(s(sK12,X1),s('type.list.list'(sK12),'const.list.FLAT_1'(s('type.list.list'('type.list.list'(sK12)),'const.list.SNOC_2'(s('type.list.list'(sK12),sK13),s('type.list.list'('type.list.list'(sK12)),sK14)))))))) )),
  inference(unit_resulting_resolution,[],[f605,f802])).
fof(f802,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.list.list'(X0),'const.list.SNOC_2'(s(X0,X1),s('type.list.list'(X0),X2))) != s('type.list.list'(X0),'const.list.SNOC_2'(s(X0,X3),s('type.list.list'(X0),X4))) | s('type.list.list'(X0),X2) = s('type.list.list'(X0),X4)) )),
  inference(cnf_transformation,[],[f539])).
fof(f539,plain,(
  ! [X0,X1,X2,X3,X4] : ((s('type.list.list'(X0),'const.list.SNOC_2'(s(X0,X1),s('type.list.list'(X0),X2))) != s('type.list.list'(X0),'const.list.SNOC_2'(s(X0,X3),s('type.list.list'(X0),X4))) | (s(X0,X1) = s(X0,X3) & s('type.list.list'(X0),X2) = s('type.list.list'(X0),X4))) & (s(X0,X1) != s(X0,X3) | s('type.list.list'(X0),X2) != s('type.list.list'(X0),X4) | s('type.list.list'(X0),'const.list.SNOC_2'(s(X0,X1),s('type.list.list'(X0),X2))) = s('type.list.list'(X0),'const.list.SNOC_2'(s(X0,X3),s('type.list.list'(X0),X4)))))),
  inference(flattening,[],[f538])).
fof(f538,plain,(
  ! [X0,X1,X2,X3,X4] : ((s('type.list.list'(X0),'const.list.SNOC_2'(s(X0,X1),s('type.list.list'(X0),X2))) != s('type.list.list'(X0),'const.list.SNOC_2'(s(X0,X3),s('type.list.list'(X0),X4))) | (s(X0,X1) = s(X0,X3) & s('type.list.list'(X0),X2) = s('type.list.list'(X0),X4))) & ((s(X0,X1) != s(X0,X3) | s('type.list.list'(X0),X2) != s('type.list.list'(X0),X4)) | s('type.list.list'(X0),'const.list.SNOC_2'(s(X0,X1),s('type.list.list'(X0),X2))) = s('type.list.list'(X0),'const.list.SNOC_2'(s(X0,X3),s('type.list.list'(X0),X4)))))),
  inference(nnf_transformation,[],[f298])).
fof(f298,plain,(
  ! [X0,X1,X2,X3,X4] : (s('type.list.list'(X0),'const.list.SNOC_2'(s(X0,X1),s('type.list.list'(X0),X2))) = s('type.list.list'(X0),'const.list.SNOC_2'(s(X0,X3),s('type.list.list'(X0),X4))) <=> (s(X0,X1) = s(X0,X3) & s('type.list.list'(X0),X2) = s('type.list.list'(X0),X4)))),
  inference(flattening,[],[f297])).
fof(f297,plain,(
  ! [X0] : ! [X1,X2,X3,X4] : (s('type.list.list'(X0),'const.list.SNOC_2'(s(X0,X1),s('type.list.list'(X0),X2))) = s('type.list.list'(X0),'const.list.SNOC_2'(s(X0,X3),s('type.list.list'(X0),X4))) <=> (s(X0,X1) = s(X0,X3) & s('type.list.list'(X0),X2) = s('type.list.list'(X0),X4)))),
  inference(rectify,[],[f71])).
fof(f71,axiom,(
  ! [X6] : ! [X7,X26,X28,X45] : (s('type.list.list'(X6),'const.list.SNOC_2'(s(X6,X7),s('type.list.list'(X6),X26))) = s('type.list.list'(X6),'const.list.SNOC_2'(s(X6,X28),s('type.list.list'(X6),X45))) <=> (s(X6,X7) = s(X6,X28) & s('type.list.list'(X6),X26) = s('type.list.list'(X6),X45)))),
  file('thm.rich_list.FLAT_SNOC','thm.list.SNOC_|49||49|')).
fof(f605,plain,(
  s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),'const.list.FLAT_1'(s('type.list.list'('type.list.list'(sK12)),sK14))),s('type.list.list'(sK12),sK13))) != s('type.list.list'(sK12),'const.list.FLAT_1'(s('type.list.list'('type.list.list'(sK12)),'const.list.SNOC_2'(s('type.list.list'(sK12),sK13),s('type.list.list'('type.list.list'(sK12)),sK14)))))),
  inference(cnf_transformation,[],[f426])).
fof(f426,plain,(
  s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),'const.list.FLAT_1'(s('type.list.list'('type.list.list'(sK12)),sK14))),s('type.list.list'(sK12),sK13))) != s('type.list.list'(sK12),'const.list.FLAT_1'(s('type.list.list'('type.list.list'(sK12)),'const.list.SNOC_2'(s('type.list.list'(sK12),sK13),s('type.list.list'('type.list.list'(sK12)),sK14)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK12,sK13,sK14])],[f358])).
fof(f358,plain,(
  ? [X0,X1,X2] : s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.FLAT_1'(s('type.list.list'('type.list.list'(X0)),X2))),s('type.list.list'(X0),X1))) != s('type.list.list'(X0),'const.list.FLAT_1'(s('type.list.list'('type.list.list'(X0)),'const.list.SNOC_2'(s('type.list.list'(X0),X1),s('type.list.list'('type.list.list'(X0)),X2)))))),
  inference(ennf_transformation,[],[f136])).
fof(f136,plain,(
  ~! [X0,X1,X2] : s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.FLAT_1'(s('type.list.list'('type.list.list'(X0)),X2))),s('type.list.list'(X0),X1))) = s('type.list.list'(X0),'const.list.FLAT_1'(s('type.list.list'('type.list.list'(X0)),'const.list.SNOC_2'(s('type.list.list'(X0),X1),s('type.list.list'('type.list.list'(X0)),X2)))))),
  inference(flattening,[],[f135])).
fof(f135,plain,(
  ~! [X0] : ! [X1,X2] : s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.FLAT_1'(s('type.list.list'('type.list.list'(X0)),X2))),s('type.list.list'(X0),X1))) = s('type.list.list'(X0),'const.list.FLAT_1'(s('type.list.list'('type.list.list'(X0)),'const.list.SNOC_2'(s('type.list.list'(X0),X1),s('type.list.list'('type.list.list'(X0)),X2)))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : ! [X7,X8] : s('type.list.list'(X6),'const.list.APPEND_2'(s('type.list.list'(X6),'const.list.FLAT_1'(s('type.list.list'('type.list.list'(X6)),X8))),s('type.list.list'(X6),X7))) = s('type.list.list'(X6),'const.list.FLAT_1'(s('type.list.list'('type.list.list'(X6)),'const.list.SNOC_2'(s('type.list.list'(X6),X7),s('type.list.list'('type.list.list'(X6)),X8)))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : ! [X7,X8] : s('type.list.list'(X6),'const.list.APPEND_2'(s('type.list.list'(X6),'const.list.FLAT_1'(s('type.list.list'('type.list.list'(X6)),X8))),s('type.list.list'(X6),X7))) = s('type.list.list'(X6),'const.list.FLAT_1'(s('type.list.list'('type.list.list'(X6)),'const.list.SNOC_2'(s('type.list.list'(X6),X7),s('type.list.list'('type.list.list'(X6)),X8)))))),
  file('thm.rich_list.FLAT_SNOC','thm.rich_list.FLAT_SNOC')).
fof(f56656,plain,(
  ( ! [X6,X7,X5] : (s('type.list.list'(X5),'const.list.APPEND_2'(s('type.list.list'(X5),'const.list.FLAT_1'(s('type.list.list'('type.list.list'(X5)),X7))),s('type.list.list'(X5),X6))) = s('type.list.list'(X5),'const.list.FLAT_1'(s('type.list.list'('type.list.list'(X5)),'const.list.SNOC_2'(s('type.list.list'(X5),X6),s('type.list.list'('type.list.list'(X5)),X7)))))) )),
  inference(forward_demodulation,[],[f56116,f1008])).
fof(f1008,plain,(
  ( ! [X2,X0,X1] : (s('type.list.list'(X0),'const.list.SNOC_2'(s(X0,X1),s('type.list.list'(X0),X2))) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),'const.list.SNOC_2'(s(X0,X1),s('type.list.list'(X0),'const.list.NIL_0')))))) )),
  inference(forward_demodulation,[],[f713,f692])).
fof(f692,plain,(
  ( ! [X0,X1] : (s('type.list.list'(X0),'const.list.SNOC_2'(s(X0,X1),s('type.list.list'(X0),'const.list.NIL_0'))) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X1),s('type.list.list'(X0),'const.list.NIL_0')))) )),
  inference(cnf_transformation,[],[f196])).
fof(f196,plain,(
  ! [X0,X1] : s('type.list.list'(X0),'const.list.SNOC_2'(s(X0,X1),s('type.list.list'(X0),'const.list.NIL_0'))) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X1),s('type.list.list'(X0),'const.list.NIL_0')))),
  inference(flattening,[],[f195])).
fof(f195,plain,(
  ! [X0] : ! [X1] : s('type.list.list'(X0),'const.list.SNOC_2'(s(X0,X1),s('type.list.list'(X0),'const.list.NIL_0'))) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X1),s('type.list.list'(X0),'const.list.NIL_0')))),
  inference(rectify,[],[f77])).
fof(f77,axiom,(
  ! [X6] : ! [X7] : s('type.list.list'(X6),'const.list.SNOC_2'(s(X6,X7),s('type.list.list'(X6),'const.list.NIL_0'))) = s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X7),s('type.list.list'(X6),'const.list.NIL_0')))),
  file('thm.rich_list.FLAT_SNOC','thm.list.SNOC|split|0')).
fof(f713,plain,(
  ( ! [X2,X0,X1] : (s('type.list.list'(X0),'const.list.SNOC_2'(s(X0,X1),s('type.list.list'(X0),X2))) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X1),s('type.list.list'(X0),'const.list.NIL_0')))))) )),
  inference(cnf_transformation,[],[f224])).
fof(f224,plain,(
  ! [X0,X1,X2] : s('type.list.list'(X0),'const.list.SNOC_2'(s(X0,X1),s('type.list.list'(X0),X2))) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X1),s('type.list.list'(X0),'const.list.NIL_0')))))),
  inference(flattening,[],[f223])).
fof(f223,plain,(
  ! [X0] : ! [X1,X2] : s('type.list.list'(X0),'const.list.SNOC_2'(s(X0,X1),s('type.list.list'(X0),X2))) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X1),s('type.list.list'(X0),'const.list.NIL_0')))))),
  inference(rectify,[],[f61])).
fof(f61,axiom,(
  ! [X6] : ! [X7,X8] : s('type.list.list'(X6),'const.list.SNOC_2'(s(X6,X7),s('type.list.list'(X6),X8))) = s('type.list.list'(X6),'const.list.APPEND_2'(s('type.list.list'(X6),X8),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X7),s('type.list.list'(X6),'const.list.NIL_0')))))),
  file('thm.rich_list.FLAT_SNOC','thm.list.SNOC_APPEND')).
fof(f56116,plain,(
  ( ! [X6,X7,X5] : (s('type.list.list'(X5),'const.list.APPEND_2'(s('type.list.list'(X5),'const.list.FLAT_1'(s('type.list.list'('type.list.list'(X5)),X7))),s('type.list.list'(X5),X6))) = s('type.list.list'(X5),'const.list.FLAT_1'(s('type.list.list'('type.list.list'(X5)),'const.list.APPEND_2'(s('type.list.list'('type.list.list'(X5)),X7),s('type.list.list'('type.list.list'(X5)),'const.list.SNOC_2'(s('type.list.list'(X5),X6),s('type.list.list'('type.list.list'(X5)),'const.list.NIL_0')))))))) )),
  inference(superposition,[],[f719,f10475])).
fof(f10475,plain,(
  ( ! [X0,X1] : (s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.FLAT_1'(s('type.list.list'('type.list.list'(X0)),'const.list.SNOC_2'(s('type.list.list'(X0),X1),s('type.list.list'('type.list.list'(X0)),'const.list.NIL_0')))))) )),
  inference(forward_demodulation,[],[f10474,f688])).
fof(f688,plain,(
  ( ! [X0,X1] : (s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),'const.list.NIL_0')))) )),
  inference(cnf_transformation,[],[f188])).
fof(f188,plain,(
  ! [X0,X1] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),'const.list.NIL_0')))),
  inference(flattening,[],[f187])).
fof(f187,plain,(
  ! [X0] : ! [X1] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),'const.list.NIL_0')))),
  inference(rectify,[],[f105])).
fof(f105,axiom,(
  ! [X6] : ! [X8] : s('type.list.list'(X6),X8) = s('type.list.list'(X6),'const.list.APPEND_2'(s('type.list.list'(X6),X8),s('type.list.list'(X6),'const.list.NIL_0')))),
  file('thm.rich_list.FLAT_SNOC','thm.list.APPEND_NIL')).
fof(f10474,plain,(
  ( ! [X0,X1] : (s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),'const.list.NIL_0'))) = s('type.list.list'(X0),'const.list.FLAT_1'(s('type.list.list'('type.list.list'(X0)),'const.list.SNOC_2'(s('type.list.list'(X0),X1),s('type.list.list'('type.list.list'(X0)),'const.list.NIL_0')))))) )),
  inference(forward_demodulation,[],[f10374,f615])).
fof(f615,plain,(
  ( ! [X0] : (s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),'const.list.FLAT_1'(s('type.list.list'('type.list.list'(X0)),'const.list.NIL_0')))) )),
  inference(cnf_transformation,[],[f142])).
fof(f142,plain,(
  ! [X0] : s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),'const.list.FLAT_1'(s('type.list.list'('type.list.list'(X0)),'const.list.NIL_0')))),
  inference(rectify,[],[f9])).
fof(f9,axiom,(
  ! [X6] : s('type.list.list'(X6),'const.list.NIL_0') = s('type.list.list'(X6),'const.list.FLAT_1'(s('type.list.list'('type.list.list'(X6)),'const.list.NIL_0')))),
  file('thm.rich_list.FLAT_SNOC','thm.list.FLAT|split|0')).
fof(f10374,plain,(
  ( ! [X0,X1] : (s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),'const.list.FLAT_1'(s('type.list.list'('type.list.list'(X0)),'const.list.NIL_0'))))) = s('type.list.list'(X0),'const.list.FLAT_1'(s('type.list.list'('type.list.list'(X0)),'const.list.SNOC_2'(s('type.list.list'(X0),X1),s('type.list.list'('type.list.list'(X0)),'const.list.NIL_0')))))) )),
  inference(superposition,[],[f716,f692])).
fof(f716,plain,(
  ( ! [X2,X0,X1] : (s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),'const.list.FLAT_1'(s('type.list.list'('type.list.list'(X0)),X2))))) = s('type.list.list'(X0),'const.list.FLAT_1'(s('type.list.list'('type.list.list'(X0)),'const.list.CONS_2'(s('type.list.list'(X0),X1),s('type.list.list'('type.list.list'(X0)),X2)))))) )),
  inference(cnf_transformation,[],[f230])).
fof(f230,plain,(
  ! [X0,X1,X2] : s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),'const.list.FLAT_1'(s('type.list.list'('type.list.list'(X0)),X2))))) = s('type.list.list'(X0),'const.list.FLAT_1'(s('type.list.list'('type.list.list'(X0)),'const.list.CONS_2'(s('type.list.list'(X0),X1),s('type.list.list'('type.list.list'(X0)),X2)))))),
  inference(flattening,[],[f229])).
fof(f229,plain,(
  ! [X0] : ! [X1,X2] : s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),'const.list.FLAT_1'(s('type.list.list'('type.list.list'(X0)),X2))))) = s('type.list.list'(X0),'const.list.FLAT_1'(s('type.list.list'('type.list.list'(X0)),'const.list.CONS_2'(s('type.list.list'(X0),X1),s('type.list.list'('type.list.list'(X0)),X2)))))),
  inference(rectify,[],[f8])).
fof(f8,axiom,(
  ! [X6] : ! [X11,X12] : s('type.list.list'(X6),'const.list.APPEND_2'(s('type.list.list'(X6),X11),s('type.list.list'(X6),'const.list.FLAT_1'(s('type.list.list'('type.list.list'(X6)),X12))))) = s('type.list.list'(X6),'const.list.FLAT_1'(s('type.list.list'('type.list.list'(X6)),'const.list.CONS_2'(s('type.list.list'(X6),X11),s('type.list.list'('type.list.list'(X6)),X12)))))),
  file('thm.rich_list.FLAT_SNOC','thm.list.FLAT|split|1')).
fof(f719,plain,(
  ( ! [X2,X0,X1] : (s('type.list.list'(X0),'const.list.FLAT_1'(s('type.list.list'('type.list.list'(X0)),'const.list.APPEND_2'(s('type.list.list'('type.list.list'(X0)),X1),s('type.list.list'('type.list.list'(X0)),X2))))) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.FLAT_1'(s('type.list.list'('type.list.list'(X0)),X1))),s('type.list.list'(X0),'const.list.FLAT_1'(s('type.list.list'('type.list.list'(X0)),X2)))))) )),
  inference(cnf_transformation,[],[f236])).
fof(f236,plain,(
  ! [X0,X1,X2] : s('type.list.list'(X0),'const.list.FLAT_1'(s('type.list.list'('type.list.list'(X0)),'const.list.APPEND_2'(s('type.list.list'('type.list.list'(X0)),X1),s('type.list.list'('type.list.list'(X0)),X2))))) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.FLAT_1'(s('type.list.list'('type.list.list'(X0)),X1))),s('type.list.list'(X0),'const.list.FLAT_1'(s('type.list.list'('type.list.list'(X0)),X2)))))),
  inference(flattening,[],[f235])).
fof(f235,plain,(
  ! [X0] : ! [X1,X2] : s('type.list.list'(X0),'const.list.FLAT_1'(s('type.list.list'('type.list.list'(X0)),'const.list.APPEND_2'(s('type.list.list'('type.list.list'(X0)),X1),s('type.list.list'('type.list.list'(X0)),X2))))) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.FLAT_1'(s('type.list.list'('type.list.list'(X0)),X1))),s('type.list.list'(X0),'const.list.FLAT_1'(s('type.list.list'('type.list.list'(X0)),X2)))))),
  inference(rectify,[],[f7])).
fof(f7,axiom,(
  ! [X6] : ! [X9,X10] : s('type.list.list'(X6),'const.list.FLAT_1'(s('type.list.list'('type.list.list'(X6)),'const.list.APPEND_2'(s('type.list.list'('type.list.list'(X6)),X9),s('type.list.list'('type.list.list'(X6)),X10))))) = s('type.list.list'(X6),'const.list.APPEND_2'(s('type.list.list'(X6),'const.list.FLAT_1'(s('type.list.list'('type.list.list'(X6)),X9))),s('type.list.list'(X6),'const.list.FLAT_1'(s('type.list.list'('type.list.list'(X6)),X10)))))),
  file('thm.rich_list.FLAT_SNOC','thm.list.FLAT_APPEND')).
% SZS output end Proof for thm.rich_list
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 923
% Passive clauses: 7307
% Generated clauses: 58246
% Final active clauses: 827
% Final passive clauses: 4610
% Input formulas: 133
% Initial clauses: 375
% 
% Duplicate literals: 113
% Trivial inequalities: 27
% Fw subsumption resolutions: 1740
% Fw demodulations: 15924
% Bw demodulations: 1721
% Condensations: 692
% Global subsumptions: 285
% 
% Simple tautologies: 191
% Equational tautologies: 81
% Forward subsumptions: 24143
% Fw demodulations to eq. taut.: 6514
% Bw demodulations to eq. taut.: 18
% 
% Unit resulting resolution: 19461
% Factoring: 1
% Forward superposition: 9170
% Backward superposition: 6985
% Self superposition: 96
% Equality factoring: 26
% Equality resolution: 6
% 
% Split clauses: 102
% Split components: 204
% SAT solver clauses: 8924
% SAT solver unit clauses: 2543
% SAT solver binary clauses: 3321
% 
% Sat splits: 102
% Sat splitting refutations: 1126
% 
% Memory used [KB]: 63964
% Time elapsed: 3.085 s
% ------------------------------
% ------------------------------
% Success in time 4.42 s
