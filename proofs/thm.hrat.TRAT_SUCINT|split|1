Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 300 next slice time: 5
dis+11_7_3 on thm.hrat
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.hrat
% SZS output start Proof for thm.hrat
fof(f327,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f326,f201,f203,f202,f235,f43,f46,f44,f55])).
fof(f55,plain,(
  $false | $spl0),
  inference(resolution,[],[f52,f27])).
fof(f27,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f7])).
fof(f7,axiom,(
  p(s(bool,'T_0'))),
  file('thm.hrat.TRAT_SUCINT|split|1','thm.bool.TRUTH')).
fof(f52,plain,(
  ( ! [X2] : (~p(s(bool,X2))) ) | $spl0),
  inference(superposition,[],[f30,f44])).
fof(f30,plain,(
  ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f13])).
fof(f13,plain,(
  ~p(s(bool,'F_0'))),
  inference(flattening,[],[f2])).
fof(f2,axiom,(
  ~p(s(bool,'F_0'))),
  file('thm.hrat.TRAT_SUCINT|split|1',aHL_FALSITY)).
fof(f44,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0)) ) | $spl0),
  inference(cnf_transformation,[],[f44_D])).
fof(f44_D,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0)) ) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f46,plain,(
  s(bool,'T_0') != s(bool,'F_0') | $spl3),
  inference(cnf_transformation,[],[f46_D])).
fof(f46_D,plain,(
  s(bool,'T_0') != s(bool,'F_0') <=> ~$spl3),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl3])])).
fof(f43,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,'F_0') = s(bool,X0)) )),
  inference(equality_factoring,[],[f32])).
fof(f32,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f3])).
fof(f3,axiom,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) | s(bool,'F_0') = s(bool,X0))),
  file('thm.hrat.TRAT_SUCINT|split|1',aHL_BOOL_CASES)).
fof(f235,plain,(
  $false | ($spl3 | $spl4)),
  inference(trivial_inequality_removal,[],[f232])).
fof(f232,plain,(
  s(bool,'T_0') != s(bool,'T_0') | ($spl3 | $spl4)),
  inference(superposition,[],[f46,f202])).
fof(f202,plain,(
  ( ! [X12] : (s(bool,'T_0') = s(bool,X12)) ) | $spl4),
  inference(cnf_transformation,[],[f202_D])).
fof(f202_D,plain,(
  ( ! [X12] : (s(bool,'T_0') = s(bool,X12)) ) <=> ~$spl4),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl4])])).
fof(f203,plain,(
  ( ! [X10,X11] : (s('type.pair.prod'('type.num.num','type.num.num'),X10) != s('type.pair.prod'('type.num.num','type.num.num'),X11) | s(bool,'T_0') = s(bool,'const.hrat.trat_eq_2'(s('type.pair.prod'('type.num.num','type.num.num'),X10),s('type.pair.prod'('type.num.num','type.num.num'),X11)))) ) | $spl6),
  inference(cnf_transformation,[],[f203_D])).
fof(f203_D,plain,(
  ( ! [X10,X11] : (s('type.pair.prod'('type.num.num','type.num.num'),X10) != s('type.pair.prod'('type.num.num','type.num.num'),X11) | s(bool,'T_0') = s(bool,'const.hrat.trat_eq_2'(s('type.pair.prod'('type.num.num','type.num.num'),X10),s('type.pair.prod'('type.num.num','type.num.num'),X11)))) ) <=> ~$spl6),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl6])])).
fof(f201,plain,(
  ( ! [X12,X10,X11] : (s('type.pair.prod'('type.num.num','type.num.num'),X10) != s('type.pair.prod'('type.num.num','type.num.num'),X11) | s(bool,'T_0') = s(bool,X12) | s(bool,'T_0') = s(bool,'const.hrat.trat_eq_2'(s('type.pair.prod'('type.num.num','type.num.num'),X10),s('type.pair.prod'('type.num.num','type.num.num'),X11)))) )),
  inference(subsumption_resolution,[],[f115,f40])).
fof(f40,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f30,f32])).
fof(f115,plain,(
  ( ! [X12,X10,X11] : (p(s(bool,X12)) | s('type.pair.prod'('type.num.num','type.num.num'),X10) != s('type.pair.prod'('type.num.num','type.num.num'),X11) | s(bool,'T_0') = s(bool,X12) | s(bool,'T_0') = s(bool,'const.hrat.trat_eq_2'(s('type.pair.prod'('type.num.num','type.num.num'),X10),s('type.pair.prod'('type.num.num','type.num.num'),X11)))) )),
  inference(superposition,[],[f35,f38])).
fof(f38,plain,(
  ( ! [X0,X1] : (s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X1) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f32,f32])).
fof(f35,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.hrat.trat_eq_2'(s('type.pair.prod'('type.num.num','type.num.num'),X0),s('type.pair.prod'('type.num.num','type.num.num'),X1)))) | s('type.pair.prod'('type.num.num','type.num.num'),X0) != s('type.pair.prod'('type.num.num','type.num.num'),X1)) )),
  inference(cnf_transformation,[],[f21])).
fof(f21,plain,(
  ! [X0,X1] : (s('type.pair.prod'('type.num.num','type.num.num'),X0) != s('type.pair.prod'('type.num.num','type.num.num'),X1) | p(s(bool,'const.hrat.trat_eq_2'(s('type.pair.prod'('type.num.num','type.num.num'),X0),s('type.pair.prod'('type.num.num','type.num.num'),X1)))))),
  inference(ennf_transformation,[],[f17])).
fof(f17,plain,(
  ! [X0,X1] : (s('type.pair.prod'('type.num.num','type.num.num'),X0) = s('type.pair.prod'('type.num.num','type.num.num'),X1) => p(s(bool,'const.hrat.trat_eq_2'(s('type.pair.prod'('type.num.num','type.num.num'),X0),s('type.pair.prod'('type.num.num','type.num.num'),X1)))))),
  inference(rectify,[],[f11])).
fof(f11,axiom,(
  ! [X9,X10] : (s('type.pair.prod'('type.num.num','type.num.num'),X9) = s('type.pair.prod'('type.num.num','type.num.num'),X10) => p(s(bool,'const.hrat.trat_eq_2'(s('type.pair.prod'('type.num.num','type.num.num'),X9),s('type.pair.prod'('type.num.num','type.num.num'),X10)))))),
  file('thm.hrat.TRAT_SUCINT|split|1','thm.hrat.TRAT_EQ_AP')).
fof(f326,plain,(
  $false | $spl6),
  inference(subsumption_resolution,[],[f325,f27])).
fof(f325,plain,(
  ~p(s(bool,'T_0')) | $spl6),
  inference(forward_demodulation,[],[f324,f290])).
fof(f290,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,'const.hrat.trat_eq_2'(s('type.pair.prod'('type.num.num','type.num.num'),X0),s('type.pair.prod'('type.num.num','type.num.num'),X0)))) ) | $spl6),
  inference(equality_resolution,[],[f203])).
fof(f324,plain,(
  ~p(s(bool,'const.hrat.trat_eq_2'(s('type.pair.prod'('type.num.num','type.num.num'),'const.hrat.trat_sucint_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',sK0))))),s('type.pair.prod'('type.num.num','type.num.num'),'const.hrat.trat_sucint_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',sK0))))))))),
  inference(forward_demodulation,[],[f26,f31])).
fof(f31,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.num.num','type.num.num'),'const.hrat.trat_sucint_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))))) = s('type.pair.prod'('type.num.num','type.num.num'),'const.hrat.trat_add_2'(s('type.pair.prod'('type.num.num','type.num.num'),'const.hrat.trat_sucint_1'(s('type.num.num',X0))),s('type.pair.prod'('type.num.num','type.num.num'),'const.hrat.trat_|49|_0')))) )),
  inference(cnf_transformation,[],[f14])).
fof(f14,plain,(
  ! [X0] : s('type.pair.prod'('type.num.num','type.num.num'),'const.hrat.trat_sucint_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))))) = s('type.pair.prod'('type.num.num','type.num.num'),'const.hrat.trat_add_2'(s('type.pair.prod'('type.num.num','type.num.num'),'const.hrat.trat_sucint_1'(s('type.num.num',X0))),s('type.pair.prod'('type.num.num','type.num.num'),'const.hrat.trat_|49|_0')))),
  inference(rectify,[],[f10])).
fof(f10,axiom,(
  ! [X6] : s('type.pair.prod'('type.num.num','type.num.num'),'const.hrat.trat_sucint_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X6))))) = s('type.pair.prod'('type.num.num','type.num.num'),'const.hrat.trat_add_2'(s('type.pair.prod'('type.num.num','type.num.num'),'const.hrat.trat_sucint_1'(s('type.num.num',X6))),s('type.pair.prod'('type.num.num','type.num.num'),'const.hrat.trat_|49|_0')))),
  file('thm.hrat.TRAT_SUCINT|split|1','thm.hrat.trat_sucint|split|1')).
fof(f26,plain,(
  ~p(s(bool,'const.hrat.trat_eq_2'(s('type.pair.prod'('type.num.num','type.num.num'),'const.hrat.trat_sucint_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',sK0))))),s('type.pair.prod'('type.num.num','type.num.num'),'const.hrat.trat_add_2'(s('type.pair.prod'('type.num.num','type.num.num'),'const.hrat.trat_sucint_1'(s('type.num.num',sK0))),s('type.pair.prod'('type.num.num','type.num.num'),'const.hrat.trat_|49|_0'))))))),
  inference(cnf_transformation,[],[f23])).
fof(f23,plain,(
  ~p(s(bool,'const.hrat.trat_eq_2'(s('type.pair.prod'('type.num.num','type.num.num'),'const.hrat.trat_sucint_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',sK0))))),s('type.pair.prod'('type.num.num','type.num.num'),'const.hrat.trat_add_2'(s('type.pair.prod'('type.num.num','type.num.num'),'const.hrat.trat_sucint_1'(s('type.num.num',sK0))),s('type.pair.prod'('type.num.num','type.num.num'),'const.hrat.trat_|49|_0'))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0])],[f20])).
fof(f20,plain,(
  ? [X0] : ~p(s(bool,'const.hrat.trat_eq_2'(s('type.pair.prod'('type.num.num','type.num.num'),'const.hrat.trat_sucint_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))))),s('type.pair.prod'('type.num.num','type.num.num'),'const.hrat.trat_add_2'(s('type.pair.prod'('type.num.num','type.num.num'),'const.hrat.trat_sucint_1'(s('type.num.num',X0))),s('type.pair.prod'('type.num.num','type.num.num'),'const.hrat.trat_|49|_0'))))))),
  inference(ennf_transformation,[],[f12])).
fof(f12,plain,(
  ~! [X0] : p(s(bool,'const.hrat.trat_eq_2'(s('type.pair.prod'('type.num.num','type.num.num'),'const.hrat.trat_sucint_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))))),s('type.pair.prod'('type.num.num','type.num.num'),'const.hrat.trat_add_2'(s('type.pair.prod'('type.num.num','type.num.num'),'const.hrat.trat_sucint_1'(s('type.num.num',X0))),s('type.pair.prod'('type.num.num','type.num.num'),'const.hrat.trat_|49|_0'))))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : p(s(bool,'const.hrat.trat_eq_2'(s('type.pair.prod'('type.num.num','type.num.num'),'const.hrat.trat_sucint_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X6))))),s('type.pair.prod'('type.num.num','type.num.num'),'const.hrat.trat_add_2'(s('type.pair.prod'('type.num.num','type.num.num'),'const.hrat.trat_sucint_1'(s('type.num.num',X6))),s('type.pair.prod'('type.num.num','type.num.num'),'const.hrat.trat_|49|_0'))))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : p(s(bool,'const.hrat.trat_eq_2'(s('type.pair.prod'('type.num.num','type.num.num'),'const.hrat.trat_sucint_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X6))))),s('type.pair.prod'('type.num.num','type.num.num'),'const.hrat.trat_add_2'(s('type.pair.prod'('type.num.num','type.num.num'),'const.hrat.trat_sucint_1'(s('type.num.num',X6))),s('type.pair.prod'('type.num.num','type.num.num'),'const.hrat.trat_|49|_0'))))))),
  file('thm.hrat.TRAT_SUCINT|split|1','thm.hrat.TRAT_SUCINT|split|1')).
% SZS output end Proof for thm.hrat
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 19
% Passive clauses: 44
% Generated clauses: 285
% Final active clauses: 14
% Final passive clauses: 14
% Input formulas: 10
% Initial clauses: 11
% 
% Duplicate literals: 49
% Trivial inequalities: 5
% Fw subsumption resolutions: 8
% Fw demodulations: 16
% Bw demodulations: 2
% 
% Simple tautologies: 16
% Equational tautologies: 15
% Forward subsumptions: 125
% 
% Binary resolution: 6
% Forward superposition: 73
% Backward superposition: 56
% Self superposition: 26
% Equality factoring: 26
% Equality resolution: 1
% 
% Split clauses: 5
% Split components: 10
% SAT solver clauses: 14
% SAT solver unit clauses: 7
% SAT solver binary clauses: 6
% SAT solver learnt clauses: 1
% 
% Sat splits: 5
% Sat splitting refutations: 4
% 
% TWLsolver clauses: 13
% TWLsolver calls for satisfiability: 7
% 
% Memory used [KB]: 767
% Time elapsed: 0.016 s
% ------------------------------
% ------------------------------
% Success in time 0.018 s
