Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 300 next slice time: 5
dis+11_7_3 on thm.real
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.real
% SZS output start Proof for thm.real
fof(f383,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f382,f336,f22,f33,f31,f21,f32,f30])).
fof(f30,plain,(
  s('type.realax.real',sK0) = s('type.realax.real','const.realax.real_add_2'(s('type.realax.real',sK0),s('type.realax.real',sK1))) | $spl0),
  inference(cnf_transformation,[],[f30_D])).
fof(f30_D,plain,(
  s('type.realax.real',sK0) = s('type.realax.real','const.realax.real_add_2'(s('type.realax.real',sK0),s('type.realax.real',sK1))) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f32,plain,(
  s('type.realax.real',sK1) = s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))) | $spl2),
  inference(cnf_transformation,[],[f32_D])).
fof(f32_D,plain,(
  s('type.realax.real',sK1) = s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f21,plain,(
  s('type.realax.real',sK1) = s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.realax.real',sK0) = s('type.realax.real','const.realax.real_add_2'(s('type.realax.real',sK0),s('type.realax.real',sK1)))),
  inference(cnf_transformation,[],[f18])).
fof(f18,plain,(
  (s('type.realax.real',sK0) = s('type.realax.real','const.realax.real_add_2'(s('type.realax.real',sK0),s('type.realax.real',sK1))) | s('type.realax.real',sK1) = s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0')))) & (s('type.realax.real',sK0) != s('type.realax.real','const.realax.real_add_2'(s('type.realax.real',sK0),s('type.realax.real',sK1))) | s('type.realax.real',sK1) != s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1])],[f17])).
fof(f17,plain,(
  ? [X0,X1] : ((s('type.realax.real',X0) = s('type.realax.real','const.realax.real_add_2'(s('type.realax.real',X0),s('type.realax.real',X1))) | s('type.realax.real',X1) = s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0')))) & (s('type.realax.real',X0) != s('type.realax.real','const.realax.real_add_2'(s('type.realax.real',X0),s('type.realax.real',X1))) | s('type.realax.real',X1) != s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0')))))),
  inference(nnf_transformation,[],[f15])).
fof(f15,plain,(
  ? [X0,X1] : (s('type.realax.real',X0) = s('type.realax.real','const.realax.real_add_2'(s('type.realax.real',X0),s('type.realax.real',X1))) <~> s('type.realax.real',X1) = s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))))),
  inference(ennf_transformation,[],[f9])).
fof(f9,plain,(
  ~! [X0,X1] : (s('type.realax.real',X0) = s('type.realax.real','const.realax.real_add_2'(s('type.realax.real',X0),s('type.realax.real',X1))) <=> s('type.realax.real',X1) = s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7] : (s('type.realax.real',X6) = s('type.realax.real','const.realax.real_add_2'(s('type.realax.real',X6),s('type.realax.real',X7))) <=> s('type.realax.real',X7) = s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7] : (s('type.realax.real',X6) = s('type.realax.real','const.realax.real_add_2'(s('type.realax.real',X6),s('type.realax.real',X7))) <=> s('type.realax.real',X7) = s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))))),
  file('thm.real.REAL_ADD_RID_UNIQ','thm.real.REAL_ADD_RID_UNIQ')).
fof(f31,plain,(
  s('type.realax.real',sK0) != s('type.realax.real','const.realax.real_add_2'(s('type.realax.real',sK0),s('type.realax.real',sK1))) | $spl1),
  inference(cnf_transformation,[],[f31_D])).
fof(f31_D,plain,(
  s('type.realax.real',sK0) != s('type.realax.real','const.realax.real_add_2'(s('type.realax.real',sK0),s('type.realax.real',sK1))) <=> ~$spl1),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1])])).
fof(f33,plain,(
  s('type.realax.real',sK1) != s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))) | $spl3),
  inference(cnf_transformation,[],[f33_D])).
fof(f33_D,plain,(
  s('type.realax.real',sK1) != s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))) <=> ~$spl3),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl3])])).
fof(f22,plain,(
  s('type.realax.real',sK1) != s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.realax.real',sK0) != s('type.realax.real','const.realax.real_add_2'(s('type.realax.real',sK0),s('type.realax.real',sK1)))),
  inference(cnf_transformation,[],[f18])).
fof(f336,plain,(
  $false | ($spl0 | $spl3)),
  inference(subsumption_resolution,[],[f334,f33])).
fof(f334,plain,(
  s('type.realax.real',sK1) = s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))) | $spl0),
  inference(trivial_inequality_removal,[],[f329])).
fof(f329,plain,(
  s('type.realax.real',sK0) != s('type.realax.real',sK0) | s('type.realax.real',sK1) = s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))) | $spl0),
  inference(superposition,[],[f211,f30])).
fof(f211,plain,(
  ( ! [X0,X1] : (s('type.realax.real',X1) != s('type.realax.real','const.realax.real_add_2'(s('type.realax.real',X1),s('type.realax.real',X0))) | s('type.realax.real',X0) = s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f27,f26])).
fof(f26,plain,(
  ( ! [X0,X1] : (s('type.realax.real','const.realax.real_add_2'(s('type.realax.real',X0),s('type.realax.real',X1))) = s('type.realax.real','const.realax.real_add_2'(s('type.realax.real',X1),s('type.realax.real',X0)))) )),
  inference(cnf_transformation,[],[f11])).
fof(f11,plain,(
  ! [X0,X1] : s('type.realax.real','const.realax.real_add_2'(s('type.realax.real',X0),s('type.realax.real',X1))) = s('type.realax.real','const.realax.real_add_2'(s('type.realax.real',X1),s('type.realax.real',X0)))),
  inference(rectify,[],[f7])).
fof(f7,axiom,(
  ! [X6,X7] : s('type.realax.real','const.realax.real_add_2'(s('type.realax.real',X6),s('type.realax.real',X7))) = s('type.realax.real','const.realax.real_add_2'(s('type.realax.real',X7),s('type.realax.real',X6)))),
  file('thm.real.REAL_ADD_RID_UNIQ','thm.realax.REAL_ADD_SYM')).
fof(f27,plain,(
  ( ! [X0,X1] : (s('type.realax.real',X1) != s('type.realax.real','const.realax.real_add_2'(s('type.realax.real',X0),s('type.realax.real',X1))) | s('type.realax.real',X0) = s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(cnf_transformation,[],[f19])).
fof(f19,plain,(
  ! [X0,X1] : ((s('type.realax.real',X1) != s('type.realax.real','const.realax.real_add_2'(s('type.realax.real',X0),s('type.realax.real',X1))) | s('type.realax.real',X0) = s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0')))) & (s('type.realax.real',X0) != s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.realax.real',X1) = s('type.realax.real','const.realax.real_add_2'(s('type.realax.real',X0),s('type.realax.real',X1)))))),
  inference(nnf_transformation,[],[f12])).
fof(f12,plain,(
  ! [X0,X1] : (s('type.realax.real',X1) = s('type.realax.real','const.realax.real_add_2'(s('type.realax.real',X0),s('type.realax.real',X1))) <=> s('type.realax.real',X0) = s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))))),
  inference(rectify,[],[f8])).
fof(f8,axiom,(
  ! [X6,X7] : (s('type.realax.real',X7) = s('type.realax.real','const.realax.real_add_2'(s('type.realax.real',X6),s('type.realax.real',X7))) <=> s('type.realax.real',X6) = s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))))),
  file('thm.real.REAL_ADD_RID_UNIQ','thm.real.REAL_ADD_LID_UNIQ')).
fof(f382,plain,(
  $false | ($spl1 | $spl2)),
  inference(trivial_inequality_removal,[],[f376])).
fof(f376,plain,(
  s('type.realax.real',sK0) != s('type.realax.real',sK0) | ($spl1 | $spl2)),
  inference(superposition,[],[f31,f341])).
fof(f341,plain,(
  ( ! [X1] : (s('type.realax.real',X1) = s('type.realax.real','const.realax.real_add_2'(s('type.realax.real',X1),s('type.realax.real',sK1)))) ) | $spl2),
  inference(backward_demodulation,[],[f32,f281])).
fof(f281,plain,(
  ( ! [X1] : (s('type.realax.real',X1) = s('type.realax.real','const.realax.real_add_2'(s('type.realax.real',X1),s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0')))))) )),
  inference(superposition,[],[f276,f26])).
fof(f276,plain,(
  ( ! [X0] : (s('type.realax.real',X0) = s('type.realax.real','const.realax.real_add_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.realax.real',X0)))) )),
  inference(equality_resolution,[],[f28])).
fof(f28,plain,(
  ( ! [X0,X1] : (s('type.realax.real',X0) != s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.realax.real',X1) = s('type.realax.real','const.realax.real_add_2'(s('type.realax.real',X0),s('type.realax.real',X1)))) )),
  inference(cnf_transformation,[],[f19])).
% SZS output end Proof for thm.real
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 31
% Passive clauses: 93
% Generated clauses: 346
% Final active clauses: 16
% Final passive clauses: 41
% Input formulas: 7
% Initial clauses: 9
% 
% Duplicate literals: 37
% Trivial inequalities: 6
% Fw subsumption resolutions: 3
% Fw demodulations: 9
% Bw demodulations: 7
% 
% Simple tautologies: 19
% Equational tautologies: 14
% Forward subsumptions: 160
% 
% Binary resolution: 4
% Forward superposition: 124
% Backward superposition: 74
% Self superposition: 33
% Equality factoring: 26
% Equality resolution: 2
% 
% Split clauses: 4
% Split components: 8
% SAT solver clauses: 13
% SAT solver unit clauses: 2
% SAT solver binary clauses: 6
% SAT solver learnt clauses: 3
% SAT solver learnt literals: 3
% 
% Sat splits: 4
% Sat splitting refutations: 5
% 
% TWLsolver clauses: 10
% TWLsolver calls for satisfiability: 7
% 
% Memory used [KB]: 767
% Time elapsed: 0.019 s
% ------------------------------
% ------------------------------
% Success in time 0.024 s
