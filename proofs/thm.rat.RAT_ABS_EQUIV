Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 300 next slice time: 5
dis+11_7_3 on thm.rat
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.rat
% SZS output start Proof for thm.rat
fof(f499,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f485,f31,f48,f46,f476,f30,f47,f45,f274,f279,f277,f321,f57,f60,f58,f71])).
fof(f71,plain,(
  $false | $spl4),
  inference(resolution,[],[f67,f32])).
fof(f32,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f7])).
fof(f7,axiom,(
  p(s(bool,'T_0'))),
  file('thm.rat.RAT_ABS_EQUIV','thm.bool.TRUTH')).
fof(f67,plain,(
  ( ! [X2] : (~p(s(bool,X2))) ) | $spl4),
  inference(superposition,[],[f34,f58])).
fof(f34,plain,(
  ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f13])).
fof(f13,plain,(
  ~p(s(bool,'F_0'))),
  inference(flattening,[],[f2])).
fof(f2,axiom,(
  ~p(s(bool,'F_0'))),
  file('thm.rat.RAT_ABS_EQUIV',aHL_FALSITY)).
fof(f58,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0)) ) | $spl4),
  inference(cnf_transformation,[],[f58_D])).
fof(f58_D,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0)) ) <=> ~$spl4),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl4])])).
fof(f60,plain,(
  s(bool,'T_0') != s(bool,'F_0') | $spl7),
  inference(cnf_transformation,[],[f60_D])).
fof(f60_D,plain,(
  s(bool,'T_0') != s(bool,'F_0') <=> ~$spl7),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl7])])).
fof(f57,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,'F_0') = s(bool,X0)) )),
  inference(equality_factoring,[],[f36])).
fof(f36,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f3])).
fof(f3,axiom,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) | s(bool,'F_0') = s(bool,X0))),
  file('thm.rat.RAT_ABS_EQUIV',aHL_BOOL_CASES)).
fof(f321,plain,(
  $false | ($spl7 | $spl8)),
  inference(trivial_inequality_removal,[],[f316])).
fof(f316,plain,(
  s(bool,'T_0') != s(bool,'T_0') | ($spl7 | $spl8)),
  inference(superposition,[],[f60,f277])).
fof(f277,plain,(
  ( ! [X9] : (s(bool,'T_0') = s(bool,X9)) ) | $spl8),
  inference(cnf_transformation,[],[f277_D])).
fof(f277_D,plain,(
  ( ! [X9] : (s(bool,'T_0') = s(bool,X9)) ) <=> ~$spl8),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl8])])).
fof(f279,plain,(
  s(bool,'F_0') = s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac',sK0),s('type.frac.frac',sK1))) | $spl10),
  inference(cnf_transformation,[],[f279_D])).
fof(f279_D,plain,(
  s(bool,'F_0') = s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac',sK0),s('type.frac.frac',sK1))) <=> ~$spl10),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl10])])).
fof(f274,plain,(
  ( ! [X9] : (s(bool,'F_0') = s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac',sK0),s('type.frac.frac',sK1))) | s(bool,'T_0') = s(bool,X9)) ) | $spl3),
  inference(duplicate_literal_removal,[],[f238])).
fof(f238,plain,(
  ( ! [X9] : (s(bool,'F_0') = s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac',sK0),s('type.frac.frac',sK1))) | s(bool,'T_0') = s(bool,X9) | s(bool,'T_0') = s(bool,X9)) ) | $spl3),
  inference(superposition,[],[f211,f36])).
fof(f211,plain,(
  ( ! [X9] : (s(bool,X9) = s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac',sK0),s('type.frac.frac',sK1))) | s(bool,'T_0') = s(bool,X9)) ) | $spl3),
  inference(subsumption_resolution,[],[f141,f32])).
fof(f141,plain,(
  ( ! [X9] : (~p(s(bool,'T_0')) | s(bool,X9) = s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac',sK0),s('type.frac.frac',sK1))) | s(bool,'T_0') = s(bool,X9)) ) | $spl3),
  inference(superposition,[],[f48,f51])).
fof(f51,plain,(
  ( ! [X0,X1] : (s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X1) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f36,f36])).
fof(f45,plain,(
  s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac',sK0))) = s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac',sK1))) | $spl0),
  inference(cnf_transformation,[],[f45_D])).
fof(f45_D,plain,(
  s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac',sK0))) = s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac',sK1))) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f47,plain,(
  p(s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac',sK0),s('type.frac.frac',sK1)))) | $spl2),
  inference(cnf_transformation,[],[f47_D])).
fof(f47_D,plain,(
  p(s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac',sK0),s('type.frac.frac',sK1)))) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f30,plain,(
  p(s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac',sK0),s('type.frac.frac',sK1)))) | s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac',sK0))) = s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac',sK1)))),
  inference(cnf_transformation,[],[f24])).
fof(f24,plain,(
  (s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac',sK0))) = s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac',sK1))) | p(s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac',sK0),s('type.frac.frac',sK1))))) & (s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac',sK0))) != s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac',sK1))) | ~p(s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac',sK0),s('type.frac.frac',sK1)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1])],[f23])).
fof(f23,plain,(
  ? [X0,X1] : ((s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac',X0))) = s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac',X1))) | p(s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac',X0),s('type.frac.frac',X1))))) & (s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac',X0))) != s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac',X1))) | ~p(s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac',X0),s('type.frac.frac',X1))))))),
  inference(nnf_transformation,[],[f21])).
fof(f21,plain,(
  ? [X0,X1] : (s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac',X0))) = s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac',X1))) <~> p(s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac',X0),s('type.frac.frac',X1)))))),
  inference(ennf_transformation,[],[f12])).
fof(f12,plain,(
  ~! [X0,X1] : (s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac',X0))) = s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac',X1))) <=> p(s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac',X0),s('type.frac.frac',X1)))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7] : (s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac',X6))) = s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac',X7))) <=> p(s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac',X6),s('type.frac.frac',X7)))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7] : (s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac',X6))) = s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac',X7))) <=> p(s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac',X6),s('type.frac.frac',X7)))))),
  file('thm.rat.RAT_ABS_EQUIV','thm.rat.RAT_ABS_EQUIV')).
fof(f476,plain,(
  $false | ($spl0 | $spl10)),
  inference(subsumption_resolution,[],[f475,f34])).
fof(f475,plain,(
  p(s(bool,'F_0')) | ($spl0 | $spl10)),
  inference(forward_demodulation,[],[f472,f279])).
fof(f472,plain,(
  p(s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac',sK0),s('type.frac.frac',sK1)))) | $spl0),
  inference(equality_resolution,[],[f387])).
fof(f387,plain,(
  ( ! [X0] : (s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac',sK0))) != s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac',X0))) | p(s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac',X0),s('type.frac.frac',sK1))))) ) | $spl0),
  inference(superposition,[],[f42,f45])).
fof(f42,plain,(
  ( ! [X0,X1] : (s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac',X0))) != s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac',X1))) | p(s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac',X0),s('type.frac.frac',X1))))) )),
  inference(cnf_transformation,[],[f28])).
fof(f28,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac',X0),s('type.frac.frac',X1)))) | s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac',X0))) = s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac',X1)))) & (s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac',X0))) != s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac',X1))) | p(s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac',X0),s('type.frac.frac',X1))))))),
  inference(nnf_transformation,[],[f18])).
fof(f18,plain,(
  ! [X0,X1] : (p(s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac',X0),s('type.frac.frac',X1)))) <=> s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac',X0))) = s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac',X1))))),
  inference(rectify,[],[f11])).
fof(f11,axiom,(
  ! [X12,X13] : (p(s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac',X12),s('type.frac.frac',X13)))) <=> s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac',X12))) = s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac',X13))))),
  file('thm.rat.RAT_ABS_EQUIV','thm.rat.rat_type_thm|split|1')).
fof(f46,plain,(
  s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac',sK0))) != s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac',sK1))) | $spl1),
  inference(cnf_transformation,[],[f46_D])).
fof(f46_D,plain,(
  s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac',sK0))) != s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac',sK1))) <=> ~$spl1),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1])])).
fof(f48,plain,(
  ~p(s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac',sK0),s('type.frac.frac',sK1)))) | $spl3),
  inference(cnf_transformation,[],[f48_D])).
fof(f48_D,plain,(
  ~p(s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac',sK0),s('type.frac.frac',sK1)))) <=> ~$spl3),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl3])])).
fof(f31,plain,(
  ~p(s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac',sK0),s('type.frac.frac',sK1)))) | s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac',sK0))) != s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac',sK1)))),
  inference(cnf_transformation,[],[f24])).
fof(f485,plain,(
  s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac',sK0))) = s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac',sK1))) | $spl2),
  inference(resolution,[],[f47,f41])).
fof(f41,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac',X0),s('type.frac.frac',X1)))) | s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac',X0))) = s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac',X1)))) )),
  inference(cnf_transformation,[],[f28])).
% SZS output end Proof for thm.rat
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 30
% Passive clauses: 82
% Generated clauses: 462
% Final active clauses: 14
% Final passive clauses: 27
% Input formulas: 10
% Initial clauses: 14
% 
% Duplicate literals: 67
% Trivial inequalities: 8
% Fw subsumption resolutions: 32
% Fw demodulations: 10
% Bw demodulations: 7
% 
% Simple tautologies: 22
% Equational tautologies: 17
% Forward subsumptions: 206
% 
% Binary resolution: 15
% Forward superposition: 133
% Backward superposition: 89
% Self superposition: 29
% Equality factoring: 28
% Equality resolution: 3
% 
% Split clauses: 10
% Split components: 20
% SAT solver clauses: 30
% SAT solver unit clauses: 5
% SAT solver binary clauses: 15
% SAT solver learnt clauses: 2
% SAT solver learnt literals: 1
% 
% Sat splits: 10
% Sat splitting refutations: 8
% 
% TWLsolver clauses: 24
% TWLsolver calls for satisfiability: 13
% 
% Memory used [KB]: 767
% Time elapsed: 0.019 s
% ------------------------------
% ------------------------------
% Success in time 0.021 s
