Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.quantHeuristics
% (108777)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 444
% Passive clauses: 4049
% Generated clauses: 32954
% Final active clauses: 336
% Final passive clauses: 3352
% Input formulas: 69
% Initial clauses: 90
% 
% Duplicate literals: 401
% Trivial inequalities: 182
% Fw subsumption resolutions: 1313
% Fw demodulations: 4965
% Bw demodulations: 98
% 
% Simple tautologies: 194
% Equational tautologies: 37
% Forward subsumptions: 21758
% Fw demodulations to eq. taut.: 9
% Bw demodulations to eq. taut.: 1
% 
% Binary resolution: 236
% Factoring: 1
% Forward superposition: 13852
% Backward superposition: 11542
% Self superposition: 116
% Equality factoring: 62
% Equality resolution: 14
% 
% Split clauses: 123
% Split components: 246
% SAT solver clauses: 284
% SAT solver unit clauses: 12
% SAT solver binary clauses: 44
% 
% Sat splits: 123
% Sat splitting refutations: 4
% 
% TWLsolver clauses: 284
% TWLsolver calls for satisfiability: 77
% 
% Memory used [KB]: 23027
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 144 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.quantHeuristics
% (108792)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 274
% Passive clauses: 2337
% Generated clauses: 22075
% Final active clauses: 207
% Final passive clauses: 1596
% Input formulas: 69
% Initial clauses: 90
% 
% Duplicate literals: 194
% Trivial inequalities: 231
% Fw subsumption resolutions: 441
% Fw demodulations: 3634
% Bw demodulations: 528
% Condensations: 165
% 
% Simple tautologies: 37
% Equational tautologies: 24
% Forward subsumptions: 12117
% Fw demodulations to eq. taut.: 7
% 
% Binary resolution: 112
% Factoring: 1
% Forward superposition: 6203
% Backward superposition: 7907
% Self superposition: 103
% Equality factoring: 36
% Equality resolution: 17
% 
% Split clauses: 47
% Split components: 94
% SAT solver clauses: 2932
% SAT solver unit clauses: 136
% SAT solver binary clauses: 49
% 
% Sat splits: 47
% Sat splitting refutations: 5
% 
% TWLsolver clauses: 2932
% TWLsolver calls for satisfiability: 488
% 
% Memory used [KB]: 21875
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 137 next slice time: 103
lrs+11_2_br=off:cond=on:fde=none:gs=on:gsaa=full_model:lwlo=on:nwc=2:sas=minisat:stl=30:ssfp=100000:ssfq=1.4:smm=sco:ssnc=none:sp=occurrence:urr=on_98 on thm.quantHeuristics
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.quantHeuristics
% SZS output start Proof for thm.quantHeuristics
fof(f17054,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f173,f263,f262,f172,f265,f171,f267,f261,f381,f386,f429,f431,f430,f477,f482,f527,f967,f985,f983,f968,f986,f970,f989,f971,f992,f990,f972,f993,f973,f994,f978,f988,f997,f980,f1001,f999,f1170,f3341,f3347,f3345,f5762,f5823,f5821,f6110,f6174,f6172,f7227,f7228,f384,f7252,f7254,f7262,f7265,f7436,f7442,f8150,f8180,f8178,f14121,f14124,f14126,f14129,f14128,f14136,f14139,f14138,f14148,f14149,f14162,f14163,f14123,f15287,f15291,f15295,f15299,f15303,f15308,f15310,f15490,f15493,f15496,f15499,f15500,f15501,f15502,f15503,f15504,f15505,f15506,f15507,f15508,f15509,f15510,f15511,f15512,f15513,f15514,f15515,f15516,f15517,f15518,f15519,f15522,f15529,f15530,f15534,f15535,f15536,f15537,f15538,f15539,f15540,f15541,f15542,f15543,f15544,f15545,f15546,f15547,f15548,f15549,f15550,f15551,f15552,f15553,f15554,f15555,f15556,f15557,f15558,f15559,f15560,f15561,f15562,f15563,f15564,f15565,f15566,f15567,f15568,f15569,f15570,f15571,f15572,f15573,f15574,f15575,f15576,f15577,f15578,f15579,f15580,f15581,f15582,f15583,f15584,f15585,f15586,f15587,f15588,f15589,f15590,f15591,f15592,f15593,f15594,f15595,f15596,f15597,f15655,f15672,f15675,f15678,f15681,f15684,f15687,f15691,f15692,f15666,f15698,f15667,f15700,f15702,f15741,f15749,f15994,f15997,f15996,f17044])).
fof(f17044,plain,(
  $false | ($spl0 | $spl2 | $spl34)),
  inference(subsumption_resolution,[],[f17014,f16000])).
fof(f16000,plain,(
  ( ! [X2,X0,X1] : (s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),sK7(sK2,sK1,sK0))))))))) ) | ($spl0 | $spl2 | $spl34)),
  inference(unit_resulting_resolution,[],[f15772,f263])).
fof(f15772,plain,(
  s('type.num.num',sK1) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK7(sK2,sK1,sK0)))) | ($spl0 | $spl34)),
  inference(unit_resulting_resolution,[],[f15708,f3256])).
fof(f3256,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.num.num',X1) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK7(X2,X1,X0))))) ) | $spl34),
  inference(backward_demodulation,[],[f3255,f218])).
fof(f218,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num',X1) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK7(X2,X1,X0)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) )),
  inference(cnf_transformation,[],[f157])).
fof(f157,plain,(
  ! [X0,X1,X2] : ((s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | (s('type.num.num',X1) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK7(X2,X1,X0)))) & s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK8(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK9(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK10(X2,X1,X0)),s('type.list.list'(X0),sK7(X2,X1,X0)))))))))) & (! [X3,X4,X5,X6] : (s('type.num.num',X1) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))) | s('type.list.list'(X0),X2) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),X3)))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK7,sK8,sK9,sK10])],[f156])).
fof(f156,plain,(
  ! [X0,X1,X2] : ((s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | ? [X7,X8,X9,X10] : (s('type.num.num',X1) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X7))) & s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),X7))))))))) & (! [X3,X4,X5,X6] : (s('type.num.num',X1) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))) | s('type.list.list'(X0),X2) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),X3)))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))),
  inference(rectify,[],[f155])).
fof(f155,plain,(
  ! [X0,X1,X2] : ((s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | ? [X3,X4,X5,X6] : (s('type.num.num',X1) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))) & s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),X3))))))))) & (! [X3,X4,X5,X6] : (s('type.num.num',X1) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))) | s('type.list.list'(X0),X2) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),X3)))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))),
  inference(nnf_transformation,[],[f110])).
fof(f110,plain,(
  ! [X0,X1,X2] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) <=> ? [X3,X4,X5,X6] : (s('type.num.num',X1) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))) & s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),X3)))))))))),
  inference(flattening,[],[f109])).
fof(f109,plain,(
  ! [X0] : ! [X1,X2] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) <=> ? [X3,X4,X5,X6] : (s('type.num.num',X1) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))) & s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),X3)))))))))),
  inference(rectify,[],[f7])).
fof(f7,axiom,(
  ! [X6] : ! [X7,X8] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X8))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X7),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) <=> ? [X9,X10,X11,X12] : (s('type.num.num',X7) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X9))) & s('type.list.list'(X6),X8) = s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X10),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X11),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X12),s('type.list.list'(X6),X9)))))))))),
  file('thm.quantHeuristics.LIST_LENGTH_3|split|13','thm.quantHeuristics.LIST_LENGTH_3|split|12')).
fof(f3255,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl34),
  inference(forward_demodulation,[],[f3254,f177])).
fof(f177,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))),
  inference(cnf_transformation,[],[f59])).
fof(f59,axiom,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))),
  file('thm.quantHeuristics.LIST_LENGTH_3|split|13','thm.numeral.numeral_suc|split|0')).
fof(f3254,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl34),
  inference(forward_demodulation,[],[f3197,f202])).
fof(f202,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))) )),
  inference(cnf_transformation,[],[f96])).
fof(f96,plain,(
  ! [X0] : s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))),
  inference(rectify,[],[f31])).
fof(f31,axiom,(
  ! [X19] : s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X19))))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X19)))))),
  file('thm.quantHeuristics.LIST_LENGTH_3|split|13','thm.numeral.numeral_suc|split|2')).
fof(f3197,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl34),
  inference(superposition,[],[f199,f1965])).
fof(f1965,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl34),
  inference(forward_demodulation,[],[f1937,f197])).
fof(f197,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))) )),
  inference(cnf_transformation,[],[f91])).
fof(f91,plain,(
  ! [X0] : s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))),
  inference(rectify,[],[f70])).
fof(f70,axiom,(
  ! [X19] : s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X19))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X19)))))),
  file('thm.quantHeuristics.LIST_LENGTH_3|split|13','thm.numeral.numeral_suc|split|1')).
fof(f1937,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl34),
  inference(superposition,[],[f199,f1212])).
fof(f1212,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl34),
  inference(forward_demodulation,[],[f1172,f177])).
fof(f1172,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl34),
  inference(backward_demodulation,[],[f1171,f178])).
fof(f178,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  inference(cnf_transformation,[],[f50])).
fof(f50,axiom,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  file('thm.quantHeuristics.LIST_LENGTH_3|split|13','thm.numeral.numeral_distrib|split|13')).
fof(f1171,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.num.|48|_0') | $spl34),
  inference(backward_demodulation,[],[f997,f176])).
fof(f176,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))),
  inference(cnf_transformation,[],[f65])).
fof(f65,axiom,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))),
  file('thm.quantHeuristics.LIST_LENGTH_3|split|13','thm.prim_rec.PRE|split|0')).
fof(f199,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))) )),
  inference(cnf_transformation,[],[f93])).
fof(f93,plain,(
  ! [X0] : s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))),
  inference(rectify,[],[f52])).
fof(f52,axiom,(
  ! [X19] : s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X19))))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X19)))))),
  file('thm.quantHeuristics.LIST_LENGTH_3|split|13','thm.numeral.numeral_distrib|split|14')).
fof(f15708,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | ($spl0 | $spl34)),
  inference(forward_demodulation,[],[f261,f3255])).
fof(f17014,plain,(
  s('type.list.list'(sK0),sK2) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8(sK2,sK1,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9(sK2,sK1,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10(sK2,sK1,sK0)),s('type.list.list'(sK0),sK7(sK2,sK1,sK0)))))))) | ($spl0 | $spl34)),
  inference(unit_resulting_resolution,[],[f15708,f3257])).
fof(f3257,plain,(
  ( ! [X2,X0,X1] : (s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK8(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK9(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK10(X2,X1,X0)),s('type.list.list'(X0),sK7(X2,X1,X0)))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl34),
  inference(backward_demodulation,[],[f3255,f219])).
fof(f219,plain,(
  ( ! [X2,X0,X1] : (s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK8(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK9(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK10(X2,X1,X0)),s('type.list.list'(X0),sK7(X2,X1,X0)))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) )),
  inference(cnf_transformation,[],[f157])).
fof(f15996,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))))) | $spl81),
  inference(cnf_transformation,[],[f15996_D])).
fof(f15996_D,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))))) <=> ~$spl81),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl81])])).
fof(f15997,plain,(
  ( ! [X70] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X70),sK14('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),'const.list.NIL_0',X70))))) ) | $spl82),
  inference(cnf_transformation,[],[f15997_D])).
fof(f15997_D,plain,(
  ( ! [X70] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X70),sK14('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),'const.list.NIL_0',X70))))) ) <=> ~$spl82),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl82])])).
fof(f15994,plain,(
  ( ! [X70] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X70),sK14('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),'const.list.NIL_0',X70)))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2)))))) ) | ($spl0 | $spl6 | $spl34)),
  inference(forward_demodulation,[],[f15993,f15708])).
fof(f15993,plain,(
  ( ! [X70] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))))) | s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X70),sK14('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),'const.list.NIL_0',X70))))) ) | ($spl0 | $spl6 | $spl34)),
  inference(forward_demodulation,[],[f15922,f235])).
fof(f235,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f120])).
fof(f120,plain,(
  ! [X0,X1] : s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X0)))),
  inference(rectify,[],[f61])).
fof(f61,axiom,(
  ! [X22,X19] : s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X19),s('type.num.num',X22))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X22),s('type.num.num',X19)))),
  file('thm.quantHeuristics.LIST_LENGTH_3|split|13','thm.arithmetic.ADD_SYM')).
fof(f15922,plain,(
  ( ! [X70] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num',sK1))) | s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X70),sK14('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),'const.list.NIL_0',X70))))) ) | ($spl0 | $spl6 | $spl34)),
  inference(superposition,[],[f13364,f15708])).
fof(f13364,plain,(
  ( ! [X2,X1] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',sK1))) | s('type.num.num',X2) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),sK14('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),X2,'const.list.NIL_0',X1))))) ) | ($spl6 | $spl34)),
  inference(superposition,[],[f13209,f3368])).
fof(f3368,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.NIL_0')))) ) | $spl34),
  inference(forward_demodulation,[],[f3362,f217])).
fof(f217,plain,(
  ( ! [X2,X0,X1] : (s(X0,X1) = s(X0,'const.bool.COND_3'(s(bool,'T_0'),s(X0,X1),s(X0,X2)))) )),
  inference(cnf_transformation,[],[f108])).
fof(f108,plain,(
  ! [X0,X1,X2] : s(X0,X1) = s(X0,'const.bool.COND_3'(s(bool,'T_0'),s(X0,X1),s(X0,X2)))),
  inference(flattening,[],[f107])).
fof(f107,plain,(
  ! [X0] : ! [X1,X2] : s(X0,X1) = s(X0,'const.bool.COND_3'(s(bool,'T_0'),s(X0,X1),s(X0,X2)))),
  inference(rectify,[],[f67])).
fof(f67,axiom,(
  ! [X6] : ! [X17,X18] : s(X6,X17) = s(X6,'const.bool.COND_3'(s(bool,'T_0'),s(X6,X17),s(X6,X18)))),
  file('thm.quantHeuristics.LIST_LENGTH_3|split|13','thm.bool.COND_CLAUSES|split|0')).
fof(f3362,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X0),'const.list.NIL_0'),s('type.list.list'(X0),X1)))))) ) | $spl34),
  inference(unit_resulting_resolution,[],[f217,f1191])).
fof(f1191,plain,(
  ( ! [X0,X1] : (s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),X1) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))) ) | $spl34),
  inference(backward_demodulation,[],[f1171,f216])).
fof(f216,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) | s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),X1)) )),
  inference(cnf_transformation,[],[f154])).
fof(f154,plain,(
  ! [X0,X1] : ((s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) | s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1)) & (s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),X1) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))))),
  inference(nnf_transformation,[],[f106])).
fof(f106,plain,(
  ! [X0,X1] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) <=> s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1))),
  inference(flattening,[],[f105])).
fof(f105,plain,(
  ! [X0] : ! [X1] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) <=> s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1))),
  inference(rectify,[],[f8])).
fof(f8,axiom,(
  ! [X6] : ! [X8] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X8))) <=> s('type.list.list'(X6),'const.list.NIL_0') = s('type.list.list'(X6),X8))),
  file('thm.quantHeuristics.LIST_LENGTH_3|split|13','thm.list.LENGTH_NIL')).
fof(f13209,plain,(
  ( ! [X33,X34,X32] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X32),X33))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X34),s('type.num.num',sK1))) | s('type.num.num',X34) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X32),sK14('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),X34,X33,X32))))) ) | $spl6),
  inference(superposition,[],[f228,f267])).
fof(f228,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X3))) | s('type.num.num',X2) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK14(X3,X2,X1,X0))))) )),
  inference(cnf_transformation,[],[f167])).
fof(f167,plain,(
  ! [X0,X1,X2,X3] : ((s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X3))) | (s('type.num.num',X2) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK14(X3,X2,X1,X0)))) & s('type.num.num',X3) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK15(X3,X2,X1,X0)))) & s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),sK14(X3,X2,X1,X0)),s('type.list.list'(X0),sK15(X3,X2,X1,X0)))))) & (! [X4,X5] : (s('type.num.num',X2) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X4))) | s('type.num.num',X3) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X5))) | s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X4),s('type.list.list'(X0),X5)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X3)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK14,sK15])],[f166])).
fof(f166,plain,(
  ! [X0,X1,X2,X3] : ((s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X3))) | ? [X6,X7] : (s('type.num.num',X2) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X6))) & s('type.num.num',X3) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X7))) & s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X6),s('type.list.list'(X0),X7))))) & (! [X4,X5] : (s('type.num.num',X2) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X4))) | s('type.num.num',X3) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X5))) | s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X4),s('type.list.list'(X0),X5)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X3)))))),
  inference(rectify,[],[f165])).
fof(f165,plain,(
  ! [X0,X1,X2,X3] : ((s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X3))) | ? [X4,X5] : (s('type.num.num',X2) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X4))) & s('type.num.num',X3) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X5))) & s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X4),s('type.list.list'(X0),X5))))) & (! [X4,X5] : (s('type.num.num',X2) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X4))) | s('type.num.num',X3) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X5))) | s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X4),s('type.list.list'(X0),X5)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X3)))))),
  inference(nnf_transformation,[],[f116])).
fof(f116,plain,(
  ! [X0,X1,X2,X3] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X3))) <=> ? [X4,X5] : (s('type.num.num',X2) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X4))) & s('type.num.num',X3) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X5))) & s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X4),s('type.list.list'(X0),X5)))))),
  inference(flattening,[],[f115])).
fof(f115,plain,(
  ! [X0] : ! [X1,X2,X3] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X3))) <=> ? [X4,X5] : (s('type.num.num',X2) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X4))) & s('type.num.num',X3) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X5))) & s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X4),s('type.list.list'(X0),X5)))))),
  inference(rectify,[],[f9])).
fof(f9,axiom,(
  ! [X6] : ! [X8,X13,X14] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X8))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X13),s('type.num.num',X14))) <=> ? [X15,X16] : (s('type.num.num',X13) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X15))) & s('type.num.num',X14) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X16))) & s('type.list.list'(X6),X8) = s('type.list.list'(X6),'const.list.APPEND_2'(s('type.list.list'(X6),X15),s('type.list.list'(X6),X16)))))),
  file('thm.quantHeuristics.LIST_LENGTH_3|split|13','thm.list.LENGTH_EQ_SUM')).
fof(f15749,plain,(
  $false | ($spl2 | $spl4 | $spl6)),
  inference(subsumption_resolution,[],[f15740,f267])).
fof(f15740,plain,(
  s('type.num.num',sK1) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3))) | ($spl2 | $spl4)),
  inference(unit_resulting_resolution,[],[f265,f263])).
fof(f15741,plain,(
  $false | ($spl2 | $spl4 | $spl6)),
  inference(unit_resulting_resolution,[],[f267,f265,f263])).
fof(f15702,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK14('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),'const.num.|48|_0','const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),sK3)))))),sK0)))) | $spl78),
  inference(cnf_transformation,[],[f15702_D])).
fof(f15702_D,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK14('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),'const.num.|48|_0','const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),sK3)))))),sK0)))) <=> ~$spl78),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl78])])).
fof(f15700,plain,(
  s('type.num.num',sK1) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) | $spl77),
  inference(cnf_transformation,[],[f15700_D])).
fof(f15700_D,plain,(
  s('type.num.num',sK1) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) <=> ~$spl77),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl77])])).
fof(f15667,plain,(
  s('type.num.num',sK1) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK14('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),'const.num.|48|_0','const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),sK3)))))),sK0)))) | ($spl4 | $spl6 | $spl34)),
  inference(superposition,[],[f13420,f265])).
fof(f13420,plain,(
  ( ! [X30,X29] : (s('type.num.num',sK1) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X29),X30))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X29),sK14('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),'const.num.|48|_0',X30,X29))))) ) | ($spl6 | $spl34)),
  inference(forward_demodulation,[],[f13419,f1171])).
fof(f13419,plain,(
  ( ! [X30,X29] : (s('type.num.num',sK1) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X29),X30))) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X29),sK14('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),'const.num.|48|_0',X30,X29))))) ) | ($spl6 | $spl34)),
  inference(forward_demodulation,[],[f13375,f2283])).
fof(f2283,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X0)))) ) | $spl34),
  inference(superposition,[],[f235,f1178])).
fof(f1178,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl34),
  inference(backward_demodulation,[],[f1171,f187])).
fof(f187,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) )),
  inference(cnf_transformation,[],[f81])).
fof(f81,plain,(
  ! [X0] : s('type.num.num',X0) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))),
  inference(rectify,[],[f55])).
fof(f55,axiom,(
  ! [X19] : s('type.num.num',X19) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X19),s('type.num.num','const.num.|48|_0')))),
  file('thm.quantHeuristics.LIST_LENGTH_3|split|13','thm.numeral.numeral_distrib|split|1')).
fof(f13375,plain,(
  ( ! [X30,X29] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X29),X30))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',sK1))) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X29),sK14('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),'const.num.|48|_0',X30,X29))))) ) | ($spl6 | $spl34)),
  inference(superposition,[],[f13209,f1171])).
fof(f15698,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK14('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),'const.arithmetic.ZERO_0','const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),sK3)))))),sK0)))) | $spl74),
  inference(cnf_transformation,[],[f15698_D])).
fof(f15698_D,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK14('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),'const.arithmetic.ZERO_0','const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),sK3)))))),sK0)))) <=> ~$spl74),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl74])])).
fof(f15666,plain,(
  s('type.num.num',sK1) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK14('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),'const.arithmetic.ZERO_0','const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),sK3)))))),sK0)))) | ($spl4 | $spl6 | $spl34)),
  inference(superposition,[],[f13402,f265])).
fof(f13402,plain,(
  ( ! [X6,X7] : (s('type.num.num',sK1) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X7))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),sK14('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),'const.arithmetic.ZERO_0',X7,X6))))) ) | ($spl6 | $spl34)),
  inference(superposition,[],[f13209,f2283])).
fof(f15692,plain,(
  $false | ($spl1 | $spl4 | $spl6 | $spl34)),
  inference(subsumption_resolution,[],[f15647,f3259])).
fof(f3259,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | ($spl1 | $spl34)),
  inference(backward_demodulation,[],[f3255,f262])).
fof(f15647,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | ($spl4 | $spl6 | $spl34)),
  inference(unit_resulting_resolution,[],[f267,f265,f3258])).
fof(f3258,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.num.num',X1) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))) | s('type.list.list'(X0),X2) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),X3))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl34),
  inference(backward_demodulation,[],[f3255,f220])).
fof(f220,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(X0),X2) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),X3))))))) | s('type.num.num',X1) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3)))) )),
  inference(cnf_transformation,[],[f157])).
fof(f15691,plain,(
  $false | ($spl1 | $spl4 | $spl6 | $spl34)),
  inference(subsumption_resolution,[],[f15690,f3259])).
fof(f15690,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | ($spl4 | $spl6 | $spl34)),
  inference(forward_demodulation,[],[f15689,f267])).
fof(f15689,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | ($spl4 | $spl34)),
  inference(forward_demodulation,[],[f15688,f2283])).
fof(f15688,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | ($spl4 | $spl34)),
  inference(forward_demodulation,[],[f15648,f235])).
fof(f15648,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3))),s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | ($spl4 | $spl34)),
  inference(unit_resulting_resolution,[],[f1178,f265,f3258])).
fof(f15687,plain,(
  $false | ($spl1 | $spl4 | $spl6 | $spl34)),
  inference(subsumption_resolution,[],[f15686,f3259])).
fof(f15686,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | ($spl4 | $spl6 | $spl34)),
  inference(forward_demodulation,[],[f15685,f267])).
fof(f15685,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | ($spl4 | $spl34)),
  inference(forward_demodulation,[],[f15649,f2283])).
fof(f15649,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | ($spl4 | $spl34)),
  inference(unit_resulting_resolution,[],[f2283,f265,f3258])).
fof(f15684,plain,(
  $false | ($spl1 | $spl4 | $spl6 | $spl34)),
  inference(subsumption_resolution,[],[f15683,f3259])).
fof(f15683,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | ($spl4 | $spl6 | $spl34)),
  inference(forward_demodulation,[],[f15682,f267])).
fof(f15682,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | ($spl4 | $spl34)),
  inference(forward_demodulation,[],[f15650,f1177])).
fof(f1177,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl34),
  inference(backward_demodulation,[],[f1171,f186])).
fof(f186,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) )),
  inference(cnf_transformation,[],[f80])).
fof(f80,plain,(
  ! [X0] : s('type.num.num',X0) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))),
  inference(rectify,[],[f28])).
fof(f28,axiom,(
  ! [X19] : s('type.num.num',X19) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X19),s('type.num.num','const.num.|48|_0')))),
  file('thm.quantHeuristics.LIST_LENGTH_3|split|13','thm.numeral.numeral_distrib|split|7')).
fof(f15650,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3))),s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | ($spl4 | $spl34)),
  inference(unit_resulting_resolution,[],[f1177,f265,f3258])).
fof(f15681,plain,(
  $false | ($spl1 | $spl4 | $spl6 | $spl34)),
  inference(subsumption_resolution,[],[f15680,f3259])).
fof(f15680,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | ($spl4 | $spl6 | $spl34)),
  inference(forward_demodulation,[],[f15679,f267])).
fof(f15679,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | ($spl4 | $spl34)),
  inference(forward_demodulation,[],[f15651,f12222])).
fof(f12222,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X0)))) ) | $spl34),
  inference(unit_resulting_resolution,[],[f12138,f255])).
fof(f255,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))) | s('type.num.num',X0) = s('type.num.num',X1)) )),
  inference(cnf_transformation,[],[f168])).
fof(f168,plain,(
  ! [X0,X1] : ((s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))) | s('type.num.num',X0) = s('type.num.num',X1)) & (s('type.num.num',X0) != s('type.num.num',X1) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))),
  inference(nnf_transformation,[],[f137])).
fof(f137,plain,(
  ! [X0,X1] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))) <=> s('type.num.num',X0) = s('type.num.num',X1))),
  inference(rectify,[],[f47])).
fof(f47,axiom,(
  ! [X19,X22] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X19))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X22))) <=> s('type.num.num',X19) = s('type.num.num',X22))),
  file('thm.quantHeuristics.LIST_LENGTH_3|split|13','thm.numeral.numeral_distrib|split|19')).
fof(f12138,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X0)))))) ) | $spl34),
  inference(forward_demodulation,[],[f12137,f2283])).
fof(f12137,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X0))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))) ) | $spl34),
  inference(forward_demodulation,[],[f11982,f2283])).
fof(f11982,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X0)))))))) ) | $spl34),
  inference(superposition,[],[f247,f1208])).
fof(f1208,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | $spl34),
  inference(backward_demodulation,[],[f1171,f1024])).
fof(f1024,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')))),
  inference(forward_demodulation,[],[f1006,f217])).
fof(f1006,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.bool.COND_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X0)))))) )),
  inference(unit_resulting_resolution,[],[f217,f210])).
fof(f210,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X0) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f151])).
fof(f151,plain,(
  ! [X0] : ((s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X0)) & (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X0) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))),
  inference(nnf_transformation,[],[f102])).
fof(f102,plain,(
  ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) <=> s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X0))),
  inference(rectify,[],[f69])).
fof(f69,axiom,(
  ! [X19] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X19))) <=> s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X19))),
  file('thm.quantHeuristics.LIST_LENGTH_3|split|13','thm.numeral.numeral_distrib|split|17')).
fof(f247,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))) )),
  inference(cnf_transformation,[],[f132])).
fof(f132,plain,(
  ! [X0,X1] : s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))),
  inference(rectify,[],[f30])).
fof(f30,axiom,(
  ! [X19,X22] : s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X19),s('type.num.num',X22))))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X19))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X22)))))),
  file('thm.quantHeuristics.LIST_LENGTH_3|split|13','thm.numeral.numeral_distrib|split|2')).
fof(f15651,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | ($spl4 | $spl34)),
  inference(unit_resulting_resolution,[],[f12222,f265,f3258])).
fof(f15678,plain,(
  $false | ($spl1 | $spl4 | $spl6 | $spl34)),
  inference(subsumption_resolution,[],[f15677,f3259])).
fof(f15677,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | ($spl4 | $spl6 | $spl34)),
  inference(forward_demodulation,[],[f15676,f267])).
fof(f15676,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | ($spl4 | $spl34)),
  inference(forward_demodulation,[],[f15652,f196])).
fof(f196,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X0),s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(cnf_transformation,[],[f90])).
fof(f90,plain,(
  ! [X0] : s('type.num.num',X0) = s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X0),s('type.num.num','const.arithmetic.ZERO_0')))),
  inference(rectify,[],[f64])).
fof(f64,axiom,(
  ! [X19] : s('type.num.num',X19) = s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X19),s('type.num.num','const.arithmetic.ZERO_0')))),
  file('thm.quantHeuristics.LIST_LENGTH_3|split|13','thm.numeral.numeral_22_prove_ltb|split|1')).
fof(f15652,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3))),s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | ($spl4 | $spl34)),
  inference(unit_resulting_resolution,[],[f196,f265,f3258])).
fof(f15675,plain,(
  $false | ($spl1 | $spl4 | $spl6 | $spl34)),
  inference(subsumption_resolution,[],[f15674,f3259])).
fof(f15674,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | ($spl4 | $spl6 | $spl34)),
  inference(forward_demodulation,[],[f15673,f267])).
fof(f15673,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | ($spl4 | $spl34)),
  inference(forward_demodulation,[],[f15653,f217])).
fof(f15653,plain,(
  ( ! [X0] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.bool.COND_3'(s(bool,'T_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3))),s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | ($spl4 | $spl34)),
  inference(unit_resulting_resolution,[],[f217,f265,f3258])).
fof(f15672,plain,(
  $false | ($spl1 | $spl4 | $spl6 | $spl34)),
  inference(subsumption_resolution,[],[f15654,f267])).
fof(f15654,plain,(
  s('type.num.num',sK1) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3))) | ($spl1 | $spl4 | $spl34)),
  inference(unit_resulting_resolution,[],[f3259,f265,f3258])).
fof(f15655,plain,(
  $false | ($spl1 | $spl4 | $spl6 | $spl34)),
  inference(unit_resulting_resolution,[],[f267,f3259,f265,f3258])).
fof(f15597,plain,(
  $false | ($spl43 | $spl48)),
  inference(global_subsumption,[],[f3347,f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f428,f429,f268,f194,f235,f231,f230,f229,f228,f200,f256,f255,f247,f246,f245,f244,f199,f198,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f433,f406,f250,f249,f207,f191,f184,f183,f179,f691,f733,f854,f966,f968,f969,f970,f971,f972,f973,f975,f976,f978,f979,f980,f1024,f1143,f1153,f1165,f2809,f2823,f2826,f2830,f3082,f3089,f3374,f3421,f5542,f5640,f5932,f6289,f4727,f4254,f2243,f241,f238,f234,f193,f692,f3568,f3563,f3504,f3570,f3564,f5997,f5605,f6355,f3565,f3562,f3567,f3566,f6796,f3545,f4280,f4747,f3538,f3530,f3484,f3532,f3531,f6759,f6758,f5367,f3485,f7226,f7225,f7219,f7217,f7216,f7206,f7201,f5370,f5369,f3529,f3482,f226,f224,f223,f222,f221,f195,f734,f3533,f7194,f3624,f3623,f3622,f5083,f5261,f3621,f5053,f5231,f7212,f7200,f7198,f7193,f7192,f7191,f7190,f5344,f4991,f4974,f4867,f4851,f4551,f4535,f4454,f4438,f4109,f4091,f3675,f3653,f3537,f2128,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11603,f11604,f11570,f11571,f11572,f11573,f11575,f11577,f11579,f11582,f11588,f11593,f11597,f11598,f11599,f12952,f13160,f13164,f13170,f13259,f13269,f13274,f13276,f13277,f13278,f13279,f13280,f13283,f13286,f13287,f13205,f13215,f13221,f13224,f13226,f13227,f13228,f13229,f13230,f13232,f13234,f13235,f13237,f13468,f13474,f13484,f13490,f13493,f13495,f13496,f13497,f13498,f13499,f13501,f13503,f13504,f13509,f13576,f13586,f13591,f13593,f13594,f13595,f13596,f13597,f13600,f13603,f13604,f13541,f13633,f13637,f14059,f13949,f13950,f14060,f13981,f14079,f14190,f14391,f14278,f14279,f14392,f14312,f14413,f14631,f14516,f14517,f14632,f14552,f14653,f14825,f14826,f14833,f14834,f14957,f14941,f14946,f14951,f14953,f14954,f6172,f15489,f15492,f15495,f15498,f15376,f15377,f15379,f15380,f15383,f15384,f15386,f15387,f15388,f15389,f15390,f15391,f15392,f15393,f15395,f15396,f15399,f15406,f15407,f15411,f15412,f15414,f15487,f15416,f15417,f15419,f15420,f15421,f15422,f15424,f15426,f15427,f15428,f15430,f15432,f15434,f15435,f15486,f15485,f15438,f15439,f15441,f15442,f15443,f15444,f15446,f15447,f15449,f15450,f15453,f15454,f15456,f15457,f15484])).
fof(f15484,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2)))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0'))))) ) | $spl48),
  inference(condensation,[],[f15458])).
fof(f15458,plain,(
  ( ! [X158,X159,X157,X155] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,X155)) | ~p(s(bool,happ(s(fun(X157,bool),X158),s(X157,X159))))) ) | $spl48),
  inference(backward_demodulation,[],[f6172,f11599])).
fof(f15457,plain,(
  ( ! [X154,X152,X151,X153,X150] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X151),s('type.num.num',X150)))) | ~p(s(bool,happ(s(fun(X152,bool),X153),s(X152,X154))))) ) | $spl48),
  inference(backward_demodulation,[],[f6172,f11598])).
fof(f15456,plain,(
  ( ! [X146,X149,X147,X145,X148] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X146),s('type.num.num',X145)))) | ~p(s(bool,happ(s(fun(X147,bool),X148),s(X147,X149))))) ) | $spl48),
  inference(backward_demodulation,[],[f6172,f11597])).
fof(f15454,plain,(
  ( ! [X132,X130,X133,X131,X129] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X129),s('type.num.num',X130)))) | ~p(s(bool,happ(s(fun(X131,bool),X132),s(X131,X133))))) ) | $spl48),
  inference(backward_demodulation,[],[f6172,f11593])).
fof(f15453,plain,(
  ( ! [X111,X114,X112,X110,X113] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X110),s('type.num.num',X111)))) | ~p(s(bool,happ(s(fun(X112,bool),X113),s(X112,X114))))) ) | $spl48),
  inference(backward_demodulation,[],[f6172,f11588])).
fof(f15450,plain,(
  ( ! [X90,X88,X91,X89] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,'const.arithmetic.ODD_1'(s('type.num.num',X88)))) | ~p(s(bool,happ(s(fun(X89,bool),X90),s(X89,X91))))) ) | $spl48),
  inference(backward_demodulation,[],[f6172,f11582])).
fof(f15449,plain,(
  ( ! [X80,X78,X76,X79,X77] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X77),s('type.num.num',X76)))) | ~p(s(bool,happ(s(fun(X78,bool),X79),s(X78,X80))))) ) | $spl48),
  inference(backward_demodulation,[],[f6172,f11579])).
fof(f15447,plain,(
  ( ! [X70,X68,X71,X69,X67] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X68),s('type.num.num',X67)))) | ~p(s(bool,happ(s(fun(X69,bool),X70),s(X69,X71))))) ) | $spl48),
  inference(backward_demodulation,[],[f6172,f11577])).
fof(f15446,plain,(
  ( ! [X61,X59,X62,X60] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X59)))) | ~p(s(bool,happ(s(fun(X60,bool),X61),s(X60,X62))))) ) | $spl48),
  inference(backward_demodulation,[],[f6172,f11575])).
fof(f15444,plain,(
  ( ! [X54,X52,X55,X53,X51] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X51),s('type.num.num',X52)))) | ~p(s(bool,happ(s(fun(X53,bool),X54),s(X53,X55))))) ) | $spl48),
  inference(backward_demodulation,[],[f6172,f11573])).
fof(f15443,plain,(
  ( ! [X47,X50,X48,X46,X49] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X46),s('type.num.num',X47)))) | ~p(s(bool,happ(s(fun(X48,bool),X49),s(X48,X50))))) ) | $spl48),
  inference(backward_demodulation,[],[f6172,f11572])).
fof(f15442,plain,(
  ( ! [X45,X43,X41,X44,X42] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X41),s('type.num.num',X42)))) | ~p(s(bool,happ(s(fun(X43,bool),X44),s(X43,X45))))) ) | $spl48),
  inference(backward_demodulation,[],[f6172,f11571])).
fof(f15441,plain,(
  ( ! [X39,X37,X38,X36,X40] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X36),s('type.num.num',X37)))) | ~p(s(bool,happ(s(fun(X38,bool),X39),s(X38,X40))))) ) | $spl48),
  inference(backward_demodulation,[],[f6172,f11570])).
fof(f15439,plain,(
  ( ! [X30,X31,X29] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,happ(s(fun(X29,bool),X30),s(X29,X31))))) ) | $spl48),
  inference(backward_demodulation,[],[f6172,f11604])).
fof(f15438,plain,(
  ( ! [X26,X27,X25] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,happ(s(fun(X25,bool),X26),s(X25,X27))))) ) | $spl48),
  inference(backward_demodulation,[],[f6172,f11603])).
fof(f15485,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2)))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0'))))) ) | $spl48),
  inference(condensation,[],[f15437])).
fof(f15437,plain,(
  ( ! [X4,X2,X0,X1] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,X2)) | ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X4))))) ) | $spl48),
  inference(backward_demodulation,[],[f6172,f226])).
fof(f15486,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2)))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0'))))) ) | $spl48),
  inference(condensation,[],[f15436])).
fof(f15436,plain,(
  ( ! [X167,X165,X163,X166] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,X163)) | ~p(s(bool,happ(s(fun(X165,bool),X166),s(X165,X167))))) ) | $spl48),
  inference(backward_demodulation,[],[f6172,f7219])).
fof(f15435,plain,(
  ( ! [X156,X154,X157,X155,X153] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X154),s('type.num.num',X153)))) | ~p(s(bool,happ(s(fun(X155,bool),X156),s(X155,X157))))) ) | $spl48),
  inference(backward_demodulation,[],[f6172,f7217])).
fof(f15434,plain,(
  ( ! [X152,X151,X149,X150,X148] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X149),s('type.num.num',X148)))) | ~p(s(bool,happ(s(fun(X150,bool),X151),s(X150,X152))))) ) | $spl48),
  inference(backward_demodulation,[],[f6172,f7216])).
fof(f15432,plain,(
  ( ! [X134,X132,X136,X135,X133] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X132),s('type.num.num',X133)))) | ~p(s(bool,happ(s(fun(X134,bool),X135),s(X134,X136))))) ) | $spl48),
  inference(backward_demodulation,[],[f6172,f7212])).
fof(f15430,plain,(
  ( ! [X111,X109,X112,X110,X108] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X108),s('type.num.num',X109)))) | ~p(s(bool,happ(s(fun(X110,bool),X111),s(X110,X112))))) ) | $spl48),
  inference(backward_demodulation,[],[f6172,f7206])).
fof(f15428,plain,(
  ( ! [X92,X90,X93,X91] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,'const.arithmetic.ODD_1'(s('type.num.num',X90)))) | ~p(s(bool,happ(s(fun(X91,bool),X92),s(X91,X93))))) ) | $spl48),
  inference(backward_demodulation,[],[f6172,f7201])).
fof(f15427,plain,(
  ( ! [X80,X78,X76,X79,X77] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X77),s('type.num.num',X76)))) | ~p(s(bool,happ(s(fun(X78,bool),X79),s(X78,X80))))) ) | $spl48),
  inference(backward_demodulation,[],[f6172,f7198])).
fof(f15426,plain,(
  ( ! [X88,X87,X85,X89,X86] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X86),s('type.num.num',X85)))) | ~p(s(bool,happ(s(fun(X87,bool),X88),s(X87,X89))))) ) | $spl48),
  inference(backward_demodulation,[],[f6172,f7200])).
fof(f15424,plain,(
  ( ! [X61,X64,X62,X63] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X61)))) | ~p(s(bool,happ(s(fun(X62,bool),X63),s(X62,X64))))) ) | $spl48),
  inference(backward_demodulation,[],[f6172,f7194])).
fof(f15422,plain,(
  ( ! [X54,X52,X55,X53,X51] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X51),s('type.num.num',X52)))) | ~p(s(bool,happ(s(fun(X53,bool),X54),s(X53,X55))))) ) | $spl48),
  inference(backward_demodulation,[],[f6172,f7192])).
fof(f15421,plain,(
  ( ! [X59,X57,X60,X58,X56] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X56),s('type.num.num',X57)))) | ~p(s(bool,happ(s(fun(X58,bool),X59),s(X58,X60))))) ) | $spl48),
  inference(backward_demodulation,[],[f6172,f7193])).
fof(f15420,plain,(
  ( ! [X47,X50,X48,X46,X49] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X46),s('type.num.num',X47)))) | ~p(s(bool,happ(s(fun(X48,bool),X49),s(X48,X50))))) ) | $spl48),
  inference(backward_demodulation,[],[f6172,f7191])).
fof(f15419,plain,(
  ( ! [X45,X43,X41,X44,X42] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X41),s('type.num.num',X42)))) | ~p(s(bool,happ(s(fun(X43,bool),X44),s(X43,X45))))) ) | $spl48),
  inference(backward_demodulation,[],[f6172,f7190])).
fof(f15417,plain,(
  ( ! [X30,X31,X32] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,happ(s(fun(X30,bool),X31),s(X30,X32))))) ) | $spl48),
  inference(backward_demodulation,[],[f6172,f7225])).
fof(f15416,plain,(
  ( ! [X35,X36,X34] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,happ(s(fun(X34,bool),X35),s(X34,X36))))) ) | $spl48),
  inference(backward_demodulation,[],[f6172,f7226])).
fof(f15487,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2)))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0'))))) ) | $spl48),
  inference(condensation,[],[f15415])).
fof(f15415,plain,(
  ( ! [X6,X2,X0,X1] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,X2)) | ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X6))))) ) | $spl48),
  inference(backward_demodulation,[],[f6172,f224])).
fof(f15414,plain,(
  ( ! [X0,X3,X1] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3))))) ) | $spl48),
  inference(backward_demodulation,[],[f6172,f5369])).
fof(f15412,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2))))) ) | $spl48),
  inference(backward_demodulation,[],[f6172,f223])).
fof(f15411,plain,(
  ( ! [X33,X31,X32] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | s(bool,'const.arithmetic.<=_2'(s('type.num.num',X32),s('type.num.num',X31))) = s(bool,sK11('const.arithmetic.>=_2'(s('type.num.num',X31),s('type.num.num',X32)),X33,bool))) ) | $spl48),
  inference(backward_demodulation,[],[f6172,f3545])).
fof(f15407,plain,(
  ( ! [X23,X22] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | s(bool,'const.arithmetic.ODD_1'(s('type.num.num',X22))) = s(bool,sK11('const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X22)))),X23,bool))) ) | $spl48),
  inference(backward_demodulation,[],[f6172,f3538])).
fof(f15406,plain,(
  ( ! [X14,X15] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X14))) = s(bool,sK11('const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X14)))),X15,bool))) ) | $spl48),
  inference(backward_demodulation,[],[f6172,f3533])).
fof(f15399,plain,(
  ( ! [X21,X19,X20] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | s(bool,'const.prim_rec.<_2'(s('type.num.num',X20),s('type.num.num',X19))) = s(bool,sK11('const.arithmetic.>_2'(s('type.num.num',X19),s('type.num.num',X20)),X21,bool))) ) | $spl48),
  inference(backward_demodulation,[],[f6172,f3537])).
fof(f15396,plain,(
  ( ! [X294,X296,X295] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X294),s('type.num.num',X295))))) = s('type.num.num',sK11('const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X294))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X295)))),X296,'type.num.num'))) ) | $spl48),
  inference(backward_demodulation,[],[f6172,f14079])).
fof(f15395,plain,(
  ( ! [X78,X79] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X78))) = s('type.num.num',sK11('const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X78))),s('type.num.num','const.arithmetic.ZERO_0')),X79,'type.num.num'))) ) | $spl48),
  inference(backward_demodulation,[],[f6172,f3568])).
fof(f15393,plain,(
  ( ! [X68,X67] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X67))) = s('type.num.num',sK11('const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X67)))),X68,'type.num.num'))) ) | $spl48),
  inference(backward_demodulation,[],[f6172,f3563])).
fof(f15392,plain,(
  ( ! [X39,X41,X40] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X39),s('type.num.num',X40))) = s('type.num.num',sK11('const.arithmetic.+_2'(s('type.num.num',X39),s('type.num.num',X40)),X41,'type.num.num'))) ) | $spl48),
  inference(backward_demodulation,[],[f6172,f3504])).
fof(f15391,plain,(
  ( ! [X134,X132,X135,X133] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | p(s(bool,happ(s(fun('type.num.num',bool),X134),s('type.num.num',X135)))) | s('type.num.num',X135) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X132),s('type.num.num',X133)))) ) | $spl48),
  inference(backward_demodulation,[],[f6172,f6796])).
fof(f15390,plain,(
  ( ! [X81,X82] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X81))))) = s('type.num.num',sK11('const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X81)))),X82,'type.num.num'))) ) | $spl48),
  inference(backward_demodulation,[],[f6172,f3570])).
fof(f15389,plain,(
  ( ! [X70,X69] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X69))))) = s('type.num.num',sK11('const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X69)))),X70,'type.num.num'))) ) | $spl48),
  inference(backward_demodulation,[],[f6172,f3564])).
fof(f15388,plain,(
  ( ! [X198,X199,X197] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X197),s('type.num.num',X198))))) = s('type.num.num',sK11('const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X197))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X198)))),X199,'type.num.num'))) ) | $spl48),
  inference(backward_demodulation,[],[f6172,f5997])).
fof(f15387,plain,(
  ( ! [X191,X192,X193] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X191),s('type.num.num',X192))))) = s('type.num.num',sK11('const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X191))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X192)))),X193,'type.num.num'))) ) | $spl48),
  inference(backward_demodulation,[],[f6172,f5605])).
fof(f15386,plain,(
  ( ! [X206,X204,X205] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X204),s('type.num.num',X205))))) = s('type.num.num',sK11('const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X204))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X205)))),X206,'type.num.num'))) ) | $spl48),
  inference(backward_demodulation,[],[f6172,f6355])).
fof(f15384,plain,(
  ( ! [X304,X303,X305] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X303),s('type.num.num',X304))))) = s('type.num.num',sK11('const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X303))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X304)))),X305,'type.num.num'))) ) | $spl48),
  inference(backward_demodulation,[],[f6172,f14413])).
fof(f15383,plain,(
  ( ! [X310,X309,X311] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X309),s('type.num.num',X310))))) = s('type.num.num',sK11('const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X309))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X310)))),X311,'type.num.num'))) ) | $spl48),
  inference(backward_demodulation,[],[f6172,f14653])).
fof(f15380,plain,(
  ( ! [X66] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num',sK11('const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),X66,'type.num.num'))) ) | $spl48),
  inference(backward_demodulation,[],[f6172,f3562])).
fof(f15379,plain,(
  ( ! [X72,X71] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X71))))) = s('type.num.num',sK11('const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X71)))),X72,'type.num.num'))) ) | $spl48),
  inference(backward_demodulation,[],[f6172,f3565])).
fof(f15377,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X0))))) ) | $spl48),
  inference(backward_demodulation,[],[f6172,f258])).
fof(f15376,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X0))))) ) | $spl48),
  inference(backward_demodulation,[],[f6172,f257])).
fof(f15498,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | $spl48),
  inference(duplicate_literal_removal,[],[f15497])).
fof(f15497,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | $spl48),
  inference(forward_demodulation,[],[f15375,f6172])).
fof(f15375,plain,(
  ( ! [X6,X7,X5] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X5),s('type.num.num',X6))),s('type.num.num',X7))))) ) | $spl48),
  inference(backward_demodulation,[],[f6172,f5083])).
fof(f15495,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | $spl48),
  inference(duplicate_literal_removal,[],[f15494])).
fof(f15494,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | $spl48),
  inference(forward_demodulation,[],[f15374,f6172])).
fof(f15374,plain,(
  ( ! [X6,X7,X5] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X5),s('type.num.num',X6))),s('type.num.num',X7))))) ) | $spl48),
  inference(backward_demodulation,[],[f6172,f5261])).
fof(f15492,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | $spl48),
  inference(duplicate_literal_removal,[],[f15491])).
fof(f15491,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | $spl48),
  inference(forward_demodulation,[],[f15373,f6172])).
fof(f15373,plain,(
  ( ! [X6,X7,X5] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num',X5))))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X7))))))) ) | $spl48),
  inference(backward_demodulation,[],[f6172,f5053])).
fof(f15489,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | $spl48),
  inference(duplicate_literal_removal,[],[f15488])).
fof(f15488,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | $spl48),
  inference(forward_demodulation,[],[f15372,f6172])).
fof(f15372,plain,(
  ( ! [X6,X7,X5] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num',X5))))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X7))))))) ) | $spl48),
  inference(backward_demodulation,[],[f6172,f5231])).
fof(f14954,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X3),s('type.num.num',X4))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),X2))))) | s('type.num.num',X4) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))) | s('type.num.num',X3) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))) )),
  inference(equality_resolution,[],[f231])).
fof(f14953,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.list.list'(X0),X3) != s('type.list.list'(X0),X4) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X4))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X5),s('type.num.num',X6))) | s('type.num.num',X6) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK15(X1,X2,X3,X0)))) | s('type.num.num',X5) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK14(X1,X2,X3,X0)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X1)))) )),
  inference(superposition,[],[f231,f230])).
fof(f14951,plain,(
  ( ! [X14,X12,X19,X17,X15,X13,X18,X16] : (s('type.list.list'(X12),X16) != s('type.list.list'(X12),'const.list.APPEND_2'(s('type.list.list'(X12),X17),s('type.list.list'(X12),X15))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X12),X16))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X18),s('type.num.num',X19))) | s('type.num.num',X19) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X12),'const.list.APPEND_2'(s('type.list.list'(X12),sK14(X13,X14,X15,X12)),s('type.list.list'(X12),sK15(X13,X14,X15,X12)))))) | s('type.num.num',X18) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X12),X17))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X12),X15))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X14),s('type.num.num',X13)))) )),
  inference(superposition,[],[f231,f230])).
fof(f14946,plain,(
  ( ! [X14,X12,X19,X17,X15,X13,X18,X16] : (s('type.list.list'(X12),X16) != s('type.list.list'(X12),'const.list.APPEND_2'(s('type.list.list'(X12),X15),s('type.list.list'(X12),X17))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X12),X16))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X18),s('type.num.num',X19))) | s('type.num.num',X19) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X12),X17))) | s('type.num.num',X18) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X12),'const.list.APPEND_2'(s('type.list.list'(X12),sK14(X13,X14,X15,X12)),s('type.list.list'(X12),sK15(X13,X14,X15,X12)))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X12),X15))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X14),s('type.num.num',X13)))) )),
  inference(superposition,[],[f231,f230])).
fof(f14941,plain,(
  ( ! [X14,X12,X10,X17,X15,X13,X11,X16] : (s('type.list.list'(X10),X13) != s('type.list.list'(X10),'const.list.APPEND_2'(s('type.list.list'(X10),X14),s('type.list.list'(X10),X15))) | s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X16),s('type.num.num',X17))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X10),'const.list.APPEND_2'(s('type.list.list'(X10),sK14(X11,X12,X13,X10)),s('type.list.list'(X10),sK15(X11,X12,X13,X10)))))) | s('type.num.num',X17) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X10),X15))) | s('type.num.num',X16) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X10),X14))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X10),X13))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X12),s('type.num.num',X11)))) )),
  inference(superposition,[],[f231,f230])).
fof(f14957,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),X2))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2)))))) )),
  inference(forward_demodulation,[],[f14956,f217])).
fof(f14956,plain,(
  ( ! [X4,X2,X0,X1] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),X2))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.bool.COND_3'(s(bool,'T_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num',X4))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2)))))) )),
  inference(forward_demodulation,[],[f14955,f217])).
fof(f14955,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.bool.COND_3'(s(bool,'T_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num',X4))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),X2))),s('type.list.list'(X0),X3)))))) )),
  inference(forward_demodulation,[],[f14938,f217])).
fof(f14938,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),X2))),s('type.list.list'(X0),X3))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.bool.COND_3'(s(bool,'T_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num',X4))),s('type.num.num','const.bool.COND_3'(s(bool,'T_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num',X5)))))) )),
  inference(unit_resulting_resolution,[],[f217,f217,f217,f231])).
fof(f14834,plain,(
  ( ! [X47,X45,X48,X46,X44] : (~p(s(bool,happ(s(fun('type.list.list'(X44),bool),X48),s('type.list.list'(X44),X47)))) | s('type.list.list'(X44),'const.list.APPEND_2'(s('type.list.list'(X44),sK14(X45,X46,X47,X44)),s('type.list.list'(X44),sK15(X45,X46,X47,X44)))) = s('type.list.list'(X44),sK11('const.list.APPEND_2'(s('type.list.list'(X44),sK14(X45,X46,X47,X44)),s('type.list.list'(X44),sK15(X45,X46,X47,X44))),X48,'type.list.list'(X44))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X44),X47))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X46),s('type.num.num',X45)))) )),
  inference(superposition,[],[f222,f230])).
fof(f14833,plain,(
  ( ! [X39,X43,X41,X38,X42,X40] : (~p(s(bool,happ(s(fun('type.list.list'(X38),bool),X42),s('type.list.list'(X38),X41)))) | p(s(bool,happ(s(fun('type.list.list'(X38),bool),X42),s('type.list.list'(X38),X43)))) | s('type.list.list'(X38),X43) != s('type.list.list'(X38),'const.list.APPEND_2'(s('type.list.list'(X38),sK14(X39,X40,X41,X38)),s('type.list.list'(X38),sK15(X39,X40,X41,X38)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X38),X41))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X40),s('type.num.num',X39)))) )),
  inference(superposition,[],[f221,f230])).
fof(f14826,plain,(
  ( ! [X6,X10,X8,X7,X11,X9] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X9))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X10),s('type.num.num',X11))) | s('type.num.num',X11) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),sK15(X11,X10,'const.list.APPEND_2'(s('type.list.list'(X6),sK14(X7,X8,X9,X6)),s('type.list.list'(X6),sK15(X7,X8,X9,X6))),X6)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X9))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X8),s('type.num.num',X7)))) )),
  inference(superposition,[],[f229,f230])).
fof(f14825,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X4),s('type.num.num',X5))) | s('type.num.num',X4) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK14(X5,X4,'const.list.APPEND_2'(s('type.list.list'(X0),sK14(X1,X2,X3,X0)),s('type.list.list'(X0),sK15(X1,X2,X3,X0))),X0)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X1)))) )),
  inference(superposition,[],[f228,f230])).
fof(f14653,plain,(
  ( ! [X310,X309,X311] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X309),s('type.num.num',X310))))) = s('type.num.num',sK11('const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X309))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X310)))),X311,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X311),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X309),s('type.num.num',X310))))))))) )),
  inference(forward_demodulation,[],[f14628,f250])).
fof(f14628,plain,(
  ( ! [X310,X309,X311] : (~p(s(bool,happ(s(fun('type.num.num',bool),X311),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X309),s('type.num.num',X310)))))))) | s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X309))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X310))))) = s('type.num.num',sK11('const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X309))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X310)))),X311,'type.num.num'))) )),
  inference(superposition,[],[f222,f250])).
fof(f14552,plain,(
  ( ! [X142,X143,X141] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X143))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X141),s('type.num.num',X142))))))) | s('type.num.num',X143) = s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X141))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X142)))))) )),
  inference(superposition,[],[f255,f250])).
fof(f14632,plain,(
  ( ! [X39,X37,X41,X38,X40] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X37),s('type.num.num',X38))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X39),sK15('const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X37))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X38)))),X41,X40,X39)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X39),X40))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X41),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X37),s('type.num.num',X38)))))))) )),
  inference(forward_demodulation,[],[f14518,f250])).
fof(f14518,plain,(
  ( ! [X39,X37,X41,X38,X40] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X39),X40))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X41),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X37),s('type.num.num',X38))))))) | s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X37))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X38))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X39),sK15('const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X37))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X38)))),X41,X40,X39))))) )),
  inference(superposition,[],[f229,f250])).
fof(f14517,plain,(
  ( ! [X35,X33,X36,X34,X32] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X34),X35))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X32),s('type.num.num',X33))))),s('type.num.num',X36))) | s('type.num.num',X36) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X34),sK15(X36,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X32))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X33)))),X35,X34))))) )),
  inference(superposition,[],[f229,f250])).
fof(f14516,plain,(
  ( ! [X30,X28,X31,X29,X27] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X29),X30))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X31),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X27),s('type.num.num',X28))))))) | s('type.num.num',X31) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X29),sK14('const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X27))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X28)))),X31,X30,X29))))) )),
  inference(superposition,[],[f228,f250])).
fof(f14631,plain,(
  ( ! [X26,X24,X23,X25,X22] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X22),s('type.num.num',X23))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X24),sK14(X26,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X22))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X23)))),X25,X24)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X24),X25))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X22),s('type.num.num',X23))))),s('type.num.num',X26)))) )),
  inference(forward_demodulation,[],[f14515,f250])).
fof(f14515,plain,(
  ( ! [X26,X24,X23,X25,X22] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X24),X25))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X22),s('type.num.num',X23))))),s('type.num.num',X26))) | s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X22))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X23))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X24),sK14(X26,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X22))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X23)))),X25,X24))))) )),
  inference(superposition,[],[f228,f250])).
fof(f14413,plain,(
  ( ! [X304,X303,X305] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X303),s('type.num.num',X304))))) = s('type.num.num',sK11('const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X303))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X304)))),X305,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X305),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X303),s('type.num.num',X304))))))))) )),
  inference(forward_demodulation,[],[f14388,f249])).
fof(f14388,plain,(
  ( ! [X304,X303,X305] : (~p(s(bool,happ(s(fun('type.num.num',bool),X305),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X303),s('type.num.num',X304)))))))) | s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X303))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X304))))) = s('type.num.num',sK11('const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X303))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X304)))),X305,'type.num.num'))) )),
  inference(superposition,[],[f222,f249])).
fof(f14312,plain,(
  ( ! [X136,X135,X137] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X137))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X135),s('type.num.num',X136))))))) | s('type.num.num',X137) = s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X135))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X136)))))) )),
  inference(superposition,[],[f255,f249])).
fof(f14392,plain,(
  ( ! [X39,X37,X41,X38,X40] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X37),s('type.num.num',X38))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X39),sK15('const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X37))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X38)))),X41,X40,X39)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X39),X40))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X41),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X37),s('type.num.num',X38)))))))) )),
  inference(forward_demodulation,[],[f14280,f249])).
fof(f14280,plain,(
  ( ! [X39,X37,X41,X38,X40] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X39),X40))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X41),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X37),s('type.num.num',X38))))))) | s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X37))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X38))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X39),sK15('const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X37))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X38)))),X41,X40,X39))))) )),
  inference(superposition,[],[f229,f249])).
fof(f14279,plain,(
  ( ! [X35,X33,X36,X34,X32] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X34),X35))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X32),s('type.num.num',X33))))),s('type.num.num',X36))) | s('type.num.num',X36) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X34),sK15(X36,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X32))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X33)))),X35,X34))))) )),
  inference(superposition,[],[f229,f249])).
fof(f14278,plain,(
  ( ! [X30,X28,X31,X29,X27] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X29),X30))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X31),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X27),s('type.num.num',X28))))))) | s('type.num.num',X31) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X29),sK14('const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X27))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X28)))),X31,X30,X29))))) )),
  inference(superposition,[],[f228,f249])).
fof(f14391,plain,(
  ( ! [X26,X24,X23,X25,X22] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X22),s('type.num.num',X23))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X24),sK14(X26,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X22))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X23)))),X25,X24)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X24),X25))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X22),s('type.num.num',X23))))),s('type.num.num',X26)))) )),
  inference(forward_demodulation,[],[f14277,f249])).
fof(f14277,plain,(
  ( ! [X26,X24,X23,X25,X22] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X24),X25))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X22),s('type.num.num',X23))))),s('type.num.num',X26))) | s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X22))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X23))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X24),sK14(X26,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X22))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X23)))),X25,X24))))) )),
  inference(superposition,[],[f228,f249])).
fof(f14190,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,X0),s('type.num.num',X1),s('type.num.num',X2))))) = s('type.num.num','const.numeral.iSUB_3'(s(bool,X0),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X2))))) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f249,f208])).
fof(f14079,plain,(
  ( ! [X294,X296,X295] : (s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X294),s('type.num.num',X295))))) = s('type.num.num',sK11('const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X294))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X295)))),X296,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X296),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X294),s('type.num.num',X295))))))))) )),
  inference(forward_demodulation,[],[f14056,f248])).
fof(f14056,plain,(
  ( ! [X294,X296,X295] : (~p(s(bool,happ(s(fun('type.num.num',bool),X296),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X294),s('type.num.num',X295)))))))) | s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X294))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X295))))) = s('type.num.num',sK11('const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X294))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X295)))),X296,'type.num.num'))) )),
  inference(superposition,[],[f222,f248])).
fof(f13981,plain,(
  ( ! [X130,X131,X129] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X131))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X129),s('type.num.num',X130))))))) | s('type.num.num',X131) = s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X129))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X130)))))) )),
  inference(superposition,[],[f255,f248])).
fof(f14060,plain,(
  ( ! [X39,X37,X41,X38,X40] : (s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X37),s('type.num.num',X38))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X39),sK15('const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X37))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X38)))),X41,X40,X39)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X39),X40))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X41),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X37),s('type.num.num',X38)))))))) )),
  inference(forward_demodulation,[],[f13951,f248])).
fof(f13951,plain,(
  ( ! [X39,X37,X41,X38,X40] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X39),X40))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X41),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X37),s('type.num.num',X38))))))) | s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X37))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X38))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X39),sK15('const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X37))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X38)))),X41,X40,X39))))) )),
  inference(superposition,[],[f229,f248])).
fof(f13950,plain,(
  ( ! [X35,X33,X36,X34,X32] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X34),X35))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X32),s('type.num.num',X33))))),s('type.num.num',X36))) | s('type.num.num',X36) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X34),sK15(X36,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X32))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X33)))),X35,X34))))) )),
  inference(superposition,[],[f229,f248])).
fof(f13949,plain,(
  ( ! [X30,X28,X31,X29,X27] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X29),X30))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X31),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X27),s('type.num.num',X28))))))) | s('type.num.num',X31) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X29),sK14('const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X27))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X28)))),X31,X30,X29))))) )),
  inference(superposition,[],[f228,f248])).
fof(f14059,plain,(
  ( ! [X26,X24,X23,X25,X22] : (s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X22),s('type.num.num',X23))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X24),sK14(X26,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X22))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X23)))),X25,X24)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X24),X25))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X22),s('type.num.num',X23))))),s('type.num.num',X26)))) )),
  inference(forward_demodulation,[],[f13948,f248])).
fof(f13948,plain,(
  ( ! [X26,X24,X23,X25,X22] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X24),X25))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X22),s('type.num.num',X23))))),s('type.num.num',X26))) | s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X22))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X23))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X24),sK14(X26,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X22))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X23)))),X25,X24))))) )),
  inference(superposition,[],[f228,f248])).
fof(f13637,plain,(
  ( ! [X2,X0,X1] : (s(bool,'F_0') != s(bool,f(s(X0,sK16(X1,X2,bool,X0)))) | s(fun(X0,bool),X1) = s(fun(X0,bool),X2) | s(bool,'T_0') = s(bool,g(s(X0,sK16(X1,X2,bool,X0))))) )),
  inference(forward_demodulation,[],[f13628,f184])).
fof(f13628,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'const.prim_rec.<_2'(s('type.num.num',X3),s('type.num.num','const.arithmetic.ZERO_0'))) != s(bool,f(s(X0,sK16(X1,X2,bool,X0)))) | s(fun(X0,bool),X1) = s(fun(X0,bool),X2) | s(bool,'T_0') = s(bool,g(s(X0,sK16(X1,X2,bool,X0))))) )),
  inference(superposition,[],[f260,f5640])).
fof(f13633,plain,(
  ( ! [X2,X0,X1] : (s(X2,f(s(bool,'F_0'))) != s(X2,g(s(bool,'F_0'))) | s(fun(bool,X2),X0) = s(fun(bool,X2),X1) | s(bool,'T_0') = s(bool,sK16(X0,X1,X2,bool))) )),
  inference(forward_demodulation,[],[f13623,f184])).
fof(f13623,plain,(
  ( ! [X2,X0,X3,X1] : (s(X2,f(s(bool,'const.prim_rec.<_2'(s('type.num.num',X3),s('type.num.num','const.arithmetic.ZERO_0'))))) != s(X2,g(s(bool,'const.prim_rec.<_2'(s('type.num.num',X3),s('type.num.num','const.arithmetic.ZERO_0'))))) | s(fun(bool,X2),X0) = s(fun(bool,X2),X1) | s(bool,'T_0') = s(bool,sK16(X0,X1,X2,bool))) )),
  inference(superposition,[],[f260,f5640])).
fof(f13541,plain,(
  ( ! [X6,X4,X5,X3] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X5),X6))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X4),s('type.num.num',X3))) | s('type.num.num',X4) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X5),sK15(X4,X3,X6,X5))))) )),
  inference(superposition,[],[f229,f235])).
fof(f13604,plain,(
  ( ! [X134,X138,X136,X135,X137] : (s('type.num.num',X134) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X136),sK15('const.bool.COND_3'(s(bool,'T_0'),s('type.num.num',X134),s('type.num.num',X135)),X138,X137,X136)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X136),X137))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X138),s('type.num.num',X134)))) )),
  inference(forward_demodulation,[],[f13539,f217])).
fof(f13539,plain,(
  ( ! [X134,X138,X136,X135,X137] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X136),X137))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X138),s('type.num.num',X134))) | s('type.num.num','const.bool.COND_3'(s(bool,'T_0'),s('type.num.num',X134),s('type.num.num',X135))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X136),sK15('const.bool.COND_3'(s(bool,'T_0'),s('type.num.num',X134),s('type.num.num',X135)),X138,X137,X136))))) )),
  inference(superposition,[],[f229,f217])).
fof(f13603,plain,(
  ( ! [X132,X130,X133,X131] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X130))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X131),sK15('const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X130)))),X133,X132,X131)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X131),X132))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X133),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X130)))))))) )),
  inference(forward_demodulation,[],[f13538,f198])).
fof(f13538,plain,(
  ( ! [X132,X130,X133,X131] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X131),X132))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X133),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X130))))))) | s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X130))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X131),sK15('const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X130)))),X133,X132,X131))))) )),
  inference(superposition,[],[f229,f198])).
fof(f13600,plain,(
  ( ! [X125,X123,X126,X124] : (s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X123))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X124),sK15('const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X123))),s('type.num.num','const.arithmetic.ZERO_0')),X126,X125,X124)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X124),X125))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X126),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X123)))))) )),
  inference(forward_demodulation,[],[f13536,f207])).
fof(f13536,plain,(
  ( ! [X125,X123,X126,X124] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X124),X125))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X126),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X123))))) | s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X123))),s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X124),sK15('const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X123))),s('type.num.num','const.arithmetic.ZERO_0')),X126,X125,X124))))) )),
  inference(superposition,[],[f229,f207])).
fof(f13597,plain,(
  ( ! [X116,X114,X117,X115] : (s('type.num.num',X114) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X115),sK15('const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X114),s('type.num.num','const.arithmetic.ZERO_0')),X117,X116,X115)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X115),X116))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X117),s('type.num.num',X114)))) )),
  inference(forward_demodulation,[],[f13534,f196])).
fof(f13534,plain,(
  ( ! [X116,X114,X117,X115] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X115),X116))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X117),s('type.num.num',X114))) | s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X114),s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X115),sK15('const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X114),s('type.num.num','const.arithmetic.ZERO_0')),X117,X116,X115))))) )),
  inference(superposition,[],[f229,f196])).
fof(f13596,plain,(
  ( ! [X111,X112,X110,X113] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X110))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X111),sK15('const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X110)))),X113,X112,X111)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X111),X112))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X113),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X110)))))))) )),
  inference(forward_demodulation,[],[f13533,f202])).
fof(f13533,plain,(
  ( ! [X111,X112,X110,X113] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X111),X112))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X113),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X110))))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X110))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X111),sK15('const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X110)))),X113,X112,X111))))) )),
  inference(superposition,[],[f229,f202])).
fof(f13595,plain,(
  ( ! [X109,X107,X108,X106] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X106))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X107),sK15('const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X106)))),X109,X108,X107)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X107),X108))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X109),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X106)))))))) )),
  inference(forward_demodulation,[],[f13532,f199])).
fof(f13532,plain,(
  ( ! [X109,X107,X108,X106] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X107),X108))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X109),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X106))))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X106))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X107),sK15('const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X106)))),X109,X108,X107))))) )),
  inference(superposition,[],[f229,f199])).
fof(f13594,plain,(
  ( ! [X103,X105,X102,X104] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X102))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X103),sK15('const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X102)))),X105,X104,X103)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X103),X104))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X105),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X102)))))) )),
  inference(forward_demodulation,[],[f13531,f197])).
fof(f13531,plain,(
  ( ! [X103,X105,X102,X104] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X103),X104))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X105),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X102))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X102))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X103),sK15('const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X102)))),X105,X104,X103))))) )),
  inference(superposition,[],[f229,f197])).
fof(f13593,plain,(
  ( ! [X101,X99,X100] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X99),sK15('const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),X101,X100,X99)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X99),X100))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X101),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(forward_demodulation,[],[f13530,f177])).
fof(f13530,plain,(
  ( ! [X101,X99,X100] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X99),X100))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X101),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X99),sK15('const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),X101,X100,X99))))) )),
  inference(superposition,[],[f229,f177])).
fof(f13591,plain,(
  ( ! [X94,X92,X90,X93,X91] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X90),s('type.num.num',X91))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X92),sK15('const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X90))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X91)))),X94,X93,X92)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X92),X93))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X94),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X90),s('type.num.num',X91)))))))) )),
  inference(forward_demodulation,[],[f13528,f245])).
fof(f13528,plain,(
  ( ! [X94,X92,X90,X93,X91] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X92),X93))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X94),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X90),s('type.num.num',X91))))))) | s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X90))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X91))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X92),sK15('const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X90))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X91)))),X94,X93,X92))))) )),
  inference(superposition,[],[f229,f245])).
fof(f13586,plain,(
  ( ! [X80,X78,X81,X79,X77] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X77),s('type.num.num',X78))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X79),sK15('const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X77))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X78)))),X81,X80,X79)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X79),X80))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X81),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X77),s('type.num.num',X78)))))))) )),
  inference(forward_demodulation,[],[f13525,f244])).
fof(f13525,plain,(
  ( ! [X80,X78,X81,X79,X77] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X79),X80))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X81),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X77),s('type.num.num',X78))))))) | s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X77))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X78))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X79),sK15('const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X77))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X78)))),X81,X80,X79))))) )),
  inference(superposition,[],[f229,f244])).
fof(f13576,plain,(
  ( ! [X57,X54,X58,X56,X55] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X54),s('type.num.num',X55))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X56),sK15('const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X54))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X55)))),X58,X57,X56)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X56),X57))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X58),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X54),s('type.num.num',X55)))))))) )),
  inference(forward_demodulation,[],[f13519,f246])).
fof(f13519,plain,(
  ( ! [X57,X54,X58,X56,X55] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X56),X57))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X58),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X54),s('type.num.num',X55))))))) | s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X54))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X55))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X56),sK15('const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X54))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X55)))),X58,X57,X56))))) )),
  inference(superposition,[],[f229,f246])).
fof(f13509,plain,(
  ( ! [X14,X17,X15,X13,X16] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X15),X16))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X17),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X14),s('type.num.num',X13))))) | s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X13),s('type.num.num',X14))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X15),sK15('const.arithmetic.+_2'(s('type.num.num',X13),s('type.num.num',X14)),X17,X16,X15))))) )),
  inference(superposition,[],[f229,f235])).
fof(f13504,plain,(
  ( ! [X134,X138,X136,X135,X137] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X136),X137))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X134),s('type.num.num',X138))) | s('type.num.num',X138) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X136),sK15(X138,'const.bool.COND_3'(s(bool,'T_0'),s('type.num.num',X134),s('type.num.num',X135)),X137,X136))))) )),
  inference(superposition,[],[f229,f217])).
fof(f13503,plain,(
  ( ! [X132,X130,X133,X131] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X131),X132))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X130))))),s('type.num.num',X133))) | s('type.num.num',X133) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X131),sK15(X133,'const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X130)))),X132,X131))))) )),
  inference(superposition,[],[f229,f198])).
fof(f13501,plain,(
  ( ! [X125,X123,X126,X124] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X124),X125))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X123))),s('type.num.num',X126))) | s('type.num.num',X126) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X124),sK15(X126,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X123))),s('type.num.num','const.arithmetic.ZERO_0')),X125,X124))))) )),
  inference(superposition,[],[f229,f207])).
fof(f13499,plain,(
  ( ! [X116,X114,X117,X115] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X115),X116))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X114),s('type.num.num',X117))) | s('type.num.num',X117) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X115),sK15(X117,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X114),s('type.num.num','const.arithmetic.ZERO_0')),X116,X115))))) )),
  inference(superposition,[],[f229,f196])).
fof(f13498,plain,(
  ( ! [X111,X112,X110,X113] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X111),X112))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X110))))),s('type.num.num',X113))) | s('type.num.num',X113) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X111),sK15(X113,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X110)))),X112,X111))))) )),
  inference(superposition,[],[f229,f202])).
fof(f13497,plain,(
  ( ! [X109,X107,X108,X106] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X107),X108))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X106))))),s('type.num.num',X109))) | s('type.num.num',X109) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X107),sK15(X109,'const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X106)))),X108,X107))))) )),
  inference(superposition,[],[f229,f199])).
fof(f13496,plain,(
  ( ! [X103,X105,X102,X104] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X103),X104))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X102))),s('type.num.num',X105))) | s('type.num.num',X105) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X103),sK15(X105,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X102)))),X104,X103))))) )),
  inference(superposition,[],[f229,f197])).
fof(f13495,plain,(
  ( ! [X101,X99,X100] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X99),X100))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X101))) | s('type.num.num',X101) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X99),sK15(X101,'const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),X100,X99))))) )),
  inference(superposition,[],[f229,f177])).
fof(f13493,plain,(
  ( ! [X94,X92,X90,X93,X91] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X92),X93))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X90),s('type.num.num',X91))))),s('type.num.num',X94))) | s('type.num.num',X94) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X92),sK15(X94,'const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X90))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X91)))),X93,X92))))) )),
  inference(superposition,[],[f229,f245])).
fof(f13490,plain,(
  ( ! [X80,X78,X81,X79,X77] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X79),X80))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X77),s('type.num.num',X78))))),s('type.num.num',X81))) | s('type.num.num',X81) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X79),sK15(X81,'const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X77))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X78)))),X80,X79))))) )),
  inference(superposition,[],[f229,f244])).
fof(f13484,plain,(
  ( ! [X57,X54,X58,X56,X55] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X56),X57))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X54),s('type.num.num',X55))))),s('type.num.num',X58))) | s('type.num.num',X58) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X56),sK15(X58,'const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X54))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X55)))),X57,X56))))) )),
  inference(superposition,[],[f229,f246])).
fof(f13474,plain,(
  ( ! [X14,X17,X15,X13,X16] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X15),X16))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X14),s('type.num.num',X13))),s('type.num.num',X17))) | s('type.num.num',X17) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X15),sK15(X17,'const.arithmetic.+_2'(s('type.num.num',X13),s('type.num.num',X14)),X16,X15))))) )),
  inference(superposition,[],[f229,f235])).
fof(f13468,plain,(
  ( ! [X6,X4,X8,X7,X5] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X4),X5))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X7),s('type.num.num',X8))) | s('type.num.num',X8) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X4),sK15(X8,X7,'const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X4),X5),s('type.list.list'(X4),X6)),X4))))) )),
  inference(superposition,[],[f229,f217])).
fof(f13237,plain,(
  ( ! [X6,X4,X5,X3] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X5),X6))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X4),s('type.num.num',X3))) | s('type.num.num',X3) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X5),sK14(X4,X3,X6,X5))))) )),
  inference(superposition,[],[f228,f235])).
fof(f13235,plain,(
  ( ! [X134,X138,X136,X135,X137] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X136),X137))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X138),s('type.num.num',X134))) | s('type.num.num',X138) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X136),sK14('const.bool.COND_3'(s(bool,'T_0'),s('type.num.num',X134),s('type.num.num',X135)),X138,X137,X136))))) )),
  inference(superposition,[],[f228,f217])).
fof(f13234,plain,(
  ( ! [X132,X130,X133,X131] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X131),X132))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X133),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X130))))))) | s('type.num.num',X133) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X131),sK14('const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X130)))),X133,X132,X131))))) )),
  inference(superposition,[],[f228,f198])).
fof(f13232,plain,(
  ( ! [X125,X123,X126,X124] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X124),X125))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X126),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X123))))) | s('type.num.num',X126) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X124),sK14('const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X123))),s('type.num.num','const.arithmetic.ZERO_0')),X126,X125,X124))))) )),
  inference(superposition,[],[f228,f207])).
fof(f13230,plain,(
  ( ! [X116,X114,X117,X115] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X115),X116))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X117),s('type.num.num',X114))) | s('type.num.num',X117) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X115),sK14('const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X114),s('type.num.num','const.arithmetic.ZERO_0')),X117,X116,X115))))) )),
  inference(superposition,[],[f228,f196])).
fof(f13229,plain,(
  ( ! [X111,X112,X110,X113] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X111),X112))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X113),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X110))))))) | s('type.num.num',X113) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X111),sK14('const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X110)))),X113,X112,X111))))) )),
  inference(superposition,[],[f228,f202])).
fof(f13228,plain,(
  ( ! [X109,X107,X108,X106] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X107),X108))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X109),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X106))))))) | s('type.num.num',X109) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X107),sK14('const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X106)))),X109,X108,X107))))) )),
  inference(superposition,[],[f228,f199])).
fof(f13227,plain,(
  ( ! [X103,X105,X102,X104] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X103),X104))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X105),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X102))))) | s('type.num.num',X105) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X103),sK14('const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X102)))),X105,X104,X103))))) )),
  inference(superposition,[],[f228,f197])).
fof(f13226,plain,(
  ( ! [X101,X99,X100] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X99),X100))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X101),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num',X101) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X99),sK14('const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),X101,X100,X99))))) )),
  inference(superposition,[],[f228,f177])).
fof(f13224,plain,(
  ( ! [X94,X92,X90,X93,X91] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X92),X93))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X94),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X90),s('type.num.num',X91))))))) | s('type.num.num',X94) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X92),sK14('const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X90))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X91)))),X94,X93,X92))))) )),
  inference(superposition,[],[f228,f245])).
fof(f13221,plain,(
  ( ! [X80,X78,X81,X79,X77] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X79),X80))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X81),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X77),s('type.num.num',X78))))))) | s('type.num.num',X81) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X79),sK14('const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X77))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X78)))),X81,X80,X79))))) )),
  inference(superposition,[],[f228,f244])).
fof(f13215,plain,(
  ( ! [X57,X54,X58,X56,X55] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X56),X57))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X58),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X54),s('type.num.num',X55))))))) | s('type.num.num',X58) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X56),sK14('const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X54))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X55)))),X58,X57,X56))))) )),
  inference(superposition,[],[f228,f246])).
fof(f13205,plain,(
  ( ! [X14,X17,X15,X13,X16] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X15),X16))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X17),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X14),s('type.num.num',X13))))) | s('type.num.num',X17) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X15),sK14('const.arithmetic.+_2'(s('type.num.num',X13),s('type.num.num',X14)),X17,X16,X15))))) )),
  inference(superposition,[],[f228,f235])).
fof(f13287,plain,(
  ( ! [X134,X138,X136,X135,X137] : (s('type.num.num',X134) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X136),sK14(X138,'const.bool.COND_3'(s(bool,'T_0'),s('type.num.num',X134),s('type.num.num',X135)),X137,X136)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X136),X137))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X134),s('type.num.num',X138)))) )),
  inference(forward_demodulation,[],[f13200,f217])).
fof(f13200,plain,(
  ( ! [X134,X138,X136,X135,X137] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X136),X137))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X134),s('type.num.num',X138))) | s('type.num.num','const.bool.COND_3'(s(bool,'T_0'),s('type.num.num',X134),s('type.num.num',X135))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X136),sK14(X138,'const.bool.COND_3'(s(bool,'T_0'),s('type.num.num',X134),s('type.num.num',X135)),X137,X136))))) )),
  inference(superposition,[],[f228,f217])).
fof(f13286,plain,(
  ( ! [X132,X130,X133,X131] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X130))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X131),sK14(X133,'const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X130)))),X132,X131)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X131),X132))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X130))))),s('type.num.num',X133)))) )),
  inference(forward_demodulation,[],[f13199,f198])).
fof(f13199,plain,(
  ( ! [X132,X130,X133,X131] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X131),X132))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X130))))),s('type.num.num',X133))) | s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X130))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X131),sK14(X133,'const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X130)))),X132,X131))))) )),
  inference(superposition,[],[f228,f198])).
fof(f13283,plain,(
  ( ! [X125,X123,X126,X124] : (s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X123))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X124),sK14(X126,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X123))),s('type.num.num','const.arithmetic.ZERO_0')),X125,X124)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X124),X125))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X123))),s('type.num.num',X126)))) )),
  inference(forward_demodulation,[],[f13197,f207])).
fof(f13197,plain,(
  ( ! [X125,X123,X126,X124] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X124),X125))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X123))),s('type.num.num',X126))) | s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X123))),s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X124),sK14(X126,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X123))),s('type.num.num','const.arithmetic.ZERO_0')),X125,X124))))) )),
  inference(superposition,[],[f228,f207])).
fof(f13280,plain,(
  ( ! [X116,X114,X117,X115] : (s('type.num.num',X114) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X115),sK14(X117,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X114),s('type.num.num','const.arithmetic.ZERO_0')),X116,X115)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X115),X116))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X114),s('type.num.num',X117)))) )),
  inference(forward_demodulation,[],[f13195,f196])).
fof(f13195,plain,(
  ( ! [X116,X114,X117,X115] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X115),X116))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X114),s('type.num.num',X117))) | s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X114),s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X115),sK14(X117,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X114),s('type.num.num','const.arithmetic.ZERO_0')),X116,X115))))) )),
  inference(superposition,[],[f228,f196])).
fof(f13279,plain,(
  ( ! [X111,X112,X110,X113] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X110))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X111),sK14(X113,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X110)))),X112,X111)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X111),X112))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X110))))),s('type.num.num',X113)))) )),
  inference(forward_demodulation,[],[f13194,f202])).
fof(f13194,plain,(
  ( ! [X111,X112,X110,X113] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X111),X112))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X110))))),s('type.num.num',X113))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X110))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X111),sK14(X113,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X110)))),X112,X111))))) )),
  inference(superposition,[],[f228,f202])).
fof(f13278,plain,(
  ( ! [X109,X107,X108,X106] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X106))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X107),sK14(X109,'const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X106)))),X108,X107)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X107),X108))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X106))))),s('type.num.num',X109)))) )),
  inference(forward_demodulation,[],[f13193,f199])).
fof(f13193,plain,(
  ( ! [X109,X107,X108,X106] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X107),X108))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X106))))),s('type.num.num',X109))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X106))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X107),sK14(X109,'const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X106)))),X108,X107))))) )),
  inference(superposition,[],[f228,f199])).
fof(f13277,plain,(
  ( ! [X103,X105,X102,X104] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X102))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X103),sK14(X105,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X102)))),X104,X103)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X103),X104))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X102))),s('type.num.num',X105)))) )),
  inference(forward_demodulation,[],[f13192,f197])).
fof(f13192,plain,(
  ( ! [X103,X105,X102,X104] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X103),X104))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X102))),s('type.num.num',X105))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X102))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X103),sK14(X105,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X102)))),X104,X103))))) )),
  inference(superposition,[],[f228,f197])).
fof(f13276,plain,(
  ( ! [X101,X99,X100] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X99),sK14(X101,'const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),X100,X99)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X99),X100))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X101)))) )),
  inference(forward_demodulation,[],[f13191,f177])).
fof(f13191,plain,(
  ( ! [X101,X99,X100] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X99),X100))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X101))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X99),sK14(X101,'const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),X100,X99))))) )),
  inference(superposition,[],[f228,f177])).
fof(f13274,plain,(
  ( ! [X94,X92,X90,X93,X91] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X90),s('type.num.num',X91))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X92),sK14(X94,'const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X90))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X91)))),X93,X92)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X92),X93))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X90),s('type.num.num',X91))))),s('type.num.num',X94)))) )),
  inference(forward_demodulation,[],[f13189,f245])).
fof(f13189,plain,(
  ( ! [X94,X92,X90,X93,X91] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X92),X93))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X90),s('type.num.num',X91))))),s('type.num.num',X94))) | s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X90))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X91))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X92),sK14(X94,'const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X90))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X91)))),X93,X92))))) )),
  inference(superposition,[],[f228,f245])).
fof(f13269,plain,(
  ( ! [X80,X78,X81,X79,X77] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X77),s('type.num.num',X78))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X79),sK14(X81,'const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X77))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X78)))),X80,X79)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X79),X80))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X77),s('type.num.num',X78))))),s('type.num.num',X81)))) )),
  inference(forward_demodulation,[],[f13186,f244])).
fof(f13186,plain,(
  ( ! [X80,X78,X81,X79,X77] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X79),X80))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X77),s('type.num.num',X78))))),s('type.num.num',X81))) | s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X77))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X78))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X79),sK14(X81,'const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X77))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X78)))),X80,X79))))) )),
  inference(superposition,[],[f228,f244])).
fof(f13259,plain,(
  ( ! [X57,X54,X58,X56,X55] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X54),s('type.num.num',X55))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X56),sK14(X58,'const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X54))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X55)))),X57,X56)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X56),X57))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X54),s('type.num.num',X55))))),s('type.num.num',X58)))) )),
  inference(forward_demodulation,[],[f13180,f246])).
fof(f13180,plain,(
  ( ! [X57,X54,X58,X56,X55] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X56),X57))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X54),s('type.num.num',X55))))),s('type.num.num',X58))) | s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X54))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X55))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X56),sK14(X58,'const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X54))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X55)))),X57,X56))))) )),
  inference(superposition,[],[f228,f246])).
fof(f13170,plain,(
  ( ! [X14,X17,X15,X13,X16] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X15),X16))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X14),s('type.num.num',X13))),s('type.num.num',X17))) | s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X13),s('type.num.num',X14))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X15),sK14(X17,'const.arithmetic.+_2'(s('type.num.num',X13),s('type.num.num',X14)),X16,X15))))) )),
  inference(superposition,[],[f228,f235])).
fof(f13164,plain,(
  ( ! [X6,X4,X8,X7,X5] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X4),X5))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X7),s('type.num.num',X8))) | s('type.num.num',X7) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X4),sK14(X8,X7,'const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X4),X5),s('type.list.list'(X4),X6)),X4))))) )),
  inference(superposition,[],[f228,f217])).
fof(f13160,plain,(
  ( ! [X47,X48,X46] : (s(bool,'F_0') = s(bool,sK11('const.prim_rec.<_2'(s('type.num.num',X46),s('type.num.num','const.arithmetic.ZERO_0')),X48,bool)) | ~p(s(bool,happ(s(fun(bool,bool),X48),s(bool,X47)))) | s(bool,'T_0') = s(bool,X47)) )),
  inference(forward_demodulation,[],[f13076,f184])).
fof(f13076,plain,(
  ( ! [X47,X48,X46] : (~p(s(bool,happ(s(fun(bool,bool),X48),s(bool,X47)))) | s(bool,'const.prim_rec.<_2'(s('type.num.num',X46),s('type.num.num','const.arithmetic.ZERO_0'))) = s(bool,sK11('const.prim_rec.<_2'(s('type.num.num',X46),s('type.num.num','const.arithmetic.ZERO_0')),X48,bool)) | s(bool,'T_0') = s(bool,X47)) )),
  inference(superposition,[],[f222,f5640])).
fof(f12952,plain,(
  ( ! [X87,X85,X86] : (s(bool,X85) = s(bool,'const.prim_rec.<_2'(s('type.num.num',X87),s('type.num.num','const.arithmetic.ZERO_0'))) | s(bool,'T_0') = s(bool,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X85),s(bool,X86)))) )),
  inference(superposition,[],[f5640,f217])).
fof(f11599,plain,(
  ( ! [X158,X156,X159,X157,X155] : (~p(s(bool,X155)) | p(s(bool,happ(s(fun(X157,bool),X158),s(X157,sK13('const.bool.COND_3'(s(bool,'T_0'),s(bool,X155),s(bool,X156)),X158,X157))))) | ~p(s(bool,happ(s(fun(X157,bool),X158),s(X157,X159))))) )),
  inference(superposition,[],[f226,f217])).
fof(f11598,plain,(
  ( ! [X154,X152,X151,X153,X150] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X151),s('type.num.num',X150)))) | p(s(bool,happ(s(fun(X152,bool),X153),s(X152,sK13('const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X150))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X151)))),X153,X152))))) | ~p(s(bool,happ(s(fun(X152,bool),X153),s(X152,X154))))) )),
  inference(superposition,[],[f226,f238])).
fof(f11597,plain,(
  ( ! [X146,X149,X147,X145,X148] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X146),s('type.num.num',X145)))) | p(s(bool,happ(s(fun(X147,bool),X148),s(X147,sK13('const.arithmetic.>=_2'(s('type.num.num',X145),s('type.num.num',X146)),X148,X147))))) | ~p(s(bool,happ(s(fun(X147,bool),X148),s(X147,X149))))) )),
  inference(superposition,[],[f226,f234])).
fof(f11593,plain,(
  ( ! [X132,X130,X133,X131,X129] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X129),s('type.num.num',X130)))) | p(s(bool,happ(s(fun(X131,bool),X132),s(X131,sK13('const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X129))),s('type.num.num',X130)),X132,X131))))) | ~p(s(bool,happ(s(fun(X131,bool),X132),s(X131,X133))))) )),
  inference(superposition,[],[f226,f236])).
fof(f11588,plain,(
  ( ! [X111,X114,X112,X110,X113] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X110),s('type.num.num',X111)))) | p(s(bool,happ(s(fun(X112,bool),X113),s(X112,sK13('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X110))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X111)))),X113,X112))))) | ~p(s(bool,happ(s(fun(X112,bool),X113),s(X112,X114))))) )),
  inference(superposition,[],[f226,f241])).
fof(f11582,plain,(
  ( ! [X90,X88,X91,X89] : (~p(s(bool,'const.arithmetic.ODD_1'(s('type.num.num',X88)))) | p(s(bool,happ(s(fun(X89,bool),X90),s(X89,sK13('const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X88)))),X90,X89))))) | ~p(s(bool,happ(s(fun(X89,bool),X90),s(X89,X91))))) )),
  inference(superposition,[],[f226,f193])).
fof(f11579,plain,(
  ( ! [X80,X78,X76,X79,X77] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X77),s('type.num.num',X76)))) | p(s(bool,happ(s(fun(X78,bool),X79),s(X78,sK13('const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X76))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X77)))),X79,X78))))) | ~p(s(bool,happ(s(fun(X78,bool),X79),s(X78,X80))))) )),
  inference(superposition,[],[f226,f237])).
fof(f11577,plain,(
  ( ! [X70,X68,X71,X69,X67] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X68),s('type.num.num',X67)))) | p(s(bool,happ(s(fun(X69,bool),X70),s(X69,sK13('const.arithmetic.>_2'(s('type.num.num',X67),s('type.num.num',X68)),X70,X69))))) | ~p(s(bool,happ(s(fun(X69,bool),X70),s(X69,X71))))) )),
  inference(superposition,[],[f226,f233])).
fof(f11575,plain,(
  ( ! [X61,X59,X62,X60] : (~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X59)))) | p(s(bool,happ(s(fun(X60,bool),X61),s(X60,sK13('const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X59)))),X61,X60))))) | ~p(s(bool,happ(s(fun(X60,bool),X61),s(X60,X62))))) )),
  inference(superposition,[],[f226,f195])).
fof(f11573,plain,(
  ( ! [X54,X52,X55,X53,X51] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X51),s('type.num.num',X52)))) | p(s(bool,happ(s(fun(X53,bool),X54),s(X53,sK13('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X51))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X52)))),X54,X53))))) | ~p(s(bool,happ(s(fun(X53,bool),X54),s(X53,X55))))) )),
  inference(superposition,[],[f226,f240])).
fof(f11572,plain,(
  ( ! [X47,X50,X48,X46,X49] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X46),s('type.num.num',X47)))) | p(s(bool,happ(s(fun(X48,bool),X49),s(X48,sK13('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X46))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X47)))),X49,X48))))) | ~p(s(bool,happ(s(fun(X48,bool),X49),s(X48,X50))))) )),
  inference(superposition,[],[f226,f239])).
fof(f11571,plain,(
  ( ! [X45,X43,X41,X44,X42] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X41),s('type.num.num',X42)))) | p(s(bool,happ(s(fun(X43,bool),X44),s(X43,sK13('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X41))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X42)))),X44,X43))))) | ~p(s(bool,happ(s(fun(X43,bool),X44),s(X43,X45))))) )),
  inference(superposition,[],[f226,f243])).
fof(f11570,plain,(
  ( ! [X39,X37,X38,X36,X40] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X36),s('type.num.num',X37)))) | p(s(bool,happ(s(fun(X38,bool),X39),s(X38,sK13('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X36))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X37)))),X39,X38))))) | ~p(s(bool,happ(s(fun(X38,bool),X39),s(X38,X40))))) )),
  inference(superposition,[],[f226,f242])).
fof(f11604,plain,(
  ( ! [X30,X28,X31,X29] : (p(s(bool,happ(s(fun(X29,bool),X30),s(X29,sK13('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X28)))),X30,X29))))) | ~p(s(bool,happ(s(fun(X29,bool),X30),s(X29,X31))))) )),
  inference(subsumption_resolution,[],[f11568,f174])).
fof(f11568,plain,(
  ( ! [X30,X28,X31,X29] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun(X29,bool),X30),s(X29,sK13('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X28)))),X30,X29))))) | ~p(s(bool,happ(s(fun(X29,bool),X30),s(X29,X31))))) )),
  inference(superposition,[],[f226,f194])).
fof(f11603,plain,(
  ( ! [X26,X24,X27,X25] : (p(s(bool,happ(s(fun(X25,bool),X26),s(X25,sK13('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X24)))),X26,X25))))) | ~p(s(bool,happ(s(fun(X25,bool),X26),s(X25,X27))))) )),
  inference(subsumption_resolution,[],[f11567,f174])).
fof(f11567,plain,(
  ( ! [X26,X24,X27,X25] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun(X25,bool),X26),s(X25,sK13('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X24)))),X26,X25))))) | ~p(s(bool,happ(s(fun(X25,bool),X26),s(X25,X27))))) )),
  inference(superposition,[],[f226,f192])).
fof(f233,plain,(
  ( ! [X0,X1] : (s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X0))) = s(bool,'const.arithmetic.>_2'(s('type.num.num',X0),s('type.num.num',X1)))) )),
  inference(cnf_transformation,[],[f118])).
fof(f118,plain,(
  ! [X0,X1] : s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X0))) = s(bool,'const.arithmetic.>_2'(s('type.num.num',X0),s('type.num.num',X1)))),
  inference(rectify,[],[f60])).
fof(f60,axiom,(
  ! [X22,X19] : s(bool,'const.prim_rec.<_2'(s('type.num.num',X19),s('type.num.num',X22))) = s(bool,'const.arithmetic.>_2'(s('type.num.num',X22),s('type.num.num',X19)))),
  file('thm.quantHeuristics.LIST_LENGTH_3|split|13','thm.arithmetic.GREATER_DEF')).
fof(f236,plain,(
  ( ! [X0,X1] : (s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num',X1)))) )),
  inference(cnf_transformation,[],[f121])).
fof(f121,plain,(
  ! [X0,X1] : s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num',X1)))),
  inference(rectify,[],[f32])).
fof(f32,axiom,(
  ! [X22,X19] : s(bool,'const.prim_rec.<_2'(s('type.num.num',X22),s('type.num.num',X19))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X22))),s('type.num.num',X19)))),
  file('thm.quantHeuristics.LIST_LENGTH_3|split|13','thm.arithmetic.LESS_EQ')).
fof(f237,plain,(
  ( ! [X0,X1] : (s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X0))) = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))) )),
  inference(cnf_transformation,[],[f122])).
fof(f122,plain,(
  ! [X0,X1] : s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X0))) = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))),
  inference(rectify,[],[f43])).
fof(f43,axiom,(
  ! [X19,X22] : s(bool,'const.prim_rec.<_2'(s('type.num.num',X22),s('type.num.num',X19))) = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X19))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X22)))))),
  file('thm.quantHeuristics.LIST_LENGTH_3|split|13','thm.numeral.numeral_distrib|split|25')).
fof(f239,plain,(
  ( ! [X0,X1] : (s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1)))))) )),
  inference(cnf_transformation,[],[f124])).
fof(f124,plain,(
  ! [X0,X1] : s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1)))))),
  inference(rectify,[],[f19])).
fof(f19,axiom,(
  ! [X19,X22] : s(bool,'const.prim_rec.<_2'(s('type.num.num',X19),s('type.num.num',X22))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X19))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X22)))))),
  file('thm.quantHeuristics.LIST_LENGTH_3|split|13','thm.numeral.numeral_lt|split|4')).
fof(f240,plain,(
  ( ! [X0,X1] : (s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1)))))) )),
  inference(cnf_transformation,[],[f125])).
fof(f125,plain,(
  ! [X0,X1] : s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1)))))),
  inference(rectify,[],[f33])).
fof(f33,axiom,(
  ! [X19,X22] : s(bool,'const.prim_rec.<_2'(s('type.num.num',X19),s('type.num.num',X22))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X19))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X22)))))),
  file('thm.quantHeuristics.LIST_LENGTH_3|split|13','thm.numeral.numeral_lt|split|6')).
fof(f242,plain,(
  ( ! [X0,X1] : (s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1)))))) )),
  inference(cnf_transformation,[],[f127])).
fof(f127,plain,(
  ! [X0,X1] : s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1)))))),
  inference(rectify,[],[f35])).
fof(f35,axiom,(
  ! [X19,X22] : s(bool,'const.prim_rec.<_2'(s('type.num.num',X19),s('type.num.num',X22))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X19))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X22)))))),
  file('thm.quantHeuristics.LIST_LENGTH_3|split|13','thm.numeral.numeral_lt|split|3')).
fof(f243,plain,(
  ( ! [X0,X1] : (s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))) )),
  inference(cnf_transformation,[],[f128])).
fof(f128,plain,(
  ! [X0,X1] : s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))),
  inference(rectify,[],[f45])).
fof(f45,axiom,(
  ! [X19,X22] : s(bool,'const.prim_rec.<_2'(s('type.num.num',X19),s('type.num.num',X22))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X19))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X22)))))),
  file('thm.quantHeuristics.LIST_LENGTH_3|split|13','thm.numeral.numeral_distrib|split|22')).
fof(f257,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1)))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X0))))) )),
  inference(cnf_transformation,[],[f169])).
fof(f169,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1)))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X0))))) & (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X0)))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1))))))))),
  inference(nnf_transformation,[],[f139])).
fof(f139,plain,(
  ! [X0,X1] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1)))))) <=> ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X0)))))),
  inference(flattening,[],[f138])).
fof(f138,plain,(
  ! [X0,X1] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1)))))) <=> ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X0)))))),
  inference(rectify,[],[f18])).
fof(f18,axiom,(
  ! [X19,X22] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X19))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X22)))))) <=> ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X22),s('type.num.num',X19)))))),
  file('thm.quantHeuristics.LIST_LENGTH_3|split|13','thm.numeral.numeral_lt|split|5')).
fof(f258,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1)))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X0))))) )),
  inference(cnf_transformation,[],[f169])).
fof(f2128,plain,(
  ( ! [X4,X3] : (s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',X4),s('type.num.num',X3))) | s(bool,'T_0') = s(bool,'const.arithmetic.>_2'(s('type.num.num',X3),s('type.num.num',X4)))) )),
  inference(superposition,[],[f233,f208])).
fof(f3537,plain,(
  ( ! [X21,X19,X20] : (s(bool,'const.prim_rec.<_2'(s('type.num.num',X20),s('type.num.num',X19))) = s(bool,sK11('const.arithmetic.>_2'(s('type.num.num',X19),s('type.num.num',X20)),X21,bool)) | ~p(s(bool,happ(s(fun(bool,bool),X21),s(bool,'const.prim_rec.<_2'(s('type.num.num',X20),s('type.num.num',X19))))))) )),
  inference(forward_demodulation,[],[f3492,f233])).
fof(f3492,plain,(
  ( ! [X21,X19,X20] : (~p(s(bool,happ(s(fun(bool,bool),X21),s(bool,'const.prim_rec.<_2'(s('type.num.num',X20),s('type.num.num',X19)))))) | s(bool,'const.arithmetic.>_2'(s('type.num.num',X19),s('type.num.num',X20))) = s(bool,sK11('const.arithmetic.>_2'(s('type.num.num',X19),s('type.num.num',X20)),X21,bool))) )),
  inference(superposition,[],[f222,f233])).
fof(f3653,plain,(
  ( ! [X2,X3] : (s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',X2),s('type.num.num',X3))) | s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X2))),s('type.num.num',X3)))) )),
  inference(superposition,[],[f236,f208])).
fof(f3675,plain,(
  ( ! [X21,X22,X20] : (s(bool,'const.prim_rec.<_2'(s('type.num.num',X20),s('type.num.num',X21))) = s(bool,sK11('const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X20))),s('type.num.num',X21)),X22,bool)) | ~p(s(bool,happ(s(fun(bool,bool),X22),s(bool,'const.prim_rec.<_2'(s('type.num.num',X20),s('type.num.num',X21))))))) )),
  inference(forward_demodulation,[],[f3663,f236])).
fof(f3663,plain,(
  ( ! [X21,X22,X20] : (~p(s(bool,happ(s(fun(bool,bool),X22),s(bool,'const.prim_rec.<_2'(s('type.num.num',X20),s('type.num.num',X21)))))) | s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X20))),s('type.num.num',X21))) = s(bool,sK11('const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X20))),s('type.num.num',X21)),X22,bool))) )),
  inference(superposition,[],[f222,f236])).
fof(f4091,plain,(
  ( ! [X4,X5] : (s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',X5),s('type.num.num',X4))) | s(bool,'T_0') = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X4))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X5)))))) )),
  inference(superposition,[],[f237,f208])).
fof(f4109,plain,(
  ( ! [X21,X22,X20] : (s(bool,'const.prim_rec.<_2'(s('type.num.num',X21),s('type.num.num',X20))) = s(bool,sK11('const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X20))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X21)))),X22,bool)) | ~p(s(bool,happ(s(fun(bool,bool),X22),s(bool,'const.prim_rec.<_2'(s('type.num.num',X21),s('type.num.num',X20))))))) )),
  inference(forward_demodulation,[],[f4100,f237])).
fof(f4100,plain,(
  ( ! [X21,X22,X20] : (~p(s(bool,happ(s(fun(bool,bool),X22),s(bool,'const.prim_rec.<_2'(s('type.num.num',X21),s('type.num.num',X20)))))) | s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X20))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X21))))) = s(bool,sK11('const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X20))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X21)))),X22,bool))) )),
  inference(superposition,[],[f222,f237])).
fof(f4438,plain,(
  ( ! [X2,X3] : (s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',X2),s('type.num.num',X3))) | s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X2))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X3)))))) )),
  inference(superposition,[],[f239,f208])).
fof(f4454,plain,(
  ( ! [X19,X20,X18] : (s(bool,'const.prim_rec.<_2'(s('type.num.num',X18),s('type.num.num',X19))) = s(bool,sK11('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X18))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X19)))),X20,bool)) | ~p(s(bool,happ(s(fun(bool,bool),X20),s(bool,'const.prim_rec.<_2'(s('type.num.num',X18),s('type.num.num',X19))))))) )),
  inference(forward_demodulation,[],[f4446,f239])).
fof(f4446,plain,(
  ( ! [X19,X20,X18] : (~p(s(bool,happ(s(fun(bool,bool),X20),s(bool,'const.prim_rec.<_2'(s('type.num.num',X18),s('type.num.num',X19)))))) | s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X18))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X19))))) = s(bool,sK11('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X18))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X19)))),X20,bool))) )),
  inference(superposition,[],[f222,f239])).
fof(f4535,plain,(
  ( ! [X2,X3] : (s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',X2),s('type.num.num',X3))) | s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X2))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X3)))))) )),
  inference(superposition,[],[f240,f208])).
fof(f4551,plain,(
  ( ! [X19,X20,X18] : (s(bool,'const.prim_rec.<_2'(s('type.num.num',X18),s('type.num.num',X19))) = s(bool,sK11('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X18))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X19)))),X20,bool)) | ~p(s(bool,happ(s(fun(bool,bool),X20),s(bool,'const.prim_rec.<_2'(s('type.num.num',X18),s('type.num.num',X19))))))) )),
  inference(forward_demodulation,[],[f4543,f240])).
fof(f4543,plain,(
  ( ! [X19,X20,X18] : (~p(s(bool,happ(s(fun(bool,bool),X20),s(bool,'const.prim_rec.<_2'(s('type.num.num',X18),s('type.num.num',X19)))))) | s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X18))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X19))))) = s(bool,sK11('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X18))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X19)))),X20,bool))) )),
  inference(superposition,[],[f222,f240])).
fof(f4851,plain,(
  ( ! [X2,X3] : (s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',X2),s('type.num.num',X3))) | s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X2))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X3)))))) )),
  inference(superposition,[],[f242,f208])).
fof(f4867,plain,(
  ( ! [X19,X20,X18] : (s(bool,'const.prim_rec.<_2'(s('type.num.num',X18),s('type.num.num',X19))) = s(bool,sK11('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X18))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X19)))),X20,bool)) | ~p(s(bool,happ(s(fun(bool,bool),X20),s(bool,'const.prim_rec.<_2'(s('type.num.num',X18),s('type.num.num',X19))))))) )),
  inference(forward_demodulation,[],[f4859,f242])).
fof(f4859,plain,(
  ( ! [X19,X20,X18] : (~p(s(bool,happ(s(fun(bool,bool),X20),s(bool,'const.prim_rec.<_2'(s('type.num.num',X18),s('type.num.num',X19)))))) | s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X18))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X19))))) = s(bool,sK11('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X18))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X19)))),X20,bool))) )),
  inference(superposition,[],[f222,f242])).
fof(f4974,plain,(
  ( ! [X2,X3] : (s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',X2),s('type.num.num',X3))) | s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X3)))))) )),
  inference(superposition,[],[f243,f208])).
fof(f4991,plain,(
  ( ! [X19,X20,X18] : (s(bool,'const.prim_rec.<_2'(s('type.num.num',X18),s('type.num.num',X19))) = s(bool,sK11('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X18))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X19)))),X20,bool)) | ~p(s(bool,happ(s(fun(bool,bool),X20),s(bool,'const.prim_rec.<_2'(s('type.num.num',X18),s('type.num.num',X19))))))) )),
  inference(forward_demodulation,[],[f4982,f243])).
fof(f4982,plain,(
  ( ! [X19,X20,X18] : (~p(s(bool,happ(s(fun(bool,bool),X20),s(bool,'const.prim_rec.<_2'(s('type.num.num',X18),s('type.num.num',X19)))))) | s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X18))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X19))))) = s(bool,sK11('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X18))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X19)))),X20,bool))) )),
  inference(superposition,[],[f222,f243])).
fof(f5344,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X0)))) | s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1)))))) )),
  inference(subsumption_resolution,[],[f5287,f179])).
fof(f5287,plain,(
  ( ! [X0,X1] : (p(s(bool,'F_0')) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X0)))) | s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1)))))) )),
  inference(superposition,[],[f258,f208])).
fof(f7190,plain,(
  ( ! [X45,X43,X41,X44,X42] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X41),s('type.num.num',X42)))) | p(s(bool,happ(s(fun(X43,bool),X44),s(X43,sK12('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X41))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X42)))),X44,X43))))) | ~p(s(bool,happ(s(fun(X43,bool),X44),s(X43,X45))))) )),
  inference(superposition,[],[f224,f242])).
fof(f7191,plain,(
  ( ! [X47,X50,X48,X46,X49] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X46),s('type.num.num',X47)))) | p(s(bool,happ(s(fun(X48,bool),X49),s(X48,sK12('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X46))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X47)))),X49,X48))))) | ~p(s(bool,happ(s(fun(X48,bool),X49),s(X48,X50))))) )),
  inference(superposition,[],[f224,f243])).
fof(f7192,plain,(
  ( ! [X54,X52,X55,X53,X51] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X51),s('type.num.num',X52)))) | p(s(bool,happ(s(fun(X53,bool),X54),s(X53,sK12('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X51))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X52)))),X54,X53))))) | ~p(s(bool,happ(s(fun(X53,bool),X54),s(X53,X55))))) )),
  inference(superposition,[],[f224,f239])).
fof(f7193,plain,(
  ( ! [X59,X57,X60,X58,X56] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X56),s('type.num.num',X57)))) | p(s(bool,happ(s(fun(X58,bool),X59),s(X58,sK12('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X56))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X57)))),X59,X58))))) | ~p(s(bool,happ(s(fun(X58,bool),X59),s(X58,X60))))) )),
  inference(superposition,[],[f224,f240])).
fof(f7198,plain,(
  ( ! [X80,X78,X76,X79,X77] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X77),s('type.num.num',X76)))) | p(s(bool,happ(s(fun(X78,bool),X79),s(X78,sK12('const.arithmetic.>_2'(s('type.num.num',X76),s('type.num.num',X77)),X79,X78))))) | ~p(s(bool,happ(s(fun(X78,bool),X79),s(X78,X80))))) )),
  inference(superposition,[],[f224,f233])).
fof(f7200,plain,(
  ( ! [X88,X87,X85,X89,X86] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X86),s('type.num.num',X85)))) | p(s(bool,happ(s(fun(X87,bool),X88),s(X87,sK12('const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X85))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X86)))),X88,X87))))) | ~p(s(bool,happ(s(fun(X87,bool),X88),s(X87,X89))))) )),
  inference(superposition,[],[f224,f237])).
fof(f7212,plain,(
  ( ! [X134,X132,X136,X135,X133] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X132),s('type.num.num',X133)))) | p(s(bool,happ(s(fun(X134,bool),X135),s(X134,sK12('const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X132))),s('type.num.num',X133)),X135,X134))))) | ~p(s(bool,happ(s(fun(X134,bool),X135),s(X134,X136))))) )),
  inference(superposition,[],[f224,f236])).
fof(f5231,plain,(
  ( ! [X6,X7,X5] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num',X5))))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X7)))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X7),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X5),s('type.num.num',X6))))))) )),
  inference(superposition,[],[f258,f235])).
fof(f5053,plain,(
  ( ! [X6,X7,X5] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num',X5))))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X7)))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X7),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X5),s('type.num.num',X6))))))) )),
  inference(superposition,[],[f257,f235])).
fof(f3621,plain,(
  ( ! [X0] : (s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X0))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X0)))) )),
  inference(superposition,[],[f236,f177])).
fof(f5261,plain,(
  ( ! [X6,X7,X5] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X7))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num',X5)))))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X5),s('type.num.num',X6))),s('type.num.num',X7))))) )),
  inference(superposition,[],[f258,f235])).
fof(f5083,plain,(
  ( ! [X6,X7,X5] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X7))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num',X5)))))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X5),s('type.num.num',X6))),s('type.num.num',X7))))) )),
  inference(superposition,[],[f257,f235])).
fof(f3622,plain,(
  ( ! [X2,X1] : (s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1))),s('type.num.num',X2))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1))),s('type.num.num',X2)))) )),
  inference(superposition,[],[f236,f197])).
fof(f3623,plain,(
  ( ! [X4,X3] : (s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X3))),s('type.num.num',X4))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X3))))),s('type.num.num',X4)))) )),
  inference(superposition,[],[f236,f199])).
fof(f3624,plain,(
  ( ! [X6,X5] : (s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X5))),s('type.num.num',X6))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X5))))),s('type.num.num',X6)))) )),
  inference(superposition,[],[f236,f202])).
fof(f7194,plain,(
  ( ! [X61,X64,X62,X63] : (~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X61)))) | p(s(bool,happ(s(fun(X62,bool),X63),s(X62,sK12('const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X61)))),X63,X62))))) | ~p(s(bool,happ(s(fun(X62,bool),X63),s(X62,X64))))) )),
  inference(superposition,[],[f224,f195])).
fof(f3533,plain,(
  ( ! [X14,X15] : (s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X14))) = s(bool,sK11('const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X14)))),X15,bool)) | ~p(s(bool,happ(s(fun(bool,bool),X15),s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X14))))))) )),
  inference(forward_demodulation,[],[f3489,f195])).
fof(f3489,plain,(
  ( ! [X14,X15] : (~p(s(bool,happ(s(fun(bool,bool),X15),s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X14)))))) | s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X14))))) = s(bool,sK11('const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X14)))),X15,bool))) )),
  inference(superposition,[],[f222,f195])).
fof(f734,plain,(
  ( ! [X1] : (s(bool,'F_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X1))) | s(bool,'T_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))) )),
  inference(superposition,[],[f195,f208])).
fof(f195,plain,(
  ( ! [X0] : (s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X0))) = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))) )),
  inference(cnf_transformation,[],[f89])).
fof(f89,plain,(
  ! [X0] : s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X0))) = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))),
  inference(rectify,[],[f12])).
fof(f12,axiom,(
  ! [X19] : s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X19))) = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X19)))))),
  file('thm.quantHeuristics.LIST_LENGTH_3|split|13','thm.numeral.numeral_distrib|split|33')).
fof(f221,plain,(
  ( ! [X4,X2,X0,X1] : (~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X4)))) | p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2)))) | s(X0,X2) != s(X0,X4)) )),
  inference(cnf_transformation,[],[f160])).
fof(f160,plain,(
  ! [X0,X1,X2] : ((! [X4] : (s(X0,X2) != s(X0,X4) | ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X4))))) | p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2))))) & (~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2)))) | (s(X0,X2) = s(X0,sK11(X2,X1,X0)) & p(s(bool,happ(s(fun(X0,bool),X1),s(X0,sK11(X2,X1,X0))))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK11])],[f159])).
fof(f159,plain,(
  ! [X0,X1,X2] : ((! [X4] : (s(X0,X2) != s(X0,X4) | ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X4))))) | p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2))))) & (~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2)))) | ? [X3] : (s(X0,X2) = s(X0,X3) & p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3)))))))),
  inference(rectify,[],[f158])).
fof(f158,plain,(
  ! [X0,X1,X2] : ((! [X3] : (s(X0,X2) != s(X0,X3) | ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3))))) | p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2))))) & (~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2)))) | ? [X3] : (s(X0,X2) = s(X0,X3) & p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3)))))))),
  inference(nnf_transformation,[],[f112])).
fof(f112,plain,(
  ! [X0,X1,X2] : (? [X3] : (s(X0,X2) = s(X0,X3) & p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3))))) <=> p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2)))))),
  inference(flattening,[],[f111])).
fof(f111,plain,(
  ! [X0] : ! [X1,X2] : (? [X3] : (s(X0,X2) = s(X0,X3) & p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3))))) <=> p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2)))))),
  inference(rectify,[],[f63])).
fof(f63,axiom,(
  ! [X6] : ! [X25,X26] : (? [X7] : (s(X6,X7) = s(X6,X26) & p(s(bool,happ(s(fun(X6,bool),X25),s(X6,X7))))) <=> p(s(bool,happ(s(fun(X6,bool),X25),s(X6,X26)))))),
  file('thm.quantHeuristics.LIST_LENGTH_3|split|13','thm.bool.UNWIND_THM2')).
fof(f222,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2)))) | s(X0,X2) = s(X0,sK11(X2,X1,X0))) )),
  inference(cnf_transformation,[],[f160])).
fof(f223,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,happ(s(fun(X0,bool),X1),s(X0,sK11(X2,X1,X0))))) | ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2))))) )),
  inference(cnf_transformation,[],[f160])).
fof(f224,plain,(
  ( ! [X6,X2,X0,X1] : (~p(s(bool,X2)) | p(s(bool,happ(s(fun(X0,bool),X1),s(X0,sK12(X2,X1,X0))))) | ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X6))))) )),
  inference(cnf_transformation,[],[f164])).
fof(f164,plain,(
  ! [X0,X1,X2] : ((! [X6] : (~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X6)))) | ~p(s(bool,X2))) | (p(s(bool,happ(s(fun(X0,bool),X1),s(X0,sK12(X2,X1,X0))))) & p(s(bool,X2)))) & (! [X4] : ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X4)))) | ~p(s(bool,X2)) | (p(s(bool,happ(s(fun(X0,bool),X1),s(X0,sK13(X2,X1,X0))))) & p(s(bool,X2)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK12,sK13])],[f163])).
fof(f163,plain,(
  ! [X0,X1,X2] : ((! [X6] : (~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X6)))) | ~p(s(bool,X2))) | (? [X5] : p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X5)))) & p(s(bool,X2)))) & (! [X4] : ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X4)))) | ~p(s(bool,X2)) | ? [X3] : (p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3)))) & p(s(bool,X2)))))),
  inference(rectify,[],[f162])).
fof(f162,plain,(
  ! [X0,X1,X2] : ((! [X3] : (~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3)))) | ~p(s(bool,X2))) | (? [X4] : p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X4)))) & p(s(bool,X2)))) & (! [X4] : ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X4)))) | ~p(s(bool,X2)) | ? [X3] : (p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3)))) & p(s(bool,X2)))))),
  inference(flattening,[],[f161])).
fof(f161,plain,(
  ! [X0,X1,X2] : ((! [X3] : (~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3)))) | ~p(s(bool,X2))) | (? [X4] : p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X4)))) & p(s(bool,X2)))) & ((! [X4] : ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X4)))) | ~p(s(bool,X2))) | ? [X3] : (p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3)))) & p(s(bool,X2)))))),
  inference(nnf_transformation,[],[f114])).
fof(f114,plain,(
  ! [X0,X1,X2] : (? [X3] : (p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3)))) & p(s(bool,X2))) <=> (? [X4] : p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X4)))) & p(s(bool,X2))))),
  inference(flattening,[],[f113])).
fof(f113,plain,(
  ! [X0] : ! [X1,X2] : (? [X3] : (p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3)))) & p(s(bool,X2))) <=> (? [X4] : p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X4)))) & p(s(bool,X2))))),
  inference(rectify,[],[f66])).
fof(f66,axiom,(
  ! [X6] : ! [X25,X27] : (? [X7] : (p(s(bool,happ(s(fun(X6,bool),X25),s(X6,X7)))) & p(s(bool,X27))) <=> (? [X7] : p(s(bool,happ(s(fun(X6,bool),X25),s(X6,X7)))) & p(s(bool,X27))))),
  file('thm.quantHeuristics.LIST_LENGTH_3|split|13','thm.bool.LEFT_EXISTS_AND_THM')).
fof(f226,plain,(
  ( ! [X4,X2,X0,X1] : (~p(s(bool,X2)) | p(s(bool,happ(s(fun(X0,bool),X1),s(X0,sK13(X2,X1,X0))))) | ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X4))))) )),
  inference(cnf_transformation,[],[f164])).
fof(f3482,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3)))) | s(X0,X3) = s(X0,sK11(X3,'const.bool.COND_3'(s(bool,'T_0'),s(fun(X0,bool),X1),s(fun(X0,bool),X2)),X0))) )),
  inference(superposition,[],[f222,f217])).
fof(f3529,plain,(
  ( ! [X2,X0,X3,X1] : (s(X0,X1) = s(X0,sK11('const.bool.COND_3'(s(bool,'T_0'),s(X0,X1),s(X0,X2)),X3,X0)) | ~p(s(bool,happ(s(fun(X0,bool),X3),s(X0,X1))))) )),
  inference(forward_demodulation,[],[f3483,f217])).
fof(f3483,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,happ(s(fun(X0,bool),X3),s(X0,X1)))) | s(X0,'const.bool.COND_3'(s(bool,'T_0'),s(X0,X1),s(X0,X2))) = s(X0,sK11('const.bool.COND_3'(s(bool,'T_0'),s(X0,X1),s(X0,X2)),X3,X0))) )),
  inference(superposition,[],[f222,f217])).
fof(f5369,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3)))) | p(s(bool,happ(s(fun(X0,bool),X1),s(X0,sK11(X3,'const.bool.COND_3'(s(bool,'T_0'),s(fun(X0,bool),X1),s(fun(X0,bool),X2)),X0)))))) )),
  inference(forward_demodulation,[],[f5366,f217])).
fof(f5366,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,happ(s(fun(X0,bool),X1),s(X0,sK11(X3,'const.bool.COND_3'(s(bool,'T_0'),s(fun(X0,bool),X1),s(fun(X0,bool),X2)),X0))))) | ~p(s(bool,happ(s(fun(X0,bool),'const.bool.COND_3'(s(bool,'T_0'),s(fun(X0,bool),X1),s(fun(X0,bool),X2))),s(X0,X3))))) )),
  inference(superposition,[],[f223,f217])).
fof(f5370,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2)))) | s(bool,'T_0') = s(bool,happ(s(fun(X0,bool),X1),s(X0,sK11(X2,X1,X0))))) )),
  inference(subsumption_resolution,[],[f5368,f179])).
fof(f5368,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,'F_0')) | ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2)))) | s(bool,'T_0') = s(bool,happ(s(fun(X0,bool),X1),s(X0,sK11(X2,X1,X0))))) )),
  inference(superposition,[],[f223,f208])).
fof(f7201,plain,(
  ( ! [X92,X90,X93,X91] : (~p(s(bool,'const.arithmetic.ODD_1'(s('type.num.num',X90)))) | p(s(bool,happ(s(fun(X91,bool),X92),s(X91,sK12('const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X90)))),X92,X91))))) | ~p(s(bool,happ(s(fun(X91,bool),X92),s(X91,X93))))) )),
  inference(superposition,[],[f224,f193])).
fof(f7206,plain,(
  ( ! [X111,X109,X112,X110,X108] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X108),s('type.num.num',X109)))) | p(s(bool,happ(s(fun(X110,bool),X111),s(X110,sK12('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X108))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X109)))),X111,X110))))) | ~p(s(bool,happ(s(fun(X110,bool),X111),s(X110,X112))))) )),
  inference(superposition,[],[f224,f241])).
fof(f7216,plain,(
  ( ! [X152,X151,X149,X150,X148] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X149),s('type.num.num',X148)))) | p(s(bool,happ(s(fun(X150,bool),X151),s(X150,sK12('const.arithmetic.>=_2'(s('type.num.num',X148),s('type.num.num',X149)),X151,X150))))) | ~p(s(bool,happ(s(fun(X150,bool),X151),s(X150,X152))))) )),
  inference(superposition,[],[f224,f234])).
fof(f7217,plain,(
  ( ! [X156,X154,X157,X155,X153] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X154),s('type.num.num',X153)))) | p(s(bool,happ(s(fun(X155,bool),X156),s(X155,sK12('const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X153))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X154)))),X156,X155))))) | ~p(s(bool,happ(s(fun(X155,bool),X156),s(X155,X157))))) )),
  inference(superposition,[],[f224,f238])).
fof(f7219,plain,(
  ( ! [X167,X165,X163,X166,X164] : (~p(s(bool,X163)) | p(s(bool,happ(s(fun(X165,bool),X166),s(X165,sK12('const.bool.COND_3'(s(bool,'T_0'),s(bool,X163),s(bool,X164)),X166,X165))))) | ~p(s(bool,happ(s(fun(X165,bool),X166),s(X165,X167))))) )),
  inference(superposition,[],[f224,f217])).
fof(f7225,plain,(
  ( ! [X30,X31,X29,X32] : (p(s(bool,happ(s(fun(X30,bool),X31),s(X30,sK12('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X29)))),X31,X30))))) | ~p(s(bool,happ(s(fun(X30,bool),X31),s(X30,X32))))) )),
  inference(subsumption_resolution,[],[f7187,f174])).
fof(f7187,plain,(
  ( ! [X30,X31,X29,X32] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun(X30,bool),X31),s(X30,sK12('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X29)))),X31,X30))))) | ~p(s(bool,happ(s(fun(X30,bool),X31),s(X30,X32))))) )),
  inference(superposition,[],[f224,f192])).
fof(f7226,plain,(
  ( ! [X35,X33,X36,X34] : (p(s(bool,happ(s(fun(X34,bool),X35),s(X34,sK12('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X33)))),X35,X34))))) | ~p(s(bool,happ(s(fun(X34,bool),X35),s(X34,X36))))) )),
  inference(subsumption_resolution,[],[f7188,f174])).
fof(f7188,plain,(
  ( ! [X35,X33,X36,X34] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun(X34,bool),X35),s(X34,sK12('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X33)))),X35,X34))))) | ~p(s(bool,happ(s(fun(X34,bool),X35),s(X34,X36))))) )),
  inference(superposition,[],[f224,f194])).
fof(f3485,plain,(
  ( ! [X6,X7] : (~p(s(bool,happ(s(fun(bool,bool),X7),s(bool,X6)))) | s(bool,'F_0') = s(bool,sK11('F_0',X7,bool)) | s(bool,'T_0') = s(bool,X6)) )),
  inference(superposition,[],[f222,f208])).
fof(f5367,plain,(
  ( ! [X0,X1] : (p(s(bool,happ(s(fun(bool,bool),X1),s(bool,'F_0')))) | ~p(s(bool,happ(s(fun(bool,bool),X1),s(bool,X0)))) | s(bool,'T_0') = s(bool,sK11(X0,X1,bool))) )),
  inference(superposition,[],[f223,f208])).
fof(f6758,plain,(
  ( ! [X17,X15,X16] : (~p(s(bool,happ(s(fun(bool,bool),X16),s(bool,'F_0')))) | p(s(bool,happ(s(fun(bool,bool),X16),s(bool,X17)))) | s(bool,X15) != s(bool,X17) | s(bool,'T_0') = s(bool,X15)) )),
  inference(superposition,[],[f221,f208])).
fof(f6759,plain,(
  ( ! [X19,X20,X18] : (~p(s(bool,happ(s(fun(bool,bool),X19),s(bool,X18)))) | p(s(bool,happ(s(fun(bool,bool),X19),s(bool,X20)))) | s(bool,'F_0') != s(bool,X20) | s(bool,'T_0') = s(bool,X18)) )),
  inference(superposition,[],[f221,f208])).
fof(f3531,plain,(
  ( ! [X10,X11] : (s(bool,'T_0') = s(bool,sK11('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X10)))),X11,bool)) | ~p(s(bool,happ(s(fun(bool,bool),X11),s(bool,'T_0'))))) )),
  inference(forward_demodulation,[],[f3487,f192])).
fof(f3487,plain,(
  ( ! [X10,X11] : (~p(s(bool,happ(s(fun(bool,bool),X11),s(bool,'T_0')))) | s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X10))))) = s(bool,sK11('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X10)))),X11,bool))) )),
  inference(superposition,[],[f222,f192])).
fof(f3532,plain,(
  ( ! [X12,X13] : (s(bool,'T_0') = s(bool,sK11('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X12)))),X13,bool)) | ~p(s(bool,happ(s(fun(bool,bool),X13),s(bool,'T_0'))))) )),
  inference(forward_demodulation,[],[f3488,f194])).
fof(f3488,plain,(
  ( ! [X12,X13] : (~p(s(bool,happ(s(fun(bool,bool),X13),s(bool,'T_0')))) | s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X12))))) = s(bool,sK11('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X12)))),X13,bool))) )),
  inference(superposition,[],[f222,f194])).
fof(f3484,plain,(
  ( ! [X4,X5] : (~p(s(bool,happ(s(fun(bool,bool),X5),s(bool,'F_0')))) | s(bool,X4) = s(bool,sK11(X4,X5,bool)) | s(bool,'T_0') = s(bool,X4)) )),
  inference(superposition,[],[f222,f208])).
fof(f3530,plain,(
  ( ! [X8,X9] : (s(bool,'F_0') = s(bool,sK11('const.prim_rec.<_2'(s('type.num.num',X8),s('type.num.num','const.arithmetic.ZERO_0')),X9,bool)) | ~p(s(bool,happ(s(fun(bool,bool),X9),s(bool,'F_0'))))) )),
  inference(forward_demodulation,[],[f3486,f184])).
fof(f3486,plain,(
  ( ! [X8,X9] : (~p(s(bool,happ(s(fun(bool,bool),X9),s(bool,'F_0')))) | s(bool,'const.prim_rec.<_2'(s('type.num.num',X8),s('type.num.num','const.arithmetic.ZERO_0'))) = s(bool,sK11('const.prim_rec.<_2'(s('type.num.num',X8),s('type.num.num','const.arithmetic.ZERO_0')),X9,bool))) )),
  inference(superposition,[],[f222,f184])).
fof(f3538,plain,(
  ( ! [X23,X22] : (s(bool,'const.arithmetic.ODD_1'(s('type.num.num',X22))) = s(bool,sK11('const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X22)))),X23,bool)) | ~p(s(bool,happ(s(fun(bool,bool),X23),s(bool,'const.arithmetic.ODD_1'(s('type.num.num',X22))))))) )),
  inference(forward_demodulation,[],[f3493,f193])).
fof(f3493,plain,(
  ( ! [X23,X22] : (~p(s(bool,happ(s(fun(bool,bool),X23),s(bool,'const.arithmetic.ODD_1'(s('type.num.num',X22)))))) | s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X22))))) = s(bool,sK11('const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X22)))),X23,bool))) )),
  inference(superposition,[],[f222,f193])).
fof(f4747,plain,(
  ( ! [X19,X20,X18] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num',X18),s('type.num.num',X19))) = s(bool,sK11('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X18))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X19)))),X20,bool)) | ~p(s(bool,happ(s(fun(bool,bool),X20),s(bool,'const.arithmetic.<=_2'(s('type.num.num',X18),s('type.num.num',X19))))))) )),
  inference(forward_demodulation,[],[f4735,f241])).
fof(f4735,plain,(
  ( ! [X19,X20,X18] : (~p(s(bool,happ(s(fun(bool,bool),X20),s(bool,'const.arithmetic.<=_2'(s('type.num.num',X18),s('type.num.num',X19)))))) | s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X18))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X19))))) = s(bool,sK11('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X18))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X19)))),X20,bool))) )),
  inference(superposition,[],[f222,f241])).
fof(f4280,plain,(
  ( ! [X21,X22,X20] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num',X21),s('type.num.num',X20))) = s(bool,sK11('const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X20))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X21)))),X22,bool)) | ~p(s(bool,happ(s(fun(bool,bool),X22),s(bool,'const.arithmetic.<=_2'(s('type.num.num',X21),s('type.num.num',X20))))))) )),
  inference(forward_demodulation,[],[f4279,f241])).
fof(f4279,plain,(
  ( ! [X21,X22,X20] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X21))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X20))))) = s(bool,sK11('const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X20))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X21)))),X22,bool)) | ~p(s(bool,happ(s(fun(bool,bool),X22),s(bool,'const.arithmetic.<=_2'(s('type.num.num',X21),s('type.num.num',X20))))))) )),
  inference(forward_demodulation,[],[f4263,f234])).
fof(f4263,plain,(
  ( ! [X21,X22,X20] : (~p(s(bool,happ(s(fun(bool,bool),X22),s(bool,'const.arithmetic.<=_2'(s('type.num.num',X21),s('type.num.num',X20)))))) | s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X20))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X21))))) = s(bool,sK11('const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X20))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X21)))),X22,bool))) )),
  inference(superposition,[],[f222,f238])).
fof(f3545,plain,(
  ( ! [X33,X31,X32] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num',X32),s('type.num.num',X31))) = s(bool,sK11('const.arithmetic.>=_2'(s('type.num.num',X31),s('type.num.num',X32)),X33,bool)) | ~p(s(bool,happ(s(fun(bool,bool),X33),s(bool,'const.arithmetic.<=_2'(s('type.num.num',X32),s('type.num.num',X31))))))) )),
  inference(forward_demodulation,[],[f3499,f234])).
fof(f3499,plain,(
  ( ! [X33,X31,X32] : (~p(s(bool,happ(s(fun(bool,bool),X33),s(bool,'const.arithmetic.<=_2'(s('type.num.num',X32),s('type.num.num',X31)))))) | s(bool,'const.arithmetic.>=_2'(s('type.num.num',X31),s('type.num.num',X32))) = s(bool,sK11('const.arithmetic.>=_2'(s('type.num.num',X31),s('type.num.num',X32)),X33,bool))) )),
  inference(superposition,[],[f222,f234])).
fof(f6796,plain,(
  ( ! [X134,X132,X135,X133] : (~p(s(bool,happ(s(fun('type.num.num',bool),X134),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X133),s('type.num.num',X132)))))) | p(s(bool,happ(s(fun('type.num.num',bool),X134),s('type.num.num',X135)))) | s('type.num.num',X135) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X132),s('type.num.num',X133)))) )),
  inference(superposition,[],[f221,f235])).
fof(f3566,plain,(
  ( ! [X74,X73] : (s('type.num.num',X73) = s('type.num.num',sK11('const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X73),s('type.num.num','const.arithmetic.ZERO_0')),X74,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X74),s('type.num.num',X73))))) )),
  inference(forward_demodulation,[],[f3522,f196])).
fof(f3522,plain,(
  ( ! [X74,X73] : (~p(s(bool,happ(s(fun('type.num.num',bool),X74),s('type.num.num',X73)))) | s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X73),s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num',sK11('const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X73),s('type.num.num','const.arithmetic.ZERO_0')),X74,'type.num.num'))) )),
  inference(superposition,[],[f222,f196])).
fof(f3567,plain,(
  ( ! [X76,X77,X75] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',sK11('const.numeral.iSUB_3'(s(bool,X75),s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X76)),X77,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X77),s('type.num.num','const.arithmetic.ZERO_0'))))) )),
  inference(forward_demodulation,[],[f3523,f232])).
fof(f3523,plain,(
  ( ! [X76,X77,X75] : (~p(s(bool,happ(s(fun('type.num.num',bool),X77),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.numeral.iSUB_3'(s(bool,X75),s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X76))) = s('type.num.num',sK11('const.numeral.iSUB_3'(s(bool,X75),s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X76)),X77,'type.num.num'))) )),
  inference(superposition,[],[f222,f232])).
fof(f3562,plain,(
  ( ! [X66] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num',sK11('const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),X66,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X66),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) )),
  inference(forward_demodulation,[],[f3518,f177])).
fof(f3518,plain,(
  ( ! [X66] : (~p(s(bool,happ(s(fun('type.num.num',bool),X66),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num',sK11('const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),X66,'type.num.num'))) )),
  inference(superposition,[],[f222,f177])).
fof(f3565,plain,(
  ( ! [X72,X71] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X71))))) = s('type.num.num',sK11('const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X71)))),X72,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X72),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X71))))))))) )),
  inference(forward_demodulation,[],[f3521,f202])).
fof(f3521,plain,(
  ( ! [X72,X71] : (~p(s(bool,happ(s(fun('type.num.num',bool),X72),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X71)))))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X71))))) = s('type.num.num',sK11('const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X71)))),X72,'type.num.num'))) )),
  inference(superposition,[],[f222,f202])).
fof(f6355,plain,(
  ( ! [X206,X204,X205] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X204),s('type.num.num',X205))))) = s('type.num.num',sK11('const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X204))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X205)))),X206,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X206),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X204),s('type.num.num',X205))))))))) )),
  inference(forward_demodulation,[],[f6335,f246])).
fof(f6335,plain,(
  ( ! [X206,X204,X205] : (~p(s(bool,happ(s(fun('type.num.num',bool),X206),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X204),s('type.num.num',X205)))))))) | s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X204))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X205))))) = s('type.num.num',sK11('const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X204))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X205)))),X206,'type.num.num'))) )),
  inference(superposition,[],[f222,f246])).
fof(f5605,plain,(
  ( ! [X191,X192,X193] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X191),s('type.num.num',X192))))) = s('type.num.num',sK11('const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X191))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X192)))),X193,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X193),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X191),s('type.num.num',X192))))))))) )),
  inference(forward_demodulation,[],[f5588,f244])).
fof(f5588,plain,(
  ( ! [X191,X192,X193] : (~p(s(bool,happ(s(fun('type.num.num',bool),X193),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X191),s('type.num.num',X192)))))))) | s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X191))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X192))))) = s('type.num.num',sK11('const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X191))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X192)))),X193,'type.num.num'))) )),
  inference(superposition,[],[f222,f244])).
fof(f5997,plain,(
  ( ! [X198,X199,X197] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X197),s('type.num.num',X198))))) = s('type.num.num',sK11('const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X197))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X198)))),X199,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X199),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X197),s('type.num.num',X198))))))))) )),
  inference(forward_demodulation,[],[f5978,f245])).
fof(f5978,plain,(
  ( ! [X198,X199,X197] : (~p(s(bool,happ(s(fun('type.num.num',bool),X199),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X197),s('type.num.num',X198)))))))) | s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X197))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X198))))) = s('type.num.num',sK11('const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X197))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X198)))),X199,'type.num.num'))) )),
  inference(superposition,[],[f222,f245])).
fof(f3564,plain,(
  ( ! [X70,X69] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X69))))) = s('type.num.num',sK11('const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X69)))),X70,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X70),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X69))))))))) )),
  inference(forward_demodulation,[],[f3520,f199])).
fof(f3520,plain,(
  ( ! [X70,X69] : (~p(s(bool,happ(s(fun('type.num.num',bool),X70),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X69)))))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X69))))) = s('type.num.num',sK11('const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X69)))),X70,'type.num.num'))) )),
  inference(superposition,[],[f222,f199])).
fof(f3570,plain,(
  ( ! [X81,X82] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X81))))) = s('type.num.num',sK11('const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X81)))),X82,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X82),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X81))))))))) )),
  inference(forward_demodulation,[],[f3526,f198])).
fof(f3526,plain,(
  ( ! [X81,X82] : (~p(s(bool,happ(s(fun('type.num.num',bool),X82),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X81)))))))) | s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X81))))) = s('type.num.num',sK11('const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X81)))),X82,'type.num.num'))) )),
  inference(superposition,[],[f222,f198])).
fof(f3504,plain,(
  ( ! [X39,X41,X40] : (~p(s(bool,happ(s(fun('type.num.num',bool),X41),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X40),s('type.num.num',X39)))))) | s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X39),s('type.num.num',X40))) = s('type.num.num',sK11('const.arithmetic.+_2'(s('type.num.num',X39),s('type.num.num',X40)),X41,'type.num.num'))) )),
  inference(superposition,[],[f222,f235])).
fof(f3563,plain,(
  ( ! [X68,X67] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X67))) = s('type.num.num',sK11('const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X67)))),X68,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X68),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X67))))))) )),
  inference(forward_demodulation,[],[f3519,f197])).
fof(f3519,plain,(
  ( ! [X68,X67] : (~p(s(bool,happ(s(fun('type.num.num',bool),X68),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X67)))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X67))))) = s('type.num.num',sK11('const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X67)))),X68,'type.num.num'))) )),
  inference(superposition,[],[f222,f197])).
fof(f3568,plain,(
  ( ! [X78,X79] : (s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X78))) = s('type.num.num',sK11('const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X78))),s('type.num.num','const.arithmetic.ZERO_0')),X79,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X79),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X78))))))) )),
  inference(forward_demodulation,[],[f3524,f207])).
fof(f3524,plain,(
  ( ! [X78,X79] : (~p(s(bool,happ(s(fun('type.num.num',bool),X79),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X78)))))) | s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X78))),s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num',sK11('const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X78))),s('type.num.num','const.arithmetic.ZERO_0')),X79,'type.num.num'))) )),
  inference(superposition,[],[f222,f207])).
fof(f692,plain,(
  ( ! [X1] : (s(bool,'F_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num',X1))) | s(bool,'T_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))) )),
  inference(superposition,[],[f193,f208])).
fof(f193,plain,(
  ( ! [X0] : (s(bool,'const.arithmetic.ODD_1'(s('type.num.num',X0))) = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))) )),
  inference(cnf_transformation,[],[f87])).
fof(f87,plain,(
  ! [X0] : s(bool,'const.arithmetic.ODD_1'(s('type.num.num',X0))) = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))),
  inference(rectify,[],[f39])).
fof(f39,axiom,(
  ! [X19] : s(bool,'const.arithmetic.ODD_1'(s('type.num.num',X19))) = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X19)))))),
  file('thm.quantHeuristics.LIST_LENGTH_3|split|13','thm.numeral.numeral_distrib|split|32')).
fof(f234,plain,(
  ( ! [X0,X1] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0))) = s(bool,'const.arithmetic.>=_2'(s('type.num.num',X0),s('type.num.num',X1)))) )),
  inference(cnf_transformation,[],[f119])).
fof(f119,plain,(
  ! [X0,X1] : s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0))) = s(bool,'const.arithmetic.>=_2'(s('type.num.num',X0),s('type.num.num',X1)))),
  inference(rectify,[],[f58])).
fof(f58,axiom,(
  ! [X19,X22] : s(bool,'const.arithmetic.<=_2'(s('type.num.num',X22),s('type.num.num',X19))) = s(bool,'const.arithmetic.>=_2'(s('type.num.num',X19),s('type.num.num',X22)))),
  file('thm.quantHeuristics.LIST_LENGTH_3|split|13','thm.arithmetic.GREATER_EQ')).
fof(f238,plain,(
  ( ! [X0,X1] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0))) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))) )),
  inference(cnf_transformation,[],[f123])).
fof(f123,plain,(
  ! [X0,X1] : s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0))) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))),
  inference(rectify,[],[f25])).
fof(f25,axiom,(
  ! [X19,X22] : s(bool,'const.arithmetic.<=_2'(s('type.num.num',X22),s('type.num.num',X19))) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X19))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X22)))))),
  file('thm.quantHeuristics.LIST_LENGTH_3|split|13','thm.numeral.numeral_distrib|split|31')).
fof(f241,plain,(
  ( ! [X0,X1] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))) )),
  inference(cnf_transformation,[],[f126])).
fof(f126,plain,(
  ! [X0,X1] : s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))),
  inference(rectify,[],[f41])).
fof(f41,axiom,(
  ! [X19,X22] : s(bool,'const.arithmetic.<=_2'(s('type.num.num',X19),s('type.num.num',X22))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X19))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X22)))))),
  file('thm.quantHeuristics.LIST_LENGTH_3|split|13','thm.numeral.numeral_distrib|split|28')).
fof(f2243,plain,(
  ( ! [X4,X3] : (s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',X4),s('type.num.num',X3))) | s(bool,'T_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num',X3),s('type.num.num',X4)))) )),
  inference(superposition,[],[f234,f208])).
fof(f4254,plain,(
  ( ! [X4,X5] : (s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',X5),s('type.num.num',X4))) | s(bool,'T_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X4))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X5)))))) )),
  inference(superposition,[],[f238,f208])).
fof(f4727,plain,(
  ( ! [X2,X3] : (s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',X2),s('type.num.num',X3))) | s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X3)))))) )),
  inference(superposition,[],[f241,f208])).
fof(f6289,plain,(
  ( ! [X105,X106,X104] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X106))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X104),s('type.num.num',X105))))))) | s('type.num.num',X106) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X104))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X105)))))) )),
  inference(superposition,[],[f255,f246])).
fof(f5932,plain,(
  ( ! [X99,X97,X98] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X99))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X97),s('type.num.num',X98))))))) | s('type.num.num',X99) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X97))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X98)))))) )),
  inference(superposition,[],[f255,f245])).
fof(f5640,plain,(
  ( ! [X4,X5] : (s(bool,X5) = s(bool,'const.prim_rec.<_2'(s('type.num.num',X4),s('type.num.num','const.arithmetic.ZERO_0'))) | s(bool,'T_0') = s(bool,X5)) )),
  inference(subsumption_resolution,[],[f5611,f179])).
fof(f5611,plain,(
  ( ! [X4,X5] : (p(s(bool,'F_0')) | s(bool,X5) = s(bool,'const.prim_rec.<_2'(s('type.num.num',X4),s('type.num.num','const.arithmetic.ZERO_0'))) | s(bool,'T_0') = s(bool,X5)) )),
  inference(superposition,[],[f428,f184])).
fof(f5542,plain,(
  ( ! [X92,X93,X91] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X93))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X91),s('type.num.num',X92))))))) | s('type.num.num',X93) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X91))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X92)))))) )),
  inference(superposition,[],[f255,f244])).
fof(f3421,plain,(
  ( ! [X24,X25] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X25))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X24))))) | s('type.num.num',X25) = s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X24))),s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(superposition,[],[f255,f207])).
fof(f3374,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X1))) = s('type.num.num','const.numeral.iSUB_3'(s(bool,X0),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1))),s('type.num.num','const.arithmetic.ZERO_0'))) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f207,f208])).
fof(f3089,plain,(
  ( ! [X6,X4,X5] : (s('type.num.num',X6) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X5),s('type.num.num',X4))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X6))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X4),s('type.num.num',X5)))))) )),
  inference(superposition,[],[f256,f235])).
fof(f3082,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X0)))))) )),
  inference(unit_resulting_resolution,[],[f235,f256])).
fof(f2830,plain,(
  ( ! [X47,X45,X46] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X45))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X47))) | s('type.num.num',X47) = s('type.num.num','const.bool.COND_3'(s(bool,'T_0'),s('type.num.num',X45),s('type.num.num',X46)))) )),
  inference(superposition,[],[f255,f217])).
fof(f2826,plain,(
  ( ! [X37,X38] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X37))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X38))) | s('type.num.num',X38) = s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X37),s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(superposition,[],[f255,f196])).
fof(f2823,plain,(
  ( ! [X31,X32] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X32))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X31))))) | s('type.num.num',X32) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X31)))))) )),
  inference(superposition,[],[f255,f197])).
fof(f2809,plain,(
  ( ! [X6,X4,X5] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X6))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X5),s('type.num.num',X4))))) | s('type.num.num',X6) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X4),s('type.num.num',X5)))) )),
  inference(superposition,[],[f255,f235])).
fof(f1165,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') != s('type.num.num',X0) | s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) )),
  inference(subsumption_resolution,[],[f1121,f179])).
fof(f1121,plain,(
  ( ! [X0] : (p(s(bool,'F_0')) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X0) | s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f270,f208])).
fof(f1153,plain,(
  ( ! [X4] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X4),s('type.num.num','const.num.|48|_0')))) )),
  inference(subsumption_resolution,[],[f1152,f179])).
fof(f1152,plain,(
  ( ! [X4] : (p(s(bool,'F_0')) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X4),s('type.num.num','const.num.|48|_0')))) )),
  inference(forward_demodulation,[],[f1151,f191])).
fof(f1151,plain,(
  ( ! [X4] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X4),s('type.num.num','const.num.|48|_0')))) )),
  inference(forward_demodulation,[],[f1111,f236])).
fof(f1111,plain,(
  ( ! [X4] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.num.|48|_0')))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X4),s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f270,f268])).
fof(f1143,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  inference(subsumption_resolution,[],[f1142,f179])).
fof(f1142,plain,(
  p(s(bool,'F_0')) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  inference(forward_demodulation,[],[f1141,f191])).
fof(f1141,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  inference(forward_demodulation,[],[f1105,f236])).
fof(f1105,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.num.|48|_0')))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  inference(superposition,[],[f270,f178])).
fof(f979,plain,(
  ( ! [X12,X11] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X11))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.bool.COND_3'(s(bool,'T_0'),s('type.num.num',X11),s('type.num.num',X12)))) )),
  inference(superposition,[],[f209,f217])).
fof(f976,plain,(
  ( ! [X8] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X8))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X8),s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(superposition,[],[f209,f196])).
fof(f975,plain,(
  ( ! [X7] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X7))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X7)))))) )),
  inference(superposition,[],[f209,f197])).
fof(f969,plain,(
  ( ! [X2] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X2),s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f209,f186])).
fof(f966,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f209,f187])).
fof(f854,plain,(
  ( ! [X4,X3] : (s(bool,'F_0') = s(bool,X3) | s(bool,'T_0') = s(bool,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X3),s(bool,X4)))) )),
  inference(superposition,[],[f217,f208])).
fof(f733,plain,(
  s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))),
  inference(superposition,[],[f195,f178])).
fof(f691,plain,(
  s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))),
  inference(superposition,[],[f193,f178])).
fof(f179,plain,(
  ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f73])).
fof(f73,plain,(
  ~p(s(bool,'F_0'))),
  inference(flattening,[],[f2])).
fof(f2,axiom,(
  ~p(s(bool,'F_0'))),
  file('thm.quantHeuristics.LIST_LENGTH_3|split|13',aHL_FALSITY)).
fof(f183,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f77])).
fof(f77,plain,(
  ! [X0] : s(bool,'F_0') = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))),
  inference(rectify,[],[f46])).
fof(f46,axiom,(
  ! [X19] : s(bool,'F_0') = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X19)))),
  file('thm.quantHeuristics.LIST_LENGTH_3|split|13','thm.numeral.numeral_distrib|split|23')).
fof(f184,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(cnf_transformation,[],[f78])).
fof(f78,plain,(
  ! [X0] : s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.ZERO_0')))),
  inference(rectify,[],[f11])).
fof(f11,axiom,(
  ! [X19] : s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',X19),s('type.num.num','const.arithmetic.ZERO_0')))),
  file('thm.quantHeuristics.LIST_LENGTH_3|split|13','thm.numeral.numeral_lt|split|2')).
fof(f191,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) )),
  inference(cnf_transformation,[],[f85])).
fof(f85,plain,(
  ! [X0] : s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))),
  inference(rectify,[],[f15])).
fof(f15,axiom,(
  ! [X19] : s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',X19),s('type.num.num','const.num.|48|_0')))),
  file('thm.quantHeuristics.LIST_LENGTH_3|split|13','thm.numeral.numeral_distrib|split|20')).
fof(f207,plain,(
  ( ! [X0] : (s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X0))) = s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(cnf_transformation,[],[f101])).
fof(f101,plain,(
  ! [X0] : s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X0))) = s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.ZERO_0')))),
  inference(rectify,[],[f36])).
fof(f36,axiom,(
  ! [X19] : s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X19))) = s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X19))),s('type.num.num','const.arithmetic.ZERO_0')))),
  file('thm.quantHeuristics.LIST_LENGTH_3|split|13','thm.numeral.iSUB_THM|split|2')).
fof(f249,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X0),s('type.num.num',X1))))) = s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1)))))) )),
  inference(cnf_transformation,[],[f134])).
fof(f134,plain,(
  ! [X0,X1] : s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X0),s('type.num.num',X1))))) = s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1)))))),
  inference(rectify,[],[f48])).
fof(f48,axiom,(
  ! [X19,X22] : s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X19),s('type.num.num',X22))))) = s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X19))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X22)))))),
  file('thm.quantHeuristics.LIST_LENGTH_3|split|13','thm.numeral.iSUB_THM|split|4')).
fof(f250,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X0),s('type.num.num',X1))))) = s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1)))))) )),
  inference(cnf_transformation,[],[f135])).
fof(f135,plain,(
  ! [X0,X1] : s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X0),s('type.num.num',X1))))) = s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1)))))),
  inference(rectify,[],[f68])).
fof(f68,axiom,(
  ! [X19,X22] : s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X19),s('type.num.num',X22))))) = s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X19))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X22)))))),
  file('thm.quantHeuristics.LIST_LENGTH_3|split|13','thm.numeral.iSUB_THM|split|5')).
fof(f406,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.num.|48|_0')))),
  inference(unit_resulting_resolution,[],[f179,f180,f251])).
fof(f433,plain,(
  ( ! [X5] : (p(s(bool,X5)) | s(bool,'F_0') = s(bool,X5)) )),
  inference(forward_demodulation,[],[f432,f184])).
fof(f432,plain,(
  ( ! [X4,X5] : (p(s(bool,X5)) | s(bool,X5) = s(bool,'const.prim_rec.<_2'(s('type.num.num',X4),s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(subsumption_resolution,[],[f413,f179])).
fof(f413,plain,(
  ( ! [X4,X5] : (p(s(bool,'F_0')) | p(s(bool,X5)) | s(bool,X5) = s(bool,'const.prim_rec.<_2'(s('type.num.num',X4),s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(superposition,[],[f251,f184])).
fof(f206,plain,(
  ( ! [X0] : (s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X0))) = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.num.|48|_0')))) )),
  inference(cnf_transformation,[],[f100])).
fof(f100,plain,(
  ! [X0] : s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X0))) = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.num.|48|_0')))),
  inference(rectify,[],[f13])).
fof(f13,axiom,(
  ! [X19] : s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X19))) = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X19))),s('type.num.num','const.num.|48|_0')))),
  file('thm.quantHeuristics.LIST_LENGTH_3|split|13','thm.numeral.numeral_distrib|split|24')).
fof(f204,plain,(
  ( ! [X0] : (s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X0))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))) )),
  inference(cnf_transformation,[],[f98])).
fof(f98,plain,(
  ! [X0] : s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X0))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))),
  inference(rectify,[],[f24])).
fof(f24,axiom,(
  ! [X19] : s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X19))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X19)))))),
  file('thm.quantHeuristics.LIST_LENGTH_3|split|13','thm.numeral.numeral_distrib|split|21')).
fof(f205,plain,(
  ( ! [X0] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.ZERO_0'))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.num.|48|_0')))) )),
  inference(cnf_transformation,[],[f99])).
fof(f99,plain,(
  ! [X0] : s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.ZERO_0'))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.num.|48|_0')))),
  inference(rectify,[],[f22])).
fof(f22,axiom,(
  ! [X19] : s(bool,'const.arithmetic.<=_2'(s('type.num.num',X19),s('type.num.num','const.arithmetic.ZERO_0'))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X19))),s('type.num.num','const.num.|48|_0')))),
  file('thm.quantHeuristics.LIST_LENGTH_3|split|13','thm.numeral.numeral_distrib|split|27')).
fof(f270,plain,(
  ( ! [X0] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X0)) )),
  inference(backward_demodulation,[],[f234,f214])).
fof(f269,plain,(
  ( ! [X0] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X0)) )),
  inference(backward_demodulation,[],[f234,f213])).
fof(f248,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X0),s('type.num.num',X1))))) = s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1)))))) )),
  inference(cnf_transformation,[],[f133])).
fof(f133,plain,(
  ! [X0,X1] : s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X0),s('type.num.num',X1))))) = s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1)))))),
  inference(rectify,[],[f40])).
fof(f40,axiom,(
  ! [X19,X22] : s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X19),s('type.num.num',X22))))) = s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X19))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X22)))))),
  file('thm.quantHeuristics.LIST_LENGTH_3|split|13','thm.numeral.iSUB_THM|split|3')).
fof(f192,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))) )),
  inference(cnf_transformation,[],[f86])).
fof(f86,plain,(
  ! [X0] : s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))),
  inference(rectify,[],[f38])).
fof(f38,axiom,(
  ! [X19] : s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X19)))))),
  file('thm.quantHeuristics.LIST_LENGTH_3|split|13','thm.numeral.numeral_lt|split|0')).
fof(f203,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))))) )),
  inference(cnf_transformation,[],[f97])).
fof(f97,plain,(
  ! [X0] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))))),
  inference(rectify,[],[f51])).
fof(f51,axiom,(
  ! [X19] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X19)))))))),
  file('thm.quantHeuristics.LIST_LENGTH_3|split|13','thm.numeral.numeral_distrib|split|9')).
fof(f198,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X0))))) = s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))) )),
  inference(cnf_transformation,[],[f92])).
fof(f92,plain,(
  ! [X0] : s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X0))))) = s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))),
  inference(rectify,[],[f56])).
fof(f56,axiom,(
  ! [X19] : s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X19))))) = s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X19)))))),
  file('thm.quantHeuristics.LIST_LENGTH_3|split|13','thm.numeral.numeral_distrib|split|16')).
fof(f244,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num',X1))))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))) )),
  inference(cnf_transformation,[],[f129])).
fof(f129,plain,(
  ! [X0,X1] : s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num',X1))))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))),
  inference(rectify,[],[f49])).
fof(f49,axiom,(
  ! [X19,X22] : s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X19),s('type.num.num',X22))))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X19))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X22)))))),
  file('thm.quantHeuristics.LIST_LENGTH_3|split|13','thm.numeral.numeral_distrib|split|12')).
fof(f245,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))) )),
  inference(cnf_transformation,[],[f130])).
fof(f130,plain,(
  ! [X0,X1] : s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))),
  inference(rectify,[],[f53])).
fof(f53,axiom,(
  ! [X19,X22] : s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X19),s('type.num.num',X22))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X19))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X22)))))),
  file('thm.quantHeuristics.LIST_LENGTH_3|split|13','thm.numeral.numeral_distrib|split|5')).
fof(f246,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X0),s('type.num.num',X1))))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))) )),
  inference(cnf_transformation,[],[f131])).
fof(f131,plain,(
  ! [X0,X1] : s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X0),s('type.num.num',X1))))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))),
  inference(rectify,[],[f17])).
fof(f17,axiom,(
  ! [X19,X22] : s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X19),s('type.num.num',X22))))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X19))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X22)))))),
  file('thm.quantHeuristics.LIST_LENGTH_3|split|13','thm.numeral.numeral_distrib|split|8')).
fof(f256,plain,(
  ( ! [X0,X1] : (s('type.num.num',X0) != s('type.num.num',X1) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))) )),
  inference(cnf_transformation,[],[f168])).
fof(f200,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))) )),
  inference(cnf_transformation,[],[f94])).
fof(f94,plain,(
  ! [X0] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))),
  inference(rectify,[],[f27])).
fof(f27,axiom,(
  ! [X19] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X19)))))))),
  file('thm.quantHeuristics.LIST_LENGTH_3|split|13','thm.numeral.numeral_distrib|split|10')).
fof(f229,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X3))) | s('type.num.num',X3) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK15(X3,X2,X1,X0))))) )),
  inference(cnf_transformation,[],[f167])).
fof(f230,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),sK14(X3,X2,X1,X0)),s('type.list.list'(X0),sK15(X3,X2,X1,X0)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X3)))) )),
  inference(cnf_transformation,[],[f167])).
fof(f231,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X4),s('type.list.list'(X0),X5))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X3))) | s('type.num.num',X3) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X5))) | s('type.num.num',X2) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X4)))) )),
  inference(cnf_transformation,[],[f167])).
fof(f194,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))) )),
  inference(cnf_transformation,[],[f88])).
fof(f88,plain,(
  ! [X0] : s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))),
  inference(rectify,[],[f21])).
fof(f21,axiom,(
  ! [X19] : s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X19)))))),
  file('thm.quantHeuristics.LIST_LENGTH_3|split|13','thm.numeral.numeral_lt|split|1')).
fof(f268,plain,(
  ( ! [X0] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) )),
  inference(forward_demodulation,[],[f201,f178])).
fof(f201,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) )),
  inference(cnf_transformation,[],[f95])).
fof(f95,plain,(
  ! [X0] : s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))),
  inference(rectify,[],[f26])).
fof(f26,axiom,(
  ! [X19] : s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X19),s('type.num.num','const.num.|48|_0')))),
  file('thm.quantHeuristics.LIST_LENGTH_3|split|13','thm.numeral.numeral_distrib|split|11')).
fof(f428,plain,(
  ( ! [X0,X1] : (p(s(bool,X1)) | s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X0)) )),
  inference(subsumption_resolution,[],[f411,f179])).
fof(f411,plain,(
  ( ! [X0,X1] : (p(s(bool,'F_0')) | p(s(bool,X1)) | s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f251,f208])).
fof(f382,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.num.|48|_0')))),
  inference(subsumption_resolution,[],[f376,f179])).
fof(f376,plain,(
  p(s(bool,'F_0')) | s(bool,'T_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.num.|48|_0')))),
  inference(superposition,[],[f175,f208])).
fof(f374,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f179,f208])).
fof(f370,plain,(
  ( ! [X0,X1] : (s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X1) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f208,f208])).
fof(f260,plain,(
  ( ! [X2,X0,X3,X1] : (s(X1,f(s(X0,sK16(X3,X2,X1,X0)))) != s(X1,g(s(X0,sK16(X3,X2,X1,X0)))) | s(fun(X0,X1),X2) = s(fun(X0,X1),X3)) )),
  inference(cnf_transformation,[],[f170])).
fof(f170,plain,(
  ! [X0,X1,X2,X3] : (s(X1,f(s(X0,sK16(X3,X2,X1,X0)))) != s(X1,g(s(X0,sK16(X3,X2,X1,X0)))) | s(fun(X0,X1),X2) = s(fun(X0,X1),X3))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK16])],[f147])).
fof(f147,plain,(
  ! [X0,X1,X2,X3] : (? [X4] : s(X1,f(s(X0,X4))) != s(X1,g(s(X0,X4))) | s(fun(X0,X1),X2) = s(fun(X0,X1),X3))),
  inference(ennf_transformation,[],[f143])).
fof(f143,plain,(
  ! [X0,X1,X2,X3] : (! [X4] : s(X1,f(s(X0,X4))) = s(X1,g(s(X0,X4))) => s(fun(X0,X1),X2) = s(fun(X0,X1),X3))),
  inference(flattening,[],[f142])).
fof(f142,plain,(
  ! [X0,X1] : ! [X2,X3] : (! [X4] : s(X1,f(s(X0,X4))) = s(X1,g(s(X0,X4))) => s(fun(X0,X1),X2) = s(fun(X0,X1),X3))),
  inference(rectify,[],[f4])).
fof(f4,axiom,(
  ! [X1,X2] : ! [X3,X4] : (! [X5] : s(X2,f(s(X1,X5))) = s(X2,g(s(X1,X5))) => s(fun(X1,X2),X3) = s(fun(X1,X2),X4))),
  file('thm.quantHeuristics.LIST_LENGTH_3|split|13',aHL_EXT)).
fof(f251,plain,(
  ( ! [X0,X1] : (p(s(bool,X1)) | p(s(bool,X0)) | s(bool,X0) = s(bool,X1)) )),
  inference(cnf_transformation,[],[f146])).
fof(f146,plain,(
  ! [X0,X1] : ((p(s(bool,X0)) & ~p(s(bool,X1))) | (p(s(bool,X1)) & ~p(s(bool,X0))) | s(bool,X0) = s(bool,X1))),
  inference(flattening,[],[f145])).
fof(f145,plain,(
  ! [X0,X1] : ((p(s(bool,X0)) & ~p(s(bool,X1))) | ((p(s(bool,X1)) & ~p(s(bool,X0))) | s(bool,X0) = s(bool,X1)))),
  inference(ennf_transformation,[],[f136])).
fof(f136,plain,(
  ! [X0,X1] : ((p(s(bool,X0)) => p(s(bool,X1))) => ((p(s(bool,X1)) => p(s(bool,X0))) => s(bool,X0) = s(bool,X1)))),
  inference(rectify,[],[f10])).
fof(f10,axiom,(
  ! [X17,X18] : ((p(s(bool,X17)) => p(s(bool,X18))) => ((p(s(bool,X18)) => p(s(bool,X17))) => s(bool,X17) = s(bool,X18)))),
  file('thm.quantHeuristics.LIST_LENGTH_3|split|13','thm.bool.IMP_ANTISYM_AX')).
fof(f254,plain,(
  ( ! [X0,X1] : (~p(s(bool,X1)) | ~p(s(bool,X0)) | s(bool,X0) = s(bool,X1)) )),
  inference(cnf_transformation,[],[f146])).
fof(f232,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.numeral.iSUB_3'(s(bool,X1),s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f117])).
fof(f117,plain,(
  ! [X0,X1] : s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.numeral.iSUB_3'(s(bool,X1),s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X0)))),
  inference(rectify,[],[f34])).
fof(f34,axiom,(
  ! [X7,X23] : s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.numeral.iSUB_3'(s(bool,X23),s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X7)))),
  file('thm.quantHeuristics.LIST_LENGTH_3|split|13','thm.numeral.iSUB_THM|split|0')).
fof(f215,plain,(
  ( ! [X0,X1] : (s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))) )),
  inference(cnf_transformation,[],[f154])).
fof(f213,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num',X0) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0))))) )),
  inference(cnf_transformation,[],[f153])).
fof(f153,plain,(
  ! [X0] : ((~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X0)) & (s('type.num.num','const.num.|48|_0') != s('type.num.num',X0) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0))))))),
  inference(nnf_transformation,[],[f104])).
fof(f104,plain,(
  ! [X0] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) <=> s('type.num.num','const.num.|48|_0') = s('type.num.num',X0))),
  inference(rectify,[],[f44])).
fof(f44,axiom,(
  ! [X19] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X19)))) <=> s('type.num.num','const.num.|48|_0') = s('type.num.num',X19))),
  file('thm.quantHeuristics.LIST_LENGTH_3|split|13','thm.numeral.numeral_distrib|split|30')).
fof(f214,plain,(
  ( ! [X0] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X0)) )),
  inference(cnf_transformation,[],[f153])).
fof(f209,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X0)) )),
  inference(cnf_transformation,[],[f151])).
fof(f208,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f3])).
fof(f3,axiom,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) | s(bool,'F_0') = s(bool,X0))),
  file('thm.quantHeuristics.LIST_LENGTH_3|split|13',aHL_BOOL_CASES)).
fof(f190,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) )),
  inference(cnf_transformation,[],[f84])).
fof(f84,plain,(
  ! [X0] : s(bool,'T_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))),
  inference(rectify,[],[f42])).
fof(f42,axiom,(
  ! [X19] : s(bool,'T_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num',X19),s('type.num.num','const.num.|48|_0')))),
  file('thm.quantHeuristics.LIST_LENGTH_3|split|13','thm.numeral.numeral_distrib|split|29')).
fof(f189,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f83])).
fof(f83,plain,(
  ! [X0] : s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))),
  inference(rectify,[],[f23])).
fof(f23,axiom,(
  ! [X19] : s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X19)))),
  file('thm.quantHeuristics.LIST_LENGTH_3|split|13','thm.numeral.numeral_distrib|split|26')).
fof(f188,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f82])).
fof(f82,plain,(
  ! [X0] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))),
  inference(rectify,[],[f54])).
fof(f54,axiom,(
  ! [X19] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X19)))),
  file('thm.quantHeuristics.LIST_LENGTH_3|split|13','thm.numeral.numeral_distrib|split|6')).
fof(f185,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X0),s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f79])).
fof(f79,plain,(
  ! [X0] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X0),s('type.num.num',X0)))),
  inference(rectify,[],[f57])).
fof(f57,axiom,(
  ! [X24] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X24),s('type.num.num',X24)))),
  file('thm.quantHeuristics.LIST_LENGTH_3|split|13','thm.arithmetic.SUB_EQUAL_|48|')).
fof(f182,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f76])).
fof(f76,plain,(
  ! [X0] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))),
  inference(rectify,[],[f62])).
fof(f62,axiom,(
  ! [X19] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X19)))),
  file('thm.quantHeuristics.LIST_LENGTH_3|split|13','thm.arithmetic.MULT|split|0')).
fof(f181,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) )),
  inference(cnf_transformation,[],[f75])).
fof(f75,plain,(
  ! [X0] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))),
  inference(rectify,[],[f29])).
fof(f29,axiom,(
  ! [X19] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X19),s('type.num.num','const.num.|48|_0')))),
  file('thm.quantHeuristics.LIST_LENGTH_3|split|13','thm.numeral.numeral_distrib|split|4')).
fof(f180,plain,(
  ~p(s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.num.|48|_0'))))),
  inference(cnf_transformation,[],[f74])).
fof(f74,plain,(
  ~p(s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.num.|48|_0'))))),
  inference(flattening,[],[f20])).
fof(f20,axiom,(
  ~p(s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.num.|48|_0'))))),
  file('thm.quantHeuristics.LIST_LENGTH_3|split|13','thm.numeral.numeral_distrib|split|34')).
fof(f175,plain,(
  p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.num.|48|_0'))))),
  inference(cnf_transformation,[],[f37])).
fof(f37,axiom,(
  p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.num.|48|_0'))))),
  file('thm.quantHeuristics.LIST_LENGTH_3|split|13','thm.numeral.numeral_distrib|split|35')).
fof(f174,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f1])).
fof(f1,axiom,(
  p(s(bool,'T_0'))),
  file('thm.quantHeuristics.LIST_LENGTH_3|split|13',aHL_TRUTH)).
fof(f15596,plain,(
  $false | ($spl34 | $spl48)),
  inference(global_subsumption,[],[f15474,f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f428,f429,f268,f194,f235,f231,f230,f229,f228,f200,f256,f255,f247,f246,f245,f244,f199,f198,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f433,f406,f250,f249,f207,f191,f184,f183,f179,f691,f733,f854,f966,f968,f969,f970,f971,f972,f973,f975,f976,f978,f979,f980,f1024,f1143,f1153,f1165,f2809,f2823,f2826,f2830,f3082,f3089,f3374,f3421,f5542,f5640,f5932,f6289,f4727,f4254,f2243,f241,f238,f234,f193,f692,f3568,f3563,f3504,f3570,f3564,f5997,f5605,f6355,f3565,f3562,f3567,f3566,f6796,f3545,f4280,f4747,f3538,f3530,f3484,f3532,f3531,f6759,f6758,f5367,f3485,f7226,f7225,f7219,f7217,f7216,f7206,f7201,f5370,f5369,f3529,f3482,f226,f224,f223,f222,f221,f195,f734,f3533,f7194,f3624,f3623,f3622,f5083,f5261,f3621,f5053,f5231,f7212,f7200,f7198,f7193,f7192,f7191,f7190,f5344,f4991,f4974,f4867,f4851,f4551,f4535,f4454,f4438,f4109,f4091,f3675,f3653,f3537,f2128,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11603,f11604,f11570,f11571,f11572,f11573,f11575,f11577,f11579,f11582,f11588,f11593,f11597,f11598,f11599,f12952,f13160,f13164,f13170,f13259,f13269,f13274,f13276,f13277,f13278,f13279,f13280,f13283,f13286,f13287,f13205,f13215,f13221,f13224,f13226,f13227,f13228,f13229,f13230,f13232,f13234,f13235,f13237,f13468,f13474,f13484,f13490,f13493,f13495,f13496,f13497,f13498,f13499,f13501,f13503,f13504,f13509,f13576,f13586,f13591,f13593,f13594,f13595,f13596,f13597,f13600,f13603,f13604,f13541,f13633,f13637,f14059,f13949,f13950,f14060,f13981,f14079,f14190,f14391,f14278,f14279,f14392,f14312,f14413,f14631,f14516,f14517,f14632,f14552,f14653,f14825,f14826,f14833,f14834,f14957,f14941,f14946,f14951,f14953,f14954,f6172,f15489,f15492,f15495,f15498,f15376,f15377,f15379,f15380,f15383,f15384,f15386,f15387,f15388,f15389,f15390,f15391,f15392,f15393,f15395,f15396,f15399,f15406,f15407,f15411,f15412,f15414,f15487,f15416,f15417,f15419,f15420,f15421,f15422,f15424,f15426,f15427,f15428,f15430,f15432,f15434,f15435,f15486,f15485,f15438,f15439,f15441,f15442,f15443,f15444,f15446,f15447,f15449,f15450,f15453,f15454,f15456,f15457,f15484])).
fof(f15474,plain,(
  ( ! [X19,X20] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X19),s('type.num.num',X20)))))))) ) | ($spl34 | $spl48)),
  inference(backward_demodulation,[],[f6172,f11844])).
fof(f11844,plain,(
  ( ! [X19,X20] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X19),s('type.num.num',X20))))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X19),s('type.num.num',X20))),s('type.num.num','const.arithmetic.ZERO_0'))))) ) | $spl34),
  inference(forward_demodulation,[],[f11843,f245])).
fof(f11843,plain,(
  ( ! [X19,X20] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X19),s('type.num.num',X20))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X19))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X20)))))))) ) | $spl34),
  inference(forward_demodulation,[],[f11664,f1186])).
fof(f1186,plain,(
  ( ! [X0] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.ZERO_0'))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl34),
  inference(backward_demodulation,[],[f1171,f205])).
fof(f11664,plain,(
  ( ! [X19,X20] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X19),s('type.num.num',X20))))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X19))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X20)))))))) ) | $spl34),
  inference(superposition,[],[f3852,f245])).
fof(f3852,plain,(
  ( ! [X1] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))) ) | $spl34),
  inference(superposition,[],[f1214,f1186])).
fof(f1214,plain,(
  ( ! [X0] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X0)) ) | $spl34),
  inference(forward_demodulation,[],[f1193,f1171])).
fof(f1193,plain,(
  ( ! [X0] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X0)) ) | $spl34),
  inference(backward_demodulation,[],[f1171,f269])).
fof(f15595,plain,(
  $false | ($spl34 | $spl48)),
  inference(global_subsumption,[],[f15473,f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f428,f429,f268,f194,f235,f231,f230,f229,f228,f200,f256,f255,f247,f246,f245,f244,f199,f198,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f433,f406,f250,f249,f207,f191,f184,f183,f179,f691,f733,f854,f966,f968,f969,f970,f971,f972,f973,f975,f976,f978,f979,f980,f1024,f1143,f1153,f1165,f2809,f2823,f2826,f2830,f3082,f3089,f3374,f3421,f5542,f5640,f5932,f6289,f4727,f4254,f2243,f241,f238,f234,f193,f692,f3568,f3563,f3504,f3570,f3564,f5997,f5605,f6355,f3565,f3562,f3567,f3566,f6796,f3545,f4280,f4747,f3538,f3530,f3484,f3532,f3531,f6759,f6758,f5367,f3485,f7226,f7225,f7219,f7217,f7216,f7206,f7201,f5370,f5369,f3529,f3482,f226,f224,f223,f222,f221,f195,f734,f3533,f7194,f3624,f3623,f3622,f5083,f5261,f3621,f5053,f5231,f7212,f7200,f7198,f7193,f7192,f7191,f7190,f5344,f4991,f4974,f4867,f4851,f4551,f4535,f4454,f4438,f4109,f4091,f3675,f3653,f3537,f2128,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11603,f11604,f11570,f11571,f11572,f11573,f11575,f11577,f11579,f11582,f11588,f11593,f11597,f11598,f11599,f12952,f13160,f13164,f13170,f13259,f13269,f13274,f13276,f13277,f13278,f13279,f13280,f13283,f13286,f13287,f13205,f13215,f13221,f13224,f13226,f13227,f13228,f13229,f13230,f13232,f13234,f13235,f13237,f13468,f13474,f13484,f13490,f13493,f13495,f13496,f13497,f13498,f13499,f13501,f13503,f13504,f13509,f13576,f13586,f13591,f13593,f13594,f13595,f13596,f13597,f13600,f13603,f13604,f13541,f13633,f13637,f14059,f13949,f13950,f14060,f13981,f14079,f14190,f14391,f14278,f14279,f14392,f14312,f14413,f14631,f14516,f14517,f14632,f14552,f14653,f14825,f14826,f14833,f14834,f14957,f14941,f14946,f14951,f14953,f14954,f6172,f15489,f15492,f15495,f15498,f15376,f15377,f15379,f15380,f15383,f15384,f15386,f15387,f15388,f15389,f15390,f15391,f15392,f15393,f15395,f15396,f15399,f15406,f15407,f15411,f15412,f15414,f15487,f15416,f15417,f15419,f15420,f15421,f15422,f15424,f15426,f15427,f15428,f15430,f15432,f15434,f15435,f15486,f15485,f15438,f15439,f15441,f15442,f15443,f15444,f15446,f15447,f15449,f15450,f15453,f15454,f15456,f15457,f15484])).
fof(f15473,plain,(
  ( ! [X15,X16] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X15),s('type.num.num',X16)))))))) ) | ($spl34 | $spl48)),
  inference(backward_demodulation,[],[f6172,f11836])).
fof(f11836,plain,(
  ( ! [X15,X16] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X15),s('type.num.num',X16))))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X15),s('type.num.num',X16))),s('type.num.num','const.arithmetic.ZERO_0'))))) ) | $spl34),
  inference(forward_demodulation,[],[f11835,f244])).
fof(f11835,plain,(
  ( ! [X15,X16] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X15),s('type.num.num',X16))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X15))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X16)))))))) ) | $spl34),
  inference(forward_demodulation,[],[f11661,f1186])).
fof(f11661,plain,(
  ( ! [X15,X16] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X15),s('type.num.num',X16))))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X15))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X16)))))))) ) | $spl34),
  inference(superposition,[],[f3852,f244])).
fof(f15594,plain,(
  $false | ($spl34 | $spl48)),
  inference(global_subsumption,[],[f15472,f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f428,f429,f268,f194,f235,f231,f230,f229,f228,f200,f256,f255,f247,f246,f245,f244,f199,f198,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f433,f406,f250,f249,f207,f191,f184,f183,f179,f691,f733,f854,f966,f968,f969,f970,f971,f972,f973,f975,f976,f978,f979,f980,f1024,f1143,f1153,f1165,f2809,f2823,f2826,f2830,f3082,f3089,f3374,f3421,f5542,f5640,f5932,f6289,f4727,f4254,f2243,f241,f238,f234,f193,f692,f3568,f3563,f3504,f3570,f3564,f5997,f5605,f6355,f3565,f3562,f3567,f3566,f6796,f3545,f4280,f4747,f3538,f3530,f3484,f3532,f3531,f6759,f6758,f5367,f3485,f7226,f7225,f7219,f7217,f7216,f7206,f7201,f5370,f5369,f3529,f3482,f226,f224,f223,f222,f221,f195,f734,f3533,f7194,f3624,f3623,f3622,f5083,f5261,f3621,f5053,f5231,f7212,f7200,f7198,f7193,f7192,f7191,f7190,f5344,f4991,f4974,f4867,f4851,f4551,f4535,f4454,f4438,f4109,f4091,f3675,f3653,f3537,f2128,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11603,f11604,f11570,f11571,f11572,f11573,f11575,f11577,f11579,f11582,f11588,f11593,f11597,f11598,f11599,f12952,f13160,f13164,f13170,f13259,f13269,f13274,f13276,f13277,f13278,f13279,f13280,f13283,f13286,f13287,f13205,f13215,f13221,f13224,f13226,f13227,f13228,f13229,f13230,f13232,f13234,f13235,f13237,f13468,f13474,f13484,f13490,f13493,f13495,f13496,f13497,f13498,f13499,f13501,f13503,f13504,f13509,f13576,f13586,f13591,f13593,f13594,f13595,f13596,f13597,f13600,f13603,f13604,f13541,f13633,f13637,f14059,f13949,f13950,f14060,f13981,f14079,f14190,f14391,f14278,f14279,f14392,f14312,f14413,f14631,f14516,f14517,f14632,f14552,f14653,f14825,f14826,f14833,f14834,f14957,f14941,f14946,f14951,f14953,f14954,f6172,f15489,f15492,f15495,f15498,f15376,f15377,f15379,f15380,f15383,f15384,f15386,f15387,f15388,f15389,f15390,f15391,f15392,f15393,f15395,f15396,f15399,f15406,f15407,f15411,f15412,f15414,f15487,f15416,f15417,f15419,f15420,f15421,f15422,f15424,f15426,f15427,f15428,f15430,f15432,f15434,f15435,f15486,f15485,f15438,f15439,f15441,f15442,f15443,f15444,f15446,f15447,f15449,f15450,f15453,f15454,f15456,f15457,f15484])).
fof(f15472,plain,(
  ( ! [X10,X11] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X10),s('type.num.num',X11)))))))) ) | ($spl34 | $spl48)),
  inference(backward_demodulation,[],[f6172,f11821])).
fof(f11821,plain,(
  ( ! [X10,X11] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X10),s('type.num.num',X11))))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X10),s('type.num.num',X11))),s('type.num.num','const.arithmetic.ZERO_0'))))) ) | $spl34),
  inference(forward_demodulation,[],[f11820,f246])).
fof(f11820,plain,(
  ( ! [X10,X11] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X10),s('type.num.num',X11))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X10))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X11)))))))) ) | $spl34),
  inference(forward_demodulation,[],[f11655,f1186])).
fof(f11655,plain,(
  ( ! [X10,X11] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X10),s('type.num.num',X11))))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X10))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X11)))))))) ) | $spl34),
  inference(superposition,[],[f3852,f246])).
fof(f15593,plain,(
  $false | ($spl34 | $spl48)),
  inference(global_subsumption,[],[f15471,f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f428,f429,f268,f194,f235,f231,f230,f229,f228,f200,f256,f255,f247,f246,f245,f244,f199,f198,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f433,f406,f250,f249,f207,f191,f184,f183,f179,f691,f733,f854,f966,f968,f969,f970,f971,f972,f973,f975,f976,f978,f979,f980,f1024,f1143,f1153,f1165,f2809,f2823,f2826,f2830,f3082,f3089,f3374,f3421,f5542,f5640,f5932,f6289,f4727,f4254,f2243,f241,f238,f234,f193,f692,f3568,f3563,f3504,f3570,f3564,f5997,f5605,f6355,f3565,f3562,f3567,f3566,f6796,f3545,f4280,f4747,f3538,f3530,f3484,f3532,f3531,f6759,f6758,f5367,f3485,f7226,f7225,f7219,f7217,f7216,f7206,f7201,f5370,f5369,f3529,f3482,f226,f224,f223,f222,f221,f195,f734,f3533,f7194,f3624,f3623,f3622,f5083,f5261,f3621,f5053,f5231,f7212,f7200,f7198,f7193,f7192,f7191,f7190,f5344,f4991,f4974,f4867,f4851,f4551,f4535,f4454,f4438,f4109,f4091,f3675,f3653,f3537,f2128,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11603,f11604,f11570,f11571,f11572,f11573,f11575,f11577,f11579,f11582,f11588,f11593,f11597,f11598,f11599,f12952,f13160,f13164,f13170,f13259,f13269,f13274,f13276,f13277,f13278,f13279,f13280,f13283,f13286,f13287,f13205,f13215,f13221,f13224,f13226,f13227,f13228,f13229,f13230,f13232,f13234,f13235,f13237,f13468,f13474,f13484,f13490,f13493,f13495,f13496,f13497,f13498,f13499,f13501,f13503,f13504,f13509,f13576,f13586,f13591,f13593,f13594,f13595,f13596,f13597,f13600,f13603,f13604,f13541,f13633,f13637,f14059,f13949,f13950,f14060,f13981,f14079,f14190,f14391,f14278,f14279,f14392,f14312,f14413,f14631,f14516,f14517,f14632,f14552,f14653,f14825,f14826,f14833,f14834,f14957,f14941,f14946,f14951,f14953,f14954,f6172,f15489,f15492,f15495,f15498,f15376,f15377,f15379,f15380,f15383,f15384,f15386,f15387,f15388,f15389,f15390,f15391,f15392,f15393,f15395,f15396,f15399,f15406,f15407,f15411,f15412,f15414,f15487,f15416,f15417,f15419,f15420,f15421,f15422,f15424,f15426,f15427,f15428,f15430,f15432,f15434,f15435,f15486,f15485,f15438,f15439,f15441,f15442,f15443,f15444,f15446,f15447,f15449,f15450,f15453,f15454,f15456,f15457,f15484])).
fof(f15471,plain,(
  ( ! [X62,X63] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X62),s('type.num.num',X63)))) ) | ($spl34 | $spl48)),
  inference(backward_demodulation,[],[f6172,f2358])).
fof(f2358,plain,(
  ( ! [X62,X63] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X63),s('type.num.num',X62))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X62),s('type.num.num',X63)))) ) | $spl34),
  inference(superposition,[],[f1214,f235])).
fof(f15592,plain,(
  $false | ($spl34 | $spl48)),
  inference(global_subsumption,[],[f15470,f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f428,f429,f268,f194,f235,f231,f230,f229,f228,f200,f256,f255,f247,f246,f245,f244,f199,f198,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f433,f406,f250,f249,f207,f191,f184,f183,f179,f691,f733,f854,f966,f968,f969,f970,f971,f972,f973,f975,f976,f978,f979,f980,f1024,f1143,f1153,f1165,f2809,f2823,f2826,f2830,f3082,f3089,f3374,f3421,f5542,f5640,f5932,f6289,f4727,f4254,f2243,f241,f238,f234,f193,f692,f3568,f3563,f3504,f3570,f3564,f5997,f5605,f6355,f3565,f3562,f3567,f3566,f6796,f3545,f4280,f4747,f3538,f3530,f3484,f3532,f3531,f6759,f6758,f5367,f3485,f7226,f7225,f7219,f7217,f7216,f7206,f7201,f5370,f5369,f3529,f3482,f226,f224,f223,f222,f221,f195,f734,f3533,f7194,f3624,f3623,f3622,f5083,f5261,f3621,f5053,f5231,f7212,f7200,f7198,f7193,f7192,f7191,f7190,f5344,f4991,f4974,f4867,f4851,f4551,f4535,f4454,f4438,f4109,f4091,f3675,f3653,f3537,f2128,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11603,f11604,f11570,f11571,f11572,f11573,f11575,f11577,f11579,f11582,f11588,f11593,f11597,f11598,f11599,f12952,f13160,f13164,f13170,f13259,f13269,f13274,f13276,f13277,f13278,f13279,f13280,f13283,f13286,f13287,f13205,f13215,f13221,f13224,f13226,f13227,f13228,f13229,f13230,f13232,f13234,f13235,f13237,f13468,f13474,f13484,f13490,f13493,f13495,f13496,f13497,f13498,f13499,f13501,f13503,f13504,f13509,f13576,f13586,f13591,f13593,f13594,f13595,f13596,f13597,f13600,f13603,f13604,f13541,f13633,f13637,f14059,f13949,f13950,f14060,f13981,f14079,f14190,f14391,f14278,f14279,f14392,f14312,f14413,f14631,f14516,f14517,f14632,f14552,f14653,f14825,f14826,f14833,f14834,f14957,f14941,f14946,f14951,f14953,f14954,f6172,f15489,f15492,f15495,f15498,f15376,f15377,f15379,f15380,f15383,f15384,f15386,f15387,f15388,f15389,f15390,f15391,f15392,f15393,f15395,f15396,f15399,f15406,f15407,f15411,f15412,f15414,f15487,f15416,f15417,f15419,f15420,f15421,f15422,f15424,f15426,f15427,f15428,f15430,f15432,f15434,f15435,f15486,f15485,f15438,f15439,f15441,f15442,f15443,f15444,f15446,f15447,f15449,f15450,f15453,f15454,f15456,f15457,f15484])).
fof(f15470,plain,(
  ( ! [X64,X65] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X64),s('type.num.num',X65)))) ) | ($spl34 | $spl48)),
  inference(backward_demodulation,[],[f6172,f2359])).
fof(f2359,plain,(
  ( ! [X64,X65] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X65),s('type.num.num',X64))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X64),s('type.num.num',X65)))) ) | $spl34),
  inference(superposition,[],[f1215,f235])).
fof(f1215,plain,(
  ( ! [X0] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X0)) ) | $spl34),
  inference(forward_demodulation,[],[f1194,f1171])).
fof(f1194,plain,(
  ( ! [X0] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X0)) ) | $spl34),
  inference(backward_demodulation,[],[f1171,f270])).
fof(f15591,plain,(
  $false | ($spl34 | $spl48)),
  inference(global_subsumption,[],[f15469,f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f428,f429,f268,f194,f235,f231,f230,f229,f228,f200,f256,f255,f247,f246,f245,f244,f199,f198,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f433,f406,f250,f249,f207,f191,f184,f183,f179,f691,f733,f854,f966,f968,f969,f970,f971,f972,f973,f975,f976,f978,f979,f980,f1024,f1143,f1153,f1165,f2809,f2823,f2826,f2830,f3082,f3089,f3374,f3421,f5542,f5640,f5932,f6289,f4727,f4254,f2243,f241,f238,f234,f193,f692,f3568,f3563,f3504,f3570,f3564,f5997,f5605,f6355,f3565,f3562,f3567,f3566,f6796,f3545,f4280,f4747,f3538,f3530,f3484,f3532,f3531,f6759,f6758,f5367,f3485,f7226,f7225,f7219,f7217,f7216,f7206,f7201,f5370,f5369,f3529,f3482,f226,f224,f223,f222,f221,f195,f734,f3533,f7194,f3624,f3623,f3622,f5083,f5261,f3621,f5053,f5231,f7212,f7200,f7198,f7193,f7192,f7191,f7190,f5344,f4991,f4974,f4867,f4851,f4551,f4535,f4454,f4438,f4109,f4091,f3675,f3653,f3537,f2128,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11603,f11604,f11570,f11571,f11572,f11573,f11575,f11577,f11579,f11582,f11588,f11593,f11597,f11598,f11599,f12952,f13160,f13164,f13170,f13259,f13269,f13274,f13276,f13277,f13278,f13279,f13280,f13283,f13286,f13287,f13205,f13215,f13221,f13224,f13226,f13227,f13228,f13229,f13230,f13232,f13234,f13235,f13237,f13468,f13474,f13484,f13490,f13493,f13495,f13496,f13497,f13498,f13499,f13501,f13503,f13504,f13509,f13576,f13586,f13591,f13593,f13594,f13595,f13596,f13597,f13600,f13603,f13604,f13541,f13633,f13637,f14059,f13949,f13950,f14060,f13981,f14079,f14190,f14391,f14278,f14279,f14392,f14312,f14413,f14631,f14516,f14517,f14632,f14552,f14653,f14825,f14826,f14833,f14834,f14957,f14941,f14946,f14951,f14953,f14954,f6172,f15489,f15492,f15495,f15498,f15376,f15377,f15379,f15380,f15383,f15384,f15386,f15387,f15388,f15389,f15390,f15391,f15392,f15393,f15395,f15396,f15399,f15406,f15407,f15411,f15412,f15414,f15487,f15416,f15417,f15419,f15420,f15421,f15422,f15424,f15426,f15427,f15428,f15430,f15432,f15434,f15435,f15486,f15485,f15438,f15439,f15441,f15442,f15443,f15444,f15446,f15447,f15449,f15450,f15453,f15454,f15456,f15457,f15484])).
fof(f15469,plain,(
  ( ! [X2,X1] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X1)))))) ) | ($spl34 | $spl48)),
  inference(backward_demodulation,[],[f6172,f11480])).
fof(f11480,plain,(
  ( ! [X2,X1] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X1))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X2))),s('type.num.num','const.arithmetic.ZERO_0'))))) ) | $spl34),
  inference(superposition,[],[f3851,f235])).
fof(f3851,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.ZERO_0'))))) ) | $spl34),
  inference(superposition,[],[f1215,f1186])).
fof(f15590,plain,(
  $false | ($spl34 | $spl48)),
  inference(global_subsumption,[],[f15468,f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f428,f429,f268,f194,f235,f231,f230,f229,f228,f200,f256,f255,f247,f246,f245,f244,f199,f198,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f433,f406,f250,f249,f207,f191,f184,f183,f179,f691,f733,f854,f966,f968,f969,f970,f971,f972,f973,f975,f976,f978,f979,f980,f1024,f1143,f1153,f1165,f2809,f2823,f2826,f2830,f3082,f3089,f3374,f3421,f5542,f5640,f5932,f6289,f4727,f4254,f2243,f241,f238,f234,f193,f692,f3568,f3563,f3504,f3570,f3564,f5997,f5605,f6355,f3565,f3562,f3567,f3566,f6796,f3545,f4280,f4747,f3538,f3530,f3484,f3532,f3531,f6759,f6758,f5367,f3485,f7226,f7225,f7219,f7217,f7216,f7206,f7201,f5370,f5369,f3529,f3482,f226,f224,f223,f222,f221,f195,f734,f3533,f7194,f3624,f3623,f3622,f5083,f5261,f3621,f5053,f5231,f7212,f7200,f7198,f7193,f7192,f7191,f7190,f5344,f4991,f4974,f4867,f4851,f4551,f4535,f4454,f4438,f4109,f4091,f3675,f3653,f3537,f2128,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11603,f11604,f11570,f11571,f11572,f11573,f11575,f11577,f11579,f11582,f11588,f11593,f11597,f11598,f11599,f12952,f13160,f13164,f13170,f13259,f13269,f13274,f13276,f13277,f13278,f13279,f13280,f13283,f13286,f13287,f13205,f13215,f13221,f13224,f13226,f13227,f13228,f13229,f13230,f13232,f13234,f13235,f13237,f13468,f13474,f13484,f13490,f13493,f13495,f13496,f13497,f13498,f13499,f13501,f13503,f13504,f13509,f13576,f13586,f13591,f13593,f13594,f13595,f13596,f13597,f13600,f13603,f13604,f13541,f13633,f13637,f14059,f13949,f13950,f14060,f13981,f14079,f14190,f14391,f14278,f14279,f14392,f14312,f14413,f14631,f14516,f14517,f14632,f14552,f14653,f14825,f14826,f14833,f14834,f14957,f14941,f14946,f14951,f14953,f14954,f6172,f15489,f15492,f15495,f15498,f15376,f15377,f15379,f15380,f15383,f15384,f15386,f15387,f15388,f15389,f15390,f15391,f15392,f15393,f15395,f15396,f15399,f15406,f15407,f15411,f15412,f15414,f15487,f15416,f15417,f15419,f15420,f15421,f15422,f15424,f15426,f15427,f15428,f15430,f15432,f15434,f15435,f15486,f15485,f15438,f15439,f15441,f15442,f15443,f15444,f15446,f15447,f15449,f15450,f15453,f15454,f15456,f15457,f15484])).
fof(f15468,plain,(
  ( ! [X2,X1] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X2)))))) ) | ($spl34 | $spl48)),
  inference(backward_demodulation,[],[f6172,f11646])).
fof(f11646,plain,(
  ( ! [X2,X1] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X1))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X2)))))) ) | $spl34),
  inference(superposition,[],[f3852,f235])).
fof(f15589,plain,(
  $false | ($spl34 | $spl48)),
  inference(global_subsumption,[],[f15467,f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f428,f429,f268,f194,f235,f231,f230,f229,f228,f200,f256,f255,f247,f246,f245,f244,f199,f198,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f433,f406,f250,f249,f207,f191,f184,f183,f179,f691,f733,f854,f966,f968,f969,f970,f971,f972,f973,f975,f976,f978,f979,f980,f1024,f1143,f1153,f1165,f2809,f2823,f2826,f2830,f3082,f3089,f3374,f3421,f5542,f5640,f5932,f6289,f4727,f4254,f2243,f241,f238,f234,f193,f692,f3568,f3563,f3504,f3570,f3564,f5997,f5605,f6355,f3565,f3562,f3567,f3566,f6796,f3545,f4280,f4747,f3538,f3530,f3484,f3532,f3531,f6759,f6758,f5367,f3485,f7226,f7225,f7219,f7217,f7216,f7206,f7201,f5370,f5369,f3529,f3482,f226,f224,f223,f222,f221,f195,f734,f3533,f7194,f3624,f3623,f3622,f5083,f5261,f3621,f5053,f5231,f7212,f7200,f7198,f7193,f7192,f7191,f7190,f5344,f4991,f4974,f4867,f4851,f4551,f4535,f4454,f4438,f4109,f4091,f3675,f3653,f3537,f2128,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11603,f11604,f11570,f11571,f11572,f11573,f11575,f11577,f11579,f11582,f11588,f11593,f11597,f11598,f11599,f12952,f13160,f13164,f13170,f13259,f13269,f13274,f13276,f13277,f13278,f13279,f13280,f13283,f13286,f13287,f13205,f13215,f13221,f13224,f13226,f13227,f13228,f13229,f13230,f13232,f13234,f13235,f13237,f13468,f13474,f13484,f13490,f13493,f13495,f13496,f13497,f13498,f13499,f13501,f13503,f13504,f13509,f13576,f13586,f13591,f13593,f13594,f13595,f13596,f13597,f13600,f13603,f13604,f13541,f13633,f13637,f14059,f13949,f13950,f14060,f13981,f14079,f14190,f14391,f14278,f14279,f14392,f14312,f14413,f14631,f14516,f14517,f14632,f14552,f14653,f14825,f14826,f14833,f14834,f14957,f14941,f14946,f14951,f14953,f14954,f6172,f15489,f15492,f15495,f15498,f15376,f15377,f15379,f15380,f15383,f15384,f15386,f15387,f15388,f15389,f15390,f15391,f15392,f15393,f15395,f15396,f15399,f15406,f15407,f15411,f15412,f15414,f15487,f15416,f15417,f15419,f15420,f15421,f15422,f15424,f15426,f15427,f15428,f15430,f15432,f15434,f15435,f15486,f15485,f15438,f15439,f15441,f15442,f15443,f15444,f15446,f15447,f15449,f15450,f15453,f15454,f15456,f15457,f15484])).
fof(f15467,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | ($spl34 | $spl48)),
  inference(backward_demodulation,[],[f6172,f10810])).
fof(f10810,plain,(
  ( ! [X0] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))))))))),s('type.num.num','const.arithmetic.ZERO_0'))))) ) | $spl34),
  inference(unit_resulting_resolution,[],[f9394,f1214])).
fof(f9394,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))))) ) | $spl34),
  inference(superposition,[],[f4145,f197])).
fof(f4145,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1)))))))))) ) | $spl34),
  inference(superposition,[],[f2085,f199])).
fof(f2085,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1)))))))) ) | $spl34),
  inference(superposition,[],[f2056,f199])).
fof(f2056,plain,(
  ( ! [X21] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X21)))))) ) | $spl34),
  inference(subsumption_resolution,[],[f2047,f1998])).
fof(f1998,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))))) ) | $spl34),
  inference(superposition,[],[f1974,f199])).
fof(f1974,plain,(
  ( ! [X24] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X24)))))) ) | $spl34),
  inference(subsumption_resolution,[],[f1973,f179])).
fof(f1973,plain,(
  ( ! [X24] : (p(s(bool,'F_0')) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X24)))))) ) | $spl34),
  inference(forward_demodulation,[],[f1972,f184])).
fof(f1972,plain,(
  ( ! [X24] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X24),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X24)))))) ) | $spl34),
  inference(forward_demodulation,[],[f1971,f236])).
fof(f1971,plain,(
  ( ! [X24] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X24))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X24)))))) ) | $spl34),
  inference(forward_demodulation,[],[f1961,f1186])).
fof(f1961,plain,(
  ( ! [X24] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X24))))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X24)))))) ) | $spl34),
  inference(superposition,[],[f1215,f199])).
fof(f2047,plain,(
  ( ! [X21] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X21))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X21)))))))) ) | $spl34),
  inference(superposition,[],[f1189,f202])).
fof(f1189,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X0) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))) ) | $spl34),
  inference(backward_demodulation,[],[f1171,f210])).
fof(f15588,plain,(
  $false | ($spl34 | $spl48)),
  inference(global_subsumption,[],[f15466,f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f428,f429,f268,f194,f235,f231,f230,f229,f228,f200,f256,f255,f247,f246,f245,f244,f199,f198,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f433,f406,f250,f249,f207,f191,f184,f183,f179,f691,f733,f854,f966,f968,f969,f970,f971,f972,f973,f975,f976,f978,f979,f980,f1024,f1143,f1153,f1165,f2809,f2823,f2826,f2830,f3082,f3089,f3374,f3421,f5542,f5640,f5932,f6289,f4727,f4254,f2243,f241,f238,f234,f193,f692,f3568,f3563,f3504,f3570,f3564,f5997,f5605,f6355,f3565,f3562,f3567,f3566,f6796,f3545,f4280,f4747,f3538,f3530,f3484,f3532,f3531,f6759,f6758,f5367,f3485,f7226,f7225,f7219,f7217,f7216,f7206,f7201,f5370,f5369,f3529,f3482,f226,f224,f223,f222,f221,f195,f734,f3533,f7194,f3624,f3623,f3622,f5083,f5261,f3621,f5053,f5231,f7212,f7200,f7198,f7193,f7192,f7191,f7190,f5344,f4991,f4974,f4867,f4851,f4551,f4535,f4454,f4438,f4109,f4091,f3675,f3653,f3537,f2128,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11603,f11604,f11570,f11571,f11572,f11573,f11575,f11577,f11579,f11582,f11588,f11593,f11597,f11598,f11599,f12952,f13160,f13164,f13170,f13259,f13269,f13274,f13276,f13277,f13278,f13279,f13280,f13283,f13286,f13287,f13205,f13215,f13221,f13224,f13226,f13227,f13228,f13229,f13230,f13232,f13234,f13235,f13237,f13468,f13474,f13484,f13490,f13493,f13495,f13496,f13497,f13498,f13499,f13501,f13503,f13504,f13509,f13576,f13586,f13591,f13593,f13594,f13595,f13596,f13597,f13600,f13603,f13604,f13541,f13633,f13637,f14059,f13949,f13950,f14060,f13981,f14079,f14190,f14391,f14278,f14279,f14392,f14312,f14413,f14631,f14516,f14517,f14632,f14552,f14653,f14825,f14826,f14833,f14834,f14957,f14941,f14946,f14951,f14953,f14954,f6172,f15489,f15492,f15495,f15498,f15376,f15377,f15379,f15380,f15383,f15384,f15386,f15387,f15388,f15389,f15390,f15391,f15392,f15393,f15395,f15396,f15399,f15406,f15407,f15411,f15412,f15414,f15487,f15416,f15417,f15419,f15420,f15421,f15422,f15424,f15426,f15427,f15428,f15430,f15432,f15434,f15435,f15486,f15485,f15438,f15439,f15441,f15442,f15443,f15444,f15446,f15447,f15449,f15450,f15453,f15454,f15456,f15457,f15484])).
fof(f15466,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | ($spl34 | $spl48)),
  inference(backward_demodulation,[],[f6172,f9306])).
fof(f9306,plain,(
  ( ! [X1] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))))))))),s('type.num.num','const.arithmetic.ZERO_0'))))) ) | $spl34),
  inference(superposition,[],[f4110,f199])).
fof(f4110,plain,(
  ( ! [X0] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))))))),s('type.num.num','const.arithmetic.ZERO_0'))))) ) | $spl34),
  inference(unit_resulting_resolution,[],[f2085,f1214])).
fof(f15587,plain,(
  $false | ($spl34 | $spl48)),
  inference(global_subsumption,[],[f15465,f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f428,f429,f268,f194,f235,f231,f230,f229,f228,f200,f256,f255,f247,f246,f245,f244,f199,f198,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f433,f406,f250,f249,f207,f191,f184,f183,f179,f691,f733,f854,f966,f968,f969,f970,f971,f972,f973,f975,f976,f978,f979,f980,f1024,f1143,f1153,f1165,f2809,f2823,f2826,f2830,f3082,f3089,f3374,f3421,f5542,f5640,f5932,f6289,f4727,f4254,f2243,f241,f238,f234,f193,f692,f3568,f3563,f3504,f3570,f3564,f5997,f5605,f6355,f3565,f3562,f3567,f3566,f6796,f3545,f4280,f4747,f3538,f3530,f3484,f3532,f3531,f6759,f6758,f5367,f3485,f7226,f7225,f7219,f7217,f7216,f7206,f7201,f5370,f5369,f3529,f3482,f226,f224,f223,f222,f221,f195,f734,f3533,f7194,f3624,f3623,f3622,f5083,f5261,f3621,f5053,f5231,f7212,f7200,f7198,f7193,f7192,f7191,f7190,f5344,f4991,f4974,f4867,f4851,f4551,f4535,f4454,f4438,f4109,f4091,f3675,f3653,f3537,f2128,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11603,f11604,f11570,f11571,f11572,f11573,f11575,f11577,f11579,f11582,f11588,f11593,f11597,f11598,f11599,f12952,f13160,f13164,f13170,f13259,f13269,f13274,f13276,f13277,f13278,f13279,f13280,f13283,f13286,f13287,f13205,f13215,f13221,f13224,f13226,f13227,f13228,f13229,f13230,f13232,f13234,f13235,f13237,f13468,f13474,f13484,f13490,f13493,f13495,f13496,f13497,f13498,f13499,f13501,f13503,f13504,f13509,f13576,f13586,f13591,f13593,f13594,f13595,f13596,f13597,f13600,f13603,f13604,f13541,f13633,f13637,f14059,f13949,f13950,f14060,f13981,f14079,f14190,f14391,f14278,f14279,f14392,f14312,f14413,f14631,f14516,f14517,f14632,f14552,f14653,f14825,f14826,f14833,f14834,f14957,f14941,f14946,f14951,f14953,f14954,f6172,f15489,f15492,f15495,f15498,f15376,f15377,f15379,f15380,f15383,f15384,f15386,f15387,f15388,f15389,f15390,f15391,f15392,f15393,f15395,f15396,f15399,f15406,f15407,f15411,f15412,f15414,f15487,f15416,f15417,f15419,f15420,f15421,f15422,f15424,f15426,f15427,f15428,f15430,f15432,f15434,f15435,f15486,f15485,f15438,f15439,f15441,f15442,f15443,f15444,f15446,f15447,f15449,f15450,f15453,f15454,f15456,f15457,f15484])).
fof(f15465,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | ($spl34 | $spl48)),
  inference(backward_demodulation,[],[f6172,f10982])).
fof(f10982,plain,(
  ( ! [X0] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))))))))),s('type.num.num','const.arithmetic.ZERO_0'))))) ) | $spl34),
  inference(unit_resulting_resolution,[],[f9557,f1214])).
fof(f9557,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))))) ) | $spl34),
  inference(superposition,[],[f4146,f197])).
fof(f4146,plain,(
  ( ! [X2] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X2)))))))))) ) | $spl34),
  inference(superposition,[],[f2085,f202])).
fof(f15586,plain,(
  $false | ($spl34 | $spl48)),
  inference(global_subsumption,[],[f15464,f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f428,f429,f268,f194,f235,f231,f230,f229,f228,f200,f256,f255,f247,f246,f245,f244,f199,f198,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f433,f406,f250,f249,f207,f191,f184,f183,f179,f691,f733,f854,f966,f968,f969,f970,f971,f972,f973,f975,f976,f978,f979,f980,f1024,f1143,f1153,f1165,f2809,f2823,f2826,f2830,f3082,f3089,f3374,f3421,f5542,f5640,f5932,f6289,f4727,f4254,f2243,f241,f238,f234,f193,f692,f3568,f3563,f3504,f3570,f3564,f5997,f5605,f6355,f3565,f3562,f3567,f3566,f6796,f3545,f4280,f4747,f3538,f3530,f3484,f3532,f3531,f6759,f6758,f5367,f3485,f7226,f7225,f7219,f7217,f7216,f7206,f7201,f5370,f5369,f3529,f3482,f226,f224,f223,f222,f221,f195,f734,f3533,f7194,f3624,f3623,f3622,f5083,f5261,f3621,f5053,f5231,f7212,f7200,f7198,f7193,f7192,f7191,f7190,f5344,f4991,f4974,f4867,f4851,f4551,f4535,f4454,f4438,f4109,f4091,f3675,f3653,f3537,f2128,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11603,f11604,f11570,f11571,f11572,f11573,f11575,f11577,f11579,f11582,f11588,f11593,f11597,f11598,f11599,f12952,f13160,f13164,f13170,f13259,f13269,f13274,f13276,f13277,f13278,f13279,f13280,f13283,f13286,f13287,f13205,f13215,f13221,f13224,f13226,f13227,f13228,f13229,f13230,f13232,f13234,f13235,f13237,f13468,f13474,f13484,f13490,f13493,f13495,f13496,f13497,f13498,f13499,f13501,f13503,f13504,f13509,f13576,f13586,f13591,f13593,f13594,f13595,f13596,f13597,f13600,f13603,f13604,f13541,f13633,f13637,f14059,f13949,f13950,f14060,f13981,f14079,f14190,f14391,f14278,f14279,f14392,f14312,f14413,f14631,f14516,f14517,f14632,f14552,f14653,f14825,f14826,f14833,f14834,f14957,f14941,f14946,f14951,f14953,f14954,f6172,f15489,f15492,f15495,f15498,f15376,f15377,f15379,f15380,f15383,f15384,f15386,f15387,f15388,f15389,f15390,f15391,f15392,f15393,f15395,f15396,f15399,f15406,f15407,f15411,f15412,f15414,f15487,f15416,f15417,f15419,f15420,f15421,f15422,f15424,f15426,f15427,f15428,f15430,f15432,f15434,f15435,f15486,f15485,f15438,f15439,f15441,f15442,f15443,f15444,f15446,f15447,f15449,f15450,f15453,f15454,f15456,f15457,f15484])).
fof(f15464,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | ($spl34 | $spl48)),
  inference(backward_demodulation,[],[f6172,f9307])).
fof(f9307,plain,(
  ( ! [X2] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X2))))))))),s('type.num.num','const.arithmetic.ZERO_0'))))) ) | $spl34),
  inference(superposition,[],[f4110,f202])).
fof(f15585,plain,(
  $false | ($spl34 | $spl48)),
  inference(global_subsumption,[],[f15463,f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f428,f429,f268,f194,f235,f231,f230,f229,f228,f200,f256,f255,f247,f246,f245,f244,f199,f198,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f433,f406,f250,f249,f207,f191,f184,f183,f179,f691,f733,f854,f966,f968,f969,f970,f971,f972,f973,f975,f976,f978,f979,f980,f1024,f1143,f1153,f1165,f2809,f2823,f2826,f2830,f3082,f3089,f3374,f3421,f5542,f5640,f5932,f6289,f4727,f4254,f2243,f241,f238,f234,f193,f692,f3568,f3563,f3504,f3570,f3564,f5997,f5605,f6355,f3565,f3562,f3567,f3566,f6796,f3545,f4280,f4747,f3538,f3530,f3484,f3532,f3531,f6759,f6758,f5367,f3485,f7226,f7225,f7219,f7217,f7216,f7206,f7201,f5370,f5369,f3529,f3482,f226,f224,f223,f222,f221,f195,f734,f3533,f7194,f3624,f3623,f3622,f5083,f5261,f3621,f5053,f5231,f7212,f7200,f7198,f7193,f7192,f7191,f7190,f5344,f4991,f4974,f4867,f4851,f4551,f4535,f4454,f4438,f4109,f4091,f3675,f3653,f3537,f2128,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11603,f11604,f11570,f11571,f11572,f11573,f11575,f11577,f11579,f11582,f11588,f11593,f11597,f11598,f11599,f12952,f13160,f13164,f13170,f13259,f13269,f13274,f13276,f13277,f13278,f13279,f13280,f13283,f13286,f13287,f13205,f13215,f13221,f13224,f13226,f13227,f13228,f13229,f13230,f13232,f13234,f13235,f13237,f13468,f13474,f13484,f13490,f13493,f13495,f13496,f13497,f13498,f13499,f13501,f13503,f13504,f13509,f13576,f13586,f13591,f13593,f13594,f13595,f13596,f13597,f13600,f13603,f13604,f13541,f13633,f13637,f14059,f13949,f13950,f14060,f13981,f14079,f14190,f14391,f14278,f14279,f14392,f14312,f14413,f14631,f14516,f14517,f14632,f14552,f14653,f14825,f14826,f14833,f14834,f14957,f14941,f14946,f14951,f14953,f14954,f6172,f15489,f15492,f15495,f15498,f15376,f15377,f15379,f15380,f15383,f15384,f15386,f15387,f15388,f15389,f15390,f15391,f15392,f15393,f15395,f15396,f15399,f15406,f15407,f15411,f15412,f15414,f15487,f15416,f15417,f15419,f15420,f15421,f15422,f15424,f15426,f15427,f15428,f15430,f15432,f15434,f15435,f15486,f15485,f15438,f15439,f15441,f15442,f15443,f15444,f15446,f15447,f15449,f15450,f15453,f15454,f15456,f15457,f15484])).
fof(f15463,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | ($spl34 | $spl48)),
  inference(backward_demodulation,[],[f6172,f11021])).
fof(f11021,plain,(
  ( ! [X0] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))))))))),s('type.num.num','const.arithmetic.ZERO_0'))))) ) | $spl34),
  inference(unit_resulting_resolution,[],[f9793,f1214])).
fof(f9793,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))))) ) | $spl34),
  inference(superposition,[],[f4185,f197])).
fof(f4185,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1)))))))))) ) | $spl34),
  inference(superposition,[],[f2086,f199])).
fof(f2086,plain,(
  ( ! [X2] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X2)))))))) ) | $spl34),
  inference(superposition,[],[f2056,f202])).
fof(f15584,plain,(
  $false | ($spl34 | $spl48)),
  inference(global_subsumption,[],[f15462,f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f428,f429,f268,f194,f235,f231,f230,f229,f228,f200,f256,f255,f247,f246,f245,f244,f199,f198,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f433,f406,f250,f249,f207,f191,f184,f183,f179,f691,f733,f854,f966,f968,f969,f970,f971,f972,f973,f975,f976,f978,f979,f980,f1024,f1143,f1153,f1165,f2809,f2823,f2826,f2830,f3082,f3089,f3374,f3421,f5542,f5640,f5932,f6289,f4727,f4254,f2243,f241,f238,f234,f193,f692,f3568,f3563,f3504,f3570,f3564,f5997,f5605,f6355,f3565,f3562,f3567,f3566,f6796,f3545,f4280,f4747,f3538,f3530,f3484,f3532,f3531,f6759,f6758,f5367,f3485,f7226,f7225,f7219,f7217,f7216,f7206,f7201,f5370,f5369,f3529,f3482,f226,f224,f223,f222,f221,f195,f734,f3533,f7194,f3624,f3623,f3622,f5083,f5261,f3621,f5053,f5231,f7212,f7200,f7198,f7193,f7192,f7191,f7190,f5344,f4991,f4974,f4867,f4851,f4551,f4535,f4454,f4438,f4109,f4091,f3675,f3653,f3537,f2128,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11603,f11604,f11570,f11571,f11572,f11573,f11575,f11577,f11579,f11582,f11588,f11593,f11597,f11598,f11599,f12952,f13160,f13164,f13170,f13259,f13269,f13274,f13276,f13277,f13278,f13279,f13280,f13283,f13286,f13287,f13205,f13215,f13221,f13224,f13226,f13227,f13228,f13229,f13230,f13232,f13234,f13235,f13237,f13468,f13474,f13484,f13490,f13493,f13495,f13496,f13497,f13498,f13499,f13501,f13503,f13504,f13509,f13576,f13586,f13591,f13593,f13594,f13595,f13596,f13597,f13600,f13603,f13604,f13541,f13633,f13637,f14059,f13949,f13950,f14060,f13981,f14079,f14190,f14391,f14278,f14279,f14392,f14312,f14413,f14631,f14516,f14517,f14632,f14552,f14653,f14825,f14826,f14833,f14834,f14957,f14941,f14946,f14951,f14953,f14954,f6172,f15489,f15492,f15495,f15498,f15376,f15377,f15379,f15380,f15383,f15384,f15386,f15387,f15388,f15389,f15390,f15391,f15392,f15393,f15395,f15396,f15399,f15406,f15407,f15411,f15412,f15414,f15487,f15416,f15417,f15419,f15420,f15421,f15422,f15424,f15426,f15427,f15428,f15430,f15432,f15434,f15435,f15486,f15485,f15438,f15439,f15441,f15442,f15443,f15444,f15446,f15447,f15449,f15450,f15453,f15454,f15456,f15457,f15484])).
fof(f15462,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | ($spl34 | $spl48)),
  inference(backward_demodulation,[],[f6172,f9608])).
fof(f9608,plain,(
  ( ! [X1] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))))))))),s('type.num.num','const.arithmetic.ZERO_0'))))) ) | $spl34),
  inference(superposition,[],[f4150,f199])).
fof(f4150,plain,(
  ( ! [X0] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))))))),s('type.num.num','const.arithmetic.ZERO_0'))))) ) | $spl34),
  inference(unit_resulting_resolution,[],[f2086,f1214])).
fof(f15583,plain,(
  $false | ($spl34 | $spl48)),
  inference(global_subsumption,[],[f15461,f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f428,f429,f268,f194,f235,f231,f230,f229,f228,f200,f256,f255,f247,f246,f245,f244,f199,f198,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f433,f406,f250,f249,f207,f191,f184,f183,f179,f691,f733,f854,f966,f968,f969,f970,f971,f972,f973,f975,f976,f978,f979,f980,f1024,f1143,f1153,f1165,f2809,f2823,f2826,f2830,f3082,f3089,f3374,f3421,f5542,f5640,f5932,f6289,f4727,f4254,f2243,f241,f238,f234,f193,f692,f3568,f3563,f3504,f3570,f3564,f5997,f5605,f6355,f3565,f3562,f3567,f3566,f6796,f3545,f4280,f4747,f3538,f3530,f3484,f3532,f3531,f6759,f6758,f5367,f3485,f7226,f7225,f7219,f7217,f7216,f7206,f7201,f5370,f5369,f3529,f3482,f226,f224,f223,f222,f221,f195,f734,f3533,f7194,f3624,f3623,f3622,f5083,f5261,f3621,f5053,f5231,f7212,f7200,f7198,f7193,f7192,f7191,f7190,f5344,f4991,f4974,f4867,f4851,f4551,f4535,f4454,f4438,f4109,f4091,f3675,f3653,f3537,f2128,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11603,f11604,f11570,f11571,f11572,f11573,f11575,f11577,f11579,f11582,f11588,f11593,f11597,f11598,f11599,f12952,f13160,f13164,f13170,f13259,f13269,f13274,f13276,f13277,f13278,f13279,f13280,f13283,f13286,f13287,f13205,f13215,f13221,f13224,f13226,f13227,f13228,f13229,f13230,f13232,f13234,f13235,f13237,f13468,f13474,f13484,f13490,f13493,f13495,f13496,f13497,f13498,f13499,f13501,f13503,f13504,f13509,f13576,f13586,f13591,f13593,f13594,f13595,f13596,f13597,f13600,f13603,f13604,f13541,f13633,f13637,f14059,f13949,f13950,f14060,f13981,f14079,f14190,f14391,f14278,f14279,f14392,f14312,f14413,f14631,f14516,f14517,f14632,f14552,f14653,f14825,f14826,f14833,f14834,f14957,f14941,f14946,f14951,f14953,f14954,f6172,f15489,f15492,f15495,f15498,f15376,f15377,f15379,f15380,f15383,f15384,f15386,f15387,f15388,f15389,f15390,f15391,f15392,f15393,f15395,f15396,f15399,f15406,f15407,f15411,f15412,f15414,f15487,f15416,f15417,f15419,f15420,f15421,f15422,f15424,f15426,f15427,f15428,f15430,f15432,f15434,f15435,f15486,f15485,f15438,f15439,f15441,f15442,f15443,f15444,f15446,f15447,f15449,f15450,f15453,f15454,f15456,f15457,f15484])).
fof(f15461,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | ($spl34 | $spl48)),
  inference(backward_demodulation,[],[f6172,f9609])).
fof(f9609,plain,(
  ( ! [X2] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X2))))))))),s('type.num.num','const.arithmetic.ZERO_0'))))) ) | $spl34),
  inference(superposition,[],[f4150,f202])).
fof(f15582,plain,(
  $false | ($spl34 | $spl48)),
  inference(global_subsumption,[],[f15460,f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f428,f429,f268,f194,f235,f231,f230,f229,f228,f200,f256,f255,f247,f246,f245,f244,f199,f198,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f433,f406,f250,f249,f207,f191,f184,f183,f179,f691,f733,f854,f966,f968,f969,f970,f971,f972,f973,f975,f976,f978,f979,f980,f1024,f1143,f1153,f1165,f2809,f2823,f2826,f2830,f3082,f3089,f3374,f3421,f5542,f5640,f5932,f6289,f4727,f4254,f2243,f241,f238,f234,f193,f692,f3568,f3563,f3504,f3570,f3564,f5997,f5605,f6355,f3565,f3562,f3567,f3566,f6796,f3545,f4280,f4747,f3538,f3530,f3484,f3532,f3531,f6759,f6758,f5367,f3485,f7226,f7225,f7219,f7217,f7216,f7206,f7201,f5370,f5369,f3529,f3482,f226,f224,f223,f222,f221,f195,f734,f3533,f7194,f3624,f3623,f3622,f5083,f5261,f3621,f5053,f5231,f7212,f7200,f7198,f7193,f7192,f7191,f7190,f5344,f4991,f4974,f4867,f4851,f4551,f4535,f4454,f4438,f4109,f4091,f3675,f3653,f3537,f2128,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11603,f11604,f11570,f11571,f11572,f11573,f11575,f11577,f11579,f11582,f11588,f11593,f11597,f11598,f11599,f12952,f13160,f13164,f13170,f13259,f13269,f13274,f13276,f13277,f13278,f13279,f13280,f13283,f13286,f13287,f13205,f13215,f13221,f13224,f13226,f13227,f13228,f13229,f13230,f13232,f13234,f13235,f13237,f13468,f13474,f13484,f13490,f13493,f13495,f13496,f13497,f13498,f13499,f13501,f13503,f13504,f13509,f13576,f13586,f13591,f13593,f13594,f13595,f13596,f13597,f13600,f13603,f13604,f13541,f13633,f13637,f14059,f13949,f13950,f14060,f13981,f14079,f14190,f14391,f14278,f14279,f14392,f14312,f14413,f14631,f14516,f14517,f14632,f14552,f14653,f14825,f14826,f14833,f14834,f14957,f14941,f14946,f14951,f14953,f14954,f6172,f15489,f15492,f15495,f15498,f15376,f15377,f15379,f15380,f15383,f15384,f15386,f15387,f15388,f15389,f15390,f15391,f15392,f15393,f15395,f15396,f15399,f15406,f15407,f15411,f15412,f15414,f15487,f15416,f15417,f15419,f15420,f15421,f15422,f15424,f15426,f15427,f15428,f15430,f15432,f15434,f15435,f15486,f15485,f15438,f15439,f15441,f15442,f15443,f15444,f15446,f15447,f15449,f15450,f15453,f15454,f15456,f15457,f15484])).
fof(f15460,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | ($spl34 | $spl48)),
  inference(backward_demodulation,[],[f6172,f11080])).
fof(f11080,plain,(
  ( ! [X0] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))))))))),s('type.num.num','const.arithmetic.ZERO_0'))))) ) | $spl34),
  inference(unit_resulting_resolution,[],[f9837,f1214])).
fof(f9837,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))))) ) | $spl34),
  inference(superposition,[],[f4186,f197])).
fof(f4186,plain,(
  ( ! [X2] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X2)))))))))) ) | $spl34),
  inference(superposition,[],[f2086,f202])).
fof(f15581,plain,(
  $false | ($spl34 | $spl48)),
  inference(global_subsumption,[],[f15459,f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f428,f429,f268,f194,f235,f231,f230,f229,f228,f200,f256,f255,f247,f246,f245,f244,f199,f198,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f433,f406,f250,f249,f207,f191,f184,f183,f179,f691,f733,f854,f966,f968,f969,f970,f971,f972,f973,f975,f976,f978,f979,f980,f1024,f1143,f1153,f1165,f2809,f2823,f2826,f2830,f3082,f3089,f3374,f3421,f5542,f5640,f5932,f6289,f4727,f4254,f2243,f241,f238,f234,f193,f692,f3568,f3563,f3504,f3570,f3564,f5997,f5605,f6355,f3565,f3562,f3567,f3566,f6796,f3545,f4280,f4747,f3538,f3530,f3484,f3532,f3531,f6759,f6758,f5367,f3485,f7226,f7225,f7219,f7217,f7216,f7206,f7201,f5370,f5369,f3529,f3482,f226,f224,f223,f222,f221,f195,f734,f3533,f7194,f3624,f3623,f3622,f5083,f5261,f3621,f5053,f5231,f7212,f7200,f7198,f7193,f7192,f7191,f7190,f5344,f4991,f4974,f4867,f4851,f4551,f4535,f4454,f4438,f4109,f4091,f3675,f3653,f3537,f2128,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11603,f11604,f11570,f11571,f11572,f11573,f11575,f11577,f11579,f11582,f11588,f11593,f11597,f11598,f11599,f12952,f13160,f13164,f13170,f13259,f13269,f13274,f13276,f13277,f13278,f13279,f13280,f13283,f13286,f13287,f13205,f13215,f13221,f13224,f13226,f13227,f13228,f13229,f13230,f13232,f13234,f13235,f13237,f13468,f13474,f13484,f13490,f13493,f13495,f13496,f13497,f13498,f13499,f13501,f13503,f13504,f13509,f13576,f13586,f13591,f13593,f13594,f13595,f13596,f13597,f13600,f13603,f13604,f13541,f13633,f13637,f14059,f13949,f13950,f14060,f13981,f14079,f14190,f14391,f14278,f14279,f14392,f14312,f14413,f14631,f14516,f14517,f14632,f14552,f14653,f14825,f14826,f14833,f14834,f14957,f14941,f14946,f14951,f14953,f14954,f6172,f15489,f15492,f15495,f15498,f15376,f15377,f15379,f15380,f15383,f15384,f15386,f15387,f15388,f15389,f15390,f15391,f15392,f15393,f15395,f15396,f15399,f15406,f15407,f15411,f15412,f15414,f15487,f15416,f15417,f15419,f15420,f15421,f15422,f15424,f15426,f15427,f15428,f15430,f15432,f15434,f15435,f15486,f15485,f15438,f15439,f15441,f15442,f15443,f15444,f15446,f15447,f15449,f15450,f15453,f15454,f15456,f15457,f15484])).
fof(f15459,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | ($spl34 | $spl48)),
  inference(backward_demodulation,[],[f6172,f11074])).
fof(f11074,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.arithmetic.ZERO_0')))) | $spl34),
  inference(unit_resulting_resolution,[],[f9836,f1214])).
fof(f9836,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl34),
  inference(superposition,[],[f4186,f177])).
fof(f15580,plain,(
  $false | $spl48),
  inference(global_subsumption,[],[f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f428,f429,f268,f194,f235,f231,f230,f229,f228,f200,f256,f255,f247,f246,f245,f244,f199,f198,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f433,f406,f250,f249,f207,f191,f184,f183,f179,f691,f733,f854,f966,f968,f969,f970,f971,f972,f973,f975,f976,f978,f979,f980,f1024,f1143,f1153,f1165,f2809,f2823,f2826,f2830,f3082,f3089,f3374,f3421,f5542,f5640,f5932,f6289,f4727,f4254,f2243,f241,f238,f234,f193,f692,f3568,f3563,f3504,f3570,f3564,f5997,f5605,f6355,f3565,f3562,f3567,f3566,f6796,f3545,f4280,f4747,f3538,f3530,f3484,f3532,f3531,f6759,f6758,f5367,f3485,f7226,f7225,f7219,f7217,f7216,f7206,f7201,f5370,f5369,f3529,f3482,f226,f224,f223,f222,f221,f195,f734,f3533,f7194,f3624,f3623,f3622,f5083,f5261,f3621,f5053,f5231,f7212,f7200,f7198,f7193,f7192,f7191,f7190,f5344,f4991,f4974,f4867,f4851,f4551,f4535,f4454,f4438,f4109,f4091,f3675,f3653,f3537,f2128,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11603,f11604,f11570,f11571,f11572,f11573,f11575,f11577,f11579,f11582,f11588,f11593,f11597,f11598,f11599,f12952,f13160,f13164,f13170,f13259,f13269,f13274,f13276,f13277,f13278,f13279,f13280,f13283,f13286,f13287,f13205,f13215,f13221,f13224,f13226,f13227,f13228,f13229,f13230,f13232,f13234,f13235,f13237,f13468,f13474,f13484,f13490,f13493,f13495,f13496,f13497,f13498,f13499,f13501,f13503,f13504,f13509,f13576,f13586,f13591,f13593,f13594,f13595,f13596,f13597,f13600,f13603,f13604,f13541,f13633,f13637,f14059,f13949,f13950,f14060,f13981,f14079,f14190,f14391,f14278,f14279,f14392,f14312,f14413,f14631,f14516,f14517,f14632,f14552,f14653,f14825,f14826,f14833,f14834,f14957,f14941,f14946,f14951,f14953,f14954,f6172,f15489,f15492,f15495,f15498,f15376,f15377,f15379,f15380,f15383,f15384,f15386,f15387,f15388,f15389,f15390,f15391,f15392,f15393,f15395,f15396,f15399,f15406,f15407,f15411,f15412,f15414,f15487,f15416,f15417,f15419,f15420,f15421,f15422,f15424,f15426,f15427,f15428,f15430,f15432,f15434,f15435,f15486,f15485,f15438,f15439,f15441,f15442,f15443,f15444,f15446,f15447,f15449,f15450,f15453,f15454,f15456,f15457,f15484])).
fof(f15579,plain,(
  $false | $spl48),
  inference(global_subsumption,[],[f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f428,f429,f268,f194,f235,f231,f230,f229,f228,f200,f256,f255,f247,f246,f245,f244,f199,f198,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f433,f406,f250,f249,f207,f191,f184,f183,f179,f691,f733,f854,f966,f968,f969,f970,f971,f972,f973,f975,f976,f978,f979,f980,f1024,f1143,f1153,f1165,f2809,f2823,f2826,f2830,f3082,f3089,f3374,f3421,f5542,f5640,f5932,f6289,f4727,f4254,f2243,f241,f238,f234,f193,f692,f3568,f3563,f3504,f3570,f3564,f5997,f5605,f6355,f3565,f3562,f3567,f3566,f6796,f3545,f4280,f4747,f3538,f3530,f3484,f3532,f3531,f6759,f6758,f5367,f3485,f7226,f7225,f7219,f7217,f7216,f7206,f7201,f5370,f5369,f3529,f3482,f226,f224,f223,f222,f221,f195,f734,f3533,f7194,f3624,f3623,f3622,f5083,f5261,f3621,f5053,f5231,f7212,f7200,f7198,f7193,f7192,f7191,f7190,f5344,f4991,f4974,f4867,f4851,f4551,f4535,f4454,f4438,f4109,f4091,f3675,f3653,f3537,f2128,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11603,f11604,f11570,f11571,f11572,f11573,f11575,f11577,f11579,f11582,f11588,f11593,f11597,f11598,f11599,f12952,f13160,f13164,f13170,f13259,f13269,f13274,f13276,f13277,f13278,f13279,f13280,f13283,f13286,f13287,f13205,f13215,f13221,f13224,f13226,f13227,f13228,f13229,f13230,f13232,f13234,f13235,f13237,f13468,f13474,f13484,f13490,f13493,f13495,f13496,f13497,f13498,f13499,f13501,f13503,f13504,f13509,f13576,f13586,f13591,f13593,f13594,f13595,f13596,f13597,f13600,f13603,f13604,f13541,f13633,f13637,f14059,f13949,f13950,f14060,f13981,f14079,f14190,f14391,f14278,f14279,f14392,f14312,f14413,f14631,f14516,f14517,f14632,f14552,f14653,f14825,f14826,f14833,f14834,f14957,f14941,f14946,f14951,f14953,f14954,f6172,f15489,f15492,f15495,f15498,f15376,f15377,f15379,f15380,f15383,f15384,f15386,f15387,f15388,f15389,f15390,f15391,f15392,f15393,f15395,f15396,f15399,f15406,f15407,f15411,f15412,f15414,f15487,f15416,f15417,f15419,f15420,f15421,f15422,f15424,f15426,f15427,f15428,f15430,f15432,f15434,f15435,f15486,f15485,f15438,f15439,f15441,f15442,f15443,f15444,f15446,f15447,f15449,f15450,f15453,f15454,f15456,f15457])).
fof(f15578,plain,(
  $false | $spl48),
  inference(global_subsumption,[],[f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f428,f429,f268,f194,f235,f231,f230,f229,f228,f200,f256,f255,f247,f246,f245,f244,f199,f198,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f433,f406,f250,f249,f207,f191,f184,f183,f179,f691,f733,f854,f966,f968,f969,f970,f971,f972,f973,f975,f976,f978,f979,f980,f1024,f1143,f1153,f1165,f2809,f2823,f2826,f2830,f3082,f3089,f3374,f3421,f5542,f5640,f5932,f6289,f4727,f4254,f2243,f241,f238,f234,f193,f692,f3568,f3563,f3504,f3570,f3564,f5997,f5605,f6355,f3565,f3562,f3567,f3566,f6796,f3545,f4280,f4747,f3538,f3530,f3484,f3532,f3531,f6759,f6758,f5367,f3485,f7226,f7225,f7219,f7217,f7216,f7206,f7201,f5370,f5369,f3529,f3482,f226,f224,f223,f222,f221,f195,f734,f3533,f7194,f3624,f3623,f3622,f5083,f5261,f3621,f5053,f5231,f7212,f7200,f7198,f7193,f7192,f7191,f7190,f5344,f4991,f4974,f4867,f4851,f4551,f4535,f4454,f4438,f4109,f4091,f3675,f3653,f3537,f2128,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11603,f11604,f11570,f11571,f11572,f11573,f11575,f11577,f11579,f11582,f11588,f11593,f11597,f11598,f11599,f12952,f13160,f13164,f13170,f13259,f13269,f13274,f13276,f13277,f13278,f13279,f13280,f13283,f13286,f13287,f13205,f13215,f13221,f13224,f13226,f13227,f13228,f13229,f13230,f13232,f13234,f13235,f13237,f13468,f13474,f13484,f13490,f13493,f13495,f13496,f13497,f13498,f13499,f13501,f13503,f13504,f13509,f13576,f13586,f13591,f13593,f13594,f13595,f13596,f13597,f13600,f13603,f13604,f13541,f13633,f13637,f14059,f13949,f13950,f14060,f13981,f14079,f14190,f14391,f14278,f14279,f14392,f14312,f14413,f14631,f14516,f14517,f14632,f14552,f14653,f14825,f14826,f14833,f14834,f14957,f14941,f14946,f14951,f14953,f14954,f6172,f15489,f15492,f15495,f15498,f15376,f15377,f15379,f15380,f15383,f15384,f15386,f15387,f15388,f15389,f15390,f15391,f15392,f15393,f15395,f15396,f15399,f15406,f15407,f15411,f15412,f15414,f15487,f15416,f15417,f15419,f15420,f15421,f15422,f15424,f15426,f15427,f15428,f15430,f15432,f15434,f15435,f15486,f15485,f15438,f15439,f15441,f15442,f15443,f15444,f15446,f15447,f15449,f15450,f15453,f15454,f15456])).
fof(f15577,plain,(
  $false | ($spl34 | $spl48)),
  inference(global_subsumption,[],[f15455,f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f428,f429,f268,f194,f235,f231,f230,f229,f228,f200,f256,f255,f247,f246,f245,f244,f199,f198,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f433,f406,f250,f249,f207,f191,f184,f183,f179,f691,f733,f854,f966,f968,f969,f970,f971,f972,f973,f975,f976,f978,f979,f980,f1024,f1143,f1153,f1165,f2809,f2823,f2826,f2830,f3082,f3089,f3374,f3421,f5542,f5640,f5932,f6289,f4727,f4254,f2243,f241,f238,f234,f193,f692,f3568,f3563,f3504,f3570,f3564,f5997,f5605,f6355,f3565,f3562,f3567,f3566,f6796,f3545,f4280,f4747,f3538,f3530,f3484,f3532,f3531,f6759,f6758,f5367,f3485,f7226,f7225,f7219,f7217,f7216,f7206,f7201,f5370,f5369,f3529,f3482,f226,f224,f223,f222,f221,f195,f734,f3533,f7194,f3624,f3623,f3622,f5083,f5261,f3621,f5053,f5231,f7212,f7200,f7198,f7193,f7192,f7191,f7190,f5344,f4991,f4974,f4867,f4851,f4551,f4535,f4454,f4438,f4109,f4091,f3675,f3653,f3537,f2128,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11603,f11604,f11570,f11571,f11572,f11573,f11575,f11577,f11579,f11582,f11588,f11593,f11597,f11598,f11599,f12952,f13160,f13164,f13170,f13259,f13269,f13274,f13276,f13277,f13278,f13279,f13280,f13283,f13286,f13287,f13205,f13215,f13221,f13224,f13226,f13227,f13228,f13229,f13230,f13232,f13234,f13235,f13237,f13468,f13474,f13484,f13490,f13493,f13495,f13496,f13497,f13498,f13499,f13501,f13503,f13504,f13509,f13576,f13586,f13591,f13593,f13594,f13595,f13596,f13597,f13600,f13603,f13604,f13541,f13633,f13637,f14059,f13949,f13950,f14060,f13981,f14079,f14190,f14391,f14278,f14279,f14392,f14312,f14413,f14631,f14516,f14517,f14632,f14552,f14653,f14825,f14826,f14833,f14834,f14957,f14941,f14946,f14951,f14953,f14954,f6172,f15489,f15492,f15495,f15498,f15376,f15377,f15379,f15380,f15383,f15384,f15386,f15387,f15388,f15389,f15390,f15391,f15392,f15393,f15395,f15396,f15399,f15406,f15407,f15411,f15412,f15414,f15487,f15416,f15417,f15419,f15420,f15421,f15422,f15424,f15426,f15427,f15428,f15430,f15432,f15434,f15435,f15486,f15485,f15438,f15439,f15441,f15442,f15443,f15444,f15446,f15447,f15449,f15450,f15453,f15454])).
fof(f15455,plain,(
  ( ! [X144,X142,X143] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,happ(s(fun(X142,bool),X143),s(X142,X144))))) ) | ($spl34 | $spl48)),
  inference(backward_demodulation,[],[f6172,f11607])).
fof(f11607,plain,(
  ( ! [X144,X142,X143,X141] : (p(s(bool,happ(s(fun(X142,bool),X143),s(X142,sK13('const.arithmetic.>=_2'(s('type.num.num',X141),s('type.num.num','const.arithmetic.ZERO_0')),X143,X142))))) | ~p(s(bool,happ(s(fun(X142,bool),X143),s(X142,X144))))) ) | $spl34),
  inference(subsumption_resolution,[],[f11596,f174])).
fof(f11596,plain,(
  ( ! [X144,X142,X143,X141] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun(X142,bool),X143),s(X142,sK13('const.arithmetic.>=_2'(s('type.num.num',X141),s('type.num.num','const.arithmetic.ZERO_0')),X143,X142))))) | ~p(s(bool,happ(s(fun(X142,bool),X143),s(X142,X144))))) ) | $spl34),
  inference(superposition,[],[f226,f1181])).
fof(f1181,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl34),
  inference(backward_demodulation,[],[f1171,f190])).
fof(f15576,plain,(
  $false | $spl48),
  inference(global_subsumption,[],[f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f428,f429,f268,f194,f235,f231,f230,f229,f228,f200,f256,f255,f247,f246,f245,f244,f199,f198,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f433,f406,f250,f249,f207,f191,f184,f183,f179,f691,f733,f854,f966,f968,f969,f970,f971,f972,f973,f975,f976,f978,f979,f980,f1024,f1143,f1153,f1165,f2809,f2823,f2826,f2830,f3082,f3089,f3374,f3421,f5542,f5640,f5932,f6289,f4727,f4254,f2243,f241,f238,f234,f193,f692,f3568,f3563,f3504,f3570,f3564,f5997,f5605,f6355,f3565,f3562,f3567,f3566,f6796,f3545,f4280,f4747,f3538,f3530,f3484,f3532,f3531,f6759,f6758,f5367,f3485,f7226,f7225,f7219,f7217,f7216,f7206,f7201,f5370,f5369,f3529,f3482,f226,f224,f223,f222,f221,f195,f734,f3533,f7194,f3624,f3623,f3622,f5083,f5261,f3621,f5053,f5231,f7212,f7200,f7198,f7193,f7192,f7191,f7190,f5344,f4991,f4974,f4867,f4851,f4551,f4535,f4454,f4438,f4109,f4091,f3675,f3653,f3537,f2128,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11603,f11604,f11570,f11571,f11572,f11573,f11575,f11577,f11579,f11582,f11588,f11593,f11597,f11598,f11599,f12952,f13160,f13164,f13170,f13259,f13269,f13274,f13276,f13277,f13278,f13279,f13280,f13283,f13286,f13287,f13205,f13215,f13221,f13224,f13226,f13227,f13228,f13229,f13230,f13232,f13234,f13235,f13237,f13468,f13474,f13484,f13490,f13493,f13495,f13496,f13497,f13498,f13499,f13501,f13503,f13504,f13509,f13576,f13586,f13591,f13593,f13594,f13595,f13596,f13597,f13600,f13603,f13604,f13541,f13633,f13637,f14059,f13949,f13950,f14060,f13981,f14079,f14190,f14391,f14278,f14279,f14392,f14312,f14413,f14631,f14516,f14517,f14632,f14552,f14653,f14825,f14826,f14833,f14834,f14957,f14941,f14946,f14951,f14953,f14954,f6172,f15489,f15492,f15495,f15498,f15376,f15377,f15379,f15380,f15383,f15384,f15386,f15387,f15388,f15389,f15390,f15391,f15392,f15393,f15395,f15396,f15399,f15406,f15407,f15411,f15412,f15414,f15487,f15416,f15417,f15419,f15420,f15421,f15422,f15424,f15426,f15427,f15428,f15430,f15432,f15434,f15435,f15486,f15485,f15438,f15439,f15441,f15442,f15443,f15444,f15446,f15447,f15449,f15450,f15453,f15454])).
fof(f15575,plain,(
  $false | $spl48),
  inference(global_subsumption,[],[f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f428,f429,f268,f194,f235,f231,f230,f229,f228,f200,f256,f255,f247,f246,f245,f244,f199,f198,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f433,f406,f250,f249,f207,f191,f184,f183,f179,f691,f733,f854,f966,f968,f969,f970,f971,f972,f973,f975,f976,f978,f979,f980,f1024,f1143,f1153,f1165,f2809,f2823,f2826,f2830,f3082,f3089,f3374,f3421,f5542,f5640,f5932,f6289,f4727,f4254,f2243,f241,f238,f234,f193,f692,f3568,f3563,f3504,f3570,f3564,f5997,f5605,f6355,f3565,f3562,f3567,f3566,f6796,f3545,f4280,f4747,f3538,f3530,f3484,f3532,f3531,f6759,f6758,f5367,f3485,f7226,f7225,f7219,f7217,f7216,f7206,f7201,f5370,f5369,f3529,f3482,f226,f224,f223,f222,f221,f195,f734,f3533,f7194,f3624,f3623,f3622,f5083,f5261,f3621,f5053,f5231,f7212,f7200,f7198,f7193,f7192,f7191,f7190,f5344,f4991,f4974,f4867,f4851,f4551,f4535,f4454,f4438,f4109,f4091,f3675,f3653,f3537,f2128,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11603,f11604,f11570,f11571,f11572,f11573,f11575,f11577,f11579,f11582,f11588,f11593,f11597,f11598,f11599,f12952,f13160,f13164,f13170,f13259,f13269,f13274,f13276,f13277,f13278,f13279,f13280,f13283,f13286,f13287,f13205,f13215,f13221,f13224,f13226,f13227,f13228,f13229,f13230,f13232,f13234,f13235,f13237,f13468,f13474,f13484,f13490,f13493,f13495,f13496,f13497,f13498,f13499,f13501,f13503,f13504,f13509,f13576,f13586,f13591,f13593,f13594,f13595,f13596,f13597,f13600,f13603,f13604,f13541,f13633,f13637,f14059,f13949,f13950,f14060,f13981,f14079,f14190,f14391,f14278,f14279,f14392,f14312,f14413,f14631,f14516,f14517,f14632,f14552,f14653,f14825,f14826,f14833,f14834,f14957,f14941,f14946,f14951,f14953,f14954,f6172,f15489,f15492,f15495,f15498,f15376,f15377,f15379,f15380,f15383,f15384,f15386,f15387,f15388,f15389,f15390,f15391,f15392,f15393,f15395,f15396,f15399,f15406,f15407,f15411,f15412,f15414,f15487,f15416,f15417,f15419,f15420,f15421,f15422,f15424,f15426,f15427,f15428,f15430,f15432,f15434,f15435,f15486,f15485,f15438,f15439,f15441,f15442,f15443,f15444,f15446,f15447,f15449,f15450,f15453])).
fof(f15574,plain,(
  $false | ($spl34 | $spl48)),
  inference(global_subsumption,[],[f15452,f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f428,f429,f268,f194,f235,f231,f230,f229,f228,f200,f256,f255,f247,f246,f245,f244,f199,f198,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f433,f406,f250,f249,f207,f191,f184,f183,f179,f691,f733,f854,f966,f968,f969,f970,f971,f972,f973,f975,f976,f978,f979,f980,f1024,f1143,f1153,f1165,f2809,f2823,f2826,f2830,f3082,f3089,f3374,f3421,f5542,f5640,f5932,f6289,f4727,f4254,f2243,f241,f238,f234,f193,f692,f3568,f3563,f3504,f3570,f3564,f5997,f5605,f6355,f3565,f3562,f3567,f3566,f6796,f3545,f4280,f4747,f3538,f3530,f3484,f3532,f3531,f6759,f6758,f5367,f3485,f7226,f7225,f7219,f7217,f7216,f7206,f7201,f5370,f5369,f3529,f3482,f226,f224,f223,f222,f221,f195,f734,f3533,f7194,f3624,f3623,f3622,f5083,f5261,f3621,f5053,f5231,f7212,f7200,f7198,f7193,f7192,f7191,f7190,f5344,f4991,f4974,f4867,f4851,f4551,f4535,f4454,f4438,f4109,f4091,f3675,f3653,f3537,f2128,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11603,f11604,f11570,f11571,f11572,f11573,f11575,f11577,f11579,f11582,f11588,f11593,f11597,f11598,f11599,f12952,f13160,f13164,f13170,f13259,f13269,f13274,f13276,f13277,f13278,f13279,f13280,f13283,f13286,f13287,f13205,f13215,f13221,f13224,f13226,f13227,f13228,f13229,f13230,f13232,f13234,f13235,f13237,f13468,f13474,f13484,f13490,f13493,f13495,f13496,f13497,f13498,f13499,f13501,f13503,f13504,f13509,f13576,f13586,f13591,f13593,f13594,f13595,f13596,f13597,f13600,f13603,f13604,f13541,f13633,f13637,f14059,f13949,f13950,f14060,f13981,f14079,f14190,f14391,f14278,f14279,f14392,f14312,f14413,f14631,f14516,f14517,f14632,f14552,f14653,f14825,f14826,f14833,f14834,f14957,f14941,f14946,f14951,f14953,f14954,f6172,f15489,f15492,f15495,f15498,f15376,f15377,f15379,f15380,f15383,f15384,f15386,f15387,f15388,f15389,f15390,f15391,f15392,f15393,f15395,f15396,f15399,f15406,f15407,f15411,f15412,f15414,f15487,f15416,f15417,f15419,f15420,f15421,f15422,f15424,f15426,f15427,f15428,f15430,f15432,f15434,f15435,f15486,f15485,f15438,f15439,f15441,f15442,f15443,f15444,f15446,f15447,f15449,f15450])).
fof(f15452,plain,(
  ( ! [X109,X107,X108,X106] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X106),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,happ(s(fun(X107,bool),X108),s(X107,X109))))) ) | ($spl34 | $spl48)),
  inference(backward_demodulation,[],[f6172,f11587])).
fof(f11587,plain,(
  ( ! [X109,X107,X108,X106] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X106),s('type.num.num','const.arithmetic.ZERO_0')))) | p(s(bool,happ(s(fun(X107,bool),X108),s(X107,sK13('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X106))),s('type.num.num','const.arithmetic.ZERO_0')),X108,X107))))) | ~p(s(bool,happ(s(fun(X107,bool),X108),s(X107,X109))))) ) | $spl34),
  inference(superposition,[],[f226,f1186])).
fof(f15573,plain,(
  $false | ($spl34 | $spl48)),
  inference(global_subsumption,[],[f15451,f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f428,f429,f268,f194,f235,f231,f230,f229,f228,f200,f256,f255,f247,f246,f245,f244,f199,f198,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f433,f406,f250,f249,f207,f191,f184,f183,f179,f691,f733,f854,f966,f968,f969,f970,f971,f972,f973,f975,f976,f978,f979,f980,f1024,f1143,f1153,f1165,f2809,f2823,f2826,f2830,f3082,f3089,f3374,f3421,f5542,f5640,f5932,f6289,f4727,f4254,f2243,f241,f238,f234,f193,f692,f3568,f3563,f3504,f3570,f3564,f5997,f5605,f6355,f3565,f3562,f3567,f3566,f6796,f3545,f4280,f4747,f3538,f3530,f3484,f3532,f3531,f6759,f6758,f5367,f3485,f7226,f7225,f7219,f7217,f7216,f7206,f7201,f5370,f5369,f3529,f3482,f226,f224,f223,f222,f221,f195,f734,f3533,f7194,f3624,f3623,f3622,f5083,f5261,f3621,f5053,f5231,f7212,f7200,f7198,f7193,f7192,f7191,f7190,f5344,f4991,f4974,f4867,f4851,f4551,f4535,f4454,f4438,f4109,f4091,f3675,f3653,f3537,f2128,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11603,f11604,f11570,f11571,f11572,f11573,f11575,f11577,f11579,f11582,f11588,f11593,f11597,f11598,f11599,f12952,f13160,f13164,f13170,f13259,f13269,f13274,f13276,f13277,f13278,f13279,f13280,f13283,f13286,f13287,f13205,f13215,f13221,f13224,f13226,f13227,f13228,f13229,f13230,f13232,f13234,f13235,f13237,f13468,f13474,f13484,f13490,f13493,f13495,f13496,f13497,f13498,f13499,f13501,f13503,f13504,f13509,f13576,f13586,f13591,f13593,f13594,f13595,f13596,f13597,f13600,f13603,f13604,f13541,f13633,f13637,f14059,f13949,f13950,f14060,f13981,f14079,f14190,f14391,f14278,f14279,f14392,f14312,f14413,f14631,f14516,f14517,f14632,f14552,f14653,f14825,f14826,f14833,f14834,f14957,f14941,f14946,f14951,f14953,f14954,f6172,f15489,f15492,f15495,f15498,f15376,f15377,f15379,f15380,f15383,f15384,f15386,f15387,f15388,f15389,f15390,f15391,f15392,f15393,f15395,f15396,f15399,f15406,f15407,f15411,f15412,f15414,f15487,f15416,f15417,f15419,f15420,f15421,f15422,f15424,f15426,f15427,f15428,f15430,f15432,f15434,f15435,f15486,f15485,f15438,f15439,f15441,f15442,f15443,f15444,f15446,f15447,f15449,f15450])).
fof(f15451,plain,(
  ( ! [X94,X95,X93] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,happ(s(fun(X93,bool),X94),s(X93,X95))))) ) | ($spl34 | $spl48)),
  inference(backward_demodulation,[],[f6172,f11606])).
fof(f11606,plain,(
  ( ! [X94,X92,X95,X93] : (p(s(bool,happ(s(fun(X93,bool),X94),s(X93,sK13('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X92)),X94,X93))))) | ~p(s(bool,happ(s(fun(X93,bool),X94),s(X93,X95))))) ) | $spl34),
  inference(subsumption_resolution,[],[f11583,f174])).
fof(f11583,plain,(
  ( ! [X94,X92,X95,X93] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun(X93,bool),X94),s(X93,sK13('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X92)),X94,X93))))) | ~p(s(bool,happ(s(fun(X93,bool),X94),s(X93,X95))))) ) | $spl34),
  inference(superposition,[],[f226,f1180])).
fof(f1180,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X0)))) ) | $spl34),
  inference(backward_demodulation,[],[f1171,f189])).
fof(f15572,plain,(
  $false | $spl48),
  inference(global_subsumption,[],[f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f428,f429,f268,f194,f235,f231,f230,f229,f228,f200,f256,f255,f247,f246,f245,f244,f199,f198,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f433,f406,f250,f249,f207,f191,f184,f183,f179,f691,f733,f854,f966,f968,f969,f970,f971,f972,f973,f975,f976,f978,f979,f980,f1024,f1143,f1153,f1165,f2809,f2823,f2826,f2830,f3082,f3089,f3374,f3421,f5542,f5640,f5932,f6289,f4727,f4254,f2243,f241,f238,f234,f193,f692,f3568,f3563,f3504,f3570,f3564,f5997,f5605,f6355,f3565,f3562,f3567,f3566,f6796,f3545,f4280,f4747,f3538,f3530,f3484,f3532,f3531,f6759,f6758,f5367,f3485,f7226,f7225,f7219,f7217,f7216,f7206,f7201,f5370,f5369,f3529,f3482,f226,f224,f223,f222,f221,f195,f734,f3533,f7194,f3624,f3623,f3622,f5083,f5261,f3621,f5053,f5231,f7212,f7200,f7198,f7193,f7192,f7191,f7190,f5344,f4991,f4974,f4867,f4851,f4551,f4535,f4454,f4438,f4109,f4091,f3675,f3653,f3537,f2128,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11603,f11604,f11570,f11571,f11572,f11573,f11575,f11577,f11579,f11582,f11588,f11593,f11597,f11598,f11599,f12952,f13160,f13164,f13170,f13259,f13269,f13274,f13276,f13277,f13278,f13279,f13280,f13283,f13286,f13287,f13205,f13215,f13221,f13224,f13226,f13227,f13228,f13229,f13230,f13232,f13234,f13235,f13237,f13468,f13474,f13484,f13490,f13493,f13495,f13496,f13497,f13498,f13499,f13501,f13503,f13504,f13509,f13576,f13586,f13591,f13593,f13594,f13595,f13596,f13597,f13600,f13603,f13604,f13541,f13633,f13637,f14059,f13949,f13950,f14060,f13981,f14079,f14190,f14391,f14278,f14279,f14392,f14312,f14413,f14631,f14516,f14517,f14632,f14552,f14653,f14825,f14826,f14833,f14834,f14957,f14941,f14946,f14951,f14953,f14954,f6172,f15489,f15492,f15495,f15498,f15376,f15377,f15379,f15380,f15383,f15384,f15386,f15387,f15388,f15389,f15390,f15391,f15392,f15393,f15395,f15396,f15399,f15406,f15407,f15411,f15412,f15414,f15487,f15416,f15417,f15419,f15420,f15421,f15422,f15424,f15426,f15427,f15428,f15430,f15432,f15434,f15435,f15486,f15485,f15438,f15439,f15441,f15442,f15443,f15444,f15446,f15447,f15449,f15450])).
fof(f15571,plain,(
  $false | $spl48),
  inference(global_subsumption,[],[f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f428,f429,f268,f194,f235,f231,f230,f229,f228,f200,f256,f255,f247,f246,f245,f244,f199,f198,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f433,f406,f250,f249,f207,f191,f184,f183,f179,f691,f733,f854,f966,f968,f969,f970,f971,f972,f973,f975,f976,f978,f979,f980,f1024,f1143,f1153,f1165,f2809,f2823,f2826,f2830,f3082,f3089,f3374,f3421,f5542,f5640,f5932,f6289,f4727,f4254,f2243,f241,f238,f234,f193,f692,f3568,f3563,f3504,f3570,f3564,f5997,f5605,f6355,f3565,f3562,f3567,f3566,f6796,f3545,f4280,f4747,f3538,f3530,f3484,f3532,f3531,f6759,f6758,f5367,f3485,f7226,f7225,f7219,f7217,f7216,f7206,f7201,f5370,f5369,f3529,f3482,f226,f224,f223,f222,f221,f195,f734,f3533,f7194,f3624,f3623,f3622,f5083,f5261,f3621,f5053,f5231,f7212,f7200,f7198,f7193,f7192,f7191,f7190,f5344,f4991,f4974,f4867,f4851,f4551,f4535,f4454,f4438,f4109,f4091,f3675,f3653,f3537,f2128,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11603,f11604,f11570,f11571,f11572,f11573,f11575,f11577,f11579,f11582,f11588,f11593,f11597,f11598,f11599,f12952,f13160,f13164,f13170,f13259,f13269,f13274,f13276,f13277,f13278,f13279,f13280,f13283,f13286,f13287,f13205,f13215,f13221,f13224,f13226,f13227,f13228,f13229,f13230,f13232,f13234,f13235,f13237,f13468,f13474,f13484,f13490,f13493,f13495,f13496,f13497,f13498,f13499,f13501,f13503,f13504,f13509,f13576,f13586,f13591,f13593,f13594,f13595,f13596,f13597,f13600,f13603,f13604,f13541,f13633,f13637,f14059,f13949,f13950,f14060,f13981,f14079,f14190,f14391,f14278,f14279,f14392,f14312,f14413,f14631,f14516,f14517,f14632,f14552,f14653,f14825,f14826,f14833,f14834,f14957,f14941,f14946,f14951,f14953,f14954,f6172,f15489,f15492,f15495,f15498,f15376,f15377,f15379,f15380,f15383,f15384,f15386,f15387,f15388,f15389,f15390,f15391,f15392,f15393,f15395,f15396,f15399,f15406,f15407,f15411,f15412,f15414,f15487,f15416,f15417,f15419,f15420,f15421,f15422,f15424,f15426,f15427,f15428,f15430,f15432,f15434,f15435,f15486,f15485,f15438,f15439,f15441,f15442,f15443,f15444,f15446,f15447,f15449])).
fof(f15570,plain,(
  $false | ($spl34 | $spl48)),
  inference(global_subsumption,[],[f15448,f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f428,f429,f268,f194,f235,f231,f230,f229,f228,f200,f256,f255,f247,f246,f245,f244,f199,f198,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f433,f406,f250,f249,f207,f191,f184,f183,f179,f691,f733,f854,f966,f968,f969,f970,f971,f972,f973,f975,f976,f978,f979,f980,f1024,f1143,f1153,f1165,f2809,f2823,f2826,f2830,f3082,f3089,f3374,f3421,f5542,f5640,f5932,f6289,f4727,f4254,f2243,f241,f238,f234,f193,f692,f3568,f3563,f3504,f3570,f3564,f5997,f5605,f6355,f3565,f3562,f3567,f3566,f6796,f3545,f4280,f4747,f3538,f3530,f3484,f3532,f3531,f6759,f6758,f5367,f3485,f7226,f7225,f7219,f7217,f7216,f7206,f7201,f5370,f5369,f3529,f3482,f226,f224,f223,f222,f221,f195,f734,f3533,f7194,f3624,f3623,f3622,f5083,f5261,f3621,f5053,f5231,f7212,f7200,f7198,f7193,f7192,f7191,f7190,f5344,f4991,f4974,f4867,f4851,f4551,f4535,f4454,f4438,f4109,f4091,f3675,f3653,f3537,f2128,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11603,f11604,f11570,f11571,f11572,f11573,f11575,f11577,f11579,f11582,f11588,f11593,f11597,f11598,f11599,f12952,f13160,f13164,f13170,f13259,f13269,f13274,f13276,f13277,f13278,f13279,f13280,f13283,f13286,f13287,f13205,f13215,f13221,f13224,f13226,f13227,f13228,f13229,f13230,f13232,f13234,f13235,f13237,f13468,f13474,f13484,f13490,f13493,f13495,f13496,f13497,f13498,f13499,f13501,f13503,f13504,f13509,f13576,f13586,f13591,f13593,f13594,f13595,f13596,f13597,f13600,f13603,f13604,f13541,f13633,f13637,f14059,f13949,f13950,f14060,f13981,f14079,f14190,f14391,f14278,f14279,f14392,f14312,f14413,f14631,f14516,f14517,f14632,f14552,f14653,f14825,f14826,f14833,f14834,f14957,f14941,f14946,f14951,f14953,f14954,f6172,f15489,f15492,f15495,f15498,f15376,f15377,f15379,f15380,f15383,f15384,f15386,f15387,f15388,f15389,f15390,f15391,f15392,f15393,f15395,f15396,f15399,f15406,f15407,f15411,f15412,f15414,f15487,f15416,f15417,f15419,f15420,f15421,f15422,f15424,f15426,f15427,f15428,f15430,f15432,f15434,f15435,f15486,f15485,f15438,f15439,f15441,f15442,f15443,f15444,f15446,f15447])).
fof(f15448,plain,(
  ( ! [X74,X72,X75,X73] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X72)))) | ~p(s(bool,happ(s(fun(X73,bool),X74),s(X73,X75))))) ) | ($spl34 | $spl48)),
  inference(backward_demodulation,[],[f6172,f11578])).
fof(f11578,plain,(
  ( ! [X74,X72,X75,X73] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X72)))) | p(s(bool,happ(s(fun(X73,bool),X74),s(X73,sK13('const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X72))),s('type.num.num','const.arithmetic.ZERO_0')),X74,X73))))) | ~p(s(bool,happ(s(fun(X73,bool),X74),s(X73,X75))))) ) | $spl34),
  inference(superposition,[],[f226,f1187])).
fof(f1187,plain,(
  ( ! [X0] : (s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X0))) = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl34),
  inference(backward_demodulation,[],[f1171,f206])).
fof(f15569,plain,(
  $false | $spl48),
  inference(global_subsumption,[],[f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f428,f429,f268,f194,f235,f231,f230,f229,f228,f200,f256,f255,f247,f246,f245,f244,f199,f198,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f433,f406,f250,f249,f207,f191,f184,f183,f179,f691,f733,f854,f966,f968,f969,f970,f971,f972,f973,f975,f976,f978,f979,f980,f1024,f1143,f1153,f1165,f2809,f2823,f2826,f2830,f3082,f3089,f3374,f3421,f5542,f5640,f5932,f6289,f4727,f4254,f2243,f241,f238,f234,f193,f692,f3568,f3563,f3504,f3570,f3564,f5997,f5605,f6355,f3565,f3562,f3567,f3566,f6796,f3545,f4280,f4747,f3538,f3530,f3484,f3532,f3531,f6759,f6758,f5367,f3485,f7226,f7225,f7219,f7217,f7216,f7206,f7201,f5370,f5369,f3529,f3482,f226,f224,f223,f222,f221,f195,f734,f3533,f7194,f3624,f3623,f3622,f5083,f5261,f3621,f5053,f5231,f7212,f7200,f7198,f7193,f7192,f7191,f7190,f5344,f4991,f4974,f4867,f4851,f4551,f4535,f4454,f4438,f4109,f4091,f3675,f3653,f3537,f2128,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11603,f11604,f11570,f11571,f11572,f11573,f11575,f11577,f11579,f11582,f11588,f11593,f11597,f11598,f11599,f12952,f13160,f13164,f13170,f13259,f13269,f13274,f13276,f13277,f13278,f13279,f13280,f13283,f13286,f13287,f13205,f13215,f13221,f13224,f13226,f13227,f13228,f13229,f13230,f13232,f13234,f13235,f13237,f13468,f13474,f13484,f13490,f13493,f13495,f13496,f13497,f13498,f13499,f13501,f13503,f13504,f13509,f13576,f13586,f13591,f13593,f13594,f13595,f13596,f13597,f13600,f13603,f13604,f13541,f13633,f13637,f14059,f13949,f13950,f14060,f13981,f14079,f14190,f14391,f14278,f14279,f14392,f14312,f14413,f14631,f14516,f14517,f14632,f14552,f14653,f14825,f14826,f14833,f14834,f14957,f14941,f14946,f14951,f14953,f14954,f6172,f15489,f15492,f15495,f15498,f15376,f15377,f15379,f15380,f15383,f15384,f15386,f15387,f15388,f15389,f15390,f15391,f15392,f15393,f15395,f15396,f15399,f15406,f15407,f15411,f15412,f15414,f15487,f15416,f15417,f15419,f15420,f15421,f15422,f15424,f15426,f15427,f15428,f15430,f15432,f15434,f15435,f15486,f15485,f15438,f15439,f15441,f15442,f15443,f15444,f15446,f15447])).
fof(f15568,plain,(
  $false | $spl48),
  inference(global_subsumption,[],[f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f428,f429,f268,f194,f235,f231,f230,f229,f228,f200,f256,f255,f247,f246,f245,f244,f199,f198,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f433,f406,f250,f249,f207,f191,f184,f183,f179,f691,f733,f854,f966,f968,f969,f970,f971,f972,f973,f975,f976,f978,f979,f980,f1024,f1143,f1153,f1165,f2809,f2823,f2826,f2830,f3082,f3089,f3374,f3421,f5542,f5640,f5932,f6289,f4727,f4254,f2243,f241,f238,f234,f193,f692,f3568,f3563,f3504,f3570,f3564,f5997,f5605,f6355,f3565,f3562,f3567,f3566,f6796,f3545,f4280,f4747,f3538,f3530,f3484,f3532,f3531,f6759,f6758,f5367,f3485,f7226,f7225,f7219,f7217,f7216,f7206,f7201,f5370,f5369,f3529,f3482,f226,f224,f223,f222,f221,f195,f734,f3533,f7194,f3624,f3623,f3622,f5083,f5261,f3621,f5053,f5231,f7212,f7200,f7198,f7193,f7192,f7191,f7190,f5344,f4991,f4974,f4867,f4851,f4551,f4535,f4454,f4438,f4109,f4091,f3675,f3653,f3537,f2128,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11603,f11604,f11570,f11571,f11572,f11573,f11575,f11577,f11579,f11582,f11588,f11593,f11597,f11598,f11599,f12952,f13160,f13164,f13170,f13259,f13269,f13274,f13276,f13277,f13278,f13279,f13280,f13283,f13286,f13287,f13205,f13215,f13221,f13224,f13226,f13227,f13228,f13229,f13230,f13232,f13234,f13235,f13237,f13468,f13474,f13484,f13490,f13493,f13495,f13496,f13497,f13498,f13499,f13501,f13503,f13504,f13509,f13576,f13586,f13591,f13593,f13594,f13595,f13596,f13597,f13600,f13603,f13604,f13541,f13633,f13637,f14059,f13949,f13950,f14060,f13981,f14079,f14190,f14391,f14278,f14279,f14392,f14312,f14413,f14631,f14516,f14517,f14632,f14552,f14653,f14825,f14826,f14833,f14834,f14957,f14941,f14946,f14951,f14953,f14954,f6172,f15489,f15492,f15495,f15498,f15376,f15377,f15379,f15380,f15383,f15384,f15386,f15387,f15388,f15389,f15390,f15391,f15392,f15393,f15395,f15396,f15399,f15406,f15407,f15411,f15412,f15414,f15487,f15416,f15417,f15419,f15420,f15421,f15422,f15424,f15426,f15427,f15428,f15430,f15432,f15434,f15435,f15486,f15485,f15438,f15439,f15441,f15442,f15443,f15444,f15446])).
fof(f15567,plain,(
  $false | ($spl34 | $spl48)),
  inference(global_subsumption,[],[f15445,f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f428,f429,f268,f194,f235,f231,f230,f229,f228,f200,f256,f255,f247,f246,f245,f244,f199,f198,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f433,f406,f250,f249,f207,f191,f184,f183,f179,f691,f733,f854,f966,f968,f969,f970,f971,f972,f973,f975,f976,f978,f979,f980,f1024,f1143,f1153,f1165,f2809,f2823,f2826,f2830,f3082,f3089,f3374,f3421,f5542,f5640,f5932,f6289,f4727,f4254,f2243,f241,f238,f234,f193,f692,f3568,f3563,f3504,f3570,f3564,f5997,f5605,f6355,f3565,f3562,f3567,f3566,f6796,f3545,f4280,f4747,f3538,f3530,f3484,f3532,f3531,f6759,f6758,f5367,f3485,f7226,f7225,f7219,f7217,f7216,f7206,f7201,f5370,f5369,f3529,f3482,f226,f224,f223,f222,f221,f195,f734,f3533,f7194,f3624,f3623,f3622,f5083,f5261,f3621,f5053,f5231,f7212,f7200,f7198,f7193,f7192,f7191,f7190,f5344,f4991,f4974,f4867,f4851,f4551,f4535,f4454,f4438,f4109,f4091,f3675,f3653,f3537,f2128,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11603,f11604,f11570,f11571,f11572,f11573,f11575,f11577,f11579,f11582,f11588,f11593,f11597,f11598,f11599,f12952,f13160,f13164,f13170,f13259,f13269,f13274,f13276,f13277,f13278,f13279,f13280,f13283,f13286,f13287,f13205,f13215,f13221,f13224,f13226,f13227,f13228,f13229,f13230,f13232,f13234,f13235,f13237,f13468,f13474,f13484,f13490,f13493,f13495,f13496,f13497,f13498,f13499,f13501,f13503,f13504,f13509,f13576,f13586,f13591,f13593,f13594,f13595,f13596,f13597,f13600,f13603,f13604,f13541,f13633,f13637,f14059,f13949,f13950,f14060,f13981,f14079,f14190,f14391,f14278,f14279,f14392,f14312,f14413,f14631,f14516,f14517,f14632,f14552,f14653,f14825,f14826,f14833,f14834,f14957,f14941,f14946,f14951,f14953,f14954,f6172,f15489,f15492,f15495,f15498,f15376,f15377,f15379,f15380,f15383,f15384,f15386,f15387,f15388,f15389,f15390,f15391,f15392,f15393,f15395,f15396,f15399,f15406,f15407,f15411,f15412,f15414,f15487,f15416,f15417,f15419,f15420,f15421,f15422,f15424,f15426,f15427,f15428,f15430,f15432,f15434,f15435,f15486,f15485,f15438,f15439,f15441,f15442,f15443,f15444])).
fof(f15445,plain,(
  ( ! [X57,X58,X56] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,happ(s(fun(X56,bool),X57),s(X56,X58))))) ) | ($spl34 | $spl48)),
  inference(backward_demodulation,[],[f6172,f11605])).
fof(f11605,plain,(
  ( ! [X57,X58,X56] : (p(s(bool,happ(s(fun(X56,bool),X57),s(X56,sK13('const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0')),X57,X56))))) | ~p(s(bool,happ(s(fun(X56,bool),X57),s(X56,X58))))) ) | $spl34),
  inference(subsumption_resolution,[],[f11574,f174])).
fof(f11574,plain,(
  ( ! [X57,X58,X56] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun(X56,bool),X57),s(X56,sK13('const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0')),X57,X56))))) | ~p(s(bool,happ(s(fun(X56,bool),X57),s(X56,X58))))) ) | $spl34),
  inference(superposition,[],[f226,f1195])).
fof(f1195,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | $spl34),
  inference(backward_demodulation,[],[f1171,f382])).
fof(f15566,plain,(
  $false | $spl48),
  inference(global_subsumption,[],[f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f428,f429,f268,f194,f235,f231,f230,f229,f228,f200,f256,f255,f247,f246,f245,f244,f199,f198,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f433,f406,f250,f249,f207,f191,f184,f183,f179,f691,f733,f854,f966,f968,f969,f970,f971,f972,f973,f975,f976,f978,f979,f980,f1024,f1143,f1153,f1165,f2809,f2823,f2826,f2830,f3082,f3089,f3374,f3421,f5542,f5640,f5932,f6289,f4727,f4254,f2243,f241,f238,f234,f193,f692,f3568,f3563,f3504,f3570,f3564,f5997,f5605,f6355,f3565,f3562,f3567,f3566,f6796,f3545,f4280,f4747,f3538,f3530,f3484,f3532,f3531,f6759,f6758,f5367,f3485,f7226,f7225,f7219,f7217,f7216,f7206,f7201,f5370,f5369,f3529,f3482,f226,f224,f223,f222,f221,f195,f734,f3533,f7194,f3624,f3623,f3622,f5083,f5261,f3621,f5053,f5231,f7212,f7200,f7198,f7193,f7192,f7191,f7190,f5344,f4991,f4974,f4867,f4851,f4551,f4535,f4454,f4438,f4109,f4091,f3675,f3653,f3537,f2128,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11603,f11604,f11570,f11571,f11572,f11573,f11575,f11577,f11579,f11582,f11588,f11593,f11597,f11598,f11599,f12952,f13160,f13164,f13170,f13259,f13269,f13274,f13276,f13277,f13278,f13279,f13280,f13283,f13286,f13287,f13205,f13215,f13221,f13224,f13226,f13227,f13228,f13229,f13230,f13232,f13234,f13235,f13237,f13468,f13474,f13484,f13490,f13493,f13495,f13496,f13497,f13498,f13499,f13501,f13503,f13504,f13509,f13576,f13586,f13591,f13593,f13594,f13595,f13596,f13597,f13600,f13603,f13604,f13541,f13633,f13637,f14059,f13949,f13950,f14060,f13981,f14079,f14190,f14391,f14278,f14279,f14392,f14312,f14413,f14631,f14516,f14517,f14632,f14552,f14653,f14825,f14826,f14833,f14834,f14957,f14941,f14946,f14951,f14953,f14954,f6172,f15489,f15492,f15495,f15498,f15376,f15377,f15379,f15380,f15383,f15384,f15386,f15387,f15388,f15389,f15390,f15391,f15392,f15393,f15395,f15396,f15399,f15406,f15407,f15411,f15412,f15414,f15487,f15416,f15417,f15419,f15420,f15421,f15422,f15424,f15426,f15427,f15428,f15430,f15432,f15434,f15435,f15486,f15485,f15438,f15439,f15441,f15442,f15443,f15444])).
fof(f15565,plain,(
  $false | $spl48),
  inference(global_subsumption,[],[f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f428,f429,f268,f194,f235,f231,f230,f229,f228,f200,f256,f255,f247,f246,f245,f244,f199,f198,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f433,f406,f250,f249,f207,f191,f184,f183,f179,f691,f733,f854,f966,f968,f969,f970,f971,f972,f973,f975,f976,f978,f979,f980,f1024,f1143,f1153,f1165,f2809,f2823,f2826,f2830,f3082,f3089,f3374,f3421,f5542,f5640,f5932,f6289,f4727,f4254,f2243,f241,f238,f234,f193,f692,f3568,f3563,f3504,f3570,f3564,f5997,f5605,f6355,f3565,f3562,f3567,f3566,f6796,f3545,f4280,f4747,f3538,f3530,f3484,f3532,f3531,f6759,f6758,f5367,f3485,f7226,f7225,f7219,f7217,f7216,f7206,f7201,f5370,f5369,f3529,f3482,f226,f224,f223,f222,f221,f195,f734,f3533,f7194,f3624,f3623,f3622,f5083,f5261,f3621,f5053,f5231,f7212,f7200,f7198,f7193,f7192,f7191,f7190,f5344,f4991,f4974,f4867,f4851,f4551,f4535,f4454,f4438,f4109,f4091,f3675,f3653,f3537,f2128,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11603,f11604,f11570,f11571,f11572,f11573,f11575,f11577,f11579,f11582,f11588,f11593,f11597,f11598,f11599,f12952,f13160,f13164,f13170,f13259,f13269,f13274,f13276,f13277,f13278,f13279,f13280,f13283,f13286,f13287,f13205,f13215,f13221,f13224,f13226,f13227,f13228,f13229,f13230,f13232,f13234,f13235,f13237,f13468,f13474,f13484,f13490,f13493,f13495,f13496,f13497,f13498,f13499,f13501,f13503,f13504,f13509,f13576,f13586,f13591,f13593,f13594,f13595,f13596,f13597,f13600,f13603,f13604,f13541,f13633,f13637,f14059,f13949,f13950,f14060,f13981,f14079,f14190,f14391,f14278,f14279,f14392,f14312,f14413,f14631,f14516,f14517,f14632,f14552,f14653,f14825,f14826,f14833,f14834,f14957,f14941,f14946,f14951,f14953,f14954,f6172,f15489,f15492,f15495,f15498,f15376,f15377,f15379,f15380,f15383,f15384,f15386,f15387,f15388,f15389,f15390,f15391,f15392,f15393,f15395,f15396,f15399,f15406,f15407,f15411,f15412,f15414,f15487,f15416,f15417,f15419,f15420,f15421,f15422,f15424,f15426,f15427,f15428,f15430,f15432,f15434,f15435,f15486,f15485,f15438,f15439,f15441,f15442,f15443])).
fof(f15564,plain,(
  $false | $spl48),
  inference(global_subsumption,[],[f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f428,f429,f268,f194,f235,f231,f230,f229,f228,f200,f256,f255,f247,f246,f245,f244,f199,f198,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f433,f406,f250,f249,f207,f191,f184,f183,f179,f691,f733,f854,f966,f968,f969,f970,f971,f972,f973,f975,f976,f978,f979,f980,f1024,f1143,f1153,f1165,f2809,f2823,f2826,f2830,f3082,f3089,f3374,f3421,f5542,f5640,f5932,f6289,f4727,f4254,f2243,f241,f238,f234,f193,f692,f3568,f3563,f3504,f3570,f3564,f5997,f5605,f6355,f3565,f3562,f3567,f3566,f6796,f3545,f4280,f4747,f3538,f3530,f3484,f3532,f3531,f6759,f6758,f5367,f3485,f7226,f7225,f7219,f7217,f7216,f7206,f7201,f5370,f5369,f3529,f3482,f226,f224,f223,f222,f221,f195,f734,f3533,f7194,f3624,f3623,f3622,f5083,f5261,f3621,f5053,f5231,f7212,f7200,f7198,f7193,f7192,f7191,f7190,f5344,f4991,f4974,f4867,f4851,f4551,f4535,f4454,f4438,f4109,f4091,f3675,f3653,f3537,f2128,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11603,f11604,f11570,f11571,f11572,f11573,f11575,f11577,f11579,f11582,f11588,f11593,f11597,f11598,f11599,f12952,f13160,f13164,f13170,f13259,f13269,f13274,f13276,f13277,f13278,f13279,f13280,f13283,f13286,f13287,f13205,f13215,f13221,f13224,f13226,f13227,f13228,f13229,f13230,f13232,f13234,f13235,f13237,f13468,f13474,f13484,f13490,f13493,f13495,f13496,f13497,f13498,f13499,f13501,f13503,f13504,f13509,f13576,f13586,f13591,f13593,f13594,f13595,f13596,f13597,f13600,f13603,f13604,f13541,f13633,f13637,f14059,f13949,f13950,f14060,f13981,f14079,f14190,f14391,f14278,f14279,f14392,f14312,f14413,f14631,f14516,f14517,f14632,f14552,f14653,f14825,f14826,f14833,f14834,f14957,f14941,f14946,f14951,f14953,f14954,f6172,f15489,f15492,f15495,f15498,f15376,f15377,f15379,f15380,f15383,f15384,f15386,f15387,f15388,f15389,f15390,f15391,f15392,f15393,f15395,f15396,f15399,f15406,f15407,f15411,f15412,f15414,f15487,f15416,f15417,f15419,f15420,f15421,f15422,f15424,f15426,f15427,f15428,f15430,f15432,f15434,f15435,f15486,f15485,f15438,f15439,f15441,f15442])).
fof(f15563,plain,(
  $false | $spl48),
  inference(global_subsumption,[],[f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f428,f429,f268,f194,f235,f231,f230,f229,f228,f200,f256,f255,f247,f246,f245,f244,f199,f198,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f433,f406,f250,f249,f207,f191,f184,f183,f179,f691,f733,f854,f966,f968,f969,f970,f971,f972,f973,f975,f976,f978,f979,f980,f1024,f1143,f1153,f1165,f2809,f2823,f2826,f2830,f3082,f3089,f3374,f3421,f5542,f5640,f5932,f6289,f4727,f4254,f2243,f241,f238,f234,f193,f692,f3568,f3563,f3504,f3570,f3564,f5997,f5605,f6355,f3565,f3562,f3567,f3566,f6796,f3545,f4280,f4747,f3538,f3530,f3484,f3532,f3531,f6759,f6758,f5367,f3485,f7226,f7225,f7219,f7217,f7216,f7206,f7201,f5370,f5369,f3529,f3482,f226,f224,f223,f222,f221,f195,f734,f3533,f7194,f3624,f3623,f3622,f5083,f5261,f3621,f5053,f5231,f7212,f7200,f7198,f7193,f7192,f7191,f7190,f5344,f4991,f4974,f4867,f4851,f4551,f4535,f4454,f4438,f4109,f4091,f3675,f3653,f3537,f2128,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11603,f11604,f11570,f11571,f11572,f11573,f11575,f11577,f11579,f11582,f11588,f11593,f11597,f11598,f11599,f12952,f13160,f13164,f13170,f13259,f13269,f13274,f13276,f13277,f13278,f13279,f13280,f13283,f13286,f13287,f13205,f13215,f13221,f13224,f13226,f13227,f13228,f13229,f13230,f13232,f13234,f13235,f13237,f13468,f13474,f13484,f13490,f13493,f13495,f13496,f13497,f13498,f13499,f13501,f13503,f13504,f13509,f13576,f13586,f13591,f13593,f13594,f13595,f13596,f13597,f13600,f13603,f13604,f13541,f13633,f13637,f14059,f13949,f13950,f14060,f13981,f14079,f14190,f14391,f14278,f14279,f14392,f14312,f14413,f14631,f14516,f14517,f14632,f14552,f14653,f14825,f14826,f14833,f14834,f14957,f14941,f14946,f14951,f14953,f14954,f6172,f15489,f15492,f15495,f15498,f15376,f15377,f15379,f15380,f15383,f15384,f15386,f15387,f15388,f15389,f15390,f15391,f15392,f15393,f15395,f15396,f15399,f15406,f15407,f15411,f15412,f15414,f15487,f15416,f15417,f15419,f15420,f15421,f15422,f15424,f15426,f15427,f15428,f15430,f15432,f15434,f15435,f15486,f15485,f15438,f15439,f15441])).
fof(f15562,plain,(
  $false | ($spl34 | $spl48)),
  inference(global_subsumption,[],[f15440,f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f428,f429,f268,f194,f235,f231,f230,f229,f228,f200,f256,f255,f247,f246,f245,f244,f199,f198,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f433,f406,f250,f249,f207,f191,f184,f183,f179,f691,f733,f854,f966,f968,f969,f970,f971,f972,f973,f975,f976,f978,f979,f980,f1024,f1143,f1153,f1165,f2809,f2823,f2826,f2830,f3082,f3089,f3374,f3421,f5542,f5640,f5932,f6289,f4727,f4254,f2243,f241,f238,f234,f193,f692,f3568,f3563,f3504,f3570,f3564,f5997,f5605,f6355,f3565,f3562,f3567,f3566,f6796,f3545,f4280,f4747,f3538,f3530,f3484,f3532,f3531,f6759,f6758,f5367,f3485,f7226,f7225,f7219,f7217,f7216,f7206,f7201,f5370,f5369,f3529,f3482,f226,f224,f223,f222,f221,f195,f734,f3533,f7194,f3624,f3623,f3622,f5083,f5261,f3621,f5053,f5231,f7212,f7200,f7198,f7193,f7192,f7191,f7190,f5344,f4991,f4974,f4867,f4851,f4551,f4535,f4454,f4438,f4109,f4091,f3675,f3653,f3537,f2128,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11603,f11604,f11570,f11571,f11572,f11573,f11575,f11577,f11579,f11582,f11588,f11593,f11597,f11598,f11599,f12952,f13160,f13164,f13170,f13259,f13269,f13274,f13276,f13277,f13278,f13279,f13280,f13283,f13286,f13287,f13205,f13215,f13221,f13224,f13226,f13227,f13228,f13229,f13230,f13232,f13234,f13235,f13237,f13468,f13474,f13484,f13490,f13493,f13495,f13496,f13497,f13498,f13499,f13501,f13503,f13504,f13509,f13576,f13586,f13591,f13593,f13594,f13595,f13596,f13597,f13600,f13603,f13604,f13541,f13633,f13637,f14059,f13949,f13950,f14060,f13981,f14079,f14190,f14391,f14278,f14279,f14392,f14312,f14413,f14631,f14516,f14517,f14632,f14552,f14653,f14825,f14826,f14833,f14834,f14957,f14941,f14946,f14951,f14953,f14954,f6172,f15489,f15492,f15495,f15498,f15376,f15377,f15379,f15380,f15383,f15384,f15386,f15387,f15388,f15389,f15390,f15391,f15392,f15393,f15395,f15396,f15399,f15406,f15407,f15411,f15412,f15414,f15487,f15416,f15417,f15419,f15420,f15421,f15422,f15424,f15426,f15427,f15428,f15430,f15432,f15434,f15435,f15486,f15485,f15438,f15439])).
fof(f15440,plain,(
  ( ! [X35,X33,X34,X32] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X32)))) | ~p(s(bool,happ(s(fun(X33,bool),X34),s(X33,X35))))) ) | ($spl34 | $spl48)),
  inference(backward_demodulation,[],[f6172,f11569])).
fof(f11569,plain,(
  ( ! [X35,X33,X34,X32] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X32)))) | p(s(bool,happ(s(fun(X33,bool),X34),s(X33,sK13('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X32)))),X34,X33))))) | ~p(s(bool,happ(s(fun(X33,bool),X34),s(X33,X35))))) ) | $spl34),
  inference(superposition,[],[f226,f1185])).
fof(f1185,plain,(
  ( ! [X0] : (s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X0))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))) ) | $spl34),
  inference(backward_demodulation,[],[f1171,f204])).
fof(f15561,plain,(
  $false | $spl48),
  inference(global_subsumption,[],[f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f428,f429,f268,f194,f235,f231,f230,f229,f228,f200,f256,f255,f247,f246,f245,f244,f199,f198,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f433,f406,f250,f249,f207,f191,f184,f183,f179,f691,f733,f854,f966,f968,f969,f970,f971,f972,f973,f975,f976,f978,f979,f980,f1024,f1143,f1153,f1165,f2809,f2823,f2826,f2830,f3082,f3089,f3374,f3421,f5542,f5640,f5932,f6289,f4727,f4254,f2243,f241,f238,f234,f193,f692,f3568,f3563,f3504,f3570,f3564,f5997,f5605,f6355,f3565,f3562,f3567,f3566,f6796,f3545,f4280,f4747,f3538,f3530,f3484,f3532,f3531,f6759,f6758,f5367,f3485,f7226,f7225,f7219,f7217,f7216,f7206,f7201,f5370,f5369,f3529,f3482,f226,f224,f223,f222,f221,f195,f734,f3533,f7194,f3624,f3623,f3622,f5083,f5261,f3621,f5053,f5231,f7212,f7200,f7198,f7193,f7192,f7191,f7190,f5344,f4991,f4974,f4867,f4851,f4551,f4535,f4454,f4438,f4109,f4091,f3675,f3653,f3537,f2128,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11603,f11604,f11570,f11571,f11572,f11573,f11575,f11577,f11579,f11582,f11588,f11593,f11597,f11598,f11599,f12952,f13160,f13164,f13170,f13259,f13269,f13274,f13276,f13277,f13278,f13279,f13280,f13283,f13286,f13287,f13205,f13215,f13221,f13224,f13226,f13227,f13228,f13229,f13230,f13232,f13234,f13235,f13237,f13468,f13474,f13484,f13490,f13493,f13495,f13496,f13497,f13498,f13499,f13501,f13503,f13504,f13509,f13576,f13586,f13591,f13593,f13594,f13595,f13596,f13597,f13600,f13603,f13604,f13541,f13633,f13637,f14059,f13949,f13950,f14060,f13981,f14079,f14190,f14391,f14278,f14279,f14392,f14312,f14413,f14631,f14516,f14517,f14632,f14552,f14653,f14825,f14826,f14833,f14834,f14957,f14941,f14946,f14951,f14953,f14954,f6172,f15489,f15492,f15495,f15498,f15376,f15377,f15379,f15380,f15383,f15384,f15386,f15387,f15388,f15389,f15390,f15391,f15392,f15393,f15395,f15396,f15399,f15406,f15407,f15411,f15412,f15414,f15487,f15416,f15417,f15419,f15420,f15421,f15422,f15424,f15426,f15427,f15428,f15430,f15432,f15434,f15435,f15486,f15485,f15438,f15439])).
fof(f15560,plain,(
  $false | $spl48),
  inference(global_subsumption,[],[f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f428,f429,f268,f194,f235,f231,f230,f229,f228,f200,f256,f255,f247,f246,f245,f244,f199,f198,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f433,f406,f250,f249,f207,f191,f184,f183,f179,f691,f733,f854,f966,f968,f969,f970,f971,f972,f973,f975,f976,f978,f979,f980,f1024,f1143,f1153,f1165,f2809,f2823,f2826,f2830,f3082,f3089,f3374,f3421,f5542,f5640,f5932,f6289,f4727,f4254,f2243,f241,f238,f234,f193,f692,f3568,f3563,f3504,f3570,f3564,f5997,f5605,f6355,f3565,f3562,f3567,f3566,f6796,f3545,f4280,f4747,f3538,f3530,f3484,f3532,f3531,f6759,f6758,f5367,f3485,f7226,f7225,f7219,f7217,f7216,f7206,f7201,f5370,f5369,f3529,f3482,f226,f224,f223,f222,f221,f195,f734,f3533,f7194,f3624,f3623,f3622,f5083,f5261,f3621,f5053,f5231,f7212,f7200,f7198,f7193,f7192,f7191,f7190,f5344,f4991,f4974,f4867,f4851,f4551,f4535,f4454,f4438,f4109,f4091,f3675,f3653,f3537,f2128,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11603,f11604,f11570,f11571,f11572,f11573,f11575,f11577,f11579,f11582,f11588,f11593,f11597,f11598,f11599,f12952,f13160,f13164,f13170,f13259,f13269,f13274,f13276,f13277,f13278,f13279,f13280,f13283,f13286,f13287,f13205,f13215,f13221,f13224,f13226,f13227,f13228,f13229,f13230,f13232,f13234,f13235,f13237,f13468,f13474,f13484,f13490,f13493,f13495,f13496,f13497,f13498,f13499,f13501,f13503,f13504,f13509,f13576,f13586,f13591,f13593,f13594,f13595,f13596,f13597,f13600,f13603,f13604,f13541,f13633,f13637,f14059,f13949,f13950,f14060,f13981,f14079,f14190,f14391,f14278,f14279,f14392,f14312,f14413,f14631,f14516,f14517,f14632,f14552,f14653,f14825,f14826,f14833,f14834,f14957,f14941,f14946,f14951,f14953,f14954,f6172,f15489,f15492,f15495,f15498,f15376,f15377,f15379,f15380,f15383,f15384,f15386,f15387,f15388,f15389,f15390,f15391,f15392,f15393,f15395,f15396,f15399,f15406,f15407,f15411,f15412,f15414,f15487,f15416,f15417,f15419,f15420,f15421,f15422,f15424,f15426,f15427,f15428,f15430,f15432,f15434,f15435,f15486,f15485,f15438])).
fof(f15559,plain,(
  $false | $spl48),
  inference(global_subsumption,[],[f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f428,f429,f268,f194,f235,f231,f230,f229,f228,f200,f256,f255,f247,f246,f245,f244,f199,f198,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f433,f406,f250,f249,f207,f191,f184,f183,f179,f691,f733,f854,f966,f968,f969,f970,f971,f972,f973,f975,f976,f978,f979,f980,f1024,f1143,f1153,f1165,f2809,f2823,f2826,f2830,f3082,f3089,f3374,f3421,f5542,f5640,f5932,f6289,f4727,f4254,f2243,f241,f238,f234,f193,f692,f3568,f3563,f3504,f3570,f3564,f5997,f5605,f6355,f3565,f3562,f3567,f3566,f6796,f3545,f4280,f4747,f3538,f3530,f3484,f3532,f3531,f6759,f6758,f5367,f3485,f7226,f7225,f7219,f7217,f7216,f7206,f7201,f5370,f5369,f3529,f3482,f226,f224,f223,f222,f221,f195,f734,f3533,f7194,f3624,f3623,f3622,f5083,f5261,f3621,f5053,f5231,f7212,f7200,f7198,f7193,f7192,f7191,f7190,f5344,f4991,f4974,f4867,f4851,f4551,f4535,f4454,f4438,f4109,f4091,f3675,f3653,f3537,f2128,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11603,f11604,f11570,f11571,f11572,f11573,f11575,f11577,f11579,f11582,f11588,f11593,f11597,f11598,f11599,f12952,f13160,f13164,f13170,f13259,f13269,f13274,f13276,f13277,f13278,f13279,f13280,f13283,f13286,f13287,f13205,f13215,f13221,f13224,f13226,f13227,f13228,f13229,f13230,f13232,f13234,f13235,f13237,f13468,f13474,f13484,f13490,f13493,f13495,f13496,f13497,f13498,f13499,f13501,f13503,f13504,f13509,f13576,f13586,f13591,f13593,f13594,f13595,f13596,f13597,f13600,f13603,f13604,f13541,f13633,f13637,f14059,f13949,f13950,f14060,f13981,f14079,f14190,f14391,f14278,f14279,f14392,f14312,f14413,f14631,f14516,f14517,f14632,f14552,f14653,f14825,f14826,f14833,f14834,f14957,f14941,f14946,f14951,f14953,f14954,f6172,f15489,f15492,f15495,f15498,f15376,f15377,f15379,f15380,f15383,f15384,f15386,f15387,f15388,f15389,f15390,f15391,f15392,f15393,f15395,f15396,f15399,f15406,f15407,f15411,f15412,f15414,f15487,f15416,f15417,f15419,f15420,f15421,f15422,f15424,f15426,f15427,f15428,f15430,f15432,f15434,f15435,f15486,f15485])).
fof(f15558,plain,(
  $false | $spl48),
  inference(global_subsumption,[],[f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f428,f429,f268,f194,f235,f231,f230,f229,f228,f200,f256,f255,f247,f246,f245,f244,f199,f198,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f433,f406,f250,f249,f207,f191,f184,f183,f179,f691,f733,f854,f966,f968,f969,f970,f971,f972,f973,f975,f976,f978,f979,f980,f1024,f1143,f1153,f1165,f2809,f2823,f2826,f2830,f3082,f3089,f3374,f3421,f5542,f5640,f5932,f6289,f4727,f4254,f2243,f241,f238,f234,f193,f692,f3568,f3563,f3504,f3570,f3564,f5997,f5605,f6355,f3565,f3562,f3567,f3566,f6796,f3545,f4280,f4747,f3538,f3530,f3484,f3532,f3531,f6759,f6758,f5367,f3485,f7226,f7225,f7219,f7217,f7216,f7206,f7201,f5370,f5369,f3529,f3482,f226,f224,f223,f222,f221,f195,f734,f3533,f7194,f3624,f3623,f3622,f5083,f5261,f3621,f5053,f5231,f7212,f7200,f7198,f7193,f7192,f7191,f7190,f5344,f4991,f4974,f4867,f4851,f4551,f4535,f4454,f4438,f4109,f4091,f3675,f3653,f3537,f2128,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11603,f11604,f11570,f11571,f11572,f11573,f11575,f11577,f11579,f11582,f11588,f11593,f11597,f11598,f11599,f12952,f13160,f13164,f13170,f13259,f13269,f13274,f13276,f13277,f13278,f13279,f13280,f13283,f13286,f13287,f13205,f13215,f13221,f13224,f13226,f13227,f13228,f13229,f13230,f13232,f13234,f13235,f13237,f13468,f13474,f13484,f13490,f13493,f13495,f13496,f13497,f13498,f13499,f13501,f13503,f13504,f13509,f13576,f13586,f13591,f13593,f13594,f13595,f13596,f13597,f13600,f13603,f13604,f13541,f13633,f13637,f14059,f13949,f13950,f14060,f13981,f14079,f14190,f14391,f14278,f14279,f14392,f14312,f14413,f14631,f14516,f14517,f14632,f14552,f14653,f14825,f14826,f14833,f14834,f14957,f14941,f14946,f14951,f14953,f14954,f6172,f15489,f15492,f15495,f15498,f15376,f15377,f15379,f15380,f15383,f15384,f15386,f15387,f15388,f15389,f15390,f15391,f15392,f15393,f15395,f15396,f15399,f15406,f15407,f15411,f15412,f15414,f15487,f15416,f15417,f15419,f15420,f15421,f15422,f15424,f15426,f15427,f15428,f15430,f15432,f15434,f15435,f15486])).
fof(f15557,plain,(
  $false | $spl48),
  inference(global_subsumption,[],[f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f428,f429,f268,f194,f235,f231,f230,f229,f228,f200,f256,f255,f247,f246,f245,f244,f199,f198,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f433,f406,f250,f249,f207,f191,f184,f183,f179,f691,f733,f854,f966,f968,f969,f970,f971,f972,f973,f975,f976,f978,f979,f980,f1024,f1143,f1153,f1165,f2809,f2823,f2826,f2830,f3082,f3089,f3374,f3421,f5542,f5640,f5932,f6289,f4727,f4254,f2243,f241,f238,f234,f193,f692,f3568,f3563,f3504,f3570,f3564,f5997,f5605,f6355,f3565,f3562,f3567,f3566,f6796,f3545,f4280,f4747,f3538,f3530,f3484,f3532,f3531,f6759,f6758,f5367,f3485,f7226,f7225,f7219,f7217,f7216,f7206,f7201,f5370,f5369,f3529,f3482,f226,f224,f223,f222,f221,f195,f734,f3533,f7194,f3624,f3623,f3622,f5083,f5261,f3621,f5053,f5231,f7212,f7200,f7198,f7193,f7192,f7191,f7190,f5344,f4991,f4974,f4867,f4851,f4551,f4535,f4454,f4438,f4109,f4091,f3675,f3653,f3537,f2128,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11603,f11604,f11570,f11571,f11572,f11573,f11575,f11577,f11579,f11582,f11588,f11593,f11597,f11598,f11599,f12952,f13160,f13164,f13170,f13259,f13269,f13274,f13276,f13277,f13278,f13279,f13280,f13283,f13286,f13287,f13205,f13215,f13221,f13224,f13226,f13227,f13228,f13229,f13230,f13232,f13234,f13235,f13237,f13468,f13474,f13484,f13490,f13493,f13495,f13496,f13497,f13498,f13499,f13501,f13503,f13504,f13509,f13576,f13586,f13591,f13593,f13594,f13595,f13596,f13597,f13600,f13603,f13604,f13541,f13633,f13637,f14059,f13949,f13950,f14060,f13981,f14079,f14190,f14391,f14278,f14279,f14392,f14312,f14413,f14631,f14516,f14517,f14632,f14552,f14653,f14825,f14826,f14833,f14834,f14957,f14941,f14946,f14951,f14953,f14954,f6172,f15489,f15492,f15495,f15498,f15376,f15377,f15379,f15380,f15383,f15384,f15386,f15387,f15388,f15389,f15390,f15391,f15392,f15393,f15395,f15396,f15399,f15406,f15407,f15411,f15412,f15414,f15487,f15416,f15417,f15419,f15420,f15421,f15422,f15424,f15426,f15427,f15428,f15430,f15432,f15434,f15435])).
fof(f15556,plain,(
  $false | $spl48),
  inference(global_subsumption,[],[f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f428,f429,f268,f194,f235,f231,f230,f229,f228,f200,f256,f255,f247,f246,f245,f244,f199,f198,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f433,f406,f250,f249,f207,f191,f184,f183,f179,f691,f733,f854,f966,f968,f969,f970,f971,f972,f973,f975,f976,f978,f979,f980,f1024,f1143,f1153,f1165,f2809,f2823,f2826,f2830,f3082,f3089,f3374,f3421,f5542,f5640,f5932,f6289,f4727,f4254,f2243,f241,f238,f234,f193,f692,f3568,f3563,f3504,f3570,f3564,f5997,f5605,f6355,f3565,f3562,f3567,f3566,f6796,f3545,f4280,f4747,f3538,f3530,f3484,f3532,f3531,f6759,f6758,f5367,f3485,f7226,f7225,f7219,f7217,f7216,f7206,f7201,f5370,f5369,f3529,f3482,f226,f224,f223,f222,f221,f195,f734,f3533,f7194,f3624,f3623,f3622,f5083,f5261,f3621,f5053,f5231,f7212,f7200,f7198,f7193,f7192,f7191,f7190,f5344,f4991,f4974,f4867,f4851,f4551,f4535,f4454,f4438,f4109,f4091,f3675,f3653,f3537,f2128,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11603,f11604,f11570,f11571,f11572,f11573,f11575,f11577,f11579,f11582,f11588,f11593,f11597,f11598,f11599,f12952,f13160,f13164,f13170,f13259,f13269,f13274,f13276,f13277,f13278,f13279,f13280,f13283,f13286,f13287,f13205,f13215,f13221,f13224,f13226,f13227,f13228,f13229,f13230,f13232,f13234,f13235,f13237,f13468,f13474,f13484,f13490,f13493,f13495,f13496,f13497,f13498,f13499,f13501,f13503,f13504,f13509,f13576,f13586,f13591,f13593,f13594,f13595,f13596,f13597,f13600,f13603,f13604,f13541,f13633,f13637,f14059,f13949,f13950,f14060,f13981,f14079,f14190,f14391,f14278,f14279,f14392,f14312,f14413,f14631,f14516,f14517,f14632,f14552,f14653,f14825,f14826,f14833,f14834,f14957,f14941,f14946,f14951,f14953,f14954,f6172,f15489,f15492,f15495,f15498,f15376,f15377,f15379,f15380,f15383,f15384,f15386,f15387,f15388,f15389,f15390,f15391,f15392,f15393,f15395,f15396,f15399,f15406,f15407,f15411,f15412,f15414,f15487,f15416,f15417,f15419,f15420,f15421,f15422,f15424,f15426,f15427,f15428,f15430,f15432,f15434])).
fof(f15555,plain,(
  $false | ($spl34 | $spl48)),
  inference(global_subsumption,[],[f15433,f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f428,f429,f268,f194,f235,f231,f230,f229,f228,f200,f256,f255,f247,f246,f245,f244,f199,f198,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f433,f406,f250,f249,f207,f191,f184,f183,f179,f691,f733,f854,f966,f968,f969,f970,f971,f972,f973,f975,f976,f978,f979,f980,f1024,f1143,f1153,f1165,f2809,f2823,f2826,f2830,f3082,f3089,f3374,f3421,f5542,f5640,f5932,f6289,f4727,f4254,f2243,f241,f238,f234,f193,f692,f3568,f3563,f3504,f3570,f3564,f5997,f5605,f6355,f3565,f3562,f3567,f3566,f6796,f3545,f4280,f4747,f3538,f3530,f3484,f3532,f3531,f6759,f6758,f5367,f3485,f7226,f7225,f7219,f7217,f7216,f7206,f7201,f5370,f5369,f3529,f3482,f226,f224,f223,f222,f221,f195,f734,f3533,f7194,f3624,f3623,f3622,f5083,f5261,f3621,f5053,f5231,f7212,f7200,f7198,f7193,f7192,f7191,f7190,f5344,f4991,f4974,f4867,f4851,f4551,f4535,f4454,f4438,f4109,f4091,f3675,f3653,f3537,f2128,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11603,f11604,f11570,f11571,f11572,f11573,f11575,f11577,f11579,f11582,f11588,f11593,f11597,f11598,f11599,f12952,f13160,f13164,f13170,f13259,f13269,f13274,f13276,f13277,f13278,f13279,f13280,f13283,f13286,f13287,f13205,f13215,f13221,f13224,f13226,f13227,f13228,f13229,f13230,f13232,f13234,f13235,f13237,f13468,f13474,f13484,f13490,f13493,f13495,f13496,f13497,f13498,f13499,f13501,f13503,f13504,f13509,f13576,f13586,f13591,f13593,f13594,f13595,f13596,f13597,f13600,f13603,f13604,f13541,f13633,f13637,f14059,f13949,f13950,f14060,f13981,f14079,f14190,f14391,f14278,f14279,f14392,f14312,f14413,f14631,f14516,f14517,f14632,f14552,f14653,f14825,f14826,f14833,f14834,f14957,f14941,f14946,f14951,f14953,f14954,f6172,f15489,f15492,f15495,f15498,f15376,f15377,f15379,f15380,f15383,f15384,f15386,f15387,f15388,f15389,f15390,f15391,f15392,f15393,f15395,f15396,f15399,f15406,f15407,f15411,f15412,f15414,f15487,f15416,f15417,f15419,f15420,f15421,f15422,f15424,f15426,f15427,f15428,f15430,f15432])).
fof(f15433,plain,(
  ( ! [X146,X147,X145] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,happ(s(fun(X145,bool),X146),s(X145,X147))))) ) | ($spl34 | $spl48)),
  inference(backward_demodulation,[],[f6172,f7232])).
fof(f7232,plain,(
  ( ! [X146,X144,X147,X145] : (p(s(bool,happ(s(fun(X145,bool),X146),s(X145,sK12('const.arithmetic.>=_2'(s('type.num.num',X144),s('type.num.num','const.arithmetic.ZERO_0')),X146,X145))))) | ~p(s(bool,happ(s(fun(X145,bool),X146),s(X145,X147))))) ) | $spl34),
  inference(subsumption_resolution,[],[f7215,f174])).
fof(f7215,plain,(
  ( ! [X146,X144,X147,X145] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun(X145,bool),X146),s(X145,sK12('const.arithmetic.>=_2'(s('type.num.num',X144),s('type.num.num','const.arithmetic.ZERO_0')),X146,X145))))) | ~p(s(bool,happ(s(fun(X145,bool),X146),s(X145,X147))))) ) | $spl34),
  inference(superposition,[],[f224,f1181])).
fof(f15554,plain,(
  $false | $spl48),
  inference(global_subsumption,[],[f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f428,f429,f268,f194,f235,f231,f230,f229,f228,f200,f256,f255,f247,f246,f245,f244,f199,f198,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f433,f406,f250,f249,f207,f191,f184,f183,f179,f691,f733,f854,f966,f968,f969,f970,f971,f972,f973,f975,f976,f978,f979,f980,f1024,f1143,f1153,f1165,f2809,f2823,f2826,f2830,f3082,f3089,f3374,f3421,f5542,f5640,f5932,f6289,f4727,f4254,f2243,f241,f238,f234,f193,f692,f3568,f3563,f3504,f3570,f3564,f5997,f5605,f6355,f3565,f3562,f3567,f3566,f6796,f3545,f4280,f4747,f3538,f3530,f3484,f3532,f3531,f6759,f6758,f5367,f3485,f7226,f7225,f7219,f7217,f7216,f7206,f7201,f5370,f5369,f3529,f3482,f226,f224,f223,f222,f221,f195,f734,f3533,f7194,f3624,f3623,f3622,f5083,f5261,f3621,f5053,f5231,f7212,f7200,f7198,f7193,f7192,f7191,f7190,f5344,f4991,f4974,f4867,f4851,f4551,f4535,f4454,f4438,f4109,f4091,f3675,f3653,f3537,f2128,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11603,f11604,f11570,f11571,f11572,f11573,f11575,f11577,f11579,f11582,f11588,f11593,f11597,f11598,f11599,f12952,f13160,f13164,f13170,f13259,f13269,f13274,f13276,f13277,f13278,f13279,f13280,f13283,f13286,f13287,f13205,f13215,f13221,f13224,f13226,f13227,f13228,f13229,f13230,f13232,f13234,f13235,f13237,f13468,f13474,f13484,f13490,f13493,f13495,f13496,f13497,f13498,f13499,f13501,f13503,f13504,f13509,f13576,f13586,f13591,f13593,f13594,f13595,f13596,f13597,f13600,f13603,f13604,f13541,f13633,f13637,f14059,f13949,f13950,f14060,f13981,f14079,f14190,f14391,f14278,f14279,f14392,f14312,f14413,f14631,f14516,f14517,f14632,f14552,f14653,f14825,f14826,f14833,f14834,f14957,f14941,f14946,f14951,f14953,f14954,f6172,f15489,f15492,f15495,f15498,f15376,f15377,f15379,f15380,f15383,f15384,f15386,f15387,f15388,f15389,f15390,f15391,f15392,f15393,f15395,f15396,f15399,f15406,f15407,f15411,f15412,f15414,f15487,f15416,f15417,f15419,f15420,f15421,f15422,f15424,f15426,f15427,f15428,f15430,f15432])).
fof(f15553,plain,(
  $false | ($spl34 | $spl48)),
  inference(global_subsumption,[],[f15431,f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f428,f429,f268,f194,f235,f231,f230,f229,f228,f200,f256,f255,f247,f246,f245,f244,f199,f198,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f433,f406,f250,f249,f207,f191,f184,f183,f179,f691,f733,f854,f966,f968,f969,f970,f971,f972,f973,f975,f976,f978,f979,f980,f1024,f1143,f1153,f1165,f2809,f2823,f2826,f2830,f3082,f3089,f3374,f3421,f5542,f5640,f5932,f6289,f4727,f4254,f2243,f241,f238,f234,f193,f692,f3568,f3563,f3504,f3570,f3564,f5997,f5605,f6355,f3565,f3562,f3567,f3566,f6796,f3545,f4280,f4747,f3538,f3530,f3484,f3532,f3531,f6759,f6758,f5367,f3485,f7226,f7225,f7219,f7217,f7216,f7206,f7201,f5370,f5369,f3529,f3482,f226,f224,f223,f222,f221,f195,f734,f3533,f7194,f3624,f3623,f3622,f5083,f5261,f3621,f5053,f5231,f7212,f7200,f7198,f7193,f7192,f7191,f7190,f5344,f4991,f4974,f4867,f4851,f4551,f4535,f4454,f4438,f4109,f4091,f3675,f3653,f3537,f2128,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11603,f11604,f11570,f11571,f11572,f11573,f11575,f11577,f11579,f11582,f11588,f11593,f11597,f11598,f11599,f12952,f13160,f13164,f13170,f13259,f13269,f13274,f13276,f13277,f13278,f13279,f13280,f13283,f13286,f13287,f13205,f13215,f13221,f13224,f13226,f13227,f13228,f13229,f13230,f13232,f13234,f13235,f13237,f13468,f13474,f13484,f13490,f13493,f13495,f13496,f13497,f13498,f13499,f13501,f13503,f13504,f13509,f13576,f13586,f13591,f13593,f13594,f13595,f13596,f13597,f13600,f13603,f13604,f13541,f13633,f13637,f14059,f13949,f13950,f14060,f13981,f14079,f14190,f14391,f14278,f14279,f14392,f14312,f14413,f14631,f14516,f14517,f14632,f14552,f14653,f14825,f14826,f14833,f14834,f14957,f14941,f14946,f14951,f14953,f14954,f6172,f15489,f15492,f15495,f15498,f15376,f15377,f15379,f15380,f15383,f15384,f15386,f15387,f15388,f15389,f15390,f15391,f15392,f15393,f15395,f15396,f15399,f15406,f15407,f15411,f15412,f15414,f15487,f15416,f15417,f15419,f15420,f15421,f15422,f15424,f15426,f15427,f15428,f15430])).
fof(f15431,plain,(
  ( ! [X107,X105,X106,X104] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X104),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,happ(s(fun(X105,bool),X106),s(X105,X107))))) ) | ($spl34 | $spl48)),
  inference(backward_demodulation,[],[f6172,f7205])).
fof(f7205,plain,(
  ( ! [X107,X105,X106,X104] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X104),s('type.num.num','const.arithmetic.ZERO_0')))) | p(s(bool,happ(s(fun(X105,bool),X106),s(X105,sK12('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X104))),s('type.num.num','const.arithmetic.ZERO_0')),X106,X105))))) | ~p(s(bool,happ(s(fun(X105,bool),X106),s(X105,X107))))) ) | $spl34),
  inference(superposition,[],[f224,f1186])).
fof(f15552,plain,(
  $false | $spl48),
  inference(global_subsumption,[],[f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f428,f429,f268,f194,f235,f231,f230,f229,f228,f200,f256,f255,f247,f246,f245,f244,f199,f198,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f433,f406,f250,f249,f207,f191,f184,f183,f179,f691,f733,f854,f966,f968,f969,f970,f971,f972,f973,f975,f976,f978,f979,f980,f1024,f1143,f1153,f1165,f2809,f2823,f2826,f2830,f3082,f3089,f3374,f3421,f5542,f5640,f5932,f6289,f4727,f4254,f2243,f241,f238,f234,f193,f692,f3568,f3563,f3504,f3570,f3564,f5997,f5605,f6355,f3565,f3562,f3567,f3566,f6796,f3545,f4280,f4747,f3538,f3530,f3484,f3532,f3531,f6759,f6758,f5367,f3485,f7226,f7225,f7219,f7217,f7216,f7206,f7201,f5370,f5369,f3529,f3482,f226,f224,f223,f222,f221,f195,f734,f3533,f7194,f3624,f3623,f3622,f5083,f5261,f3621,f5053,f5231,f7212,f7200,f7198,f7193,f7192,f7191,f7190,f5344,f4991,f4974,f4867,f4851,f4551,f4535,f4454,f4438,f4109,f4091,f3675,f3653,f3537,f2128,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11603,f11604,f11570,f11571,f11572,f11573,f11575,f11577,f11579,f11582,f11588,f11593,f11597,f11598,f11599,f12952,f13160,f13164,f13170,f13259,f13269,f13274,f13276,f13277,f13278,f13279,f13280,f13283,f13286,f13287,f13205,f13215,f13221,f13224,f13226,f13227,f13228,f13229,f13230,f13232,f13234,f13235,f13237,f13468,f13474,f13484,f13490,f13493,f13495,f13496,f13497,f13498,f13499,f13501,f13503,f13504,f13509,f13576,f13586,f13591,f13593,f13594,f13595,f13596,f13597,f13600,f13603,f13604,f13541,f13633,f13637,f14059,f13949,f13950,f14060,f13981,f14079,f14190,f14391,f14278,f14279,f14392,f14312,f14413,f14631,f14516,f14517,f14632,f14552,f14653,f14825,f14826,f14833,f14834,f14957,f14941,f14946,f14951,f14953,f14954,f6172,f15489,f15492,f15495,f15498,f15376,f15377,f15379,f15380,f15383,f15384,f15386,f15387,f15388,f15389,f15390,f15391,f15392,f15393,f15395,f15396,f15399,f15406,f15407,f15411,f15412,f15414,f15487,f15416,f15417,f15419,f15420,f15421,f15422,f15424,f15426,f15427,f15428,f15430])).
fof(f15551,plain,(
  $false | ($spl34 | $spl48)),
  inference(global_subsumption,[],[f15429,f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f428,f429,f268,f194,f235,f231,f230,f229,f228,f200,f256,f255,f247,f246,f245,f244,f199,f198,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f433,f406,f250,f249,f207,f191,f184,f183,f179,f691,f733,f854,f966,f968,f969,f970,f971,f972,f973,f975,f976,f978,f979,f980,f1024,f1143,f1153,f1165,f2809,f2823,f2826,f2830,f3082,f3089,f3374,f3421,f5542,f5640,f5932,f6289,f4727,f4254,f2243,f241,f238,f234,f193,f692,f3568,f3563,f3504,f3570,f3564,f5997,f5605,f6355,f3565,f3562,f3567,f3566,f6796,f3545,f4280,f4747,f3538,f3530,f3484,f3532,f3531,f6759,f6758,f5367,f3485,f7226,f7225,f7219,f7217,f7216,f7206,f7201,f5370,f5369,f3529,f3482,f226,f224,f223,f222,f221,f195,f734,f3533,f7194,f3624,f3623,f3622,f5083,f5261,f3621,f5053,f5231,f7212,f7200,f7198,f7193,f7192,f7191,f7190,f5344,f4991,f4974,f4867,f4851,f4551,f4535,f4454,f4438,f4109,f4091,f3675,f3653,f3537,f2128,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11603,f11604,f11570,f11571,f11572,f11573,f11575,f11577,f11579,f11582,f11588,f11593,f11597,f11598,f11599,f12952,f13160,f13164,f13170,f13259,f13269,f13274,f13276,f13277,f13278,f13279,f13280,f13283,f13286,f13287,f13205,f13215,f13221,f13224,f13226,f13227,f13228,f13229,f13230,f13232,f13234,f13235,f13237,f13468,f13474,f13484,f13490,f13493,f13495,f13496,f13497,f13498,f13499,f13501,f13503,f13504,f13509,f13576,f13586,f13591,f13593,f13594,f13595,f13596,f13597,f13600,f13603,f13604,f13541,f13633,f13637,f14059,f13949,f13950,f14060,f13981,f14079,f14190,f14391,f14278,f14279,f14392,f14312,f14413,f14631,f14516,f14517,f14632,f14552,f14653,f14825,f14826,f14833,f14834,f14957,f14941,f14946,f14951,f14953,f14954,f6172,f15489,f15492,f15495,f15498,f15376,f15377,f15379,f15380,f15383,f15384,f15386,f15387,f15388,f15389,f15390,f15391,f15392,f15393,f15395,f15396,f15399,f15406,f15407,f15411,f15412,f15414,f15487,f15416,f15417,f15419,f15420,f15421,f15422,f15424,f15426,f15427,f15428])).
fof(f15429,plain,(
  ( ! [X99,X100,X98] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,happ(s(fun(X98,bool),X99),s(X98,X100))))) ) | ($spl34 | $spl48)),
  inference(backward_demodulation,[],[f6172,f7230])).
fof(f7230,plain,(
  ( ! [X99,X97,X100,X98] : (p(s(bool,happ(s(fun(X98,bool),X99),s(X98,sK12('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X97)),X99,X98))))) | ~p(s(bool,happ(s(fun(X98,bool),X99),s(X98,X100))))) ) | $spl34),
  inference(subsumption_resolution,[],[f7203,f174])).
fof(f7203,plain,(
  ( ! [X99,X97,X100,X98] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun(X98,bool),X99),s(X98,sK12('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X97)),X99,X98))))) | ~p(s(bool,happ(s(fun(X98,bool),X99),s(X98,X100))))) ) | $spl34),
  inference(superposition,[],[f224,f1180])).
fof(f15550,plain,(
  $false | $spl48),
  inference(global_subsumption,[],[f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f428,f429,f268,f194,f235,f231,f230,f229,f228,f200,f256,f255,f247,f246,f245,f244,f199,f198,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f433,f406,f250,f249,f207,f191,f184,f183,f179,f691,f733,f854,f966,f968,f969,f970,f971,f972,f973,f975,f976,f978,f979,f980,f1024,f1143,f1153,f1165,f2809,f2823,f2826,f2830,f3082,f3089,f3374,f3421,f5542,f5640,f5932,f6289,f4727,f4254,f2243,f241,f238,f234,f193,f692,f3568,f3563,f3504,f3570,f3564,f5997,f5605,f6355,f3565,f3562,f3567,f3566,f6796,f3545,f4280,f4747,f3538,f3530,f3484,f3532,f3531,f6759,f6758,f5367,f3485,f7226,f7225,f7219,f7217,f7216,f7206,f7201,f5370,f5369,f3529,f3482,f226,f224,f223,f222,f221,f195,f734,f3533,f7194,f3624,f3623,f3622,f5083,f5261,f3621,f5053,f5231,f7212,f7200,f7198,f7193,f7192,f7191,f7190,f5344,f4991,f4974,f4867,f4851,f4551,f4535,f4454,f4438,f4109,f4091,f3675,f3653,f3537,f2128,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11603,f11604,f11570,f11571,f11572,f11573,f11575,f11577,f11579,f11582,f11588,f11593,f11597,f11598,f11599,f12952,f13160,f13164,f13170,f13259,f13269,f13274,f13276,f13277,f13278,f13279,f13280,f13283,f13286,f13287,f13205,f13215,f13221,f13224,f13226,f13227,f13228,f13229,f13230,f13232,f13234,f13235,f13237,f13468,f13474,f13484,f13490,f13493,f13495,f13496,f13497,f13498,f13499,f13501,f13503,f13504,f13509,f13576,f13586,f13591,f13593,f13594,f13595,f13596,f13597,f13600,f13603,f13604,f13541,f13633,f13637,f14059,f13949,f13950,f14060,f13981,f14079,f14190,f14391,f14278,f14279,f14392,f14312,f14413,f14631,f14516,f14517,f14632,f14552,f14653,f14825,f14826,f14833,f14834,f14957,f14941,f14946,f14951,f14953,f14954,f6172,f15489,f15492,f15495,f15498,f15376,f15377,f15379,f15380,f15383,f15384,f15386,f15387,f15388,f15389,f15390,f15391,f15392,f15393,f15395,f15396,f15399,f15406,f15407,f15411,f15412,f15414,f15487,f15416,f15417,f15419,f15420,f15421,f15422,f15424,f15426,f15427,f15428])).
fof(f15549,plain,(
  $false | $spl48),
  inference(global_subsumption,[],[f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f428,f429,f268,f194,f235,f231,f230,f229,f228,f200,f256,f255,f247,f246,f245,f244,f199,f198,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f433,f406,f250,f249,f207,f191,f184,f183,f179,f691,f733,f854,f966,f968,f969,f970,f971,f972,f973,f975,f976,f978,f979,f980,f1024,f1143,f1153,f1165,f2809,f2823,f2826,f2830,f3082,f3089,f3374,f3421,f5542,f5640,f5932,f6289,f4727,f4254,f2243,f241,f238,f234,f193,f692,f3568,f3563,f3504,f3570,f3564,f5997,f5605,f6355,f3565,f3562,f3567,f3566,f6796,f3545,f4280,f4747,f3538,f3530,f3484,f3532,f3531,f6759,f6758,f5367,f3485,f7226,f7225,f7219,f7217,f7216,f7206,f7201,f5370,f5369,f3529,f3482,f226,f224,f223,f222,f221,f195,f734,f3533,f7194,f3624,f3623,f3622,f5083,f5261,f3621,f5053,f5231,f7212,f7200,f7198,f7193,f7192,f7191,f7190,f5344,f4991,f4974,f4867,f4851,f4551,f4535,f4454,f4438,f4109,f4091,f3675,f3653,f3537,f2128,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11603,f11604,f11570,f11571,f11572,f11573,f11575,f11577,f11579,f11582,f11588,f11593,f11597,f11598,f11599,f12952,f13160,f13164,f13170,f13259,f13269,f13274,f13276,f13277,f13278,f13279,f13280,f13283,f13286,f13287,f13205,f13215,f13221,f13224,f13226,f13227,f13228,f13229,f13230,f13232,f13234,f13235,f13237,f13468,f13474,f13484,f13490,f13493,f13495,f13496,f13497,f13498,f13499,f13501,f13503,f13504,f13509,f13576,f13586,f13591,f13593,f13594,f13595,f13596,f13597,f13600,f13603,f13604,f13541,f13633,f13637,f14059,f13949,f13950,f14060,f13981,f14079,f14190,f14391,f14278,f14279,f14392,f14312,f14413,f14631,f14516,f14517,f14632,f14552,f14653,f14825,f14826,f14833,f14834,f14957,f14941,f14946,f14951,f14953,f14954,f6172,f15489,f15492,f15495,f15498,f15376,f15377,f15379,f15380,f15383,f15384,f15386,f15387,f15388,f15389,f15390,f15391,f15392,f15393,f15395,f15396,f15399,f15406,f15407,f15411,f15412,f15414,f15487,f15416,f15417,f15419,f15420,f15421,f15422,f15424,f15426,f15427])).
fof(f15548,plain,(
  $false | $spl48),
  inference(global_subsumption,[],[f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f428,f429,f268,f194,f235,f231,f230,f229,f228,f200,f256,f255,f247,f246,f245,f244,f199,f198,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f433,f406,f250,f249,f207,f191,f184,f183,f179,f691,f733,f854,f966,f968,f969,f970,f971,f972,f973,f975,f976,f978,f979,f980,f1024,f1143,f1153,f1165,f2809,f2823,f2826,f2830,f3082,f3089,f3374,f3421,f5542,f5640,f5932,f6289,f4727,f4254,f2243,f241,f238,f234,f193,f692,f3568,f3563,f3504,f3570,f3564,f5997,f5605,f6355,f3565,f3562,f3567,f3566,f6796,f3545,f4280,f4747,f3538,f3530,f3484,f3532,f3531,f6759,f6758,f5367,f3485,f7226,f7225,f7219,f7217,f7216,f7206,f7201,f5370,f5369,f3529,f3482,f226,f224,f223,f222,f221,f195,f734,f3533,f7194,f3624,f3623,f3622,f5083,f5261,f3621,f5053,f5231,f7212,f7200,f7198,f7193,f7192,f7191,f7190,f5344,f4991,f4974,f4867,f4851,f4551,f4535,f4454,f4438,f4109,f4091,f3675,f3653,f3537,f2128,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11603,f11604,f11570,f11571,f11572,f11573,f11575,f11577,f11579,f11582,f11588,f11593,f11597,f11598,f11599,f12952,f13160,f13164,f13170,f13259,f13269,f13274,f13276,f13277,f13278,f13279,f13280,f13283,f13286,f13287,f13205,f13215,f13221,f13224,f13226,f13227,f13228,f13229,f13230,f13232,f13234,f13235,f13237,f13468,f13474,f13484,f13490,f13493,f13495,f13496,f13497,f13498,f13499,f13501,f13503,f13504,f13509,f13576,f13586,f13591,f13593,f13594,f13595,f13596,f13597,f13600,f13603,f13604,f13541,f13633,f13637,f14059,f13949,f13950,f14060,f13981,f14079,f14190,f14391,f14278,f14279,f14392,f14312,f14413,f14631,f14516,f14517,f14632,f14552,f14653,f14825,f14826,f14833,f14834,f14957,f14941,f14946,f14951,f14953,f14954,f6172,f15489,f15492,f15495,f15498,f15376,f15377,f15379,f15380,f15383,f15384,f15386,f15387,f15388,f15389,f15390,f15391,f15392,f15393,f15395,f15396,f15399,f15406,f15407,f15411,f15412,f15414,f15487,f15416,f15417,f15419,f15420,f15421,f15422,f15424,f15426])).
fof(f15547,plain,(
  $false | ($spl34 | $spl48)),
  inference(global_subsumption,[],[f15425,f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f428,f429,f268,f194,f235,f231,f230,f229,f228,f200,f256,f255,f247,f246,f245,f244,f199,f198,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f433,f406,f250,f249,f207,f191,f184,f183,f179,f691,f733,f854,f966,f968,f969,f970,f971,f972,f973,f975,f976,f978,f979,f980,f1024,f1143,f1153,f1165,f2809,f2823,f2826,f2830,f3082,f3089,f3374,f3421,f5542,f5640,f5932,f6289,f4727,f4254,f2243,f241,f238,f234,f193,f692,f3568,f3563,f3504,f3570,f3564,f5997,f5605,f6355,f3565,f3562,f3567,f3566,f6796,f3545,f4280,f4747,f3538,f3530,f3484,f3532,f3531,f6759,f6758,f5367,f3485,f7226,f7225,f7219,f7217,f7216,f7206,f7201,f5370,f5369,f3529,f3482,f226,f224,f223,f222,f221,f195,f734,f3533,f7194,f3624,f3623,f3622,f5083,f5261,f3621,f5053,f5231,f7212,f7200,f7198,f7193,f7192,f7191,f7190,f5344,f4991,f4974,f4867,f4851,f4551,f4535,f4454,f4438,f4109,f4091,f3675,f3653,f3537,f2128,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11603,f11604,f11570,f11571,f11572,f11573,f11575,f11577,f11579,f11582,f11588,f11593,f11597,f11598,f11599,f12952,f13160,f13164,f13170,f13259,f13269,f13274,f13276,f13277,f13278,f13279,f13280,f13283,f13286,f13287,f13205,f13215,f13221,f13224,f13226,f13227,f13228,f13229,f13230,f13232,f13234,f13235,f13237,f13468,f13474,f13484,f13490,f13493,f13495,f13496,f13497,f13498,f13499,f13501,f13503,f13504,f13509,f13576,f13586,f13591,f13593,f13594,f13595,f13596,f13597,f13600,f13603,f13604,f13541,f13633,f13637,f14059,f13949,f13950,f14060,f13981,f14079,f14190,f14391,f14278,f14279,f14392,f14312,f14413,f14631,f14516,f14517,f14632,f14552,f14653,f14825,f14826,f14833,f14834,f14957,f14941,f14946,f14951,f14953,f14954,f6172,f15489,f15492,f15495,f15498,f15376,f15377,f15379,f15380,f15383,f15384,f15386,f15387,f15388,f15389,f15390,f15391,f15392,f15393,f15395,f15396,f15399,f15406,f15407,f15411,f15412,f15414,f15487,f15416,f15417,f15419,f15420,f15421,f15422,f15424])).
fof(f15425,plain,(
  ( ! [X83,X81,X84,X82] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X81)))) | ~p(s(bool,happ(s(fun(X82,bool),X83),s(X82,X84))))) ) | ($spl34 | $spl48)),
  inference(backward_demodulation,[],[f6172,f7199])).
fof(f7199,plain,(
  ( ! [X83,X81,X84,X82] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X81)))) | p(s(bool,happ(s(fun(X82,bool),X83),s(X82,sK12('const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X81))),s('type.num.num','const.arithmetic.ZERO_0')),X83,X82))))) | ~p(s(bool,happ(s(fun(X82,bool),X83),s(X82,X84))))) ) | $spl34),
  inference(superposition,[],[f224,f1187])).
fof(f15546,plain,(
  $false | $spl48),
  inference(global_subsumption,[],[f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f428,f429,f268,f194,f235,f231,f230,f229,f228,f200,f256,f255,f247,f246,f245,f244,f199,f198,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f433,f406,f250,f249,f207,f191,f184,f183,f179,f691,f733,f854,f966,f968,f969,f970,f971,f972,f973,f975,f976,f978,f979,f980,f1024,f1143,f1153,f1165,f2809,f2823,f2826,f2830,f3082,f3089,f3374,f3421,f5542,f5640,f5932,f6289,f4727,f4254,f2243,f241,f238,f234,f193,f692,f3568,f3563,f3504,f3570,f3564,f5997,f5605,f6355,f3565,f3562,f3567,f3566,f6796,f3545,f4280,f4747,f3538,f3530,f3484,f3532,f3531,f6759,f6758,f5367,f3485,f7226,f7225,f7219,f7217,f7216,f7206,f7201,f5370,f5369,f3529,f3482,f226,f224,f223,f222,f221,f195,f734,f3533,f7194,f3624,f3623,f3622,f5083,f5261,f3621,f5053,f5231,f7212,f7200,f7198,f7193,f7192,f7191,f7190,f5344,f4991,f4974,f4867,f4851,f4551,f4535,f4454,f4438,f4109,f4091,f3675,f3653,f3537,f2128,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11603,f11604,f11570,f11571,f11572,f11573,f11575,f11577,f11579,f11582,f11588,f11593,f11597,f11598,f11599,f12952,f13160,f13164,f13170,f13259,f13269,f13274,f13276,f13277,f13278,f13279,f13280,f13283,f13286,f13287,f13205,f13215,f13221,f13224,f13226,f13227,f13228,f13229,f13230,f13232,f13234,f13235,f13237,f13468,f13474,f13484,f13490,f13493,f13495,f13496,f13497,f13498,f13499,f13501,f13503,f13504,f13509,f13576,f13586,f13591,f13593,f13594,f13595,f13596,f13597,f13600,f13603,f13604,f13541,f13633,f13637,f14059,f13949,f13950,f14060,f13981,f14079,f14190,f14391,f14278,f14279,f14392,f14312,f14413,f14631,f14516,f14517,f14632,f14552,f14653,f14825,f14826,f14833,f14834,f14957,f14941,f14946,f14951,f14953,f14954,f6172,f15489,f15492,f15495,f15498,f15376,f15377,f15379,f15380,f15383,f15384,f15386,f15387,f15388,f15389,f15390,f15391,f15392,f15393,f15395,f15396,f15399,f15406,f15407,f15411,f15412,f15414,f15487,f15416,f15417,f15419,f15420,f15421,f15422,f15424])).
fof(f15545,plain,(
  $false | ($spl34 | $spl48)),
  inference(global_subsumption,[],[f15423,f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f428,f429,f268,f194,f235,f231,f230,f229,f228,f200,f256,f255,f247,f246,f245,f244,f199,f198,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f433,f406,f250,f249,f207,f191,f184,f183,f179,f691,f733,f854,f966,f968,f969,f970,f971,f972,f973,f975,f976,f978,f979,f980,f1024,f1143,f1153,f1165,f2809,f2823,f2826,f2830,f3082,f3089,f3374,f3421,f5542,f5640,f5932,f6289,f4727,f4254,f2243,f241,f238,f234,f193,f692,f3568,f3563,f3504,f3570,f3564,f5997,f5605,f6355,f3565,f3562,f3567,f3566,f6796,f3545,f4280,f4747,f3538,f3530,f3484,f3532,f3531,f6759,f6758,f5367,f3485,f7226,f7225,f7219,f7217,f7216,f7206,f7201,f5370,f5369,f3529,f3482,f226,f224,f223,f222,f221,f195,f734,f3533,f7194,f3624,f3623,f3622,f5083,f5261,f3621,f5053,f5231,f7212,f7200,f7198,f7193,f7192,f7191,f7190,f5344,f4991,f4974,f4867,f4851,f4551,f4535,f4454,f4438,f4109,f4091,f3675,f3653,f3537,f2128,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11603,f11604,f11570,f11571,f11572,f11573,f11575,f11577,f11579,f11582,f11588,f11593,f11597,f11598,f11599,f12952,f13160,f13164,f13170,f13259,f13269,f13274,f13276,f13277,f13278,f13279,f13280,f13283,f13286,f13287,f13205,f13215,f13221,f13224,f13226,f13227,f13228,f13229,f13230,f13232,f13234,f13235,f13237,f13468,f13474,f13484,f13490,f13493,f13495,f13496,f13497,f13498,f13499,f13501,f13503,f13504,f13509,f13576,f13586,f13591,f13593,f13594,f13595,f13596,f13597,f13600,f13603,f13604,f13541,f13633,f13637,f14059,f13949,f13950,f14060,f13981,f14079,f14190,f14391,f14278,f14279,f14392,f14312,f14413,f14631,f14516,f14517,f14632,f14552,f14653,f14825,f14826,f14833,f14834,f14957,f14941,f14946,f14951,f14953,f14954,f6172,f15489,f15492,f15495,f15498,f15376,f15377,f15379,f15380,f15383,f15384,f15386,f15387,f15388,f15389,f15390,f15391,f15392,f15393,f15395,f15396,f15399,f15406,f15407,f15411,f15412,f15414,f15487,f15416,f15417,f15419,f15420,f15421,f15422])).
fof(f15423,plain,(
  ( ! [X70,X71,X69] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,happ(s(fun(X69,bool),X70),s(X69,X71))))) ) | ($spl34 | $spl48)),
  inference(backward_demodulation,[],[f6172,f7229])).
fof(f7229,plain,(
  ( ! [X70,X71,X69] : (p(s(bool,happ(s(fun(X69,bool),X70),s(X69,sK12('const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0')),X70,X69))))) | ~p(s(bool,happ(s(fun(X69,bool),X70),s(X69,X71))))) ) | $spl34),
  inference(subsumption_resolution,[],[f7196,f174])).
fof(f7196,plain,(
  ( ! [X70,X71,X69] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun(X69,bool),X70),s(X69,sK12('const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0')),X70,X69))))) | ~p(s(bool,happ(s(fun(X69,bool),X70),s(X69,X71))))) ) | $spl34),
  inference(superposition,[],[f224,f1195])).
fof(f15544,plain,(
  $false | $spl48),
  inference(global_subsumption,[],[f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f428,f429,f268,f194,f235,f231,f230,f229,f228,f200,f256,f255,f247,f246,f245,f244,f199,f198,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f433,f406,f250,f249,f207,f191,f184,f183,f179,f691,f733,f854,f966,f968,f969,f970,f971,f972,f973,f975,f976,f978,f979,f980,f1024,f1143,f1153,f1165,f2809,f2823,f2826,f2830,f3082,f3089,f3374,f3421,f5542,f5640,f5932,f6289,f4727,f4254,f2243,f241,f238,f234,f193,f692,f3568,f3563,f3504,f3570,f3564,f5997,f5605,f6355,f3565,f3562,f3567,f3566,f6796,f3545,f4280,f4747,f3538,f3530,f3484,f3532,f3531,f6759,f6758,f5367,f3485,f7226,f7225,f7219,f7217,f7216,f7206,f7201,f5370,f5369,f3529,f3482,f226,f224,f223,f222,f221,f195,f734,f3533,f7194,f3624,f3623,f3622,f5083,f5261,f3621,f5053,f5231,f7212,f7200,f7198,f7193,f7192,f7191,f7190,f5344,f4991,f4974,f4867,f4851,f4551,f4535,f4454,f4438,f4109,f4091,f3675,f3653,f3537,f2128,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11603,f11604,f11570,f11571,f11572,f11573,f11575,f11577,f11579,f11582,f11588,f11593,f11597,f11598,f11599,f12952,f13160,f13164,f13170,f13259,f13269,f13274,f13276,f13277,f13278,f13279,f13280,f13283,f13286,f13287,f13205,f13215,f13221,f13224,f13226,f13227,f13228,f13229,f13230,f13232,f13234,f13235,f13237,f13468,f13474,f13484,f13490,f13493,f13495,f13496,f13497,f13498,f13499,f13501,f13503,f13504,f13509,f13576,f13586,f13591,f13593,f13594,f13595,f13596,f13597,f13600,f13603,f13604,f13541,f13633,f13637,f14059,f13949,f13950,f14060,f13981,f14079,f14190,f14391,f14278,f14279,f14392,f14312,f14413,f14631,f14516,f14517,f14632,f14552,f14653,f14825,f14826,f14833,f14834,f14957,f14941,f14946,f14951,f14953,f14954,f6172,f15489,f15492,f15495,f15498,f15376,f15377,f15379,f15380,f15383,f15384,f15386,f15387,f15388,f15389,f15390,f15391,f15392,f15393,f15395,f15396,f15399,f15406,f15407,f15411,f15412,f15414,f15487,f15416,f15417,f15419,f15420,f15421,f15422])).
fof(f15543,plain,(
  $false | $spl48),
  inference(global_subsumption,[],[f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f428,f429,f268,f194,f235,f231,f230,f229,f228,f200,f256,f255,f247,f246,f245,f244,f199,f198,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f433,f406,f250,f249,f207,f191,f184,f183,f179,f691,f733,f854,f966,f968,f969,f970,f971,f972,f973,f975,f976,f978,f979,f980,f1024,f1143,f1153,f1165,f2809,f2823,f2826,f2830,f3082,f3089,f3374,f3421,f5542,f5640,f5932,f6289,f4727,f4254,f2243,f241,f238,f234,f193,f692,f3568,f3563,f3504,f3570,f3564,f5997,f5605,f6355,f3565,f3562,f3567,f3566,f6796,f3545,f4280,f4747,f3538,f3530,f3484,f3532,f3531,f6759,f6758,f5367,f3485,f7226,f7225,f7219,f7217,f7216,f7206,f7201,f5370,f5369,f3529,f3482,f226,f224,f223,f222,f221,f195,f734,f3533,f7194,f3624,f3623,f3622,f5083,f5261,f3621,f5053,f5231,f7212,f7200,f7198,f7193,f7192,f7191,f7190,f5344,f4991,f4974,f4867,f4851,f4551,f4535,f4454,f4438,f4109,f4091,f3675,f3653,f3537,f2128,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11603,f11604,f11570,f11571,f11572,f11573,f11575,f11577,f11579,f11582,f11588,f11593,f11597,f11598,f11599,f12952,f13160,f13164,f13170,f13259,f13269,f13274,f13276,f13277,f13278,f13279,f13280,f13283,f13286,f13287,f13205,f13215,f13221,f13224,f13226,f13227,f13228,f13229,f13230,f13232,f13234,f13235,f13237,f13468,f13474,f13484,f13490,f13493,f13495,f13496,f13497,f13498,f13499,f13501,f13503,f13504,f13509,f13576,f13586,f13591,f13593,f13594,f13595,f13596,f13597,f13600,f13603,f13604,f13541,f13633,f13637,f14059,f13949,f13950,f14060,f13981,f14079,f14190,f14391,f14278,f14279,f14392,f14312,f14413,f14631,f14516,f14517,f14632,f14552,f14653,f14825,f14826,f14833,f14834,f14957,f14941,f14946,f14951,f14953,f14954,f6172,f15489,f15492,f15495,f15498,f15376,f15377,f15379,f15380,f15383,f15384,f15386,f15387,f15388,f15389,f15390,f15391,f15392,f15393,f15395,f15396,f15399,f15406,f15407,f15411,f15412,f15414,f15487,f15416,f15417,f15419,f15420,f15421])).
fof(f15542,plain,(
  $false | $spl48),
  inference(global_subsumption,[],[f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f428,f429,f268,f194,f235,f231,f230,f229,f228,f200,f256,f255,f247,f246,f245,f244,f199,f198,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f433,f406,f250,f249,f207,f191,f184,f183,f179,f691,f733,f854,f966,f968,f969,f970,f971,f972,f973,f975,f976,f978,f979,f980,f1024,f1143,f1153,f1165,f2809,f2823,f2826,f2830,f3082,f3089,f3374,f3421,f5542,f5640,f5932,f6289,f4727,f4254,f2243,f241,f238,f234,f193,f692,f3568,f3563,f3504,f3570,f3564,f5997,f5605,f6355,f3565,f3562,f3567,f3566,f6796,f3545,f4280,f4747,f3538,f3530,f3484,f3532,f3531,f6759,f6758,f5367,f3485,f7226,f7225,f7219,f7217,f7216,f7206,f7201,f5370,f5369,f3529,f3482,f226,f224,f223,f222,f221,f195,f734,f3533,f7194,f3624,f3623,f3622,f5083,f5261,f3621,f5053,f5231,f7212,f7200,f7198,f7193,f7192,f7191,f7190,f5344,f4991,f4974,f4867,f4851,f4551,f4535,f4454,f4438,f4109,f4091,f3675,f3653,f3537,f2128,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11603,f11604,f11570,f11571,f11572,f11573,f11575,f11577,f11579,f11582,f11588,f11593,f11597,f11598,f11599,f12952,f13160,f13164,f13170,f13259,f13269,f13274,f13276,f13277,f13278,f13279,f13280,f13283,f13286,f13287,f13205,f13215,f13221,f13224,f13226,f13227,f13228,f13229,f13230,f13232,f13234,f13235,f13237,f13468,f13474,f13484,f13490,f13493,f13495,f13496,f13497,f13498,f13499,f13501,f13503,f13504,f13509,f13576,f13586,f13591,f13593,f13594,f13595,f13596,f13597,f13600,f13603,f13604,f13541,f13633,f13637,f14059,f13949,f13950,f14060,f13981,f14079,f14190,f14391,f14278,f14279,f14392,f14312,f14413,f14631,f14516,f14517,f14632,f14552,f14653,f14825,f14826,f14833,f14834,f14957,f14941,f14946,f14951,f14953,f14954,f6172,f15489,f15492,f15495,f15498,f15376,f15377,f15379,f15380,f15383,f15384,f15386,f15387,f15388,f15389,f15390,f15391,f15392,f15393,f15395,f15396,f15399,f15406,f15407,f15411,f15412,f15414,f15487,f15416,f15417,f15419,f15420])).
fof(f15541,plain,(
  $false | $spl48),
  inference(global_subsumption,[],[f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f428,f429,f268,f194,f235,f231,f230,f229,f228,f200,f256,f255,f247,f246,f245,f244,f199,f198,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f433,f406,f250,f249,f207,f191,f184,f183,f179,f691,f733,f854,f966,f968,f969,f970,f971,f972,f973,f975,f976,f978,f979,f980,f1024,f1143,f1153,f1165,f2809,f2823,f2826,f2830,f3082,f3089,f3374,f3421,f5542,f5640,f5932,f6289,f4727,f4254,f2243,f241,f238,f234,f193,f692,f3568,f3563,f3504,f3570,f3564,f5997,f5605,f6355,f3565,f3562,f3567,f3566,f6796,f3545,f4280,f4747,f3538,f3530,f3484,f3532,f3531,f6759,f6758,f5367,f3485,f7226,f7225,f7219,f7217,f7216,f7206,f7201,f5370,f5369,f3529,f3482,f226,f224,f223,f222,f221,f195,f734,f3533,f7194,f3624,f3623,f3622,f5083,f5261,f3621,f5053,f5231,f7212,f7200,f7198,f7193,f7192,f7191,f7190,f5344,f4991,f4974,f4867,f4851,f4551,f4535,f4454,f4438,f4109,f4091,f3675,f3653,f3537,f2128,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11603,f11604,f11570,f11571,f11572,f11573,f11575,f11577,f11579,f11582,f11588,f11593,f11597,f11598,f11599,f12952,f13160,f13164,f13170,f13259,f13269,f13274,f13276,f13277,f13278,f13279,f13280,f13283,f13286,f13287,f13205,f13215,f13221,f13224,f13226,f13227,f13228,f13229,f13230,f13232,f13234,f13235,f13237,f13468,f13474,f13484,f13490,f13493,f13495,f13496,f13497,f13498,f13499,f13501,f13503,f13504,f13509,f13576,f13586,f13591,f13593,f13594,f13595,f13596,f13597,f13600,f13603,f13604,f13541,f13633,f13637,f14059,f13949,f13950,f14060,f13981,f14079,f14190,f14391,f14278,f14279,f14392,f14312,f14413,f14631,f14516,f14517,f14632,f14552,f14653,f14825,f14826,f14833,f14834,f14957,f14941,f14946,f14951,f14953,f14954,f6172,f15489,f15492,f15495,f15498,f15376,f15377,f15379,f15380,f15383,f15384,f15386,f15387,f15388,f15389,f15390,f15391,f15392,f15393,f15395,f15396,f15399,f15406,f15407,f15411,f15412,f15414,f15487,f15416,f15417,f15419])).
fof(f15540,plain,(
  $false | ($spl34 | $spl48)),
  inference(global_subsumption,[],[f15418,f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f428,f429,f268,f194,f235,f231,f230,f229,f228,f200,f256,f255,f247,f246,f245,f244,f199,f198,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f433,f406,f250,f249,f207,f191,f184,f183,f179,f691,f733,f854,f966,f968,f969,f970,f971,f972,f973,f975,f976,f978,f979,f980,f1024,f1143,f1153,f1165,f2809,f2823,f2826,f2830,f3082,f3089,f3374,f3421,f5542,f5640,f5932,f6289,f4727,f4254,f2243,f241,f238,f234,f193,f692,f3568,f3563,f3504,f3570,f3564,f5997,f5605,f6355,f3565,f3562,f3567,f3566,f6796,f3545,f4280,f4747,f3538,f3530,f3484,f3532,f3531,f6759,f6758,f5367,f3485,f7226,f7225,f7219,f7217,f7216,f7206,f7201,f5370,f5369,f3529,f3482,f226,f224,f223,f222,f221,f195,f734,f3533,f7194,f3624,f3623,f3622,f5083,f5261,f3621,f5053,f5231,f7212,f7200,f7198,f7193,f7192,f7191,f7190,f5344,f4991,f4974,f4867,f4851,f4551,f4535,f4454,f4438,f4109,f4091,f3675,f3653,f3537,f2128,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11603,f11604,f11570,f11571,f11572,f11573,f11575,f11577,f11579,f11582,f11588,f11593,f11597,f11598,f11599,f12952,f13160,f13164,f13170,f13259,f13269,f13274,f13276,f13277,f13278,f13279,f13280,f13283,f13286,f13287,f13205,f13215,f13221,f13224,f13226,f13227,f13228,f13229,f13230,f13232,f13234,f13235,f13237,f13468,f13474,f13484,f13490,f13493,f13495,f13496,f13497,f13498,f13499,f13501,f13503,f13504,f13509,f13576,f13586,f13591,f13593,f13594,f13595,f13596,f13597,f13600,f13603,f13604,f13541,f13633,f13637,f14059,f13949,f13950,f14060,f13981,f14079,f14190,f14391,f14278,f14279,f14392,f14312,f14413,f14631,f14516,f14517,f14632,f14552,f14653,f14825,f14826,f14833,f14834,f14957,f14941,f14946,f14951,f14953,f14954,f6172,f15489,f15492,f15495,f15498,f15376,f15377,f15379,f15380,f15383,f15384,f15386,f15387,f15388,f15389,f15390,f15391,f15392,f15393,f15395,f15396,f15399,f15406,f15407,f15411,f15412,f15414,f15487,f15416,f15417])).
fof(f15418,plain,(
  ( ! [X39,X37,X38,X40] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X37)))) | ~p(s(bool,happ(s(fun(X38,bool),X39),s(X38,X40))))) ) | ($spl34 | $spl48)),
  inference(backward_demodulation,[],[f6172,f7189])).
fof(f7189,plain,(
  ( ! [X39,X37,X38,X40] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X37)))) | p(s(bool,happ(s(fun(X38,bool),X39),s(X38,sK12('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X37)))),X39,X38))))) | ~p(s(bool,happ(s(fun(X38,bool),X39),s(X38,X40))))) ) | $spl34),
  inference(superposition,[],[f224,f1185])).
fof(f15539,plain,(
  $false | $spl48),
  inference(global_subsumption,[],[f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f428,f429,f268,f194,f235,f231,f230,f229,f228,f200,f256,f255,f247,f246,f245,f244,f199,f198,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f433,f406,f250,f249,f207,f191,f184,f183,f179,f691,f733,f854,f966,f968,f969,f970,f971,f972,f973,f975,f976,f978,f979,f980,f1024,f1143,f1153,f1165,f2809,f2823,f2826,f2830,f3082,f3089,f3374,f3421,f5542,f5640,f5932,f6289,f4727,f4254,f2243,f241,f238,f234,f193,f692,f3568,f3563,f3504,f3570,f3564,f5997,f5605,f6355,f3565,f3562,f3567,f3566,f6796,f3545,f4280,f4747,f3538,f3530,f3484,f3532,f3531,f6759,f6758,f5367,f3485,f7226,f7225,f7219,f7217,f7216,f7206,f7201,f5370,f5369,f3529,f3482,f226,f224,f223,f222,f221,f195,f734,f3533,f7194,f3624,f3623,f3622,f5083,f5261,f3621,f5053,f5231,f7212,f7200,f7198,f7193,f7192,f7191,f7190,f5344,f4991,f4974,f4867,f4851,f4551,f4535,f4454,f4438,f4109,f4091,f3675,f3653,f3537,f2128,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11603,f11604,f11570,f11571,f11572,f11573,f11575,f11577,f11579,f11582,f11588,f11593,f11597,f11598,f11599,f12952,f13160,f13164,f13170,f13259,f13269,f13274,f13276,f13277,f13278,f13279,f13280,f13283,f13286,f13287,f13205,f13215,f13221,f13224,f13226,f13227,f13228,f13229,f13230,f13232,f13234,f13235,f13237,f13468,f13474,f13484,f13490,f13493,f13495,f13496,f13497,f13498,f13499,f13501,f13503,f13504,f13509,f13576,f13586,f13591,f13593,f13594,f13595,f13596,f13597,f13600,f13603,f13604,f13541,f13633,f13637,f14059,f13949,f13950,f14060,f13981,f14079,f14190,f14391,f14278,f14279,f14392,f14312,f14413,f14631,f14516,f14517,f14632,f14552,f14653,f14825,f14826,f14833,f14834,f14957,f14941,f14946,f14951,f14953,f14954,f6172,f15489,f15492,f15495,f15498,f15376,f15377,f15379,f15380,f15383,f15384,f15386,f15387,f15388,f15389,f15390,f15391,f15392,f15393,f15395,f15396,f15399,f15406,f15407,f15411,f15412,f15414,f15487,f15416,f15417])).
fof(f15538,plain,(
  $false | $spl48),
  inference(global_subsumption,[],[f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f428,f429,f268,f194,f235,f231,f230,f229,f228,f200,f256,f255,f247,f246,f245,f244,f199,f198,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f433,f406,f250,f249,f207,f191,f184,f183,f179,f691,f733,f854,f966,f968,f969,f970,f971,f972,f973,f975,f976,f978,f979,f980,f1024,f1143,f1153,f1165,f2809,f2823,f2826,f2830,f3082,f3089,f3374,f3421,f5542,f5640,f5932,f6289,f4727,f4254,f2243,f241,f238,f234,f193,f692,f3568,f3563,f3504,f3570,f3564,f5997,f5605,f6355,f3565,f3562,f3567,f3566,f6796,f3545,f4280,f4747,f3538,f3530,f3484,f3532,f3531,f6759,f6758,f5367,f3485,f7226,f7225,f7219,f7217,f7216,f7206,f7201,f5370,f5369,f3529,f3482,f226,f224,f223,f222,f221,f195,f734,f3533,f7194,f3624,f3623,f3622,f5083,f5261,f3621,f5053,f5231,f7212,f7200,f7198,f7193,f7192,f7191,f7190,f5344,f4991,f4974,f4867,f4851,f4551,f4535,f4454,f4438,f4109,f4091,f3675,f3653,f3537,f2128,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11603,f11604,f11570,f11571,f11572,f11573,f11575,f11577,f11579,f11582,f11588,f11593,f11597,f11598,f11599,f12952,f13160,f13164,f13170,f13259,f13269,f13274,f13276,f13277,f13278,f13279,f13280,f13283,f13286,f13287,f13205,f13215,f13221,f13224,f13226,f13227,f13228,f13229,f13230,f13232,f13234,f13235,f13237,f13468,f13474,f13484,f13490,f13493,f13495,f13496,f13497,f13498,f13499,f13501,f13503,f13504,f13509,f13576,f13586,f13591,f13593,f13594,f13595,f13596,f13597,f13600,f13603,f13604,f13541,f13633,f13637,f14059,f13949,f13950,f14060,f13981,f14079,f14190,f14391,f14278,f14279,f14392,f14312,f14413,f14631,f14516,f14517,f14632,f14552,f14653,f14825,f14826,f14833,f14834,f14957,f14941,f14946,f14951,f14953,f14954,f6172,f15489,f15492,f15495,f15498,f15376,f15377,f15379,f15380,f15383,f15384,f15386,f15387,f15388,f15389,f15390,f15391,f15392,f15393,f15395,f15396,f15399,f15406,f15407,f15411,f15412,f15414,f15487,f15416])).
fof(f15537,plain,(
  $false | $spl48),
  inference(global_subsumption,[],[f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f428,f429,f268,f194,f235,f231,f230,f229,f228,f200,f256,f255,f247,f246,f245,f244,f199,f198,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f433,f406,f250,f249,f207,f191,f184,f183,f179,f691,f733,f854,f966,f968,f969,f970,f971,f972,f973,f975,f976,f978,f979,f980,f1024,f1143,f1153,f1165,f2809,f2823,f2826,f2830,f3082,f3089,f3374,f3421,f5542,f5640,f5932,f6289,f4727,f4254,f2243,f241,f238,f234,f193,f692,f3568,f3563,f3504,f3570,f3564,f5997,f5605,f6355,f3565,f3562,f3567,f3566,f6796,f3545,f4280,f4747,f3538,f3530,f3484,f3532,f3531,f6759,f6758,f5367,f3485,f7226,f7225,f7219,f7217,f7216,f7206,f7201,f5370,f5369,f3529,f3482,f226,f224,f223,f222,f221,f195,f734,f3533,f7194,f3624,f3623,f3622,f5083,f5261,f3621,f5053,f5231,f7212,f7200,f7198,f7193,f7192,f7191,f7190,f5344,f4991,f4974,f4867,f4851,f4551,f4535,f4454,f4438,f4109,f4091,f3675,f3653,f3537,f2128,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11603,f11604,f11570,f11571,f11572,f11573,f11575,f11577,f11579,f11582,f11588,f11593,f11597,f11598,f11599,f12952,f13160,f13164,f13170,f13259,f13269,f13274,f13276,f13277,f13278,f13279,f13280,f13283,f13286,f13287,f13205,f13215,f13221,f13224,f13226,f13227,f13228,f13229,f13230,f13232,f13234,f13235,f13237,f13468,f13474,f13484,f13490,f13493,f13495,f13496,f13497,f13498,f13499,f13501,f13503,f13504,f13509,f13576,f13586,f13591,f13593,f13594,f13595,f13596,f13597,f13600,f13603,f13604,f13541,f13633,f13637,f14059,f13949,f13950,f14060,f13981,f14079,f14190,f14391,f14278,f14279,f14392,f14312,f14413,f14631,f14516,f14517,f14632,f14552,f14653,f14825,f14826,f14833,f14834,f14957,f14941,f14946,f14951,f14953,f14954,f6172,f15489,f15492,f15495,f15498,f15376,f15377,f15379,f15380,f15383,f15384,f15386,f15387,f15388,f15389,f15390,f15391,f15392,f15393,f15395,f15396,f15399,f15406,f15407,f15411,f15412,f15414,f15487])).
fof(f15536,plain,(
  $false | $spl48),
  inference(global_subsumption,[],[f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f428,f429,f268,f194,f235,f231,f230,f229,f228,f200,f256,f255,f247,f246,f245,f244,f199,f198,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f433,f406,f250,f249,f207,f191,f184,f183,f179,f691,f733,f854,f966,f968,f969,f970,f971,f972,f973,f975,f976,f978,f979,f980,f1024,f1143,f1153,f1165,f2809,f2823,f2826,f2830,f3082,f3089,f3374,f3421,f5542,f5640,f5932,f6289,f4727,f4254,f2243,f241,f238,f234,f193,f692,f3568,f3563,f3504,f3570,f3564,f5997,f5605,f6355,f3565,f3562,f3567,f3566,f6796,f3545,f4280,f4747,f3538,f3530,f3484,f3532,f3531,f6759,f6758,f5367,f3485,f7226,f7225,f7219,f7217,f7216,f7206,f7201,f5370,f5369,f3529,f3482,f226,f224,f223,f222,f221,f195,f734,f3533,f7194,f3624,f3623,f3622,f5083,f5261,f3621,f5053,f5231,f7212,f7200,f7198,f7193,f7192,f7191,f7190,f5344,f4991,f4974,f4867,f4851,f4551,f4535,f4454,f4438,f4109,f4091,f3675,f3653,f3537,f2128,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11603,f11604,f11570,f11571,f11572,f11573,f11575,f11577,f11579,f11582,f11588,f11593,f11597,f11598,f11599,f12952,f13160,f13164,f13170,f13259,f13269,f13274,f13276,f13277,f13278,f13279,f13280,f13283,f13286,f13287,f13205,f13215,f13221,f13224,f13226,f13227,f13228,f13229,f13230,f13232,f13234,f13235,f13237,f13468,f13474,f13484,f13490,f13493,f13495,f13496,f13497,f13498,f13499,f13501,f13503,f13504,f13509,f13576,f13586,f13591,f13593,f13594,f13595,f13596,f13597,f13600,f13603,f13604,f13541,f13633,f13637,f14059,f13949,f13950,f14060,f13981,f14079,f14190,f14391,f14278,f14279,f14392,f14312,f14413,f14631,f14516,f14517,f14632,f14552,f14653,f14825,f14826,f14833,f14834,f14957,f14941,f14946,f14951,f14953,f14954,f6172,f15489,f15492,f15495,f15498,f15376,f15377,f15379,f15380,f15383,f15384,f15386,f15387,f15388,f15389,f15390,f15391,f15392,f15393,f15395,f15396,f15399,f15406,f15407,f15411,f15412,f15414])).
fof(f15535,plain,(
  $false | $spl48),
  inference(global_subsumption,[],[f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f428,f429,f268,f194,f235,f231,f230,f229,f228,f200,f256,f255,f247,f246,f245,f244,f199,f198,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f433,f406,f250,f249,f207,f191,f184,f183,f179,f691,f733,f854,f966,f968,f969,f970,f971,f972,f973,f975,f976,f978,f979,f980,f1024,f1143,f1153,f1165,f2809,f2823,f2826,f2830,f3082,f3089,f3374,f3421,f5542,f5640,f5932,f6289,f4727,f4254,f2243,f241,f238,f234,f193,f692,f3568,f3563,f3504,f3570,f3564,f5997,f5605,f6355,f3565,f3562,f3567,f3566,f6796,f3545,f4280,f4747,f3538,f3530,f3484,f3532,f3531,f6759,f6758,f5367,f3485,f7226,f7225,f7219,f7217,f7216,f7206,f7201,f5370,f5369,f3529,f3482,f226,f224,f223,f222,f221,f195,f734,f3533,f7194,f3624,f3623,f3622,f5083,f5261,f3621,f5053,f5231,f7212,f7200,f7198,f7193,f7192,f7191,f7190,f5344,f4991,f4974,f4867,f4851,f4551,f4535,f4454,f4438,f4109,f4091,f3675,f3653,f3537,f2128,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11603,f11604,f11570,f11571,f11572,f11573,f11575,f11577,f11579,f11582,f11588,f11593,f11597,f11598,f11599,f12952,f13160,f13164,f13170,f13259,f13269,f13274,f13276,f13277,f13278,f13279,f13280,f13283,f13286,f13287,f13205,f13215,f13221,f13224,f13226,f13227,f13228,f13229,f13230,f13232,f13234,f13235,f13237,f13468,f13474,f13484,f13490,f13493,f13495,f13496,f13497,f13498,f13499,f13501,f13503,f13504,f13509,f13576,f13586,f13591,f13593,f13594,f13595,f13596,f13597,f13600,f13603,f13604,f13541,f13633,f13637,f14059,f13949,f13950,f14060,f13981,f14079,f14190,f14391,f14278,f14279,f14392,f14312,f14413,f14631,f14516,f14517,f14632,f14552,f14653,f14825,f14826,f14833,f14834,f14957,f14941,f14946,f14951,f14953,f14954,f6172,f15489,f15492,f15495,f15498,f15376,f15377,f15379,f15380,f15383,f15384,f15386,f15387,f15388,f15389,f15390,f15391,f15392,f15393,f15395,f15396,f15399,f15406,f15407,f15411,f15412])).
fof(f15534,plain,(
  $false | $spl48),
  inference(global_subsumption,[],[f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f428,f429,f268,f194,f235,f231,f230,f229,f228,f200,f256,f255,f247,f246,f245,f244,f199,f198,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f433,f406,f250,f249,f207,f191,f184,f183,f179,f691,f733,f854,f966,f968,f969,f970,f971,f972,f973,f975,f976,f978,f979,f980,f1024,f1143,f1153,f1165,f2809,f2823,f2826,f2830,f3082,f3089,f3374,f3421,f5542,f5640,f5932,f6289,f4727,f4254,f2243,f241,f238,f234,f193,f692,f3568,f3563,f3504,f3570,f3564,f5997,f5605,f6355,f3565,f3562,f3567,f3566,f6796,f3545,f4280,f4747,f3538,f3530,f3484,f3532,f3531,f6759,f6758,f5367,f3485,f7226,f7225,f7219,f7217,f7216,f7206,f7201,f5370,f5369,f3529,f3482,f226,f224,f223,f222,f221,f195,f734,f3533,f7194,f3624,f3623,f3622,f5083,f5261,f3621,f5053,f5231,f7212,f7200,f7198,f7193,f7192,f7191,f7190,f5344,f4991,f4974,f4867,f4851,f4551,f4535,f4454,f4438,f4109,f4091,f3675,f3653,f3537,f2128,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11603,f11604,f11570,f11571,f11572,f11573,f11575,f11577,f11579,f11582,f11588,f11593,f11597,f11598,f11599,f12952,f13160,f13164,f13170,f13259,f13269,f13274,f13276,f13277,f13278,f13279,f13280,f13283,f13286,f13287,f13205,f13215,f13221,f13224,f13226,f13227,f13228,f13229,f13230,f13232,f13234,f13235,f13237,f13468,f13474,f13484,f13490,f13493,f13495,f13496,f13497,f13498,f13499,f13501,f13503,f13504,f13509,f13576,f13586,f13591,f13593,f13594,f13595,f13596,f13597,f13600,f13603,f13604,f13541,f13633,f13637,f14059,f13949,f13950,f14060,f13981,f14079,f14190,f14391,f14278,f14279,f14392,f14312,f14413,f14631,f14516,f14517,f14632,f14552,f14653,f14825,f14826,f14833,f14834,f14957,f14941,f14946,f14951,f14953,f14954,f6172,f15489,f15492,f15495,f15498,f15376,f15377,f15379,f15380,f15383,f15384,f15386,f15387,f15388,f15389,f15390,f15391,f15392,f15393,f15395,f15396,f15399,f15406,f15407,f15411])).
fof(f15530,plain,(
  $false | $spl48),
  inference(global_subsumption,[],[f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f428,f429,f268,f194,f235,f231,f230,f229,f228,f200,f256,f255,f247,f246,f245,f244,f199,f198,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f433,f406,f250,f249,f207,f191,f184,f183,f179,f691,f733,f854,f966,f968,f969,f970,f971,f972,f973,f975,f976,f978,f979,f980,f1024,f1143,f1153,f1165,f2809,f2823,f2826,f2830,f3082,f3089,f3374,f3421,f5542,f5640,f5932,f6289,f4727,f4254,f2243,f241,f238,f234,f193,f692,f3568,f3563,f3504,f3570,f3564,f5997,f5605,f6355,f3565,f3562,f3567,f3566,f6796,f3545,f4280,f4747,f3538,f3530,f3484,f3532,f3531,f6759,f6758,f5367,f3485,f7226,f7225,f7219,f7217,f7216,f7206,f7201,f5370,f5369,f3529,f3482,f226,f224,f223,f222,f221,f195,f734,f3533,f7194,f3624,f3623,f3622,f5083,f5261,f3621,f5053,f5231,f7212,f7200,f7198,f7193,f7192,f7191,f7190,f5344,f4991,f4974,f4867,f4851,f4551,f4535,f4454,f4438,f4109,f4091,f3675,f3653,f3537,f2128,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11603,f11604,f11570,f11571,f11572,f11573,f11575,f11577,f11579,f11582,f11588,f11593,f11597,f11598,f11599,f12952,f13160,f13164,f13170,f13259,f13269,f13274,f13276,f13277,f13278,f13279,f13280,f13283,f13286,f13287,f13205,f13215,f13221,f13224,f13226,f13227,f13228,f13229,f13230,f13232,f13234,f13235,f13237,f13468,f13474,f13484,f13490,f13493,f13495,f13496,f13497,f13498,f13499,f13501,f13503,f13504,f13509,f13576,f13586,f13591,f13593,f13594,f13595,f13596,f13597,f13600,f13603,f13604,f13541,f13633,f13637,f14059,f13949,f13950,f14060,f13981,f14079,f14190,f14391,f14278,f14279,f14392,f14312,f14413,f14631,f14516,f14517,f14632,f14552,f14653,f14825,f14826,f14833,f14834,f14957,f14941,f14946,f14951,f14953,f14954,f6172,f15489,f15492,f15495,f15498,f15376,f15377,f15379,f15380,f15383,f15384,f15386,f15387,f15388,f15389,f15390,f15391,f15392,f15393,f15395,f15396,f15399,f15406,f15407])).
fof(f15529,plain,(
  $false | $spl48),
  inference(global_subsumption,[],[f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f428,f429,f268,f194,f235,f231,f230,f229,f228,f200,f256,f255,f247,f246,f245,f244,f199,f198,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f433,f406,f250,f249,f207,f191,f184,f183,f179,f691,f733,f854,f966,f968,f969,f970,f971,f972,f973,f975,f976,f978,f979,f980,f1024,f1143,f1153,f1165,f2809,f2823,f2826,f2830,f3082,f3089,f3374,f3421,f5542,f5640,f5932,f6289,f4727,f4254,f2243,f241,f238,f234,f193,f692,f3568,f3563,f3504,f3570,f3564,f5997,f5605,f6355,f3565,f3562,f3567,f3566,f6796,f3545,f4280,f4747,f3538,f3530,f3484,f3532,f3531,f6759,f6758,f5367,f3485,f7226,f7225,f7219,f7217,f7216,f7206,f7201,f5370,f5369,f3529,f3482,f226,f224,f223,f222,f221,f195,f734,f3533,f7194,f3624,f3623,f3622,f5083,f5261,f3621,f5053,f5231,f7212,f7200,f7198,f7193,f7192,f7191,f7190,f5344,f4991,f4974,f4867,f4851,f4551,f4535,f4454,f4438,f4109,f4091,f3675,f3653,f3537,f2128,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11603,f11604,f11570,f11571,f11572,f11573,f11575,f11577,f11579,f11582,f11588,f11593,f11597,f11598,f11599,f12952,f13160,f13164,f13170,f13259,f13269,f13274,f13276,f13277,f13278,f13279,f13280,f13283,f13286,f13287,f13205,f13215,f13221,f13224,f13226,f13227,f13228,f13229,f13230,f13232,f13234,f13235,f13237,f13468,f13474,f13484,f13490,f13493,f13495,f13496,f13497,f13498,f13499,f13501,f13503,f13504,f13509,f13576,f13586,f13591,f13593,f13594,f13595,f13596,f13597,f13600,f13603,f13604,f13541,f13633,f13637,f14059,f13949,f13950,f14060,f13981,f14079,f14190,f14391,f14278,f14279,f14392,f14312,f14413,f14631,f14516,f14517,f14632,f14552,f14653,f14825,f14826,f14833,f14834,f14957,f14941,f14946,f14951,f14953,f14954,f6172,f15489,f15492,f15495,f15498,f15376,f15377,f15379,f15380,f15383,f15384,f15386,f15387,f15388,f15389,f15390,f15391,f15392,f15393,f15395,f15396,f15399,f15406])).
fof(f15522,plain,(
  $false | $spl48),
  inference(global_subsumption,[],[f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f428,f429,f268,f194,f235,f231,f230,f229,f228,f200,f256,f255,f247,f246,f245,f244,f199,f198,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f433,f406,f250,f249,f207,f191,f184,f183,f179,f691,f733,f854,f966,f968,f969,f970,f971,f972,f973,f975,f976,f978,f979,f980,f1024,f1143,f1153,f1165,f2809,f2823,f2826,f2830,f3082,f3089,f3374,f3421,f5542,f5640,f5932,f6289,f4727,f4254,f2243,f241,f238,f234,f193,f692,f3568,f3563,f3504,f3570,f3564,f5997,f5605,f6355,f3565,f3562,f3567,f3566,f6796,f3545,f4280,f4747,f3538,f3530,f3484,f3532,f3531,f6759,f6758,f5367,f3485,f7226,f7225,f7219,f7217,f7216,f7206,f7201,f5370,f5369,f3529,f3482,f226,f224,f223,f222,f221,f195,f734,f3533,f7194,f3624,f3623,f3622,f5083,f5261,f3621,f5053,f5231,f7212,f7200,f7198,f7193,f7192,f7191,f7190,f5344,f4991,f4974,f4867,f4851,f4551,f4535,f4454,f4438,f4109,f4091,f3675,f3653,f3537,f2128,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11603,f11604,f11570,f11571,f11572,f11573,f11575,f11577,f11579,f11582,f11588,f11593,f11597,f11598,f11599,f12952,f13160,f13164,f13170,f13259,f13269,f13274,f13276,f13277,f13278,f13279,f13280,f13283,f13286,f13287,f13205,f13215,f13221,f13224,f13226,f13227,f13228,f13229,f13230,f13232,f13234,f13235,f13237,f13468,f13474,f13484,f13490,f13493,f13495,f13496,f13497,f13498,f13499,f13501,f13503,f13504,f13509,f13576,f13586,f13591,f13593,f13594,f13595,f13596,f13597,f13600,f13603,f13604,f13541,f13633,f13637,f14059,f13949,f13950,f14060,f13981,f14079,f14190,f14391,f14278,f14279,f14392,f14312,f14413,f14631,f14516,f14517,f14632,f14552,f14653,f14825,f14826,f14833,f14834,f14957,f14941,f14946,f14951,f14953,f14954,f6172,f15489,f15492,f15495,f15498,f15376,f15377,f15379,f15380,f15383,f15384,f15386,f15387,f15388,f15389,f15390,f15391,f15392,f15393,f15395,f15396,f15399])).
fof(f15519,plain,(
  $false | $spl48),
  inference(global_subsumption,[],[f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f428,f429,f268,f194,f235,f231,f230,f229,f228,f200,f256,f255,f247,f246,f245,f244,f199,f198,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f433,f406,f250,f249,f207,f191,f184,f183,f179,f691,f733,f854,f966,f968,f969,f970,f971,f972,f973,f975,f976,f978,f979,f980,f1024,f1143,f1153,f1165,f2809,f2823,f2826,f2830,f3082,f3089,f3374,f3421,f5542,f5640,f5932,f6289,f4727,f4254,f2243,f241,f238,f234,f193,f692,f3568,f3563,f3504,f3570,f3564,f5997,f5605,f6355,f3565,f3562,f3567,f3566,f6796,f3545,f4280,f4747,f3538,f3530,f3484,f3532,f3531,f6759,f6758,f5367,f3485,f7226,f7225,f7219,f7217,f7216,f7206,f7201,f5370,f5369,f3529,f3482,f226,f224,f223,f222,f221,f195,f734,f3533,f7194,f3624,f3623,f3622,f5083,f5261,f3621,f5053,f5231,f7212,f7200,f7198,f7193,f7192,f7191,f7190,f5344,f4991,f4974,f4867,f4851,f4551,f4535,f4454,f4438,f4109,f4091,f3675,f3653,f3537,f2128,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11603,f11604,f11570,f11571,f11572,f11573,f11575,f11577,f11579,f11582,f11588,f11593,f11597,f11598,f11599,f12952,f13160,f13164,f13170,f13259,f13269,f13274,f13276,f13277,f13278,f13279,f13280,f13283,f13286,f13287,f13205,f13215,f13221,f13224,f13226,f13227,f13228,f13229,f13230,f13232,f13234,f13235,f13237,f13468,f13474,f13484,f13490,f13493,f13495,f13496,f13497,f13498,f13499,f13501,f13503,f13504,f13509,f13576,f13586,f13591,f13593,f13594,f13595,f13596,f13597,f13600,f13603,f13604,f13541,f13633,f13637,f14059,f13949,f13950,f14060,f13981,f14079,f14190,f14391,f14278,f14279,f14392,f14312,f14413,f14631,f14516,f14517,f14632,f14552,f14653,f14825,f14826,f14833,f14834,f14957,f14941,f14946,f14951,f14953,f14954,f6172,f15489,f15492,f15495,f15498,f15376,f15377,f15379,f15380,f15383,f15384,f15386,f15387,f15388,f15389,f15390,f15391,f15392,f15393,f15395,f15396])).
fof(f15518,plain,(
  $false | $spl48),
  inference(global_subsumption,[],[f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f428,f429,f268,f194,f235,f231,f230,f229,f228,f200,f256,f255,f247,f246,f245,f244,f199,f198,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f433,f406,f250,f249,f207,f191,f184,f183,f179,f691,f733,f854,f966,f968,f969,f970,f971,f972,f973,f975,f976,f978,f979,f980,f1024,f1143,f1153,f1165,f2809,f2823,f2826,f2830,f3082,f3089,f3374,f3421,f5542,f5640,f5932,f6289,f4727,f4254,f2243,f241,f238,f234,f193,f692,f3568,f3563,f3504,f3570,f3564,f5997,f5605,f6355,f3565,f3562,f3567,f3566,f6796,f3545,f4280,f4747,f3538,f3530,f3484,f3532,f3531,f6759,f6758,f5367,f3485,f7226,f7225,f7219,f7217,f7216,f7206,f7201,f5370,f5369,f3529,f3482,f226,f224,f223,f222,f221,f195,f734,f3533,f7194,f3624,f3623,f3622,f5083,f5261,f3621,f5053,f5231,f7212,f7200,f7198,f7193,f7192,f7191,f7190,f5344,f4991,f4974,f4867,f4851,f4551,f4535,f4454,f4438,f4109,f4091,f3675,f3653,f3537,f2128,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11603,f11604,f11570,f11571,f11572,f11573,f11575,f11577,f11579,f11582,f11588,f11593,f11597,f11598,f11599,f12952,f13160,f13164,f13170,f13259,f13269,f13274,f13276,f13277,f13278,f13279,f13280,f13283,f13286,f13287,f13205,f13215,f13221,f13224,f13226,f13227,f13228,f13229,f13230,f13232,f13234,f13235,f13237,f13468,f13474,f13484,f13490,f13493,f13495,f13496,f13497,f13498,f13499,f13501,f13503,f13504,f13509,f13576,f13586,f13591,f13593,f13594,f13595,f13596,f13597,f13600,f13603,f13604,f13541,f13633,f13637,f14059,f13949,f13950,f14060,f13981,f14079,f14190,f14391,f14278,f14279,f14392,f14312,f14413,f14631,f14516,f14517,f14632,f14552,f14653,f14825,f14826,f14833,f14834,f14957,f14941,f14946,f14951,f14953,f14954,f6172,f15489,f15492,f15495,f15498,f15376,f15377,f15379,f15380,f15383,f15384,f15386,f15387,f15388,f15389,f15390,f15391,f15392,f15393,f15395])).
fof(f15517,plain,(
  $false | ($spl34 | $spl48)),
  inference(global_subsumption,[],[f15394,f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f428,f429,f268,f194,f235,f231,f230,f229,f228,f200,f256,f255,f247,f246,f245,f244,f199,f198,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f433,f406,f250,f249,f207,f191,f184,f183,f179,f691,f733,f854,f966,f968,f969,f970,f971,f972,f973,f975,f976,f978,f979,f980,f1024,f1143,f1153,f1165,f2809,f2823,f2826,f2830,f3082,f3089,f3374,f3421,f5542,f5640,f5932,f6289,f4727,f4254,f2243,f241,f238,f234,f193,f692,f3568,f3563,f3504,f3570,f3564,f5997,f5605,f6355,f3565,f3562,f3567,f3566,f6796,f3545,f4280,f4747,f3538,f3530,f3484,f3532,f3531,f6759,f6758,f5367,f3485,f7226,f7225,f7219,f7217,f7216,f7206,f7201,f5370,f5369,f3529,f3482,f226,f224,f223,f222,f221,f195,f734,f3533,f7194,f3624,f3623,f3622,f5083,f5261,f3621,f5053,f5231,f7212,f7200,f7198,f7193,f7192,f7191,f7190,f5344,f4991,f4974,f4867,f4851,f4551,f4535,f4454,f4438,f4109,f4091,f3675,f3653,f3537,f2128,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11603,f11604,f11570,f11571,f11572,f11573,f11575,f11577,f11579,f11582,f11588,f11593,f11597,f11598,f11599,f12952,f13160,f13164,f13170,f13259,f13269,f13274,f13276,f13277,f13278,f13279,f13280,f13283,f13286,f13287,f13205,f13215,f13221,f13224,f13226,f13227,f13228,f13229,f13230,f13232,f13234,f13235,f13237,f13468,f13474,f13484,f13490,f13493,f13495,f13496,f13497,f13498,f13499,f13501,f13503,f13504,f13509,f13576,f13586,f13591,f13593,f13594,f13595,f13596,f13597,f13600,f13603,f13604,f13541,f13633,f13637,f14059,f13949,f13950,f14060,f13981,f14079,f14190,f14391,f14278,f14279,f14392,f14312,f14413,f14631,f14516,f14517,f14632,f14552,f14653,f14825,f14826,f14833,f14834,f14957,f14941,f14946,f14951,f14953,f14954,f6172,f15489,f15492,f15495,f15498,f15376,f15377,f15379,f15380,f15383,f15384,f15386,f15387,f15388,f15389,f15390,f15391,f15392,f15393])).
fof(f15394,plain,(
  ( ! [X36] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num',sK11('const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X36,'type.num.num'))) ) | ($spl34 | $spl48)),
  inference(backward_demodulation,[],[f6172,f3548])).
fof(f3548,plain,(
  ( ! [X36] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num',sK11('const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X36,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X36),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) ) | $spl34),
  inference(forward_demodulation,[],[f3502,f1965])).
fof(f3502,plain,(
  ( ! [X36] : (~p(s(bool,happ(s(fun('type.num.num',bool),X36),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num',sK11('const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X36,'type.num.num'))) ) | $spl34),
  inference(superposition,[],[f222,f1965])).
fof(f15516,plain,(
  $false | $spl48),
  inference(global_subsumption,[],[f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f428,f429,f268,f194,f235,f231,f230,f229,f228,f200,f256,f255,f247,f246,f245,f244,f199,f198,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f433,f406,f250,f249,f207,f191,f184,f183,f179,f691,f733,f854,f966,f968,f969,f970,f971,f972,f973,f975,f976,f978,f979,f980,f1024,f1143,f1153,f1165,f2809,f2823,f2826,f2830,f3082,f3089,f3374,f3421,f5542,f5640,f5932,f6289,f4727,f4254,f2243,f241,f238,f234,f193,f692,f3568,f3563,f3504,f3570,f3564,f5997,f5605,f6355,f3565,f3562,f3567,f3566,f6796,f3545,f4280,f4747,f3538,f3530,f3484,f3532,f3531,f6759,f6758,f5367,f3485,f7226,f7225,f7219,f7217,f7216,f7206,f7201,f5370,f5369,f3529,f3482,f226,f224,f223,f222,f221,f195,f734,f3533,f7194,f3624,f3623,f3622,f5083,f5261,f3621,f5053,f5231,f7212,f7200,f7198,f7193,f7192,f7191,f7190,f5344,f4991,f4974,f4867,f4851,f4551,f4535,f4454,f4438,f4109,f4091,f3675,f3653,f3537,f2128,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11603,f11604,f11570,f11571,f11572,f11573,f11575,f11577,f11579,f11582,f11588,f11593,f11597,f11598,f11599,f12952,f13160,f13164,f13170,f13259,f13269,f13274,f13276,f13277,f13278,f13279,f13280,f13283,f13286,f13287,f13205,f13215,f13221,f13224,f13226,f13227,f13228,f13229,f13230,f13232,f13234,f13235,f13237,f13468,f13474,f13484,f13490,f13493,f13495,f13496,f13497,f13498,f13499,f13501,f13503,f13504,f13509,f13576,f13586,f13591,f13593,f13594,f13595,f13596,f13597,f13600,f13603,f13604,f13541,f13633,f13637,f14059,f13949,f13950,f14060,f13981,f14079,f14190,f14391,f14278,f14279,f14392,f14312,f14413,f14631,f14516,f14517,f14632,f14552,f14653,f14825,f14826,f14833,f14834,f14957,f14941,f14946,f14951,f14953,f14954,f6172,f15489,f15492,f15495,f15498,f15376,f15377,f15379,f15380,f15383,f15384,f15386,f15387,f15388,f15389,f15390,f15391,f15392,f15393])).
fof(f15515,plain,(
  $false | $spl48),
  inference(global_subsumption,[],[f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f428,f429,f268,f194,f235,f231,f230,f229,f228,f200,f256,f255,f247,f246,f245,f244,f199,f198,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f433,f406,f250,f249,f207,f191,f184,f183,f179,f691,f733,f854,f966,f968,f969,f970,f971,f972,f973,f975,f976,f978,f979,f980,f1024,f1143,f1153,f1165,f2809,f2823,f2826,f2830,f3082,f3089,f3374,f3421,f5542,f5640,f5932,f6289,f4727,f4254,f2243,f241,f238,f234,f193,f692,f3568,f3563,f3504,f3570,f3564,f5997,f5605,f6355,f3565,f3562,f3567,f3566,f6796,f3545,f4280,f4747,f3538,f3530,f3484,f3532,f3531,f6759,f6758,f5367,f3485,f7226,f7225,f7219,f7217,f7216,f7206,f7201,f5370,f5369,f3529,f3482,f226,f224,f223,f222,f221,f195,f734,f3533,f7194,f3624,f3623,f3622,f5083,f5261,f3621,f5053,f5231,f7212,f7200,f7198,f7193,f7192,f7191,f7190,f5344,f4991,f4974,f4867,f4851,f4551,f4535,f4454,f4438,f4109,f4091,f3675,f3653,f3537,f2128,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11603,f11604,f11570,f11571,f11572,f11573,f11575,f11577,f11579,f11582,f11588,f11593,f11597,f11598,f11599,f12952,f13160,f13164,f13170,f13259,f13269,f13274,f13276,f13277,f13278,f13279,f13280,f13283,f13286,f13287,f13205,f13215,f13221,f13224,f13226,f13227,f13228,f13229,f13230,f13232,f13234,f13235,f13237,f13468,f13474,f13484,f13490,f13493,f13495,f13496,f13497,f13498,f13499,f13501,f13503,f13504,f13509,f13576,f13586,f13591,f13593,f13594,f13595,f13596,f13597,f13600,f13603,f13604,f13541,f13633,f13637,f14059,f13949,f13950,f14060,f13981,f14079,f14190,f14391,f14278,f14279,f14392,f14312,f14413,f14631,f14516,f14517,f14632,f14552,f14653,f14825,f14826,f14833,f14834,f14957,f14941,f14946,f14951,f14953,f14954,f6172,f15489,f15492,f15495,f15498,f15376,f15377,f15379,f15380,f15383,f15384,f15386,f15387,f15388,f15389,f15390,f15391,f15392])).
fof(f15514,plain,(
  $false | $spl48),
  inference(global_subsumption,[],[f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f428,f429,f268,f194,f235,f231,f230,f229,f228,f200,f256,f255,f247,f246,f245,f244,f199,f198,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f433,f406,f250,f249,f207,f191,f184,f183,f179,f691,f733,f854,f966,f968,f969,f970,f971,f972,f973,f975,f976,f978,f979,f980,f1024,f1143,f1153,f1165,f2809,f2823,f2826,f2830,f3082,f3089,f3374,f3421,f5542,f5640,f5932,f6289,f4727,f4254,f2243,f241,f238,f234,f193,f692,f3568,f3563,f3504,f3570,f3564,f5997,f5605,f6355,f3565,f3562,f3567,f3566,f6796,f3545,f4280,f4747,f3538,f3530,f3484,f3532,f3531,f6759,f6758,f5367,f3485,f7226,f7225,f7219,f7217,f7216,f7206,f7201,f5370,f5369,f3529,f3482,f226,f224,f223,f222,f221,f195,f734,f3533,f7194,f3624,f3623,f3622,f5083,f5261,f3621,f5053,f5231,f7212,f7200,f7198,f7193,f7192,f7191,f7190,f5344,f4991,f4974,f4867,f4851,f4551,f4535,f4454,f4438,f4109,f4091,f3675,f3653,f3537,f2128,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11603,f11604,f11570,f11571,f11572,f11573,f11575,f11577,f11579,f11582,f11588,f11593,f11597,f11598,f11599,f12952,f13160,f13164,f13170,f13259,f13269,f13274,f13276,f13277,f13278,f13279,f13280,f13283,f13286,f13287,f13205,f13215,f13221,f13224,f13226,f13227,f13228,f13229,f13230,f13232,f13234,f13235,f13237,f13468,f13474,f13484,f13490,f13493,f13495,f13496,f13497,f13498,f13499,f13501,f13503,f13504,f13509,f13576,f13586,f13591,f13593,f13594,f13595,f13596,f13597,f13600,f13603,f13604,f13541,f13633,f13637,f14059,f13949,f13950,f14060,f13981,f14079,f14190,f14391,f14278,f14279,f14392,f14312,f14413,f14631,f14516,f14517,f14632,f14552,f14653,f14825,f14826,f14833,f14834,f14957,f14941,f14946,f14951,f14953,f14954,f6172,f15489,f15492,f15495,f15498,f15376,f15377,f15379,f15380,f15383,f15384,f15386,f15387,f15388,f15389,f15390,f15391])).
fof(f15513,plain,(
  $false | $spl48),
  inference(global_subsumption,[],[f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f428,f429,f268,f194,f235,f231,f230,f229,f228,f200,f256,f255,f247,f246,f245,f244,f199,f198,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f433,f406,f250,f249,f207,f191,f184,f183,f179,f691,f733,f854,f966,f968,f969,f970,f971,f972,f973,f975,f976,f978,f979,f980,f1024,f1143,f1153,f1165,f2809,f2823,f2826,f2830,f3082,f3089,f3374,f3421,f5542,f5640,f5932,f6289,f4727,f4254,f2243,f241,f238,f234,f193,f692,f3568,f3563,f3504,f3570,f3564,f5997,f5605,f6355,f3565,f3562,f3567,f3566,f6796,f3545,f4280,f4747,f3538,f3530,f3484,f3532,f3531,f6759,f6758,f5367,f3485,f7226,f7225,f7219,f7217,f7216,f7206,f7201,f5370,f5369,f3529,f3482,f226,f224,f223,f222,f221,f195,f734,f3533,f7194,f3624,f3623,f3622,f5083,f5261,f3621,f5053,f5231,f7212,f7200,f7198,f7193,f7192,f7191,f7190,f5344,f4991,f4974,f4867,f4851,f4551,f4535,f4454,f4438,f4109,f4091,f3675,f3653,f3537,f2128,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11603,f11604,f11570,f11571,f11572,f11573,f11575,f11577,f11579,f11582,f11588,f11593,f11597,f11598,f11599,f12952,f13160,f13164,f13170,f13259,f13269,f13274,f13276,f13277,f13278,f13279,f13280,f13283,f13286,f13287,f13205,f13215,f13221,f13224,f13226,f13227,f13228,f13229,f13230,f13232,f13234,f13235,f13237,f13468,f13474,f13484,f13490,f13493,f13495,f13496,f13497,f13498,f13499,f13501,f13503,f13504,f13509,f13576,f13586,f13591,f13593,f13594,f13595,f13596,f13597,f13600,f13603,f13604,f13541,f13633,f13637,f14059,f13949,f13950,f14060,f13981,f14079,f14190,f14391,f14278,f14279,f14392,f14312,f14413,f14631,f14516,f14517,f14632,f14552,f14653,f14825,f14826,f14833,f14834,f14957,f14941,f14946,f14951,f14953,f14954,f6172,f15489,f15492,f15495,f15498,f15376,f15377,f15379,f15380,f15383,f15384,f15386,f15387,f15388,f15389,f15390])).
fof(f15512,plain,(
  $false | $spl48),
  inference(global_subsumption,[],[f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f428,f429,f268,f194,f235,f231,f230,f229,f228,f200,f256,f255,f247,f246,f245,f244,f199,f198,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f433,f406,f250,f249,f207,f191,f184,f183,f179,f691,f733,f854,f966,f968,f969,f970,f971,f972,f973,f975,f976,f978,f979,f980,f1024,f1143,f1153,f1165,f2809,f2823,f2826,f2830,f3082,f3089,f3374,f3421,f5542,f5640,f5932,f6289,f4727,f4254,f2243,f241,f238,f234,f193,f692,f3568,f3563,f3504,f3570,f3564,f5997,f5605,f6355,f3565,f3562,f3567,f3566,f6796,f3545,f4280,f4747,f3538,f3530,f3484,f3532,f3531,f6759,f6758,f5367,f3485,f7226,f7225,f7219,f7217,f7216,f7206,f7201,f5370,f5369,f3529,f3482,f226,f224,f223,f222,f221,f195,f734,f3533,f7194,f3624,f3623,f3622,f5083,f5261,f3621,f5053,f5231,f7212,f7200,f7198,f7193,f7192,f7191,f7190,f5344,f4991,f4974,f4867,f4851,f4551,f4535,f4454,f4438,f4109,f4091,f3675,f3653,f3537,f2128,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11603,f11604,f11570,f11571,f11572,f11573,f11575,f11577,f11579,f11582,f11588,f11593,f11597,f11598,f11599,f12952,f13160,f13164,f13170,f13259,f13269,f13274,f13276,f13277,f13278,f13279,f13280,f13283,f13286,f13287,f13205,f13215,f13221,f13224,f13226,f13227,f13228,f13229,f13230,f13232,f13234,f13235,f13237,f13468,f13474,f13484,f13490,f13493,f13495,f13496,f13497,f13498,f13499,f13501,f13503,f13504,f13509,f13576,f13586,f13591,f13593,f13594,f13595,f13596,f13597,f13600,f13603,f13604,f13541,f13633,f13637,f14059,f13949,f13950,f14060,f13981,f14079,f14190,f14391,f14278,f14279,f14392,f14312,f14413,f14631,f14516,f14517,f14632,f14552,f14653,f14825,f14826,f14833,f14834,f14957,f14941,f14946,f14951,f14953,f14954,f6172,f15489,f15492,f15495,f15498,f15376,f15377,f15379,f15380,f15383,f15384,f15386,f15387,f15388,f15389])).
fof(f15511,plain,(
  $false | $spl48),
  inference(global_subsumption,[],[f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f428,f429,f268,f194,f235,f231,f230,f229,f228,f200,f256,f255,f247,f246,f245,f244,f199,f198,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f433,f406,f250,f249,f207,f191,f184,f183,f179,f691,f733,f854,f966,f968,f969,f970,f971,f972,f973,f975,f976,f978,f979,f980,f1024,f1143,f1153,f1165,f2809,f2823,f2826,f2830,f3082,f3089,f3374,f3421,f5542,f5640,f5932,f6289,f4727,f4254,f2243,f241,f238,f234,f193,f692,f3568,f3563,f3504,f3570,f3564,f5997,f5605,f6355,f3565,f3562,f3567,f3566,f6796,f3545,f4280,f4747,f3538,f3530,f3484,f3532,f3531,f6759,f6758,f5367,f3485,f7226,f7225,f7219,f7217,f7216,f7206,f7201,f5370,f5369,f3529,f3482,f226,f224,f223,f222,f221,f195,f734,f3533,f7194,f3624,f3623,f3622,f5083,f5261,f3621,f5053,f5231,f7212,f7200,f7198,f7193,f7192,f7191,f7190,f5344,f4991,f4974,f4867,f4851,f4551,f4535,f4454,f4438,f4109,f4091,f3675,f3653,f3537,f2128,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11603,f11604,f11570,f11571,f11572,f11573,f11575,f11577,f11579,f11582,f11588,f11593,f11597,f11598,f11599,f12952,f13160,f13164,f13170,f13259,f13269,f13274,f13276,f13277,f13278,f13279,f13280,f13283,f13286,f13287,f13205,f13215,f13221,f13224,f13226,f13227,f13228,f13229,f13230,f13232,f13234,f13235,f13237,f13468,f13474,f13484,f13490,f13493,f13495,f13496,f13497,f13498,f13499,f13501,f13503,f13504,f13509,f13576,f13586,f13591,f13593,f13594,f13595,f13596,f13597,f13600,f13603,f13604,f13541,f13633,f13637,f14059,f13949,f13950,f14060,f13981,f14079,f14190,f14391,f14278,f14279,f14392,f14312,f14413,f14631,f14516,f14517,f14632,f14552,f14653,f14825,f14826,f14833,f14834,f14957,f14941,f14946,f14951,f14953,f14954,f6172,f15489,f15492,f15495,f15498,f15376,f15377,f15379,f15380,f15383,f15384,f15386,f15387,f15388])).
fof(f15510,plain,(
  $false | $spl48),
  inference(global_subsumption,[],[f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f428,f429,f268,f194,f235,f231,f230,f229,f228,f200,f256,f255,f247,f246,f245,f244,f199,f198,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f433,f406,f250,f249,f207,f191,f184,f183,f179,f691,f733,f854,f966,f968,f969,f970,f971,f972,f973,f975,f976,f978,f979,f980,f1024,f1143,f1153,f1165,f2809,f2823,f2826,f2830,f3082,f3089,f3374,f3421,f5542,f5640,f5932,f6289,f4727,f4254,f2243,f241,f238,f234,f193,f692,f3568,f3563,f3504,f3570,f3564,f5997,f5605,f6355,f3565,f3562,f3567,f3566,f6796,f3545,f4280,f4747,f3538,f3530,f3484,f3532,f3531,f6759,f6758,f5367,f3485,f7226,f7225,f7219,f7217,f7216,f7206,f7201,f5370,f5369,f3529,f3482,f226,f224,f223,f222,f221,f195,f734,f3533,f7194,f3624,f3623,f3622,f5083,f5261,f3621,f5053,f5231,f7212,f7200,f7198,f7193,f7192,f7191,f7190,f5344,f4991,f4974,f4867,f4851,f4551,f4535,f4454,f4438,f4109,f4091,f3675,f3653,f3537,f2128,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11603,f11604,f11570,f11571,f11572,f11573,f11575,f11577,f11579,f11582,f11588,f11593,f11597,f11598,f11599,f12952,f13160,f13164,f13170,f13259,f13269,f13274,f13276,f13277,f13278,f13279,f13280,f13283,f13286,f13287,f13205,f13215,f13221,f13224,f13226,f13227,f13228,f13229,f13230,f13232,f13234,f13235,f13237,f13468,f13474,f13484,f13490,f13493,f13495,f13496,f13497,f13498,f13499,f13501,f13503,f13504,f13509,f13576,f13586,f13591,f13593,f13594,f13595,f13596,f13597,f13600,f13603,f13604,f13541,f13633,f13637,f14059,f13949,f13950,f14060,f13981,f14079,f14190,f14391,f14278,f14279,f14392,f14312,f14413,f14631,f14516,f14517,f14632,f14552,f14653,f14825,f14826,f14833,f14834,f14957,f14941,f14946,f14951,f14953,f14954,f6172,f15489,f15492,f15495,f15498,f15376,f15377,f15379,f15380,f15383,f15384,f15386,f15387])).
fof(f15509,plain,(
  $false | $spl48),
  inference(global_subsumption,[],[f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f428,f429,f268,f194,f235,f231,f230,f229,f228,f200,f256,f255,f247,f246,f245,f244,f199,f198,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f433,f406,f250,f249,f207,f191,f184,f183,f179,f691,f733,f854,f966,f968,f969,f970,f971,f972,f973,f975,f976,f978,f979,f980,f1024,f1143,f1153,f1165,f2809,f2823,f2826,f2830,f3082,f3089,f3374,f3421,f5542,f5640,f5932,f6289,f4727,f4254,f2243,f241,f238,f234,f193,f692,f3568,f3563,f3504,f3570,f3564,f5997,f5605,f6355,f3565,f3562,f3567,f3566,f6796,f3545,f4280,f4747,f3538,f3530,f3484,f3532,f3531,f6759,f6758,f5367,f3485,f7226,f7225,f7219,f7217,f7216,f7206,f7201,f5370,f5369,f3529,f3482,f226,f224,f223,f222,f221,f195,f734,f3533,f7194,f3624,f3623,f3622,f5083,f5261,f3621,f5053,f5231,f7212,f7200,f7198,f7193,f7192,f7191,f7190,f5344,f4991,f4974,f4867,f4851,f4551,f4535,f4454,f4438,f4109,f4091,f3675,f3653,f3537,f2128,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11603,f11604,f11570,f11571,f11572,f11573,f11575,f11577,f11579,f11582,f11588,f11593,f11597,f11598,f11599,f12952,f13160,f13164,f13170,f13259,f13269,f13274,f13276,f13277,f13278,f13279,f13280,f13283,f13286,f13287,f13205,f13215,f13221,f13224,f13226,f13227,f13228,f13229,f13230,f13232,f13234,f13235,f13237,f13468,f13474,f13484,f13490,f13493,f13495,f13496,f13497,f13498,f13499,f13501,f13503,f13504,f13509,f13576,f13586,f13591,f13593,f13594,f13595,f13596,f13597,f13600,f13603,f13604,f13541,f13633,f13637,f14059,f13949,f13950,f14060,f13981,f14079,f14190,f14391,f14278,f14279,f14392,f14312,f14413,f14631,f14516,f14517,f14632,f14552,f14653,f14825,f14826,f14833,f14834,f14957,f14941,f14946,f14951,f14953,f14954,f6172,f15489,f15492,f15495,f15498,f15376,f15377,f15379,f15380,f15383,f15384,f15386])).
fof(f15508,plain,(
  $false | ($spl34 | $spl48)),
  inference(global_subsumption,[],[f15385,f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f428,f429,f268,f194,f235,f231,f230,f229,f228,f200,f256,f255,f247,f246,f245,f244,f199,f198,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f433,f406,f250,f249,f207,f191,f184,f183,f179,f691,f733,f854,f966,f968,f969,f970,f971,f972,f973,f975,f976,f978,f979,f980,f1024,f1143,f1153,f1165,f2809,f2823,f2826,f2830,f3082,f3089,f3374,f3421,f5542,f5640,f5932,f6289,f4727,f4254,f2243,f241,f238,f234,f193,f692,f3568,f3563,f3504,f3570,f3564,f5997,f5605,f6355,f3565,f3562,f3567,f3566,f6796,f3545,f4280,f4747,f3538,f3530,f3484,f3532,f3531,f6759,f6758,f5367,f3485,f7226,f7225,f7219,f7217,f7216,f7206,f7201,f5370,f5369,f3529,f3482,f226,f224,f223,f222,f221,f195,f734,f3533,f7194,f3624,f3623,f3622,f5083,f5261,f3621,f5053,f5231,f7212,f7200,f7198,f7193,f7192,f7191,f7190,f5344,f4991,f4974,f4867,f4851,f4551,f4535,f4454,f4438,f4109,f4091,f3675,f3653,f3537,f2128,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11603,f11604,f11570,f11571,f11572,f11573,f11575,f11577,f11579,f11582,f11588,f11593,f11597,f11598,f11599,f12952,f13160,f13164,f13170,f13259,f13269,f13274,f13276,f13277,f13278,f13279,f13280,f13283,f13286,f13287,f13205,f13215,f13221,f13224,f13226,f13227,f13228,f13229,f13230,f13232,f13234,f13235,f13237,f13468,f13474,f13484,f13490,f13493,f13495,f13496,f13497,f13498,f13499,f13501,f13503,f13504,f13509,f13576,f13586,f13591,f13593,f13594,f13595,f13596,f13597,f13600,f13603,f13604,f13541,f13633,f13637,f14059,f13949,f13950,f14060,f13981,f14079,f14190,f14391,f14278,f14279,f14392,f14312,f14413,f14631,f14516,f14517,f14632,f14552,f14653,f14825,f14826,f14833,f14834,f14957,f14941,f14946,f14951,f14953,f14954,f6172,f15489,f15492,f15495,f15498,f15376,f15377,f15379,f15380,f15383,f15384])).
fof(f15385,plain,(
  ( ! [X261,X259,X260] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X259),s('type.num.num',X260))))) = s('type.num.num',sK11('const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X259))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X260)))),X261,'type.num.num'))) ) | ($spl34 | $spl48)),
  inference(backward_demodulation,[],[f6172,f12218])).
fof(f12218,plain,(
  ( ! [X261,X259,X260] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X259),s('type.num.num',X260))))) = s('type.num.num',sK11('const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X259))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X260)))),X261,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X261),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X259),s('type.num.num',X260))))))))) ) | $spl34),
  inference(forward_demodulation,[],[f12217,f12139])).
fof(f12139,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))) ) | $spl34),
  inference(backward_demodulation,[],[f12138,f247])).
fof(f12217,plain,(
  ( ! [X261,X259,X260] : (~p(s(bool,happ(s(fun('type.num.num',bool),X261),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X259),s('type.num.num',X260)))))))) | s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X259))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X260))))) = s('type.num.num',sK11('const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X259))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X260)))),X261,'type.num.num'))) ) | $spl34),
  inference(forward_demodulation,[],[f12134,f12138])).
fof(f12134,plain,(
  ( ! [X261,X259,X260] : (~p(s(bool,happ(s(fun('type.num.num',bool),X261),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X259),s('type.num.num',X260)))))))))) | s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X259))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X260))))) = s('type.num.num',sK11('const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X259))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X260)))),X261,'type.num.num'))) )),
  inference(superposition,[],[f222,f247])).
fof(f15507,plain,(
  $false | $spl48),
  inference(global_subsumption,[],[f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f428,f429,f268,f194,f235,f231,f230,f229,f228,f200,f256,f255,f247,f246,f245,f244,f199,f198,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f433,f406,f250,f249,f207,f191,f184,f183,f179,f691,f733,f854,f966,f968,f969,f970,f971,f972,f973,f975,f976,f978,f979,f980,f1024,f1143,f1153,f1165,f2809,f2823,f2826,f2830,f3082,f3089,f3374,f3421,f5542,f5640,f5932,f6289,f4727,f4254,f2243,f241,f238,f234,f193,f692,f3568,f3563,f3504,f3570,f3564,f5997,f5605,f6355,f3565,f3562,f3567,f3566,f6796,f3545,f4280,f4747,f3538,f3530,f3484,f3532,f3531,f6759,f6758,f5367,f3485,f7226,f7225,f7219,f7217,f7216,f7206,f7201,f5370,f5369,f3529,f3482,f226,f224,f223,f222,f221,f195,f734,f3533,f7194,f3624,f3623,f3622,f5083,f5261,f3621,f5053,f5231,f7212,f7200,f7198,f7193,f7192,f7191,f7190,f5344,f4991,f4974,f4867,f4851,f4551,f4535,f4454,f4438,f4109,f4091,f3675,f3653,f3537,f2128,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11603,f11604,f11570,f11571,f11572,f11573,f11575,f11577,f11579,f11582,f11588,f11593,f11597,f11598,f11599,f12952,f13160,f13164,f13170,f13259,f13269,f13274,f13276,f13277,f13278,f13279,f13280,f13283,f13286,f13287,f13205,f13215,f13221,f13224,f13226,f13227,f13228,f13229,f13230,f13232,f13234,f13235,f13237,f13468,f13474,f13484,f13490,f13493,f13495,f13496,f13497,f13498,f13499,f13501,f13503,f13504,f13509,f13576,f13586,f13591,f13593,f13594,f13595,f13596,f13597,f13600,f13603,f13604,f13541,f13633,f13637,f14059,f13949,f13950,f14060,f13981,f14079,f14190,f14391,f14278,f14279,f14392,f14312,f14413,f14631,f14516,f14517,f14632,f14552,f14653,f14825,f14826,f14833,f14834,f14957,f14941,f14946,f14951,f14953,f14954,f6172,f15489,f15492,f15495,f15498,f15376,f15377,f15379,f15380,f15383,f15384])).
fof(f15506,plain,(
  $false | $spl48),
  inference(global_subsumption,[],[f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f428,f429,f268,f194,f235,f231,f230,f229,f228,f200,f256,f255,f247,f246,f245,f244,f199,f198,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f433,f406,f250,f249,f207,f191,f184,f183,f179,f691,f733,f854,f966,f968,f969,f970,f971,f972,f973,f975,f976,f978,f979,f980,f1024,f1143,f1153,f1165,f2809,f2823,f2826,f2830,f3082,f3089,f3374,f3421,f5542,f5640,f5932,f6289,f4727,f4254,f2243,f241,f238,f234,f193,f692,f3568,f3563,f3504,f3570,f3564,f5997,f5605,f6355,f3565,f3562,f3567,f3566,f6796,f3545,f4280,f4747,f3538,f3530,f3484,f3532,f3531,f6759,f6758,f5367,f3485,f7226,f7225,f7219,f7217,f7216,f7206,f7201,f5370,f5369,f3529,f3482,f226,f224,f223,f222,f221,f195,f734,f3533,f7194,f3624,f3623,f3622,f5083,f5261,f3621,f5053,f5231,f7212,f7200,f7198,f7193,f7192,f7191,f7190,f5344,f4991,f4974,f4867,f4851,f4551,f4535,f4454,f4438,f4109,f4091,f3675,f3653,f3537,f2128,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11603,f11604,f11570,f11571,f11572,f11573,f11575,f11577,f11579,f11582,f11588,f11593,f11597,f11598,f11599,f12952,f13160,f13164,f13170,f13259,f13269,f13274,f13276,f13277,f13278,f13279,f13280,f13283,f13286,f13287,f13205,f13215,f13221,f13224,f13226,f13227,f13228,f13229,f13230,f13232,f13234,f13235,f13237,f13468,f13474,f13484,f13490,f13493,f13495,f13496,f13497,f13498,f13499,f13501,f13503,f13504,f13509,f13576,f13586,f13591,f13593,f13594,f13595,f13596,f13597,f13600,f13603,f13604,f13541,f13633,f13637,f14059,f13949,f13950,f14060,f13981,f14079,f14190,f14391,f14278,f14279,f14392,f14312,f14413,f14631,f14516,f14517,f14632,f14552,f14653,f14825,f14826,f14833,f14834,f14957,f14941,f14946,f14951,f14953,f14954,f6172,f15489,f15492,f15495,f15498,f15376,f15377,f15379,f15380,f15383])).
fof(f15505,plain,(
  $false | ($spl34 | $spl48)),
  inference(global_subsumption,[],[f15382,f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f428,f429,f268,f194,f235,f231,f230,f229,f228,f200,f256,f255,f247,f246,f245,f244,f199,f198,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f433,f406,f250,f249,f207,f191,f184,f183,f179,f691,f733,f854,f966,f968,f969,f970,f971,f972,f973,f975,f976,f978,f979,f980,f1024,f1143,f1153,f1165,f2809,f2823,f2826,f2830,f3082,f3089,f3374,f3421,f5542,f5640,f5932,f6289,f4727,f4254,f2243,f241,f238,f234,f193,f692,f3568,f3563,f3504,f3570,f3564,f5997,f5605,f6355,f3565,f3562,f3567,f3566,f6796,f3545,f4280,f4747,f3538,f3530,f3484,f3532,f3531,f6759,f6758,f5367,f3485,f7226,f7225,f7219,f7217,f7216,f7206,f7201,f5370,f5369,f3529,f3482,f226,f224,f223,f222,f221,f195,f734,f3533,f7194,f3624,f3623,f3622,f5083,f5261,f3621,f5053,f5231,f7212,f7200,f7198,f7193,f7192,f7191,f7190,f5344,f4991,f4974,f4867,f4851,f4551,f4535,f4454,f4438,f4109,f4091,f3675,f3653,f3537,f2128,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11603,f11604,f11570,f11571,f11572,f11573,f11575,f11577,f11579,f11582,f11588,f11593,f11597,f11598,f11599,f12952,f13160,f13164,f13170,f13259,f13269,f13274,f13276,f13277,f13278,f13279,f13280,f13283,f13286,f13287,f13205,f13215,f13221,f13224,f13226,f13227,f13228,f13229,f13230,f13232,f13234,f13235,f13237,f13468,f13474,f13484,f13490,f13493,f13495,f13496,f13497,f13498,f13499,f13501,f13503,f13504,f13509,f13576,f13586,f13591,f13593,f13594,f13595,f13596,f13597,f13600,f13603,f13604,f13541,f13633,f13637,f14059,f13949,f13950,f14060,f13981,f14079,f14190,f14391,f14278,f14279,f14392,f14312,f14413,f14631,f14516,f14517,f14632,f14552,f14653,f14825,f14826,f14833,f14834,f14957,f14941,f14946,f14951,f14953,f14954,f6172,f15489,f15492,f15495,f15498,f15376,f15377,f15379,f15380])).
fof(f15382,plain,(
  ( ! [X35] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num',sK11('const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X35,'type.num.num'))) ) | ($spl34 | $spl48)),
  inference(backward_demodulation,[],[f6172,f3547])).
fof(f3547,plain,(
  ( ! [X35] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num',sK11('const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X35,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X35),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) ) | $spl34),
  inference(forward_demodulation,[],[f3501,f1212])).
fof(f3501,plain,(
  ( ! [X35] : (~p(s(bool,happ(s(fun('type.num.num',bool),X35),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num',sK11('const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X35,'type.num.num'))) ) | $spl34),
  inference(superposition,[],[f222,f1212])).
fof(f15504,plain,(
  $false | ($spl34 | $spl48)),
  inference(global_subsumption,[],[f15381,f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f428,f429,f268,f194,f235,f231,f230,f229,f228,f200,f256,f255,f247,f246,f245,f244,f199,f198,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f433,f406,f250,f249,f207,f191,f184,f183,f179,f691,f733,f854,f966,f968,f969,f970,f971,f972,f973,f975,f976,f978,f979,f980,f1024,f1143,f1153,f1165,f2809,f2823,f2826,f2830,f3082,f3089,f3374,f3421,f5542,f5640,f5932,f6289,f4727,f4254,f2243,f241,f238,f234,f193,f692,f3568,f3563,f3504,f3570,f3564,f5997,f5605,f6355,f3565,f3562,f3567,f3566,f6796,f3545,f4280,f4747,f3538,f3530,f3484,f3532,f3531,f6759,f6758,f5367,f3485,f7226,f7225,f7219,f7217,f7216,f7206,f7201,f5370,f5369,f3529,f3482,f226,f224,f223,f222,f221,f195,f734,f3533,f7194,f3624,f3623,f3622,f5083,f5261,f3621,f5053,f5231,f7212,f7200,f7198,f7193,f7192,f7191,f7190,f5344,f4991,f4974,f4867,f4851,f4551,f4535,f4454,f4438,f4109,f4091,f3675,f3653,f3537,f2128,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11603,f11604,f11570,f11571,f11572,f11573,f11575,f11577,f11579,f11582,f11588,f11593,f11597,f11598,f11599,f12952,f13160,f13164,f13170,f13259,f13269,f13274,f13276,f13277,f13278,f13279,f13280,f13283,f13286,f13287,f13205,f13215,f13221,f13224,f13226,f13227,f13228,f13229,f13230,f13232,f13234,f13235,f13237,f13468,f13474,f13484,f13490,f13493,f13495,f13496,f13497,f13498,f13499,f13501,f13503,f13504,f13509,f13576,f13586,f13591,f13593,f13594,f13595,f13596,f13597,f13600,f13603,f13604,f13541,f13633,f13637,f14059,f13949,f13950,f14060,f13981,f14079,f14190,f14391,f14278,f14279,f14392,f14312,f14413,f14631,f14516,f14517,f14632,f14552,f14653,f14825,f14826,f14833,f14834,f14957,f14941,f14946,f14951,f14953,f14954,f6172,f15489,f15492,f15495,f15498,f15376,f15377,f15379,f15380])).
fof(f15381,plain,(
  ( ! [X56,X55] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num',sK11('const.arithmetic.EXP_2'(s('type.num.num',X55),s('type.num.num','const.arithmetic.ZERO_0')),X56,'type.num.num'))) ) | ($spl34 | $spl48)),
  inference(backward_demodulation,[],[f6172,f3556])).
fof(f3556,plain,(
  ( ! [X56,X55] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num',sK11('const.arithmetic.EXP_2'(s('type.num.num',X55),s('type.num.num','const.arithmetic.ZERO_0')),X56,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X56),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) ) | $spl34),
  inference(forward_demodulation,[],[f3512,f1213])).
fof(f1213,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl34),
  inference(forward_demodulation,[],[f1192,f177])).
fof(f1192,plain,(
  ( ! [X0] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl34),
  inference(backward_demodulation,[],[f1171,f268])).
fof(f3512,plain,(
  ( ! [X56,X55] : (~p(s(bool,happ(s(fun('type.num.num',bool),X56),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X55),s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num',sK11('const.arithmetic.EXP_2'(s('type.num.num',X55),s('type.num.num','const.arithmetic.ZERO_0')),X56,'type.num.num'))) ) | $spl34),
  inference(superposition,[],[f222,f1213])).
fof(f15503,plain,(
  $false | $spl48),
  inference(global_subsumption,[],[f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f428,f429,f268,f194,f235,f231,f230,f229,f228,f200,f256,f255,f247,f246,f245,f244,f199,f198,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f433,f406,f250,f249,f207,f191,f184,f183,f179,f691,f733,f854,f966,f968,f969,f970,f971,f972,f973,f975,f976,f978,f979,f980,f1024,f1143,f1153,f1165,f2809,f2823,f2826,f2830,f3082,f3089,f3374,f3421,f5542,f5640,f5932,f6289,f4727,f4254,f2243,f241,f238,f234,f193,f692,f3568,f3563,f3504,f3570,f3564,f5997,f5605,f6355,f3565,f3562,f3567,f3566,f6796,f3545,f4280,f4747,f3538,f3530,f3484,f3532,f3531,f6759,f6758,f5367,f3485,f7226,f7225,f7219,f7217,f7216,f7206,f7201,f5370,f5369,f3529,f3482,f226,f224,f223,f222,f221,f195,f734,f3533,f7194,f3624,f3623,f3622,f5083,f5261,f3621,f5053,f5231,f7212,f7200,f7198,f7193,f7192,f7191,f7190,f5344,f4991,f4974,f4867,f4851,f4551,f4535,f4454,f4438,f4109,f4091,f3675,f3653,f3537,f2128,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11603,f11604,f11570,f11571,f11572,f11573,f11575,f11577,f11579,f11582,f11588,f11593,f11597,f11598,f11599,f12952,f13160,f13164,f13170,f13259,f13269,f13274,f13276,f13277,f13278,f13279,f13280,f13283,f13286,f13287,f13205,f13215,f13221,f13224,f13226,f13227,f13228,f13229,f13230,f13232,f13234,f13235,f13237,f13468,f13474,f13484,f13490,f13493,f13495,f13496,f13497,f13498,f13499,f13501,f13503,f13504,f13509,f13576,f13586,f13591,f13593,f13594,f13595,f13596,f13597,f13600,f13603,f13604,f13541,f13633,f13637,f14059,f13949,f13950,f14060,f13981,f14079,f14190,f14391,f14278,f14279,f14392,f14312,f14413,f14631,f14516,f14517,f14632,f14552,f14653,f14825,f14826,f14833,f14834,f14957,f14941,f14946,f14951,f14953,f14954,f6172,f15489,f15492,f15495,f15498,f15376,f15377,f15379,f15380])).
fof(f15502,plain,(
  $false | $spl48),
  inference(global_subsumption,[],[f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f428,f429,f268,f194,f235,f231,f230,f229,f228,f200,f256,f255,f247,f246,f245,f244,f199,f198,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f433,f406,f250,f249,f207,f191,f184,f183,f179,f691,f733,f854,f966,f968,f969,f970,f971,f972,f973,f975,f976,f978,f979,f980,f1024,f1143,f1153,f1165,f2809,f2823,f2826,f2830,f3082,f3089,f3374,f3421,f5542,f5640,f5932,f6289,f4727,f4254,f2243,f241,f238,f234,f193,f692,f3568,f3563,f3504,f3570,f3564,f5997,f5605,f6355,f3565,f3562,f3567,f3566,f6796,f3545,f4280,f4747,f3538,f3530,f3484,f3532,f3531,f6759,f6758,f5367,f3485,f7226,f7225,f7219,f7217,f7216,f7206,f7201,f5370,f5369,f3529,f3482,f226,f224,f223,f222,f221,f195,f734,f3533,f7194,f3624,f3623,f3622,f5083,f5261,f3621,f5053,f5231,f7212,f7200,f7198,f7193,f7192,f7191,f7190,f5344,f4991,f4974,f4867,f4851,f4551,f4535,f4454,f4438,f4109,f4091,f3675,f3653,f3537,f2128,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11603,f11604,f11570,f11571,f11572,f11573,f11575,f11577,f11579,f11582,f11588,f11593,f11597,f11598,f11599,f12952,f13160,f13164,f13170,f13259,f13269,f13274,f13276,f13277,f13278,f13279,f13280,f13283,f13286,f13287,f13205,f13215,f13221,f13224,f13226,f13227,f13228,f13229,f13230,f13232,f13234,f13235,f13237,f13468,f13474,f13484,f13490,f13493,f13495,f13496,f13497,f13498,f13499,f13501,f13503,f13504,f13509,f13576,f13586,f13591,f13593,f13594,f13595,f13596,f13597,f13600,f13603,f13604,f13541,f13633,f13637,f14059,f13949,f13950,f14060,f13981,f14079,f14190,f14391,f14278,f14279,f14392,f14312,f14413,f14631,f14516,f14517,f14632,f14552,f14653,f14825,f14826,f14833,f14834,f14957,f14941,f14946,f14951,f14953,f14954,f6172,f15489,f15492,f15495,f15498,f15376,f15377,f15379])).
fof(f15501,plain,(
  $false | $spl48),
  inference(global_subsumption,[],[f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f428,f429,f268,f194,f235,f231,f230,f229,f228,f200,f256,f255,f247,f246,f245,f244,f199,f198,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f433,f406,f250,f249,f207,f191,f184,f183,f179,f691,f733,f854,f966,f968,f969,f970,f971,f972,f973,f975,f976,f978,f979,f980,f1024,f1143,f1153,f1165,f2809,f2823,f2826,f2830,f3082,f3089,f3374,f3421,f5542,f5640,f5932,f6289,f4727,f4254,f2243,f241,f238,f234,f193,f692,f3568,f3563,f3504,f3570,f3564,f5997,f5605,f6355,f3565,f3562,f3567,f3566,f6796,f3545,f4280,f4747,f3538,f3530,f3484,f3532,f3531,f6759,f6758,f5367,f3485,f7226,f7225,f7219,f7217,f7216,f7206,f7201,f5370,f5369,f3529,f3482,f226,f224,f223,f222,f221,f195,f734,f3533,f7194,f3624,f3623,f3622,f5083,f5261,f3621,f5053,f5231,f7212,f7200,f7198,f7193,f7192,f7191,f7190,f5344,f4991,f4974,f4867,f4851,f4551,f4535,f4454,f4438,f4109,f4091,f3675,f3653,f3537,f2128,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11603,f11604,f11570,f11571,f11572,f11573,f11575,f11577,f11579,f11582,f11588,f11593,f11597,f11598,f11599,f12952,f13160,f13164,f13170,f13259,f13269,f13274,f13276,f13277,f13278,f13279,f13280,f13283,f13286,f13287,f13205,f13215,f13221,f13224,f13226,f13227,f13228,f13229,f13230,f13232,f13234,f13235,f13237,f13468,f13474,f13484,f13490,f13493,f13495,f13496,f13497,f13498,f13499,f13501,f13503,f13504,f13509,f13576,f13586,f13591,f13593,f13594,f13595,f13596,f13597,f13600,f13603,f13604,f13541,f13633,f13637,f14059,f13949,f13950,f14060,f13981,f14079,f14190,f14391,f14278,f14279,f14392,f14312,f14413,f14631,f14516,f14517,f14632,f14552,f14653,f14825,f14826,f14833,f14834,f14957,f14941,f14946,f14951,f14953,f14954,f6172,f15489,f15492,f15495,f15498,f15376,f15377])).
fof(f15500,plain,(
  $false | $spl48),
  inference(global_subsumption,[],[f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f428,f429,f268,f194,f235,f231,f230,f229,f228,f200,f256,f255,f247,f246,f245,f244,f199,f198,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f433,f406,f250,f249,f207,f191,f184,f183,f179,f691,f733,f854,f966,f968,f969,f970,f971,f972,f973,f975,f976,f978,f979,f980,f1024,f1143,f1153,f1165,f2809,f2823,f2826,f2830,f3082,f3089,f3374,f3421,f5542,f5640,f5932,f6289,f4727,f4254,f2243,f241,f238,f234,f193,f692,f3568,f3563,f3504,f3570,f3564,f5997,f5605,f6355,f3565,f3562,f3567,f3566,f6796,f3545,f4280,f4747,f3538,f3530,f3484,f3532,f3531,f6759,f6758,f5367,f3485,f7226,f7225,f7219,f7217,f7216,f7206,f7201,f5370,f5369,f3529,f3482,f226,f224,f223,f222,f221,f195,f734,f3533,f7194,f3624,f3623,f3622,f5083,f5261,f3621,f5053,f5231,f7212,f7200,f7198,f7193,f7192,f7191,f7190,f5344,f4991,f4974,f4867,f4851,f4551,f4535,f4454,f4438,f4109,f4091,f3675,f3653,f3537,f2128,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11603,f11604,f11570,f11571,f11572,f11573,f11575,f11577,f11579,f11582,f11588,f11593,f11597,f11598,f11599,f12952,f13160,f13164,f13170,f13259,f13269,f13274,f13276,f13277,f13278,f13279,f13280,f13283,f13286,f13287,f13205,f13215,f13221,f13224,f13226,f13227,f13228,f13229,f13230,f13232,f13234,f13235,f13237,f13468,f13474,f13484,f13490,f13493,f13495,f13496,f13497,f13498,f13499,f13501,f13503,f13504,f13509,f13576,f13586,f13591,f13593,f13594,f13595,f13596,f13597,f13600,f13603,f13604,f13541,f13633,f13637,f14059,f13949,f13950,f14060,f13981,f14079,f14190,f14391,f14278,f14279,f14392,f14312,f14413,f14631,f14516,f14517,f14632,f14552,f14653,f14825,f14826,f14833,f14834,f14957,f14941,f14946,f14951,f14953,f14954,f6172,f15489,f15492,f15495,f15498,f15376])).
fof(f15499,plain,(
  $false | $spl48),
  inference(global_subsumption,[],[f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f428,f429,f268,f194,f235,f231,f230,f229,f228,f200,f256,f255,f247,f246,f245,f244,f199,f198,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f433,f406,f250,f249,f207,f191,f184,f183,f179,f691,f733,f854,f966,f968,f969,f970,f971,f972,f973,f975,f976,f978,f979,f980,f1024,f1143,f1153,f1165,f2809,f2823,f2826,f2830,f3082,f3089,f3374,f3421,f5542,f5640,f5932,f6289,f4727,f4254,f2243,f241,f238,f234,f193,f692,f3568,f3563,f3504,f3570,f3564,f5997,f5605,f6355,f3565,f3562,f3567,f3566,f6796,f3545,f4280,f4747,f3538,f3530,f3484,f3532,f3531,f6759,f6758,f5367,f3485,f7226,f7225,f7219,f7217,f7216,f7206,f7201,f5370,f5369,f3529,f3482,f226,f224,f223,f222,f221,f195,f734,f3533,f7194,f3624,f3623,f3622,f5083,f5261,f3621,f5053,f5231,f7212,f7200,f7198,f7193,f7192,f7191,f7190,f5344,f4991,f4974,f4867,f4851,f4551,f4535,f4454,f4438,f4109,f4091,f3675,f3653,f3537,f2128,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11603,f11604,f11570,f11571,f11572,f11573,f11575,f11577,f11579,f11582,f11588,f11593,f11597,f11598,f11599,f12952,f13160,f13164,f13170,f13259,f13269,f13274,f13276,f13277,f13278,f13279,f13280,f13283,f13286,f13287,f13205,f13215,f13221,f13224,f13226,f13227,f13228,f13229,f13230,f13232,f13234,f13235,f13237,f13468,f13474,f13484,f13490,f13493,f13495,f13496,f13497,f13498,f13499,f13501,f13503,f13504,f13509,f13576,f13586,f13591,f13593,f13594,f13595,f13596,f13597,f13600,f13603,f13604,f13541,f13633,f13637,f14059,f13949,f13950,f14060,f13981,f14079,f14190,f14391,f14278,f14279,f14392,f14312,f14413,f14631,f14516,f14517,f14632,f14552,f14653,f14825,f14826,f14833,f14834,f14957,f14941,f14946,f14951,f14953,f14954,f6172,f15489,f15492,f15495,f15498])).
fof(f15496,plain,(
  $false | $spl48),
  inference(global_subsumption,[],[f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f428,f429,f268,f194,f235,f231,f230,f229,f228,f200,f256,f255,f247,f246,f245,f244,f199,f198,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f433,f406,f250,f249,f207,f191,f184,f183,f179,f691,f733,f854,f966,f968,f969,f970,f971,f972,f973,f975,f976,f978,f979,f980,f1024,f1143,f1153,f1165,f2809,f2823,f2826,f2830,f3082,f3089,f3374,f3421,f5542,f5640,f5932,f6289,f4727,f4254,f2243,f241,f238,f234,f193,f692,f3568,f3563,f3504,f3570,f3564,f5997,f5605,f6355,f3565,f3562,f3567,f3566,f6796,f3545,f4280,f4747,f3538,f3530,f3484,f3532,f3531,f6759,f6758,f5367,f3485,f7226,f7225,f7219,f7217,f7216,f7206,f7201,f5370,f5369,f3529,f3482,f226,f224,f223,f222,f221,f195,f734,f3533,f7194,f3624,f3623,f3622,f5083,f5261,f3621,f5053,f5231,f7212,f7200,f7198,f7193,f7192,f7191,f7190,f5344,f4991,f4974,f4867,f4851,f4551,f4535,f4454,f4438,f4109,f4091,f3675,f3653,f3537,f2128,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11603,f11604,f11570,f11571,f11572,f11573,f11575,f11577,f11579,f11582,f11588,f11593,f11597,f11598,f11599,f12952,f13160,f13164,f13170,f13259,f13269,f13274,f13276,f13277,f13278,f13279,f13280,f13283,f13286,f13287,f13205,f13215,f13221,f13224,f13226,f13227,f13228,f13229,f13230,f13232,f13234,f13235,f13237,f13468,f13474,f13484,f13490,f13493,f13495,f13496,f13497,f13498,f13499,f13501,f13503,f13504,f13509,f13576,f13586,f13591,f13593,f13594,f13595,f13596,f13597,f13600,f13603,f13604,f13541,f13633,f13637,f14059,f13949,f13950,f14060,f13981,f14079,f14190,f14391,f14278,f14279,f14392,f14312,f14413,f14631,f14516,f14517,f14632,f14552,f14653,f14825,f14826,f14833,f14834,f14957,f14941,f14946,f14951,f14953,f14954,f6172,f15489,f15492,f15495])).
fof(f15493,plain,(
  $false | $spl48),
  inference(global_subsumption,[],[f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f428,f429,f268,f194,f235,f231,f230,f229,f228,f200,f256,f255,f247,f246,f245,f244,f199,f198,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f433,f406,f250,f249,f207,f191,f184,f183,f179,f691,f733,f854,f966,f968,f969,f970,f971,f972,f973,f975,f976,f978,f979,f980,f1024,f1143,f1153,f1165,f2809,f2823,f2826,f2830,f3082,f3089,f3374,f3421,f5542,f5640,f5932,f6289,f4727,f4254,f2243,f241,f238,f234,f193,f692,f3568,f3563,f3504,f3570,f3564,f5997,f5605,f6355,f3565,f3562,f3567,f3566,f6796,f3545,f4280,f4747,f3538,f3530,f3484,f3532,f3531,f6759,f6758,f5367,f3485,f7226,f7225,f7219,f7217,f7216,f7206,f7201,f5370,f5369,f3529,f3482,f226,f224,f223,f222,f221,f195,f734,f3533,f7194,f3624,f3623,f3622,f5083,f5261,f3621,f5053,f5231,f7212,f7200,f7198,f7193,f7192,f7191,f7190,f5344,f4991,f4974,f4867,f4851,f4551,f4535,f4454,f4438,f4109,f4091,f3675,f3653,f3537,f2128,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11603,f11604,f11570,f11571,f11572,f11573,f11575,f11577,f11579,f11582,f11588,f11593,f11597,f11598,f11599,f12952,f13160,f13164,f13170,f13259,f13269,f13274,f13276,f13277,f13278,f13279,f13280,f13283,f13286,f13287,f13205,f13215,f13221,f13224,f13226,f13227,f13228,f13229,f13230,f13232,f13234,f13235,f13237,f13468,f13474,f13484,f13490,f13493,f13495,f13496,f13497,f13498,f13499,f13501,f13503,f13504,f13509,f13576,f13586,f13591,f13593,f13594,f13595,f13596,f13597,f13600,f13603,f13604,f13541,f13633,f13637,f14059,f13949,f13950,f14060,f13981,f14079,f14190,f14391,f14278,f14279,f14392,f14312,f14413,f14631,f14516,f14517,f14632,f14552,f14653,f14825,f14826,f14833,f14834,f14957,f14941,f14946,f14951,f14953,f14954,f6172,f15489,f15492])).
fof(f15490,plain,(
  $false | ($spl34 | $spl43 | $spl48)),
  inference(global_subsumption,[],[f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f428,f429,f268,f194,f235,f231,f230,f229,f228,f200,f256,f255,f247,f246,f245,f244,f199,f198,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f433,f406,f250,f249,f207,f191,f184,f183,f179,f691,f733,f854,f966,f968,f969,f970,f971,f972,f973,f975,f976,f978,f979,f980,f1024,f1143,f1153,f1165,f997,f1171,f1212,f1173,f1174,f1175,f1176,f1177,f1178,f1179,f1180,f1181,f1183,f1184,f1188,f1189,f1190,f1191,f1213,f1195,f1196,f1216,f1217,f1201,f1202,f1203,f1206,f1208,f1210,f1219,f1716,f1865,f1902,f1965,f1974,f1999,f1997,f1998,f2004,f2056,f2060,f2059,f2062,f2061,f2083,f2084,f2085,f2086,f2144,f2168,f2197,f2259,f2282,f2281,f2283,f2354,f2355,f2460,f2480,f2479,f2580,f2610,f2641,f2701,f2700,f2931,f2932,f2808,f2809,f2811,f2935,f2815,f2936,f2937,f2938,f2939,f2940,f2941,f2942,f2823,f2826,f2945,f2946,f2830,f2832,f3082,f3089,f3195,f3196,f3255,f3256,f3257,f3258,f3198,f3220,f3333,f3342,f3347,f3352,f3348,f3358,f3364,f3368,f3374,f3421,f3436,f3464,f3542,f3577,f3587,f3739,f3753,f3813,f3878,f3976,f3975,f4019,f4020,f4144,f4145,f4146,f4183,f4184,f4185,f4186,f4353,f4459,f4557,f4556,f4657,f4783,f4789,f4902,f4904,f4905,f5028,f5048,f5217,f5427,f5471,f5472,f5473,f5506,f5507,f5542,f5564,f5640,f5647,f5652,f5653,f5656,f5657,f5658,f5859,f5860,f5894,f5895,f5932,f5954,f6040,f6110,f6211,f6212,f6247,f6248,f6289,f6311,f6402,f6403,f6657,f6708,f6750,f6752,f6832,f6871,f6957,f6958,f6965,f6970,f6977,f6981,f7112,f7113,f7114,f7115,f7116,f7117,f7118,f7119,f7120,f7121,f7122,f7123,f7124,f7125,f7126,f7127,f7020,f7141,f7150,f7152,f7157,f7165,f7172,f7174,f7177,f7178,f7221,f7227,f7234,f1895,f1897,f2358,f2359,f4748,f4110,f4150,f4868,f4785,f4220,f4726,f4219,f4725,f4218,f3852,f3851,f3850,f1215,f1214,f1186,f4727,f4254,f2243,f241,f238,f234,f193,f692,f3568,f3563,f3548,f3504,f3570,f3564,f5997,f5605,f6355,f3565,f3547,f3556,f3562,f4361,f3747,f3569,f3567,f3561,f3560,f3559,f3558,f3557,f3555,f3553,f3552,f3546,f3549,f3550,f3554,f3566,f6796,f3868,f3545,f4280,f4747,f3538,f5211,f4377,f3539,f3536,f3530,f3484,f3544,f3541,f3534,f3532,f3531,f6759,f6758,f5367,f3485,f7232,f7230,f7229,f7226,f7225,f7219,f7217,f7216,f7206,f7205,f7201,f5370,f5369,f3529,f3482,f226,f224,f223,f222,f221,f195,f734,f3533,f7194,f4089,f4940,f3624,f3623,f4088,f4268,f4741,f4939,f3622,f5083,f5261,f7199,f7189,f4267,f3937,f3920,f3805,f3789,f3621,f1187,f1185,f4057,f4973,f5053,f5231,f4056,f4972,f7212,f7200,f7198,f7193,f7192,f7191,f7190,f5344,f4991,f4974,f4867,f4851,f4551,f4535,f4454,f4438,f4109,f4091,f3675,f3653,f3537,f2128,f258,f257,f243,f242,f240,f239,f237,f236,f233,f8483,f8933,f8931,f8932,f8982,f9102,f9103,f9148,f9149,f9270,f9269,f9306,f9307,f9394,f9395,f9396,f9557,f9558,f9559,f9572,f9571,f9608,f9609,f9793,f9794,f9795,f9836,f9837,f9838,f9839,f9962,f9963,f10020,f10021,f10169,f10183,f10182,f10403,f10415,f10537,f10550,f10549,f10806,f10848,f10810,f11019,f10982,f11059,f11021,f11078,f11074,f11117,f11080,f11310,f11391,f11480,f11603,f11604,f11569,f11570,f11571,f11572,f11573,f11605,f11575,f11577,f11578,f11579,f11582,f11606,f11587,f11588,f11593,f11607,f11597,f11598,f11599,f11646,f11821,f11836,f11844,f11865,f11679,f12138,f12139,f12140,f12141,f12178,f12179,f12180,f12184,f12198,f12202,f12204,f12214,f12218,f12222,f12276,f12281,f12444,f12618,f12697,f12952,f13160,f13162,f13161,f13164,f13165,f13243,f13244,f13245,f13246,f13170,f13247,f13248,f13251,f13253,f13255,f13256,f13258,f13259,f13260,f13262,f13264,f13266,f13268,f13269,f13271,f13273,f13274,f13275,f13276,f13277,f13278,f13279,f13280,f13282,f13283,f13285,f13286,f13287,f13288,f13202,f13203,f13204,f13205,f13207,f13208,f13289,f13290,f13291,f13213,f13292,f13215,f13216,f13293,f13294,f13295,f13296,f13221,f13297,f13298,f13224,f13225,f13226,f13227,f13228,f13229,f13230,f13299,f13232,f13300,f13234,f13235,f13236,f13237,f13239,f13240,f13466,f13465,f13468,f13469,f13546,f13471,f13472,f13473,f13474,f13476,f13477,f13547,f13548,f13549,f13482,f13550,f13484,f13485,f13551,f13552,f13553,f13554,f13490,f13555,f13556,f13493,f13494,f13495,f13496,f13497,f13498,f13499,f13557,f13501,f13558,f13503,f13504,f13560,f13561,f13562,f13563,f13509,f13564,f13565,f13568,f13570,f13572,f13573,f13575,f13576,f13577,f13579,f13581,f13583,f13585,f13586,f13588,f13590,f13591,f13592,f13593,f13594,f13595,f13596,f13597,f13599,f13600,f13602,f13603,f13604,f13540,f13541,f13543,f13544,f13633,f13637,f14059,f13949,f13950,f14060,f13981,f14003,f14079,f14190,f14391,f14278,f14279,f14392,f14312,f14334,f14413,f14631,f14516,f14517,f14632,f14552,f14574,f14653,f14697,f14698,f14742,f14743,f14744,f14745,f14703,f14746,f14747,f14749,f14750,f14752,f14753,f14755,f14756,f14757,f14759,f14761,f14763,f14765,f14766,f14768,f14770,f14771,f14772,f14773,f14774,f14775,f14776,f14777,f14778,f14779,f14781,f14782,f14783,f14784,f14785,f14786,f14737,f14739,f14823,f14822,f14825,f14826,f14827,f14828,f14829,f14833,f14834,f14957,f14978,f15132,f15152,f14941,f14946,f14951,f14953,f14954,f15269,f15283,f15229,f15263,f15266,f15267,f6172,f15489])).
fof(f15267,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),X5))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X5))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl34),
  inference(equality_resolution,[],[f3258])).
fof(f15266,plain,(
  ( ! [X6,X10,X8,X7,X5,X9] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X6) | s('type.list.list'(X5),X7) != s('type.list.list'(X5),'const.list.CONS_2'(s(X5,X8),s('type.list.list'(X5),'const.list.CONS_2'(s(X5,X9),s('type.list.list'(X5),'const.list.CONS_2'(s(X5,X10),s('type.list.list'(X5),'const.list.NIL_0'))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X5),X7))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl34),
  inference(superposition,[],[f3258,f3368])).
fof(f15263,plain,(
  ( ! [X23,X21,X19,X17,X15,X22,X20,X18,X16] : (s('type.num.num',X19) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X15),X18))) | s('type.list.list'(X15),X20) != s('type.list.list'(X15),'const.list.CONS_2'(s(X15,X21),s('type.list.list'(X15),'const.list.CONS_2'(s(X15,X22),s('type.list.list'(X15),'const.list.CONS_2'(s(X15,X23),s('type.list.list'(X15),'const.list.APPEND_2'(s('type.list.list'(X15),sK14(X16,X17,X18,X15)),s('type.list.list'(X15),sK15(X16,X17,X18,X15)))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X15),X20))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X19),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X15),X18))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X17),s('type.num.num',X16)))) ) | $spl34),
  inference(superposition,[],[f3258,f230])).
fof(f15229,plain,(
  ( ! [X28,X26,X24,X23,X21,X27,X25,X22] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X23),X24))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X22),s('type.num.num',X21))) | s('type.list.list'(X23),X25) != s('type.list.list'(X23),'const.list.CONS_2'(s(X23,X26),s('type.list.list'(X23),'const.list.CONS_2'(s(X23,X27),s('type.list.list'(X23),'const.list.CONS_2'(s(X23,X28),s('type.list.list'(X23),X24))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X23),X25))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X21),s('type.num.num',X22))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl34),
  inference(superposition,[],[f3258,f235])).
fof(f15283,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X1),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.NIL_0')))))))))) ) | $spl34),
  inference(forward_demodulation,[],[f15282,f2283])).
fof(f15282,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X1),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.NIL_0')))))))))) ) | $spl34),
  inference(forward_demodulation,[],[f15218,f217])).
fof(f15218,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X1),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.NIL_0'))))))),s('type.list.list'(X0),X4)))))) ) | $spl34),
  inference(unit_resulting_resolution,[],[f3368,f217,f3258])).
fof(f15269,plain,(
  ( ! [X4,X0,X5,X3,X1] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),X1)))))))))) ) | $spl34),
  inference(forward_demodulation,[],[f15268,f217])).
fof(f15268,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.bool.COND_3'(s(bool,'T_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num',X2))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),X1)))))))))) ) | $spl34),
  inference(forward_demodulation,[],[f15225,f217])).
fof(f15225,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.bool.COND_3'(s(bool,'T_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num',X2))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),X1))))))),s('type.list.list'(X0),X6)))))) ) | $spl34),
  inference(unit_resulting_resolution,[],[f217,f217,f3258])).
fof(f15152,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.NIL_0'),s('type.list.list'(X0),'const.list.NIL_0')))))) ) | $spl34),
  inference(forward_demodulation,[],[f15151,f1178])).
fof(f15151,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.NIL_0'),s('type.list.list'(X0),'const.list.NIL_0')))))) ) | $spl34),
  inference(forward_demodulation,[],[f14875,f217])).
fof(f14875,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.NIL_0'),s('type.list.list'(X0),'const.list.NIL_0'))),s('type.list.list'(X0),X1)))))) ) | $spl34),
  inference(unit_resulting_resolution,[],[f3368,f3368,f217,f231])).
fof(f15132,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),'const.list.NIL_0')))))) ) | $spl34),
  inference(forward_demodulation,[],[f15131,f2283])).
fof(f15131,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),'const.list.NIL_0')))))) ) | $spl34),
  inference(forward_demodulation,[],[f15130,f235])).
fof(f15130,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),'const.list.NIL_0')))))) ) | $spl34),
  inference(forward_demodulation,[],[f15129,f217])).
fof(f15129,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),'const.list.NIL_0'))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.bool.COND_3'(s(bool,'T_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num',X2))),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl34),
  inference(forward_demodulation,[],[f14882,f217])).
fof(f14882,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.bool.COND_3'(s(bool,'T_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num',X2))),s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),'const.list.NIL_0'))),s('type.list.list'(X0),X3)))))) ) | $spl34),
  inference(unit_resulting_resolution,[],[f217,f3368,f217,f231])).
fof(f14978,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.NIL_0'),s('type.list.list'(X0),X1)))))) ) | $spl34),
  inference(forward_demodulation,[],[f14977,f2283])).
fof(f14977,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.NIL_0'),s('type.list.list'(X0),X1)))))) ) | $spl34),
  inference(forward_demodulation,[],[f14976,f217])).
fof(f14976,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.NIL_0'),s('type.list.list'(X0),X1))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.bool.COND_3'(s(bool,'T_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num',X2)))))) ) | $spl34),
  inference(forward_demodulation,[],[f14931,f217])).
fof(f14931,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.bool.COND_3'(s(bool,'T_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num',X2))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.NIL_0'),s('type.list.list'(X0),X1))),s('type.list.list'(X0),X3)))))) ) | $spl34),
  inference(unit_resulting_resolution,[],[f3368,f217,f217,f231])).
fof(f14829,plain,(
  ( ! [X24,X23,X21,X22,X20] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X20),X23))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X24),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.num.num',X24) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X20),sK7('const.list.APPEND_2'(s('type.list.list'(X20),sK14(X21,X22,X23,X20)),s('type.list.list'(X20),sK15(X21,X22,X23,X20))),X24,X20)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X20),X23))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X22),s('type.num.num',X21)))) ) | $spl34),
  inference(superposition,[],[f3256,f230])).
fof(f14828,plain,(
  ( ! [X19,X17,X18,X16] : (s('type.list.list'(X16),'const.list.NIL_0') != s('type.list.list'(X16),X19) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X16),'const.list.APPEND_2'(s('type.list.list'(X16),sK14(X17,X18,X19,X16)),s('type.list.list'(X16),sK15(X17,X18,X19,X16)))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X16),X19))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X18),s('type.num.num',X17)))) ) | $spl34),
  inference(superposition,[],[f1191,f230])).
fof(f14827,plain,(
  ( ! [X14,X12,X15,X13] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X12),X15))) | s('type.list.list'(X12),'const.list.NIL_0') = s('type.list.list'(X12),'const.list.APPEND_2'(s('type.list.list'(X12),sK14(X13,X14,X15,X12)),s('type.list.list'(X12),sK15(X13,X14,X15,X12)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X12),X15))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X14),s('type.num.num',X13)))) ) | $spl34),
  inference(superposition,[],[f1190,f230])).
fof(f14822,plain,(
  ( ! [X0,X1] : (s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),sK14('const.arithmetic.ZERO_0','const.list.LENGTH_1'(s('type.list.list'(X0),X1)),X1,X0)),s('type.list.list'(X0),sK15('const.arithmetic.ZERO_0','const.list.LENGTH_1'(s('type.list.list'(X0),X1)),X1,X0))))) ) | $spl34),
  inference(unit_resulting_resolution,[],[f1178,f230])).
fof(f14823,plain,(
  ( ! [X0,X1] : (s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),sK14('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.arithmetic.ZERO_0',X1,X0)),s('type.list.list'(X0),sK15('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.arithmetic.ZERO_0',X1,X0))))) ) | $spl34),
  inference(unit_resulting_resolution,[],[f2283,f230])).
fof(f14739,plain,(
  ( ! [X6,X7] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X7))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),sK7(X7,'const.arithmetic.ZERO_0',X6))))) ) | $spl34),
  inference(superposition,[],[f3256,f2283])).
fof(f14737,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),X2))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X0))) | s('type.num.num',X0) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),sK7(X2,X0,X1))))) ) | $spl34),
  inference(superposition,[],[f3256,f235])).
fof(f14786,plain,(
  ( ! [X114,X112,X115,X113] : (s('type.num.num',X112) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X114),sK7(X115,'const.bool.COND_3'(s(bool,'T_0'),s('type.num.num',X112),s('type.num.num',X113)),X114)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X114),X115))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X112),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl34),
  inference(forward_demodulation,[],[f14736,f217])).
fof(f14736,plain,(
  ( ! [X114,X112,X115,X113] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X114),X115))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X112),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.num.num','const.bool.COND_3'(s(bool,'T_0'),s('type.num.num',X112),s('type.num.num',X113))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X114),sK7(X115,'const.bool.COND_3'(s(bool,'T_0'),s('type.num.num',X112),s('type.num.num',X113)),X114))))) ) | $spl34),
  inference(superposition,[],[f3256,f217])).
fof(f14785,plain,(
  ( ! [X111,X109,X110] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X109))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X110),sK7(X111,'const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X109)))),X110)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X110),X111))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X109))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl34),
  inference(forward_demodulation,[],[f14735,f198])).
fof(f14735,plain,(
  ( ! [X111,X109,X110] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X110),X111))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X109))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X109))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X110),sK7(X111,'const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X109)))),X110))))) ) | $spl34),
  inference(superposition,[],[f3256,f198])).
fof(f14784,plain,(
  ( ! [X107,X108] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X107),sK7(X108,'const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.ZERO_0')),X107)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X107),X108))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl34),
  inference(forward_demodulation,[],[f14734,f1206])).
fof(f14734,plain,(
  ( ! [X107,X108] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X107),X108))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X107),sK7(X108,'const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.ZERO_0')),X107))))) ) | $spl34),
  inference(superposition,[],[f3256,f1206])).
fof(f14783,plain,(
  ( ! [X103,X105,X106,X104] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X103),s('type.num.num',X104))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X105),sK7(X106,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X103))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X104)))),X105)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X105),X106))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X103),s('type.num.num',X104))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl34),
  inference(forward_demodulation,[],[f14733,f249])).
fof(f14733,plain,(
  ( ! [X103,X105,X106,X104] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X105),X106))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X103),s('type.num.num',X104))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X103))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X104))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X105),sK7(X106,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X103))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X104)))),X105))))) ) | $spl34),
  inference(superposition,[],[f3256,f249])).
fof(f14782,plain,(
  ( ! [X101,X102,X100] : (s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X100))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X101),sK7(X102,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X100))),s('type.num.num','const.arithmetic.ZERO_0')),X101)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X101),X102))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X100))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl34),
  inference(forward_demodulation,[],[f14732,f207])).
fof(f14732,plain,(
  ( ! [X101,X102,X100] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X101),X102))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X100))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X100))),s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X101),sK7(X102,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X100))),s('type.num.num','const.arithmetic.ZERO_0')),X101))))) ) | $spl34),
  inference(superposition,[],[f3256,f207])).
fof(f14781,plain,(
  ( ! [X99,X97,X98,X96] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X98),sK7(X99,'const.numeral.iSUB_3'(s(bool,X96),s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X97)),X98)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X98),X99))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl34),
  inference(forward_demodulation,[],[f14780,f232])).
fof(f14780,plain,(
  ( ! [X99,X97,X98,X96] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X98),X99))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.numeral.iSUB_3'(s(bool,X96),s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X97))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X98),sK7(X99,'const.numeral.iSUB_3'(s(bool,X96),s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X97)),X98))))) ) | $spl34),
  inference(forward_demodulation,[],[f14731,f2283])).
fof(f14731,plain,(
  ( ! [X99,X97,X98,X96] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X98),X99))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.num.num','const.numeral.iSUB_3'(s(bool,X96),s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X97))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X98),sK7(X99,'const.numeral.iSUB_3'(s(bool,X96),s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X97)),X98))))) ) | $spl34),
  inference(superposition,[],[f3256,f232])).
fof(f14779,plain,(
  ( ! [X94,X92,X95,X93] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X92),s('type.num.num',X93))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X94),sK7(X95,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X92))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X93)))),X94)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X94),X95))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X92),s('type.num.num',X93))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl34),
  inference(forward_demodulation,[],[f14730,f250])).
fof(f14730,plain,(
  ( ! [X94,X92,X95,X93] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X94),X95))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X92),s('type.num.num',X93))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X92))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X93))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X94),sK7(X95,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X92))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X93)))),X94))))) ) | $spl34),
  inference(superposition,[],[f3256,f250])).
fof(f14778,plain,(
  ( ! [X90,X88,X91,X89] : (s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X88),s('type.num.num',X89))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X90),sK7(X91,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X88))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X89)))),X90)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X90),X91))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X88),s('type.num.num',X89))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl34),
  inference(forward_demodulation,[],[f14729,f248])).
fof(f14729,plain,(
  ( ! [X90,X88,X91,X89] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X90),X91))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X88),s('type.num.num',X89))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X88))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X89))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X90),sK7(X91,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X88))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X89)))),X90))))) ) | $spl34),
  inference(superposition,[],[f3256,f248])).
fof(f14777,plain,(
  ( ! [X87,X85,X86] : (s('type.num.num',X85) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X86),sK7(X87,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X85),s('type.num.num','const.arithmetic.ZERO_0')),X86)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X86),X87))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X85),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl34),
  inference(forward_demodulation,[],[f14728,f196])).
fof(f14728,plain,(
  ( ! [X87,X85,X86] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X86),X87))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X85),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X85),s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X86),sK7(X87,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X85),s('type.num.num','const.arithmetic.ZERO_0')),X86))))) ) | $spl34),
  inference(superposition,[],[f3256,f196])).
fof(f14776,plain,(
  ( ! [X83,X84,X82] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X82))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X83),sK7(X84,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X82)))),X83)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X83),X84))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X82))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl34),
  inference(forward_demodulation,[],[f14727,f202])).
fof(f14727,plain,(
  ( ! [X83,X84,X82] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X83),X84))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X82))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X82))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X83),sK7(X84,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X82)))),X83))))) ) | $spl34),
  inference(superposition,[],[f3256,f202])).
fof(f14775,plain,(
  ( ! [X80,X81,X79] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X79))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X80),sK7(X81,'const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X79)))),X80)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X80),X81))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X79))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl34),
  inference(forward_demodulation,[],[f14726,f199])).
fof(f14726,plain,(
  ( ! [X80,X81,X79] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X80),X81))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X79))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X79))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X80),sK7(X81,'const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X79)))),X80))))) ) | $spl34),
  inference(superposition,[],[f3256,f199])).
fof(f14774,plain,(
  ( ! [X78,X76,X77] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X76))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X77),sK7(X78,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X76)))),X77)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X77),X78))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X76))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl34),
  inference(forward_demodulation,[],[f14725,f197])).
fof(f14725,plain,(
  ( ! [X78,X76,X77] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X77),X78))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X76))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X76))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X77),sK7(X78,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X76)))),X77))))) ) | $spl34),
  inference(superposition,[],[f3256,f197])).
fof(f14773,plain,(
  ( ! [X74,X75] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X74),sK7(X75,'const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),X74)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X74),X75))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl34),
  inference(forward_demodulation,[],[f14724,f177])).
fof(f14724,plain,(
  ( ! [X74,X75] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X74),X75))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X74),sK7(X75,'const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),X74))))) ) | $spl34),
  inference(superposition,[],[f3256,f177])).
fof(f14772,plain,(
  ( ! [X72,X71,X73] : (s('type.num.num',X71) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X72),sK7(X73,'const.numeral.iZ_1'(s('type.num.num',X71)),X72)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X72),X73))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X71),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl34),
  inference(forward_demodulation,[],[f14723,f12222])).
fof(f14723,plain,(
  ( ! [X72,X71,X73] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X72),X73))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X71),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X71))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X72),sK7(X73,'const.numeral.iZ_1'(s('type.num.num',X71)),X72))))) ) | $spl34),
  inference(superposition,[],[f3256,f12222])).
fof(f14771,plain,(
  ( ! [X70,X68,X69,X67] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X67),s('type.num.num',X68))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X69),sK7(X70,'const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X67))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X68)))),X69)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X69),X70))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X67),s('type.num.num',X68))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl34),
  inference(forward_demodulation,[],[f14722,f245])).
fof(f14722,plain,(
  ( ! [X70,X68,X69,X67] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X69),X70))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X67),s('type.num.num',X68))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X67))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X68))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X69),sK7(X70,'const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X67))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X68)))),X69))))) ) | $spl34),
  inference(superposition,[],[f3256,f245])).
fof(f14770,plain,(
  ( ! [X66,X64,X65] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X65),sK7(X66,'const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X64)),X65)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X65),X66))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl34),
  inference(forward_demodulation,[],[f14769,f1174])).
fof(f14769,plain,(
  ( ! [X66,X64,X65] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X65),X66))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X64))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X65),sK7(X66,'const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X64)),X65))))) ) | $spl34),
  inference(forward_demodulation,[],[f14721,f2283])).
fof(f14721,plain,(
  ( ! [X66,X64,X65] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X65),X66))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X64))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X65),sK7(X66,'const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X64)),X65))))) ) | $spl34),
  inference(superposition,[],[f3256,f1174])).
fof(f14768,plain,(
  ( ! [X61,X62,X63] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X62),sK7(X63,'const.arithmetic.*_2'(s('type.num.num',X61),s('type.num.num','const.arithmetic.ZERO_0')),X62)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X62),X63))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl34),
  inference(forward_demodulation,[],[f14767,f1173])).
fof(f14767,plain,(
  ( ! [X61,X62,X63] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X62),X63))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X61),s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X62),sK7(X63,'const.arithmetic.*_2'(s('type.num.num',X61),s('type.num.num','const.arithmetic.ZERO_0')),X62))))) ) | $spl34),
  inference(forward_demodulation,[],[f14720,f2283])).
fof(f14720,plain,(
  ( ! [X61,X62,X63] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X62),X63))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X61),s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X62),sK7(X63,'const.arithmetic.*_2'(s('type.num.num',X61),s('type.num.num','const.arithmetic.ZERO_0')),X62))))) ) | $spl34),
  inference(superposition,[],[f3256,f1173])).
fof(f14766,plain,(
  ( ! [X59,X57,X60,X58] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X57),s('type.num.num',X58))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X59),sK7(X60,'const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X57))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X58)))),X59)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X59),X60))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X57),s('type.num.num',X58))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl34),
  inference(forward_demodulation,[],[f14719,f244])).
fof(f14719,plain,(
  ( ! [X59,X57,X60,X58] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X59),X60))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X57),s('type.num.num',X58))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X57))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X58))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X59),sK7(X60,'const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X57))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X58)))),X59))))) ) | $spl34),
  inference(superposition,[],[f3256,f244])).
fof(f14765,plain,(
  ( ! [X56,X55] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X55),sK7(X56,'const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X55)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X55),X56))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl34),
  inference(forward_demodulation,[],[f14764,f3195])).
fof(f14764,plain,(
  ( ! [X56,X55] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X55),X56))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X55),sK7(X56,'const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X55))))) ) | $spl34),
  inference(forward_demodulation,[],[f14718,f2283])).
fof(f14718,plain,(
  ( ! [X56,X55] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X55),X56))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X55),sK7(X56,'const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X55))))) ) | $spl34),
  inference(superposition,[],[f3256,f3195])).
fof(f14763,plain,(
  ( ! [X54,X53] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X53),sK7(X54,'const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X53)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X53),X54))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl34),
  inference(forward_demodulation,[],[f14762,f2641])).
fof(f14762,plain,(
  ( ! [X54,X53] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X53),X54))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X53),sK7(X54,'const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X53))))) ) | $spl34),
  inference(forward_demodulation,[],[f14717,f2283])).
fof(f14717,plain,(
  ( ! [X54,X53] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X53),X54))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X53),sK7(X54,'const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X53))))) ) | $spl34),
  inference(superposition,[],[f3256,f2641])).
fof(f14761,plain,(
  ( ! [X52,X50,X51] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X51),sK7(X52,'const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X50)))))),X51)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X51),X52))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl34),
  inference(forward_demodulation,[],[f14760,f1184])).
fof(f14760,plain,(
  ( ! [X52,X50,X51] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X51),X52))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X50))))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X51),sK7(X52,'const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X50)))))),X51))))) ) | $spl34),
  inference(forward_demodulation,[],[f14716,f2283])).
fof(f14716,plain,(
  ( ! [X52,X50,X51] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X51),X52))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X50))))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X51),sK7(X52,'const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X50)))))),X51))))) ) | $spl34),
  inference(superposition,[],[f3256,f1184])).
fof(f14759,plain,(
  ( ! [X47,X48,X49] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X48),sK7(X49,'const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X47)))))),X48)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X48),X49))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl34),
  inference(forward_demodulation,[],[f14758,f1183])).
fof(f14758,plain,(
  ( ! [X47,X48,X49] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X48),X49))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X47))))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X48),sK7(X49,'const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X47)))))),X48))))) ) | $spl34),
  inference(forward_demodulation,[],[f14715,f2283])).
fof(f14715,plain,(
  ( ! [X47,X48,X49] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X48),X49))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X47))))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X48),sK7(X49,'const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X47)))))),X48))))) ) | $spl34),
  inference(superposition,[],[f3256,f1183])).
fof(f14757,plain,(
  ( ! [X45,X46,X44] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X45),sK7(X46,'const.arithmetic.EXP_2'(s('type.num.num',X44),s('type.num.num','const.arithmetic.ZERO_0')),X45)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X45),X46))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl34),
  inference(forward_demodulation,[],[f14714,f1213])).
fof(f14714,plain,(
  ( ! [X45,X46,X44] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X45),X46))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X44),s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X45),sK7(X46,'const.arithmetic.EXP_2'(s('type.num.num',X44),s('type.num.num','const.arithmetic.ZERO_0')),X45))))) ) | $spl34),
  inference(superposition,[],[f3256,f1213])).
fof(f14756,plain,(
  ( ! [X43,X41,X42,X40] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X40),s('type.num.num',X41))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X42),sK7(X43,'const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X40))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X41)))),X42)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X42),X43))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X40),s('type.num.num',X41))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl34),
  inference(forward_demodulation,[],[f14713,f246])).
fof(f14713,plain,(
  ( ! [X43,X41,X42,X40] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X42),X43))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X40),s('type.num.num',X41))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X40))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X41))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X42),sK7(X43,'const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X40))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X41)))),X42))))) ) | $spl34),
  inference(superposition,[],[f3256,f246])).
fof(f14755,plain,(
  ( ! [X39,X37,X38] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X38),sK7(X39,'const.arithmetic.-_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X37)),X38)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X38),X39))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl34),
  inference(forward_demodulation,[],[f14754,f1179])).
fof(f14754,plain,(
  ( ! [X39,X37,X38] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X38),X39))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X37))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X38),sK7(X39,'const.arithmetic.-_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X37)),X38))))) ) | $spl34),
  inference(forward_demodulation,[],[f14712,f2283])).
fof(f14712,plain,(
  ( ! [X39,X37,X38] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X38),X39))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X37))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X38),sK7(X39,'const.arithmetic.-_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X37)),X38))))) ) | $spl34),
  inference(superposition,[],[f3256,f1179])).
fof(f14753,plain,(
  ( ! [X35,X36,X34] : (s('type.num.num',X34) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X35),sK7(X36,'const.arithmetic.-_2'(s('type.num.num',X34),s('type.num.num','const.arithmetic.ZERO_0')),X35)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X35),X36))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X34),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl34),
  inference(forward_demodulation,[],[f14711,f1177])).
fof(f14711,plain,(
  ( ! [X35,X36,X34] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X35),X36))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X34),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X34),s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X35),sK7(X36,'const.arithmetic.-_2'(s('type.num.num',X34),s('type.num.num','const.arithmetic.ZERO_0')),X35))))) ) | $spl34),
  inference(superposition,[],[f3256,f1177])).
fof(f14752,plain,(
  ( ! [X33,X31,X32] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X32),sK7(X33,'const.arithmetic.-_2'(s('type.num.num',X31),s('type.num.num',X31)),X32)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X32),X33))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl34),
  inference(forward_demodulation,[],[f14751,f1176])).
fof(f14751,plain,(
  ( ! [X33,X31,X32] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X32),X33))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X31),s('type.num.num',X31))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X32),sK7(X33,'const.arithmetic.-_2'(s('type.num.num',X31),s('type.num.num',X31)),X32))))) ) | $spl34),
  inference(forward_demodulation,[],[f14710,f2283])).
fof(f14710,plain,(
  ( ! [X33,X31,X32] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X32),X33))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X31),s('type.num.num',X31))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X32),sK7(X33,'const.arithmetic.-_2'(s('type.num.num',X31),s('type.num.num',X31)),X32))))) ) | $spl34),
  inference(superposition,[],[f3256,f1176])).
fof(f14750,plain,(
  ( ! [X30,X29] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X29),sK7(X30,'const.num.|48|_0',X29)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X29),X30))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl34),
  inference(forward_demodulation,[],[f14709,f1171])).
fof(f14709,plain,(
  ( ! [X30,X29] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X29),X30))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X29),sK7(X30,'const.num.|48|_0',X29))))) ) | $spl34),
  inference(superposition,[],[f3256,f1171])).
fof(f14749,plain,(
  ( ! [X28,X26,X27] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X27),sK7(X28,'const.list.LENGTH_1'(s('type.list.list'(X26),'const.list.NIL_0')),X27)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X27),X28))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl34),
  inference(forward_demodulation,[],[f14708,f3368])).
fof(f14708,plain,(
  ( ! [X28,X26,X27] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X27),X28))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X26),'const.list.NIL_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X27),sK7(X28,'const.list.LENGTH_1'(s('type.list.list'(X26),'const.list.NIL_0')),X27))))) ) | $spl34),
  inference(superposition,[],[f3256,f3368])).
fof(f14747,plain,(
  ( ! [X23,X21,X22,X20] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X20),s('type.num.num',X21))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X22),sK7(X23,'const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X20))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X21)))),X22)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X22),X23))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X20),s('type.num.num',X21))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl34),
  inference(forward_demodulation,[],[f14706,f12139])).
fof(f14706,plain,(
  ( ! [X23,X21,X22,X20] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X22),X23))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X20),s('type.num.num',X21))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X20))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X21))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X22),sK7(X23,'const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X20))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X21)))),X22))))) ) | $spl34),
  inference(superposition,[],[f3256,f12139])).
fof(f14746,plain,(
  ( ! [X19,X17,X18] : (s('type.num.num',X17) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X18),sK7(X19,'const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X17)),X18)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X18),X19))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X17),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl34),
  inference(forward_demodulation,[],[f14705,f2283])).
fof(f14705,plain,(
  ( ! [X19,X17,X18] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X18),X19))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X17),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X17))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X18),sK7(X19,'const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X17)),X18))))) ) | $spl34),
  inference(superposition,[],[f3256,f2283])).
fof(f14703,plain,(
  ( ! [X12,X10,X11,X9] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X11),X12))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X10),s('type.num.num',X9))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X9),s('type.num.num',X10))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X11),sK7(X12,'const.arithmetic.+_2'(s('type.num.num',X9),s('type.num.num',X10)),X11))))) ) | $spl34),
  inference(superposition,[],[f3256,f235])).
fof(f14745,plain,(
  ( ! [X6,X8,X7] : (s('type.num.num',X6) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X7),sK7(X8,'const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num','const.arithmetic.ZERO_0')),X7)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X7),X8))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl34),
  inference(forward_demodulation,[],[f14702,f1178])).
fof(f14702,plain,(
  ( ! [X6,X8,X7] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X7),X8))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X7),sK7(X8,'const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num','const.arithmetic.ZERO_0')),X7))))) ) | $spl34),
  inference(superposition,[],[f3256,f1178])).
fof(f14744,plain,(
  ( ! [X4,X5] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X4),sK7(X5,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X4)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X4),X5))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl34),
  inference(forward_demodulation,[],[f14701,f1965])).
fof(f14701,plain,(
  ( ! [X4,X5] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X4),X5))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X4),sK7(X5,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X4))))) ) | $spl34),
  inference(superposition,[],[f3256,f1965])).
fof(f14743,plain,(
  ( ! [X2,X3] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X2),sK7(X3,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X2)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X2),X3))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl34),
  inference(forward_demodulation,[],[f14700,f1212])).
fof(f14700,plain,(
  ( ! [X2,X3] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X2),X3))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X2),sK7(X3,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X2))))) ) | $spl34),
  inference(superposition,[],[f3256,f1212])).
fof(f14742,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK7(X1,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')),X0)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl34),
  inference(forward_demodulation,[],[f14699,f1208])).
fof(f14699,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK7(X1,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')),X0))))) ) | $spl34),
  inference(superposition,[],[f3256,f1208])).
fof(f14698,plain,(
  ( ! [X2,X1] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.num.num',X2) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),sK7('const.list.NIL_0',X2,X1))))) ) | $spl34),
  inference(superposition,[],[f3256,f3368])).
fof(f14697,plain,(
  ( ! [X6,X4,X5,X3] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X3),X4))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.num.num',X6) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X3),sK7('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X3),X4),s('type.list.list'(X3),X5)),X6,X3))))) ) | $spl34),
  inference(superposition,[],[f3256,f217])).
fof(f14574,plain,(
  ( ! [X194,X193] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X193),s('type.num.num',X194))))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X193))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X194)))))) ) | $spl34),
  inference(superposition,[],[f1188,f250])).
fof(f14334,plain,(
  ( ! [X187,X188] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X187),s('type.num.num',X188))))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X187))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X188)))))) ) | $spl34),
  inference(superposition,[],[f1188,f249])).
fof(f14003,plain,(
  ( ! [X182,X181] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X181),s('type.num.num',X182))))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X181))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X182)))))) ) | $spl34),
  inference(superposition,[],[f1188,f248])).
fof(f13544,plain,(
  ( ! [X14,X17,X15,X16] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X16),X17))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X14),s('type.num.num',X15))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X15))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X16),sK15('const.arithmetic.NUMERAL_1'(s('type.num.num',X15)),'const.arithmetic.NUMERAL_1'(s('type.num.num',X14)),X17,X16))))) ) | $spl34),
  inference(superposition,[],[f229,f12139])).
fof(f13543,plain,(
  ( ! [X12,X13,X11] : (s('type.num.num',X11) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X12),X13))) | s('type.num.num',X11) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X12),sK15(X11,'const.arithmetic.ZERO_0',X13,X12))))) ) | $spl34),
  inference(superposition,[],[f229,f2283])).
fof(f13540,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num',X0) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),X2))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),sK15('const.arithmetic.ZERO_0',X0,X2,X1))))) ) | $spl34),
  inference(superposition,[],[f229,f1178])).
fof(f13602,plain,(
  ( ! [X127,X128,X129] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X127),sK15('const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.ZERO_0')),X129,X128,X127)))) | s('type.num.num',X129) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X127),X128)))) ) | $spl34),
  inference(forward_demodulation,[],[f13601,f1206])).
fof(f13601,plain,(
  ( ! [X127,X128,X129] : (s('type.num.num',X129) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X127),X128))) | s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X127),sK15('const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.ZERO_0')),X129,X128,X127))))) ) | $spl34),
  inference(forward_demodulation,[],[f13537,f1178])).
fof(f13537,plain,(
  ( ! [X127,X128,X129] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X127),X128))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X129),s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X127),sK15('const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.ZERO_0')),X129,X128,X127))))) ) | $spl34),
  inference(superposition,[],[f229,f1206])).
fof(f13599,plain,(
  ( ! [X121,X118,X122,X120,X119] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X120),sK15('const.numeral.iSUB_3'(s(bool,X118),s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X119)),X122,X121,X120)))) | s('type.num.num',X122) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X120),X121)))) ) | $spl34),
  inference(forward_demodulation,[],[f13598,f232])).
fof(f13598,plain,(
  ( ! [X121,X118,X122,X120,X119] : (s('type.num.num',X122) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X120),X121))) | s('type.num.num','const.numeral.iSUB_3'(s(bool,X118),s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X119))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X120),sK15('const.numeral.iSUB_3'(s(bool,X118),s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X119)),X122,X121,X120))))) ) | $spl34),
  inference(forward_demodulation,[],[f13535,f1178])).
fof(f13535,plain,(
  ( ! [X121,X118,X122,X120,X119] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X120),X121))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X122),s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.numeral.iSUB_3'(s(bool,X118),s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X119))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X120),sK15('const.numeral.iSUB_3'(s(bool,X118),s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X119)),X122,X121,X120))))) )),
  inference(superposition,[],[f229,f232])).
fof(f13592,plain,(
  ( ! [X97,X95,X98,X96] : (s('type.num.num',X95) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X96),sK15('const.numeral.iZ_1'(s('type.num.num',X95)),X98,X97,X96)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X96),X97))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X98),s('type.num.num',X95)))) ) | $spl34),
  inference(forward_demodulation,[],[f13529,f12222])).
fof(f13529,plain,(
  ( ! [X97,X95,X98,X96] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X96),X97))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X98),s('type.num.num',X95))) | s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X95))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X96),sK15('const.numeral.iZ_1'(s('type.num.num',X95)),X98,X97,X96))))) ) | $spl34),
  inference(superposition,[],[f229,f12222])).
fof(f13590,plain,(
  ( ! [X88,X87,X89,X86] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X87),sK15('const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X86)),X89,X88,X87)))) | s('type.num.num',X89) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X87),X88)))) ) | $spl34),
  inference(forward_demodulation,[],[f13589,f1174])).
fof(f13589,plain,(
  ( ! [X88,X87,X89,X86] : (s('type.num.num',X89) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X87),X88))) | s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X86))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X87),sK15('const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X86)),X89,X88,X87))))) ) | $spl34),
  inference(forward_demodulation,[],[f13527,f1178])).
fof(f13527,plain,(
  ( ! [X88,X87,X89,X86] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X87),X88))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X89),s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X86))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X87),sK15('const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X86)),X89,X88,X87))))) ) | $spl34),
  inference(superposition,[],[f229,f1174])).
fof(f13588,plain,(
  ( ! [X85,X83,X84,X82] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X83),sK15('const.arithmetic.*_2'(s('type.num.num',X82),s('type.num.num','const.arithmetic.ZERO_0')),X85,X84,X83)))) | s('type.num.num',X85) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X83),X84)))) ) | $spl34),
  inference(forward_demodulation,[],[f13587,f1173])).
fof(f13587,plain,(
  ( ! [X85,X83,X84,X82] : (s('type.num.num',X85) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X83),X84))) | s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X82),s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X83),sK15('const.arithmetic.*_2'(s('type.num.num',X82),s('type.num.num','const.arithmetic.ZERO_0')),X85,X84,X83))))) ) | $spl34),
  inference(forward_demodulation,[],[f13526,f1178])).
fof(f13526,plain,(
  ( ! [X85,X83,X84,X82] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X83),X84))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X85),s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X82),s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X83),sK15('const.arithmetic.*_2'(s('type.num.num',X82),s('type.num.num','const.arithmetic.ZERO_0')),X85,X84,X83))))) ) | $spl34),
  inference(superposition,[],[f229,f1173])).
fof(f13585,plain,(
  ( ! [X76,X74,X75] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X74),sK15('const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X76,X75,X74)))) | s('type.num.num',X76) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X74),X75)))) ) | $spl34),
  inference(forward_demodulation,[],[f13584,f3195])).
fof(f13584,plain,(
  ( ! [X76,X74,X75] : (s('type.num.num',X76) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X74),X75))) | s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X74),sK15('const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X76,X75,X74))))) ) | $spl34),
  inference(forward_demodulation,[],[f13524,f1178])).
fof(f13524,plain,(
  ( ! [X76,X74,X75] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X74),X75))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X76),s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X74),sK15('const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X76,X75,X74))))) ) | $spl34),
  inference(superposition,[],[f229,f3195])).
fof(f13583,plain,(
  ( ! [X72,X71,X73] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X71),sK15('const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X73,X72,X71)))) | s('type.num.num',X73) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X71),X72)))) ) | $spl34),
  inference(forward_demodulation,[],[f13582,f2641])).
fof(f13582,plain,(
  ( ! [X72,X71,X73] : (s('type.num.num',X73) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X71),X72))) | s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X71),sK15('const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X73,X72,X71))))) ) | $spl34),
  inference(forward_demodulation,[],[f13523,f1178])).
fof(f13523,plain,(
  ( ! [X72,X71,X73] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X71),X72))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X73),s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X71),sK15('const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X73,X72,X71))))) ) | $spl34),
  inference(superposition,[],[f229,f2641])).
fof(f13581,plain,(
  ( ! [X70,X68,X69,X67] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X68),sK15('const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X67)))))),X70,X69,X68)))) | s('type.num.num',X70) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X68),X69)))) ) | $spl34),
  inference(forward_demodulation,[],[f13580,f1184])).
fof(f13580,plain,(
  ( ! [X70,X68,X69,X67] : (s('type.num.num',X70) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X68),X69))) | s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X67))))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X68),sK15('const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X67)))))),X70,X69,X68))))) ) | $spl34),
  inference(forward_demodulation,[],[f13522,f1178])).
fof(f13522,plain,(
  ( ! [X70,X68,X69,X67] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X68),X69))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X70),s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X67))))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X68),sK15('const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X67)))))),X70,X69,X68))))) ) | $spl34),
  inference(superposition,[],[f229,f1184])).
fof(f13579,plain,(
  ( ! [X66,X64,X65,X63] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X64),sK15('const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X63)))))),X66,X65,X64)))) | s('type.num.num',X66) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X64),X65)))) ) | $spl34),
  inference(forward_demodulation,[],[f13578,f1183])).
fof(f13578,plain,(
  ( ! [X66,X64,X65,X63] : (s('type.num.num',X66) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X64),X65))) | s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X63))))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X64),sK15('const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X63)))))),X66,X65,X64))))) ) | $spl34),
  inference(forward_demodulation,[],[f13521,f1178])).
fof(f13521,plain,(
  ( ! [X66,X64,X65,X63] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X64),X65))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X66),s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X63))))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X64),sK15('const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X63)))))),X66,X65,X64))))) ) | $spl34),
  inference(superposition,[],[f229,f1183])).
fof(f13577,plain,(
  ( ! [X61,X59,X62,X60] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X60),sK15('const.arithmetic.EXP_2'(s('type.num.num',X59),s('type.num.num','const.arithmetic.ZERO_0')),X62,X61,X60)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X60),X61))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X62),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl34),
  inference(forward_demodulation,[],[f13520,f1213])).
fof(f13520,plain,(
  ( ! [X61,X59,X62,X60] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X60),X61))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X62),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X59),s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X60),sK15('const.arithmetic.EXP_2'(s('type.num.num',X59),s('type.num.num','const.arithmetic.ZERO_0')),X62,X61,X60))))) ) | $spl34),
  inference(superposition,[],[f229,f1213])).
fof(f13575,plain,(
  ( ! [X52,X50,X53,X51] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X51),sK15('const.arithmetic.-_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X50)),X53,X52,X51)))) | s('type.num.num',X53) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X51),X52)))) ) | $spl34),
  inference(forward_demodulation,[],[f13574,f1179])).
fof(f13574,plain,(
  ( ! [X52,X50,X53,X51] : (s('type.num.num',X53) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X51),X52))) | s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X50))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X51),sK15('const.arithmetic.-_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X50)),X53,X52,X51))))) ) | $spl34),
  inference(forward_demodulation,[],[f13518,f1178])).
fof(f13518,plain,(
  ( ! [X52,X50,X53,X51] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X51),X52))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X53),s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X50))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X51),sK15('const.arithmetic.-_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X50)),X53,X52,X51))))) ) | $spl34),
  inference(superposition,[],[f229,f1179])).
fof(f13573,plain,(
  ( ! [X47,X48,X46,X49] : (s('type.num.num',X46) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X47),sK15('const.arithmetic.-_2'(s('type.num.num',X46),s('type.num.num','const.arithmetic.ZERO_0')),X49,X48,X47)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X47),X48))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X49),s('type.num.num',X46)))) ) | $spl34),
  inference(forward_demodulation,[],[f13517,f1177])).
fof(f13517,plain,(
  ( ! [X47,X48,X46,X49] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X47),X48))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X49),s('type.num.num',X46))) | s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X46),s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X47),sK15('const.arithmetic.-_2'(s('type.num.num',X46),s('type.num.num','const.arithmetic.ZERO_0')),X49,X48,X47))))) ) | $spl34),
  inference(superposition,[],[f229,f1177])).
fof(f13572,plain,(
  ( ! [X45,X43,X44,X42] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X43),sK15('const.arithmetic.-_2'(s('type.num.num',X42),s('type.num.num',X42)),X45,X44,X43)))) | s('type.num.num',X45) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X43),X44)))) ) | $spl34),
  inference(forward_demodulation,[],[f13571,f1176])).
fof(f13571,plain,(
  ( ! [X45,X43,X44,X42] : (s('type.num.num',X45) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X43),X44))) | s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X42),s('type.num.num',X42))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X43),sK15('const.arithmetic.-_2'(s('type.num.num',X42),s('type.num.num',X42)),X45,X44,X43))))) ) | $spl34),
  inference(forward_demodulation,[],[f13516,f1178])).
fof(f13516,plain,(
  ( ! [X45,X43,X44,X42] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X43),X44))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X45),s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X42),s('type.num.num',X42))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X43),sK15('const.arithmetic.-_2'(s('type.num.num',X42),s('type.num.num',X42)),X45,X44,X43))))) ) | $spl34),
  inference(superposition,[],[f229,f1176])).
fof(f13570,plain,(
  ( ! [X39,X41,X40] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X39),sK15('const.num.|48|_0',X41,X40,X39)))) | s('type.num.num',X41) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X39),X40)))) ) | $spl34),
  inference(forward_demodulation,[],[f13569,f1171])).
fof(f13569,plain,(
  ( ! [X39,X41,X40] : (s('type.num.num',X41) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X39),X40))) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X39),sK15('const.num.|48|_0',X41,X40,X39))))) ) | $spl34),
  inference(forward_demodulation,[],[f13515,f1178])).
fof(f13515,plain,(
  ( ! [X39,X41,X40] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X39),X40))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X41),s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X39),sK15('const.num.|48|_0',X41,X40,X39))))) ) | $spl34),
  inference(superposition,[],[f229,f1171])).
fof(f13568,plain,(
  ( ! [X37,X35,X38,X36] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X36),sK15('const.list.LENGTH_1'(s('type.list.list'(X35),'const.list.NIL_0')),X38,X37,X36)))) | s('type.num.num',X38) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X36),X37)))) ) | $spl34),
  inference(forward_demodulation,[],[f13567,f3368])).
fof(f13567,plain,(
  ( ! [X37,X35,X38,X36] : (s('type.num.num',X38) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X36),X37))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X35),'const.list.NIL_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X36),sK15('const.list.LENGTH_1'(s('type.list.list'(X35),'const.list.NIL_0')),X38,X37,X36))))) ) | $spl34),
  inference(forward_demodulation,[],[f13514,f1178])).
fof(f13514,plain,(
  ( ! [X37,X35,X38,X36] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X36),X37))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X38),s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X35),'const.list.NIL_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X36),sK15('const.list.LENGTH_1'(s('type.list.list'(X35),'const.list.NIL_0')),X38,X37,X36))))) ) | $spl34),
  inference(superposition,[],[f229,f3368])).
fof(f13565,plain,(
  ( ! [X30,X28,X31,X29,X27] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X27),s('type.num.num',X28))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X29),sK15('const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X27))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X28)))),X31,X30,X29)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X29),X30))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X31),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X27),s('type.num.num',X28)))))))) ) | $spl34),
  inference(forward_demodulation,[],[f13512,f12139])).
fof(f13512,plain,(
  ( ! [X30,X28,X31,X29,X27] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X29),X30))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X31),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X27),s('type.num.num',X28))))))) | s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X27))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X28))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X29),sK15('const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X27))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X28)))),X31,X30,X29))))) ) | $spl34),
  inference(superposition,[],[f229,f12139])).
fof(f13564,plain,(
  ( ! [X26,X24,X23,X25] : (s('type.num.num',X23) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X24),sK15('const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X23)),X26,X25,X24)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X24),X25))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X26),s('type.num.num',X23)))) ) | $spl34),
  inference(forward_demodulation,[],[f13511,f2283])).
fof(f13511,plain,(
  ( ! [X26,X24,X23,X25] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X24),X25))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X26),s('type.num.num',X23))) | s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X23))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X24),sK15('const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X23)),X26,X25,X24))))) ) | $spl34),
  inference(superposition,[],[f229,f2283])).
fof(f13563,plain,(
  ( ! [X12,X10,X11,X9] : (s('type.num.num',X9) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X10),sK15('const.arithmetic.+_2'(s('type.num.num',X9),s('type.num.num','const.arithmetic.ZERO_0')),X12,X11,X10)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X10),X11))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X12),s('type.num.num',X9)))) ) | $spl34),
  inference(forward_demodulation,[],[f13508,f1178])).
fof(f13508,plain,(
  ( ! [X12,X10,X11,X9] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X10),X11))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X12),s('type.num.num',X9))) | s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X9),s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X10),sK15('const.arithmetic.+_2'(s('type.num.num',X9),s('type.num.num','const.arithmetic.ZERO_0')),X12,X11,X10))))) ) | $spl34),
  inference(superposition,[],[f229,f1178])).
fof(f13562,plain,(
  ( ! [X6,X8,X7] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),sK15('const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X8,X7,X6)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X7))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X8),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl34),
  inference(forward_demodulation,[],[f13507,f1965])).
fof(f13507,plain,(
  ( ! [X6,X8,X7] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X7))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X8),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),sK15('const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X8,X7,X6))))) ) | $spl34),
  inference(superposition,[],[f229,f1965])).
fof(f13561,plain,(
  ( ! [X4,X5,X3] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X3),sK15('const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X5,X4,X3)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X3),X4))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X5),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl34),
  inference(forward_demodulation,[],[f13506,f1212])).
fof(f13506,plain,(
  ( ! [X4,X5,X3] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X3),X4))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X5),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X3),sK15('const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X5,X4,X3))))) ) | $spl34),
  inference(superposition,[],[f229,f1212])).
fof(f13560,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK15('const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')),X2,X1,X0)))) | s('type.num.num',X2) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))) ) | $spl34),
  inference(forward_demodulation,[],[f13559,f1208])).
fof(f13559,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num',X2) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK15('const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')),X2,X1,X0))))) ) | $spl34),
  inference(forward_demodulation,[],[f13505,f1178])).
fof(f13505,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK15('const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')),X2,X1,X0))))) ) | $spl34),
  inference(superposition,[],[f229,f1208])).
fof(f13558,plain,(
  ( ! [X127,X128,X129] : (s('type.num.num',X129) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X127),X128))) | s('type.num.num',X129) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X127),sK15(X129,'const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.ZERO_0')),X128,X127))))) ) | $spl34),
  inference(forward_demodulation,[],[f13502,f2283])).
fof(f13502,plain,(
  ( ! [X127,X128,X129] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X127),X128))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X129))) | s('type.num.num',X129) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X127),sK15(X129,'const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.ZERO_0')),X128,X127))))) ) | $spl34),
  inference(superposition,[],[f229,f1206])).
fof(f13557,plain,(
  ( ! [X121,X118,X122,X120,X119] : (s('type.num.num',X122) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X120),X121))) | s('type.num.num',X122) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X120),sK15(X122,'const.numeral.iSUB_3'(s(bool,X118),s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X119)),X121,X120))))) ) | $spl34),
  inference(forward_demodulation,[],[f13500,f2283])).
fof(f13500,plain,(
  ( ! [X121,X118,X122,X120,X119] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X120),X121))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X122))) | s('type.num.num',X122) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X120),sK15(X122,'const.numeral.iSUB_3'(s(bool,X118),s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X119)),X121,X120))))) )),
  inference(superposition,[],[f229,f232])).
fof(f13494,plain,(
  ( ! [X97,X95,X98,X96] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X96),X97))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X95),s('type.num.num',X98))) | s('type.num.num',X98) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X96),sK15(X98,'const.numeral.iZ_1'(s('type.num.num',X95)),X97,X96))))) ) | $spl34),
  inference(superposition,[],[f229,f12222])).
fof(f13556,plain,(
  ( ! [X88,X87,X89,X86] : (s('type.num.num',X89) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X87),X88))) | s('type.num.num',X89) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X87),sK15(X89,'const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X86)),X88,X87))))) ) | $spl34),
  inference(forward_demodulation,[],[f13492,f2283])).
fof(f13492,plain,(
  ( ! [X88,X87,X89,X86] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X87),X88))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X89))) | s('type.num.num',X89) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X87),sK15(X89,'const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X86)),X88,X87))))) ) | $spl34),
  inference(superposition,[],[f229,f1174])).
fof(f13555,plain,(
  ( ! [X85,X83,X84,X82] : (s('type.num.num',X85) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X83),X84))) | s('type.num.num',X85) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X83),sK15(X85,'const.arithmetic.*_2'(s('type.num.num',X82),s('type.num.num','const.arithmetic.ZERO_0')),X84,X83))))) ) | $spl34),
  inference(forward_demodulation,[],[f13491,f2283])).
fof(f13491,plain,(
  ( ! [X85,X83,X84,X82] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X83),X84))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X85))) | s('type.num.num',X85) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X83),sK15(X85,'const.arithmetic.*_2'(s('type.num.num',X82),s('type.num.num','const.arithmetic.ZERO_0')),X84,X83))))) ) | $spl34),
  inference(superposition,[],[f229,f1173])).
fof(f13554,plain,(
  ( ! [X76,X74,X75] : (s('type.num.num',X76) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X74),X75))) | s('type.num.num',X76) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X74),sK15(X76,'const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X75,X74))))) ) | $spl34),
  inference(forward_demodulation,[],[f13489,f2283])).
fof(f13489,plain,(
  ( ! [X76,X74,X75] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X74),X75))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X76))) | s('type.num.num',X76) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X74),sK15(X76,'const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X75,X74))))) ) | $spl34),
  inference(superposition,[],[f229,f3195])).
fof(f13553,plain,(
  ( ! [X72,X71,X73] : (s('type.num.num',X73) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X71),X72))) | s('type.num.num',X73) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X71),sK15(X73,'const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X72,X71))))) ) | $spl34),
  inference(forward_demodulation,[],[f13488,f2283])).
fof(f13488,plain,(
  ( ! [X72,X71,X73] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X71),X72))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X73))) | s('type.num.num',X73) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X71),sK15(X73,'const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X72,X71))))) ) | $spl34),
  inference(superposition,[],[f229,f2641])).
fof(f13552,plain,(
  ( ! [X70,X68,X69,X67] : (s('type.num.num',X70) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X68),X69))) | s('type.num.num',X70) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X68),sK15(X70,'const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X67)))))),X69,X68))))) ) | $spl34),
  inference(forward_demodulation,[],[f13487,f2283])).
fof(f13487,plain,(
  ( ! [X70,X68,X69,X67] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X68),X69))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X70))) | s('type.num.num',X70) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X68),sK15(X70,'const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X67)))))),X69,X68))))) ) | $spl34),
  inference(superposition,[],[f229,f1184])).
fof(f13551,plain,(
  ( ! [X66,X64,X65,X63] : (s('type.num.num',X66) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X64),X65))) | s('type.num.num',X66) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X64),sK15(X66,'const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X63)))))),X65,X64))))) ) | $spl34),
  inference(forward_demodulation,[],[f13486,f2283])).
fof(f13486,plain,(
  ( ! [X66,X64,X65,X63] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X64),X65))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X66))) | s('type.num.num',X66) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X64),sK15(X66,'const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X63)))))),X65,X64))))) ) | $spl34),
  inference(superposition,[],[f229,f1183])).
fof(f13485,plain,(
  ( ! [X61,X59,X62,X60] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X60),X61))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X62))) | s('type.num.num',X62) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X60),sK15(X62,'const.arithmetic.EXP_2'(s('type.num.num',X59),s('type.num.num','const.arithmetic.ZERO_0')),X61,X60))))) ) | $spl34),
  inference(superposition,[],[f229,f1213])).
fof(f13550,plain,(
  ( ! [X52,X50,X53,X51] : (s('type.num.num',X53) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X51),X52))) | s('type.num.num',X53) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X51),sK15(X53,'const.arithmetic.-_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X50)),X52,X51))))) ) | $spl34),
  inference(forward_demodulation,[],[f13483,f2283])).
fof(f13483,plain,(
  ( ! [X52,X50,X53,X51] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X51),X52))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X53))) | s('type.num.num',X53) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X51),sK15(X53,'const.arithmetic.-_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X50)),X52,X51))))) ) | $spl34),
  inference(superposition,[],[f229,f1179])).
fof(f13482,plain,(
  ( ! [X47,X48,X46,X49] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X47),X48))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X46),s('type.num.num',X49))) | s('type.num.num',X49) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X47),sK15(X49,'const.arithmetic.-_2'(s('type.num.num',X46),s('type.num.num','const.arithmetic.ZERO_0')),X48,X47))))) ) | $spl34),
  inference(superposition,[],[f229,f1177])).
fof(f13549,plain,(
  ( ! [X45,X43,X44,X42] : (s('type.num.num',X45) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X43),X44))) | s('type.num.num',X45) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X43),sK15(X45,'const.arithmetic.-_2'(s('type.num.num',X42),s('type.num.num',X42)),X44,X43))))) ) | $spl34),
  inference(forward_demodulation,[],[f13481,f2283])).
fof(f13481,plain,(
  ( ! [X45,X43,X44,X42] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X43),X44))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X45))) | s('type.num.num',X45) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X43),sK15(X45,'const.arithmetic.-_2'(s('type.num.num',X42),s('type.num.num',X42)),X44,X43))))) ) | $spl34),
  inference(superposition,[],[f229,f1176])).
fof(f13548,plain,(
  ( ! [X39,X41,X40] : (s('type.num.num',X41) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X39),X40))) | s('type.num.num',X41) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X39),sK15(X41,'const.num.|48|_0',X40,X39))))) ) | $spl34),
  inference(forward_demodulation,[],[f13480,f2283])).
fof(f13480,plain,(
  ( ! [X39,X41,X40] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X39),X40))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X41))) | s('type.num.num',X41) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X39),sK15(X41,'const.num.|48|_0',X40,X39))))) ) | $spl34),
  inference(superposition,[],[f229,f1171])).
fof(f13547,plain,(
  ( ! [X37,X35,X38,X36] : (s('type.num.num',X38) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X36),X37))) | s('type.num.num',X38) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X36),sK15(X38,'const.list.LENGTH_1'(s('type.list.list'(X35),'const.list.NIL_0')),X37,X36))))) ) | $spl34),
  inference(forward_demodulation,[],[f13479,f2283])).
fof(f13479,plain,(
  ( ! [X37,X35,X38,X36] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X36),X37))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X38))) | s('type.num.num',X38) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X36),sK15(X38,'const.list.LENGTH_1'(s('type.list.list'(X35),'const.list.NIL_0')),X37,X36))))) ) | $spl34),
  inference(superposition,[],[f229,f3368])).
fof(f13477,plain,(
  ( ! [X30,X28,X31,X29,X27] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X29),X30))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X27),s('type.num.num',X28))))),s('type.num.num',X31))) | s('type.num.num',X31) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X29),sK15(X31,'const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X27))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X28)))),X30,X29))))) ) | $spl34),
  inference(superposition,[],[f229,f12139])).
fof(f13476,plain,(
  ( ! [X26,X24,X23,X25] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X24),X25))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X23),s('type.num.num',X26))) | s('type.num.num',X26) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X24),sK15(X26,'const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X23)),X25,X24))))) ) | $spl34),
  inference(superposition,[],[f229,f2283])).
fof(f13473,plain,(
  ( ! [X12,X10,X11,X9] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X10),X11))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X9),s('type.num.num',X12))) | s('type.num.num',X12) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X10),sK15(X12,'const.arithmetic.+_2'(s('type.num.num',X9),s('type.num.num','const.arithmetic.ZERO_0')),X11,X10))))) ) | $spl34),
  inference(superposition,[],[f229,f1178])).
fof(f13472,plain,(
  ( ! [X6,X8,X7] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X7))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X8))) | s('type.num.num',X8) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),sK15(X8,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X7,X6))))) ) | $spl34),
  inference(superposition,[],[f229,f1965])).
fof(f13471,plain,(
  ( ! [X4,X5,X3] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X3),X4))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X5))) | s('type.num.num',X5) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X3),sK15(X5,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X4,X3))))) ) | $spl34),
  inference(superposition,[],[f229,f1212])).
fof(f13546,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num',X2) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) | s('type.num.num',X2) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK15(X2,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')),X1,X0))))) ) | $spl34),
  inference(forward_demodulation,[],[f13470,f2283])).
fof(f13470,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X2))) | s('type.num.num',X2) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK15(X2,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')),X1,X0))))) ) | $spl34),
  inference(superposition,[],[f229,f1208])).
fof(f13469,plain,(
  ( ! [X4,X2,X3] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X3),s('type.num.num',X4))) | s('type.num.num',X4) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X2),sK15(X4,X3,'const.list.NIL_0',X2))))) ) | $spl34),
  inference(superposition,[],[f229,f3368])).
fof(f13465,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK15('const.arithmetic.ZERO_0','const.list.LENGTH_1'(s('type.list.list'(X0),X1)),X1,X0))))) ) | $spl34),
  inference(unit_resulting_resolution,[],[f1178,f229])).
fof(f13466,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK15('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.arithmetic.ZERO_0',X1,X0))))) ) | $spl34),
  inference(unit_resulting_resolution,[],[f2283,f229])).
fof(f13240,plain,(
  ( ! [X14,X17,X15,X16] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X16),X17))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X14),s('type.num.num',X15))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X14))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X16),sK14('const.arithmetic.NUMERAL_1'(s('type.num.num',X15)),'const.arithmetic.NUMERAL_1'(s('type.num.num',X14)),X17,X16))))) ) | $spl34),
  inference(superposition,[],[f228,f12139])).
fof(f13239,plain,(
  ( ! [X12,X13,X11] : (s('type.num.num',X11) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X12),X13))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X12),sK14(X11,'const.arithmetic.ZERO_0',X13,X12))))) ) | $spl34),
  inference(superposition,[],[f228,f2283])).
fof(f13236,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num',X0) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),X2))) | s('type.num.num',X0) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),sK14('const.arithmetic.ZERO_0',X0,X2,X1))))) ) | $spl34),
  inference(superposition,[],[f228,f1178])).
fof(f13300,plain,(
  ( ! [X127,X128,X129] : (s('type.num.num',X129) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X127),X128))) | s('type.num.num',X129) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X127),sK14('const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.ZERO_0')),X129,X128,X127))))) ) | $spl34),
  inference(forward_demodulation,[],[f13233,f1178])).
fof(f13233,plain,(
  ( ! [X127,X128,X129] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X127),X128))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X129),s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num',X129) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X127),sK14('const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.ZERO_0')),X129,X128,X127))))) ) | $spl34),
  inference(superposition,[],[f228,f1206])).
fof(f13299,plain,(
  ( ! [X121,X118,X122,X120,X119] : (s('type.num.num',X122) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X120),X121))) | s('type.num.num',X122) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X120),sK14('const.numeral.iSUB_3'(s(bool,X118),s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X119)),X122,X121,X120))))) ) | $spl34),
  inference(forward_demodulation,[],[f13231,f1178])).
fof(f13231,plain,(
  ( ! [X121,X118,X122,X120,X119] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X120),X121))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X122),s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num',X122) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X120),sK14('const.numeral.iSUB_3'(s(bool,X118),s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X119)),X122,X121,X120))))) )),
  inference(superposition,[],[f228,f232])).
fof(f13225,plain,(
  ( ! [X97,X95,X98,X96] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X96),X97))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X98),s('type.num.num',X95))) | s('type.num.num',X98) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X96),sK14('const.numeral.iZ_1'(s('type.num.num',X95)),X98,X97,X96))))) ) | $spl34),
  inference(superposition,[],[f228,f12222])).
fof(f13298,plain,(
  ( ! [X88,X87,X89,X86] : (s('type.num.num',X89) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X87),X88))) | s('type.num.num',X89) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X87),sK14('const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X86)),X89,X88,X87))))) ) | $spl34),
  inference(forward_demodulation,[],[f13223,f1178])).
fof(f13223,plain,(
  ( ! [X88,X87,X89,X86] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X87),X88))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X89),s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num',X89) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X87),sK14('const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X86)),X89,X88,X87))))) ) | $spl34),
  inference(superposition,[],[f228,f1174])).
fof(f13297,plain,(
  ( ! [X85,X83,X84,X82] : (s('type.num.num',X85) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X83),X84))) | s('type.num.num',X85) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X83),sK14('const.arithmetic.*_2'(s('type.num.num',X82),s('type.num.num','const.arithmetic.ZERO_0')),X85,X84,X83))))) ) | $spl34),
  inference(forward_demodulation,[],[f13222,f1178])).
fof(f13222,plain,(
  ( ! [X85,X83,X84,X82] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X83),X84))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X85),s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num',X85) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X83),sK14('const.arithmetic.*_2'(s('type.num.num',X82),s('type.num.num','const.arithmetic.ZERO_0')),X85,X84,X83))))) ) | $spl34),
  inference(superposition,[],[f228,f1173])).
fof(f13296,plain,(
  ( ! [X76,X74,X75] : (s('type.num.num',X76) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X74),X75))) | s('type.num.num',X76) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X74),sK14('const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X76,X75,X74))))) ) | $spl34),
  inference(forward_demodulation,[],[f13220,f1178])).
fof(f13220,plain,(
  ( ! [X76,X74,X75] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X74),X75))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X76),s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num',X76) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X74),sK14('const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X76,X75,X74))))) ) | $spl34),
  inference(superposition,[],[f228,f3195])).
fof(f13295,plain,(
  ( ! [X72,X71,X73] : (s('type.num.num',X73) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X71),X72))) | s('type.num.num',X73) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X71),sK14('const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X73,X72,X71))))) ) | $spl34),
  inference(forward_demodulation,[],[f13219,f1178])).
fof(f13219,plain,(
  ( ! [X72,X71,X73] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X71),X72))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X73),s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num',X73) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X71),sK14('const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X73,X72,X71))))) ) | $spl34),
  inference(superposition,[],[f228,f2641])).
fof(f13294,plain,(
  ( ! [X70,X68,X69,X67] : (s('type.num.num',X70) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X68),X69))) | s('type.num.num',X70) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X68),sK14('const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X67)))))),X70,X69,X68))))) ) | $spl34),
  inference(forward_demodulation,[],[f13218,f1178])).
fof(f13218,plain,(
  ( ! [X70,X68,X69,X67] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X68),X69))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X70),s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num',X70) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X68),sK14('const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X67)))))),X70,X69,X68))))) ) | $spl34),
  inference(superposition,[],[f228,f1184])).
fof(f13293,plain,(
  ( ! [X66,X64,X65,X63] : (s('type.num.num',X66) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X64),X65))) | s('type.num.num',X66) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X64),sK14('const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X63)))))),X66,X65,X64))))) ) | $spl34),
  inference(forward_demodulation,[],[f13217,f1178])).
fof(f13217,plain,(
  ( ! [X66,X64,X65,X63] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X64),X65))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X66),s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num',X66) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X64),sK14('const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X63)))))),X66,X65,X64))))) ) | $spl34),
  inference(superposition,[],[f228,f1183])).
fof(f13216,plain,(
  ( ! [X61,X59,X62,X60] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X60),X61))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X62),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num',X62) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X60),sK14('const.arithmetic.EXP_2'(s('type.num.num',X59),s('type.num.num','const.arithmetic.ZERO_0')),X62,X61,X60))))) ) | $spl34),
  inference(superposition,[],[f228,f1213])).
fof(f13292,plain,(
  ( ! [X52,X50,X53,X51] : (s('type.num.num',X53) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X51),X52))) | s('type.num.num',X53) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X51),sK14('const.arithmetic.-_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X50)),X53,X52,X51))))) ) | $spl34),
  inference(forward_demodulation,[],[f13214,f1178])).
fof(f13214,plain,(
  ( ! [X52,X50,X53,X51] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X51),X52))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X53),s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num',X53) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X51),sK14('const.arithmetic.-_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X50)),X53,X52,X51))))) ) | $spl34),
  inference(superposition,[],[f228,f1179])).
fof(f13213,plain,(
  ( ! [X47,X48,X46,X49] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X47),X48))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X49),s('type.num.num',X46))) | s('type.num.num',X49) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X47),sK14('const.arithmetic.-_2'(s('type.num.num',X46),s('type.num.num','const.arithmetic.ZERO_0')),X49,X48,X47))))) ) | $spl34),
  inference(superposition,[],[f228,f1177])).
fof(f13291,plain,(
  ( ! [X45,X43,X44,X42] : (s('type.num.num',X45) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X43),X44))) | s('type.num.num',X45) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X43),sK14('const.arithmetic.-_2'(s('type.num.num',X42),s('type.num.num',X42)),X45,X44,X43))))) ) | $spl34),
  inference(forward_demodulation,[],[f13212,f1178])).
fof(f13212,plain,(
  ( ! [X45,X43,X44,X42] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X43),X44))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X45),s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num',X45) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X43),sK14('const.arithmetic.-_2'(s('type.num.num',X42),s('type.num.num',X42)),X45,X44,X43))))) ) | $spl34),
  inference(superposition,[],[f228,f1176])).
fof(f13290,plain,(
  ( ! [X39,X41,X40] : (s('type.num.num',X41) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X39),X40))) | s('type.num.num',X41) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X39),sK14('const.num.|48|_0',X41,X40,X39))))) ) | $spl34),
  inference(forward_demodulation,[],[f13211,f1178])).
fof(f13211,plain,(
  ( ! [X39,X41,X40] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X39),X40))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X41),s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num',X41) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X39),sK14('const.num.|48|_0',X41,X40,X39))))) ) | $spl34),
  inference(superposition,[],[f228,f1171])).
fof(f13289,plain,(
  ( ! [X37,X35,X38,X36] : (s('type.num.num',X38) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X36),X37))) | s('type.num.num',X38) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X36),sK14('const.list.LENGTH_1'(s('type.list.list'(X35),'const.list.NIL_0')),X38,X37,X36))))) ) | $spl34),
  inference(forward_demodulation,[],[f13210,f1178])).
fof(f13210,plain,(
  ( ! [X37,X35,X38,X36] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X36),X37))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X38),s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num',X38) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X36),sK14('const.list.LENGTH_1'(s('type.list.list'(X35),'const.list.NIL_0')),X38,X37,X36))))) ) | $spl34),
  inference(superposition,[],[f228,f3368])).
fof(f13208,plain,(
  ( ! [X30,X28,X31,X29,X27] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X29),X30))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X31),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X27),s('type.num.num',X28))))))) | s('type.num.num',X31) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X29),sK14('const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X27))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X28)))),X31,X30,X29))))) ) | $spl34),
  inference(superposition,[],[f228,f12139])).
fof(f13207,plain,(
  ( ! [X26,X24,X23,X25] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X24),X25))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X26),s('type.num.num',X23))) | s('type.num.num',X26) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X24),sK14('const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X23)),X26,X25,X24))))) ) | $spl34),
  inference(superposition,[],[f228,f2283])).
fof(f13204,plain,(
  ( ! [X12,X10,X11,X9] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X10),X11))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X12),s('type.num.num',X9))) | s('type.num.num',X12) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X10),sK14('const.arithmetic.+_2'(s('type.num.num',X9),s('type.num.num','const.arithmetic.ZERO_0')),X12,X11,X10))))) ) | $spl34),
  inference(superposition,[],[f228,f1178])).
fof(f13203,plain,(
  ( ! [X6,X8,X7] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X7))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X8),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num',X8) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),sK14('const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X8,X7,X6))))) ) | $spl34),
  inference(superposition,[],[f228,f1965])).
fof(f13202,plain,(
  ( ! [X4,X5,X3] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X3),X4))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X5),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num',X5) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X3),sK14('const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X5,X4,X3))))) ) | $spl34),
  inference(superposition,[],[f228,f1212])).
fof(f13288,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num',X2) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) | s('type.num.num',X2) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK14('const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')),X2,X1,X0))))) ) | $spl34),
  inference(forward_demodulation,[],[f13201,f1178])).
fof(f13201,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num',X2) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK14('const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')),X2,X1,X0))))) ) | $spl34),
  inference(superposition,[],[f228,f1208])).
fof(f13285,plain,(
  ( ! [X127,X128,X129] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X127),sK14(X129,'const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.ZERO_0')),X128,X127)))) | s('type.num.num',X129) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X127),X128)))) ) | $spl34),
  inference(forward_demodulation,[],[f13284,f1206])).
fof(f13284,plain,(
  ( ! [X127,X128,X129] : (s('type.num.num',X129) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X127),X128))) | s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X127),sK14(X129,'const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.ZERO_0')),X128,X127))))) ) | $spl34),
  inference(forward_demodulation,[],[f13198,f2283])).
fof(f13198,plain,(
  ( ! [X127,X128,X129] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X127),X128))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X129))) | s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X127),sK14(X129,'const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.ZERO_0')),X128,X127))))) ) | $spl34),
  inference(superposition,[],[f228,f1206])).
fof(f13282,plain,(
  ( ! [X121,X118,X122,X120,X119] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X120),sK14(X122,'const.numeral.iSUB_3'(s(bool,X118),s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X119)),X121,X120)))) | s('type.num.num',X122) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X120),X121)))) ) | $spl34),
  inference(forward_demodulation,[],[f13281,f232])).
fof(f13281,plain,(
  ( ! [X121,X118,X122,X120,X119] : (s('type.num.num',X122) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X120),X121))) | s('type.num.num','const.numeral.iSUB_3'(s(bool,X118),s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X119))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X120),sK14(X122,'const.numeral.iSUB_3'(s(bool,X118),s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X119)),X121,X120))))) ) | $spl34),
  inference(forward_demodulation,[],[f13196,f2283])).
fof(f13196,plain,(
  ( ! [X121,X118,X122,X120,X119] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X120),X121))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X122))) | s('type.num.num','const.numeral.iSUB_3'(s(bool,X118),s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X119))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X120),sK14(X122,'const.numeral.iSUB_3'(s(bool,X118),s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X119)),X121,X120))))) )),
  inference(superposition,[],[f228,f232])).
fof(f13275,plain,(
  ( ! [X97,X95,X98,X96] : (s('type.num.num',X95) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X96),sK14(X98,'const.numeral.iZ_1'(s('type.num.num',X95)),X97,X96)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X96),X97))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X95),s('type.num.num',X98)))) ) | $spl34),
  inference(forward_demodulation,[],[f13190,f12222])).
fof(f13190,plain,(
  ( ! [X97,X95,X98,X96] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X96),X97))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X95),s('type.num.num',X98))) | s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X95))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X96),sK14(X98,'const.numeral.iZ_1'(s('type.num.num',X95)),X97,X96))))) ) | $spl34),
  inference(superposition,[],[f228,f12222])).
fof(f13273,plain,(
  ( ! [X88,X87,X89,X86] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X87),sK14(X89,'const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X86)),X88,X87)))) | s('type.num.num',X89) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X87),X88)))) ) | $spl34),
  inference(forward_demodulation,[],[f13272,f1174])).
fof(f13272,plain,(
  ( ! [X88,X87,X89,X86] : (s('type.num.num',X89) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X87),X88))) | s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X86))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X87),sK14(X89,'const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X86)),X88,X87))))) ) | $spl34),
  inference(forward_demodulation,[],[f13188,f2283])).
fof(f13188,plain,(
  ( ! [X88,X87,X89,X86] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X87),X88))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X89))) | s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X86))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X87),sK14(X89,'const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X86)),X88,X87))))) ) | $spl34),
  inference(superposition,[],[f228,f1174])).
fof(f13271,plain,(
  ( ! [X85,X83,X84,X82] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X83),sK14(X85,'const.arithmetic.*_2'(s('type.num.num',X82),s('type.num.num','const.arithmetic.ZERO_0')),X84,X83)))) | s('type.num.num',X85) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X83),X84)))) ) | $spl34),
  inference(forward_demodulation,[],[f13270,f1173])).
fof(f13270,plain,(
  ( ! [X85,X83,X84,X82] : (s('type.num.num',X85) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X83),X84))) | s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X82),s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X83),sK14(X85,'const.arithmetic.*_2'(s('type.num.num',X82),s('type.num.num','const.arithmetic.ZERO_0')),X84,X83))))) ) | $spl34),
  inference(forward_demodulation,[],[f13187,f2283])).
fof(f13187,plain,(
  ( ! [X85,X83,X84,X82] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X83),X84))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X85))) | s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X82),s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X83),sK14(X85,'const.arithmetic.*_2'(s('type.num.num',X82),s('type.num.num','const.arithmetic.ZERO_0')),X84,X83))))) ) | $spl34),
  inference(superposition,[],[f228,f1173])).
fof(f13268,plain,(
  ( ! [X76,X74,X75] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X74),sK14(X76,'const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X75,X74)))) | s('type.num.num',X76) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X74),X75)))) ) | $spl34),
  inference(forward_demodulation,[],[f13267,f3195])).
fof(f13267,plain,(
  ( ! [X76,X74,X75] : (s('type.num.num',X76) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X74),X75))) | s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X74),sK14(X76,'const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X75,X74))))) ) | $spl34),
  inference(forward_demodulation,[],[f13185,f2283])).
fof(f13185,plain,(
  ( ! [X76,X74,X75] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X74),X75))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X76))) | s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X74),sK14(X76,'const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X75,X74))))) ) | $spl34),
  inference(superposition,[],[f228,f3195])).
fof(f13266,plain,(
  ( ! [X72,X71,X73] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X71),sK14(X73,'const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X72,X71)))) | s('type.num.num',X73) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X71),X72)))) ) | $spl34),
  inference(forward_demodulation,[],[f13265,f2641])).
fof(f13265,plain,(
  ( ! [X72,X71,X73] : (s('type.num.num',X73) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X71),X72))) | s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X71),sK14(X73,'const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X72,X71))))) ) | $spl34),
  inference(forward_demodulation,[],[f13184,f2283])).
fof(f13184,plain,(
  ( ! [X72,X71,X73] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X71),X72))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X73))) | s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X71),sK14(X73,'const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X72,X71))))) ) | $spl34),
  inference(superposition,[],[f228,f2641])).
fof(f13264,plain,(
  ( ! [X70,X68,X69,X67] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X68),sK14(X70,'const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X67)))))),X69,X68)))) | s('type.num.num',X70) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X68),X69)))) ) | $spl34),
  inference(forward_demodulation,[],[f13263,f1184])).
fof(f13263,plain,(
  ( ! [X70,X68,X69,X67] : (s('type.num.num',X70) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X68),X69))) | s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X67))))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X68),sK14(X70,'const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X67)))))),X69,X68))))) ) | $spl34),
  inference(forward_demodulation,[],[f13183,f2283])).
fof(f13183,plain,(
  ( ! [X70,X68,X69,X67] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X68),X69))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X70))) | s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X67))))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X68),sK14(X70,'const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X67)))))),X69,X68))))) ) | $spl34),
  inference(superposition,[],[f228,f1184])).
fof(f13262,plain,(
  ( ! [X66,X64,X65,X63] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X64),sK14(X66,'const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X63)))))),X65,X64)))) | s('type.num.num',X66) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X64),X65)))) ) | $spl34),
  inference(forward_demodulation,[],[f13261,f1183])).
fof(f13261,plain,(
  ( ! [X66,X64,X65,X63] : (s('type.num.num',X66) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X64),X65))) | s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X63))))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X64),sK14(X66,'const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X63)))))),X65,X64))))) ) | $spl34),
  inference(forward_demodulation,[],[f13182,f2283])).
fof(f13182,plain,(
  ( ! [X66,X64,X65,X63] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X64),X65))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X66))) | s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X63))))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X64),sK14(X66,'const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X63)))))),X65,X64))))) ) | $spl34),
  inference(superposition,[],[f228,f1183])).
fof(f13260,plain,(
  ( ! [X61,X59,X62,X60] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X60),sK14(X62,'const.arithmetic.EXP_2'(s('type.num.num',X59),s('type.num.num','const.arithmetic.ZERO_0')),X61,X60)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X60),X61))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X62)))) ) | $spl34),
  inference(forward_demodulation,[],[f13181,f1213])).
fof(f13181,plain,(
  ( ! [X61,X59,X62,X60] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X60),X61))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X62))) | s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X59),s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X60),sK14(X62,'const.arithmetic.EXP_2'(s('type.num.num',X59),s('type.num.num','const.arithmetic.ZERO_0')),X61,X60))))) ) | $spl34),
  inference(superposition,[],[f228,f1213])).
fof(f13258,plain,(
  ( ! [X52,X50,X53,X51] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X51),sK14(X53,'const.arithmetic.-_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X50)),X52,X51)))) | s('type.num.num',X53) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X51),X52)))) ) | $spl34),
  inference(forward_demodulation,[],[f13257,f1179])).
fof(f13257,plain,(
  ( ! [X52,X50,X53,X51] : (s('type.num.num',X53) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X51),X52))) | s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X50))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X51),sK14(X53,'const.arithmetic.-_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X50)),X52,X51))))) ) | $spl34),
  inference(forward_demodulation,[],[f13179,f2283])).
fof(f13179,plain,(
  ( ! [X52,X50,X53,X51] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X51),X52))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X53))) | s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X50))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X51),sK14(X53,'const.arithmetic.-_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X50)),X52,X51))))) ) | $spl34),
  inference(superposition,[],[f228,f1179])).
fof(f13256,plain,(
  ( ! [X47,X48,X46,X49] : (s('type.num.num',X46) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X47),sK14(X49,'const.arithmetic.-_2'(s('type.num.num',X46),s('type.num.num','const.arithmetic.ZERO_0')),X48,X47)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X47),X48))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X46),s('type.num.num',X49)))) ) | $spl34),
  inference(forward_demodulation,[],[f13178,f1177])).
fof(f13178,plain,(
  ( ! [X47,X48,X46,X49] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X47),X48))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X46),s('type.num.num',X49))) | s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X46),s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X47),sK14(X49,'const.arithmetic.-_2'(s('type.num.num',X46),s('type.num.num','const.arithmetic.ZERO_0')),X48,X47))))) ) | $spl34),
  inference(superposition,[],[f228,f1177])).
fof(f13255,plain,(
  ( ! [X45,X43,X44,X42] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X43),sK14(X45,'const.arithmetic.-_2'(s('type.num.num',X42),s('type.num.num',X42)),X44,X43)))) | s('type.num.num',X45) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X43),X44)))) ) | $spl34),
  inference(forward_demodulation,[],[f13254,f1176])).
fof(f13254,plain,(
  ( ! [X45,X43,X44,X42] : (s('type.num.num',X45) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X43),X44))) | s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X42),s('type.num.num',X42))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X43),sK14(X45,'const.arithmetic.-_2'(s('type.num.num',X42),s('type.num.num',X42)),X44,X43))))) ) | $spl34),
  inference(forward_demodulation,[],[f13177,f2283])).
fof(f13177,plain,(
  ( ! [X45,X43,X44,X42] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X43),X44))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X45))) | s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X42),s('type.num.num',X42))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X43),sK14(X45,'const.arithmetic.-_2'(s('type.num.num',X42),s('type.num.num',X42)),X44,X43))))) ) | $spl34),
  inference(superposition,[],[f228,f1176])).
fof(f13253,plain,(
  ( ! [X39,X41,X40] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X39),sK14(X41,'const.num.|48|_0',X40,X39)))) | s('type.num.num',X41) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X39),X40)))) ) | $spl34),
  inference(forward_demodulation,[],[f13252,f1171])).
fof(f13252,plain,(
  ( ! [X39,X41,X40] : (s('type.num.num',X41) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X39),X40))) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X39),sK14(X41,'const.num.|48|_0',X40,X39))))) ) | $spl34),
  inference(forward_demodulation,[],[f13176,f2283])).
fof(f13176,plain,(
  ( ! [X39,X41,X40] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X39),X40))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X41))) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X39),sK14(X41,'const.num.|48|_0',X40,X39))))) ) | $spl34),
  inference(superposition,[],[f228,f1171])).
fof(f13251,plain,(
  ( ! [X37,X35,X38,X36] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X36),sK14(X38,'const.list.LENGTH_1'(s('type.list.list'(X35),'const.list.NIL_0')),X37,X36)))) | s('type.num.num',X38) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X36),X37)))) ) | $spl34),
  inference(forward_demodulation,[],[f13250,f3368])).
fof(f13250,plain,(
  ( ! [X37,X35,X38,X36] : (s('type.num.num',X38) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X36),X37))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X35),'const.list.NIL_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X36),sK14(X38,'const.list.LENGTH_1'(s('type.list.list'(X35),'const.list.NIL_0')),X37,X36))))) ) | $spl34),
  inference(forward_demodulation,[],[f13175,f2283])).
fof(f13175,plain,(
  ( ! [X37,X35,X38,X36] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X36),X37))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X38))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X35),'const.list.NIL_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X36),sK14(X38,'const.list.LENGTH_1'(s('type.list.list'(X35),'const.list.NIL_0')),X37,X36))))) ) | $spl34),
  inference(superposition,[],[f228,f3368])).
fof(f13248,plain,(
  ( ! [X30,X28,X31,X29,X27] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X27),s('type.num.num',X28))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X29),sK14(X31,'const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X27))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X28)))),X30,X29)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X29),X30))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X27),s('type.num.num',X28))))),s('type.num.num',X31)))) ) | $spl34),
  inference(forward_demodulation,[],[f13173,f12139])).
fof(f13173,plain,(
  ( ! [X30,X28,X31,X29,X27] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X29),X30))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X27),s('type.num.num',X28))))),s('type.num.num',X31))) | s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X27))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X28))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X29),sK14(X31,'const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X27))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X28)))),X30,X29))))) ) | $spl34),
  inference(superposition,[],[f228,f12139])).
fof(f13247,plain,(
  ( ! [X26,X24,X23,X25] : (s('type.num.num',X23) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X24),sK14(X26,'const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X23)),X25,X24)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X24),X25))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X23),s('type.num.num',X26)))) ) | $spl34),
  inference(forward_demodulation,[],[f13172,f2283])).
fof(f13172,plain,(
  ( ! [X26,X24,X23,X25] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X24),X25))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X23),s('type.num.num',X26))) | s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X23))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X24),sK14(X26,'const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X23)),X25,X24))))) ) | $spl34),
  inference(superposition,[],[f228,f2283])).
fof(f13246,plain,(
  ( ! [X12,X10,X11,X9] : (s('type.num.num',X9) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X10),sK14(X12,'const.arithmetic.+_2'(s('type.num.num',X9),s('type.num.num','const.arithmetic.ZERO_0')),X11,X10)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X10),X11))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X9),s('type.num.num',X12)))) ) | $spl34),
  inference(forward_demodulation,[],[f13169,f1178])).
fof(f13169,plain,(
  ( ! [X12,X10,X11,X9] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X10),X11))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X9),s('type.num.num',X12))) | s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X9),s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X10),sK14(X12,'const.arithmetic.+_2'(s('type.num.num',X9),s('type.num.num','const.arithmetic.ZERO_0')),X11,X10))))) ) | $spl34),
  inference(superposition,[],[f228,f1178])).
fof(f13245,plain,(
  ( ! [X6,X8,X7] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),sK14(X8,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X7,X6)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X7))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X8)))) ) | $spl34),
  inference(forward_demodulation,[],[f13168,f1965])).
fof(f13168,plain,(
  ( ! [X6,X8,X7] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X7))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X8))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),sK14(X8,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X7,X6))))) ) | $spl34),
  inference(superposition,[],[f228,f1965])).
fof(f13244,plain,(
  ( ! [X4,X5,X3] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X3),sK14(X5,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X4,X3)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X3),X4))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X5)))) ) | $spl34),
  inference(forward_demodulation,[],[f13167,f1212])).
fof(f13167,plain,(
  ( ! [X4,X5,X3] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X3),X4))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X5))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X3),sK14(X5,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X4,X3))))) ) | $spl34),
  inference(superposition,[],[f228,f1212])).
fof(f13243,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK14(X2,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')),X1,X0)))) | s('type.num.num',X2) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))) ) | $spl34),
  inference(forward_demodulation,[],[f13242,f1208])).
fof(f13242,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num',X2) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK14(X2,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')),X1,X0))))) ) | $spl34),
  inference(forward_demodulation,[],[f13166,f2283])).
fof(f13166,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X2))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK14(X2,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')),X1,X0))))) ) | $spl34),
  inference(superposition,[],[f228,f1208])).
fof(f13165,plain,(
  ( ! [X4,X2,X3] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X3),s('type.num.num',X4))) | s('type.num.num',X3) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X2),sK14(X4,X3,'const.list.NIL_0',X2))))) ) | $spl34),
  inference(superposition,[],[f228,f3368])).
fof(f13161,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK14('const.arithmetic.ZERO_0','const.list.LENGTH_1'(s('type.list.list'(X0),X1)),X1,X0))))) ) | $spl34),
  inference(unit_resulting_resolution,[],[f1178,f228])).
fof(f13162,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK14('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.arithmetic.ZERO_0',X1,X0))))) ) | $spl34),
  inference(unit_resulting_resolution,[],[f2283,f228])).
fof(f12697,plain,(
  ( ! [X2,X3] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X3))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X3))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2)))))) ) | $spl34),
  inference(superposition,[],[f12139,f235])).
fof(f12618,plain,(
  ( ! [X147,X148] : (s('type.num.num',X147) = s('type.num.num',sK11('const.numeral.iZ_1'(s('type.num.num',X147)),X148,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X148),s('type.num.num',X147))))) ) | $spl34),
  inference(forward_demodulation,[],[f12596,f12222])).
fof(f12596,plain,(
  ( ! [X147,X148] : (~p(s(bool,happ(s(fun('type.num.num',bool),X148),s('type.num.num',X147)))) | s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X147))) = s('type.num.num',sK11('const.numeral.iZ_1'(s('type.num.num',X147)),X148,'type.num.num'))) ) | $spl34),
  inference(superposition,[],[f222,f12222])).
fof(f12444,plain,(
  ( ! [X167] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X167),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X167)))))) ) | $spl34),
  inference(forward_demodulation,[],[f12443,f12222])).
fof(f12443,plain,(
  ( ! [X167] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X167))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X167)))))) ) | $spl34),
  inference(forward_demodulation,[],[f12372,f1186])).
fof(f12372,plain,(
  ( ! [X167] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X167))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X167))))),s('type.num.num','const.arithmetic.ZERO_0'))))) ) | $spl34),
  inference(superposition,[],[f3851,f12138])).
fof(f12281,plain,(
  ( ! [X39] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X39))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X39)))) ) | $spl34),
  inference(superposition,[],[f1188,f12138])).
fof(f12276,plain,(
  ( ! [X33,X32] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X32))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X33))) | s('type.num.num',X33) = s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X32)))) ) | $spl34),
  inference(superposition,[],[f255,f12138])).
fof(f12214,plain,(
  ( ! [X216,X215] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X215),s('type.num.num',X216))))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X215),s('type.num.num',X216))))),s('type.num.num','const.arithmetic.ZERO_0'))))) ) | $spl34),
  inference(forward_demodulation,[],[f12213,f12139])).
fof(f12213,plain,(
  ( ! [X216,X215] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X215),s('type.num.num',X216))))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X215))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X216)))))))) ) | $spl34),
  inference(forward_demodulation,[],[f12113,f1186])).
fof(f12113,plain,(
  ( ! [X216,X215] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X215),s('type.num.num',X216))))))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X215))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X216)))))))) ) | $spl34),
  inference(superposition,[],[f3852,f247])).
fof(f12204,plain,(
  ( ! [X175,X176] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X175),s('type.num.num',X176))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X175),s('type.num.num',X176))))),s('type.num.num','const.arithmetic.ZERO_0'))))) ) | $spl34),
  inference(forward_demodulation,[],[f12203,f12139])).
fof(f12203,plain,(
  ( ! [X175,X176] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X175),s('type.num.num',X176))))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X175))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X176)))))) ) | $spl34),
  inference(forward_demodulation,[],[f12093,f1186])).
fof(f12093,plain,(
  ( ! [X175,X176] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X175),s('type.num.num',X176))))))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X175))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X176)))))) ) | $spl34),
  inference(superposition,[],[f1215,f247])).
fof(f12202,plain,(
  ( ! [X173,X174] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X173),s('type.num.num',X174))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X173),s('type.num.num',X174))))),s('type.num.num','const.arithmetic.ZERO_0'))))) ) | $spl34),
  inference(forward_demodulation,[],[f12201,f12139])).
fof(f12201,plain,(
  ( ! [X173,X174] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X173),s('type.num.num',X174))))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X173))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X174)))))) ) | $spl34),
  inference(forward_demodulation,[],[f12092,f1186])).
fof(f12092,plain,(
  ( ! [X173,X174] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X173),s('type.num.num',X174))))))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X173))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X174)))))) ) | $spl34),
  inference(superposition,[],[f1214,f247])).
fof(f12198,plain,(
  ( ! [X165,X166] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X165),s('type.num.num',X166))))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X165))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X166)))))) ) | $spl34),
  inference(forward_demodulation,[],[f12088,f12138])).
fof(f12088,plain,(
  ( ! [X165,X166] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X165),s('type.num.num',X166))))))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X165))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X166)))))) ) | $spl34),
  inference(superposition,[],[f1188,f247])).
fof(f12184,plain,(
  ( ! [X114,X115,X113] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X115))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X113),s('type.num.num',X114))))))) | s('type.num.num',X115) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X113))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X114)))))) ) | $spl34),
  inference(forward_demodulation,[],[f12066,f12138])).
fof(f12066,plain,(
  ( ! [X114,X115,X113] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X115))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X113),s('type.num.num',X114))))))))) | s('type.num.num',X115) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X113))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X114)))))) )),
  inference(superposition,[],[f255,f247])).
fof(f12180,plain,(
  ( ! [X2,X3] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X3),s('type.num.num',X2))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X3)))))))) ) | $spl34),
  inference(forward_demodulation,[],[f12022,f12139])).
fof(f12022,plain,(
  ( ! [X2,X3] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X3))))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X3))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2)))))) )),
  inference(superposition,[],[f247,f235])).
fof(f12179,plain,(
  ( ! [X2] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl34),
  inference(forward_demodulation,[],[f12021,f12138])).
fof(f12021,plain,(
  ( ! [X2] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) ) | $spl34),
  inference(superposition,[],[f247,f1965])).
fof(f12178,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl34),
  inference(forward_demodulation,[],[f12020,f12138])).
fof(f12020,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) ) | $spl34),
  inference(superposition,[],[f247,f1212])).
fof(f12141,plain,(
  ( ! [X2] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X2))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2)))))) ) | $spl34),
  inference(forward_demodulation,[],[f11984,f12138])).
fof(f11984,plain,(
  ( ! [X2] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X2)))))))) ) | $spl34),
  inference(superposition,[],[f247,f1965])).
fof(f12140,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X1))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))) ) | $spl34),
  inference(forward_demodulation,[],[f11983,f12138])).
fof(f11983,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X1)))))))) ) | $spl34),
  inference(superposition,[],[f247,f1212])).
fof(f11679,plain,(
  ( ! [X1] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))) ) | $spl34),
  inference(superposition,[],[f3852,f1186])).
fof(f11865,plain,(
  ( ! [X28] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X28))))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X28))),s('type.num.num','const.arithmetic.ZERO_0'))))) ) | $spl34),
  inference(forward_demodulation,[],[f11864,f198])).
fof(f11864,plain,(
  ( ! [X28] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X28))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X28)))))))) ) | $spl34),
  inference(forward_demodulation,[],[f11673,f1186])).
fof(f11673,plain,(
  ( ! [X28] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X28))))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X28)))))))) ) | $spl34),
  inference(superposition,[],[f3852,f198])).
fof(f11391,plain,(
  ( ! [X2,X1] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X1))) | s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X2))),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl34),
  inference(superposition,[],[f1219,f235])).
fof(f11310,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))))))) ) | $spl34),
  inference(forward_demodulation,[],[f11275,f1208])).
fof(f11275,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))))))) ) | $spl34),
  inference(unit_resulting_resolution,[],[f5028,f255])).
fof(f11117,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))))))) ) | $spl34),
  inference(forward_demodulation,[],[f11083,f1208])).
fof(f11083,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))))))) ) | $spl34),
  inference(unit_resulting_resolution,[],[f9837,f255])).
fof(f11078,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | $spl34),
  inference(forward_demodulation,[],[f11077,f1208])).
fof(f11077,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | $spl34),
  inference(unit_resulting_resolution,[],[f9836,f255])).
fof(f11059,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))))))) ) | $spl34),
  inference(forward_demodulation,[],[f11024,f1208])).
fof(f11024,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))))))) ) | $spl34),
  inference(unit_resulting_resolution,[],[f9793,f255])).
fof(f11019,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))))))) ) | $spl34),
  inference(forward_demodulation,[],[f10985,f1208])).
fof(f10985,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))))))) ) | $spl34),
  inference(unit_resulting_resolution,[],[f9557,f255])).
fof(f10848,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))))))) ) | $spl34),
  inference(forward_demodulation,[],[f10813,f1208])).
fof(f10813,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))))))) ) | $spl34),
  inference(unit_resulting_resolution,[],[f9394,f255])).
fof(f10806,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))))))) ) | $spl34),
  inference(forward_demodulation,[],[f10772,f1208])).
fof(f10772,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))))))) ) | $spl34),
  inference(unit_resulting_resolution,[],[f4902,f255])).
fof(f10549,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))))))),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl34),
  inference(unit_resulting_resolution,[],[f179,f4868,f251])).
fof(f10550,plain,(
  ( ! [X0,X1] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))))))),s('type.num.num','const.arithmetic.ZERO_0'))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1))))))),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl34),
  inference(unit_resulting_resolution,[],[f4868,f4868,f251])).
fof(f10537,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | $spl34),
  inference(forward_demodulation,[],[f10536,f1208])).
fof(f10536,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | $spl34),
  inference(unit_resulting_resolution,[],[f4789,f255])).
fof(f10415,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.ZERO_0'))) | $spl34),
  inference(unit_resulting_resolution,[],[f179,f4785,f251])).
fof(f10403,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))))))) ) | $spl34),
  inference(forward_demodulation,[],[f10368,f1208])).
fof(f10368,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))))))) ) | $spl34),
  inference(unit_resulting_resolution,[],[f4783,f255])).
fof(f10182,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))))))),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl34),
  inference(unit_resulting_resolution,[],[f179,f4748,f251])).
fof(f10183,plain,(
  ( ! [X0,X1] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))))))),s('type.num.num','const.arithmetic.ZERO_0'))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1))))))),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl34),
  inference(unit_resulting_resolution,[],[f4748,f4748,f251])).
fof(f10169,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))))))) ) | $spl34),
  inference(forward_demodulation,[],[f10135,f1208])).
fof(f10135,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))))))) ) | $spl34),
  inference(unit_resulting_resolution,[],[f4657,f255])).
fof(f10021,plain,(
  ( ! [X21,X20] : (s(bool,'F_0') = s(bool,sK11('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X20))))),s('type.num.num','const.arithmetic.ZERO_0')),X21,bool)) | ~p(s(bool,happ(s(fun(bool,bool),X21),s(bool,'F_0'))))) ) | $spl34),
  inference(forward_demodulation,[],[f10013,f4556])).
fof(f10013,plain,(
  ( ! [X21,X20] : (~p(s(bool,happ(s(fun(bool,bool),X21),s(bool,'F_0')))) | s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X20))))),s('type.num.num','const.arithmetic.ZERO_0'))) = s(bool,sK11('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X20))))),s('type.num.num','const.arithmetic.ZERO_0')),X21,bool))) ) | $spl34),
  inference(superposition,[],[f222,f4556])).
fof(f10020,plain,(
  ( ! [X12,X13] : (s(bool,X13) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X12))))),s('type.num.num','const.arithmetic.ZERO_0'))) | s(bool,'T_0') = s(bool,X13)) ) | $spl34),
  inference(subsumption_resolution,[],[f10007,f179])).
fof(f10007,plain,(
  ( ! [X12,X13] : (p(s(bool,'F_0')) | s(bool,X13) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X12))))),s('type.num.num','const.arithmetic.ZERO_0'))) | s(bool,'T_0') = s(bool,X13)) ) | $spl34),
  inference(superposition,[],[f428,f4556])).
fof(f9963,plain,(
  ( ! [X6] : (s(bool,'F_0') = s(bool,sK11('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.ZERO_0')),X6,bool)) | ~p(s(bool,happ(s(fun(bool,bool),X6),s(bool,'F_0'))))) ) | $spl34),
  inference(forward_demodulation,[],[f9955,f4459])).
fof(f9955,plain,(
  ( ! [X6] : (~p(s(bool,happ(s(fun(bool,bool),X6),s(bool,'F_0')))) | s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.ZERO_0'))) = s(bool,sK11('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.ZERO_0')),X6,bool))) ) | $spl34),
  inference(superposition,[],[f222,f4459])).
fof(f9962,plain,(
  ( ! [X4] : (s(bool,X4) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.ZERO_0'))) | s(bool,'T_0') = s(bool,X4)) ) | $spl34),
  inference(subsumption_resolution,[],[f9950,f179])).
fof(f9950,plain,(
  ( ! [X4] : (p(s(bool,'F_0')) | s(bool,X4) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.ZERO_0'))) | s(bool,'T_0') = s(bool,X4)) ) | $spl34),
  inference(superposition,[],[f428,f4459])).
fof(f9839,plain,(
  ( ! [X2] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X2)))))))))))) ) | $spl34),
  inference(superposition,[],[f4186,f202])).
fof(f9838,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1)))))))))))) ) | $spl34),
  inference(superposition,[],[f4186,f199])).
fof(f9795,plain,(
  ( ! [X2] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X2)))))))))))) ) | $spl34),
  inference(superposition,[],[f4185,f202])).
fof(f9794,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1)))))))))))) ) | $spl34),
  inference(superposition,[],[f4185,f199])).
fof(f9571,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))))))),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl34),
  inference(unit_resulting_resolution,[],[f179,f4150,f251])).
fof(f9572,plain,(
  ( ! [X0,X1] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))))))),s('type.num.num','const.arithmetic.ZERO_0'))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))))))),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl34),
  inference(unit_resulting_resolution,[],[f4150,f4150,f251])).
fof(f9559,plain,(
  ( ! [X2] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X2)))))))))))) ) | $spl34),
  inference(superposition,[],[f4146,f202])).
fof(f9558,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1)))))))))))) ) | $spl34),
  inference(superposition,[],[f4146,f199])).
fof(f9396,plain,(
  ( ! [X2] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X2)))))))))))) ) | $spl34),
  inference(superposition,[],[f4145,f202])).
fof(f9395,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1)))))))))))) ) | $spl34),
  inference(superposition,[],[f4145,f199])).
fof(f9269,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))))))),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl34),
  inference(unit_resulting_resolution,[],[f179,f4110,f251])).
fof(f9270,plain,(
  ( ! [X0,X1] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))))))),s('type.num.num','const.arithmetic.ZERO_0'))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))))))),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl34),
  inference(unit_resulting_resolution,[],[f4110,f4110,f251])).
fof(f9149,plain,(
  ( ! [X2] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X2)))))))))))) ) | $spl34),
  inference(superposition,[],[f4020,f202])).
fof(f9148,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1)))))))))))) ) | $spl34),
  inference(superposition,[],[f4020,f199])).
fof(f9103,plain,(
  ( ! [X2] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X2)))))))))))) ) | $spl34),
  inference(superposition,[],[f4019,f202])).
fof(f9102,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1)))))))))))) ) | $spl34),
  inference(superposition,[],[f4019,f199])).
fof(f8982,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))))))))))) ) | $spl34),
  inference(forward_demodulation,[],[f8944,f1208])).
fof(f8944,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))))))))))) ) | $spl34),
  inference(unit_resulting_resolution,[],[f3976,f255])).
fof(f8932,plain,(
  ( ! [X2] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X2)))))))))))) ) | $spl34),
  inference(superposition,[],[f3975,f202])).
fof(f8931,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1)))))))))))) ) | $spl34),
  inference(superposition,[],[f3975,f199])).
fof(f8933,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))))))))))) ) | $spl34),
  inference(forward_demodulation,[],[f8895,f1208])).
fof(f8895,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))))))))))) ) | $spl34),
  inference(unit_resulting_resolution,[],[f3975,f255])).
fof(f8483,plain,(
  ( ! [X28,X29] : (s(bool,'F_0') = s(bool,sK11('const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.ZERO_0')),X29,bool)) | ~p(s(bool,happ(s(fun(bool,bool),X29),s(bool,X28)))) | s(bool,'T_0') = s(bool,X28)) ) | $spl34),
  inference(forward_demodulation,[],[f8421,f1196])).
fof(f8421,plain,(
  ( ! [X28,X29] : (~p(s(bool,happ(s(fun(bool,bool),X29),s(bool,X28)))) | s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s(bool,sK11('const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.ZERO_0')),X29,bool)) | s(bool,'T_0') = s(bool,X28)) ) | $spl34),
  inference(superposition,[],[f222,f5652])).
fof(f4972,plain,(
  ( ! [X1] : (s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl34),
  inference(superposition,[],[f243,f1212])).
fof(f4056,plain,(
  ( ! [X1] : (s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))) ) | $spl34),
  inference(superposition,[],[f237,f1212])).
fof(f4973,plain,(
  ( ! [X2] : (s(bool,'const.prim_rec.<_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl34),
  inference(superposition,[],[f243,f1965])).
fof(f4057,plain,(
  ( ! [X2] : (s(bool,'const.prim_rec.<_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2)))))) ) | $spl34),
  inference(superposition,[],[f237,f1965])).
fof(f3789,plain,(
  ( ! [X1] : (s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X1))) | s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))) ) | $spl34),
  inference(superposition,[],[f1185,f208])).
fof(f3805,plain,(
  ( ! [X12,X11] : (s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X11))) = s(bool,sK11('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X11)))),X12,bool)) | ~p(s(bool,happ(s(fun(bool,bool),X12),s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X11))))))) ) | $spl34),
  inference(forward_demodulation,[],[f3797,f1185])).
fof(f3797,plain,(
  ( ! [X12,X11] : (~p(s(bool,happ(s(fun(bool,bool),X12),s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X11)))))) | s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X11))))) = s(bool,sK11('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X11)))),X12,bool))) ) | $spl34),
  inference(superposition,[],[f222,f1185])).
fof(f3920,plain,(
  ( ! [X2] : (s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X2))) | s(bool,'T_0') = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2))),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl34),
  inference(superposition,[],[f1187,f208])).
fof(f3937,plain,(
  ( ! [X12,X13] : (s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X12))) = s(bool,sK11('const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X12))),s('type.num.num','const.arithmetic.ZERO_0')),X13,bool)) | ~p(s(bool,happ(s(fun(bool,bool),X13),s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X12))))))) ) | $spl34),
  inference(forward_demodulation,[],[f3929,f1187])).
fof(f3929,plain,(
  ( ! [X12,X13] : (~p(s(bool,happ(s(fun(bool,bool),X13),s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X12)))))) | s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X12))),s('type.num.num','const.arithmetic.ZERO_0'))) = s(bool,sK11('const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X12))),s('type.num.num','const.arithmetic.ZERO_0')),X13,bool))) ) | $spl34),
  inference(superposition,[],[f222,f1187])).
fof(f4267,plain,(
  ( ! [X1] : (s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X1))) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl34),
  inference(forward_demodulation,[],[f4251,f3621])).
fof(f4251,plain,(
  ( ! [X1] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X1))) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl34),
  inference(superposition,[],[f238,f1212])).
fof(f4939,plain,(
  ( ! [X1] : (s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X1))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))) ) | $spl34),
  inference(superposition,[],[f243,f1212])).
fof(f4741,plain,(
  ( ! [X2] : (s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X2))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2)))))) ) | $spl34),
  inference(forward_demodulation,[],[f4693,f3622])).
fof(f4693,plain,(
  ( ! [X2] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X2))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2)))))) ) | $spl34),
  inference(superposition,[],[f241,f1965])).
fof(f4268,plain,(
  ( ! [X2] : (s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X2))) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl34),
  inference(forward_demodulation,[],[f4252,f3622])).
fof(f4252,plain,(
  ( ! [X2] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X2))) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl34),
  inference(superposition,[],[f238,f1965])).
fof(f4088,plain,(
  ( ! [X1] : (s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X1))) = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl34),
  inference(superposition,[],[f237,f1212])).
fof(f4940,plain,(
  ( ! [X2] : (s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X2))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2)))))) ) | $spl34),
  inference(superposition,[],[f243,f1965])).
fof(f4089,plain,(
  ( ! [X2] : (s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X2))) = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl34),
  inference(superposition,[],[f237,f1965])).
fof(f3534,plain,(
  ( ! [X16] : (s(bool,'T_0') = s(bool,sK11('const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0')),X16,bool)) | ~p(s(bool,happ(s(fun(bool,bool),X16),s(bool,'T_0'))))) ) | $spl34),
  inference(forward_demodulation,[],[f3490,f1195])).
fof(f3490,plain,(
  ( ! [X16] : (~p(s(bool,happ(s(fun(bool,bool),X16),s(bool,'T_0')))) | s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s(bool,sK11('const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0')),X16,bool))) ) | $spl34),
  inference(superposition,[],[f222,f1195])).
fof(f3541,plain,(
  ( ! [X26,X27] : (s(bool,'T_0') = s(bool,sK11('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X26)),X27,bool)) | ~p(s(bool,happ(s(fun(bool,bool),X27),s(bool,'T_0'))))) ) | $spl34),
  inference(forward_demodulation,[],[f3496,f1180])).
fof(f3496,plain,(
  ( ! [X26,X27] : (~p(s(bool,happ(s(fun(bool,bool),X27),s(bool,'T_0')))) | s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X26))) = s(bool,sK11('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X26)),X27,bool))) ) | $spl34),
  inference(superposition,[],[f222,f1180])).
fof(f3544,plain,(
  ( ! [X30,X29] : (s(bool,'T_0') = s(bool,sK11('const.arithmetic.>=_2'(s('type.num.num',X29),s('type.num.num','const.arithmetic.ZERO_0')),X30,bool)) | ~p(s(bool,happ(s(fun(bool,bool),X30),s(bool,'T_0'))))) ) | $spl34),
  inference(forward_demodulation,[],[f3543,f1180])).
fof(f3543,plain,(
  ( ! [X30,X29] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X29))) = s(bool,sK11('const.arithmetic.>=_2'(s('type.num.num',X29),s('type.num.num','const.arithmetic.ZERO_0')),X30,bool)) | ~p(s(bool,happ(s(fun(bool,bool),X30),s(bool,'T_0'))))) ) | $spl34),
  inference(forward_demodulation,[],[f3498,f234])).
fof(f3498,plain,(
  ( ! [X30,X29] : (~p(s(bool,happ(s(fun(bool,bool),X30),s(bool,'T_0')))) | s(bool,'const.arithmetic.>=_2'(s('type.num.num',X29),s('type.num.num','const.arithmetic.ZERO_0'))) = s(bool,sK11('const.arithmetic.>=_2'(s('type.num.num',X29),s('type.num.num','const.arithmetic.ZERO_0')),X30,bool))) ) | $spl34),
  inference(superposition,[],[f222,f1181])).
fof(f3536,plain,(
  ( ! [X17,X18] : (s(bool,'F_0') = s(bool,sK11('const.arithmetic.>_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X17)),X18,bool)) | ~p(s(bool,happ(s(fun(bool,bool),X18),s(bool,'F_0'))))) ) | $spl34),
  inference(forward_demodulation,[],[f3535,f184])).
fof(f3535,plain,(
  ( ! [X17,X18] : (s(bool,'const.prim_rec.<_2'(s('type.num.num',X17),s('type.num.num','const.arithmetic.ZERO_0'))) = s(bool,sK11('const.arithmetic.>_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X17)),X18,bool)) | ~p(s(bool,happ(s(fun(bool,bool),X18),s(bool,'F_0'))))) ) | $spl34),
  inference(forward_demodulation,[],[f3491,f233])).
fof(f3491,plain,(
  ( ! [X17,X18] : (~p(s(bool,happ(s(fun(bool,bool),X18),s(bool,'F_0')))) | s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X17))) = s(bool,sK11('const.arithmetic.>_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X17)),X18,bool))) ) | $spl34),
  inference(superposition,[],[f222,f1175])).
fof(f3539,plain,(
  ( ! [X24] : (s(bool,'F_0') = s(bool,sK11('const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.ZERO_0')),X24,bool)) | ~p(s(bool,happ(s(fun(bool,bool),X24),s(bool,'F_0'))))) ) | $spl34),
  inference(forward_demodulation,[],[f3494,f1196])).
fof(f3494,plain,(
  ( ! [X24] : (~p(s(bool,happ(s(fun(bool,bool),X24),s(bool,'F_0')))) | s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s(bool,sK11('const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.ZERO_0')),X24,bool))) ) | $spl34),
  inference(superposition,[],[f222,f1196])).
fof(f4377,plain,(
  ( ! [X4] : (s(bool,'F_0') = s(bool,sK11('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0')),X4,bool)) | ~p(s(bool,happ(s(fun(bool,bool),X4),s(bool,'F_0'))))) ) | $spl34),
  inference(forward_demodulation,[],[f4370,f1902])).
fof(f4370,plain,(
  ( ! [X4] : (~p(s(bool,happ(s(fun(bool,bool),X4),s(bool,'F_0')))) | s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0'))) = s(bool,sK11('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0')),X4,bool))) ) | $spl34),
  inference(superposition,[],[f222,f1902])).
fof(f5211,plain,(
  ( ! [X14,X13] : (s(bool,'F_0') = s(bool,sK11('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X13))),s('type.num.num','const.arithmetic.ZERO_0')),X14,bool)) | ~p(s(bool,happ(s(fun(bool,bool),X14),s(bool,'F_0'))))) ) | $spl34),
  inference(forward_demodulation,[],[f5204,f2700])).
fof(f5204,plain,(
  ( ! [X14,X13] : (~p(s(bool,happ(s(fun(bool,bool),X14),s(bool,'F_0')))) | s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X13))),s('type.num.num','const.arithmetic.ZERO_0'))) = s(bool,sK11('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X13))),s('type.num.num','const.arithmetic.ZERO_0')),X14,bool))) ) | $spl34),
  inference(superposition,[],[f222,f2700])).
fof(f3868,plain,(
  ( ! [X14,X13] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num',X13),s('type.num.num','const.arithmetic.ZERO_0'))) = s(bool,sK11('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X13))),s('type.num.num','const.arithmetic.ZERO_0')),X14,bool)) | ~p(s(bool,happ(s(fun(bool,bool),X14),s(bool,'const.arithmetic.<=_2'(s('type.num.num',X13),s('type.num.num','const.arithmetic.ZERO_0'))))))) ) | $spl34),
  inference(forward_demodulation,[],[f3860,f1186])).
fof(f3860,plain,(
  ( ! [X14,X13] : (~p(s(bool,happ(s(fun(bool,bool),X14),s(bool,'const.arithmetic.<=_2'(s('type.num.num',X13),s('type.num.num','const.arithmetic.ZERO_0')))))) | s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X13))),s('type.num.num','const.arithmetic.ZERO_0'))) = s(bool,sK11('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X13))),s('type.num.num','const.arithmetic.ZERO_0')),X14,bool))) ) | $spl34),
  inference(superposition,[],[f222,f1186])).
fof(f3554,plain,(
  ( ! [X52,X51] : (s('type.num.num',X51) = s('type.num.num',sK11('const.arithmetic.-_2'(s('type.num.num',X51),s('type.num.num','const.arithmetic.ZERO_0')),X52,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X52),s('type.num.num',X51))))) ) | $spl34),
  inference(forward_demodulation,[],[f3510,f1177])).
fof(f3510,plain,(
  ( ! [X52,X51] : (~p(s(bool,happ(s(fun('type.num.num',bool),X52),s('type.num.num',X51)))) | s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X51),s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num',sK11('const.arithmetic.-_2'(s('type.num.num',X51),s('type.num.num','const.arithmetic.ZERO_0')),X52,'type.num.num'))) ) | $spl34),
  inference(superposition,[],[f222,f1177])).
fof(f3550,plain,(
  ( ! [X45,X46] : (s('type.num.num',X45) = s('type.num.num',sK11('const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X45)),X46,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X46),s('type.num.num',X45))))) ) | $spl34),
  inference(forward_demodulation,[],[f3506,f2283])).
fof(f3506,plain,(
  ( ! [X45,X46] : (~p(s(bool,happ(s(fun('type.num.num',bool),X46),s('type.num.num',X45)))) | s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X45))) = s('type.num.num',sK11('const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X45)),X46,'type.num.num'))) ) | $spl34),
  inference(superposition,[],[f222,f2283])).
fof(f3549,plain,(
  ( ! [X37,X38] : (s('type.num.num',X37) = s('type.num.num',sK11('const.arithmetic.+_2'(s('type.num.num',X37),s('type.num.num','const.arithmetic.ZERO_0')),X38,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X38),s('type.num.num',X37))))) ) | $spl34),
  inference(forward_demodulation,[],[f3503,f1178])).
fof(f3503,plain,(
  ( ! [X37,X38] : (~p(s(bool,happ(s(fun('type.num.num',bool),X38),s('type.num.num',X37)))) | s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X37),s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num',sK11('const.arithmetic.+_2'(s('type.num.num',X37),s('type.num.num','const.arithmetic.ZERO_0')),X38,'type.num.num'))) ) | $spl34),
  inference(superposition,[],[f222,f1178])).
fof(f3546,plain,(
  ( ! [X34] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',sK11('const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')),X34,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X34),s('type.num.num','const.arithmetic.ZERO_0'))))) ) | $spl34),
  inference(forward_demodulation,[],[f3500,f1208])).
fof(f3500,plain,(
  ( ! [X34] : (~p(s(bool,happ(s(fun('type.num.num',bool),X34),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num',sK11('const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')),X34,'type.num.num'))) ) | $spl34),
  inference(superposition,[],[f222,f1208])).
fof(f3552,plain,(
  ( ! [X48] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',sK11('const.num.|48|_0',X48,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X48),s('type.num.num','const.arithmetic.ZERO_0'))))) ) | $spl34),
  inference(forward_demodulation,[],[f3508,f1171])).
fof(f3508,plain,(
  ( ! [X48] : (~p(s(bool,happ(s(fun('type.num.num',bool),X48),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',sK11('const.num.|48|_0',X48,'type.num.num'))) ) | $spl34),
  inference(superposition,[],[f222,f1171])).
fof(f3553,plain,(
  ( ! [X50,X49] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',sK11('const.arithmetic.-_2'(s('type.num.num',X49),s('type.num.num',X49)),X50,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X50),s('type.num.num','const.arithmetic.ZERO_0'))))) ) | $spl34),
  inference(forward_demodulation,[],[f3509,f1176])).
fof(f3509,plain,(
  ( ! [X50,X49] : (~p(s(bool,happ(s(fun('type.num.num',bool),X50),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X49),s('type.num.num',X49))) = s('type.num.num',sK11('const.arithmetic.-_2'(s('type.num.num',X49),s('type.num.num',X49)),X50,'type.num.num'))) ) | $spl34),
  inference(superposition,[],[f222,f1176])).
fof(f3555,plain,(
  ( ! [X54,X53] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',sK11('const.arithmetic.-_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X53)),X54,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X54),s('type.num.num','const.arithmetic.ZERO_0'))))) ) | $spl34),
  inference(forward_demodulation,[],[f3511,f1179])).
fof(f3511,plain,(
  ( ! [X54,X53] : (~p(s(bool,happ(s(fun('type.num.num',bool),X54),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X53))) = s('type.num.num',sK11('const.arithmetic.-_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X53)),X54,'type.num.num'))) ) | $spl34),
  inference(superposition,[],[f222,f1179])).
fof(f3557,plain,(
  ( ! [X57,X58] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',sK11('const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X57)))))),X58,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X58),s('type.num.num','const.arithmetic.ZERO_0'))))) ) | $spl34),
  inference(forward_demodulation,[],[f3513,f1183])).
fof(f3513,plain,(
  ( ! [X57,X58] : (~p(s(bool,happ(s(fun('type.num.num',bool),X58),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X57))))))) = s('type.num.num',sK11('const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X57)))))),X58,'type.num.num'))) ) | $spl34),
  inference(superposition,[],[f222,f1183])).
fof(f3558,plain,(
  ( ! [X59,X60] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',sK11('const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X59)))))),X60,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X60),s('type.num.num','const.arithmetic.ZERO_0'))))) ) | $spl34),
  inference(forward_demodulation,[],[f3514,f1184])).
fof(f3514,plain,(
  ( ! [X59,X60] : (~p(s(bool,happ(s(fun('type.num.num',bool),X60),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X59))))))) = s('type.num.num',sK11('const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X59)))))),X60,'type.num.num'))) ) | $spl34),
  inference(superposition,[],[f222,f1184])).
fof(f3559,plain,(
  ( ! [X61] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',sK11('const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X61,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X61),s('type.num.num','const.arithmetic.ZERO_0'))))) ) | $spl34),
  inference(forward_demodulation,[],[f3515,f2641])).
fof(f3515,plain,(
  ( ! [X61] : (~p(s(bool,happ(s(fun('type.num.num',bool),X61),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num',sK11('const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X61,'type.num.num'))) ) | $spl34),
  inference(superposition,[],[f222,f2641])).
fof(f3560,plain,(
  ( ! [X62,X63] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',sK11('const.arithmetic.*_2'(s('type.num.num',X62),s('type.num.num','const.arithmetic.ZERO_0')),X63,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X63),s('type.num.num','const.arithmetic.ZERO_0'))))) ) | $spl34),
  inference(forward_demodulation,[],[f3516,f1173])).
fof(f3516,plain,(
  ( ! [X62,X63] : (~p(s(bool,happ(s(fun('type.num.num',bool),X63),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X62),s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num',sK11('const.arithmetic.*_2'(s('type.num.num',X62),s('type.num.num','const.arithmetic.ZERO_0')),X63,'type.num.num'))) ) | $spl34),
  inference(superposition,[],[f222,f1173])).
fof(f3561,plain,(
  ( ! [X64,X65] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',sK11('const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X64)),X65,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X65),s('type.num.num','const.arithmetic.ZERO_0'))))) ) | $spl34),
  inference(forward_demodulation,[],[f3517,f1174])).
fof(f3517,plain,(
  ( ! [X64,X65] : (~p(s(bool,happ(s(fun('type.num.num',bool),X65),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X64))) = s('type.num.num',sK11('const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X64)),X65,'type.num.num'))) ) | $spl34),
  inference(superposition,[],[f222,f1174])).
fof(f3569,plain,(
  ( ! [X80] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',sK11('const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.ZERO_0')),X80,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X80),s('type.num.num','const.arithmetic.ZERO_0'))))) ) | $spl34),
  inference(forward_demodulation,[],[f3525,f1206])).
fof(f3525,plain,(
  ( ! [X80] : (~p(s(bool,happ(s(fun('type.num.num',bool),X80),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num',sK11('const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.ZERO_0')),X80,'type.num.num'))) ) | $spl34),
  inference(superposition,[],[f222,f1206])).
fof(f3747,plain,(
  ( ! [X64,X65] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',sK11('const.list.LENGTH_1'(s('type.list.list'(X64),'const.list.NIL_0')),X65,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X65),s('type.num.num','const.arithmetic.ZERO_0'))))) ) | $spl34),
  inference(forward_demodulation,[],[f3732,f3368])).
fof(f3732,plain,(
  ( ! [X64,X65] : (~p(s(bool,happ(s(fun('type.num.num',bool),X65),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X64),'const.list.NIL_0'))) = s('type.num.num',sK11('const.list.LENGTH_1'(s('type.list.list'(X64),'const.list.NIL_0')),X65,'type.num.num'))) ) | $spl34),
  inference(superposition,[],[f222,f3368])).
fof(f4361,plain,(
  ( ! [X17] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',sK11('const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X17,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X17),s('type.num.num','const.arithmetic.ZERO_0'))))) ) | $spl34),
  inference(forward_demodulation,[],[f4346,f3195])).
fof(f4346,plain,(
  ( ! [X17] : (~p(s(bool,happ(s(fun('type.num.num',bool),X17),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num',sK11('const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X17,'type.num.num'))) ) | $spl34),
  inference(superposition,[],[f222,f3195])).
fof(f3850,plain,(
  ( ! [X1] : (s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.ZERO_0'))) | s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl34),
  inference(superposition,[],[f1186,f208])).
fof(f4218,plain,(
  ( ! [X0] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.ZERO_0'))) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))) ) | $spl34),
  inference(superposition,[],[f238,f1208])).
fof(f4725,plain,(
  ( ! [X1] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl34),
  inference(superposition,[],[f241,f1212])).
fof(f4219,plain,(
  ( ! [X1] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))) ) | $spl34),
  inference(superposition,[],[f238,f1212])).
fof(f4726,plain,(
  ( ! [X2] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl34),
  inference(superposition,[],[f241,f1965])).
fof(f4220,plain,(
  ( ! [X2] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2)))))) ) | $spl34),
  inference(superposition,[],[f238,f1965])).
fof(f4785,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.ZERO_0')))) | $spl34),
  inference(unit_resulting_resolution,[],[f4183,f1214])).
fof(f4868,plain,(
  ( ! [X0] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))))))),s('type.num.num','const.arithmetic.ZERO_0'))))) ) | $spl34),
  inference(unit_resulting_resolution,[],[f4184,f1214])).
fof(f4748,plain,(
  ( ! [X0] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))))))),s('type.num.num','const.arithmetic.ZERO_0'))))) ) | $spl34),
  inference(unit_resulting_resolution,[],[f4144,f1214])).
fof(f1897,plain,(
  ( ! [X23] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X23))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X23))),s('type.num.num','const.arithmetic.ZERO_0'))))) ) | $spl34),
  inference(forward_demodulation,[],[f1896,f198])).
fof(f1896,plain,(
  ( ! [X23] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X23))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X23)))))) ) | $spl34),
  inference(forward_demodulation,[],[f1888,f1186])).
fof(f1888,plain,(
  ( ! [X23] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X23))))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X23)))))) ) | $spl34),
  inference(superposition,[],[f1215,f198])).
fof(f1895,plain,(
  ( ! [X22] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X22))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X22))),s('type.num.num','const.arithmetic.ZERO_0'))))) ) | $spl34),
  inference(forward_demodulation,[],[f1894,f198])).
fof(f1894,plain,(
  ( ! [X22] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X22))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X22)))))) ) | $spl34),
  inference(forward_demodulation,[],[f1887,f1186])).
fof(f1887,plain,(
  ( ! [X22] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X22))))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X22)))))) ) | $spl34),
  inference(superposition,[],[f1214,f198])).
fof(f7234,plain,(
  ( ! [X158,X161,X159,X162,X160] : (s(bool,'F_0') = s(bool,X158) | p(s(bool,happ(s(fun(X160,bool),X161),s(X160,sK12('const.bool.COND_3'(s(bool,'T_0'),s(bool,X158),s(bool,X159)),X161,X160))))) | ~p(s(bool,happ(s(fun(X160,bool),X161),s(X160,X162))))) ) | ($spl34 | $spl43)),
  inference(forward_demodulation,[],[f7233,f3358])).
fof(f7233,plain,(
  ( ! [X158,X161,X159,X162,X160] : (p(s(bool,happ(s(fun(X160,bool),X161),s(X160,sK12('const.bool.COND_3'(s(bool,'T_0'),s(bool,X158),s(bool,X159)),X161,X160))))) | ~p(s(bool,happ(s(fun(X160,bool),X161),s(X160,X162)))) | s(bool,X158) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) ) | ($spl34 | $spl43)),
  inference(subsumption_resolution,[],[f7218,f174])).
fof(f7218,plain,(
  ( ! [X158,X161,X159,X162,X160] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun(X160,bool),X161),s(X160,sK12('const.bool.COND_3'(s(bool,'T_0'),s(bool,X158),s(bool,X159)),X161,X160))))) | ~p(s(bool,happ(s(fun(X160,bool),X161),s(X160,X162)))) | s(bool,X158) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) ) | ($spl34 | $spl43)),
  inference(superposition,[],[f224,f6040])).
fof(f7221,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,happ(s(fun(X1,bool),X2),s(X1,sK12(X0,X2,X1))))) | ~p(s(bool,happ(s(fun(X1,bool),X2),s(X1,X3)))) | s(bool,'F_0') = s(bool,X0)) ) | ($spl34 | $spl43)),
  inference(subsumption_resolution,[],[f7220,f174])).
fof(f7220,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun(X1,bool),X2),s(X1,sK12(X0,X2,X1))))) | ~p(s(bool,happ(s(fun(X1,bool),X2),s(X1,X3)))) | s(bool,'F_0') = s(bool,X0)) ) | ($spl34 | $spl43)),
  inference(forward_demodulation,[],[f7180,f1195])).
fof(f7180,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0')))) | p(s(bool,happ(s(fun(X1,bool),X2),s(X1,sK12(X0,X2,X1))))) | ~p(s(bool,happ(s(fun(X1,bool),X2),s(X1,X3)))) | s(bool,'F_0') = s(bool,X0)) ) | ($spl34 | $spl43)),
  inference(superposition,[],[f224,f6965])).
fof(f7178,plain,(
  ( ! [X28,X29] : (s(bool,'T_0') = s(bool,sK11('const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0')),X29,bool)) | ~p(s(bool,happ(s(fun(bool,bool),X29),s(bool,X28)))) | s(bool,'F_0') = s(bool,X28)) ) | ($spl34 | $spl43)),
  inference(forward_demodulation,[],[f7104,f1195])).
fof(f7104,plain,(
  ( ! [X28,X29] : (~p(s(bool,happ(s(fun(bool,bool),X29),s(bool,X28)))) | s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s(bool,sK11('const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0')),X29,bool)) | s(bool,'F_0') = s(bool,X28)) ) | ($spl34 | $spl43)),
  inference(superposition,[],[f222,f6965])).
fof(f7177,plain,(
  ( ! [X26,X27,X25] : (s(bool,'T_0') != s(bool,X27) | ~p(s(bool,happ(s(fun(bool,bool),X26),s(bool,X25)))) | p(s(bool,happ(s(fun(bool,bool),X26),s(bool,X27)))) | s(bool,'F_0') = s(bool,X25)) ) | ($spl34 | $spl43)),
  inference(forward_demodulation,[],[f7103,f1195])).
fof(f7103,plain,(
  ( ! [X26,X27,X25] : (~p(s(bool,happ(s(fun(bool,bool),X26),s(bool,X25)))) | p(s(bool,happ(s(fun(bool,bool),X26),s(bool,X27)))) | s(bool,X27) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s(bool,'F_0') = s(bool,X25)) ) | ($spl34 | $spl43)),
  inference(superposition,[],[f221,f6965])).
fof(f7174,plain,(
  ( ! [X95,X96] : (p(s(bool,happ(s(fun(bool,bool),X96),s(bool,'T_0')))) | ~p(s(bool,happ(s(fun(bool,bool),X96),s(bool,X95)))) | s(bool,'F_0') = s(bool,sK11(X95,X96,bool))) ) | ($spl34 | $spl43)),
  inference(forward_demodulation,[],[f7089,f1195])).
fof(f7089,plain,(
  ( ! [X95,X96] : (p(s(bool,happ(s(fun(bool,bool),X96),s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | ~p(s(bool,happ(s(fun(bool,bool),X96),s(bool,X95)))) | s(bool,'F_0') = s(bool,sK11(X95,X96,bool))) ) | ($spl34 | $spl43)),
  inference(superposition,[],[f223,f6965])).
fof(f7172,plain,(
  ( ! [X88,X87] : (~p(s(bool,happ(s(fun(bool,bool),X88),s(bool,'T_0')))) | s(bool,X87) = s(bool,sK11(X87,X88,bool)) | s(bool,'F_0') = s(bool,X87)) ) | ($spl34 | $spl43)),
  inference(forward_demodulation,[],[f7085,f1195])).
fof(f7085,plain,(
  ( ! [X88,X87] : (~p(s(bool,happ(s(fun(bool,bool),X88),s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | s(bool,X87) = s(bool,sK11(X87,X88,bool)) | s(bool,'F_0') = s(bool,X87)) ) | ($spl34 | $spl43)),
  inference(superposition,[],[f222,f6965])).
fof(f7165,plain,(
  ( ! [X65] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X65) | s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',X65),s('type.num.num','const.arithmetic.ZERO_0')))) ) | ($spl34 | $spl43)),
  inference(subsumption_resolution,[],[f7164,f174])).
fof(f7164,plain,(
  ( ! [X65] : (~p(s(bool,'T_0')) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X65) | s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',X65),s('type.num.num','const.arithmetic.ZERO_0')))) ) | ($spl34 | $spl43)),
  inference(forward_demodulation,[],[f7065,f1195])).
fof(f7065,plain,(
  ( ! [X65] : (~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X65) | s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',X65),s('type.num.num','const.arithmetic.ZERO_0')))) ) | ($spl34 | $spl43)),
  inference(superposition,[],[f1214,f6965])).
fof(f7157,plain,(
  ( ! [X59] : (s(bool,'F_0') = s(bool,sK11('const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')),X59,bool)) | s(bool,'F_0') = s(bool,happ(s(fun(bool,bool),X59),s(bool,'F_0')))) ) | ($spl34 | $spl43)),
  inference(subsumption_resolution,[],[f7156,f174])).
fof(f7156,plain,(
  ( ! [X59] : (~p(s(bool,'T_0')) | s(bool,'F_0') = s(bool,sK11('const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')),X59,bool)) | s(bool,'F_0') = s(bool,happ(s(fun(bool,bool),X59),s(bool,'F_0')))) ) | ($spl34 | $spl43)),
  inference(forward_demodulation,[],[f7059,f1195])).
fof(f7059,plain,(
  ( ! [X59] : (~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0')))) | s(bool,'F_0') = s(bool,sK11('const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')),X59,bool)) | s(bool,'F_0') = s(bool,happ(s(fun(bool,bool),X59),s(bool,'F_0')))) ) | ($spl34 | $spl43)),
  inference(superposition,[],[f3542,f6965])).
fof(f7152,plain,(
  ( ! [X54,X52,X53] : (s(X52,X54) = s(X52,sK11(X54,X53,X52)) | s(bool,'F_0') = s(bool,happ(s(fun(X52,bool),X53),s(X52,X54)))) ) | ($spl34 | $spl43)),
  inference(subsumption_resolution,[],[f7151,f174])).
fof(f7151,plain,(
  ( ! [X54,X52,X53] : (~p(s(bool,'T_0')) | s(X52,X54) = s(X52,sK11(X54,X53,X52)) | s(bool,'F_0') = s(bool,happ(s(fun(X52,bool),X53),s(X52,X54)))) ) | ($spl34 | $spl43)),
  inference(forward_demodulation,[],[f7056,f1195])).
fof(f7056,plain,(
  ( ! [X54,X52,X53] : (~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0')))) | s(X52,X54) = s(X52,sK11(X54,X53,X52)) | s(bool,'F_0') = s(bool,happ(s(fun(X52,bool),X53),s(X52,X54)))) ) | ($spl34 | $spl43)),
  inference(superposition,[],[f222,f6965])).
fof(f7150,plain,(
  ( ! [X50,X48,X51,X49] : (p(s(bool,happ(s(fun(X48,bool),X49),s(X48,X51)))) | s(X48,X50) != s(X48,X51) | s(bool,'F_0') = s(bool,happ(s(fun(X48,bool),X49),s(X48,X50)))) ) | ($spl34 | $spl43)),
  inference(subsumption_resolution,[],[f7149,f174])).
fof(f7149,plain,(
  ( ! [X50,X48,X51,X49] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun(X48,bool),X49),s(X48,X51)))) | s(X48,X50) != s(X48,X51) | s(bool,'F_0') = s(bool,happ(s(fun(X48,bool),X49),s(X48,X50)))) ) | ($spl34 | $spl43)),
  inference(forward_demodulation,[],[f7055,f1195])).
fof(f7055,plain,(
  ( ! [X50,X48,X51,X49] : (~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0')))) | p(s(bool,happ(s(fun(X48,bool),X49),s(X48,X51)))) | s(X48,X50) != s(X48,X51) | s(bool,'F_0') = s(bool,happ(s(fun(X48,bool),X49),s(X48,X50)))) ) | ($spl34 | $spl43)),
  inference(superposition,[],[f221,f6965])).
fof(f7141,plain,(
  ( ! [X33,X34] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X34),s('type.num.num',X33)))) | s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X33))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X34)))))) ) | ($spl34 | $spl43)),
  inference(subsumption_resolution,[],[f7140,f174])).
fof(f7140,plain,(
  ( ! [X33,X34] : (~p(s(bool,'T_0')) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X34),s('type.num.num',X33)))) | s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X33))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X34)))))) ) | ($spl34 | $spl43)),
  inference(forward_demodulation,[],[f7045,f1195])).
fof(f7045,plain,(
  ( ! [X33,X34] : (~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X34),s('type.num.num',X33)))) | s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X33))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X34)))))) ) | ($spl34 | $spl43)),
  inference(superposition,[],[f257,f6965])).
fof(f7020,plain,(
  ( ! [X0,X1] : (s(bool,X0) = s(bool,X1) | s(bool,'F_0') = s(bool,X1) | s(bool,'F_0') = s(bool,X0)) ) | ($spl34 | $spl43)),
  inference(superposition,[],[f6965,f6965])).
fof(f7127,plain,(
  ( ! [X47,X46] : (s(bool,'T_0') = s(bool,X46) | s(bool,'F_0') = s(bool,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X46),s(bool,X47)))) ) | ($spl34 | $spl43)),
  inference(forward_demodulation,[],[f7019,f1195])).
fof(f7019,plain,(
  ( ! [X47,X46] : (s(bool,X46) = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s(bool,'F_0') = s(bool,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X46),s(bool,X47)))) ) | ($spl34 | $spl43)),
  inference(superposition,[],[f6965,f217])).
fof(f7126,plain,(
  ( ! [X43,X42] : (s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',X43),s('type.num.num',X42))) | s(bool,'F_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X42))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X43)))))) ) | ($spl34 | $spl43)),
  inference(forward_demodulation,[],[f7017,f1195])).
fof(f7017,plain,(
  ( ! [X43,X42] : (s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num',X43),s('type.num.num',X42))) | s(bool,'F_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X42))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X43)))))) ) | ($spl34 | $spl43)),
  inference(superposition,[],[f6965,f238])).
fof(f7125,plain,(
  ( ! [X41,X40] : (s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',X41),s('type.num.num',X40))) | s(bool,'F_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num',X40),s('type.num.num',X41)))) ) | ($spl34 | $spl43)),
  inference(forward_demodulation,[],[f7016,f1195])).
fof(f7016,plain,(
  ( ! [X41,X40] : (s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num',X41),s('type.num.num',X40))) | s(bool,'F_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num',X40),s('type.num.num',X41)))) ) | ($spl34 | $spl43)),
  inference(superposition,[],[f6965,f234])).
fof(f7124,plain,(
  ( ! [X37,X36] : (s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',X36),s('type.num.num',X37))) | s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X36))),s('type.num.num',X37)))) ) | ($spl34 | $spl43)),
  inference(forward_demodulation,[],[f7012,f1195])).
fof(f7012,plain,(
  ( ! [X37,X36] : (s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s(bool,'const.prim_rec.<_2'(s('type.num.num',X36),s('type.num.num',X37))) | s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X36))),s('type.num.num',X37)))) ) | ($spl34 | $spl43)),
  inference(superposition,[],[f6965,f236])).
fof(f7123,plain,(
  ( ! [X30,X31] : (s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',X30),s('type.num.num',X31))) | s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X30))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X31)))))) ) | ($spl34 | $spl43)),
  inference(forward_demodulation,[],[f7006,f1195])).
fof(f7006,plain,(
  ( ! [X30,X31] : (s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num',X30),s('type.num.num',X31))) | s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X30))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X31)))))) ) | ($spl34 | $spl43)),
  inference(superposition,[],[f6965,f241])).
fof(f7122,plain,(
  ( ! [X29] : (s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',X29),s('type.num.num','const.arithmetic.ZERO_0'))) | s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X29))),s('type.num.num','const.arithmetic.ZERO_0')))) ) | ($spl34 | $spl43)),
  inference(forward_demodulation,[],[f7005,f1195])).
fof(f7005,plain,(
  ( ! [X29] : (s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num',X29),s('type.num.num','const.arithmetic.ZERO_0'))) | s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X29))),s('type.num.num','const.arithmetic.ZERO_0')))) ) | ($spl34 | $spl43)),
  inference(superposition,[],[f6965,f1186])).
fof(f7121,plain,(
  ( ! [X27] : (s(bool,'T_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num',X27))) | s(bool,'F_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X27)))))) ) | ($spl34 | $spl43)),
  inference(forward_demodulation,[],[f7001,f1195])).
fof(f7001,plain,(
  ( ! [X27] : (s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s(bool,'const.arithmetic.ODD_1'(s('type.num.num',X27))) | s(bool,'F_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X27)))))) ) | ($spl34 | $spl43)),
  inference(superposition,[],[f6965,f193])).
fof(f7120,plain,(
  ( ! [X26,X25] : (s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',X26),s('type.num.num',X25))) | s(bool,'F_0') = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X25))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X26)))))) ) | ($spl34 | $spl43)),
  inference(forward_demodulation,[],[f7000,f1195])).
fof(f7000,plain,(
  ( ! [X26,X25] : (s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s(bool,'const.prim_rec.<_2'(s('type.num.num',X26),s('type.num.num',X25))) | s(bool,'F_0') = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X25))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X26)))))) ) | ($spl34 | $spl43)),
  inference(superposition,[],[f6965,f237])).
fof(f7119,plain,(
  ( ! [X24] : (s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X24))) | s(bool,'F_0') = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X24))),s('type.num.num','const.arithmetic.ZERO_0')))) ) | ($spl34 | $spl43)),
  inference(forward_demodulation,[],[f6999,f1195])).
fof(f6999,plain,(
  ( ! [X24] : (s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X24))) | s(bool,'F_0') = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X24))),s('type.num.num','const.arithmetic.ZERO_0')))) ) | ($spl34 | $spl43)),
  inference(superposition,[],[f6965,f1187])).
fof(f7118,plain,(
  ( ! [X23,X22] : (s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',X23),s('type.num.num',X22))) | s(bool,'F_0') = s(bool,'const.arithmetic.>_2'(s('type.num.num',X22),s('type.num.num',X23)))) ) | ($spl34 | $spl43)),
  inference(forward_demodulation,[],[f6998,f1195])).
fof(f6998,plain,(
  ( ! [X23,X22] : (s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s(bool,'const.prim_rec.<_2'(s('type.num.num',X23),s('type.num.num',X22))) | s(bool,'F_0') = s(bool,'const.arithmetic.>_2'(s('type.num.num',X22),s('type.num.num',X23)))) ) | ($spl34 | $spl43)),
  inference(superposition,[],[f6965,f233])).
fof(f7117,plain,(
  ( ! [X19] : (s(bool,'T_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X19))) | s(bool,'F_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X19)))))) ) | ($spl34 | $spl43)),
  inference(forward_demodulation,[],[f6996,f1195])).
fof(f6996,plain,(
  ( ! [X19] : (s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X19))) | s(bool,'F_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X19)))))) ) | ($spl34 | $spl43)),
  inference(superposition,[],[f6965,f195])).
fof(f7116,plain,(
  ( ! [X17,X18] : (s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',X17),s('type.num.num',X18))) | s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X17))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X18)))))) ) | ($spl34 | $spl43)),
  inference(forward_demodulation,[],[f6995,f1195])).
fof(f6995,plain,(
  ( ! [X17,X18] : (s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s(bool,'const.prim_rec.<_2'(s('type.num.num',X17),s('type.num.num',X18))) | s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X17))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X18)))))) ) | ($spl34 | $spl43)),
  inference(superposition,[],[f6965,f240])).
fof(f7115,plain,(
  ( ! [X15,X16] : (s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',X15),s('type.num.num',X16))) | s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X15))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X16)))))) ) | ($spl34 | $spl43)),
  inference(forward_demodulation,[],[f6994,f1195])).
fof(f6994,plain,(
  ( ! [X15,X16] : (s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s(bool,'const.prim_rec.<_2'(s('type.num.num',X15),s('type.num.num',X16))) | s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X15))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X16)))))) ) | ($spl34 | $spl43)),
  inference(superposition,[],[f6965,f239])).
fof(f7114,plain,(
  ( ! [X14,X13] : (s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',X13),s('type.num.num',X14))) | s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X13))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X14)))))) ) | ($spl34 | $spl43)),
  inference(forward_demodulation,[],[f6993,f1195])).
fof(f6993,plain,(
  ( ! [X14,X13] : (s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s(bool,'const.prim_rec.<_2'(s('type.num.num',X13),s('type.num.num',X14))) | s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X13))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X14)))))) ) | ($spl34 | $spl43)),
  inference(superposition,[],[f6965,f243])).
fof(f7113,plain,(
  ( ! [X12,X11] : (s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',X11),s('type.num.num',X12))) | s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X11))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X12)))))) ) | ($spl34 | $spl43)),
  inference(forward_demodulation,[],[f6992,f1195])).
fof(f6992,plain,(
  ( ! [X12,X11] : (s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s(bool,'const.prim_rec.<_2'(s('type.num.num',X11),s('type.num.num',X12))) | s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X11))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X12)))))) ) | ($spl34 | $spl43)),
  inference(superposition,[],[f6965,f242])).
fof(f7112,plain,(
  ( ! [X10] : (s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X10))) | s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X10)))))) ) | ($spl34 | $spl43)),
  inference(forward_demodulation,[],[f6991,f1195])).
fof(f6991,plain,(
  ( ! [X10] : (s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X10))) | s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X10)))))) ) | ($spl34 | $spl43)),
  inference(superposition,[],[f6965,f1185])).
fof(f6981,plain,(
  ( ! [X80,X78,X79] : (s(bool,X80) = s(bool,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X78),s(bool,X79))) | s(bool,'F_0') = s(bool,X80) | s(bool,X78) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) ) | ($spl34 | $spl43)),
  inference(subsumption_resolution,[],[f6949,f174])).
fof(f6949,plain,(
  ( ! [X80,X78,X79] : (~p(s(bool,'T_0')) | s(bool,X80) = s(bool,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X78),s(bool,X79))) | s(bool,'F_0') = s(bool,X80) | s(bool,X78) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) ) | ($spl34 | $spl43)),
  inference(superposition,[],[f6750,f6040])).
fof(f6977,plain,(
  ( ! [X70,X71] : (s(bool,X71) = s(bool,'const.arithmetic.>=_2'(s('type.num.num',X70),s('type.num.num','const.arithmetic.ZERO_0'))) | s(bool,'F_0') = s(bool,X71)) ) | ($spl34 | $spl43)),
  inference(subsumption_resolution,[],[f6946,f174])).
fof(f6946,plain,(
  ( ! [X70,X71] : (~p(s(bool,'T_0')) | s(bool,X71) = s(bool,'const.arithmetic.>=_2'(s('type.num.num',X70),s('type.num.num','const.arithmetic.ZERO_0'))) | s(bool,'F_0') = s(bool,X71)) ) | ($spl34 | $spl43)),
  inference(superposition,[],[f6750,f1181])).
fof(f6970,plain,(
  ( ! [X47,X48] : (s(bool,X48) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X47))) | s(bool,'F_0') = s(bool,X48)) ) | ($spl34 | $spl43)),
  inference(subsumption_resolution,[],[f6934,f174])).
fof(f6934,plain,(
  ( ! [X47,X48] : (~p(s(bool,'T_0')) | s(bool,X48) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X47))) | s(bool,'F_0') = s(bool,X48)) ) | ($spl34 | $spl43)),
  inference(superposition,[],[f6750,f1180])).
fof(f6965,plain,(
  ( ! [X33] : (s(bool,X33) = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s(bool,'F_0') = s(bool,X33)) ) | ($spl34 | $spl43)),
  inference(subsumption_resolution,[],[f6927,f174])).
fof(f6927,plain,(
  ( ! [X33] : (~p(s(bool,'T_0')) | s(bool,X33) = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s(bool,'F_0') = s(bool,X33)) ) | ($spl34 | $spl43)),
  inference(superposition,[],[f6750,f1195])).
fof(f6958,plain,(
  ( ! [X15,X16] : (s(bool,X16) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X15))))) | s(bool,'F_0') = s(bool,X16)) ) | ($spl34 | $spl43)),
  inference(subsumption_resolution,[],[f6920,f174])).
fof(f6920,plain,(
  ( ! [X15,X16] : (~p(s(bool,'T_0')) | s(bool,X16) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X15))))) | s(bool,'F_0') = s(bool,X16)) ) | ($spl34 | $spl43)),
  inference(superposition,[],[f6750,f194])).
fof(f6957,plain,(
  ( ! [X14,X13] : (s(bool,X14) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X13))))) | s(bool,'F_0') = s(bool,X14)) ) | ($spl34 | $spl43)),
  inference(subsumption_resolution,[],[f6919,f174])).
fof(f6919,plain,(
  ( ! [X14,X13] : (~p(s(bool,'T_0')) | s(bool,X14) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X13))))) | s(bool,'F_0') = s(bool,X14)) ) | ($spl34 | $spl43)),
  inference(superposition,[],[f6750,f192])).
fof(f6871,plain,(
  ( ! [X121,X122,X119] : (s(bool,'F_0') = s(bool,X119) | s(bool,X119) != s(bool,X122) | ~p(s(bool,happ(s(fun(bool,bool),X121),s(bool,'T_0')))) | p(s(bool,happ(s(fun(bool,bool),X121),s(bool,X122))))) ) | ($spl34 | $spl43)),
  inference(forward_demodulation,[],[f6870,f3358])).
fof(f6870,plain,(
  ( ! [X121,X122,X119] : (s(bool,X119) != s(bool,X122) | ~p(s(bool,happ(s(fun(bool,bool),X121),s(bool,'T_0')))) | p(s(bool,happ(s(fun(bool,bool),X121),s(bool,X122)))) | s(bool,X119) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) ) | ($spl34 | $spl43)),
  inference(forward_demodulation,[],[f6791,f217])).
fof(f6791,plain,(
  ( ! [X121,X122,X120,X119] : (~p(s(bool,happ(s(fun(bool,bool),X121),s(bool,'T_0')))) | p(s(bool,happ(s(fun(bool,bool),X121),s(bool,X122)))) | s(bool,X122) != s(bool,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X119),s(bool,X120))) | s(bool,X119) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) ) | ($spl34 | $spl43)),
  inference(superposition,[],[f221,f6040])).
fof(f6832,plain,(
  ( ! [X6,X7,X5] : (s(bool,'T_0') = s(bool,X5) | ~p(s(bool,happ(s(fun(bool,bool),X6),s(bool,'F_0')))) | p(s(bool,happ(s(fun(bool,bool),X6),s(bool,X7)))) | s(bool,X5) != s(bool,X7)) ) | ($spl34 | $spl43)),
  inference(forward_demodulation,[],[f6831,f217])).
fof(f6831,plain,(
  ( ! [X6,X8,X7,X5] : (~p(s(bool,happ(s(fun(bool,bool),X6),s(bool,'F_0')))) | p(s(bool,happ(s(fun(bool,bool),X6),s(bool,X7)))) | s(bool,X5) != s(bool,X7) | s(bool,'T_0') = s(bool,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X5),s(bool,X8)))) ) | ($spl34 | $spl43)),
  inference(forward_demodulation,[],[f6755,f3358])).
fof(f6755,plain,(
  ( ! [X6,X8,X7,X5] : (~p(s(bool,happ(s(fun(bool,bool),X6),s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))))) | p(s(bool,happ(s(fun(bool,bool),X6),s(bool,X7)))) | s(bool,X5) != s(bool,X7) | s(bool,'T_0') = s(bool,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X5),s(bool,X8)))) ) | ($spl34 | $spl43)),
  inference(superposition,[],[f221,f6040])).
fof(f6752,plain,(
  ( ! [X30,X31,X32] : (s(bool,'F_0') = s(bool,X30) | s(bool,X30) = s(bool,sK11('const.bool.COND_3'(s(bool,'T_0'),s(bool,X30),s(bool,X31)),X32,bool)) | ~p(s(bool,happ(s(fun(bool,bool),X32),s(bool,'T_0'))))) ) | ($spl34 | $spl43)),
  inference(forward_demodulation,[],[f6751,f3358])).
fof(f6751,plain,(
  ( ! [X30,X31,X32] : (s(bool,X30) = s(bool,sK11('const.bool.COND_3'(s(bool,'T_0'),s(bool,X30),s(bool,X31)),X32,bool)) | ~p(s(bool,happ(s(fun(bool,bool),X32),s(bool,'T_0')))) | s(bool,X30) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) ) | ($spl34 | $spl43)),
  inference(forward_demodulation,[],[f6570,f217])).
fof(f6570,plain,(
  ( ! [X30,X31,X32] : (~p(s(bool,happ(s(fun(bool,bool),X32),s(bool,'T_0')))) | s(bool,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X30),s(bool,X31))) = s(bool,sK11('const.bool.COND_3'(s(bool,'T_0'),s(bool,X30),s(bool,X31)),X32,bool)) | s(bool,X30) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) ) | ($spl34 | $spl43)),
  inference(superposition,[],[f222,f6040])).
fof(f6750,plain,(
  ( ! [X13,X11] : (~p(s(bool,X13)) | s(bool,X11) = s(bool,X13) | s(bool,'F_0') = s(bool,X11)) ) | ($spl34 | $spl43)),
  inference(forward_demodulation,[],[f6749,f3358])).
fof(f6749,plain,(
  ( ! [X13,X11] : (s(bool,X11) = s(bool,X13) | ~p(s(bool,X13)) | s(bool,X11) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) ) | ($spl34 | $spl43)),
  inference(forward_demodulation,[],[f6748,f217])).
fof(f6748,plain,(
  ( ! [X12,X13,X11] : (~p(s(bool,X13)) | s(bool,X13) = s(bool,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X11),s(bool,X12))) | s(bool,X11) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) ) | ($spl34 | $spl43)),
  inference(subsumption_resolution,[],[f6562,f174])).
fof(f6562,plain,(
  ( ! [X12,X13,X11] : (~p(s(bool,'T_0')) | ~p(s(bool,X13)) | s(bool,X13) = s(bool,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X11),s(bool,X12))) | s(bool,X11) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) ) | ($spl34 | $spl43)),
  inference(superposition,[],[f254,f6040])).
fof(f6708,plain,(
  ( ! [X85,X84] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X84) | s(bool,'T_0') = s(bool,'const.bool.COND_3'(s(bool,'T_0'),s(bool,'const.arithmetic.<=_2'(s('type.num.num',X84),s('type.num.num','const.arithmetic.ZERO_0'))),s(bool,X85)))) ) | ($spl34 | $spl43)),
  inference(subsumption_resolution,[],[f6707,f179])).
fof(f6707,plain,(
  ( ! [X85,X84] : (p(s(bool,'F_0')) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X84) | s(bool,'T_0') = s(bool,'const.bool.COND_3'(s(bool,'T_0'),s(bool,'const.arithmetic.<=_2'(s('type.num.num',X84),s('type.num.num','const.arithmetic.ZERO_0'))),s(bool,X85)))) ) | ($spl34 | $spl43)),
  inference(forward_demodulation,[],[f6522,f3358])).
fof(f6522,plain,(
  ( ! [X85,X84] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X84) | s(bool,'T_0') = s(bool,'const.bool.COND_3'(s(bool,'T_0'),s(bool,'const.arithmetic.<=_2'(s('type.num.num',X84),s('type.num.num','const.arithmetic.ZERO_0'))),s(bool,X85)))) ) | ($spl34 | $spl43)),
  inference(superposition,[],[f1215,f6040])).
fof(f6657,plain,(
  ( ! [X80,X81,X82] : (s(bool,'F_0') = s(bool,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X80),s(bool,X81))) | s(bool,'T_0') = s(bool,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X80),s(bool,X82)))) ) | ($spl34 | $spl43)),
  inference(forward_demodulation,[],[f6446,f3358])).
fof(f6446,plain,(
  ( ! [X80,X81,X82] : (s(bool,'T_0') = s(bool,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X80),s(bool,X82))) | s(bool,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X80),s(bool,X81))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) ) | ($spl34 | $spl43)),
  inference(superposition,[],[f6040,f217])).
fof(f6403,plain,(
  ( ! [X6,X4,X5] : (s(bool,X4) = s(bool,X5) | s(bool,'T_0') = s(bool,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X5),s(bool,X6))) | s(bool,'T_0') = s(bool,X4)) ) | ($spl34 | $spl43)),
  inference(superposition,[],[f6040,f5656])).
fof(f6402,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X1),s(bool,X2))) | s(bool,'T_0') = s(bool,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X0),s(bool,X3)))) ) | ($spl34 | $spl43)),
  inference(superposition,[],[f6040,f6040])).
fof(f6311,plain,(
  ( ! [X156,X157] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X156),s('type.num.num',X157))))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X156))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X157)))))) ) | $spl34),
  inference(superposition,[],[f1188,f246])).
fof(f6248,plain,(
  ( ! [X2] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl34),
  inference(superposition,[],[f246,f1965])).
fof(f6247,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl34),
  inference(superposition,[],[f246,f1212])).
fof(f6212,plain,(
  ( ! [X2] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X2))))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2)))))) ) | $spl34),
  inference(superposition,[],[f246,f1965])).
fof(f6211,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X1))))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))) ) | $spl34),
  inference(superposition,[],[f246,f1212])).
fof(f6040,plain,(
  ( ! [X39,X38] : (s(bool,X38) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0'))) | s(bool,'T_0') = s(bool,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X38),s(bool,X39)))) ) | ($spl34 | $spl43)),
  inference(superposition,[],[f5656,f217])).
fof(f5954,plain,(
  ( ! [X149,X150] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X149),s('type.num.num',X150))))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X149))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X150)))))) ) | $spl34),
  inference(superposition,[],[f1188,f245])).
fof(f5895,plain,(
  ( ! [X2] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl34),
  inference(superposition,[],[f245,f1965])).
fof(f5894,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl34),
  inference(superposition,[],[f245,f1212])).
fof(f5860,plain,(
  ( ! [X2] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X2))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2)))))) ) | $spl34),
  inference(superposition,[],[f245,f1965])).
fof(f5859,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X1))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))) ) | $spl34),
  inference(superposition,[],[f245,f1212])).
fof(f5658,plain,(
  ( ! [X50,X51] : (s(bool,X51) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X50))),s('type.num.num','const.arithmetic.ZERO_0'))) | s(bool,'T_0') = s(bool,X51)) ) | $spl34),
  inference(subsumption_resolution,[],[f5633,f179])).
fof(f5633,plain,(
  ( ! [X50,X51] : (p(s(bool,'F_0')) | s(bool,X51) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X50))),s('type.num.num','const.arithmetic.ZERO_0'))) | s(bool,'T_0') = s(bool,X51)) ) | $spl34),
  inference(superposition,[],[f428,f2700])).
fof(f5657,plain,(
  ( ! [X49] : (s(bool,X49) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0'))) | s(bool,'T_0') = s(bool,X49)) ) | $spl34),
  inference(subsumption_resolution,[],[f5632,f179])).
fof(f5632,plain,(
  ( ! [X49] : (p(s(bool,'F_0')) | s(bool,X49) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0'))) | s(bool,'T_0') = s(bool,X49)) ) | $spl34),
  inference(superposition,[],[f428,f2610])).
fof(f5656,plain,(
  ( ! [X48] : (s(bool,X48) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0'))) | s(bool,'T_0') = s(bool,X48)) ) | ($spl34 | $spl43)),
  inference(subsumption_resolution,[],[f5631,f179])).
fof(f5631,plain,(
  ( ! [X48] : (p(s(bool,'F_0')) | s(bool,X48) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0'))) | s(bool,'T_0') = s(bool,X48)) ) | ($spl34 | $spl43)),
  inference(superposition,[],[f428,f3358])).
fof(f5653,plain,(
  ( ! [X42] : (s(bool,X42) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0'))) | s(bool,'T_0') = s(bool,X42)) ) | $spl34),
  inference(subsumption_resolution,[],[f5628,f179])).
fof(f5628,plain,(
  ( ! [X42] : (p(s(bool,'F_0')) | s(bool,X42) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0'))) | s(bool,'T_0') = s(bool,X42)) ) | $spl34),
  inference(superposition,[],[f428,f1902])).
fof(f5652,plain,(
  ( ! [X39] : (s(bool,X39) = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s(bool,'T_0') = s(bool,X39)) ) | $spl34),
  inference(subsumption_resolution,[],[f5626,f179])).
fof(f5626,plain,(
  ( ! [X39] : (p(s(bool,'F_0')) | s(bool,X39) = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s(bool,'T_0') = s(bool,X39)) ) | $spl34),
  inference(superposition,[],[f428,f1196])).
fof(f5647,plain,(
  ( ! [X28,X27] : (s(bool,X28) = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X27))) | s(bool,'T_0') = s(bool,X28)) ) | $spl34),
  inference(subsumption_resolution,[],[f5621,f179])).
fof(f5621,plain,(
  ( ! [X28,X27] : (p(s(bool,'F_0')) | s(bool,X28) = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X27))) | s(bool,'T_0') = s(bool,X28)) ) | $spl34),
  inference(superposition,[],[f428,f1175])).
fof(f5564,plain,(
  ( ! [X144,X143] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X143),s('type.num.num',X144))))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X143))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X144)))))) ) | $spl34),
  inference(superposition,[],[f1188,f244])).
fof(f5507,plain,(
  ( ! [X2] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl34),
  inference(superposition,[],[f244,f1965])).
fof(f5506,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl34),
  inference(superposition,[],[f244,f1212])).
fof(f5473,plain,(
  ( ! [X2] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X2))))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2)))))) ) | $spl34),
  inference(superposition,[],[f244,f1965])).
fof(f5472,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X1))))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))) ) | $spl34),
  inference(superposition,[],[f244,f1212])).
fof(f5471,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X0))))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))) ) | $spl34),
  inference(superposition,[],[f244,f1208])).
fof(f5427,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))))))))))))))))))))) | ($spl34 | $spl43)),
  inference(forward_demodulation,[],[f5426,f1208])).
fof(f5426,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))))))))))))))))))))) | ($spl34 | $spl43)),
  inference(unit_resulting_resolution,[],[f5217,f255])).
fof(f5217,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))))))))))))))))))) | ($spl34 | $spl43)),
  inference(forward_demodulation,[],[f5216,f1208])).
fof(f5216,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))))))))))))))))))) | ($spl34 | $spl43)),
  inference(unit_resulting_resolution,[],[f3878,f255])).
fof(f5048,plain,(
  ( ! [X4] : (s(bool,'F_0') = s(bool,sK11('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0')),X4,bool)) | ~p(s(bool,happ(s(fun(bool,bool),X4),s(bool,'F_0'))))) ) | $spl34),
  inference(forward_demodulation,[],[f5041,f2610])).
fof(f5041,plain,(
  ( ! [X4] : (~p(s(bool,happ(s(fun(bool,bool),X4),s(bool,'F_0')))) | s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0'))) = s(bool,sK11('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0')),X4,bool))) ) | $spl34),
  inference(superposition,[],[f222,f2610])).
fof(f5028,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))))) ) | $spl34),
  inference(forward_demodulation,[],[f4996,f1208])).
fof(f4996,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))))) ) | $spl34),
  inference(unit_resulting_resolution,[],[f2580,f255])).
fof(f4905,plain,(
  ( ! [X0,X1] : (~p(s(bool,happ(s(fun(bool,bool),X1),s(bool,X0)))) | s(bool,'F_0') = s(bool,sK11('const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')),X1,bool)) | s(bool,'T_0') = s(bool,X0)) ) | ($spl34 | $spl43)),
  inference(superposition,[],[f3542,f208])).
fof(f4904,plain,(
  ( ! [X0,X1] : (~p(s(bool,happ(s(fun(bool,bool),X0),s(bool,'F_0')))) | s(bool,'F_0') = s(bool,sK11('const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')),'const.bool.COND_3'(s(bool,'T_0'),s(fun(bool,bool),X0),s(fun(bool,bool),X1)),bool))) ) | ($spl34 | $spl43)),
  inference(superposition,[],[f3542,f217])).
fof(f4902,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))))) ) | $spl34),
  inference(forward_demodulation,[],[f4871,f1208])).
fof(f4871,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))))) ) | $spl34),
  inference(unit_resulting_resolution,[],[f4184,f255])).
fof(f4789,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl34),
  inference(forward_demodulation,[],[f4788,f1208])).
fof(f4788,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl34),
  inference(unit_resulting_resolution,[],[f4183,f255])).
fof(f4783,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))))) ) | $spl34),
  inference(forward_demodulation,[],[f4751,f1208])).
fof(f4751,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))))) ) | $spl34),
  inference(unit_resulting_resolution,[],[f4144,f255])).
fof(f4657,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))))) ) | $spl34),
  inference(forward_demodulation,[],[f4626,f1208])).
fof(f4626,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))))) ) | $spl34),
  inference(unit_resulting_resolution,[],[f2480,f255])).
fof(f4556,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))))),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl34),
  inference(unit_resulting_resolution,[],[f179,f2479,f251])).
fof(f4557,plain,(
  ( ! [X0,X1] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))))),s('type.num.num','const.arithmetic.ZERO_0'))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1))))),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl34),
  inference(unit_resulting_resolution,[],[f2479,f2479,f251])).
fof(f4459,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.ZERO_0'))) | $spl34),
  inference(unit_resulting_resolution,[],[f179,f2281,f251])).
fof(f4353,plain,(
  ( ! [X13] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X13))) | s('type.num.num',X13) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl34),
  inference(forward_demodulation,[],[f4309,f1208])).
fof(f4309,plain,(
  ( ! [X13] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X13))) | s('type.num.num',X13) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl34),
  inference(superposition,[],[f255,f3195])).
fof(f4184,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))) ) | $spl34),
  inference(superposition,[],[f2086,f197])).
fof(f4183,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl34),
  inference(superposition,[],[f2086,f177])).
fof(f4144,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))) ) | $spl34),
  inference(superposition,[],[f2085,f197])).
fof(f4020,plain,(
  ( ! [X2] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X2)))))))))) ) | $spl34),
  inference(superposition,[],[f2062,f202])).
fof(f4019,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1)))))))))) ) | $spl34),
  inference(superposition,[],[f2062,f199])).
fof(f3975,plain,(
  ( ! [X2] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X2)))))))))) ) | $spl34),
  inference(superposition,[],[f1999,f202])).
fof(f3976,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))))))))) ) | $spl34),
  inference(forward_demodulation,[],[f3942,f1208])).
fof(f3942,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))))))))) ) | $spl34),
  inference(unit_resulting_resolution,[],[f1999,f255])).
fof(f3878,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))))))))))))))))) | ($spl34 | $spl43)),
  inference(forward_demodulation,[],[f3877,f1208])).
fof(f3877,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))))))))))))))))) | ($spl34 | $spl43)),
  inference(unit_resulting_resolution,[],[f3813,f255])).
fof(f3813,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))))))))))))))) | ($spl34 | $spl43)),
  inference(forward_demodulation,[],[f3812,f1208])).
fof(f3812,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))))))))))))))) | ($spl34 | $spl43)),
  inference(unit_resulting_resolution,[],[f3753,f255])).
fof(f3753,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))))))))))))) | ($spl34 | $spl43)),
  inference(forward_demodulation,[],[f3752,f1208])).
fof(f3752,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))))))))))))) | ($spl34 | $spl43)),
  inference(unit_resulting_resolution,[],[f3587,f255])).
fof(f3739,plain,(
  ( ! [X30,X31] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X31))) | s('type.num.num',X31) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X30),'const.list.NIL_0')))) ) | $spl34),
  inference(forward_demodulation,[],[f3702,f1208])).
fof(f3702,plain,(
  ( ! [X30,X31] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X31))) | s('type.num.num',X31) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X30),'const.list.NIL_0')))) ) | $spl34),
  inference(superposition,[],[f255,f3368])).
fof(f3587,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))))))))))) | ($spl34 | $spl43)),
  inference(forward_demodulation,[],[f3586,f1208])).
fof(f3586,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))))))))))) | ($spl34 | $spl43)),
  inference(unit_resulting_resolution,[],[f3577,f255])).
fof(f3577,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))))))))) | ($spl34 | $spl43)),
  inference(forward_demodulation,[],[f3576,f1208])).
fof(f3576,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))))))))) | ($spl34 | $spl43)),
  inference(unit_resulting_resolution,[],[f3464,f255])).
fof(f3542,plain,(
  ( ! [X28] : (~p(s(bool,happ(s(fun(bool,bool),X28),s(bool,'F_0')))) | s(bool,'F_0') = s(bool,sK11('const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')),X28,bool))) ) | ($spl34 | $spl43)),
  inference(forward_demodulation,[],[f3497,f3358])).
fof(f3497,plain,(
  ( ! [X28] : (~p(s(bool,happ(s(fun(bool,bool),X28),s(bool,'F_0')))) | s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0'))) = s(bool,sK11('const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')),X28,bool))) ) | ($spl34 | $spl43)),
  inference(superposition,[],[f222,f3358])).
fof(f3464,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))))))) | ($spl34 | $spl43)),
  inference(forward_demodulation,[],[f3463,f1208])).
fof(f3463,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))))))) | ($spl34 | $spl43)),
  inference(unit_resulting_resolution,[],[f3352,f255])).
fof(f3436,plain,(
  ( ! [X43] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X43))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X43))),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl34),
  inference(superposition,[],[f1188,f207])).
fof(f3364,plain,(
  s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),sK2) | ($spl34 | $spl43)),
  inference(unit_resulting_resolution,[],[f3347,f1191])).
fof(f3358,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0'))) | ($spl34 | $spl43)),
  inference(unit_resulting_resolution,[],[f179,f3348,f251])).
fof(f3348,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | ($spl34 | $spl43)),
  inference(unit_resulting_resolution,[],[f3347,f1214])).
fof(f3352,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))))) | ($spl34 | $spl43)),
  inference(forward_demodulation,[],[f3351,f1208])).
fof(f3351,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))))) | $spl43),
  inference(unit_resulting_resolution,[],[f3347,f255])).
fof(f3342,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) | s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),'const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X0),X1),s('type.list.list'(X0),X2)))) ) | $spl34),
  inference(superposition,[],[f1190,f217])).
fof(f3333,plain,(
  ( ! [X7] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X7))) | s('type.num.num',X7) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl34),
  inference(forward_demodulation,[],[f3297,f1208])).
fof(f3297,plain,(
  ( ! [X7] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X7))) | s('type.num.num',X7) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl34),
  inference(superposition,[],[f255,f2641])).
fof(f3220,plain,(
  ( ! [X9] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X9))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num',X9) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl34),
  inference(superposition,[],[f255,f1965])).
fof(f3198,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) | s('type.num.num',X0) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl34),
  inference(superposition,[],[f255,f1965])).
fof(f3196,plain,(
  s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl34),
  inference(superposition,[],[f198,f1965])).
fof(f3195,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl34),
  inference(superposition,[],[f1183,f1965])).
fof(f2832,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))) | s('type.num.num',X1) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl34),
  inference(superposition,[],[f255,f1212])).
fof(f2946,plain,(
  ( ! [X42] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X42))) | s('type.num.num',X42) = s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl34),
  inference(forward_demodulation,[],[f2828,f1208])).
fof(f2828,plain,(
  ( ! [X42] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X42))) | s('type.num.num',X42) = s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl34),
  inference(superposition,[],[f255,f1206])).
fof(f2945,plain,(
  ( ! [X39,X41,X40] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X41))) | s('type.num.num',X41) = s('type.num.num','const.numeral.iSUB_3'(s(bool,X39),s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X40)))) ) | $spl34),
  inference(forward_demodulation,[],[f2827,f1208])).
fof(f2827,plain,(
  ( ! [X39,X41,X40] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X41))) | s('type.num.num',X41) = s('type.num.num','const.numeral.iSUB_3'(s(bool,X39),s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X40)))) )),
  inference(superposition,[],[f255,f232])).
fof(f2942,plain,(
  ( ! [X30] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X30))) | s('type.num.num',X30) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl34),
  inference(forward_demodulation,[],[f2822,f1212])).
fof(f2822,plain,(
  ( ! [X30] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X30))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num',X30) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(superposition,[],[f255,f177])).
fof(f2941,plain,(
  ( ! [X28,X29] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X29))) | s('type.num.num',X29) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X28)))) ) | $spl34),
  inference(forward_demodulation,[],[f2821,f1208])).
fof(f2821,plain,(
  ( ! [X28,X29] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X29))) | s('type.num.num',X29) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X28)))) ) | $spl34),
  inference(superposition,[],[f255,f1174])).
fof(f2940,plain,(
  ( ! [X26,X27] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X27))) | s('type.num.num',X27) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X26),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl34),
  inference(forward_demodulation,[],[f2820,f1208])).
fof(f2820,plain,(
  ( ! [X26,X27] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X27))) | s('type.num.num',X27) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X26),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl34),
  inference(superposition,[],[f255,f1173])).
fof(f2939,plain,(
  ( ! [X24,X25] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X25))) | s('type.num.num',X25) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X24)))))))) ) | $spl34),
  inference(forward_demodulation,[],[f2819,f1208])).
fof(f2819,plain,(
  ( ! [X24,X25] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X25))) | s('type.num.num',X25) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X24)))))))) ) | $spl34),
  inference(superposition,[],[f255,f1184])).
fof(f2938,plain,(
  ( ! [X23,X22] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X23))) | s('type.num.num',X23) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X22)))))))) ) | $spl34),
  inference(forward_demodulation,[],[f2818,f1208])).
fof(f2818,plain,(
  ( ! [X23,X22] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X23))) | s('type.num.num',X23) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X22)))))))) ) | $spl34),
  inference(superposition,[],[f255,f1183])).
fof(f2937,plain,(
  ( ! [X21,X20] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X21))) | s('type.num.num',X21) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X20),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl34),
  inference(forward_demodulation,[],[f2817,f1212])).
fof(f2817,plain,(
  ( ! [X21,X20] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X21))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num',X21) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X20),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl34),
  inference(superposition,[],[f255,f1213])).
fof(f2936,plain,(
  ( ! [X19,X18] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X19))) | s('type.num.num',X19) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X18)))) ) | $spl34),
  inference(forward_demodulation,[],[f2816,f1208])).
fof(f2816,plain,(
  ( ! [X19,X18] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X19))) | s('type.num.num',X19) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X18)))) ) | $spl34),
  inference(superposition,[],[f255,f1179])).
fof(f2815,plain,(
  ( ! [X17,X16] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X16))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X17))) | s('type.num.num',X17) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X16),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl34),
  inference(superposition,[],[f255,f1177])).
fof(f2935,plain,(
  ( ! [X14,X15] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X15))) | s('type.num.num',X15) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X14),s('type.num.num',X14)))) ) | $spl34),
  inference(forward_demodulation,[],[f2814,f1208])).
fof(f2814,plain,(
  ( ! [X14,X15] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X15))) | s('type.num.num',X15) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X14),s('type.num.num',X14)))) ) | $spl34),
  inference(superposition,[],[f255,f1176])).
fof(f2811,plain,(
  ( ! [X10,X11] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X10))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X11))) | s('type.num.num',X11) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X10)))) ) | $spl34),
  inference(superposition,[],[f255,f2283])).
fof(f2808,plain,(
  ( ! [X2,X3] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X3))) | s('type.num.num',X3) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl34),
  inference(superposition,[],[f255,f1178])).
fof(f2932,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))) | s('type.num.num',X1) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl34),
  inference(forward_demodulation,[],[f2807,f1212])).
fof(f2807,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num',X1) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl34),
  inference(superposition,[],[f255,f1212])).
fof(f2931,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) | s('type.num.num',X0) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl34),
  inference(forward_demodulation,[],[f2806,f1208])).
fof(f2806,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) | s('type.num.num',X0) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl34),
  inference(superposition,[],[f255,f1208])).
fof(f2700,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl34),
  inference(unit_resulting_resolution,[],[f179,f2259,f251])).
fof(f2701,plain,(
  ( ! [X0,X1] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.ZERO_0'))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1))),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl34),
  inference(unit_resulting_resolution,[],[f2259,f2259,f251])).
fof(f2641,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl34),
  inference(superposition,[],[f1184,f1212])).
fof(f2610,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0'))) | $spl34),
  inference(unit_resulting_resolution,[],[f179,f2059,f251])).
fof(f2580,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))) ) | $spl34),
  inference(unit_resulting_resolution,[],[f2168,f1188])).
fof(f2479,plain,(
  ( ! [X0] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))))),s('type.num.num','const.arithmetic.ZERO_0'))))) ) | $spl34),
  inference(unit_resulting_resolution,[],[f2084,f1214])).
fof(f2480,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))) ) | $spl34),
  inference(unit_resulting_resolution,[],[f2084,f1188])).
fof(f2460,plain,(
  ( ! [X35] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X35))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X35)))) ) | $spl34),
  inference(superposition,[],[f1188,f2283])).
fof(f2355,plain,(
  ( ! [X57,X56] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X57),s('type.num.num',X56))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X56),s('type.num.num',X57)))))) ) | $spl34),
  inference(superposition,[],[f1189,f235])).
fof(f2354,plain,(
  ( ! [X54,X55] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X55),s('type.num.num',X54))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X54),s('type.num.num',X55)))) ) | $spl34),
  inference(superposition,[],[f1188,f235])).
fof(f2281,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.ZERO_0')))) | $spl34),
  inference(unit_resulting_resolution,[],[f2083,f1214])).
fof(f2282,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl34),
  inference(unit_resulting_resolution,[],[f2083,f1188])).
fof(f2259,plain,(
  ( ! [X0] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.ZERO_0'))))) ) | $spl34),
  inference(unit_resulting_resolution,[],[f2197,f1214])).
fof(f2197,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))) ) | $spl34),
  inference(superposition,[],[f2144,f197])).
fof(f2168,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))) ) | $spl34),
  inference(superposition,[],[f1998,f197])).
fof(f2144,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))) ) | $spl34),
  inference(unit_resulting_resolution,[],[f1998,f1189])).
fof(f2084,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))) ) | $spl34),
  inference(superposition,[],[f2056,f197])).
fof(f2083,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl34),
  inference(superposition,[],[f2056,f177])).
fof(f2061,plain,(
  ( ! [X0] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))))),s('type.num.num','const.arithmetic.ZERO_0'))))) ) | $spl34),
  inference(unit_resulting_resolution,[],[f2056,f1214])).
fof(f2062,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))))))) ) | $spl34),
  inference(unit_resulting_resolution,[],[f2056,f1188])).
fof(f2059,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0')))) | $spl34),
  inference(unit_resulting_resolution,[],[f2004,f1214])).
fof(f2060,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl34),
  inference(unit_resulting_resolution,[],[f2004,f1188])).
fof(f2004,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | $spl34),
  inference(superposition,[],[f1997,f197])).
fof(f1997,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl34),
  inference(superposition,[],[f1974,f1212])).
fof(f1999,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))))))) ) | $spl34),
  inference(forward_demodulation,[],[f1976,f199])).
fof(f1976,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))))) ) | $spl34),
  inference(unit_resulting_resolution,[],[f1974,f1188])).
fof(f1902,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0'))) | $spl34),
  inference(unit_resulting_resolution,[],[f179,f1716,f251])).
fof(f1865,plain,(
  s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl34),
  inference(superposition,[],[f198,f1212])).
fof(f1716,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0')))) | $spl34),
  inference(forward_demodulation,[],[f1690,f1213])).
fof(f1690,plain,(
  ( ! [X0] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0'))))) ) | $spl34),
  inference(unit_resulting_resolution,[],[f1210,f1214])).
fof(f1219,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X0) | s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl34),
  inference(forward_demodulation,[],[f1211,f1171])).
fof(f1211,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X0)) ) | $spl34),
  inference(backward_demodulation,[],[f1171,f1165])).
fof(f1210,plain,(
  ( ! [X4] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X4),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl34),
  inference(backward_demodulation,[],[f1171,f1153])).
fof(f1206,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | $spl34),
  inference(backward_demodulation,[],[f1171,f997])).
fof(f1203,plain,(
  ( ! [X12,X11] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X11))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.bool.COND_3'(s(bool,'T_0'),s('type.num.num',X11),s('type.num.num',X12)))) ) | $spl34),
  inference(backward_demodulation,[],[f1171,f979])).
fof(f1202,plain,(
  ( ! [X8] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X8))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X8),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl34),
  inference(backward_demodulation,[],[f1171,f976])).
fof(f1201,plain,(
  ( ! [X7] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X7))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X7)))))) ) | $spl34),
  inference(backward_demodulation,[],[f1171,f975])).
fof(f1217,plain,(
  ( ! [X2] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl34),
  inference(forward_demodulation,[],[f1200,f1171])).
fof(f1200,plain,(
  ( ! [X2] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2)))) ) | $spl34),
  inference(backward_demodulation,[],[f1171,f969])).
fof(f1216,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl34),
  inference(forward_demodulation,[],[f1199,f1171])).
fof(f1199,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))) ) | $spl34),
  inference(backward_demodulation,[],[f1171,f966])).
fof(f1196,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | $spl34),
  inference(backward_demodulation,[],[f1171,f406])).
fof(f1190,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) | s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1)) ) | $spl34),
  inference(backward_demodulation,[],[f1171,f215])).
fof(f1188,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X0)) ) | $spl34),
  inference(backward_demodulation,[],[f1171,f209])).
fof(f1184,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))))) ) | $spl34),
  inference(backward_demodulation,[],[f1171,f203])).
fof(f1183,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))) ) | $spl34),
  inference(backward_demodulation,[],[f1171,f200])).
fof(f1179,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X0)))) ) | $spl34),
  inference(backward_demodulation,[],[f1171,f188])).
fof(f1176,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X0),s('type.num.num',X0)))) ) | $spl34),
  inference(backward_demodulation,[],[f1171,f185])).
fof(f1175,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X0)))) ) | $spl34),
  inference(backward_demodulation,[],[f1171,f183])).
fof(f1174,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X0)))) ) | $spl34),
  inference(backward_demodulation,[],[f1171,f182])).
fof(f1173,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl34),
  inference(backward_demodulation,[],[f1171,f181])).
fof(f15310,plain,(
  $false | ($spl1 | $spl4 | $spl6 | $spl34 | $spl40)),
  inference(subsumption_resolution,[],[f15309,f7279])).
fof(f7279,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | ($spl1 | $spl4 | $spl34 | $spl40)),
  inference(forward_demodulation,[],[f7278,f3368])).
fof(f7278,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.NIL_0'))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | ($spl1 | $spl4 | $spl34 | $spl40)),
  inference(forward_demodulation,[],[f3259,f7255])).
fof(f7255,plain,(
  s('type.list.list'(sK0),'const.list.NIL_0') = s('type.list.list'(sK0),sK2) | ($spl4 | $spl40)),
  inference(backward_demodulation,[],[f3345,f265])).
fof(f15309,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | ($spl6 | $spl34 | $spl40)),
  inference(forward_demodulation,[],[f15211,f3368])).
fof(f15211,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.NIL_0'))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | ($spl6 | $spl34 | $spl40)),
  inference(unit_resulting_resolution,[],[f267,f3345,f3258])).
fof(f15308,plain,(
  $false | ($spl1 | $spl4 | $spl6 | $spl34 | $spl40)),
  inference(subsumption_resolution,[],[f15307,f7279])).
fof(f15307,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | ($spl6 | $spl34 | $spl40)),
  inference(forward_demodulation,[],[f15306,f3368])).
fof(f15306,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.NIL_0'))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | ($spl6 | $spl34 | $spl40)),
  inference(forward_demodulation,[],[f15305,f267])).
fof(f15305,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.NIL_0'))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | ($spl34 | $spl40)),
  inference(forward_demodulation,[],[f15304,f2283])).
fof(f15304,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.NIL_0'))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | ($spl34 | $spl40)),
  inference(forward_demodulation,[],[f15212,f235])).
fof(f15212,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.NIL_0'))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3))),s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | ($spl34 | $spl40)),
  inference(unit_resulting_resolution,[],[f1178,f3345,f3258])).
fof(f15303,plain,(
  $false | ($spl1 | $spl4 | $spl6 | $spl34 | $spl40)),
  inference(subsumption_resolution,[],[f15302,f7279])).
fof(f15302,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | ($spl6 | $spl34 | $spl40)),
  inference(forward_demodulation,[],[f15301,f3368])).
fof(f15301,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.NIL_0'))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | ($spl6 | $spl34 | $spl40)),
  inference(forward_demodulation,[],[f15300,f267])).
fof(f15300,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.NIL_0'))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | ($spl34 | $spl40)),
  inference(forward_demodulation,[],[f15213,f2283])).
fof(f15213,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.NIL_0'))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | ($spl34 | $spl40)),
  inference(unit_resulting_resolution,[],[f2283,f3345,f3258])).
fof(f15299,plain,(
  $false | ($spl1 | $spl4 | $spl6 | $spl34 | $spl40)),
  inference(subsumption_resolution,[],[f15298,f7279])).
fof(f15298,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | ($spl6 | $spl34 | $spl40)),
  inference(forward_demodulation,[],[f15297,f3368])).
fof(f15297,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.NIL_0'))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | ($spl6 | $spl34 | $spl40)),
  inference(forward_demodulation,[],[f15296,f267])).
fof(f15296,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.NIL_0'))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | ($spl34 | $spl40)),
  inference(forward_demodulation,[],[f15214,f1177])).
fof(f15214,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.NIL_0'))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3))),s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | ($spl34 | $spl40)),
  inference(unit_resulting_resolution,[],[f1177,f3345,f3258])).
fof(f15295,plain,(
  $false | ($spl1 | $spl4 | $spl6 | $spl34 | $spl40)),
  inference(subsumption_resolution,[],[f15294,f7279])).
fof(f15294,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | ($spl6 | $spl34 | $spl40)),
  inference(forward_demodulation,[],[f15293,f3368])).
fof(f15293,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.NIL_0'))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | ($spl6 | $spl34 | $spl40)),
  inference(forward_demodulation,[],[f15292,f267])).
fof(f15292,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.NIL_0'))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | ($spl34 | $spl40)),
  inference(forward_demodulation,[],[f15215,f12222])).
fof(f15215,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.NIL_0'))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | ($spl34 | $spl40)),
  inference(unit_resulting_resolution,[],[f12222,f3345,f3258])).
fof(f15291,plain,(
  $false | ($spl1 | $spl4 | $spl6 | $spl34 | $spl40)),
  inference(subsumption_resolution,[],[f15290,f7279])).
fof(f15290,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | ($spl6 | $spl34 | $spl40)),
  inference(forward_demodulation,[],[f15289,f3368])).
fof(f15289,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.NIL_0'))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | ($spl6 | $spl34 | $spl40)),
  inference(forward_demodulation,[],[f15288,f267])).
fof(f15288,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.NIL_0'))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | ($spl34 | $spl40)),
  inference(forward_demodulation,[],[f15216,f196])).
fof(f15216,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.NIL_0'))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3))),s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | ($spl34 | $spl40)),
  inference(unit_resulting_resolution,[],[f196,f3345,f3258])).
fof(f15287,plain,(
  $false | ($spl1 | $spl4 | $spl6 | $spl34 | $spl40)),
  inference(subsumption_resolution,[],[f15286,f7279])).
fof(f15286,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | ($spl6 | $spl34 | $spl40)),
  inference(forward_demodulation,[],[f15285,f3368])).
fof(f15285,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.NIL_0'))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | ($spl6 | $spl34 | $spl40)),
  inference(forward_demodulation,[],[f15284,f267])).
fof(f15284,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.NIL_0'))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | ($spl34 | $spl40)),
  inference(forward_demodulation,[],[f15217,f217])).
fof(f15217,plain,(
  ( ! [X0] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.NIL_0'))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.bool.COND_3'(s(bool,'T_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3))),s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | ($spl34 | $spl40)),
  inference(unit_resulting_resolution,[],[f217,f3345,f3258])).
fof(f14123,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl59),
  inference(cnf_transformation,[],[f14123_D])).
fof(f14123_D,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) <=> ~$spl59),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl59])])).
fof(f14163,plain,(
  ( ! [X49] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X49),sK14('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),'const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),'const.list.NIL_0',X49))))) ) | $spl72),
  inference(cnf_transformation,[],[f14163_D])).
fof(f14163_D,plain,(
  ( ! [X49] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X49),sK14('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),'const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),'const.list.NIL_0',X49))))) ) <=> ~$spl72),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl72])])).
fof(f14162,plain,(
  ( ! [X49] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X49),sK14('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),'const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),'const.list.NIL_0',X49)))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | ($spl6 | $spl34)),
  inference(forward_demodulation,[],[f14161,f177])).
fof(f14161,plain,(
  ( ! [X49] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X49),sK14('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),'const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),'const.list.NIL_0',X49))))) ) | ($spl6 | $spl34)),
  inference(forward_demodulation,[],[f14105,f235])).
fof(f14105,plain,(
  ( ! [X49] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',sK1))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X49),sK14('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),'const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),'const.list.NIL_0',X49))))) ) | ($spl6 | $spl34)),
  inference(superposition,[],[f13364,f177])).
fof(f14149,plain,(
  ( ! [X30,X29] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X30),sK14('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),'const.arithmetic.EXP_2'(s('type.num.num',X29),s('type.num.num','const.arithmetic.ZERO_0')),'const.list.NIL_0',X30))))) ) | $spl70),
  inference(cnf_transformation,[],[f14149_D])).
fof(f14149_D,plain,(
  ( ! [X30,X29] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X30),sK14('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),'const.arithmetic.EXP_2'(s('type.num.num',X29),s('type.num.num','const.arithmetic.ZERO_0')),'const.list.NIL_0',X30))))) ) <=> ~$spl70),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl70])])).
fof(f14148,plain,(
  ( ! [X30,X29] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X30),sK14('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),'const.arithmetic.EXP_2'(s('type.num.num',X29),s('type.num.num','const.arithmetic.ZERO_0')),'const.list.NIL_0',X30)))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | ($spl6 | $spl34)),
  inference(forward_demodulation,[],[f14147,f1213])).
fof(f14147,plain,(
  ( ! [X30,X29] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X29),s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X30),sK14('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),'const.arithmetic.EXP_2'(s('type.num.num',X29),s('type.num.num','const.arithmetic.ZERO_0')),'const.list.NIL_0',X30))))) ) | ($spl6 | $spl34)),
  inference(forward_demodulation,[],[f14095,f235])).
fof(f14095,plain,(
  ( ! [X30,X29] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',sK1))) | s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X29),s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X30),sK14('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),'const.arithmetic.EXP_2'(s('type.num.num',X29),s('type.num.num','const.arithmetic.ZERO_0')),'const.list.NIL_0',X30))))) ) | ($spl6 | $spl34)),
  inference(superposition,[],[f13364,f1213])).
fof(f14138,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num',sK1))) | $spl67),
  inference(cnf_transformation,[],[f14138_D])).
fof(f14138_D,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num',sK1))) <=> ~$spl67),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl67])])).
fof(f14139,plain,(
  ( ! [X16] : (s('type.num.num',sK1) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X16),sK14('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),'const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),'const.list.NIL_0',X16))))) ) | $spl68),
  inference(cnf_transformation,[],[f14139_D])).
fof(f14139_D,plain,(
  ( ! [X16] : (s('type.num.num',sK1) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X16),sK14('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),'const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),'const.list.NIL_0',X16))))) ) <=> ~$spl68),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl68])])).
fof(f14136,plain,(
  ( ! [X16] : (s('type.num.num',sK1) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X16),sK14('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),'const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),'const.list.NIL_0',X16)))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num',sK1)))) ) | ($spl6 | $spl34)),
  inference(forward_demodulation,[],[f14088,f267])).
fof(f14088,plain,(
  ( ! [X16] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num',sK1))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X16),sK14('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),'const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),'const.list.NIL_0',X16))))) ) | ($spl6 | $spl34)),
  inference(superposition,[],[f13364,f267])).
fof(f14128,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl63),
  inference(cnf_transformation,[],[f14128_D])).
fof(f14128_D,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) <=> ~$spl63),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl63])])).
fof(f14129,plain,(
  ( ! [X2] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X2),sK14('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),'const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))),'const.list.NIL_0',X2))))) ) | $spl64),
  inference(cnf_transformation,[],[f14129_D])).
fof(f14129_D,plain,(
  ( ! [X2] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X2),sK14('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),'const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))),'const.list.NIL_0',X2))))) ) <=> ~$spl64),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl64])])).
fof(f14126,plain,(
  ( ! [X2] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X2),sK14('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),'const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))),'const.list.NIL_0',X2)))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | ($spl6 | $spl34)),
  inference(forward_demodulation,[],[f14125,f1965])).
fof(f14125,plain,(
  ( ! [X2] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X2),sK14('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),'const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))),'const.list.NIL_0',X2))))) ) | ($spl6 | $spl34)),
  inference(forward_demodulation,[],[f14082,f235])).
fof(f14082,plain,(
  ( ! [X2] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',sK1))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X2),sK14('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),'const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))),'const.list.NIL_0',X2))))) ) | ($spl6 | $spl34)),
  inference(superposition,[],[f13364,f1965])).
fof(f14124,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),sK14('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),'const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),'const.list.NIL_0',X1))))) ) | $spl60),
  inference(cnf_transformation,[],[f14124_D])).
fof(f14124_D,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),sK14('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),'const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),'const.list.NIL_0',X1))))) ) <=> ~$spl60),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl60])])).
fof(f14121,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),sK14('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),'const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),'const.list.NIL_0',X1)))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | ($spl6 | $spl34)),
  inference(forward_demodulation,[],[f14120,f1212])).
fof(f14120,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),sK14('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),'const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),'const.list.NIL_0',X1))))) ) | ($spl6 | $spl34)),
  inference(forward_demodulation,[],[f14081,f235])).
fof(f14081,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',sK1))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),sK14('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),'const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),'const.list.NIL_0',X1))))) ) | ($spl6 | $spl34)),
  inference(superposition,[],[f13364,f1212])).
fof(f8178,plain,(
  ( ! [X0] : (s(bool,X0) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl54),
  inference(cnf_transformation,[],[f8178_D])).
fof(f8178_D,plain,(
  ( ! [X0] : (s(bool,X0) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.ZERO_0')))) ) <=> ~$spl54),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl54])])).
fof(f8180,plain,(
  s(bool,'T_0') != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.ZERO_0'))) | $spl57),
  inference(cnf_transformation,[],[f8180_D])).
fof(f8180_D,plain,(
  s(bool,'T_0') != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.ZERO_0'))) <=> ~$spl57),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl57])])).
fof(f8150,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.ZERO_0'))) | s(bool,X0) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.ZERO_0')))) ) | ($spl1 | $spl4 | $spl34 | $spl40)),
  inference(equality_factoring,[],[f7838])).
fof(f7838,plain,(
  ( ! [X4] : (s(bool,X4) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.ZERO_0'))) | s(bool,'T_0') = s(bool,X4)) ) | ($spl1 | $spl4 | $spl34 | $spl40)),
  inference(subsumption_resolution,[],[f7829,f179])).
fof(f7829,plain,(
  ( ! [X4] : (p(s(bool,'F_0')) | s(bool,X4) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.ZERO_0'))) | s(bool,'T_0') = s(bool,X4)) ) | ($spl1 | $spl4 | $spl34 | $spl40)),
  inference(superposition,[],[f428,f7815])).
fof(f7815,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.ZERO_0'))) | ($spl1 | $spl4 | $spl34 | $spl40)),
  inference(unit_resulting_resolution,[],[f179,f7625,f251])).
fof(f7625,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.ZERO_0')))) | ($spl1 | $spl4 | $spl34 | $spl40)),
  inference(unit_resulting_resolution,[],[f7279,f1214])).
fof(f7442,plain,(
  $false | $spl8),
  inference(subsumption_resolution,[],[f7441,f179])).
fof(f7441,plain,(
  p(s(bool,'F_0')) | $spl8),
  inference(forward_demodulation,[],[f7440,f384])).
fof(f7440,plain,(
  ( ! [X6,X7,X5] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X5),s('type.num.num',X6))),s('type.num.num',X7))))) ) | $spl8),
  inference(subsumption_resolution,[],[f7318,f179])).
fof(f7318,plain,(
  ( ! [X6,X7,X5] : (p(s(bool,'F_0')) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X5),s('type.num.num',X6))),s('type.num.num',X7))))) ) | $spl8),
  inference(backward_demodulation,[],[f384,f5261])).
fof(f7436,plain,(
  $false | $spl8),
  inference(subsumption_resolution,[],[f7435,f179])).
fof(f7435,plain,(
  p(s(bool,'F_0')) | $spl8),
  inference(forward_demodulation,[],[f7434,f384])).
fof(f7434,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1))))))) ) | $spl8),
  inference(subsumption_resolution,[],[f7288,f179])).
fof(f7288,plain,(
  ( ! [X0,X1] : (p(s(bool,'F_0')) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1))))))) ) | $spl8),
  inference(backward_demodulation,[],[f384,f258])).
fof(f7265,plain,(
  $false | ($spl4 | $spl34 | $spl40 | $spl51)),
  inference(subsumption_resolution,[],[f7264,f1180])).
fof(f7264,plain,(
  s(bool,'T_0') != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.ZERO_0'))) | ($spl4 | $spl34 | $spl40 | $spl51)),
  inference(forward_demodulation,[],[f7263,f3368])).
fof(f7263,plain,(
  s(bool,'T_0') != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.NIL_0'))),s('type.num.num','const.arithmetic.ZERO_0'))) | ($spl4 | $spl40 | $spl51)),
  inference(forward_demodulation,[],[f6174,f7255])).
fof(f7262,plain,(
  $false | ($spl4 | $spl11 | $spl19 | $spl34 | $spl40 | $spl51)),
  inference(subsumption_resolution,[],[f7261,f386])).
fof(f7261,plain,(
  s(bool,'T_0') = s(bool,'F_0') | ($spl4 | $spl19 | $spl34 | $spl40 | $spl51)),
  inference(forward_demodulation,[],[f7260,f1180])).
fof(f7260,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.ZERO_0'))) | ($spl4 | $spl19 | $spl34 | $spl40 | $spl51)),
  inference(forward_demodulation,[],[f7259,f3368])).
fof(f7259,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.NIL_0'))),s('type.num.num','const.arithmetic.ZERO_0'))) | ($spl4 | $spl19 | $spl40 | $spl51)),
  inference(forward_demodulation,[],[f7235,f7255])).
fof(f7235,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0'))) | ($spl19 | $spl51)),
  inference(forward_demodulation,[],[f6358,f1080])).
fof(f1080,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.ZERO_0'))) | $spl19),
  inference(unit_resulting_resolution,[],[f179,f1064,f251])).
fof(f1064,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.ZERO_0')))) | $spl19),
  inference(forward_demodulation,[],[f1046,f205])).
fof(f1046,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',sK1))),s('type.num.num','const.num.|48|_0')))) | $spl19),
  inference(unit_resulting_resolution,[],[f985,f269])).
fof(f6358,plain,(
  s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.ZERO_0'))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0'))) | ($spl19 | $spl51)),
  inference(unit_resulting_resolution,[],[f6174,f5660])).
fof(f5660,plain,(
  ( ! [X55] : (s(bool,X55) = s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.ZERO_0'))) | s(bool,'T_0') = s(bool,X55)) ) | $spl19),
  inference(subsumption_resolution,[],[f5635,f179])).
fof(f5635,plain,(
  ( ! [X55] : (p(s(bool,'F_0')) | s(bool,X55) = s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.ZERO_0'))) | s(bool,'T_0') = s(bool,X55)) ) | $spl19),
  inference(superposition,[],[f428,f1080])).
fof(f7254,plain,(
  $false | ($spl11 | $spl19 | $spl34 | $spl42 | $spl51)),
  inference(subsumption_resolution,[],[f7253,f386])).
fof(f7253,plain,(
  s(bool,'T_0') = s(bool,'F_0') | ($spl19 | $spl34 | $spl42 | $spl51)),
  inference(forward_demodulation,[],[f7245,f1180])).
fof(f7245,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.ZERO_0'))) | ($spl19 | $spl42 | $spl51)),
  inference(backward_demodulation,[],[f3346,f7235])).
fof(f3346,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) | $spl42),
  inference(cnf_transformation,[],[f3346_D])).
fof(f3346_D,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) <=> ~$spl42),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl42])])).
fof(f7252,plain,(
  $false | ($spl34 | $spl42 | $spl51)),
  inference(subsumption_resolution,[],[f7244,f1180])).
fof(f7244,plain,(
  s(bool,'T_0') != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.ZERO_0'))) | ($spl42 | $spl51)),
  inference(backward_demodulation,[],[f3346,f6174])).
fof(f384,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0)) ) | $spl8),
  inference(cnf_transformation,[],[f384_D])).
fof(f384_D,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0)) ) <=> ~$spl8),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl8])])).
fof(f7228,plain,(
  ( ! [X68,X66,X67] : (p(s(bool,happ(s(fun(X66,bool),X67),s(X66,sK12('const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0')),X67,X66))))) | ~p(s(bool,happ(s(fun(X66,bool),X67),s(X66,X68))))) ) | $spl52),
  inference(cnf_transformation,[],[f7228_D])).
fof(f7228_D,plain,(
  ( ! [X68,X66,X67] : (p(s(bool,happ(s(fun(X66,bool),X67),s(X66,sK12('const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0')),X67,X66))))) | ~p(s(bool,happ(s(fun(X66,bool),X67),s(X66,X68))))) ) <=> ~$spl52),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl52])])).
fof(f7227,plain,(
  ( ! [X68,X66,X67,X65] : (p(s(bool,happ(s(fun(X66,bool),X67),s(X66,sK12('const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0')),X67,X66))))) | ~p(s(bool,happ(s(fun(X66,bool),X67),s(X66,X68)))) | s(bool,'F_0') = s(bool,X65)) ) | ($spl34 | $spl43)),
  inference(subsumption_resolution,[],[f7195,f433])).
fof(f7195,plain,(
  ( ! [X68,X66,X67,X65] : (~p(s(bool,X65)) | p(s(bool,happ(s(fun(X66,bool),X67),s(X66,sK12('const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0')),X67,X66))))) | ~p(s(bool,happ(s(fun(X66,bool),X67),s(X66,X68)))) | s(bool,'F_0') = s(bool,X65)) ) | ($spl34 | $spl43)),
  inference(superposition,[],[f224,f6965])).
fof(f6172,plain,(
  ( ! [X0] : (s(bool,X0) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl48),
  inference(cnf_transformation,[],[f6172_D])).
fof(f6172_D,plain,(
  ( ! [X0] : (s(bool,X0) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) ) <=> ~$spl48),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl48])])).
fof(f6174,plain,(
  s(bool,'T_0') != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0'))) | $spl51),
  inference(cnf_transformation,[],[f6174_D])).
fof(f6174_D,plain,(
  s(bool,'T_0') != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0'))) <=> ~$spl51),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl51])])).
fof(f6110,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0'))) | s(bool,X0) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) ) | ($spl34 | $spl43)),
  inference(equality_factoring,[],[f5656])).
fof(f5821,plain,(
  ( ! [X0] : (s(bool,X0) = s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl44),
  inference(cnf_transformation,[],[f5821_D])).
fof(f5821_D,plain,(
  ( ! [X0] : (s(bool,X0) = s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.ZERO_0')))) ) <=> ~$spl44),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl44])])).
fof(f5823,plain,(
  s(bool,'T_0') != s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.ZERO_0'))) | $spl47),
  inference(cnf_transformation,[],[f5823_D])).
fof(f5823_D,plain,(
  s(bool,'T_0') != s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.ZERO_0'))) <=> ~$spl47),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl47])])).
fof(f5762,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.ZERO_0'))) | s(bool,X0) = s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl19),
  inference(equality_factoring,[],[f5660])).
fof(f3345,plain,(
  s('type.list.list'(sK0),'const.list.NIL_0') = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),sK3))))))) | $spl40),
  inference(cnf_transformation,[],[f3345_D])).
fof(f3345_D,plain,(
  s('type.list.list'(sK0),'const.list.NIL_0') = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),sK3))))))) <=> ~$spl40),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl40])])).
fof(f3347,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) | $spl43),
  inference(cnf_transformation,[],[f3347_D])).
fof(f3347_D,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) <=> ~$spl43),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl43])])).
fof(f3341,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) | s('type.list.list'(sK0),'const.list.NIL_0') = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),sK3))))))) | ($spl4 | $spl34)),
  inference(superposition,[],[f1190,f265])).
fof(f1170,plain,(
  $false | $spl23),
  inference(subsumption_resolution,[],[f1169,f174])).
fof(f1169,plain,(
  ~p(s(bool,'T_0')) | $spl23),
  inference(forward_demodulation,[],[f1168,f189])).
fof(f1168,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.ZERO_0')))) | $spl23),
  inference(forward_demodulation,[],[f1167,f205])).
fof(f1167,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.num.|48|_0')))) | $spl23),
  inference(unit_resulting_resolution,[],[f988,f269])).
fof(f999,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | $spl36),
  inference(cnf_transformation,[],[f999_D])).
fof(f999_D,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) <=> ~$spl36),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl36])])).
fof(f1001,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | $spl39),
  inference(cnf_transformation,[],[f1001_D])).
fof(f1001_D,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) <=> ~$spl39),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl39])])).
fof(f980,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),
  inference(superposition,[],[f209,f178])).
fof(f997,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0'))) | $spl34),
  inference(cnf_transformation,[],[f997_D])).
fof(f997_D,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0'))) <=> ~$spl34),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl34])])).
fof(f988,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) | $spl23),
  inference(cnf_transformation,[],[f988_D])).
fof(f988_D,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) <=> ~$spl23),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl23])])).
fof(f978,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))),
  inference(superposition,[],[f209,f176])).
fof(f994,plain,(
  ( ! [X6] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X6)))) ) | $spl32),
  inference(cnf_transformation,[],[f994_D])).
fof(f994_D,plain,(
  ( ! [X6] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X6)))) ) <=> ~$spl32),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl32])])).
fof(f973,plain,(
  ( ! [X6] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X6)))) )),
  inference(superposition,[],[f209,f182])).
fof(f993,plain,(
  ( ! [X5] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X5),s('type.num.num','const.num.|48|_0')))) ) | $spl30),
  inference(cnf_transformation,[],[f993_D])).
fof(f993_D,plain,(
  ( ! [X5] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X5),s('type.num.num','const.num.|48|_0')))) ) <=> ~$spl30),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl30])])).
fof(f972,plain,(
  ( ! [X5] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X5),s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f209,f181])).
fof(f990,plain,(
  ( ! [X4] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X4),s('type.num.num','const.num.|48|_0')))) ) | $spl26),
  inference(cnf_transformation,[],[f990_D])).
fof(f990_D,plain,(
  ( ! [X4] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X4),s('type.num.num','const.num.|48|_0')))) ) <=> ~$spl26),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl26])])).
fof(f992,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | $spl29),
  inference(cnf_transformation,[],[f992_D])).
fof(f992_D,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) <=> ~$spl29),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl29])])).
fof(f971,plain,(
  ( ! [X4] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X4),s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f209,f268])).
fof(f989,plain,(
  ( ! [X3] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X3)))) ) | $spl24),
  inference(cnf_transformation,[],[f989_D])).
fof(f989_D,plain,(
  ( ! [X3] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X3)))) ) <=> ~$spl24),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl24])])).
fof(f970,plain,(
  ( ! [X3] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X3)))) )),
  inference(superposition,[],[f209,f188])).
fof(f986,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X1),s('type.num.num',X1)))) ) | $spl20),
  inference(cnf_transformation,[],[f986_D])).
fof(f986_D,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X1),s('type.num.num',X1)))) ) <=> ~$spl20),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl20])])).
fof(f968,plain,(
  ( ! [X1] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X1),s('type.num.num',X1)))) )),
  inference(superposition,[],[f209,f185])).
fof(f983,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3))) | $spl16),
  inference(cnf_transformation,[],[f983_D])).
fof(f983_D,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3))) <=> ~$spl16),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl16])])).
fof(f985,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',sK1))) | $spl19),
  inference(cnf_transformation,[],[f985_D])).
fof(f985_D,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',sK1))) <=> ~$spl19),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl19])])).
fof(f967,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',sK1))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3))) | $spl6),
  inference(superposition,[],[f209,f267])).
fof(f527,plain,(
  $false | ($spl1 | $spl12)),
  inference(subsumption_resolution,[],[f526,f492])).
fof(f492,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num',X0)) ) | $spl12),
  inference(subsumption_resolution,[],[f476,f174])).
fof(f476,plain,(
  ( ! [X0] : (~p(s(bool,'T_0')) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X0)) ) | $spl12),
  inference(backward_demodulation,[],[f430,f269])).
fof(f526,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) | ($spl1 | $spl12)),
  inference(forward_demodulation,[],[f499,f492])).
fof(f499,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl1 | $spl12)),
  inference(backward_demodulation,[],[f492,f262])).
fof(f482,plain,(
  $false | $spl12),
  inference(subsumption_resolution,[],[f481,f174])).
fof(f481,plain,(
  ~p(s(bool,'T_0')) | $spl12),
  inference(forward_demodulation,[],[f480,f430])).
fof(f480,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1))))))) ) | $spl12),
  inference(subsumption_resolution,[],[f460,f174])).
fof(f460,plain,(
  ( ! [X0,X1] : (~p(s(bool,'T_0')) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1))))))) ) | $spl12),
  inference(backward_demodulation,[],[f430,f257])).
fof(f477,plain,(
  $false | $spl12),
  inference(subsumption_resolution,[],[f444,f174])).
fof(f444,plain,(
  ~p(s(bool,'T_0')) | $spl12),
  inference(backward_demodulation,[],[f430,f179])).
fof(f430,plain,(
  ( ! [X2] : (s(bool,'T_0') = s(bool,X2)) ) | $spl12),
  inference(cnf_transformation,[],[f430_D])).
fof(f430_D,plain,(
  ( ! [X2] : (s(bool,'T_0') = s(bool,X2)) ) <=> ~$spl12),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl12])])).
fof(f431,plain,(
  ( ! [X3] : (p(s(bool,X3)) | s(bool,'F_0') = s(bool,X3)) ) | $spl14),
  inference(cnf_transformation,[],[f431_D])).
fof(f431_D,plain,(
  ( ! [X3] : (p(s(bool,X3)) | s(bool,'F_0') = s(bool,X3)) ) <=> ~$spl14),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl14])])).
fof(f429,plain,(
  ( ! [X2,X3] : (p(s(bool,X3)) | s(bool,'F_0') = s(bool,X3) | s(bool,'T_0') = s(bool,X2)) )),
  inference(subsumption_resolution,[],[f412,f374])).
fof(f412,plain,(
  ( ! [X2,X3] : (p(s(bool,X2)) | p(s(bool,X3)) | s(bool,'F_0') = s(bool,X3) | s(bool,'T_0') = s(bool,X2)) )),
  inference(superposition,[],[f251,f208])).
fof(f386,plain,(
  s(bool,'T_0') != s(bool,'F_0') | $spl11),
  inference(cnf_transformation,[],[f386_D])).
fof(f386_D,plain,(
  s(bool,'T_0') != s(bool,'F_0') <=> ~$spl11),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl11])])).
fof(f381,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,'F_0') = s(bool,X0)) )),
  inference(equality_factoring,[],[f208])).
fof(f261,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl0),
  inference(cnf_transformation,[],[f261_D])).
fof(f261_D,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f267,plain,(
  s('type.num.num',sK1) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3))) | $spl6),
  inference(cnf_transformation,[],[f267_D])).
fof(f267_D,plain,(
  s('type.num.num',sK1) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3))) <=> ~$spl6),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl6])])).
fof(f171,plain,(
  s('type.num.num',sK1) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))),
  inference(cnf_transformation,[],[f150])).
fof(f150,plain,(
  (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | (s('type.num.num',sK1) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3))) & s('type.list.list'(sK0),sK2) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),sK3))))))))) & (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | ! [X3,X4,X5,X6] : (s('type.num.num',sK1) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X3))) | s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),X3)))))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2,sK3,sK4,sK5,sK6])],[f149])).
fof(f149,plain,(
  ? [X0,X1,X2] : ((s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | ? [X7,X8,X9,X10] : (s('type.num.num',X1) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X7))) & s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),X7))))))))) & (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | ! [X3,X4,X5,X6] : (s('type.num.num',X1) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))) | s('type.list.list'(X0),X2) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),X3))))))))))),
  inference(rectify,[],[f148])).
fof(f148,plain,(
  ? [X0,X1,X2] : ((s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | ? [X3,X4,X5,X6] : (s('type.num.num',X1) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))) & s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),X3))))))))) & (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | ! [X3,X4,X5,X6] : (s('type.num.num',X1) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))) | s('type.list.list'(X0),X2) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),X3))))))))))),
  inference(nnf_transformation,[],[f144])).
fof(f144,plain,(
  ? [X0,X1,X2] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) <~> ? [X3,X4,X5,X6] : (s('type.num.num',X1) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))) & s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),X3)))))))))),
  inference(ennf_transformation,[],[f72])).
fof(f72,plain,(
  ~! [X0,X1,X2] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) <=> ? [X3,X4,X5,X6] : (s('type.num.num',X1) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))) & s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),X3)))))))))),
  inference(flattening,[],[f71])).
fof(f71,plain,(
  ~! [X0] : ! [X1,X2] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) <=> ? [X3,X4,X5,X6] : (s('type.num.num',X1) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))) & s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),X3)))))))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : ! [X7,X8] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X8))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X7),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) <=> ? [X9,X10,X11,X12] : (s('type.num.num',X7) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X9))) & s('type.list.list'(X6),X8) = s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X10),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X11),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X12),s('type.list.list'(X6),X9)))))))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : ! [X7,X8] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X8))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X7),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) <=> ? [X9,X10,X11,X12] : (s('type.num.num',X7) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X9))) & s('type.list.list'(X6),X8) = s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X10),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X11),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X12),s('type.list.list'(X6),X9)))))))))),
  file('thm.quantHeuristics.LIST_LENGTH_3|split|13','thm.quantHeuristics.LIST_LENGTH_3|split|13')).
fof(f265,plain,(
  s('type.list.list'(sK0),sK2) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),sK3))))))) | $spl4),
  inference(cnf_transformation,[],[f265_D])).
fof(f265_D,plain,(
  s('type.list.list'(sK0),sK2) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),sK3))))))) <=> ~$spl4),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl4])])).
fof(f172,plain,(
  s('type.list.list'(sK0),sK2) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),sK3))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))),
  inference(cnf_transformation,[],[f150])).
fof(f262,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl1),
  inference(cnf_transformation,[],[f262_D])).
fof(f262_D,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) <=> ~$spl1),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1])])).
fof(f263,plain,(
  ( ! [X6,X4,X5,X3] : (s('type.num.num',sK1) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X3))) | s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),X3)))))))) ) | $spl2),
  inference(cnf_transformation,[],[f263_D])).
fof(f263_D,plain,(
  ( ! [X6,X4,X5,X3] : (s('type.num.num',sK1) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X3))) | s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),X3)))))))) ) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f173,plain,(
  ( ! [X6,X4,X5,X3] : (s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),X3))))))) | s('type.num.num',sK1) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X3))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) )),
  inference(cnf_transformation,[],[f150])).
% SZS output end Proof for thm.quantHeuristics
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 323
% Passive clauses: 1451
% Generated clauses: 17234
% Final active clauses: 203
% Final passive clauses: 692
% Input formulas: 69
% Initial clauses: 90
% 
% Duplicate literals: 48
% Trivial inequalities: 50
% Fw subsumption resolutions: 309
% Fw demodulations: 4364
% Bw demodulations: 424
% Condensations: 16
% Global subsumptions: 91
% 
% Simple tautologies: 20
% Equational tautologies: 59
% Forward subsumptions: 10534
% Fw demodulations to eq. taut.: 146
% Bw demodulations to eq. taut.: 16
% 
% Unit resulting resolution: 1147
% Factoring: 1
% Forward superposition: 6572
% Backward superposition: 3598
% Self superposition: 73
% Equality factoring: 14
% Equality resolution: 9
% 
% Split clauses: 26
% Split components: 52
% SAT solver clauses: 1716
% SAT solver unit clauses: 185
% SAT solver binary clauses: 598
% 
% Sat splits: 26
% Sat splitting refutations: 120
% 
% Memory used [KB]: 13816
% Time elapsed: 0.508 s
% ------------------------------
% ------------------------------
% Success in time 1.811 s
