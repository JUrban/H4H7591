Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 299 next slice time: 5
dis+11_7_3 on thm.rat
% (68915)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 758
% Passive clauses: 7962
% Generated clauses: 22571
% Final active clauses: 686
% Final passive clauses: 6606
% Input formulas: 61
% Initial clauses: 199
% 
% Duplicate literals: 471
% Trivial inequalities: 149
% Fw subsumption resolutions: 2193
% Fw demodulations: 1298
% Bw demodulations: 63
% 
% Simple tautologies: 248
% Equational tautologies: 62
% Forward subsumptions: 9539
% Fw demodulations to eq. taut.: 26
% 
% Binary resolution: 8758
% Factoring: 1299
% Forward superposition: 3903
% Backward superposition: 3807
% Self superposition: 86
% Equality factoring: 30
% Equality resolution: 38
% 
% Split clauses: 641
% Split components: 1289
% SAT solver clauses: 1113
% SAT solver unit clauses: 20
% SAT solver binary clauses: 206
% 
% Sat splits: 640
% Sat splitting refutations: 3
% 
% TWLsolver clauses: 1111
% TWLsolver calls for satisfiability: 412
% 
% Memory used [KB]: 11897
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 293 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.rat
% (68929)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 392
% Passive clauses: 2175
% Generated clauses: 12664
% Final active clauses: 384
% Final passive clauses: 1765
% Input formulas: 61
% Initial clauses: 199
% 
% Duplicate literals: 232
% Trivial inequalities: 66
% Fw subsumption resolutions: 964
% Fw demodulations: 1316
% Bw demodulations: 23
% Condensations: 247
% Global subsumptions: 22
% 
% Simple tautologies: 316
% Equational tautologies: 20
% Forward subsumptions: 4616
% Fw demodulations to eq. taut.: 18
% 
% Binary resolution: 2599
% Factoring: 142
% Forward superposition: 2402
% Backward superposition: 2107
% Self superposition: 81
% Equality factoring: 32
% Equality resolution: 19
% 
% Split clauses: 93
% Split components: 203
% SAT solver clauses: 2874
% SAT solver unit clauses: 202
% SAT solver binary clauses: 75
% SAT solver learnt clauses: 44
% SAT solver learnt literals: 10
% 
% Sat splits: 93
% Sat splitting refutations: 2
% 
% TWLsolver clauses: 2786
% TWLsolver calls for satisfiability: 1427
% 
% Memory used [KB]: 14711
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 286 next slice time: 103
lrs+11_2_br=off:cond=on:fde=none:gs=on:gsaa=full_model:lwlo=on:nwc=2:sas=minisat:stl=30:ssfp=100000:ssfq=1.4:smm=sco:ssnc=none:sp=occurrence:urr=on_98 on thm.rat
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.rat
% SZS output start Proof for thm.rat
fof(f29634,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f798,f802,f800,f1438,f1464,f1500,f1503,f1502,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2255,f2183,f2257,f2187,f2259,f2190,f2262,f2194,f2264,f2197,f2266,f2200,f2268,f2203,f2270,f2206,f2272,f2209,f2274,f2212,f2276,f2215,f2278,f2218,f2280,f2221,f2282,f2224,f2284,f2227,f2286,f2184,f2230,f2303,f2304,f2305,f2854,f2859,f2898,f4059,f4060,f4067,f4064,f4061,f4062,f4070,f4063,f4072,f4065,f4069,f4083,f4084,f4096,f4094,f4610,f4611,f4455,f4617,f4623,f4613,f4624,f4878,f4882,f4856,f4892,f5007,f5019,f5081,f2896,f7473,f7504,f7479,f7506,f8621,f8623,f8622,f8670,f8903,f8901,f10729,f10732,f10730,f10667,f10733,f10734,f10674,f10735,f7503,f11120,f11125,f11126,f11127,f11128,f11129,f11132,f11131,f11130,f11135,f11140,f11141,f11195,f11196,f11209,f11214,f11215,f11216,f11217,f11246,f11247,f11248,f11249,f11427,f11430,f11431,f11434,f11437,f11441,f11445,f11446,f11447,f11448,f11449,f11450,f11451,f11452,f11453,f11454,f11763,f11780,f11783,f11803,f11828,f11833,f11844,f11845,f11859,f11880,f11884,f11887,f11898,f11924,f11927,f11970,f11977,f12069,f12073,f12088,f12091,f12094,f12097,f12100,f12103,f12106,f12109,f12112,f12118,f12121,f12123,f12125,f12127,f12133,f12136,f12144,f12146,f12148,f12150,f12152,f12161,f12163,f12165,f12178,f12181,f12183,f12191,f12193,f12195,f12197,f12199,f12200,f12206,f12208,f12210,f12212,f12214,f12216,f12218,f12220,f12223,f12249,f12253,f12259,f11846,f12250,f12331,f12336,f12345,f12352,f12357,f12360,f12363,f12364,f12365,f12370,f12373,f12374,f13337,f13340,f13339,f14377,f14311,f14385,f14387,f14393,f14398,f14029,f13988,f14412,f14413,f14416,f14417,f14426,f14427,f14430,f14432,f14433,f14434,f14435,f14405,f14436,f14406,f14324,f14319,f14376,f14437,f13984,f14456,f14460,f14458,f14461,f14440,f14463,f14466,f14467,f14457,f1462,f15239,f15238,f14378,f15250,f23832,f23837,f23840,f23843,f23397,f23398,f23852,f23855,f23858,f23861,f23864,f23867,f23870,f23873,f23876,f23879,f23882,f23885,f23888,f23891,f23894,f23897,f23900,f23903,f23417,f23907,f23910,f23913,f23916,f23919,f23922,f23925,f23927,f23928,f23930,f23931,f23933,f23934,f23936,f23937,f23939,f23940,f23942,f23943,f23945,f24174,f24698,f24699,f24720,f24723,f25084,f25085,f25493,f25494,f25496,f25888,f25889,f25891,f26486,f23834,f26487,f23839,f26488,f23842,f26489,f23845,f26104,f23849,f26105,f23851,f26490,f23854,f26491,f23857,f26492,f23860,f26493,f23863,f26494,f23866,f26495,f23869,f26496,f23872,f26497,f23875,f26498,f23878,f26499,f23881,f26500,f23884,f26501,f23887,f26502,f23890,f26503,f23893,f26504,f23896,f26505,f23899,f26506,f23902,f26507,f23905,f26124,f23906,f23847,f26508,f23909,f26509,f23912,f26510,f23915,f26511,f23918,f26512,f23921,f26513,f23836,f23924,f26565,f26568,f26577,f26567,f26578,f26583,f26584,f26586,f26587,f4619,f13548,f13553,f14384,f26594,f26595,f26597,f26598,f26589,f26880,f26881,f26882,f26885,f26886,f26887,f26888,f26889,f26890,f26891,f26892,f26893,f26895,f26896,f26897,f26898,f26899,f26900,f26901,f26902,f26903,f26904,f26905,f26906,f26907,f26908,f26909,f26910,f26911,f26912,f26913,f26914,f26915,f26916,f26917,f26918,f26919,f26920,f26921,f26922,f26923,f26924,f26925,f26926,f26927,f26928,f26929,f26930,f26931,f26932,f26933,f26934,f26935,f26936,f26937,f26938,f26939,f26940,f26941,f26942,f26943,f26944,f26945,f26946,f26947,f26948,f26949,f26950,f26951,f26952,f26953,f26954,f26955,f26956,f26957,f26958,f26959,f26960,f26961,f26962,f26963,f26964,f26965,f26966,f26967,f26968,f26969,f26970,f26971,f26972,f26973,f26974,f26975,f26976,f26977,f26978,f26979,f26980,f26981,f26982,f26983,f26984,f26985,f26986,f26987,f26988,f26989,f26990,f26991,f26992,f26993,f26994,f26995,f26996,f26997,f26998,f26999,f27000,f27001,f27002,f27003,f27004,f27005,f27006,f27007,f27008,f27009,f27011,f27012,f27013,f27014,f27015,f27016,f27017,f27018,f27019,f27020,f27021,f27022,f27023,f27024,f27025,f27026,f27027,f27028,f27029,f27030,f27031,f27032,f27033,f27034,f27035,f27036,f27037,f27038,f27039,f27040,f27041,f27042,f27043,f27044,f27045,f27046,f27047,f27048,f27049,f27050,f27051,f27052,f27053,f27054,f27055,f27056,f27057,f27058,f27059,f27060,f27061,f27062,f27063,f27064,f27065,f27066,f27067,f27068,f27069,f27070,f27071,f27072,f27073,f27074,f27075,f27076,f27077,f27078,f27079,f27080,f27081,f27082,f27083,f27084,f27085,f27087,f27089,f27090,f27091,f27092,f27093,f27094,f27096,f27097,f27098,f27099,f27100,f27101,f27102,f27103,f27104,f27105,f27107,f27109,f27110,f27111,f27113,f27118,f27119,f27120,f27121,f27122,f27123,f27125,f27127,f27128,f27129,f27130,f27131,f27132,f27133,f27134,f27135,f27136,f27137,f27138,f27140,f27141,f27142,f27143,f27148,f27149,f27150,f27151,f27153,f27154,f27155,f27156,f27157,f27158,f27159,f27160,f27161,f27162,f27163,f27164,f27152,f14464,f14070,f27173,f14388,f27248,f27332,f27330,f29331,f29334,f29333,f29546,f29633])).
fof(f29633,plain,(
  $false | $spl98),
  inference(subsumption_resolution,[],[f795,f10733])).
fof(f795,plain,(
  sP5('F_0','const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK10),s('type.rat.rat',sK12)))),'const.rat.rat_les_2'(s('type.rat.rat',sK10),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12)))))),
  inference(unit_resulting_resolution,[],[f496,f287,f447])).
fof(f447,plain,(
  ( ! [X2,X0,X1] : (sP5(X2,X1,X0) | s(bool,X0) = s(bool,X1) | p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f269])).
fof(f269,plain,(
  ! [X0,X1,X2] : ((((p(s(bool,X2)) | s(bool,X0) = s(bool,X1)) & (~p(s(bool,X2)) | s(bool,X0) != s(bool,X1))) | sP5(X2,X1,X0)) & (~sP5(X2,X1,X0) | ((~p(s(bool,X2)) | s(bool,X0) = s(bool,X1)) & (s(bool,X0) != s(bool,X1) | p(s(bool,X2))))))),
  inference(nnf_transformation,[],[f191])).
fof(f191,plain,(
  ! [X0,X1,X2] : ((p(s(bool,X2)) <=> s(bool,X0) = s(bool,X1)) <=> sP5(X2,X1,X0))),
  inference(definition_folding,[],[f143,f190,f189,f188,f187])).
fof(f187,plain,(
  ! [X0,X1,X2] : (sP2(X0,X1,X2) <=> (p(s(bool,X2)) | p(s(bool,X1)) | p(s(bool,X0))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP2])])).
fof(f188,plain,(
  ! [X1,X0,X2] : (sP3(X1,X0,X2) <=> (p(s(bool,X2)) | ~p(s(bool,X0)) | ~p(s(bool,X1))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP3])])).
fof(f189,plain,(
  ! [X2,X0,X1] : (sP4(X2,X0,X1) <=> (p(s(bool,X1)) | ~p(s(bool,X0)) | ~p(s(bool,X2))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP4])])).
fof(f190,plain,(
  ! [X2,X1,X0] : (sP5(X2,X1,X0) <=> (sP2(X0,X1,X2) & sP3(X1,X0,X2) & sP4(X2,X0,X1) & (p(s(bool,X0)) | ~p(s(bool,X1)) | ~p(s(bool,X2)))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP5])])).
fof(f143,plain,(
  ! [X0,X1,X2] : ((p(s(bool,X2)) <=> s(bool,X0) = s(bool,X1)) <=> ((p(s(bool,X2)) | p(s(bool,X1)) | p(s(bool,X0))) & (p(s(bool,X2)) | ~p(s(bool,X0)) | ~p(s(bool,X1))) & (p(s(bool,X1)) | ~p(s(bool,X0)) | ~p(s(bool,X2))) & (p(s(bool,X0)) | ~p(s(bool,X1)) | ~p(s(bool,X2)))))),
  inference(flattening,[],[f142])).
fof(f142,plain,(
  ! [X0,X1,X2] : ((p(s(bool,X2)) <=> s(bool,X0) = s(bool,X1)) <=> ((p(s(bool,X2)) | p(s(bool,X1)) | p(s(bool,X0))) & (p(s(bool,X2)) | ~p(s(bool,X0)) | ~p(s(bool,X1))) & (p(s(bool,X1)) | ~p(s(bool,X0)) | ~p(s(bool,X2))) & (p(s(bool,X0)) | ~p(s(bool,X1)) | ~p(s(bool,X2)))))),
  inference(rectify,[],[f54])).
fof(f54,axiom,(
  ! [X20,X21,X22] : ((p(s(bool,X22)) <=> s(bool,X20) = s(bool,X21)) <=> ((p(s(bool,X22)) | p(s(bool,X21)) | p(s(bool,X20))) & (p(s(bool,X22)) | ~p(s(bool,X20)) | ~p(s(bool,X21))) & (p(s(bool,X21)) | ~p(s(bool,X20)) | ~p(s(bool,X22))) & (p(s(bool,X20)) | ~p(s(bool,X21)) | ~p(s(bool,X22)))))),
  file('thm.rat.RAT_RDIV_LES_NEG','thm.sat.sat_2|49|_prove_ltb')).
fof(f287,plain,(
  s(bool,'const.rat.rat_les_2'(s('type.rat.rat',sK10),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12))))) != s(bool,'const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK10),s('type.rat.rat',sK12)))))),
  inference(cnf_transformation,[],[f198])).
fof(f198,plain,(
  p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) & s(bool,'const.rat.rat_les_2'(s('type.rat.rat',sK10),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12))))) != s(bool,'const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK10),s('type.rat.rat',sK12)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK10,sK11,sK12])],[f148])).
fof(f148,plain,(
  ? [X0,X1,X2] : (p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X2),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) & s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X0),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X1),s('type.rat.rat',X2))))) != s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X1),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X0),s('type.rat.rat',X2))))))),
  inference(ennf_transformation,[],[f63])).
fof(f63,plain,(
  ~! [X0,X1,X2] : (p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X2),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) => s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X0),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X1),s('type.rat.rat',X2))))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X1),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X0),s('type.rat.rat',X2))))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7,X8] : (p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X8),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) => s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X6),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X7),s('type.rat.rat',X8))))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X7),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X6),s('type.rat.rat',X8))))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7,X8] : (p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X8),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) => s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X6),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X7),s('type.rat.rat',X8))))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X7),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X6),s('type.rat.rat',X8))))))),
  file('thm.rat.RAT_RDIV_LES_NEG','thm.rat.RAT_RDIV_LES_NEG')).
fof(f496,plain,(
  ~p(s(bool,'F_0'))),
  inference(subsumption_resolution,[],[f291,f288])).
fof(f288,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f1])).
fof(f1,axiom,(
  p(s(bool,'T_0'))),
  file('thm.rat.RAT_RDIV_LES_NEG',aHL_TRUTH)).
fof(f291,plain,(
  ~p(s(bool,'F_0')) | ~p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f199])).
fof(f199,plain,(
  (p(s(bool,'F_0')) | p(s(bool,'T_0'))) & (~p(s(bool,'T_0')) | ~p(s(bool,'F_0')))),
  inference(nnf_transformation,[],[f64])).
fof(f64,plain,(
  ~p(s(bool,'F_0')) <=> p(s(bool,'T_0'))),
  inference(flattening,[],[f31])).
fof(f31,axiom,(
  ~p(s(bool,'F_0')) <=> p(s(bool,'T_0'))),
  file('thm.rat.RAT_RDIV_LES_NEG','thm.bool.NOT_CLAUSES|split|2')).
fof(f29546,plain,(
  $false | ($spl47 | $spl81 | $spl248 | $spl252)),
  inference(subsumption_resolution,[],[f29348,f27402])).
fof(f27402,plain,(
  s('type.rat.rat',sK10) != s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | ($spl47 | $spl248)),
  inference(backward_demodulation,[],[f27330,f2895])).
fof(f2895,plain,(
  s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl47),
  inference(cnf_transformation,[],[f2895_D])).
fof(f2895_D,plain,(
  s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> ~$spl47),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl47])])).
fof(f29348,plain,(
  s('type.rat.rat',sK10) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | ($spl81 | $spl252)),
  inference(backward_demodulation,[],[f29333,f13036])).
fof(f13036,plain,(
  s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl81),
  inference(forward_demodulation,[],[f12989,f373])).
fof(f373,plain,(
  ( ! [X0,X1] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X0),s('type.rat.rat',X1))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X0),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X1)))))) )),
  inference(cnf_transformation,[],[f117])).
fof(f117,plain,(
  ! [X0,X1] : s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X0),s('type.rat.rat',X1))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X0),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X1)))))),
  inference(rectify,[],[f46])).
fof(f46,axiom,(
  ! [X6,X7] : s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X6),s('type.rat.rat',X7))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X6),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X7)))))),
  file('thm.rat.RAT_RDIV_LES_NEG','thm.rat.RAT_DIV_MULMINV')).
fof(f12989,plain,(
  s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',sK12))))) | $spl81),
  inference(unit_resulting_resolution,[],[f7502,f308])).
fof(f308,plain,(
  ( ! [X0] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X0),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X0))))) | s('type.rat.rat',X0) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(cnf_transformation,[],[f157])).
fof(f157,plain,(
  ! [X0] : (s('type.rat.rat',X0) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X0),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X0))))))),
  inference(ennf_transformation,[],[f81])).
fof(f81,plain,(
  ! [X0] : (s('type.rat.rat',X0) != s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) => s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X0),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X0))))))),
  inference(flattening,[],[f80])).
fof(f80,plain,(
  ! [X0] : (~s('type.rat.rat',X0) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) => s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X0),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X0))))))),
  inference(rectify,[],[f45])).
fof(f45,axiom,(
  ! [X17] : (~s('type.rat.rat',X17) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) => s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X17),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X17))))))),
  file('thm.rat.RAT_RDIV_LES_NEG','thm.rat.RAT_MUL_RINV')).
fof(f7502,plain,(
  s('type.rat.rat',sK12) != s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) | $spl81),
  inference(cnf_transformation,[],[f7502_D])).
fof(f7502_D,plain,(
  s('type.rat.rat',sK12) != s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) <=> ~$spl81),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl81])])).
fof(f29333,plain,(
  s('type.rat.rat',sK10) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) | $spl252),
  inference(cnf_transformation,[],[f29333_D])).
fof(f29333_D,plain,(
  s('type.rat.rat',sK10) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) <=> ~$spl252),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl252])])).
fof(f29334,plain,(
  ( ! [X55] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X55),s('type.rat.rat',X55))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X55),s('type.rat.rat',X55))))) | s('type.rat.rat',sK10) = s('type.rat.rat',X55)) ) | $spl254),
  inference(cnf_transformation,[],[f29334_D])).
fof(f29334_D,plain,(
  ( ! [X55] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X55),s('type.rat.rat',X55))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X55),s('type.rat.rat',X55))))) | s('type.rat.rat',sK10) = s('type.rat.rat',X55)) ) <=> ~$spl254),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl254])])).
fof(f29331,plain,(
  ( ! [X55] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X55),s('type.rat.rat',X55))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X55),s('type.rat.rat',X55))))) | s('type.rat.rat',sK10) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) | s('type.rat.rat',sK10) = s('type.rat.rat',X55)) ) | ($spl81 | $spl248)),
  inference(forward_demodulation,[],[f29130,f13036])).
fof(f29130,plain,(
  ( ! [X55] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X55),s('type.rat.rat',X55))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X55),s('type.rat.rat',X55))))) | s('type.rat.rat',sK10) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) | s('type.rat.rat',sK10) = s('type.rat.rat',X55)) ) | ($spl81 | $spl248)),
  inference(superposition,[],[f27396,f27555])).
fof(f27555,plain,(
  ( ! [X0] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X0),s('type.rat.rat',X0))) | s('type.rat.rat',sK10) = s('type.rat.rat',X0)) ) | ($spl81 | $spl248)),
  inference(backward_demodulation,[],[f27330,f13270])).
fof(f13270,plain,(
  ( ! [X0] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X0),s('type.rat.rat',X0))) | s('type.rat.rat',X0) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl81),
  inference(superposition,[],[f13038,f373])).
fof(f13038,plain,(
  ( ! [X0] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X0),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X0))))) | s('type.rat.rat',X0) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl81),
  inference(backward_demodulation,[],[f13036,f308])).
fof(f27396,plain,(
  ( ! [X0] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X0),s('type.rat.rat',X0))) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.rat.rat',sK10) = s('type.rat.rat',X0)) ) | $spl248),
  inference(backward_demodulation,[],[f27330,f1440])).
fof(f1440,plain,(
  ( ! [X0] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X0),s('type.rat.rat',X0))) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.rat.rat',X0) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f308,f373])).
fof(f27330,plain,(
  s('type.rat.rat',sK10) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) | $spl248),
  inference(cnf_transformation,[],[f27330_D])).
fof(f27330_D,plain,(
  s('type.rat.rat',sK10) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) <=> ~$spl248),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl248])])).
fof(f27332,plain,(
  s('type.rat.rat',sK10) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK10),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | $spl250),
  inference(cnf_transformation,[],[f27332_D])).
fof(f27332_D,plain,(
  s('type.rat.rat',sK10) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK10),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) <=> ~$spl250),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl250])])).
fof(f27248,plain,(
  s('type.rat.rat',sK10) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK10),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.rat.rat',sK10) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) | $spl152),
  inference(superposition,[],[f1468,f23836])).
fof(f1468,plain,(
  ( ! [X2,X1] : (s('type.rat.rat',X2) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X1),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X2),s('type.rat.rat',X1))))) | s('type.rat.rat',X1) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(forward_demodulation,[],[f1467,f1308])).
fof(f1308,plain,(
  ( ! [X1] : (s('type.rat.rat',X1) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.rat.rat',X1)))) )),
  inference(superposition,[],[f295,f372])).
fof(f372,plain,(
  ( ! [X0,X1] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X0),s('type.rat.rat',X1))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X1),s('type.rat.rat',X0)))) )),
  inference(cnf_transformation,[],[f116])).
fof(f116,plain,(
  ! [X0,X1] : s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X0),s('type.rat.rat',X1))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X1),s('type.rat.rat',X0)))),
  inference(rectify,[],[f43])).
fof(f43,axiom,(
  ! [X17,X18] : s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X17),s('type.rat.rat',X18))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X18),s('type.rat.rat',X17)))),
  file('thm.rat.RAT_RDIV_LES_NEG','thm.rat.RAT_MUL_COMM')).
fof(f295,plain,(
  ( ! [X0] : (s('type.rat.rat',X0) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X0),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) )),
  inference(cnf_transformation,[],[f67])).
fof(f67,plain,(
  ! [X0] : s('type.rat.rat',X0) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X0),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))),
  inference(rectify,[],[f44])).
fof(f44,axiom,(
  ! [X17] : s('type.rat.rat',X17) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X17),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))),
  file('thm.rat.RAT_RDIV_LES_NEG','thm.rat.RAT_MUL_RID')).
fof(f1467,plain,(
  ( ! [X2,X1] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X1),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X2),s('type.rat.rat',X1))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.rat.rat',X2))) | s('type.rat.rat',X1) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(forward_demodulation,[],[f1443,f1340])).
fof(f1340,plain,(
  ( ! [X2,X3] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X2),s('type.rat.rat',X3))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X3))),s('type.rat.rat',X2)))) )),
  inference(superposition,[],[f373,f372])).
fof(f1443,plain,(
  ( ! [X2,X1] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.rat.rat',X2))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X1),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X1))),s('type.rat.rat',X2))))) | s('type.rat.rat',X1) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f420,f308])).
fof(f420,plain,(
  ( ! [X2,X0,X1] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X0),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X1),s('type.rat.rat',X2))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X0),s('type.rat.rat',X1))),s('type.rat.rat',X2)))) )),
  inference(cnf_transformation,[],[f139])).
fof(f139,plain,(
  ! [X0,X1,X2] : s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X0),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X1),s('type.rat.rat',X2))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X0),s('type.rat.rat',X1))),s('type.rat.rat',X2)))),
  inference(rectify,[],[f42])).
fof(f42,axiom,(
  ! [X17,X18,X19] : s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X17),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X18),s('type.rat.rat',X19))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X17),s('type.rat.rat',X18))),s('type.rat.rat',X19)))),
  file('thm.rat.RAT_RDIV_LES_NEG','thm.rat.RAT_MUL_ASSOC')).
fof(f14388,plain,(
  ( ! [X30] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X30),s('type.rat.rat',X30))) | s('type.rat.rat',X30) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl122),
  inference(cnf_transformation,[],[f14388_D])).
fof(f14388_D,plain,(
  ( ! [X30] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X30),s('type.rat.rat',X30))) | s('type.rat.rat',X30) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) <=> ~$spl122),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl122])])).
fof(f27173,plain,(
  s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))))))) | $spl246),
  inference(cnf_transformation,[],[f27173_D])).
fof(f27173_D,plain,(
  s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))))))) <=> ~$spl246),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl246])])).
fof(f14070,plain,(
  ( ! [X68] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X68),s('type.rat.rat',X68))) | s('type.rat.rat',X68) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl81),
  inference(superposition,[],[f13038,f13270])).
fof(f14464,plain,(
  ( ! [X13] : (s('type.rat.rat',X13) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X13),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12)))))) ) | $spl146),
  inference(cnf_transformation,[],[f14464_D])).
fof(f14464_D,plain,(
  ( ! [X13] : (s('type.rat.rat',X13) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X13),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12)))))) ) <=> ~$spl146),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl146])])).
fof(f27152,plain,(
  ( ! [X30,X31] : (s('type.rat.rat',X31) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X31),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X30),s('type.rat.rat',X30))) | s('type.rat.rat',X30) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | ($spl81 | $spl116)),
  inference(forward_demodulation,[],[f14386,f14378])).
fof(f14386,plain,(
  ( ! [X30,X31] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X31),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X31),s('type.rat.rat',sK12))),s('type.rat.rat',sK12))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X30),s('type.rat.rat',X30))) | s('type.rat.rat',X30) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl81),
  inference(forward_demodulation,[],[f14312,f13039])).
fof(f13039,plain,(
  ( ! [X1] : (s('type.rat.rat',X1) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat',X1)))) ) | $spl81),
  inference(backward_demodulation,[],[f13036,f1308])).
fof(f14312,plain,(
  ( ! [X30,X31] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X31),s('type.rat.rat',sK12))),s('type.rat.rat',sK12))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X31),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X30),s('type.rat.rat',X30))) | s('type.rat.rat',X30) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl81),
  inference(superposition,[],[f13186,f13270])).
fof(f13186,plain,(
  ( ! [X2,X1] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X2),s('type.rat.rat',sK12))),s('type.rat.rat',sK12))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X1),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X2),s('type.rat.rat',X1))))) | s('type.rat.rat',X1) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl81),
  inference(forward_demodulation,[],[f13185,f3785])).
fof(f3785,plain,(
  ( ! [X6,X7,X5] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X5),s('type.rat.rat',X6))),s('type.rat.rat',X7))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X6),s('type.rat.rat',X7))),s('type.rat.rat',X5)))) )),
  inference(superposition,[],[f1409,f372])).
fof(f1409,plain,(
  ( ! [X12,X13,X11] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat',X12))),s('type.rat.rat',X13))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X12),s('type.rat.rat',X13)))))) )),
  inference(forward_demodulation,[],[f1388,f373])).
fof(f1388,plain,(
  ( ! [X12,X13,X11] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat',X12))),s('type.rat.rat',X13))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X12),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X13)))))))) )),
  inference(superposition,[],[f420,f373])).
fof(f13185,plain,(
  ( ! [X2,X1] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat',X2))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X1),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X2),s('type.rat.rat',X1))))) | s('type.rat.rat',X1) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl81),
  inference(forward_demodulation,[],[f13184,f13036])).
fof(f13184,plain,(
  ( ! [X2,X1] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X1),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X2),s('type.rat.rat',X1))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.rat.rat',X2))) | s('type.rat.rat',X1) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(forward_demodulation,[],[f12999,f1340])).
fof(f12999,plain,(
  ( ! [X2,X1] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.rat.rat',X2))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X1),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X1))),s('type.rat.rat',X2))))) | s('type.rat.rat',X1) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f420,f308])).
fof(f27164,plain,(
  $false | ($spl0 | $spl47 | $spl81 | $spl118)),
  inference(global_subsumption,[],[f800,f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13155,f13085,f13165,f13171,f13142,f13186,f13248,f13249,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f13548,f13553,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037,f13038,f13039,f13040,f13042,f13043,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13070,f13071,f13072,f13074,f13077,f13079,f13080,f13084,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13108,f13109,f13112,f13113,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13138,f13139,f13140,f13141,f13143,f13144,f13145,f13148,f13149,f13150,f13151,f26764,f13156,f13157,f13158,f13159,f13160,f26747,f13167,f27010,f13270,f27086,f27095,f1440,f7150,f7707,f9343,f9322,f9032,f9012,f27106,f27108,f8788,f8786,f27112,f27117,f9370,f8709,f8703,f8669,f8664,f27124,f27126,f8644,f7954,f7941,f5024,f5012,f8447,f9083,f9391,f14070,f8426,f8494,f27139,f14450,f9131,f14445,f27147,f9439,f14441,f13989,f14384,f2895])).
fof(f13989,plain,(
  ( ! [X13] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X13),s('type.rat.rat',X13))) | s('type.rat.rat',X13) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl81),
  inference(superposition,[],[f13270,f13270])).
fof(f14441,plain,(
  ( ! [X198,X196,X197] : (s('type.rat.rat',X198) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X198),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X196),s('type.rat.rat',X197))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X196),s('type.rat.rat',X197))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X197),s('type.rat.rat',X196)))) ) | $spl81),
  inference(forward_demodulation,[],[f9443,f13036])).
fof(f9443,plain,(
  ( ! [X198,X196,X197] : (s('type.rat.rat',X198) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X198),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X196),s('type.rat.rat',X197))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X196),s('type.rat.rat',X197))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X197),s('type.rat.rat',X196)))) )),
  inference(superposition,[],[f1468,f1434])).
fof(f9439,plain,(
  ( ! [X185,X186] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X185),s('type.rat.rat',X186))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X185),s('type.rat.rat',X186))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X186),s('type.rat.rat',X185)))) )),
  inference(superposition,[],[f1440,f1434])).
fof(f27147,plain,(
  ( ! [X26,X27] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X26),s('type.rat.rat',X27))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X26),s('type.rat.rat',X27))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X26),s('type.rat.rat',X27))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X26),s('type.rat.rat',X27))))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X27),s('type.rat.rat',X26)))) ) | $spl81),
  inference(forward_demodulation,[],[f27146,f3474])).
fof(f27146,plain,(
  ( ! [X26,X27] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X27),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X26),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X26),s('type.rat.rat',X27))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X26),s('type.rat.rat',X27))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X26),s('type.rat.rat',X27))))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X27),s('type.rat.rat',X26)))) ) | $spl81),
  inference(forward_demodulation,[],[f27145,f373])).
fof(f27145,plain,(
  ( ! [X26,X27] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X27),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X26),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X26),s('type.rat.rat',X27))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X26),s('type.rat.rat',X27))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X26),s('type.rat.rat',X27))))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X27),s('type.rat.rat',X26)))) ) | $spl81),
  inference(forward_demodulation,[],[f27144,f15767])).
fof(f27144,plain,(
  ( ! [X26,X27] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X27),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X26),s('type.rat.rat',X27))))),s('type.rat.rat',X26))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X26),s('type.rat.rat',X27))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X26),s('type.rat.rat',X27))))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X27),s('type.rat.rat',X26)))) )),
  inference(forward_demodulation,[],[f9388,f3518])).
fof(f9388,plain,(
  ( ! [X26,X27] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X26),s('type.rat.rat',X27))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X26),s('type.rat.rat',X27))))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X26),s('type.rat.rat',X27))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X26),s('type.rat.rat',X27))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X27),s('type.rat.rat',X26)))) )),
  inference(superposition,[],[f1466,f1434])).
fof(f14445,plain,(
  ( ! [X194,X192,X193] : (s('type.rat.rat',X194) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X194),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X192),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X193),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X192),s('type.rat.rat',X193))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X192),s('type.rat.rat',X193)))) ) | $spl81),
  inference(forward_demodulation,[],[f9133,f13036])).
fof(f9133,plain,(
  ( ! [X194,X192,X193] : (s('type.rat.rat',X194) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X194),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X192),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X193),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X192),s('type.rat.rat',X193))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X192),s('type.rat.rat',X193)))) )),
  inference(superposition,[],[f1468,f1466])).
fof(f9131,plain,(
  ( ! [X187,X188] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X187),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X188),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X187),s('type.rat.rat',X188))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X187),s('type.rat.rat',X188)))) )),
  inference(superposition,[],[f1440,f1466])).
fof(f14450,plain,(
  ( ! [X22] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X22),s('type.rat.rat',X22))) | s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X22),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X22))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))))))) | s('type.rat.rat',X22) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl81),
  inference(forward_demodulation,[],[f14449,f373])).
fof(f14449,plain,(
  ( ! [X22] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X22),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X22))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X22),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X22))))) | s('type.rat.rat',X22) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl81),
  inference(forward_demodulation,[],[f9059,f13036])).
fof(f9059,plain,(
  ( ! [X22] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X22),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X22))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X22),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X22))))) | s('type.rat.rat',X22) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f1466,f308])).
fof(f27139,plain,(
  ( ! [X12,X11] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X12),s('type.rat.rat',X11))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat',X12))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X12),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat',X12))))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat',X12)))) )),
  inference(forward_demodulation,[],[f9054,f3474])).
fof(f9054,plain,(
  ( ! [X12,X11] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X12),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat',X12))))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X12),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat',X12))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat',X12)))) )),
  inference(superposition,[],[f1466,f1466])).
fof(f8494,plain,(
  ( ! [X109,X110] : (s('type.rat.rat',X110) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X110),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X109),s('type.rat.rat',X109))) | s('type.rat.rat',X109) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f1468,f1440])).
fof(f8426,plain,(
  ( ! [X1] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X1),s('type.rat.rat',X1))) | s('type.rat.rat',X1) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f1440,f1440])).
fof(f9391,plain,(
  ( ! [X35,X34] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X34),s('type.rat.rat',X35))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X34),s('type.rat.rat',X35))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X35),s('type.rat.rat',X34)))) )),
  inference(superposition,[],[f308,f1434])).
fof(f9083,plain,(
  ( ! [X37,X36] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X36),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X37),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X36),s('type.rat.rat',X37))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X36),s('type.rat.rat',X37)))) )),
  inference(superposition,[],[f308,f1466])).
fof(f8447,plain,(
  ( ! [X6] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X6),s('type.rat.rat',X6))) | s('type.rat.rat',X6) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f308,f1440])).
fof(f5012,plain,(
  s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),
  inference(superposition,[],[f1308,f308])).
fof(f5024,plain,(
  s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),
  inference(superposition,[],[f308,f1308])).
fof(f7941,plain,(
  s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),
  inference(superposition,[],[f1308,f308])).
fof(f7954,plain,(
  s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),
  inference(superposition,[],[f308,f1308])).
fof(f8644,plain,(
  ( ! [X1] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X1),s('type.rat.rat',X1))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.rat.rat',X1) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f1436,f1440])).
fof(f27126,plain,(
  ( ! [X21] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X21),s('type.rat.rat',X21))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X21),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) )),
  inference(forward_demodulation,[],[f8654,f373])).
fof(f8654,plain,(
  ( ! [X21] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X21),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X21))))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X21),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) )),
  inference(superposition,[],[f1436,f1436])).
fof(f27124,plain,(
  ( ! [X22] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X22),s('type.rat.rat',X22))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.rat.rat',X22) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(forward_demodulation,[],[f8655,f373])).
fof(f8655,plain,(
  ( ! [X22] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X22),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X22))))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.rat.rat',X22) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f1436,f308])).
fof(f8664,plain,(
  s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))),
  inference(superposition,[],[f1436,f1308])).
fof(f8669,plain,(
  ( ! [X0] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X0),s('type.rat.rat',X0))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X0),s('type.rat.rat',X0))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.rat.rat',X0) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f1436,f1440])).
fof(f8703,plain,(
  s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))),
  inference(superposition,[],[f1308,f1436])).
fof(f8709,plain,(
  ( ! [X23] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X23),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X23))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X23),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) )),
  inference(superposition,[],[f308,f1436])).
fof(f9370,plain,(
  ( ! [X21] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X21))),s('type.rat.rat',X21))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X21),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) )),
  inference(superposition,[],[f1434,f1436])).
fof(f27117,plain,(
  ( ! [X182,X181] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X181),s('type.rat.rat',X182))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X181),s('type.rat.rat',X182))))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) = s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X182),s('type.rat.rat',X181)))) ) | $spl81),
  inference(forward_demodulation,[],[f27116,f3474])).
fof(f27116,plain,(
  ( ! [X182,X181] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X182),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X181),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X181),s('type.rat.rat',X182))))))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) = s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X182),s('type.rat.rat',X181)))) ) | $spl81),
  inference(forward_demodulation,[],[f27115,f373])).
fof(f27115,plain,(
  ( ! [X182,X181] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X182),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X181),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X181),s('type.rat.rat',X182))))))))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) = s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X182),s('type.rat.rat',X181)))) ) | $spl81),
  inference(forward_demodulation,[],[f27114,f15767])).
fof(f27114,plain,(
  ( ! [X182,X181] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X182),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X181),s('type.rat.rat',X182))))),s('type.rat.rat',X181))))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) = s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X182),s('type.rat.rat',X181)))) ) | $spl81),
  inference(forward_demodulation,[],[f14444,f3518])).
fof(f14444,plain,(
  ( ! [X182,X181] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) = s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X181),s('type.rat.rat',X182))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X181),s('type.rat.rat',X182))))))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X182),s('type.rat.rat',X181)))) ) | $spl81),
  inference(forward_demodulation,[],[f14443,f13043])).
fof(f14443,plain,(
  ( ! [X182,X181] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X181),s('type.rat.rat',X182))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X181),s('type.rat.rat',X182))))))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X182),s('type.rat.rat',X181)))) ) | $spl81),
  inference(forward_demodulation,[],[f9584,f13036])).
fof(f9584,plain,(
  ( ! [X182,X181] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X181),s('type.rat.rat',X182))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X181),s('type.rat.rat',X182))))))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X182),s('type.rat.rat',X181)))) )),
  inference(forward_demodulation,[],[f9437,f373])).
fof(f9437,plain,(
  ( ! [X182,X181] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X181),s('type.rat.rat',X182))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X181),s('type.rat.rat',X182))))))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X182),s('type.rat.rat',X181)))) )),
  inference(superposition,[],[f1436,f1434])).
fof(f27112,plain,(
  ( ! [X184,X183] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X184),s('type.rat.rat',X183))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X183),s('type.rat.rat',X184))))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) = s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X183),s('type.rat.rat',X184)))) ) | $spl81),
  inference(forward_demodulation,[],[f14448,f3474])).
fof(f14448,plain,(
  ( ! [X184,X183] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) = s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X183),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X184),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X183),s('type.rat.rat',X184))))))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X183),s('type.rat.rat',X184)))) ) | $spl81),
  inference(forward_demodulation,[],[f14447,f13043])).
fof(f14447,plain,(
  ( ! [X184,X183] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X183),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X184),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X183),s('type.rat.rat',X184))))))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X183),s('type.rat.rat',X184)))) ) | $spl81),
  inference(forward_demodulation,[],[f9294,f13036])).
fof(f9294,plain,(
  ( ! [X184,X183] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X183),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X184),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X183),s('type.rat.rat',X184))))))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X183),s('type.rat.rat',X184)))) )),
  inference(forward_demodulation,[],[f9129,f373])).
fof(f9129,plain,(
  ( ! [X184,X183] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X183),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X184),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X183),s('type.rat.rat',X184))))))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X183),s('type.rat.rat',X184)))) )),
  inference(superposition,[],[f1436,f1466])).
fof(f8786,plain,(
  ( ! [X6,X5] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat',X6))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X5),s('type.rat.rat',X6))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X5),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X5)))))) )),
  inference(superposition,[],[f1375,f1436])).
fof(f8788,plain,(
  ( ! [X10,X9] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X10),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X10),s('type.rat.rat',X9))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X9),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X9)))))) )),
  inference(superposition,[],[f1385,f1436])).
fof(f27108,plain,(
  ( ! [X130,X128,X131,X129] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X128),s('type.rat.rat',X128))) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X130),s('type.rat.rat',X131))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X131),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X129),s('type.rat.rat',X128))))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X130),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X129),s('type.rat.rat',X128))))))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X129),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) )),
  inference(forward_demodulation,[],[f26603,f373])).
fof(f26603,plain,(
  ( ! [X130,X128,X131,X129] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X130),s('type.rat.rat',X131))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X131),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X129),s('type.rat.rat',X128))))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X130),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X129),s('type.rat.rat',X128))))))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X129),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X128),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X128)))))) )),
  inference(forward_demodulation,[],[f8845,f3518])).
fof(f8845,plain,(
  ( ! [X130,X128,X131,X129] : (~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X129),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X130),s('type.rat.rat',X131))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X131),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X128),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.rat.rat',X129))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X130),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X128),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.rat.rat',X129))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X128),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X128)))))) )),
  inference(superposition,[],[f1488,f1436])).
fof(f27106,plain,(
  ( ! [X134,X132,X135,X133] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X132),s('type.rat.rat',X132))) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat',X133))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X134),s('type.rat.rat',X135))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X135),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X133),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X132),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X134),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X133),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X132),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))) )),
  inference(forward_demodulation,[],[f8846,f373])).
fof(f8846,plain,(
  ( ! [X134,X132,X135,X133] : (~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat',X133))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X134),s('type.rat.rat',X135))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X135),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X133),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X132),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X134),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X133),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X132),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X132),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X132)))))) )),
  inference(superposition,[],[f1488,f1436])).
fof(f9012,plain,(
  ( ! [X10,X11] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X11),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat',X11))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X10),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.rat.rat',X11))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X10),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X10)))))) )),
  inference(superposition,[],[f1466,f1436])).
fof(f9032,plain,(
  ( ! [X10,X11] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X10),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X10),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X10)))))) )),
  inference(superposition,[],[f1466,f1436])).
fof(f9322,plain,(
  ( ! [X10,X11] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat',X11))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat',X11))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X10),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X10),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X10)))))) )),
  inference(superposition,[],[f1434,f1436])).
fof(f9343,plain,(
  ( ! [X10,X11] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X10),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.rat.rat',X11))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X10),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X10)))))) )),
  inference(superposition,[],[f1434,f1436])).
fof(f7707,plain,(
  ~sP3('const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12)))),'F_0')),
  inference(forward_demodulation,[],[f7666,f372])).
fof(f7666,plain,(
  ~sP3('const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12)))),'F_0')),
  inference(unit_resulting_resolution,[],[f496,f513,f503,f6808,f434])).
fof(f7150,plain,(
  ~sP3('const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12)))),'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),'F_0')),
  inference(forward_demodulation,[],[f7093,f372])).
fof(f7093,plain,(
  ~sP3('const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12)))),'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),'F_0')),
  inference(unit_resulting_resolution,[],[f496,f515,f505,f6806,f434])).
fof(f27095,plain,(
  ( ! [X21] : (s('type.rat.rat',X21) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X21),s('type.rat.rat',X21))) | s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X21),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X21))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12)))))))) ) | $spl81),
  inference(forward_demodulation,[],[f14454,f21793])).
fof(f27086,plain,(
  ( ! [X118,X119] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X118),s('type.rat.rat',X119))) | s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X118),s('type.rat.rat',X119))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X118),s('type.rat.rat',X119)))))) ) | $spl81),
  inference(forward_demodulation,[],[f14156,f21793])).
fof(f27010,plain,(
  ( ! [X35,X36] : (s('type.rat.rat',X35) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X36),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X36))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X35),s('type.rat.rat',X35))),s('type.rat.rat',X36)))) ) | $spl81),
  inference(forward_demodulation,[],[f13171,f21793])).
fof(f13167,plain,(
  ( ! [X35,X36] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X36),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X36))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X35),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X36),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X35),s('type.rat.rat',X35)))))) ) | $spl81),
  inference(forward_demodulation,[],[f13114,f13036])).
fof(f13114,plain,(
  ( ! [X35,X36] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X35),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X36),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X35),s('type.rat.rat',X35))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X36),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X36)))))) ) | $spl81),
  inference(backward_demodulation,[],[f13036,f9229])).
fof(f26747,plain,(
  ( ! [X35,X36] : (s('type.rat.rat',X35) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X36),s('type.rat.rat',X36))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X35),s('type.rat.rat',X35))),s('type.rat.rat',X36)))) ) | $spl81),
  inference(forward_demodulation,[],[f13165,f21793])).
fof(f13160,plain,(
  ( ! [X10,X9] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X9),s('type.rat.rat',X10))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))))) | s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X9),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X10),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X9),s('type.rat.rat',X10)))))))) ) | $spl81),
  inference(forward_demodulation,[],[f13083,f13036])).
fof(f13083,plain,(
  ( ! [X10,X9] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X9),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X10),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X9),s('type.rat.rat',X10))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X9),s('type.rat.rat',X10))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) ) | $spl81),
  inference(backward_demodulation,[],[f13036,f8899])).
fof(f13159,plain,(
  ( ! [X8,X7] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X7),s('type.rat.rat',X8))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))))) | s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X8),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X7),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X7),s('type.rat.rat',X8)))))))) ) | $spl81),
  inference(forward_demodulation,[],[f13082,f13036])).
fof(f13082,plain,(
  ( ! [X8,X7] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X8),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X7),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X7),s('type.rat.rat',X8))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X7),s('type.rat.rat',X8))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) ) | $spl81),
  inference(backward_demodulation,[],[f13036,f8898])).
fof(f13158,plain,(
  ( ! [X6,X5] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X5),s('type.rat.rat',X6))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))))) | s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X5),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X5),s('type.rat.rat',X6))))),s('type.rat.rat',X6)))) ) | $spl81),
  inference(forward_demodulation,[],[f13081,f13036])).
fof(f13081,plain,(
  ( ! [X6,X5] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X5),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X5),s('type.rat.rat',X6))))),s('type.rat.rat',X6))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X5),s('type.rat.rat',X6))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) ) | $spl81),
  inference(backward_demodulation,[],[f13036,f8897])).
fof(f13157,plain,(
  ( ! [X8,X9] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X9),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X9))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X8),s('type.rat.rat',X9))),s('type.rat.rat',X8))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))))) | s('type.rat.rat',X8) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl81),
  inference(forward_demodulation,[],[f13078,f13036])).
fof(f13078,plain,(
  ( ! [X8,X9] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X8),s('type.rat.rat',X9))),s('type.rat.rat',X8))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X9),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X9))))) | s('type.rat.rat',X8) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl81),
  inference(backward_demodulation,[],[f13036,f8873])).
fof(f13156,plain,(
  ( ! [X11] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X11))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))))) | s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X11))))),s('type.rat.rat',X11)))) ) | $spl81),
  inference(forward_demodulation,[],[f13076,f13036])).
fof(f13076,plain,(
  ( ! [X11] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X11))))),s('type.rat.rat',X11))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X11))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) ) | $spl81),
  inference(backward_demodulation,[],[f13036,f8668])).
fof(f26764,plain,(
  ( ! [X2,X3] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X2),s('type.rat.rat',X3))) | s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X3),s('type.rat.rat',X2))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X3),s('type.rat.rat',X2)))))))) ) | $spl81),
  inference(forward_demodulation,[],[f13155,f15694])).
fof(f13151,plain,(
  ( ! [X21] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X21),s('type.rat.rat',X21))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat',X21)))) ) | $spl81),
  inference(forward_demodulation,[],[f13073,f13036])).
fof(f13073,plain,(
  ( ! [X21] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat',X21))) | s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X21),s('type.rat.rat',X21))) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl81),
  inference(backward_demodulation,[],[f13036,f8436])).
fof(f13150,plain,(
  ( ! [X6] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X6),s('type.rat.rat',X6))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X6),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12)))))) ) | $spl81),
  inference(forward_demodulation,[],[f13069,f13036])).
fof(f13069,plain,(
  ( ! [X6] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X6),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))))) | s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X6),s('type.rat.rat',X6))) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl81),
  inference(backward_demodulation,[],[f13036,f8429])).
fof(f13149,plain,(
  ( ! [X6] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat',X6))) | s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X6),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X6)))))) ) | $spl81),
  inference(forward_demodulation,[],[f13044,f13036])).
fof(f13044,plain,(
  ( ! [X6] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X6),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X6))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.rat.rat',X6)))) ) | $spl81),
  inference(backward_demodulation,[],[f13036,f2861])).
fof(f13148,plain,(
  ( ! [X4] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X4),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))))) | s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X4),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X4)))))) ) | $spl81),
  inference(forward_demodulation,[],[f13041,f13036])).
fof(f13041,plain,(
  ( ! [X4] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X4),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X4))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X4),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) ) | $spl81),
  inference(backward_demodulation,[],[f13036,f1436])).
fof(f13145,plain,(
  ( ! [X4] : (~sP5('F_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',X4))),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat',X4)))) ) | $spl81),
  inference(backward_demodulation,[],[f13036,f10677])).
fof(f13144,plain,(
  ( ! [X12,X11] : (~sP5('F_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X12),s('type.rat.rat',sK12)))),'const.rat.rat_les_2'(s('type.rat.rat',X12),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X11),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',X11))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',X11)))) ) | $spl81),
  inference(backward_demodulation,[],[f13036,f10669])).
fof(f13143,plain,(
  ( ! [X189,X187,X188] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X189),s('type.rat.rat',X189))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X187),s('type.rat.rat',X188))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X187),s('type.rat.rat',X188))))),s('type.rat.rat',X189))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X188),s('type.rat.rat',X187)))) ) | $spl81),
  inference(backward_demodulation,[],[f13036,f9589])).
fof(f13141,plain,(
  ( ! [X4,X5] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X4),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X5),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X4),s('type.rat.rat',X5))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X5),s('type.rat.rat',X4)))) ) | $spl81),
  inference(backward_demodulation,[],[f13036,f9564])).
fof(f13140,plain,(
  ( ! [X54,X55,X53] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X55),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X55))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X53),s('type.rat.rat',X54))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X53),s('type.rat.rat',X54))))),s('type.rat.rat',X55))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X54),s('type.rat.rat',X53)))) ) | $spl81),
  inference(backward_demodulation,[],[f13036,f9548])).
fof(f13139,plain,(
  ( ! [X52,X50,X51,X49] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X52),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X49),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X50),s('type.rat.rat',X51))))))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X52),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X49),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X50),s('type.rat.rat',X51))))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X49),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X50),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X51),s('type.rat.rat',X52)))))))) ) | $spl81),
  inference(backward_demodulation,[],[f13036,f9546])).
fof(f13138,plain,(
  ( ! [X47,X45,X48,X46] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X48),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X46),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X45),s('type.rat.rat',X47))))))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X48),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X46),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X45),s('type.rat.rat',X47))))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X45),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X46),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X47),s('type.rat.rat',X48)))))))) ) | $spl81),
  inference(backward_demodulation,[],[f13036,f9544])).
fof(f13136,plain,(
  ( ! [X30,X28,X31,X29] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X31),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X30),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X28),s('type.rat.rat',X29))))))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X31),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X30),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X28),s('type.rat.rat',X29))))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X28),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X29),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X30),s('type.rat.rat',X31)))))))) ) | $spl81),
  inference(backward_demodulation,[],[f13036,f9530])).
fof(f13135,plain,(
  ( ! [X19,X17,X20,X18] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X20),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X17),s('type.rat.rat',X18))))),s('type.rat.rat',X19))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X20),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X17),s('type.rat.rat',X18))))),s('type.rat.rat',X19))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X17),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X18),s('type.rat.rat',X20))))),s('type.rat.rat',X19)))) ) | $spl81),
  inference(backward_demodulation,[],[f13036,f9524])).
fof(f13134,plain,(
  ( ! [X14,X15,X16] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X16),s('type.rat.rat',X15))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X16),s('type.rat.rat',X15))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X14),s('type.rat.rat',X15))),s('type.rat.rat',X14))),s('type.rat.rat',X16))) | s('type.rat.rat',X14) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl81),
  inference(backward_demodulation,[],[f13036,f9520])).
fof(f13132,plain,(
  ( ! [X2,X3] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X3),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X3))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X2),s('type.rat.rat',X2))),s('type.rat.rat',X3))) | s('type.rat.rat',X2) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl81),
  inference(backward_demodulation,[],[f13036,f9514])).
fof(f13131,plain,(
  ( ! [X54,X55,X53] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X55),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X55))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X55),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X53),s('type.rat.rat',X54))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X53),s('type.rat.rat',X54))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X54),s('type.rat.rat',X53)))) ) | $spl81),
  inference(backward_demodulation,[],[f13036,f9506])).
fof(f13130,plain,(
  ( ! [X52,X50,X51,X49] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X49),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X50),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X51),s('type.rat.rat',X52))))))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X49),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X50),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X51),s('type.rat.rat',X52))))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X52),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X49),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X50),s('type.rat.rat',X51)))))))) ) | $spl81),
  inference(backward_demodulation,[],[f13036,f9504])).
fof(f13129,plain,(
  ( ! [X47,X45,X48,X46] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X46),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X45),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X47),s('type.rat.rat',X48))))))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X46),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X45),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X47),s('type.rat.rat',X48))))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X48),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X45),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X46),s('type.rat.rat',X47)))))))) ) | $spl81),
  inference(backward_demodulation,[],[f13036,f9501])).
fof(f13128,plain,(
  ( ! [X30,X28,X31,X29] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X30),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X28),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X29),s('type.rat.rat',X31))))))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X30),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X28),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X29),s('type.rat.rat',X31))))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X31),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X28),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X29),s('type.rat.rat',X30)))))))) ) | $spl81),
  inference(backward_demodulation,[],[f13036,f9486])).
fof(f13127,plain,(
  ( ! [X26,X24,X27,X25] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X25),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X26),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X24),s('type.rat.rat',X27))))))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X25),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X26),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X24),s('type.rat.rat',X27))))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X27),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X24),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X25),s('type.rat.rat',X26)))))))) ) | $spl81),
  inference(backward_demodulation,[],[f13036,f9484])).
fof(f13126,plain,(
  ( ! [X19,X17,X20,X18] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X17),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X18),s('type.rat.rat',X20))))),s('type.rat.rat',X19))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X17),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X18),s('type.rat.rat',X20))))),s('type.rat.rat',X19))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X20),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X17),s('type.rat.rat',X18))))),s('type.rat.rat',X19)))) ) | $spl81),
  inference(backward_demodulation,[],[f13036,f9480])).
fof(f13125,plain,(
  ( ! [X14,X15,X16] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X15),s('type.rat.rat',X16))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X15),s('type.rat.rat',X16))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X16),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X14),s('type.rat.rat',X15))),s('type.rat.rat',X14))))) | s('type.rat.rat',X14) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl81),
  inference(backward_demodulation,[],[f13036,f9476])).
fof(f13123,plain,(
  ( ! [X6,X7] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X7),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X7))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X7),s('type.rat.rat',X6))),s('type.rat.rat',X6))) | s('type.rat.rat',X6) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl81),
  inference(backward_demodulation,[],[f13036,f9364])).
fof(f13122,plain,(
  ( ! [X14,X12,X13] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X13),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X12),s('type.rat.rat',X14))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X12),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X13),s('type.rat.rat',X14))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X12),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X13),s('type.rat.rat',X14)))))) ) | $spl81),
  inference(backward_demodulation,[],[f13036,f9261])).
fof(f13121,plain,(
  ( ! [X33,X34] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X33))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X34),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X34),s('type.rat.rat',X33))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X34),s('type.rat.rat',X33)))) ) | $spl81),
  inference(backward_demodulation,[],[f13036,f9254])).
fof(f13120,plain,(
  ( ! [X30,X31,X32] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X30),s('type.rat.rat',X31))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X32),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X30),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X31),s('type.rat.rat',X32))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X30),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X31),s('type.rat.rat',X32)))))) ) | $spl81),
  inference(backward_demodulation,[],[f13036,f9253])).
fof(f13119,plain,(
  ( ! [X28,X29,X27] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X27),s('type.rat.rat',X28))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X29),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X28),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X27),s('type.rat.rat',X29))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X27),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X28),s('type.rat.rat',X29)))))) ) | $spl81),
  inference(backward_demodulation,[],[f13036,f9252])).
fof(f13118,plain,(
  ( ! [X19,X20] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X19),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X20))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X19),s('type.rat.rat',X20))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X19),s('type.rat.rat',X20)))) ) | $spl81),
  inference(backward_demodulation,[],[f13036,f9247])).
fof(f13117,plain,(
  ( ! [X6,X7] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X6),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X7),s('type.rat.rat',X6))),s('type.rat.rat',X7))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X6),s('type.rat.rat',X7))),s('type.rat.rat',X6))) | s('type.rat.rat',X6) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl81),
  inference(backward_demodulation,[],[f13036,f9244])).
fof(f13115,plain,(
  ( ! [X47,X45,X48,X46] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X48),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X46),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X45),s('type.rat.rat',X47))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X48),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X46),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X45),s('type.rat.rat',X47))))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X48),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X45),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X46),s('type.rat.rat',X47)))))))) ) | $spl81),
  inference(backward_demodulation,[],[f13036,f9237])).
fof(f13113,plain,(
  ( ! [X33,X34,X32] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X34),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X32),s('type.rat.rat',X33))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X34),s('type.rat.rat',X32))),s('type.rat.rat',X33))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X34),s('type.rat.rat',X32))),s('type.rat.rat',X33)))) ) | $spl81),
  inference(backward_demodulation,[],[f13036,f9226])).
fof(f13112,plain,(
  ( ! [X14,X15,X16] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X16),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X15),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X16),s('type.rat.rat',X15))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X16),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X14),s('type.rat.rat',X15))),s('type.rat.rat',X14))))) | s('type.rat.rat',X14) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl81),
  inference(backward_demodulation,[],[f13036,f9217])).
fof(f13109,plain,(
  ( ! [X52,X50,X51,X49] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X49),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X50),s('type.rat.rat',X51))))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X52),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X49),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X50),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X51),s('type.rat.rat',X52))))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X49),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X50),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X51),s('type.rat.rat',X52)))))))) ) | $spl81),
  inference(backward_demodulation,[],[f13036,f9204])).
fof(f13108,plain,(
  ( ! [X47,X45,X48,X46] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X46),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X45),s('type.rat.rat',X47))))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X48),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X46),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X45),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X47),s('type.rat.rat',X48))))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X45),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X46),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X47),s('type.rat.rat',X48)))))))) ) | $spl81),
  inference(backward_demodulation,[],[f13036,f9200])).
fof(f13106,plain,(
  ( ! [X33,X34,X32] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X32),s('type.rat.rat',X33))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X34),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X32),s('type.rat.rat',X34))),s('type.rat.rat',X33))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X32),s('type.rat.rat',X34))),s('type.rat.rat',X33)))) ) | $spl81),
  inference(backward_demodulation,[],[f13036,f9187])).
fof(f13105,plain,(
  ( ! [X30,X28,X31,X29] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X30),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X28),s('type.rat.rat',X29))))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X31),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X30),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X28),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X29),s('type.rat.rat',X31))))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X28),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X29),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X30),s('type.rat.rat',X31)))))))) ) | $spl81),
  inference(backward_demodulation,[],[f13036,f9183])).
fof(f13104,plain,(
  ( ! [X26,X24,X27,X25] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X25),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X26),s('type.rat.rat',X24))))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X27),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X25),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X26),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X24),s('type.rat.rat',X27))))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X24),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X25),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X26),s('type.rat.rat',X27)))))))) ) | $spl81),
  inference(backward_demodulation,[],[f13036,f9179])).
fof(f13103,plain,(
  ( ! [X19,X17,X20,X18] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X17),s('type.rat.rat',X18))),s('type.rat.rat',X19))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X20),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X17),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X18),s('type.rat.rat',X20))))),s('type.rat.rat',X19))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X17),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X18),s('type.rat.rat',X20))))),s('type.rat.rat',X19)))) ) | $spl81),
  inference(backward_demodulation,[],[f13036,f9173])).
fof(f13102,plain,(
  ( ! [X14,X15,X16] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X15),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X16),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X15),s('type.rat.rat',X16))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X14),s('type.rat.rat',X15))),s('type.rat.rat',X14))),s('type.rat.rat',X16))) | s('type.rat.rat',X14) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl81),
  inference(backward_demodulation,[],[f13036,f9168])).
fof(f13100,plain,(
  ( ! [X6,X4,X5] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X5),s('type.rat.rat',X4))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X6),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X5),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X4),s('type.rat.rat',X6))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X4),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X5),s('type.rat.rat',X6)))))) ) | $spl81),
  inference(backward_demodulation,[],[f13036,f9162])).
fof(f13099,plain,(
  ( ! [X2,X3] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X3),s('type.rat.rat',X3))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X2),s('type.rat.rat',X2))),s('type.rat.rat',X3))) | s('type.rat.rat',X2) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl81),
  inference(backward_demodulation,[],[f13036,f9160])).
fof(f13098,plain,(
  ( ! [X17,X18,X16] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X16),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X17),s('type.rat.rat',X18))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X18),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X16),s('type.rat.rat',X17))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X16),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X17),s('type.rat.rat',X18)))))) ) | $spl81),
  inference(backward_demodulation,[],[f13036,f9056])).
fof(f13097,plain,(
  ( ! [X14,X15,X13] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X13),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X14),s('type.rat.rat',X15))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X14),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X15),s('type.rat.rat',X13))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X13),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X14),s('type.rat.rat',X15)))))) ) | $spl81),
  inference(backward_demodulation,[],[f13036,f9055])).
fof(f13096,plain,(
  ( ! [X0,X1] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X0),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X1),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X1),s('type.rat.rat',X0))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X0),s('type.rat.rat',X1)))) ) | $spl81),
  inference(backward_demodulation,[],[f13036,f9048])).
fof(f13095,plain,(
  ( ! [X30,X28,X31,X29] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X31),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X30),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X28),s('type.rat.rat',X29))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X31),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X30),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X28),s('type.rat.rat',X29))))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X31),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X28),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X29),s('type.rat.rat',X30)))))))) ) | $spl81),
  inference(backward_demodulation,[],[f13036,f9038])).
fof(f13094,plain,(
  ( ! [X26,X24,X27,X25] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X27),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X25),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X26),s('type.rat.rat',X24))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X27),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X25),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X26),s('type.rat.rat',X24))))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X27),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X24),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X25),s('type.rat.rat',X26)))))))) ) | $spl81),
  inference(backward_demodulation,[],[f13036,f9037])).
fof(f13093,plain,(
  ( ! [X6,X4,X5] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X6),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X5),s('type.rat.rat',X4))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X6),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X5),s('type.rat.rat',X4))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X6),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X4),s('type.rat.rat',X5)))))) ) | $spl81),
  inference(backward_demodulation,[],[f13036,f9030])).
fof(f13089,plain,(
  ( ! [X8,X7] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X7),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X7))))) | s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X7),s('type.rat.rat',X8))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X8),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) ) | $spl81),
  inference(backward_demodulation,[],[f13036,f8979])).
fof(f13087,plain,(
  ( ! [X4,X3] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X3),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X3))))) | s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X3),s('type.rat.rat',X4))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat',X4)))) ) | $spl81),
  inference(backward_demodulation,[],[f13036,f8977])).
fof(f13086,plain,(
  ( ! [X28,X29,X27] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X27),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X28),s('type.rat.rat',X29))))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X27),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X28),s('type.rat.rat',X29))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X27),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X29),s('type.rat.rat',X28)))))) ) | $spl81),
  inference(backward_demodulation,[],[f13036,f8932])).
fof(f13084,plain,(
  ( ! [X8,X9] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X8),s('type.rat.rat',X9))),s('type.rat.rat',X8))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X8),s('type.rat.rat',X9))),s('type.rat.rat',X8))))))) | s('type.rat.rat',X9) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.rat.rat',X8) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl81),
  inference(backward_demodulation,[],[f13036,f8905])).
fof(f13080,plain,(
  ( ! [X28,X29,X27] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X28),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X27),s('type.rat.rat',X29))))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X28),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X27),s('type.rat.rat',X29))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X29),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X27),s('type.rat.rat',X28)))))) ) | $spl81),
  inference(backward_demodulation,[],[f13036,f8891])).
fof(f13079,plain,(
  ( ! [X12,X10,X11] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X10),s('type.rat.rat',X11))),s('type.rat.rat',X12))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X10),s('type.rat.rat',X11))),s('type.rat.rat',X12))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat',X10))),s('type.rat.rat',X12)))) ) | $spl81),
  inference(backward_demodulation,[],[f13036,f8876])).
fof(f13077,plain,(
  ( ! [X0,X1] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X1),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X1))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X1),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X0),s('type.rat.rat',X0))))) | s('type.rat.rat',X0) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl81),
  inference(backward_demodulation,[],[f13036,f8688])).
fof(f13074,plain,(
  ( ! [X26,X27,X25] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X26),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X25),s('type.rat.rat',X27))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X26),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X25),s('type.rat.rat',X27))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X25),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X26),s('type.rat.rat',X27)))))) ) | $spl81),
  inference(backward_demodulation,[],[f13036,f8600])).
fof(f13072,plain,(
  ( ! [X17,X15,X16] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X17),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X15),s('type.rat.rat',X16))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X17),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X15),s('type.rat.rat',X16))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X15),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X16),s('type.rat.rat',X17)))))) ) | $spl81),
  inference(backward_demodulation,[],[f13036,f8433])).
fof(f13071,plain,(
  ( ! [X14,X12,X13] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X13),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X14),s('type.rat.rat',X12))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X13),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X14),s('type.rat.rat',X12))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X12),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X13),s('type.rat.rat',X14)))))) ) | $spl81),
  inference(backward_demodulation,[],[f13036,f8432])).
fof(f13070,plain,(
  ( ! [X8,X7] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X8),s('type.rat.rat',X8))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X7),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X8),s('type.rat.rat',X7))))) | s('type.rat.rat',X7) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl81),
  inference(backward_demodulation,[],[f13036,f8430])).
fof(f13068,plain,(
  ( ! [X2,X3] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X3),s('type.rat.rat',X2))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X3),s('type.rat.rat',X2))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X2),s('type.rat.rat',X3)))) ) | $spl81),
  inference(backward_demodulation,[],[f13036,f8427])).
fof(f13067,plain,(
  ~sP2('const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12)))),'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12)),'F_0') | $spl81),
  inference(backward_demodulation,[],[f13036,f7965])).
fof(f13066,plain,(
  ( ! [X30] : (sP5('T_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat',X30)),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X30),s('type.rat.rat',sK12))),s('type.rat.rat',sK12)))) ) | $spl81),
  inference(backward_demodulation,[],[f13036,f7964])).
fof(f13065,plain,(
  ( ! [X29] : (sP5('T_0','const.rat.rat_les_2'(s('type.rat.rat',X29),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12)))),'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X29),s('type.rat.rat',sK12)))))) ) | $spl81),
  inference(backward_demodulation,[],[f13036,f7963])).
fof(f13064,plain,(
  ( ! [X28] : (~sP5('F_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat',X28)),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X28),s('type.rat.rat',sK12))),s('type.rat.rat',sK12)))) ) | $spl81),
  inference(backward_demodulation,[],[f13036,f7962])).
fof(f13063,plain,(
  ( ! [X27] : (~sP5('F_0','const.rat.rat_les_2'(s('type.rat.rat',X27),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12)))),'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X27),s('type.rat.rat',sK12)))))) ) | $spl81),
  inference(backward_demodulation,[],[f13036,f7961])).
fof(f13062,plain,(
  ( ! [X26] : (sP5('T_0','const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X26),s('type.rat.rat',sK12)))),'const.rat.rat_les_2'(s('type.rat.rat',X26),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12)))))) ) | $spl81),
  inference(backward_demodulation,[],[f13036,f7960])).
fof(f13061,plain,(
  ( ! [X25] : (sP5('T_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X25),s('type.rat.rat',sK12))),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat',X25)))) ) | $spl81),
  inference(backward_demodulation,[],[f13036,f7959])).
fof(f13059,plain,(
  ( ! [X23] : (~sP5('F_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X23),s('type.rat.rat',sK12))),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat',X23)))) ) | $spl81),
  inference(backward_demodulation,[],[f13036,f7957])).
fof(f13058,plain,(
  ( ! [X22] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat',X22))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X22),s('type.rat.rat',sK12))),s('type.rat.rat',sK12)))) ) | $spl81),
  inference(backward_demodulation,[],[f13036,f7956])).
fof(f13057,plain,(
  ( ! [X21] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X21),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X21),s('type.rat.rat',sK12)))))) ) | $spl81),
  inference(backward_demodulation,[],[f13036,f7955])).
fof(f13055,plain,(
  ( ! [X118,X117] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat',X117))) | s('type.rat.rat',X118) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X117),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X118),s('type.rat.rat',X117)))))) ) | $spl81),
  inference(backward_demodulation,[],[f13036,f5070])).
fof(f13054,plain,(
  ( ! [X6,X7] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X7),s('type.rat.rat',X6))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X6),s('type.rat.rat',X7)))))) ) | $spl81),
  inference(backward_demodulation,[],[f13036,f5017])).
fof(f13053,plain,(
  ( ! [X8,X7] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X8),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X7),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X7),s('type.rat.rat',X8))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X7),s('type.rat.rat',X8)))) ) | $spl81),
  inference(backward_demodulation,[],[f13036,f4880])).
fof(f13052,plain,(
  ( ! [X6,X5] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X5),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X5),s('type.rat.rat',X6))))),s('type.rat.rat',X6))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X5),s('type.rat.rat',X6)))) ) | $spl81),
  inference(backward_demodulation,[],[f13036,f4879])).
fof(f13051,plain,(
  ( ! [X24,X23,X25] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X24),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X23),s('type.rat.rat',X25))))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X24),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X23),s('type.rat.rat',X25))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X23),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X24),s('type.rat.rat',X25)))))) ) | $spl81),
  inference(backward_demodulation,[],[f13036,f4875])).
fof(f13050,plain,(
  ( ! [X11] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X11))))),s('type.rat.rat',X11))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X11)))) ) | $spl81),
  inference(backward_demodulation,[],[f13036,f4800])).
fof(f13049,plain,(
  ( ! [X14,X15,X13] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X15),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X13),s('type.rat.rat',X14))))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X15),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X13),s('type.rat.rat',X14))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X13),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X14),s('type.rat.rat',X15)))))) ) | $spl81),
  inference(backward_demodulation,[],[f13036,f4787])).
fof(f13048,plain,(
  ( ! [X12,X10,X11] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X12),s('type.rat.rat',X10))))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X12),s('type.rat.rat',X10))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X10),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat',X12)))))) ) | $spl81),
  inference(backward_demodulation,[],[f13036,f4786])).
fof(f13047,plain,(
  ( ! [X6,X5] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X6),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X6))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X5),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X6),s('type.rat.rat',X5))))) | s('type.rat.rat',X5) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl81),
  inference(backward_demodulation,[],[f13036,f4784])).
fof(f13046,plain,(
  ( ! [X116,X115] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X115),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))))) | s('type.rat.rat',X116) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X115),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X116),s('type.rat.rat',X115)))))) ) | $spl81),
  inference(backward_demodulation,[],[f13036,f4740])).
fof(f13043,plain,(
  ( ! [X3] : (s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X3))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat',X3)))) ) | $spl81),
  inference(backward_demodulation,[],[f13036,f2853])).
fof(f13042,plain,(
  ( ! [X4,X5] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X4),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X5),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X4),s('type.rat.rat',X5))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X4),s('type.rat.rat',X5)))) ) | $spl81),
  inference(backward_demodulation,[],[f13036,f1466])).
fof(f13040,plain,(
  ( ! [X0,X1] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X1),s('type.rat.rat',X0))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X1),s('type.rat.rat',X0))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X0),s('type.rat.rat',X1)))) ) | $spl81),
  inference(backward_demodulation,[],[f13036,f1434])).
fof(f13037,plain,(
  ( ! [X0] : (s('type.rat.rat',X0) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X0),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12)))))) ) | $spl81),
  inference(backward_demodulation,[],[f13036,f295])).
fof(f4789,plain,(
  ( ! [X18] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X18),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X18))))) | s('type.rat.rat',X18) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f308,f308])).
fof(f7719,plain,(
  ( ! [X18] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X18),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X18))))) | s('type.rat.rat',X18) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f308,f308])).
fof(f13178,plain,(
  ( ! [X7] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X7),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X7))))) | s('type.rat.rat',X7) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl81),
  inference(forward_demodulation,[],[f12994,f13036])).
fof(f12994,plain,(
  ( ! [X7] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X7),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X7))))) | s('type.rat.rat',X7) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f308,f308])).
fof(f13267,plain,(
  ( ! [X6] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X6),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X6))))) | s('type.rat.rat',X6) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl81),
  inference(superposition,[],[f13038,f13038])).
fof(f1599,plain,(
  s(bool,'const.rat.rat_les_2'(s('type.rat.rat',sK10),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12))))) != s(bool,'const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK10),s('type.rat.rat',sK12)))))),
  inference(unit_resulting_resolution,[],[f288,f794,f448])).
fof(f1620,plain,(
  s(bool,'const.rat.rat_les_2'(s('type.rat.rat',sK10),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12))))) != s(bool,'const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK10),s('type.rat.rat',sK12)))))),
  inference(unit_resulting_resolution,[],[f496,f795,f450])).
fof(f1648,plain,(
  s(bool,'const.rat.rat_les_2'(s('type.rat.rat',sK10),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12))))) != s(bool,'const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK10),s('type.rat.rat',sK12)))))),
  inference(unit_resulting_resolution,[],[f288,f796,f448])).
fof(f1673,plain,(
  s(bool,'const.rat.rat_les_2'(s('type.rat.rat',sK10),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12))))) != s(bool,'const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK10),s('type.rat.rat',sK12)))))),
  inference(unit_resulting_resolution,[],[f496,f797,f450])).
fof(f2454,plain,(
  s(bool,'const.rat.rat_les_2'(s('type.rat.rat',sK10),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12))))) != s(bool,'const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK10),s('type.rat.rat',sK12)))))),
  inference(unit_resulting_resolution,[],[f795,f496,f450])).
fof(f2453,plain,(
  s(bool,'const.rat.rat_les_2'(s('type.rat.rat',sK10),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12))))) != s(bool,'const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK10),s('type.rat.rat',sK12)))))),
  inference(unit_resulting_resolution,[],[f797,f496,f450])).
fof(f6864,plain,(
  ( ! [X17,X18] : (s(bool,'F_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X18),s('type.rat.rat',X17))) | s(bool,'T_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X17),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X18),s('type.rat.rat',sK12)))))) )),
  inference(superposition,[],[f1505,f297])).
fof(f6867,plain,(
  ( ! [X2,X3] : (s(bool,'F_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X3),s('type.rat.rat',X2))) | s(bool,'T_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X2),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X3),s('type.rat.rat',sK12)))))) )),
  inference(superposition,[],[f297,f1505])).
fof(f13942,plain,(
  s(bool,'const.rat.rat_les_2'(s('type.rat.rat',sK10),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12))))) != s(bool,'const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK10),s('type.rat.rat',sK12)))))),
  inference(unit_resulting_resolution,[],[f288,f794,f448])).
fof(f13949,plain,(
  s(bool,'const.rat.rat_les_2'(s('type.rat.rat',sK10),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12))))) != s(bool,'const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK10),s('type.rat.rat',sK12)))))),
  inference(unit_resulting_resolution,[],[f496,f795,f450])).
fof(f13959,plain,(
  s(bool,'const.rat.rat_les_2'(s('type.rat.rat',sK10),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12))))) != s(bool,'const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK10),s('type.rat.rat',sK12)))))),
  inference(unit_resulting_resolution,[],[f288,f796,f448])).
fof(f13965,plain,(
  s(bool,'const.rat.rat_les_2'(s('type.rat.rat',sK10),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12))))) != s(bool,'const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK10),s('type.rat.rat',sK12)))))),
  inference(unit_resulting_resolution,[],[f496,f797,f450])).
fof(f26884,plain,(
  ( ! [X21,X19,X20] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X20),s('type.rat.rat',X21))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X19),s('type.rat.rat',X21))),s('type.rat.rat',X19))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X19),s('type.rat.rat',X20))),s('type.rat.rat',X19))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.rat.rat',X19) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl81),
  inference(forward_demodulation,[],[f26883,f3474])).
fof(f26883,plain,(
  ( ! [X21,X19,X20] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X20),s('type.rat.rat',X21))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X21),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X19),s('type.rat.rat',X19))))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X19),s('type.rat.rat',X20))),s('type.rat.rat',X19))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.rat.rat',X19) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl81),
  inference(forward_demodulation,[],[f14040,f3474])).
fof(f14040,plain,(
  ( ! [X21,X19,X20] : (~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X20),s('type.rat.rat',X21))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X21),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X19),s('type.rat.rat',X19))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X20),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X19),s('type.rat.rat',X19))))))) | s('type.rat.rat',X19) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl81),
  inference(superposition,[],[f421,f13270])).
fof(f20929,plain,(
  ( ! [X4,X3] : (s(bool,'F_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X4),s('type.rat.rat',X3))) | s(bool,'T_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X3),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X4),s('type.rat.rat',sK12)))))) )),
  inference(superposition,[],[f1505,f297])).
fof(f20937,plain,(
  ( ! [X2,X3] : (s(bool,'F_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X3),s('type.rat.rat',X2))) | s(bool,'T_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X2),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X3),s('type.rat.rat',sK12)))))) )),
  inference(superposition,[],[f297,f1505])).
fof(f21678,plain,(
  ( ! [X37,X35,X38,X36] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X37),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X36),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X35),s('type.rat.rat',X38))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X37),s('type.rat.rat',X38))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X35),s('type.rat.rat',X36)))))) ) | $spl81),
  inference(forward_demodulation,[],[f21546,f21543])).
fof(f21546,plain,(
  ( ! [X37,X35,X38,X36] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X37),s('type.rat.rat',X38))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X35),s('type.rat.rat',X36))))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X36),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X37),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X35),s('type.rat.rat',X38))))))))),s('type.rat.rat',sK12)))) ) | $spl81),
  inference(superposition,[],[f14268,f12972])).
fof(f22888,plain,(
  ( ! [X12,X13,X11] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X13),s('type.rat.rat',X12))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X12),s('type.rat.rat',X13))),s('type.rat.rat',X11)))) ) | $spl81),
  inference(superposition,[],[f372,f15767])).
fof(f26376,plain,(
  ( ! [X0] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X0))) | s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X0))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X0),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X0)))))) ) | ($spl81 | $spl118)),
  inference(equality_factoring,[],[f14820])).
fof(f26550,plain,(
  ( ! [X212,X210,X213,X211,X214] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X212),s('type.rat.rat',X213))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X211),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X210),s('type.rat.rat',X213))))),s('type.rat.rat',X210))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X211),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X210),s('type.rat.rat',X212))))),s('type.rat.rat',X210))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X211),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.rat.rat',X214) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X210),s('type.rat.rat',X214)))) ) | ($spl81 | $spl118)),
  inference(forward_demodulation,[],[f26549,f4016])).
fof(f26549,plain,(
  ( ! [X212,X210,X213,X211,X214] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X212),s('type.rat.rat',X213))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X213),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X211),s('type.rat.rat',X210))),s('type.rat.rat',X210))))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X211),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X210),s('type.rat.rat',X212))))),s('type.rat.rat',X210))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X211),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.rat.rat',X214) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X210),s('type.rat.rat',X214)))) ) | ($spl81 | $spl118)),
  inference(forward_demodulation,[],[f26548,f3474])).
fof(f26548,plain,(
  ( ! [X212,X210,X213,X211,X214] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X212),s('type.rat.rat',X213))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X213),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X210),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X211),s('type.rat.rat',X210))))))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X211),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X210),s('type.rat.rat',X212))))),s('type.rat.rat',X210))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X211),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.rat.rat',X214) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X210),s('type.rat.rat',X214)))) ) | ($spl81 | $spl118)),
  inference(forward_demodulation,[],[f26547,f1340])).
fof(f26547,plain,(
  ( ! [X212,X210,X213,X211,X214] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X212),s('type.rat.rat',X213))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X213),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X210),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X210))),s('type.rat.rat',X211))))))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X211),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X210),s('type.rat.rat',X212))))),s('type.rat.rat',X210))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X211),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.rat.rat',X214) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X210),s('type.rat.rat',X214)))) ) | ($spl81 | $spl118)),
  inference(forward_demodulation,[],[f26546,f15386])).
fof(f26546,plain,(
  ( ! [X212,X210,X213,X211,X214] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X212),s('type.rat.rat',X213))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X213),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X210))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X211),s('type.rat.rat',X210))))))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X211),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X210),s('type.rat.rat',X212))))),s('type.rat.rat',X210))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X211),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.rat.rat',X214) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X210),s('type.rat.rat',X214)))) ) | ($spl81 | $spl118)),
  inference(forward_demodulation,[],[f26545,f4016])).
fof(f26545,plain,(
  ( ! [X212,X210,X213,X211,X214] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X212),s('type.rat.rat',X213))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X213),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X210))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X211),s('type.rat.rat',X210))))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X212),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X211),s('type.rat.rat',X210))),s('type.rat.rat',X210))))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X211),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.rat.rat',X214) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X210),s('type.rat.rat',X214)))) ) | ($spl81 | $spl118)),
  inference(forward_demodulation,[],[f26544,f3474])).
fof(f26544,plain,(
  ( ! [X212,X210,X213,X211,X214] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X212),s('type.rat.rat',X213))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X213),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X210))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X211),s('type.rat.rat',X210))))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X212),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X210),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X211),s('type.rat.rat',X210))))))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X211),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.rat.rat',X214) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X210),s('type.rat.rat',X214)))) ) | ($spl81 | $spl118)),
  inference(forward_demodulation,[],[f26543,f1340])).
fof(f26543,plain,(
  ( ! [X212,X210,X213,X211,X214] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X212),s('type.rat.rat',X213))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X213),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X210))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X211),s('type.rat.rat',X210))))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X212),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X210),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X210))),s('type.rat.rat',X211))))))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X211),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.rat.rat',X214) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X210),s('type.rat.rat',X214)))) ) | ($spl81 | $spl118)),
  inference(forward_demodulation,[],[f26542,f15386])).
fof(f26542,plain,(
  ( ! [X212,X210,X213,X211,X214] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X212),s('type.rat.rat',X213))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X213),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X210))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X211),s('type.rat.rat',X210))))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X212),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X210))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X211),s('type.rat.rat',X210))))))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X211),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.rat.rat',X214) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X210),s('type.rat.rat',X214)))) ) | ($spl81 | $spl118)),
  inference(forward_demodulation,[],[f26541,f3518])).
fof(f26541,plain,(
  ( ! [X212,X210,X213,X211,X214] : (~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X211),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X212),s('type.rat.rat',X213))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X213),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X210),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X210))))),s('type.rat.rat',X211))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X212),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X210),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X210))))),s('type.rat.rat',X211))))))) | s('type.rat.rat',X214) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X210),s('type.rat.rat',X214)))) ) | ($spl81 | $spl118)),
  inference(forward_demodulation,[],[f26315,f14470])).
fof(f26315,plain,(
  ( ! [X212,X210,X213,X211,X214] : (~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X211),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X212),s('type.rat.rat',X213))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X213),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X210),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X210))))),s('type.rat.rat',X211))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X212),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X210),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X210))))),s('type.rat.rat',X211))))))) | s('type.rat.rat',X214) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X210),s('type.rat.rat',X214)))) ) | ($spl81 | $spl118)),
  inference(superposition,[],[f1488,f14820])).
fof(f26532,plain,(
  ( ! [X33,X32] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X32))),s('type.rat.rat',X32))) | s('type.rat.rat',X33) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X32),s('type.rat.rat',X33)))) ) | ($spl81 | $spl118)),
  inference(forward_demodulation,[],[f26256,f21793])).
fof(f26256,plain,(
  ( ! [X33,X32] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X32))),s('type.rat.rat',X32))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.rat.rat',sK12))) | s('type.rat.rat',X33) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X32),s('type.rat.rat',X33)))) ) | ($spl81 | $spl118)),
  inference(superposition,[],[f14268,f14820])).
fof(f26529,plain,(
  ( ! [X28,X26,X27,X25] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X27),s('type.rat.rat',X26))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X25))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X26),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X25),s('type.rat.rat',X27))))))) | s('type.rat.rat',X28) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X25),s('type.rat.rat',X28)))) ) | ($spl81 | $spl118)),
  inference(forward_demodulation,[],[f26254,f14485])).
fof(f26254,plain,(
  ( ! [X28,X26,X27,X25] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X26),s('type.rat.rat',X27))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X25))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X26),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X25),s('type.rat.rat',X27))))))) | s('type.rat.rat',X28) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X25),s('type.rat.rat',X28)))) ) | ($spl81 | $spl118)),
  inference(superposition,[],[f12972,f14820])).
fof(f26523,plain,(
  ( ! [X14,X15,X16] : (s('type.rat.rat',X15) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X14))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X15),s('type.rat.rat',X14))))) | s('type.rat.rat',X16) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X14),s('type.rat.rat',X16)))) ) | ($spl81 | $spl118)),
  inference(forward_demodulation,[],[f26251,f14470])).
fof(f26251,plain,(
  ( ! [X14,X15,X16] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X15),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X14))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X15),s('type.rat.rat',X14))))) | s('type.rat.rat',X16) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X14),s('type.rat.rat',X16)))) ) | ($spl81 | $spl118)),
  inference(superposition,[],[f1385,f14820])).
fof(f26517,plain,(
  ( ! [X269,X271,X267,X268,X270] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X267),s('type.rat.rat',X267))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X268),s('type.rat.rat',X269))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X270),s('type.rat.rat',X271))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X271),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X269),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X267),s('type.rat.rat',X268))))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X270),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X269),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X267),s('type.rat.rat',X268)))))))))) ) | ($spl81 | $spl118)),
  inference(forward_demodulation,[],[f26187,f373])).
fof(f26187,plain,(
  ( ! [X269,X271,X267,X268,X270] : (~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X268),s('type.rat.rat',X269))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X270),s('type.rat.rat',X271))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X271),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X269),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X267),s('type.rat.rat',X268))))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X270),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X269),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X267),s('type.rat.rat',X268))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X267),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X267)))))) ) | ($spl81 | $spl118)),
  inference(superposition,[],[f1488,f14820])).
fof(f26516,plain,(
  ( ! [X263,X265,X262,X264,X266] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X262),s('type.rat.rat',X262))) | s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X265),s('type.rat.rat',X266))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X266),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X263),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X264),s('type.rat.rat',X262))))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X265),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X263),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X264),s('type.rat.rat',X262))))))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X264),s('type.rat.rat',X263))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) ) | ($spl81 | $spl118)),
  inference(forward_demodulation,[],[f26515,f373])).
fof(f26515,plain,(
  ( ! [X263,X265,X262,X264,X266] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X265),s('type.rat.rat',X266))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X266),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X263),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X264),s('type.rat.rat',X262))))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X265),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X263),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X264),s('type.rat.rat',X262))))))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X264),s('type.rat.rat',X263))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X262),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X262)))))) ) | ($spl81 | $spl118)),
  inference(forward_demodulation,[],[f26186,f3518])).
fof(f26186,plain,(
  ( ! [X263,X265,X262,X264,X266] : (~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X264),s('type.rat.rat',X263))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X265),s('type.rat.rat',X266))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X266),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X262),s('type.rat.rat',X263))),s('type.rat.rat',X264))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X265),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X262),s('type.rat.rat',X263))),s('type.rat.rat',X264))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X262),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X262)))))) ) | ($spl81 | $spl118)),
  inference(superposition,[],[f1488,f14820])).
fof(f26185,plain,(
  ( ! [X261,X259,X260] : (s('type.rat.rat',X261) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X260),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X261),s('type.rat.rat',X260))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X259),s('type.rat.rat',X260))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X259),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X259)))))) ) | ($spl81 | $spl118)),
  inference(superposition,[],[f1468,f14820])).
fof(f26485,plain,(
  ( ! [X78] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X78),s('type.rat.rat',X78))) | sP4('T_0','const.rat.rat_les_2'(s('type.rat.rat',X78),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12)))) ) | ($spl81 | $spl118)),
  inference(forward_demodulation,[],[f26089,f373])).
fof(f26089,plain,(
  ( ! [X78] : (sP4('T_0','const.rat.rat_les_2'(s('type.rat.rat',X78),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X78),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X78)))))) ) | ($spl81 | $spl118)),
  inference(superposition,[],[f21416,f14820])).
fof(f26484,plain,(
  ( ! [X77] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X77),s('type.rat.rat',X77))) | sP4('T_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat',X77)),'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12)))) ) | ($spl81 | $spl118)),
  inference(forward_demodulation,[],[f26088,f373])).
fof(f26088,plain,(
  ( ! [X77] : (sP4('T_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat',X77)),'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X77),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X77)))))) ) | ($spl81 | $spl118)),
  inference(superposition,[],[f21369,f14820])).
fof(f26087,plain,(
  ( ! [X76] : (s('type.rat.rat',X76) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',sK12))),s('type.rat.rat',sK12))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X76),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X76)))))) ) | ($spl81 | $spl118)),
  inference(superposition,[],[f18486,f14820])).
fof(f26483,plain,(
  ( ! [X75] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X75),s('type.rat.rat',X75))) | sP5('T_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat',X75)),'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12)))) ) | ($spl81 | $spl118)),
  inference(forward_demodulation,[],[f26086,f373])).
fof(f26086,plain,(
  ( ! [X75] : (sP5('T_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat',X75)),'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X75),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X75)))))) ) | ($spl81 | $spl118)),
  inference(superposition,[],[f14495,f14820])).
fof(f26482,plain,(
  ( ! [X74] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X74),s('type.rat.rat',X74))) | sP5('T_0','const.rat.rat_les_2'(s('type.rat.rat',X74),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12)))) ) | ($spl81 | $spl118)),
  inference(forward_demodulation,[],[f26085,f373])).
fof(f26085,plain,(
  ( ! [X74] : (sP5('T_0','const.rat.rat_les_2'(s('type.rat.rat',X74),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X74),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X74)))))) ) | ($spl81 | $spl118)),
  inference(superposition,[],[f14494,f14820])).
fof(f26481,plain,(
  ( ! [X73] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X73),s('type.rat.rat',X73))) | ~sP5('F_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat',X73)),'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12)))) ) | ($spl81 | $spl118)),
  inference(forward_demodulation,[],[f26084,f373])).
fof(f26084,plain,(
  ( ! [X73] : (~sP5('F_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat',X73)),'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X73),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X73)))))) ) | ($spl81 | $spl118)),
  inference(superposition,[],[f14493,f14820])).
fof(f26480,plain,(
  ( ! [X72] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X72),s('type.rat.rat',X72))) | ~sP5('F_0','const.rat.rat_les_2'(s('type.rat.rat',X72),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12)))) ) | ($spl81 | $spl118)),
  inference(forward_demodulation,[],[f26083,f373])).
fof(f26083,plain,(
  ( ! [X72] : (~sP5('F_0','const.rat.rat_les_2'(s('type.rat.rat',X72),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X72),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X72)))))) ) | ($spl81 | $spl118)),
  inference(superposition,[],[f14492,f14820])).
fof(f26479,plain,(
  ( ! [X71] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X71),s('type.rat.rat',X71))) | sP5('T_0','const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat',X71),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) ) | ($spl81 | $spl118)),
  inference(forward_demodulation,[],[f26082,f373])).
fof(f26082,plain,(
  ( ! [X71] : (sP5('T_0','const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat',X71),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X71),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X71)))))) ) | ($spl81 | $spl118)),
  inference(superposition,[],[f14491,f14820])).
fof(f26478,plain,(
  ( ! [X70] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X70),s('type.rat.rat',X70))) | sP5('T_0','const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat',X70)))) ) | ($spl81 | $spl118)),
  inference(forward_demodulation,[],[f26081,f373])).
fof(f26081,plain,(
  ( ! [X70] : (sP5('T_0','const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat',X70))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X70),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X70)))))) ) | ($spl81 | $spl118)),
  inference(superposition,[],[f14490,f14820])).
fof(f26477,plain,(
  ( ! [X69] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X69),s('type.rat.rat',X69))) | ~sP5('F_0','const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat',X69)))) ) | ($spl81 | $spl118)),
  inference(forward_demodulation,[],[f26080,f373])).
fof(f26080,plain,(
  ( ! [X69] : (~sP5('F_0','const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat',X69))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X69),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X69)))))) ) | ($spl81 | $spl118)),
  inference(superposition,[],[f14489,f14820])).
fof(f26078,plain,(
  ( ! [X66,X67] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X66),s('type.rat.rat',X67))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X67),s('type.rat.rat',sK12))),s('type.rat.rat',sK12))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X66),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X66)))))) ) | ($spl81 | $spl118)),
  inference(superposition,[],[f1505,f14820])).
fof(f26077,plain,(
  ( ! [X64,X65] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X65),s('type.rat.rat',X64))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X65),s('type.rat.rat',sK12))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X64),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X64)))))) ) | ($spl81 | $spl118)),
  inference(superposition,[],[f1505,f14820])).
fof(f26061,plain,(
  ( ! [X26,X24,X27,X25] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X25),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X26),s('type.rat.rat',X27))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X25),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X26),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X24),s('type.rat.rat',X27))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X24),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X24)))))) ) | ($spl81 | $spl118)),
  inference(superposition,[],[f12972,f14820])).
fof(f26472,plain,(
  ( ! [X23,X21,X22,X20] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X22),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X21),s('type.rat.rat',X23))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X22),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X20),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X23),s('type.rat.rat',X21))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X20),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X20)))))) ) | ($spl81 | $spl118)),
  inference(forward_demodulation,[],[f26060,f3518])).
fof(f26060,plain,(
  ( ! [X23,X21,X22,X20] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X23),s('type.rat.rat',X22))),s('type.rat.rat',X21))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X22),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X20),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X23),s('type.rat.rat',X21))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X20),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X20)))))) ) | ($spl81 | $spl118)),
  inference(superposition,[],[f12972,f14820])).
fof(f26058,plain,(
  ( ! [X14,X15,X13] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X15),s('type.rat.rat',X14))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X14),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X15),s('type.rat.rat',X13))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X13),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X13)))))) ) | ($spl81 | $spl118)),
  inference(superposition,[],[f1385,f14820])).
fof(f26056,plain,(
  ( ! [X8,X7,X9] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X8),s('type.rat.rat',X9))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X8),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X7),s('type.rat.rat',X9))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X7),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X7)))))) ) | ($spl81 | $spl118)),
  inference(superposition,[],[f1375,f14820])).
fof(f26052,plain,(
  ( ! [X21,X22] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X21))))),s('type.rat.rat',X21))) | s('type.rat.rat',X22) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X21))),s('type.rat.rat',X22)))) ) | ($spl81 | $spl118)),
  inference(superposition,[],[f14820,f1340])).
fof(f26469,plain,(
  ( ! [X17,X15,X16] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X16),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X15),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X15),s('type.rat.rat',X16))))))) | s('type.rat.rat',X17) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X15),s('type.rat.rat',X16))),s('type.rat.rat',X17)))) ) | ($spl81 | $spl118)),
  inference(forward_demodulation,[],[f26050,f373])).
fof(f26050,plain,(
  ( ! [X17,X15,X16] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X16),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X15),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X15),s('type.rat.rat',X16))))))))) | s('type.rat.rat',X17) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X15),s('type.rat.rat',X16))),s('type.rat.rat',X17)))) ) | ($spl81 | $spl118)),
  inference(superposition,[],[f14820,f1375])).
fof(f26468,plain,(
  ( ! [X14,X12,X13] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X12),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X13),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X12),s('type.rat.rat',X13))))))) | s('type.rat.rat',X14) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X12),s('type.rat.rat',X13))),s('type.rat.rat',X14)))) ) | ($spl81 | $spl118)),
  inference(forward_demodulation,[],[f26467,f373])).
fof(f26467,plain,(
  ( ! [X14,X12,X13] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X12),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X13),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X12),s('type.rat.rat',X13))))))))) | s('type.rat.rat',X14) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X12),s('type.rat.rat',X13))),s('type.rat.rat',X14)))) ) | ($spl81 | $spl118)),
  inference(forward_demodulation,[],[f26049,f372])).
fof(f26049,plain,(
  ( ! [X14,X12,X13] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X12),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X12),s('type.rat.rat',X13))))),s('type.rat.rat',X13))))) | s('type.rat.rat',X14) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X12),s('type.rat.rat',X13))),s('type.rat.rat',X14)))) ) | ($spl81 | $spl118)),
  inference(superposition,[],[f14820,f14161])).
fof(f26466,plain,(
  ( ! [X10,X11,X9] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X9),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X9),s('type.rat.rat',X10))))),s('type.rat.rat',X10))) | s('type.rat.rat',X11) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X9),s('type.rat.rat',X10))),s('type.rat.rat',X11)))) ) | ($spl81 | $spl118)),
  inference(forward_demodulation,[],[f26048,f373])).
fof(f26048,plain,(
  ( ! [X10,X11,X9] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X9),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X9),s('type.rat.rat',X10))))))),s('type.rat.rat',X10))) | s('type.rat.rat',X11) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X9),s('type.rat.rat',X10))),s('type.rat.rat',X11)))) ) | ($spl81 | $spl118)),
  inference(superposition,[],[f14820,f1410])).
fof(f26045,plain,(
  ( ! [X0,X1] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X0),s('type.rat.rat',X0))) | s('type.rat.rat',X1) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X0),s('type.rat.rat',X1)))) ) | ($spl81 | $spl118)),
  inference(superposition,[],[f14820,f373])).
fof(f26416,plain,(
  ( ! [X17,X15,X16] : (s('type.rat.rat',X17) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X16),s('type.rat.rat',X15))),s('type.rat.rat',X15))),s('type.rat.rat',X17))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X16),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X16))))) | s('type.rat.rat',X15) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | ($spl81 | $spl118)),
  inference(forward_demodulation,[],[f26014,f3474])).
fof(f26014,plain,(
  ( ! [X17,X15,X16] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X16),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X16))))) | s('type.rat.rat',X17) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X15),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X16),s('type.rat.rat',X15))))),s('type.rat.rat',X17))) | s('type.rat.rat',X15) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | ($spl81 | $spl118)),
  inference(superposition,[],[f14820,f1468])).
fof(f26009,plain,(
  ( ! [X2,X0,X1] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X1),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X1))))) | s('type.rat.rat',X2) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X0),s('type.rat.rat',X1))),s('type.rat.rat',X2))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X0),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X0)))))) ) | ($spl81 | $spl118)),
  inference(superposition,[],[f14820,f14820])).
fof(f26413,plain,(
  s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',sK12))))))) | ($spl81 | $spl118)),
  inference(subsumption_resolution,[],[f26005,f7502])).
fof(f26005,plain,(
  s('type.rat.rat',sK12) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',sK12))))))) | ($spl81 | $spl118)),
  inference(superposition,[],[f14820,f19507])).
fof(f26004,plain,(
  ( ! [X50,X49] : (s('type.rat.rat',X50) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X50),s('type.rat.rat',X49))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X49))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X49)))))))) ) | ($spl81 | $spl118)),
  inference(superposition,[],[f14820,f1340])).
fof(f26003,plain,(
  ( ! [X47,X45,X48,X46] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X47),s('type.rat.rat',X48))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X46),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X47),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X45),s('type.rat.rat',X48))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X45),s('type.rat.rat',X46))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X45),s('type.rat.rat',X46)))))))) ) | ($spl81 | $spl118)),
  inference(superposition,[],[f14820,f12972])).
fof(f26002,plain,(
  ( ! [X43,X44,X42] : (s('type.rat.rat',X44) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X42),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X43),s('type.rat.rat',X44))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X42),s('type.rat.rat',X43))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X42),s('type.rat.rat',X43)))))))) ) | ($spl81 | $spl118)),
  inference(superposition,[],[f14820,f420])).
fof(f26001,plain,(
  ( ! [X39,X41,X40] : (s('type.rat.rat',X41) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X40),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X39),s('type.rat.rat',X41))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X39),s('type.rat.rat',X40))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X39),s('type.rat.rat',X40)))))))) ) | ($spl81 | $spl118)),
  inference(superposition,[],[f14820,f1375])).
fof(f26000,plain,(
  ( ! [X37,X38,X36] : (s('type.rat.rat',X38) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X36),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X38),s('type.rat.rat',X37))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X36),s('type.rat.rat',X37))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X36),s('type.rat.rat',X37)))))))) ) | ($spl81 | $spl118)),
  inference(superposition,[],[f14820,f14161])).
fof(f25998,plain,(
  ( ! [X33,X34,X32] : (s('type.rat.rat',X34) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X32),s('type.rat.rat',X34))),s('type.rat.rat',X33))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X32),s('type.rat.rat',X33))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X32),s('type.rat.rat',X33)))))))) ) | ($spl81 | $spl118)),
  inference(superposition,[],[f14820,f1410])).
fof(f25994,plain,(
  ( ! [X24,X25] : (s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X25))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X24),s('type.rat.rat',X25))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X24),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X24)))))) ) | ($spl81 | $spl118)),
  inference(superposition,[],[f14820,f373])).
fof(f25993,plain,(
  ( ! [X23,X21,X22] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X22),s('type.rat.rat',X23))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X23),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X21),s('type.rat.rat',X22))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X21),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X21)))))) ) | ($spl81 | $spl118)),
  inference(superposition,[],[f14820,f1385])).
fof(f25992,plain,(
  ( ! [X19,X20,X18] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X19),s('type.rat.rat',X20))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X19),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X20),s('type.rat.rat',X18))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X18),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X18)))))) ) | ($spl81 | $spl118)),
  inference(superposition,[],[f14820,f1385])).
fof(f25990,plain,(
  ( ! [X14,X12,X13] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X13),s('type.rat.rat',X14))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X12),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X14),s('type.rat.rat',X13))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X12),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X12)))))) ) | ($spl81 | $spl118)),
  inference(superposition,[],[f14820,f15767])).
fof(f25988,plain,(
  ( ! [X8,X7,X9] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X8),s('type.rat.rat',X9))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X7),s('type.rat.rat',X8))),s('type.rat.rat',X9))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X7),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X7)))))) ) | ($spl81 | $spl118)),
  inference(superposition,[],[f14820,f1409])).
fof(f25985,plain,(
  ( ! [X2,X3] : (s('type.rat.rat',X3) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X3),s('type.rat.rat',X2))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X2),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X2)))))) ) | ($spl81 | $spl118)),
  inference(superposition,[],[f14820,f372])).
fof(f26395,plain,(
  ( ! [X54,X56,X55,X53] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X54),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X55),s('type.rat.rat',X53))))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X54),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X55),s('type.rat.rat',X53))))))))) | s('type.rat.rat',X56) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X53),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X55),s('type.rat.rat',X54))))),s('type.rat.rat',X56)))) ) | ($spl81 | $spl118)),
  inference(forward_demodulation,[],[f25930,f3518])).
fof(f25930,plain,(
  ( ! [X54,X56,X55,X53] : (s('type.rat.rat',X56) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X53),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X55),s('type.rat.rat',X54))))),s('type.rat.rat',X56))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X53),s('type.rat.rat',X54))),s('type.rat.rat',X55))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X53),s('type.rat.rat',X54))),s('type.rat.rat',X55)))))))) ) | ($spl81 | $spl118)),
  inference(superposition,[],[f14820,f14161])).
fof(f25922,plain,(
  ( ! [X30,X33,X31,X32] : (s('type.rat.rat',X33) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X32),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X30),s('type.rat.rat',X31))))),s('type.rat.rat',X33))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X30),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X31),s('type.rat.rat',X32))))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X30),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X31),s('type.rat.rat',X32)))))))))) ) | ($spl81 | $spl118)),
  inference(superposition,[],[f14820,f1385])).
fof(f25921,plain,(
  ( ! [X28,X26,X29,X27] : (s('type.rat.rat',X29) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X27),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X28),s('type.rat.rat',X26))))),s('type.rat.rat',X29))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X26),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X27),s('type.rat.rat',X28))))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X26),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X27),s('type.rat.rat',X28)))))))))) ) | ($spl81 | $spl118)),
  inference(superposition,[],[f14820,f1385])).
fof(f25919,plain,(
  ( ! [X21,X19,X20,X18] : (s('type.rat.rat',X21) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X18),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X20),s('type.rat.rat',X19))))),s('type.rat.rat',X21))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X18),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X19),s('type.rat.rat',X20))))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X18),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X19),s('type.rat.rat',X20)))))))))) ) | ($spl81 | $spl118)),
  inference(superposition,[],[f14820,f15767])).
fof(f26387,plain,(
  ( ! [X17,X15,X16] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X16),s('type.rat.rat',X15))),s('type.rat.rat',X15))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X16),s('type.rat.rat',X15))),s('type.rat.rat',X15))))))) | s('type.rat.rat',X17) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X16),s('type.rat.rat',X17))) | s('type.rat.rat',X15) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | ($spl81 | $spl118)),
  inference(forward_demodulation,[],[f25918,f3474])).
fof(f25918,plain,(
  ( ! [X17,X15,X16] : (s('type.rat.rat',X17) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X16),s('type.rat.rat',X17))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X15),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X16),s('type.rat.rat',X15))))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X15),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X16),s('type.rat.rat',X15))))))))) | s('type.rat.rat',X15) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | ($spl81 | $spl118)),
  inference(superposition,[],[f14820,f1468])).
fof(f26386,plain,(
  ( ! [X14,X12,X13,X11] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X12),s('type.rat.rat',X11))),s('type.rat.rat',X13))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X12),s('type.rat.rat',X11))),s('type.rat.rat',X13))))))) | s('type.rat.rat',X14) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat',X12))),s('type.rat.rat',X13))),s('type.rat.rat',X14)))) ) | ($spl81 | $spl118)),
  inference(forward_demodulation,[],[f25917,f3474])).
fof(f25917,plain,(
  ( ! [X14,X12,X13,X11] : (s('type.rat.rat',X14) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat',X12))),s('type.rat.rat',X13))),s('type.rat.rat',X14))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X12),s('type.rat.rat',X13))))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X12),s('type.rat.rat',X13)))))))))) ) | ($spl81 | $spl118)),
  inference(superposition,[],[f14820,f1409])).
fof(f25914,plain,(
  ( ! [X4,X5,X3] : (s('type.rat.rat',X5) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X4),s('type.rat.rat',X3))),s('type.rat.rat',X5))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X3),s('type.rat.rat',X4))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X3),s('type.rat.rat',X4)))))))) ) | ($spl81 | $spl118)),
  inference(superposition,[],[f14820,f372])).
fof(f26384,plain,(
  ( ! [X2,X0,X1] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X0),s('type.rat.rat',X0))) | s('type.rat.rat',X2) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X1),s('type.rat.rat',X2))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X0),s('type.rat.rat',X1))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X0),s('type.rat.rat',X1)))))))) ) | ($spl81 | $spl118)),
  inference(forward_demodulation,[],[f25913,f373])).
fof(f25913,plain,(
  ( ! [X2,X0,X1] : (s('type.rat.rat',X2) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X1),s('type.rat.rat',X2))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X0),s('type.rat.rat',X1))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X0),s('type.rat.rat',X1))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X0),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X0)))))) ) | ($spl81 | $spl118)),
  inference(superposition,[],[f14820,f14820])).
fof(f24526,plain,(
  ( ! [X170] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X170),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X170))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',X170))),s('type.rat.rat',sK12)))) ) | ($spl81 | $spl118)),
  inference(superposition,[],[f14471,f21793])).
fof(f24445,plain,(
  ( ! [X12,X13] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X12),s('type.rat.rat',X13))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X13),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',X12))))),s('type.rat.rat',sK12)))) ) | $spl81),
  inference(superposition,[],[f21793,f1385])).
fof(f24159,plain,(
  ( ! [X10,X9] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X9),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X9))))) | s('type.rat.rat',X10) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X10),s('type.rat.rat',X9)))))) ) | ($spl81 | $spl118)),
  inference(forward_demodulation,[],[f24158,f14469])).
fof(f24158,plain,(
  ( ! [X10,X9] : (s('type.rat.rat',X10) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X10),s('type.rat.rat',X9))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X9),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X9)))))) ) | ($spl81 | $spl118)),
  inference(forward_demodulation,[],[f24157,f14470])).
fof(f24157,plain,(
  ( ! [X10,X9] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X10),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X10),s('type.rat.rat',X9))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X9),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X9)))))) ) | ($spl81 | $spl118)),
  inference(forward_demodulation,[],[f8788,f14469])).
fof(f24156,plain,(
  ( ! [X130,X128,X131,X129] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X128),s('type.rat.rat',X128))) | s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X130),s('type.rat.rat',X131))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X131),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X128),s('type.rat.rat',X129))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X130),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X128),s('type.rat.rat',X129))))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X129),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) ) | ($spl81 | $spl118)),
  inference(forward_demodulation,[],[f24155,f14469])).
fof(f24155,plain,(
  ( ! [X130,X128,X131,X129] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X128),s('type.rat.rat',X128))) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X130),s('type.rat.rat',X131))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X131),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X128),s('type.rat.rat',X129))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X130),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X128),s('type.rat.rat',X129))))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X129),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) ) | ($spl81 | $spl118)),
  inference(forward_demodulation,[],[f24154,f373])).
fof(f24154,plain,(
  ( ! [X130,X128,X131,X129] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X130),s('type.rat.rat',X131))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X131),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X128),s('type.rat.rat',X129))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X130),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X128),s('type.rat.rat',X129))))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X129),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X128),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X128)))))) ) | ($spl81 | $spl118)),
  inference(forward_demodulation,[],[f24153,f14485])).
fof(f24153,plain,(
  ( ! [X130,X128,X131,X129] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X130),s('type.rat.rat',X131))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X131),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X129),s('type.rat.rat',X128))))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X130),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X129),s('type.rat.rat',X128))))))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X129),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X128),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X128)))))) ) | ($spl81 | $spl118)),
  inference(forward_demodulation,[],[f24152,f14469])).
fof(f24152,plain,(
  ( ! [X130,X128,X131,X129] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X130),s('type.rat.rat',X131))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X131),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X129),s('type.rat.rat',X128))))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X130),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X129),s('type.rat.rat',X128))))))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X129),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X128),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X128)))))) ) | ($spl81 | $spl118)),
  inference(forward_demodulation,[],[f24151,f3518])).
fof(f24151,plain,(
  ( ! [X130,X128,X131,X129] : (~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X129),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X130),s('type.rat.rat',X131))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X131),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X128),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.rat.rat',X129))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X130),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X128),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.rat.rat',X129))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X128),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X128)))))) ) | ($spl81 | $spl118)),
  inference(forward_demodulation,[],[f8845,f14470])).
fof(f24125,plain,(
  ( ! [X10,X11] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X10),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X10))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X10),s('type.rat.rat',X11))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X11)))))) ) | ($spl81 | $spl118)),
  inference(forward_demodulation,[],[f24124,f14469])).
fof(f24124,plain,(
  ( ! [X10,X11] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X10),s('type.rat.rat',X11))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X11))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X10),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X10)))))) ) | ($spl81 | $spl118)),
  inference(forward_demodulation,[],[f24123,f14470])).
fof(f24123,plain,(
  ( ! [X10,X11] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X10),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.rat.rat',X11))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X11))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X10),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X10)))))) ) | ($spl81 | $spl118)),
  inference(forward_demodulation,[],[f24122,f14469])).
fof(f24122,plain,(
  ( ! [X10,X11] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X11))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X10),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.rat.rat',X11))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X10),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X10)))))) ) | ($spl81 | $spl118)),
  inference(forward_demodulation,[],[f24121,f14469])).
fof(f24121,plain,(
  ( ! [X10,X11] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X11))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X10),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.rat.rat',X11))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X10),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X10)))))) ) | ($spl81 | $spl118)),
  inference(forward_demodulation,[],[f9343,f14470])).
fof(f24116,plain,(
  ~sP3('const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12)))),'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),'F_0') | ($spl81 | $spl118)),
  inference(forward_demodulation,[],[f10654,f14470])).
fof(f10654,plain,(
  ~sP3('const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12)))),'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),'F_0')),
  inference(unit_resulting_resolution,[],[f496,f515,f505,f7100,f434])).
fof(f14820,plain,(
  ( ! [X8,X7] : (s('type.rat.rat',X8) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X7),s('type.rat.rat',X8))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X7),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X7)))))) ) | ($spl81 | $spl118)),
  inference(forward_demodulation,[],[f14508,f14470])).
fof(f14508,plain,(
  ( ! [X8,X7] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X7),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X7))))) | s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X7),s('type.rat.rat',X8))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X8),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) ) | ($spl81 | $spl118)),
  inference(backward_demodulation,[],[f14384,f13089])).
fof(f24104,plain,(
  ( ! [X39,X38,X40] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X40),s('type.rat.rat',X39))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X38))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X39),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X38),s('type.rat.rat',X40))))))) | s('type.rat.rat',X38) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | ($spl81 | $spl118)),
  inference(forward_demodulation,[],[f16062,f14485])).
fof(f16062,plain,(
  ( ! [X39,X38,X40] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X39),s('type.rat.rat',X40))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X38))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X39),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X38),s('type.rat.rat',X40))))))) | s('type.rat.rat',X38) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | ($spl81 | $spl118)),
  inference(superposition,[],[f12972,f14471])).
fof(f24075,plain,(
  ( ! [X114,X112,X115,X113] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X114),s('type.rat.rat',X115))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X115),s('type.rat.rat',X113))),s('type.rat.rat',X112))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X114),s('type.rat.rat',X113))),s('type.rat.rat',X112))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X113),s('type.rat.rat',X112))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) ) | ($spl81 | $spl118)),
  inference(forward_demodulation,[],[f24074,f14485])).
fof(f24074,plain,(
  ( ! [X114,X112,X115,X113] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X114),s('type.rat.rat',X115))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X113),s('type.rat.rat',X115))))),s('type.rat.rat',X112))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X114),s('type.rat.rat',X113))),s('type.rat.rat',X112))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X113),s('type.rat.rat',X112))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) ) | ($spl81 | $spl118)),
  inference(forward_demodulation,[],[f24073,f4016])).
fof(f24073,plain,(
  ( ! [X114,X112,X115,X113] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X114),s('type.rat.rat',X115))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X115),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat',X113))),s('type.rat.rat',X112))))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X114),s('type.rat.rat',X113))),s('type.rat.rat',X112))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X113),s('type.rat.rat',X112))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) ) | ($spl81 | $spl118)),
  inference(forward_demodulation,[],[f17636,f14485])).
fof(f17636,plain,(
  ( ! [X114,X112,X115,X113] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X114),s('type.rat.rat',X115))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X115),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat',X113))),s('type.rat.rat',X112))))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X113),s('type.rat.rat',X114))))),s('type.rat.rat',X112))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X113),s('type.rat.rat',X112))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) ) | ($spl81 | $spl118)),
  inference(forward_demodulation,[],[f17635,f4016])).
fof(f17635,plain,(
  ( ! [X114,X112,X115,X113] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X114),s('type.rat.rat',X115))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X115),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat',X113))),s('type.rat.rat',X112))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X114),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat',X113))),s('type.rat.rat',X112))))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X113),s('type.rat.rat',X112))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) ) | ($spl81 | $spl118)),
  inference(forward_demodulation,[],[f17634,f3474])).
fof(f17634,plain,(
  ( ! [X114,X112,X115,X113] : (~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X113),s('type.rat.rat',X112))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X114),s('type.rat.rat',X115))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X115),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X113),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat',X112))))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X114),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X113),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat',X112)))))))))) ) | ($spl81 | $spl118)),
  inference(forward_demodulation,[],[f17594,f1340])).
fof(f17594,plain,(
  ( ! [X114,X112,X115,X113] : (~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X112))),s('type.rat.rat',X113))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X114),s('type.rat.rat',X115))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X115),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X113),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat',X112))))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X114),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X113),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat',X112)))))))))) ) | ($spl81 | $spl118)),
  inference(superposition,[],[f1488,f14475])).
fof(f20113,plain,(
  ( ! [X8,X7] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X7),s('type.rat.rat',X8))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X7),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X8),s('type.rat.rat',sK12)))))))) ) | ($spl81 | $spl118)),
  inference(superposition,[],[f18486,f420])).
fof(f20115,plain,(
  ( ! [X9] : (s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X9))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',X9)))))) ) | ($spl81 | $spl118)),
  inference(superposition,[],[f18486,f1340])).
fof(f21125,plain,(
  ( ! [X66,X67] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X66),s('type.rat.rat',X67))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X67),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X66),s('type.rat.rat',sK12)))))))) ) | ($spl81 | $spl118)),
  inference(superposition,[],[f14161,f18486])).
fof(f21201,plain,(
  ( ! [X85,X84] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X84),s('type.rat.rat',X85))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X84),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',X85)))))))) ) | ($spl81 | $spl118)),
  inference(superposition,[],[f18486,f14161])).
fof(f24009,plain,(
  ( ! [X8,X9] : (s('type.rat.rat',X9) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X9),s('type.rat.rat',X8))),s('type.rat.rat',X8))) | s('type.rat.rat',X8) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl81),
  inference(forward_demodulation,[],[f21534,f21793])).
fof(f21534,plain,(
  ( ! [X8,X9] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',X9))),s('type.rat.rat',sK12))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X9),s('type.rat.rat',X8))),s('type.rat.rat',X8))) | s('type.rat.rat',X8) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl81),
  inference(superposition,[],[f14268,f1468])).
fof(f24001,plain,(
  ( ! [X44] : (s('type.rat.rat',X44) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X44),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',sK12)))))) ) | ($spl81 | $spl118)),
  inference(forward_demodulation,[],[f21552,f21793])).
fof(f21552,plain,(
  ( ! [X44] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',X44))),s('type.rat.rat',sK12))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X44),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',sK12)))))) ) | ($spl81 | $spl118)),
  inference(superposition,[],[f14268,f18486])).
fof(f21704,plain,(
  ~sP3('const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12)))),'F_0') | ($spl81 | $spl118)),
  inference(unit_resulting_resolution,[],[f496,f513,f505,f14492,f434])).
fof(f21793,plain,(
  ( ! [X0] : (s('type.rat.rat',X0) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',X0))),s('type.rat.rat',sK12)))) ) | $spl81),
  inference(superposition,[],[f14391,f15159])).
fof(f23999,plain,(
  ( ! [X4,X3] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',X3))),s('type.rat.rat',X4))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X3),s('type.rat.rat',sK12))))),s('type.rat.rat',X4))),s('type.rat.rat',sK12)))) ) | $spl81),
  inference(forward_demodulation,[],[f21797,f4016])).
fof(f21797,plain,(
  ( ! [X4,X3] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',X3))),s('type.rat.rat',X4))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',X3))),s('type.rat.rat',X4))))),s('type.rat.rat',sK12)))) ) | $spl81),
  inference(superposition,[],[f14391,f1409])).
fof(f21941,plain,(
  ~sP5('F_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) | ($spl81 | $spl118)),
  inference(unit_resulting_resolution,[],[f21753,f428])).
fof(f23992,plain,(
  ( ! [X26,X27] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X27),s('type.rat.rat',X26))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',X27))),s('type.rat.rat',X26))),s('type.rat.rat',sK12)))) ) | $spl81),
  inference(forward_demodulation,[],[f22289,f1340])).
fof(f22289,plain,(
  ( ! [X26,X27] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X26))),s('type.rat.rat',X27))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',X27))),s('type.rat.rat',X26))),s('type.rat.rat',sK12)))) ) | $spl81),
  inference(superposition,[],[f15694,f1340])).
fof(f22442,plain,(
  ( ! [X39,X41,X42,X40] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X41),s('type.rat.rat',X42))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X39),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X40),s('type.rat.rat',X42))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X39),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X40),s('type.rat.rat',X41))))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X39),s('type.rat.rat',X40))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) ) | $spl81),
  inference(forward_demodulation,[],[f22441,f22272])).
fof(f22441,plain,(
  ( ! [X39,X41,X42,X40] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X41),s('type.rat.rat',X42))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X39),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X40),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X42),s('type.rat.rat',sK12))))))),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X39),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X40),s('type.rat.rat',X41))))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X39),s('type.rat.rat',X40))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) ) | $spl81),
  inference(forward_demodulation,[],[f22440,f3518])).
fof(f22440,plain,(
  ( ! [X39,X41,X42,X40] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X41),s('type.rat.rat',X42))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X39),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',X40))),s('type.rat.rat',X42))))),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X39),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X40),s('type.rat.rat',X41))))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X39),s('type.rat.rat',X40))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) ) | $spl81),
  inference(forward_demodulation,[],[f22439,f4016])).
fof(f22439,plain,(
  ( ! [X39,X41,X42,X40] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X41),s('type.rat.rat',X42))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X42),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X39),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',X40))))),s('type.rat.rat',sK12))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X39),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X40),s('type.rat.rat',X41))))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X39),s('type.rat.rat',X40))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) ) | $spl81),
  inference(forward_demodulation,[],[f22438,f22272])).
fof(f22438,plain,(
  ( ! [X39,X41,X42,X40] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X41),s('type.rat.rat',X42))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X42),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X39),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',X40))))),s('type.rat.rat',sK12))))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X39),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X40),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X41),s('type.rat.rat',sK12))))))),s('type.rat.rat',sK12))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X39),s('type.rat.rat',X40))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) ) | $spl81),
  inference(forward_demodulation,[],[f22437,f3518])).
fof(f22437,plain,(
  ( ! [X39,X41,X42,X40] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X41),s('type.rat.rat',X42))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X42),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X39),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',X40))))),s('type.rat.rat',sK12))))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X39),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',X40))),s('type.rat.rat',X41))))),s('type.rat.rat',sK12))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X39),s('type.rat.rat',X40))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) ) | $spl81),
  inference(forward_demodulation,[],[f22304,f4016])).
fof(f22304,plain,(
  ( ! [X39,X41,X42,X40] : (~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X39),s('type.rat.rat',X40))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X41),s('type.rat.rat',X42))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X42),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X39),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',X40))))),s('type.rat.rat',sK12))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X41),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X39),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',X40))))),s('type.rat.rat',sK12)))))))) ) | $spl81),
  inference(superposition,[],[f421,f15694])).
fof(f23991,plain,(
  ( ! [X5] : (~sP5('F_0','const.rat.rat_les_2'(s('type.rat.rat',X5),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X5),s('type.rat.rat',sK12)))))) ) | ($spl81 | $spl118)),
  inference(subsumption_resolution,[],[f22467,f7502])).
fof(f22467,plain,(
  ( ! [X5] : (~sP5('F_0','const.rat.rat_les_2'(s('type.rat.rat',X5),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X5),s('type.rat.rat',sK12))))) | s('type.rat.rat',sK12) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | ($spl81 | $spl118)),
  inference(superposition,[],[f14555,f1468])).
fof(f22702,plain,(
  ( ! [X6,X7] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X7),s('type.rat.rat',X6))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X7),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat',X6)))))) ) | ($spl81 | $spl118)),
  inference(superposition,[],[f15767,f14470])).
fof(f22899,plain,(
  ( ! [X56,X55] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X56),s('type.rat.rat',X55))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X56),s('type.rat.rat',X55)))))) ) | ($spl81 | $spl118)),
  inference(superposition,[],[f14485,f15767])).
fof(f22904,plain,(
  ( ! [X74,X72,X71,X73] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X72),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X71),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X73),s('type.rat.rat',X74))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X71),s('type.rat.rat',X72))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X74),s('type.rat.rat',X73)))))) ) | $spl81),
  inference(superposition,[],[f1375,f15767])).
fof(f22907,plain,(
  ( ! [X80] : (s('type.rat.rat',X80) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',X80)))))) ) | ($spl81 | $spl118)),
  inference(superposition,[],[f18486,f15767])).
fof(f22909,plain,(
  ( ! [X85,X84] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X85),s('type.rat.rat',X84))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X85),s('type.rat.rat',X84))))),s('type.rat.rat',sK12)))) ) | $spl81),
  inference(superposition,[],[f14268,f15767])).
fof(f23088,plain,(
  sP5('T_0','const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | ($spl81 | $spl118)),
  inference(superposition,[],[f21372,f14470])).
fof(f23990,plain,(
  ( ! [X5] : (sP5('T_0','const.rat.rat_les_2'(s('type.rat.rat',X5),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X5),s('type.rat.rat',sK12)))))) ) | ($spl81 | $spl118)),
  inference(subsumption_resolution,[],[f23090,f7502])).
fof(f23090,plain,(
  ( ! [X5] : (sP5('T_0','const.rat.rat_les_2'(s('type.rat.rat',X5),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X5),s('type.rat.rat',sK12))))) | s('type.rat.rat',sK12) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | ($spl81 | $spl118)),
  inference(superposition,[],[f21372,f1468])).
fof(f23183,plain,(
  ( ! [X11] : (sP4('T_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X11))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',X11)))))) ) | ($spl81 | $spl118)),
  inference(superposition,[],[f21416,f1340])).
fof(f23181,plain,(
  ( ! [X10,X9] : (sP4('T_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X9),s('type.rat.rat',X10))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X9),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X10),s('type.rat.rat',sK12)))))))) ) | ($spl81 | $spl118)),
  inference(superposition,[],[f21416,f420])).
fof(f23180,plain,(
  ( ! [X8,X7] : (sP4('T_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X7),s('type.rat.rat',X8))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X8),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X7),s('type.rat.rat',sK12)))))))) ) | ($spl81 | $spl118)),
  inference(superposition,[],[f21416,f1375])).
fof(f23179,plain,(
  ( ! [X6,X5] : (sP4('T_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X5),s('type.rat.rat',X6))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X5),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',X6)))))))) ) | ($spl81 | $spl118)),
  inference(superposition,[],[f21416,f14161])).
fof(f23178,plain,(
  ( ! [X4,X3] : (sP4('T_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X3),s('type.rat.rat',X4))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X3),s('type.rat.rat',sK12))),s('type.rat.rat',X4)))))) ) | ($spl81 | $spl118)),
  inference(superposition,[],[f21416,f1410])).
fof(f23174,plain,(
  ( ! [X0] : (sP4('T_0','const.rat.rat_les_2'(s('type.rat.rat',X0),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',X0)))))) ) | ($spl81 | $spl118)),
  inference(superposition,[],[f21416,f372])).
fof(f23094,plain,(
  ( ! [X12,X13] : (sP5('T_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X13),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',X12))))),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X12),s('type.rat.rat',X13)))))) ) | ($spl81 | $spl118)),
  inference(superposition,[],[f21372,f1385])).
fof(f23091,plain,(
  ( ! [X6,X7] : (sP5('T_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X7),s('type.rat.rat',X6))))),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X6),s('type.rat.rat',X7)))))) ) | ($spl81 | $spl118)),
  inference(superposition,[],[f21372,f15767])).
fof(f23089,plain,(
  ( ! [X4,X3] : (sP5('T_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',X3))),s('type.rat.rat',X4))),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X3),s('type.rat.rat',X4)))))) ) | ($spl81 | $spl118)),
  inference(superposition,[],[f21372,f1409])).
fof(f22761,plain,(
  ( ! [X88,X87] : (~sP5('F_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X88),s('type.rat.rat',X87))))),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X87),s('type.rat.rat',X88)))))) ) | ($spl81 | $spl118)),
  inference(superposition,[],[f14555,f15767])).
fof(f22746,plain,(
  ( ! [X47,X45,X48,X46] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X45),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X48),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X46),s('type.rat.rat',X47))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X45),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X47),s('type.rat.rat',X46))))),s('type.rat.rat',X48)))) ) | $spl81),
  inference(superposition,[],[f14161,f15767])).
fof(f23064,plain,(
  ( ! [X43,X41,X44,X42,X40] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X42),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X43),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X41),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X40),s('type.rat.rat',X44))))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X40),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X42),s('type.rat.rat',X41))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X43),s('type.rat.rat',X44)))))) ) | $spl81),
  inference(forward_demodulation,[],[f22745,f12972])).
fof(f22745,plain,(
  ( ! [X43,X41,X44,X42,X40] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X40),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X42),s('type.rat.rat',X41))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X43),s('type.rat.rat',X44))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X41),s('type.rat.rat',X42))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X43),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X40),s('type.rat.rat',X44)))))))) ) | $spl81),
  inference(superposition,[],[f12972,f15767])).
fof(f22744,plain,(
  ( ! [X39,X37,X35,X38,X36] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X38),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X35),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X39),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X36),s('type.rat.rat',X37))))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X39),s('type.rat.rat',X38))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X35),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X37),s('type.rat.rat',X36)))))))) ) | $spl81),
  inference(superposition,[],[f12972,f15767])).
fof(f22742,plain,(
  ( ! [X28,X26,X29,X27] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X29),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X26),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X28),s('type.rat.rat',X27))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X27),s('type.rat.rat',X28))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X29),s('type.rat.rat',X26)))))) ) | $spl81),
  inference(superposition,[],[f1385,f15767])).
fof(f23061,plain,(
  ( ! [X21,X19,X20,X18] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X20),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X18),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X19),s('type.rat.rat',X21))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X18),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X20),s('type.rat.rat',X19))))),s('type.rat.rat',X21)))) ) | $spl81),
  inference(forward_demodulation,[],[f22740,f12972])).
fof(f22740,plain,(
  ( ! [X21,X19,X20,X18] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X18),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X20),s('type.rat.rat',X19))))),s('type.rat.rat',X21))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X19),s('type.rat.rat',X20))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X18),s('type.rat.rat',X21)))))) ) | $spl81),
  inference(superposition,[],[f1375,f15767])).
fof(f23060,plain,(
  ( ! [X14,X17,X15,X16] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X14),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X16),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X17),s('type.rat.rat',X15))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X14),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X16),s('type.rat.rat',X15))))),s('type.rat.rat',X17)))) ) | $spl81),
  inference(forward_demodulation,[],[f22739,f3518])).
fof(f22739,plain,(
  ( ! [X14,X17,X15,X16] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X14),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X15),s('type.rat.rat',X16))),s('type.rat.rat',X17))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X14),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X16),s('type.rat.rat',X15))))),s('type.rat.rat',X17)))) ) | $spl81),
  inference(superposition,[],[f420,f15767])).
fof(f22587,plain,(
  ( ! [X45,X46,X44] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X45),s('type.rat.rat',X46))),s('type.rat.rat',X44))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X44))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X46),s('type.rat.rat',X45)))))) ) | $spl81),
  inference(superposition,[],[f15767,f1340])).
fof(f22584,plain,(
  ( ! [X39,X41,X38,X40] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X38),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X39),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X40),s('type.rat.rat',X41))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X38),s('type.rat.rat',X39))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X41),s('type.rat.rat',X40)))))) ) | $spl81),
  inference(superposition,[],[f15767,f420])).
fof(f22580,plain,(
  ( ! [X24,X23,X25,X22] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X22),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X24),s('type.rat.rat',X25))))),s('type.rat.rat',X23))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X22),s('type.rat.rat',X23))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X25),s('type.rat.rat',X24)))))) ) | $spl81),
  inference(superposition,[],[f15767,f1410])).
fof(f23038,plain,(
  ( ! [X61,X59,X62,X60,X63] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X63),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X60),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X61),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X59),s('type.rat.rat',X62))))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X63),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X62),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X59),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X61),s('type.rat.rat',X60)))))))))) ) | $spl81),
  inference(forward_demodulation,[],[f22569,f12972])).
fof(f22569,plain,(
  ( ! [X61,X59,X62,X60,X63] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X63),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X60),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X61),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X59),s('type.rat.rat',X62))))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X63),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X61),s('type.rat.rat',X62))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X59),s('type.rat.rat',X60)))))))) ) | $spl81),
  inference(superposition,[],[f15767,f12972])).
fof(f22555,plain,(
  ( ! [X11] : (sP4('T_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X11)))),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',X11))),s('type.rat.rat',sK12)))) ) | ($spl81 | $spl118)),
  inference(superposition,[],[f21369,f1340])).
fof(f22554,plain,(
  sP4('T_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',sK12)))),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat',sK12))) | ($spl81 | $spl118)),
  inference(superposition,[],[f21369,f19507])).
fof(f22553,plain,(
  ( ! [X10,X9] : (sP4('T_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X9),s('type.rat.rat',X10)))),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X9),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X10),s('type.rat.rat',sK12))))),s('type.rat.rat',sK12)))) ) | ($spl81 | $spl118)),
  inference(superposition,[],[f21369,f420])).
fof(f22552,plain,(
  ( ! [X8,X7] : (sP4('T_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X7),s('type.rat.rat',X8)))),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X8),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X7),s('type.rat.rat',sK12))))),s('type.rat.rat',sK12)))) ) | ($spl81 | $spl118)),
  inference(superposition,[],[f21369,f1375])).
fof(f22551,plain,(
  ( ! [X6,X5] : (sP4('T_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X5),s('type.rat.rat',X6)))),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X5),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',X6))))),s('type.rat.rat',sK12)))) ) | ($spl81 | $spl118)),
  inference(superposition,[],[f21369,f14161])).
fof(f22550,plain,(
  ( ! [X4,X3] : (sP4('T_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X3),s('type.rat.rat',X4)))),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X3),s('type.rat.rat',sK12))),s('type.rat.rat',X4))),s('type.rat.rat',sK12)))) ) | ($spl81 | $spl118)),
  inference(superposition,[],[f21369,f1410])).
fof(f22546,plain,(
  ( ! [X0] : (sP4('T_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat',X0)),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',X0))),s('type.rat.rat',sK12)))) ) | ($spl81 | $spl118)),
  inference(superposition,[],[f21369,f372])).
fof(f22469,plain,(
  ( ! [X8,X9] : (~sP5('F_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X9),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',X8))))),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X8),s('type.rat.rat',X9)))))) ) | ($spl81 | $spl118)),
  inference(superposition,[],[f14555,f1385])).
fof(f22466,plain,(
  ( ! [X4,X3] : (~sP5('F_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',X3))),s('type.rat.rat',X4))),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X3),s('type.rat.rat',X4)))))) ) | ($spl81 | $spl118)),
  inference(superposition,[],[f14555,f1409])).
fof(f22460,plain,(
  ( ! [X0] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat',X0))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',X0))),s('type.rat.rat',sK12)))) ) | ($spl81 | $spl118)),
  inference(unit_resulting_resolution,[],[f496,f14555,f447])).
fof(f22456,plain,(
  ( ! [X173,X171,X169,X172,X170] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X172),s('type.rat.rat',X173))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X169),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X171),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X173),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',X170))))))))),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X169),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X171),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X172),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',X170))))))))),s('type.rat.rat',sK12))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X170),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X171),s('type.rat.rat',X169))))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) ) | $spl81),
  inference(forward_demodulation,[],[f22455,f3518])).
fof(f22455,plain,(
  ( ! [X173,X171,X169,X172,X170] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X172),s('type.rat.rat',X173))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X169),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',X170))),s('type.rat.rat',X171))),s('type.rat.rat',X173))))),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X169),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X171),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X172),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',X170))))))))),s('type.rat.rat',sK12))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X170),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X171),s('type.rat.rat',X169))))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) ) | $spl81),
  inference(forward_demodulation,[],[f22454,f4016])).
fof(f22454,plain,(
  ( ! [X173,X171,X169,X172,X170] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X172),s('type.rat.rat',X173))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X173),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X169),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',X170))),s('type.rat.rat',X171))))),s('type.rat.rat',sK12))))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X169),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X171),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X172),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',X170))))))))),s('type.rat.rat',sK12))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X170),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X171),s('type.rat.rat',X169))))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) ) | $spl81),
  inference(forward_demodulation,[],[f22453,f3518])).
fof(f22453,plain,(
  ( ! [X173,X171,X169,X172,X170] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X172),s('type.rat.rat',X173))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X173),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X169),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',X170))),s('type.rat.rat',X171))))),s('type.rat.rat',sK12))))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X169),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',X170))),s('type.rat.rat',X171))),s('type.rat.rat',X172))))),s('type.rat.rat',sK12))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X170),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X171),s('type.rat.rat',X169))))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) ) | $spl81),
  inference(forward_demodulation,[],[f22452,f4016])).
fof(f22452,plain,(
  ( ! [X173,X171,X169,X172,X170] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X172),s('type.rat.rat',X173))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X173),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X169),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',X170))),s('type.rat.rat',X171))))),s('type.rat.rat',sK12))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X172),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X169),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',X170))),s('type.rat.rat',X171))))),s('type.rat.rat',sK12))))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X170),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X171),s('type.rat.rat',X169))))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) ) | $spl81),
  inference(forward_demodulation,[],[f22451,f4016])).
fof(f22451,plain,(
  ( ! [X173,X171,X169,X172,X170] : (~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X170),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X171),s('type.rat.rat',X169))))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X172),s('type.rat.rat',X173))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X173),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X171),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X169),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',X170))))),s('type.rat.rat',sK12))))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X172),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X171),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X169),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',X170))))),s('type.rat.rat',sK12)))))))))) ) | $spl81),
  inference(forward_demodulation,[],[f22344,f3518])).
fof(f22344,plain,(
  ( ! [X173,X171,X169,X172,X170] : (~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X169),s('type.rat.rat',X170))),s('type.rat.rat',X171))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X172),s('type.rat.rat',X173))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X173),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X171),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X169),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',X170))))),s('type.rat.rat',sK12))))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X172),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X171),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X169),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',X170))))),s('type.rat.rat',sK12)))))))))) ) | $spl81),
  inference(superposition,[],[f1488,f15694])).
fof(f22450,plain,(
  ( ! [X167,X165,X166,X164,X168] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X167),s('type.rat.rat',X168))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X166),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X165),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X164),s('type.rat.rat',X168))))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X166),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X165),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X164),s('type.rat.rat',X167))))))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X166),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X164),s('type.rat.rat',X165))))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) ) | $spl81),
  inference(forward_demodulation,[],[f22449,f15694])).
fof(f22449,plain,(
  ( ! [X167,X165,X166,X164,X168] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X167),s('type.rat.rat',X168))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X166),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X165),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X164),s('type.rat.rat',X168))))))))),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X166),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X165),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X164),s('type.rat.rat',X167))))))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X166),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X164),s('type.rat.rat',X165))))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) ) | $spl81),
  inference(forward_demodulation,[],[f22448,f3718])).
fof(f22448,plain,(
  ( ! [X167,X165,X166,X164,X168] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X167),s('type.rat.rat',X168))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X166),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X164),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',X165))))),s('type.rat.rat',X168))))),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X166),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X165),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X164),s('type.rat.rat',X167))))))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X166),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X164),s('type.rat.rat',X165))))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) ) | $spl81),
  inference(forward_demodulation,[],[f22447,f4016])).
fof(f22447,plain,(
  ( ! [X167,X165,X166,X164,X168] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X167),s('type.rat.rat',X168))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X168),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X166),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X164),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',X165))))))),s('type.rat.rat',sK12))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X166),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X165),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X164),s('type.rat.rat',X167))))))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X166),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X164),s('type.rat.rat',X165))))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) ) | $spl81),
  inference(forward_demodulation,[],[f22446,f15694])).
fof(f22446,plain,(
  ( ! [X167,X165,X166,X164,X168] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X167),s('type.rat.rat',X168))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X168),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X166),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X164),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',X165))))))),s('type.rat.rat',sK12))))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X166),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X165),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X164),s('type.rat.rat',X167))))))))),s('type.rat.rat',sK12))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X166),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X164),s('type.rat.rat',X165))))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) ) | $spl81),
  inference(forward_demodulation,[],[f22445,f3718])).
fof(f22445,plain,(
  ( ! [X167,X165,X166,X164,X168] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X167),s('type.rat.rat',X168))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X168),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X166),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X164),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',X165))))))),s('type.rat.rat',sK12))))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X166),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X164),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',X165))))),s('type.rat.rat',X167))))),s('type.rat.rat',sK12))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X166),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X164),s('type.rat.rat',X165))))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) ) | $spl81),
  inference(forward_demodulation,[],[f22444,f4016])).
fof(f22444,plain,(
  ( ! [X167,X165,X166,X164,X168] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X167),s('type.rat.rat',X168))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X168),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X166),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X164),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',X165))))))),s('type.rat.rat',sK12))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X167),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X166),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X164),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',X165))))))),s('type.rat.rat',sK12))))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X166),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X164),s('type.rat.rat',X165))))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) ) | $spl81),
  inference(forward_demodulation,[],[f22343,f3785])).
fof(f22343,plain,(
  ( ! [X167,X165,X166,X164,X168] : (~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X166),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X164),s('type.rat.rat',X165))))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X167),s('type.rat.rat',X168))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X168),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X164),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',X165))))),s('type.rat.rat',sK12))),s('type.rat.rat',X166))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X167),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X164),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',X165))))),s('type.rat.rat',sK12))),s('type.rat.rat',X166)))))))) ) | $spl81),
  inference(superposition,[],[f1488,f15694])).
fof(f22295,plain,(
  ( ! [X12,X10,X11] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X12),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X10),s('type.rat.rat',X11))))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X12),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X10),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',X11))))))),s('type.rat.rat',sK12)))) ) | $spl81),
  inference(superposition,[],[f1409,f15694])).
fof(f22426,plain,(
  ( ! [X12,X10,X11] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X12),s('type.rat.rat',X10))),s('type.rat.rat',X11))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X10),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',X12))))),s('type.rat.rat',X11))),s('type.rat.rat',sK12)))) ) | $spl81),
  inference(forward_demodulation,[],[f22282,f3785])).
fof(f22282,plain,(
  ( ! [X12,X10,X11] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X10),s('type.rat.rat',X11))),s('type.rat.rat',X12))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X10),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',X12))))),s('type.rat.rat',X11))),s('type.rat.rat',sK12)))) ) | $spl81),
  inference(superposition,[],[f15694,f1410])).
fof(f22272,plain,(
  ( ! [X14,X15,X13] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X15),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X13),s('type.rat.rat',X14))))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X15),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X13),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X14),s('type.rat.rat',sK12))))))),s('type.rat.rat',sK12)))) ) | $spl81),
  inference(superposition,[],[f15694,f1385])).
fof(f22134,plain,(
  ( ! [X11] : (sP5('T_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X11)))),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',X11))),s('type.rat.rat',sK12)))) ) | ($spl81 | $spl118)),
  inference(superposition,[],[f14495,f1340])).
fof(f22133,plain,(
  sP5('T_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',sK12)))),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat',sK12))) | ($spl81 | $spl118)),
  inference(superposition,[],[f14495,f19507])).
fof(f22132,plain,(
  ( ! [X10,X9] : (sP5('T_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X9),s('type.rat.rat',X10)))),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X9),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X10),s('type.rat.rat',sK12))))),s('type.rat.rat',sK12)))) ) | ($spl81 | $spl118)),
  inference(superposition,[],[f14495,f420])).
fof(f22131,plain,(
  ( ! [X8,X7] : (sP5('T_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X7),s('type.rat.rat',X8)))),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X8),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X7),s('type.rat.rat',sK12))))),s('type.rat.rat',sK12)))) ) | ($spl81 | $spl118)),
  inference(superposition,[],[f14495,f1375])).
fof(f22130,plain,(
  ( ! [X6,X5] : (sP5('T_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X5),s('type.rat.rat',X6)))),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X5),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',X6))))),s('type.rat.rat',sK12)))) ) | ($spl81 | $spl118)),
  inference(superposition,[],[f14495,f14161])).
fof(f22129,plain,(
  ( ! [X4,X3] : (sP5('T_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X3),s('type.rat.rat',X4)))),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X3),s('type.rat.rat',sK12))),s('type.rat.rat',X4))),s('type.rat.rat',sK12)))) ) | ($spl81 | $spl118)),
  inference(superposition,[],[f14495,f1410])).
fof(f22125,plain,(
  ( ! [X0] : (sP5('T_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat',X0)),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',X0))),s('type.rat.rat',sK12)))) ) | ($spl81 | $spl118)),
  inference(superposition,[],[f14495,f372])).
fof(f22087,plain,(
  ( ! [X0] : (sP4('T_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X0),s('type.rat.rat',sK12))),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat',X0)))) ) | ($spl81 | $spl118)),
  inference(unit_resulting_resolution,[],[f14495,f430])).
fof(f22082,plain,(
  ( ! [X11] : (sP5('T_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X11))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',X11)))))) ) | ($spl81 | $spl118)),
  inference(superposition,[],[f14494,f1340])).
fof(f22081,plain,(
  sP5('T_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | ($spl81 | $spl118)),
  inference(superposition,[],[f14494,f19507])).
fof(f22080,plain,(
  ( ! [X10,X9] : (sP5('T_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X9),s('type.rat.rat',X10))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X9),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X10),s('type.rat.rat',sK12)))))))) ) | ($spl81 | $spl118)),
  inference(superposition,[],[f14494,f420])).
fof(f22079,plain,(
  ( ! [X8,X7] : (sP5('T_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X7),s('type.rat.rat',X8))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X8),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X7),s('type.rat.rat',sK12)))))))) ) | ($spl81 | $spl118)),
  inference(superposition,[],[f14494,f1375])).
fof(f22078,plain,(
  ( ! [X6,X5] : (sP5('T_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X5),s('type.rat.rat',X6))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X5),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',X6)))))))) ) | ($spl81 | $spl118)),
  inference(superposition,[],[f14494,f14161])).
fof(f22077,plain,(
  ( ! [X4,X3] : (sP5('T_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X3),s('type.rat.rat',X4))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X3),s('type.rat.rat',sK12))),s('type.rat.rat',X4)))))) ) | ($spl81 | $spl118)),
  inference(superposition,[],[f14494,f1410])).
fof(f22073,plain,(
  ( ! [X0] : (sP5('T_0','const.rat.rat_les_2'(s('type.rat.rat',X0),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',X0)))))) ) | ($spl81 | $spl118)),
  inference(superposition,[],[f14494,f372])).
fof(f22035,plain,(
  ( ! [X0] : (sP4('T_0','const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X0),s('type.rat.rat',sK12)))),'const.rat.rat_les_2'(s('type.rat.rat',X0),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) ) | ($spl81 | $spl118)),
  inference(unit_resulting_resolution,[],[f14494,f430])).
fof(f21990,plain,(
  ( ! [X11] : (~sP5('F_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X11)))),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',X11))),s('type.rat.rat',sK12)))) ) | ($spl81 | $spl118)),
  inference(superposition,[],[f14493,f1340])).
fof(f21989,plain,(
  ~sP5('F_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',sK12)))),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat',sK12))) | ($spl81 | $spl118)),
  inference(superposition,[],[f14493,f19507])).
fof(f21988,plain,(
  ( ! [X10,X9] : (~sP5('F_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X9),s('type.rat.rat',X10)))),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X9),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X10),s('type.rat.rat',sK12))))),s('type.rat.rat',sK12)))) ) | ($spl81 | $spl118)),
  inference(superposition,[],[f14493,f420])).
fof(f21987,plain,(
  ( ! [X8,X7] : (~sP5('F_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X7),s('type.rat.rat',X8)))),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X8),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X7),s('type.rat.rat',sK12))))),s('type.rat.rat',sK12)))) ) | ($spl81 | $spl118)),
  inference(superposition,[],[f14493,f1375])).
fof(f21986,plain,(
  ( ! [X6,X5] : (~sP5('F_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X5),s('type.rat.rat',X6)))),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X5),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',X6))))),s('type.rat.rat',sK12)))) ) | ($spl81 | $spl118)),
  inference(superposition,[],[f14493,f14161])).
fof(f21985,plain,(
  ( ! [X4,X3] : (~sP5('F_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X3),s('type.rat.rat',X4)))),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X3),s('type.rat.rat',sK12))),s('type.rat.rat',X4))),s('type.rat.rat',sK12)))) ) | ($spl81 | $spl118)),
  inference(superposition,[],[f14493,f1410])).
fof(f21981,plain,(
  ( ! [X0] : (~sP5('F_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat',X0)),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',X0))),s('type.rat.rat',sK12)))) ) | ($spl81 | $spl118)),
  inference(superposition,[],[f14493,f372])).
fof(f21930,plain,(
  ( ! [X114,X112,X115,X113] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X114),s('type.rat.rat',X115))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X113),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X112),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',X115))))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X113),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X112),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',X114))))))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X113),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',X112))))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) ) | $spl81),
  inference(forward_demodulation,[],[f21929,f15694])).
fof(f21929,plain,(
  ( ! [X114,X112,X115,X113] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X114),s('type.rat.rat',X115))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X113),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X112),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',X115))))))))),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X113),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X112),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',X114))))))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X113),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',X112))))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) ) | $spl81),
  inference(forward_demodulation,[],[f21928,f3718])).
fof(f21928,plain,(
  ( ! [X114,X112,X115,X113] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X114),s('type.rat.rat',X115))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X113),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',X112))))),s('type.rat.rat',X115))))),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X113),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X112),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',X114))))))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X113),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',X112))))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) ) | $spl81),
  inference(forward_demodulation,[],[f21927,f4016])).
fof(f21927,plain,(
  ( ! [X114,X112,X115,X113] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X114),s('type.rat.rat',X115))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X115),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X113),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',X112))))))),s('type.rat.rat',sK12))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X113),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X112),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',X114))))))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X113),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',X112))))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) ) | $spl81),
  inference(forward_demodulation,[],[f21926,f15694])).
fof(f21926,plain,(
  ( ! [X114,X112,X115,X113] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X114),s('type.rat.rat',X115))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X115),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X113),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',X112))))))),s('type.rat.rat',sK12))))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X113),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X112),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',X114))))))))),s('type.rat.rat',sK12))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X113),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',X112))))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) ) | $spl81),
  inference(forward_demodulation,[],[f21925,f3718])).
fof(f21925,plain,(
  ( ! [X114,X112,X115,X113] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X114),s('type.rat.rat',X115))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X115),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X113),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',X112))))))),s('type.rat.rat',sK12))))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X113),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',X112))))),s('type.rat.rat',X114))))),s('type.rat.rat',sK12))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X113),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',X112))))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) ) | $spl81),
  inference(forward_demodulation,[],[f21924,f4016])).
fof(f21924,plain,(
  ( ! [X114,X112,X115,X113] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X114),s('type.rat.rat',X115))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X115),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X113),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',X112))))))),s('type.rat.rat',sK12))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X114),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X113),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',X112))))))),s('type.rat.rat',sK12))))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X113),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',X112))))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) ) | $spl81),
  inference(forward_demodulation,[],[f21856,f3785])).
fof(f21856,plain,(
  ( ! [X114,X112,X115,X113] : (~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X113),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',X112))))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X114),s('type.rat.rat',X115))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X115),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',X112))))),s('type.rat.rat',sK12))),s('type.rat.rat',X113))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X114),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',X112))))),s('type.rat.rat',sK12))),s('type.rat.rat',X113)))))))) ) | $spl81),
  inference(superposition,[],[f1488,f14391])).
fof(f21751,plain,(
  ( ! [X11] : (~sP5('F_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X11))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',X11)))))) ) | ($spl81 | $spl118)),
  inference(superposition,[],[f14492,f1340])).
fof(f21750,plain,(
  ~sP5('F_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | ($spl81 | $spl118)),
  inference(superposition,[],[f14492,f19507])).
fof(f21749,plain,(
  ( ! [X10,X9] : (~sP5('F_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X9),s('type.rat.rat',X10))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X9),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X10),s('type.rat.rat',sK12)))))))) ) | ($spl81 | $spl118)),
  inference(superposition,[],[f14492,f420])).
fof(f21748,plain,(
  ( ! [X8,X7] : (~sP5('F_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X7),s('type.rat.rat',X8))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X8),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X7),s('type.rat.rat',sK12)))))))) ) | ($spl81 | $spl118)),
  inference(superposition,[],[f14492,f1375])).
fof(f21747,plain,(
  ( ! [X6,X5] : (~sP5('F_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X5),s('type.rat.rat',X6))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X5),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',X6)))))))) ) | ($spl81 | $spl118)),
  inference(superposition,[],[f14492,f14161])).
fof(f21746,plain,(
  ( ! [X4,X3] : (~sP5('F_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X3),s('type.rat.rat',X4))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X3),s('type.rat.rat',sK12))),s('type.rat.rat',X4)))))) ) | ($spl81 | $spl118)),
  inference(superposition,[],[f14492,f1410])).
fof(f21742,plain,(
  ( ! [X0] : (~sP5('F_0','const.rat.rat_les_2'(s('type.rat.rat',X0),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',X0)))))) ) | ($spl81 | $spl118)),
  inference(superposition,[],[f14492,f372])).
fof(f21753,plain,(
  ~sP2('const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),'F_0') | ($spl81 | $spl118)),
  inference(forward_demodulation,[],[f21752,f14470])).
fof(f21752,plain,(
  ~sP2('const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),'F_0') | ($spl81 | $spl118)),
  inference(forward_demodulation,[],[f21705,f372])).
fof(f21705,plain,(
  ~sP2('const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat',sK12)))),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),'F_0') | ($spl81 | $spl118)),
  inference(unit_resulting_resolution,[],[f496,f528,f505,f14492,f434])).
fof(f21695,plain,(
  ( ! [X167,X165,X163,X166,X164] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X166),s('type.rat.rat',X167))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X165),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X163),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X164),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',X167))))))))),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X165),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X163),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X164),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',X166))))))))),s('type.rat.rat',sK12))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X165),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X164),s('type.rat.rat',X163))))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) ) | $spl81),
  inference(forward_demodulation,[],[f21694,f3718])).
fof(f21694,plain,(
  ( ! [X167,X165,X163,X166,X164] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X166),s('type.rat.rat',X167))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X165),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X163),s('type.rat.rat',X164))))),s('type.rat.rat',X167))))),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X165),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X163),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X164),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',X166))))))))),s('type.rat.rat',sK12))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X165),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X164),s('type.rat.rat',X163))))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) ) | $spl81),
  inference(forward_demodulation,[],[f21693,f4016])).
fof(f21693,plain,(
  ( ! [X167,X165,X163,X166,X164] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X166),s('type.rat.rat',X167))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X167),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X165),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X163),s('type.rat.rat',X164))))))),s('type.rat.rat',sK12))))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X165),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X163),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X164),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',X166))))))))),s('type.rat.rat',sK12))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X165),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X164),s('type.rat.rat',X163))))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) ) | $spl81),
  inference(forward_demodulation,[],[f21692,f3718])).
fof(f21692,plain,(
  ( ! [X167,X165,X163,X166,X164] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X166),s('type.rat.rat',X167))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X167),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X165),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X163),s('type.rat.rat',X164))))))),s('type.rat.rat',sK12))))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X165),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X163),s('type.rat.rat',X164))))),s('type.rat.rat',X166))))),s('type.rat.rat',sK12))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X165),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X164),s('type.rat.rat',X163))))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) ) | $spl81),
  inference(forward_demodulation,[],[f21691,f4016])).
fof(f21691,plain,(
  ( ! [X167,X165,X163,X166,X164] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X166),s('type.rat.rat',X167))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X167),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X165),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X163),s('type.rat.rat',X164))))))),s('type.rat.rat',sK12))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X166),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X165),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X163),s('type.rat.rat',X164))))))),s('type.rat.rat',sK12))))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X165),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X164),s('type.rat.rat',X163))))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) ) | $spl81),
  inference(forward_demodulation,[],[f21610,f3785])).
fof(f21610,plain,(
  ( ! [X167,X165,X163,X166,X164] : (~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X165),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X164),s('type.rat.rat',X163))))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X166),s('type.rat.rat',X167))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X167),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X163),s('type.rat.rat',X164))))),s('type.rat.rat',sK12))),s('type.rat.rat',X165))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X166),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X163),s('type.rat.rat',X164))))),s('type.rat.rat',sK12))),s('type.rat.rat',X165)))))))) ) | $spl81),
  inference(superposition,[],[f1488,f14268])).
fof(f21562,plain,(
  ( ! [X10,X11,X9] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X10),s('type.rat.rat',X9))))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X9),s('type.rat.rat',X10))))))),s('type.rat.rat',sK12)))) ) | $spl81),
  inference(superposition,[],[f1409,f14268])).
fof(f21685,plain,(
  ( ! [X6,X8,X7] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X6),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X8),s('type.rat.rat',X7))))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X6),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X7),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',X8))))))),s('type.rat.rat',sK12)))) ) | $spl81),
  inference(forward_demodulation,[],[f21684,f3518])).
fof(f21684,plain,(
  ( ! [X6,X8,X7] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X7),s('type.rat.rat',X6))),s('type.rat.rat',X8))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X6),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X7),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',X8))))))),s('type.rat.rat',sK12)))) ) | $spl81),
  inference(forward_demodulation,[],[f21561,f3718])).
fof(f21561,plain,(
  ( ! [X6,X8,X7] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X7),s('type.rat.rat',X6))),s('type.rat.rat',X8))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X6),s('type.rat.rat',X7))))),s('type.rat.rat',X8))),s('type.rat.rat',sK12)))) ) | $spl81),
  inference(superposition,[],[f1410,f14268])).
fof(f21545,plain,(
  ( ! [X33,X34,X32] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X34),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X32),s('type.rat.rat',X33))))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X32),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X33),s('type.rat.rat',X34))))))),s('type.rat.rat',sK12)))) ) | $spl81),
  inference(superposition,[],[f14268,f420])).
fof(f21544,plain,(
  ( ! [X30,X31,X29] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X31),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X29),s('type.rat.rat',X30))))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X30),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X29),s('type.rat.rat',X31))))))),s('type.rat.rat',sK12)))) ) | $spl81),
  inference(superposition,[],[f14268,f1375])).
fof(f21543,plain,(
  ( ! [X28,X26,X27] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X28),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X26),s('type.rat.rat',X27))))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X26),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X28),s('type.rat.rat',X27))))))),s('type.rat.rat',sK12)))) ) | $spl81),
  inference(superposition,[],[f14268,f14161])).
fof(f21428,plain,(
  ( ! [X11] : (sP5('T_0','const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',X11)))),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X11))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) ) | ($spl81 | $spl118)),
  inference(superposition,[],[f14491,f1340])).
fof(f21427,plain,(
  sP5('T_0','const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | ($spl81 | $spl118)),
  inference(superposition,[],[f14491,f19507])).
fof(f21426,plain,(
  ( ! [X10,X9] : (sP5('T_0','const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X9),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X10),s('type.rat.rat',sK12)))))),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X9),s('type.rat.rat',X10))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) ) | ($spl81 | $spl118)),
  inference(superposition,[],[f14491,f420])).
fof(f21425,plain,(
  ( ! [X8,X7] : (sP5('T_0','const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X8),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X7),s('type.rat.rat',sK12)))))),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X7),s('type.rat.rat',X8))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) ) | ($spl81 | $spl118)),
  inference(superposition,[],[f14491,f1375])).
fof(f21424,plain,(
  ( ! [X6,X5] : (sP5('T_0','const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X5),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',X6)))))),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X5),s('type.rat.rat',X6))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) ) | ($spl81 | $spl118)),
  inference(superposition,[],[f14491,f14161])).
fof(f21423,plain,(
  ( ! [X4,X3] : (sP5('T_0','const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X3),s('type.rat.rat',sK12))),s('type.rat.rat',X4)))),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X3),s('type.rat.rat',X4))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) ) | ($spl81 | $spl118)),
  inference(superposition,[],[f14491,f1410])).
fof(f21419,plain,(
  ( ! [X0] : (sP5('T_0','const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',X0)))),'const.rat.rat_les_2'(s('type.rat.rat',X0),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) ) | ($spl81 | $spl118)),
  inference(superposition,[],[f14491,f372])).
fof(f21416,plain,(
  ( ! [X0] : (sP4('T_0','const.rat.rat_les_2'(s('type.rat.rat',X0),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X0),s('type.rat.rat',sK12)))))) ) | ($spl81 | $spl118)),
  inference(unit_resulting_resolution,[],[f14491,f430])).
fof(f21381,plain,(
  ( ! [X11] : (sP5('T_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',X11))),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X11)))))) ) | ($spl81 | $spl118)),
  inference(superposition,[],[f14490,f1340])).
fof(f21380,plain,(
  sP5('T_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',sK12))))) | ($spl81 | $spl118)),
  inference(superposition,[],[f14490,f19507])).
fof(f21379,plain,(
  ( ! [X10,X9] : (sP5('T_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X9),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X10),s('type.rat.rat',sK12))))),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X9),s('type.rat.rat',X10)))))) ) | ($spl81 | $spl118)),
  inference(superposition,[],[f14490,f420])).
fof(f21378,plain,(
  ( ! [X8,X7] : (sP5('T_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X8),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X7),s('type.rat.rat',sK12))))),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X7),s('type.rat.rat',X8)))))) ) | ($spl81 | $spl118)),
  inference(superposition,[],[f14490,f1375])).
fof(f21377,plain,(
  ( ! [X6,X5] : (sP5('T_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X5),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',X6))))),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X5),s('type.rat.rat',X6)))))) ) | ($spl81 | $spl118)),
  inference(superposition,[],[f14490,f14161])).
fof(f21376,plain,(
  ( ! [X4,X3] : (sP5('T_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X3),s('type.rat.rat',sK12))),s('type.rat.rat',X4))),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X3),s('type.rat.rat',X4)))))) ) | ($spl81 | $spl118)),
  inference(superposition,[],[f14490,f1410])).
fof(f21372,plain,(
  ( ! [X0] : (sP5('T_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',X0))),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat',X0)))) ) | ($spl81 | $spl118)),
  inference(superposition,[],[f14490,f372])).
fof(f21369,plain,(
  ( ! [X0] : (sP4('T_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat',X0)),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X0),s('type.rat.rat',sK12))),s('type.rat.rat',sK12)))) ) | ($spl81 | $spl118)),
  inference(unit_resulting_resolution,[],[f14490,f430])).
fof(f21363,plain,(
  ( ! [X288,X285,X287,X283,X284,X286] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X287),s('type.rat.rat',X288))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X288),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X285),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X286),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X283),s('type.rat.rat',X284))))))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X287),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X285),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X286),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X283),s('type.rat.rat',X284))))))))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X286),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X283),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X285),s('type.rat.rat',X284))))))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) ) | $spl81),
  inference(forward_demodulation,[],[f21249,f3518])).
fof(f21249,plain,(
  ( ! [X288,X285,X287,X283,X284,X286] : (~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X286),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X283),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X285),s('type.rat.rat',X284))))))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X287),s('type.rat.rat',X288))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X288),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X283),s('type.rat.rat',X284))),s('type.rat.rat',X285))),s('type.rat.rat',X286))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X287),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X283),s('type.rat.rat',X284))),s('type.rat.rat',X285))),s('type.rat.rat',X286)))))))) ) | $spl81),
  inference(superposition,[],[f1488,f14161])).
fof(f21362,plain,(
  ( ! [X280,X282,X279,X281] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X280),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X281),s('type.rat.rat',X279))))) | s('type.rat.rat',X282) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X279),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X281),s('type.rat.rat',X280))))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X282),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X279),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X281),s('type.rat.rat',X280)))))))))) ) | $spl81),
  inference(forward_demodulation,[],[f21248,f3518])).
fof(f21248,plain,(
  ( ! [X280,X282,X279,X281] : (s('type.rat.rat',X282) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X279),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X281),s('type.rat.rat',X280))))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X282),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X279),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X281),s('type.rat.rat',X280))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X279),s('type.rat.rat',X280))),s('type.rat.rat',X281)))) ) | $spl81),
  inference(superposition,[],[f1468,f14161])).
fof(f21199,plain,(
  ( ! [X80,X81,X79] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X81),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X79),s('type.rat.rat',X80))))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X79),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',X80))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X81),s('type.rat.rat',sK12)))))) ) | $spl81),
  inference(superposition,[],[f1505,f14161])).
fof(f21198,plain,(
  ( ! [X78,X76,X77] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X76),s('type.rat.rat',X77))),s('type.rat.rat',X78))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X78),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X76),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',X77)))))))) ) | $spl81),
  inference(superposition,[],[f1505,f14161])).
fof(f21197,plain,(
  ( ! [X74,X75] : (~sP5('F_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X74),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',X75))))),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X74),s('type.rat.rat',X75)))))) ) | ($spl81 | $spl118)),
  inference(superposition,[],[f14489,f14161])).
fof(f21350,plain,(
  ( ! [X47,X45,X48,X46,X44] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X46),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X47),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X45),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X48),s('type.rat.rat',X44))))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X44),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X46),s('type.rat.rat',X45))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X47),s('type.rat.rat',X48)))))) ) | $spl81),
  inference(forward_demodulation,[],[f21188,f3518])).
fof(f21188,plain,(
  ( ! [X47,X45,X48,X46,X44] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X46),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X47),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X44),s('type.rat.rat',X45))),s('type.rat.rat',X48))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X44),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X46),s('type.rat.rat',X45))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X47),s('type.rat.rat',X48)))))) ) | $spl81),
  inference(superposition,[],[f12972,f14161])).
fof(f21349,plain,(
  ( ! [X39,X43,X41,X42,X40] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X42),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X39),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X43),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X41),s('type.rat.rat',X40))))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X42),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X40),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X43),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X39),s('type.rat.rat',X41)))))))))) ) | $spl81),
  inference(forward_demodulation,[],[f21348,f12972])).
fof(f21348,plain,(
  ( ! [X39,X43,X41,X42,X40] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X42),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X39),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X43),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X41),s('type.rat.rat',X40))))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X42),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X39),s('type.rat.rat',X40))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X43),s('type.rat.rat',X41)))))))) ) | $spl81),
  inference(forward_demodulation,[],[f21187,f12972])).
fof(f21187,plain,(
  ( ! [X39,X43,X41,X42,X40] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X42),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X39),s('type.rat.rat',X40))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X43),s('type.rat.rat',X41))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X43),s('type.rat.rat',X42))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X39),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X41),s('type.rat.rat',X40)))))))) ) | $spl81),
  inference(superposition,[],[f12972,f14161])).
fof(f21312,plain,(
  ( ! [X45,X43,X46,X44] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X43),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X45),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X44),s('type.rat.rat',X46))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X43),s('type.rat.rat',X44))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X46),s('type.rat.rat',X45)))))) ) | $spl81),
  inference(forward_demodulation,[],[f21117,f3718])).
fof(f21117,plain,(
  ( ! [X45,X43,X46,X44] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X43),s('type.rat.rat',X44))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X46),s('type.rat.rat',X45))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X44),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X43),s('type.rat.rat',X45))))),s('type.rat.rat',X46)))) ) | $spl81),
  inference(superposition,[],[f14161,f1375])).
fof(f21109,plain,(
  ( ! [X21,X19,X22,X20] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X19),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X22),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X20),s('type.rat.rat',X21))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X21),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X19),s('type.rat.rat',X20))))),s('type.rat.rat',X22)))) ) | $spl81),
  inference(superposition,[],[f14161,f1385])).
fof(f21108,plain,(
  ( ! [X17,X15,X18,X16] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X15),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X18),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X16),s('type.rat.rat',X17))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X16),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X17),s('type.rat.rat',X15))))),s('type.rat.rat',X18)))) ) | $spl81),
  inference(superposition,[],[f14161,f1385])).
fof(f21000,plain,(
  ( ! [X9] : (~sP5('F_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',X9))),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X9)))))) ) | ($spl81 | $spl118)),
  inference(superposition,[],[f14489,f1340])).
fof(f20999,plain,(
  ~sP5('F_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',sK12))))) | ($spl81 | $spl118)),
  inference(superposition,[],[f14489,f19507])).
fof(f20998,plain,(
  ( ! [X8,X7] : (~sP5('F_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X7),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X8),s('type.rat.rat',sK12))))),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X7),s('type.rat.rat',X8)))))) ) | ($spl81 | $spl118)),
  inference(superposition,[],[f14489,f420])).
fof(f20997,plain,(
  ( ! [X6,X5] : (~sP5('F_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X6),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X5),s('type.rat.rat',sK12))))),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X5),s('type.rat.rat',X6)))))) ) | ($spl81 | $spl118)),
  inference(superposition,[],[f14489,f1375])).
fof(f20996,plain,(
  ( ! [X4,X3] : (~sP5('F_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X3),s('type.rat.rat',sK12))),s('type.rat.rat',X4))),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X3),s('type.rat.rat',X4)))))) ) | ($spl81 | $spl118)),
  inference(superposition,[],[f14489,f1410])).
fof(f20926,plain,(
  ( ! [X16] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',sK12))),s('type.rat.rat',X16))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X16),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) ) | ($spl81 | $spl118)),
  inference(superposition,[],[f1505,f19507])).
fof(f20885,plain,(
  ( ! [X16] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X16),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',sK12))))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X16),s('type.rat.rat',sK12)))))) ) | ($spl81 | $spl118)),
  inference(superposition,[],[f1505,f19507])).
fof(f20196,plain,(
  ( ! [X165] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X165),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X165))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X165),s('type.rat.rat',sK12)))))) ) | ($spl81 | $spl118)),
  inference(superposition,[],[f14471,f18486])).
fof(f20175,plain,(
  ( ! [X125,X124] : (s('type.rat.rat',X125) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X124),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X125),s('type.rat.rat',X124))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X124),s('type.rat.rat',sK12)))))) ) | ($spl81 | $spl118)),
  inference(superposition,[],[f1468,f18486])).
fof(f20253,plain,(
  ( ! [X21,X19,X20] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X19),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X20),s('type.rat.rat',X21))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X19),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X21),s('type.rat.rat',X20))),s('type.rat.rat',sK12)))))) ) | ($spl81 | $spl118)),
  inference(forward_demodulation,[],[f20252,f3474])).
fof(f20252,plain,(
  ( ! [X21,X19,X20] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X19),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X20),s('type.rat.rat',X21))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X19),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X20),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X21),s('type.rat.rat',sK12)))))))) ) | ($spl81 | $spl118)),
  inference(forward_demodulation,[],[f20128,f1340])).
fof(f20128,plain,(
  ( ! [X21,X19,X20] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X19),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X20),s('type.rat.rat',X21))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X19),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X20),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',sK12))),s('type.rat.rat',X21)))))))) ) | ($spl81 | $spl118)),
  inference(superposition,[],[f12972,f18486])).
fof(f20234,plain,(
  ( ! [X12,X11] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X12),s('type.rat.rat',X11))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X12),s('type.rat.rat',sK12)))))) ) | ($spl81 | $spl118)),
  inference(forward_demodulation,[],[f20125,f373])).
fof(f20125,plain,(
  ( ! [X12,X11] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X12),s('type.rat.rat',X11))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X12),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',sK12)))))))) ) | ($spl81 | $spl118)),
  inference(superposition,[],[f1385,f18486])).
fof(f20232,plain,(
  ( ! [X8,X7] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X7),s('type.rat.rat',X8))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X7),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X8),s('type.rat.rat',sK12)))))) ) | ($spl81 | $spl118)),
  inference(forward_demodulation,[],[f20123,f1340])).
fof(f20123,plain,(
  ( ! [X8,X7] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X7),s('type.rat.rat',X8))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X7),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',sK12))),s('type.rat.rat',X8)))))) ) | ($spl81 | $spl118)),
  inference(superposition,[],[f1375,f18486])).
fof(f20231,plain,(
  ( ! [X6,X5] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X5),s('type.rat.rat',X6))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X6),s('type.rat.rat',X5)))))))) ) | ($spl81 | $spl118)),
  inference(forward_demodulation,[],[f20122,f3518])).
fof(f20122,plain,(
  ( ! [X6,X5] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X5),s('type.rat.rat',X6))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X5),s('type.rat.rat',sK12))),s('type.rat.rat',X6)))))) ) | ($spl81 | $spl118)),
  inference(superposition,[],[f420,f18486])).
fof(f20111,plain,(
  ( ! [X4,X3] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X3),s('type.rat.rat',X4))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X3),s('type.rat.rat',sK12))),s('type.rat.rat',X4)))))) ) | ($spl81 | $spl118)),
  inference(superposition,[],[f18486,f1410])).
fof(f19516,plain,(
  ( ! [X21,X19,X20] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X21),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X20),s('type.rat.rat',X19))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X19),s('type.rat.rat',X20))),s('type.rat.rat',X21)))) ) | ($spl81 | $spl118)),
  inference(forward_demodulation,[],[f19404,f14470])).
fof(f19404,plain,(
  ( ! [X21,X19,X20] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X21),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X20),s('type.rat.rat',X19))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X19),s('type.rat.rat',X20))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X21),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))))) ) | ($spl81 | $spl118)),
  inference(superposition,[],[f1385,f14485])).
fof(f19507,plain,(
  s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',sK12))),s('type.rat.rat',sK12))) | ($spl81 | $spl118)),
  inference(forward_demodulation,[],[f19393,f14470])).
fof(f19393,plain,(
  s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',sK12))),s('type.rat.rat',sK12))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | ($spl81 | $spl118)),
  inference(superposition,[],[f14485,f14957])).
fof(f19505,plain,(
  ( ! [X33,X31,X34,X32] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X33),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X32),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X31),s('type.rat.rat',X34))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X33),s('type.rat.rat',X34))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X31),s('type.rat.rat',X32)))))) ) | ($spl81 | $spl118)),
  inference(forward_demodulation,[],[f19391,f16055])).
fof(f19391,plain,(
  ( ! [X33,X31,X34,X32] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X33),s('type.rat.rat',X34))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X31),s('type.rat.rat',X32))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X32),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X33),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X31),s('type.rat.rat',X34)))))))))) ) | ($spl81 | $spl118)),
  inference(superposition,[],[f14485,f12972])).
fof(f19390,plain,(
  ( ! [X30,X28,X29] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X30),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X28),s('type.rat.rat',X29))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X28),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X29),s('type.rat.rat',X30)))))))) ) | ($spl81 | $spl118)),
  inference(superposition,[],[f14485,f420])).
fof(f19389,plain,(
  ( ! [X26,X27,X25] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X27),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X25),s('type.rat.rat',X26))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X26),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X25),s('type.rat.rat',X27)))))))) ) | ($spl81 | $spl118)),
  inference(superposition,[],[f14485,f1375])).
fof(f19310,plain,(
  ~sP5('F_0','const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | ($spl81 | $spl118)),
  inference(unit_resulting_resolution,[],[f14496,f428])).
fof(f18612,plain,(
  ( ! [X163] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X163),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X163))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X163),s('type.rat.rat',sK12)))))) ) | ($spl81 | $spl118)),
  inference(superposition,[],[f14471,f15159])).
fof(f18592,plain,(
  ( ! [X123,X124] : (s('type.rat.rat',X124) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X123),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X124),s('type.rat.rat',X123))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X123),s('type.rat.rat',sK12)))))) ) | $spl81),
  inference(superposition,[],[f1468,f15159])).
fof(f18546,plain,(
  ( ! [X21,X19,X20] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X19),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X20),s('type.rat.rat',X21))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X19),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X20),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',X21)))))))) ) | $spl81),
  inference(superposition,[],[f12972,f15159])).
fof(f18543,plain,(
  ( ! [X12,X11] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X12),s('type.rat.rat',X11))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X11),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X12),s('type.rat.rat',sK12)))))) ) | $spl81),
  inference(superposition,[],[f1385,f15159])).
fof(f18541,plain,(
  ( ! [X8,X7] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X7),s('type.rat.rat',X8))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X7),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',X8)))))) ) | $spl81),
  inference(superposition,[],[f1375,f15159])).
fof(f18632,plain,(
  ( ! [X6,X5] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X5),s('type.rat.rat',X6))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X6),s('type.rat.rat',X5))),s('type.rat.rat',sK12)))))) ) | $spl81),
  inference(forward_demodulation,[],[f18540,f3785])).
fof(f18540,plain,(
  ( ! [X6,X5] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X5),s('type.rat.rat',X6))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X5),s('type.rat.rat',sK12))),s('type.rat.rat',X6)))))) ) | $spl81),
  inference(superposition,[],[f420,f15159])).
fof(f18486,plain,(
  ( ! [X3] : (s('type.rat.rat',X3) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X3),s('type.rat.rat',sK12)))))) ) | ($spl81 | $spl118)),
  inference(forward_demodulation,[],[f18393,f14470])).
fof(f18393,plain,(
  ( ! [X3] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X3),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X3),s('type.rat.rat',sK12)))))) ) | ($spl81 | $spl118)),
  inference(superposition,[],[f1385,f14957])).
fof(f16436,plain,(
  ( ! [X14,X12,X13,X11] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X13),s('type.rat.rat',X14))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X12),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X14),s('type.rat.rat',sK12))))))),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X12),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X13),s('type.rat.rat',sK12))))))),s('type.rat.rat',sK12))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat',X12))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) ) | $spl81),
  inference(forward_demodulation,[],[f16435,f3518])).
fof(f16435,plain,(
  ( ! [X14,X12,X13,X11] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X13),s('type.rat.rat',X14))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',X12))),s('type.rat.rat',X14))))),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X12),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X13),s('type.rat.rat',sK12))))))),s('type.rat.rat',sK12))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat',X12))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) ) | $spl81),
  inference(forward_demodulation,[],[f16434,f4016])).
fof(f16434,plain,(
  ( ! [X14,X12,X13,X11] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X13),s('type.rat.rat',X14))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X14),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',X12))))),s('type.rat.rat',sK12))))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X12),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X13),s('type.rat.rat',sK12))))))),s('type.rat.rat',sK12))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat',X12))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) ) | $spl81),
  inference(forward_demodulation,[],[f16433,f3518])).
fof(f16433,plain,(
  ( ! [X14,X12,X13,X11] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X13),s('type.rat.rat',X14))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X14),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',X12))))),s('type.rat.rat',sK12))))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',X12))),s('type.rat.rat',X13))))),s('type.rat.rat',sK12))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat',X12))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) ) | $spl81),
  inference(forward_demodulation,[],[f16432,f4016])).
fof(f16432,plain,(
  ( ! [X14,X12,X13,X11] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X13),s('type.rat.rat',X14))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X14),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',X12))))),s('type.rat.rat',sK12))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X13),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',X12))))),s('type.rat.rat',sK12))))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat',X12))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) ) | $spl81),
  inference(forward_demodulation,[],[f16294,f3785])).
fof(f16294,plain,(
  ( ! [X14,X12,X13,X11] : (~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat',X12))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X13),s('type.rat.rat',X14))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X14),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',X12))),s('type.rat.rat',sK12))),s('type.rat.rat',X11))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X13),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',X12))),s('type.rat.rat',sK12))),s('type.rat.rat',X11)))))))) ) | $spl81),
  inference(superposition,[],[f1488,f13248])).
fof(f16424,plain,(
  ( ! [X70,X74,X72,X71,X69,X75,X73] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X74),s('type.rat.rat',X75))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X75),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X71),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X72),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X70),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X73),s('type.rat.rat',X69))))))))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X74),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X71),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X72),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X70),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X73),s('type.rat.rat',X69))))))))))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X73),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X70),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X71),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X69),s('type.rat.rat',X72))))))))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) )),
  inference(forward_demodulation,[],[f16423,f3518])).
fof(f16423,plain,(
  ( ! [X70,X74,X72,X71,X69,X75,X73] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X74),s('type.rat.rat',X75))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X75),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X71),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X72),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X69),s('type.rat.rat',X70))),s('type.rat.rat',X73))))))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X74),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X71),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X72),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X69),s('type.rat.rat',X70))),s('type.rat.rat',X73))))))))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X73),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X70),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X71),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X69),s('type.rat.rat',X72))))))))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) )),
  inference(forward_demodulation,[],[f16289,f3718])).
fof(f16289,plain,(
  ( ! [X70,X74,X72,X71,X69,X75,X73] : (~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X73),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X70),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X71),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X69),s('type.rat.rat',X72))))))))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X74),s('type.rat.rat',X75))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X75),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X69),s('type.rat.rat',X70))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X71),s('type.rat.rat',X72))))),s('type.rat.rat',X73))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X74),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X69),s('type.rat.rat',X70))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X71),s('type.rat.rat',X72))))),s('type.rat.rat',X73)))))))) )),
  inference(superposition,[],[f1488,f12972])).
fof(f16421,plain,(
  ( ! [X61,X59,X57,X62,X60,X58] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X61),s('type.rat.rat',X62))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X62),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X59),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X60),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X57),s('type.rat.rat',X58))))))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X61),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X59),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X60),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X57),s('type.rat.rat',X58))))))))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X60),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X58),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X57),s('type.rat.rat',X59))))))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) )),
  inference(forward_demodulation,[],[f16287,f3518])).
fof(f16287,plain,(
  ( ! [X61,X59,X57,X62,X60,X58] : (~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X60),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X58),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X57),s('type.rat.rat',X59))))))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X61),s('type.rat.rat',X62))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X62),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X57),s('type.rat.rat',X58))),s('type.rat.rat',X59))),s('type.rat.rat',X60))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X61),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X57),s('type.rat.rat',X58))),s('type.rat.rat',X59))),s('type.rat.rat',X60)))))))) )),
  inference(superposition,[],[f1488,f1375])).
fof(f16420,plain,(
  ( ! [X54,X52,X56,X55,X53,X51] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X55),s('type.rat.rat',X56))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X51),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X53),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X56),s('type.rat.rat',X54))))))),s('type.rat.rat',X52))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X51),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X53),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X55),s('type.rat.rat',X54))))))),s('type.rat.rat',X52))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X51),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X53),s('type.rat.rat',X54))))),s('type.rat.rat',X52))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) )),
  inference(forward_demodulation,[],[f16419,f3518])).
fof(f16419,plain,(
  ( ! [X54,X52,X56,X55,X53,X51] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X55),s('type.rat.rat',X56))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X51),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X54),s('type.rat.rat',X53))),s('type.rat.rat',X56))))),s('type.rat.rat',X52))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X51),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X53),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X55),s('type.rat.rat',X54))))))),s('type.rat.rat',X52))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X51),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X53),s('type.rat.rat',X54))))),s('type.rat.rat',X52))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) )),
  inference(forward_demodulation,[],[f16418,f4016])).
fof(f16418,plain,(
  ( ! [X54,X52,X56,X55,X53,X51] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X55),s('type.rat.rat',X56))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X56),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X51),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X54),s('type.rat.rat',X53))))),s('type.rat.rat',X52))))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X51),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X53),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X55),s('type.rat.rat',X54))))))),s('type.rat.rat',X52))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X51),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X53),s('type.rat.rat',X54))))),s('type.rat.rat',X52))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) )),
  inference(forward_demodulation,[],[f16417,f3518])).
fof(f16417,plain,(
  ( ! [X54,X52,X56,X55,X53,X51] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X55),s('type.rat.rat',X56))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X56),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X51),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X54),s('type.rat.rat',X53))))),s('type.rat.rat',X52))))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X51),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X54),s('type.rat.rat',X53))),s('type.rat.rat',X55))))),s('type.rat.rat',X52))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X51),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X53),s('type.rat.rat',X54))))),s('type.rat.rat',X52))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) )),
  inference(forward_demodulation,[],[f16416,f4016])).
fof(f16416,plain,(
  ( ! [X54,X52,X56,X55,X53,X51] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X55),s('type.rat.rat',X56))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X56),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X51),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X54),s('type.rat.rat',X53))))),s('type.rat.rat',X52))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X55),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X51),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X54),s('type.rat.rat',X53))))),s('type.rat.rat',X52))))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X51),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X53),s('type.rat.rat',X54))))),s('type.rat.rat',X52))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) )),
  inference(forward_demodulation,[],[f16415,f4016])).
fof(f16415,plain,(
  ( ! [X54,X52,X56,X55,X53,X51] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X55),s('type.rat.rat',X56))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X56),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X53),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X51),s('type.rat.rat',X54))),s('type.rat.rat',X52))))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X55),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X53),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X51),s('type.rat.rat',X54))),s('type.rat.rat',X52))))))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X51),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X53),s('type.rat.rat',X54))))),s('type.rat.rat',X52))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) )),
  inference(forward_demodulation,[],[f16414,f3474])).
fof(f16414,plain,(
  ( ! [X54,X52,X56,X55,X53,X51] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X55),s('type.rat.rat',X56))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X56),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X53),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X54),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X51),s('type.rat.rat',X52))))))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X55),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X53),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X54),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X51),s('type.rat.rat',X52))))))))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X51),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X53),s('type.rat.rat',X54))))),s('type.rat.rat',X52))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) )),
  inference(forward_demodulation,[],[f16413,f3518])).
fof(f16413,plain,(
  ( ! [X54,X52,X56,X55,X53,X51] : (~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X51),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X53),s('type.rat.rat',X54))))),s('type.rat.rat',X52))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X55),s('type.rat.rat',X56))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X56),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X51),s('type.rat.rat',X52))),s('type.rat.rat',X53))),s('type.rat.rat',X54))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X55),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X51),s('type.rat.rat',X52))),s('type.rat.rat',X53))),s('type.rat.rat',X54)))))))) )),
  inference(forward_demodulation,[],[f16286,f4016])).
fof(f16286,plain,(
  ( ! [X54,X52,X56,X55,X53,X51] : (~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X54),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X51),s('type.rat.rat',X53))),s('type.rat.rat',X52))))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X55),s('type.rat.rat',X56))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X56),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X51),s('type.rat.rat',X52))),s('type.rat.rat',X53))),s('type.rat.rat',X54))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X55),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X51),s('type.rat.rat',X52))),s('type.rat.rat',X53))),s('type.rat.rat',X54)))))))) )),
  inference(superposition,[],[f1488,f1410])).
fof(f16395,plain,(
  ( ! [X28,X26,X24,X29,X27,X25] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X28),s('type.rat.rat',X29))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X24),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X25),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X27),s('type.rat.rat',X29))))))),s('type.rat.rat',X26))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X24),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X25),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X27),s('type.rat.rat',X28))))))),s('type.rat.rat',X26))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X24),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X25),s('type.rat.rat',X27))))),s('type.rat.rat',X26))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) )),
  inference(forward_demodulation,[],[f16394,f12972])).
fof(f16394,plain,(
  ( ! [X28,X26,X24,X29,X27,X25] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X28),s('type.rat.rat',X29))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X27),s('type.rat.rat',X24))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X25),s('type.rat.rat',X29))))),s('type.rat.rat',X26))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X24),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X25),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X27),s('type.rat.rat',X28))))))),s('type.rat.rat',X26))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X24),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X25),s('type.rat.rat',X27))))),s('type.rat.rat',X26))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) )),
  inference(forward_demodulation,[],[f16393,f4016])).
fof(f16393,plain,(
  ( ! [X28,X26,X24,X29,X27,X25] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X28),s('type.rat.rat',X29))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X29),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X27),s('type.rat.rat',X24))),s('type.rat.rat',X25))),s('type.rat.rat',X26))))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X24),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X25),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X27),s('type.rat.rat',X28))))))),s('type.rat.rat',X26))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X24),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X25),s('type.rat.rat',X27))))),s('type.rat.rat',X26))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) )),
  inference(forward_demodulation,[],[f16392,f12972])).
fof(f16392,plain,(
  ( ! [X28,X26,X24,X29,X27,X25] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X28),s('type.rat.rat',X29))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X29),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X27),s('type.rat.rat',X24))),s('type.rat.rat',X25))),s('type.rat.rat',X26))))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X27),s('type.rat.rat',X24))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X25),s('type.rat.rat',X28))))),s('type.rat.rat',X26))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X24),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X25),s('type.rat.rat',X27))))),s('type.rat.rat',X26))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) )),
  inference(forward_demodulation,[],[f16391,f4016])).
fof(f16391,plain,(
  ( ! [X28,X26,X24,X29,X27,X25] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X28),s('type.rat.rat',X29))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X29),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X27),s('type.rat.rat',X24))),s('type.rat.rat',X25))),s('type.rat.rat',X26))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X28),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X27),s('type.rat.rat',X24))),s('type.rat.rat',X25))),s('type.rat.rat',X26))))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X24),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X25),s('type.rat.rat',X27))))),s('type.rat.rat',X26))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) )),
  inference(forward_demodulation,[],[f16390,f3785])).
fof(f16390,plain,(
  ( ! [X28,X26,X24,X29,X27,X25] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X28),s('type.rat.rat',X29))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X29),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X25),s('type.rat.rat',X26))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X27),s('type.rat.rat',X24))))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X28),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X25),s('type.rat.rat',X26))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X27),s('type.rat.rat',X24))))))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X24),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X25),s('type.rat.rat',X27))))),s('type.rat.rat',X26))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) )),
  inference(forward_demodulation,[],[f16389,f3518])).
fof(f16389,plain,(
  ( ! [X28,X26,X24,X29,X27,X25] : (~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X24),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X25),s('type.rat.rat',X27))))),s('type.rat.rat',X26))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X28),s('type.rat.rat',X29))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X29),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X24),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X25),s('type.rat.rat',X26))))),s('type.rat.rat',X27))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X28),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X24),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X25),s('type.rat.rat',X26))))),s('type.rat.rat',X27)))))))) )),
  inference(forward_demodulation,[],[f16281,f4016])).
fof(f16281,plain,(
  ( ! [X28,X26,X24,X29,X27,X25] : (~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X27),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X24),s('type.rat.rat',X25))),s('type.rat.rat',X26))))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X28),s('type.rat.rat',X29))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X29),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X24),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X25),s('type.rat.rat',X26))))),s('type.rat.rat',X27))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X28),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X24),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X25),s('type.rat.rat',X26))))),s('type.rat.rat',X27)))))))) )),
  inference(superposition,[],[f1488,f1409])).
fof(f16388,plain,(
  ( ! [X23,X21,X19,X22,X20] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X22),s('type.rat.rat',X23))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X21),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X19),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X23),s('type.rat.rat',X20))))))),s('type.rat.rat',X19))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X21),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X19),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X22),s('type.rat.rat',X20))))))),s('type.rat.rat',X19))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X21),s('type.rat.rat',X20))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.rat.rat',X19) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(forward_demodulation,[],[f16387,f3518])).
fof(f16387,plain,(
  ( ! [X23,X21,X19,X22,X20] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X22),s('type.rat.rat',X23))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X21),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X20),s('type.rat.rat',X19))),s('type.rat.rat',X23))))),s('type.rat.rat',X19))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X21),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X19),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X22),s('type.rat.rat',X20))))))),s('type.rat.rat',X19))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X21),s('type.rat.rat',X20))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.rat.rat',X19) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(forward_demodulation,[],[f16386,f4016])).
fof(f16386,plain,(
  ( ! [X23,X21,X19,X22,X20] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X22),s('type.rat.rat',X23))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X23),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X21),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X20),s('type.rat.rat',X19))))),s('type.rat.rat',X19))))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X21),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X19),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X22),s('type.rat.rat',X20))))))),s('type.rat.rat',X19))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X21),s('type.rat.rat',X20))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.rat.rat',X19) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(forward_demodulation,[],[f16385,f4016])).
fof(f16385,plain,(
  ( ! [X23,X21,X19,X22,X20] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X22),s('type.rat.rat',X23))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X23),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X19),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X21),s('type.rat.rat',X20))),s('type.rat.rat',X19))))))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X21),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X19),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X22),s('type.rat.rat',X20))))))),s('type.rat.rat',X19))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X21),s('type.rat.rat',X20))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.rat.rat',X19) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(forward_demodulation,[],[f16384,f3785])).
fof(f16384,plain,(
  ( ! [X23,X21,X19,X22,X20] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X22),s('type.rat.rat',X23))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X23),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X19),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X20),s('type.rat.rat',X19))),s('type.rat.rat',X21))))))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X21),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X19),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X22),s('type.rat.rat',X20))))))),s('type.rat.rat',X19))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X21),s('type.rat.rat',X20))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.rat.rat',X19) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(forward_demodulation,[],[f16383,f15386])).
fof(f16383,plain,(
  ( ! [X23,X21,X19,X22,X20] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X22),s('type.rat.rat',X23))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X23),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X20),s('type.rat.rat',X19))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X21),s('type.rat.rat',X19))))))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X21),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X19),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X22),s('type.rat.rat',X20))))))),s('type.rat.rat',X19))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X21),s('type.rat.rat',X20))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.rat.rat',X19) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(forward_demodulation,[],[f16382,f3518])).
fof(f16382,plain,(
  ( ! [X23,X21,X19,X22,X20] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X22),s('type.rat.rat',X23))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X23),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X20),s('type.rat.rat',X19))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X21),s('type.rat.rat',X19))))))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X21),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X20),s('type.rat.rat',X19))),s('type.rat.rat',X22))))),s('type.rat.rat',X19))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X21),s('type.rat.rat',X20))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.rat.rat',X19) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(forward_demodulation,[],[f16381,f4016])).
fof(f16381,plain,(
  ( ! [X23,X21,X19,X22,X20] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X22),s('type.rat.rat',X23))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X23),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X20),s('type.rat.rat',X19))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X21),s('type.rat.rat',X19))))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X22),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X21),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X20),s('type.rat.rat',X19))))),s('type.rat.rat',X19))))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X21),s('type.rat.rat',X20))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.rat.rat',X19) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(forward_demodulation,[],[f16380,f4016])).
fof(f16380,plain,(
  ( ! [X23,X21,X19,X22,X20] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X22),s('type.rat.rat',X23))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X23),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X20),s('type.rat.rat',X19))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X21),s('type.rat.rat',X19))))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X22),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X19),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X21),s('type.rat.rat',X20))),s('type.rat.rat',X19))))))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X21),s('type.rat.rat',X20))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.rat.rat',X19) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(forward_demodulation,[],[f16379,f3785])).
fof(f16379,plain,(
  ( ! [X23,X21,X19,X22,X20] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X22),s('type.rat.rat',X23))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X23),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X20),s('type.rat.rat',X19))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X21),s('type.rat.rat',X19))))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X22),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X19),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X20),s('type.rat.rat',X19))),s('type.rat.rat',X21))))))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X21),s('type.rat.rat',X20))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.rat.rat',X19) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(forward_demodulation,[],[f16378,f15386])).
fof(f16378,plain,(
  ( ! [X23,X21,X19,X22,X20] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X22),s('type.rat.rat',X23))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X23),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X20),s('type.rat.rat',X19))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X21),s('type.rat.rat',X19))))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X22),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X20),s('type.rat.rat',X19))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X21),s('type.rat.rat',X19))))))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X21),s('type.rat.rat',X20))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.rat.rat',X19) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(forward_demodulation,[],[f16280,f3518])).
fof(f16280,plain,(
  ( ! [X23,X21,X19,X22,X20] : (~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X21),s('type.rat.rat',X20))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X22),s('type.rat.rat',X23))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X23),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X19),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X20),s('type.rat.rat',X19))))),s('type.rat.rat',X21))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X22),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X19),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X20),s('type.rat.rat',X19))))),s('type.rat.rat',X21))))))) | s('type.rat.rat',X19) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f1488,f1468])).
fof(f16377,plain,(
  ( ! [X14,X17,X15,X18,X16] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X17),s('type.rat.rat',X18))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X14),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X15),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X16),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',X18))))))))),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X14),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X15),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X16),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',X17))))))))),s('type.rat.rat',sK12))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X16),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X14),s('type.rat.rat',X15))))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) ) | $spl81),
  inference(forward_demodulation,[],[f16376,f12972])).
fof(f16376,plain,(
  ( ! [X14,X17,X15,X18,X16] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X17),s('type.rat.rat',X18))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X14),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',X15))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X16),s('type.rat.rat',X18))))))),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X14),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X15),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X16),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',X17))))))))),s('type.rat.rat',sK12))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X16),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X14),s('type.rat.rat',X15))))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) ) | $spl81),
  inference(forward_demodulation,[],[f16375,f12972])).
fof(f16375,plain,(
  ( ! [X14,X17,X15,X18,X16] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X17),s('type.rat.rat',X18))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X16),s('type.rat.rat',X14))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',X15))),s('type.rat.rat',X18))))),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X14),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X15),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X16),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',X17))))))))),s('type.rat.rat',sK12))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X16),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X14),s('type.rat.rat',X15))))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) ) | $spl81),
  inference(forward_demodulation,[],[f16374,f4016])).
fof(f16374,plain,(
  ( ! [X14,X17,X15,X18,X16] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X17),s('type.rat.rat',X18))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X18),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X16),s('type.rat.rat',X14))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',X15))))),s('type.rat.rat',sK12))))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X14),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X15),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X16),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',X17))))))))),s('type.rat.rat',sK12))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X16),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X14),s('type.rat.rat',X15))))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) ) | $spl81),
  inference(forward_demodulation,[],[f16373,f12972])).
fof(f16373,plain,(
  ( ! [X14,X17,X15,X18,X16] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X17),s('type.rat.rat',X18))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X18),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X16),s('type.rat.rat',X14))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',X15))))),s('type.rat.rat',sK12))))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X14),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',X15))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X16),s('type.rat.rat',X17))))))),s('type.rat.rat',sK12))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X16),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X14),s('type.rat.rat',X15))))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) ) | $spl81),
  inference(forward_demodulation,[],[f16372,f12972])).
fof(f16372,plain,(
  ( ! [X14,X17,X15,X18,X16] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X17),s('type.rat.rat',X18))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X18),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X16),s('type.rat.rat',X14))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',X15))))),s('type.rat.rat',sK12))))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X16),s('type.rat.rat',X14))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',X15))),s('type.rat.rat',X17))))),s('type.rat.rat',sK12))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X16),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X14),s('type.rat.rat',X15))))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) ) | $spl81),
  inference(forward_demodulation,[],[f16371,f4016])).
fof(f16371,plain,(
  ( ! [X14,X17,X15,X18,X16] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X17),s('type.rat.rat',X18))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X18),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X16),s('type.rat.rat',X14))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',X15))))),s('type.rat.rat',sK12))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X17),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X16),s('type.rat.rat',X14))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',X15))))),s('type.rat.rat',sK12))))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X16),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X14),s('type.rat.rat',X15))))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) ) | $spl81),
  inference(forward_demodulation,[],[f16370,f3785])).
fof(f16370,plain,(
  ( ! [X14,X17,X15,X18,X16] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X17),s('type.rat.rat',X18))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X18),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',X15))),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X16),s('type.rat.rat',X14))))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X17),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',X15))),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X16),s('type.rat.rat',X14))))))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X16),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X14),s('type.rat.rat',X15))))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) ) | $spl81),
  inference(forward_demodulation,[],[f16279,f3518])).
fof(f16279,plain,(
  ( ! [X14,X17,X15,X18,X16] : (~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X16),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X14),s('type.rat.rat',X15))))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X17),s('type.rat.rat',X18))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X18),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X14),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',X15))),s('type.rat.rat',sK12))))),s('type.rat.rat',X16))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X17),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X14),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',X15))),s('type.rat.rat',sK12))))),s('type.rat.rat',X16)))))))) ) | $spl81),
  inference(superposition,[],[f1488,f13248])).
fof(f16360,plain,(
  ( ! [X70,X74,X72,X71,X69,X75,X73] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X74),s('type.rat.rat',X75))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X75),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X73),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X70),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X71),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X69),s('type.rat.rat',X72))))))))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X74),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X73),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X70),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X71),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X69),s('type.rat.rat',X72))))))))))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X71),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X72),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X70),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X69),s('type.rat.rat',X73))))))))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) )),
  inference(forward_demodulation,[],[f16359,f12972])).
fof(f16359,plain,(
  ( ! [X70,X74,X72,X71,X69,X75,X73] : (~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X71),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X72),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X70),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X69),s('type.rat.rat',X73))))))))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X74),s('type.rat.rat',X75))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X75),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X73),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X69),s('type.rat.rat',X70))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X71),s('type.rat.rat',X72))))))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X74),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X73),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X69),s('type.rat.rat',X70))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X71),s('type.rat.rat',X72)))))))))))) )),
  inference(forward_demodulation,[],[f16358,f12972])).
fof(f16358,plain,(
  ( ! [X70,X74,X72,X71,X69,X75,X73] : (~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X71),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X69),s('type.rat.rat',X72))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X70),s('type.rat.rat',X73))))))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X74),s('type.rat.rat',X75))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X75),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X73),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X69),s('type.rat.rat',X70))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X71),s('type.rat.rat',X72))))))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X74),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X73),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X69),s('type.rat.rat',X70))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X71),s('type.rat.rat',X72)))))))))))) )),
  inference(forward_demodulation,[],[f16274,f3718])).
fof(f16274,plain,(
  ( ! [X70,X74,X72,X71,X69,X75,X73] : (~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X70),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X71),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X69),s('type.rat.rat',X72))))))),s('type.rat.rat',X73))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X74),s('type.rat.rat',X75))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X75),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X73),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X69),s('type.rat.rat',X70))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X71),s('type.rat.rat',X72))))))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X74),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X73),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X69),s('type.rat.rat',X70))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X71),s('type.rat.rat',X72)))))))))))) )),
  inference(superposition,[],[f1488,f12972])).
fof(f16355,plain,(
  ( ! [X61,X59,X57,X62,X60,X58] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X61),s('type.rat.rat',X62))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X62),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X60),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X58),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X59),s('type.rat.rat',X57))))))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X61),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X60),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X58),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X59),s('type.rat.rat',X57))))))))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X57),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X59),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X58),s('type.rat.rat',X60))))))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) )),
  inference(forward_demodulation,[],[f16354,f3518])).
fof(f16354,plain,(
  ( ! [X61,X59,X57,X62,X60,X58] : (~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X57),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X59),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X58),s('type.rat.rat',X60))))))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X61),s('type.rat.rat',X62))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X62),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X60),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X57),s('type.rat.rat',X58))),s('type.rat.rat',X59))))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X61),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X60),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X57),s('type.rat.rat',X58))),s('type.rat.rat',X59)))))))))) )),
  inference(forward_demodulation,[],[f16272,f3718])).
fof(f16272,plain,(
  ( ! [X61,X59,X57,X62,X60,X58] : (~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X58),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X57),s('type.rat.rat',X59))))),s('type.rat.rat',X60))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X61),s('type.rat.rat',X62))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X62),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X60),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X57),s('type.rat.rat',X58))),s('type.rat.rat',X59))))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X61),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X60),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X57),s('type.rat.rat',X58))),s('type.rat.rat',X59)))))))))) )),
  inference(superposition,[],[f1488,f1375])).
fof(f16334,plain,(
  ( ! [X28,X26,X24,X29,X27,X25] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X28),s('type.rat.rat',X29))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X25),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X27),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X29),s('type.rat.rat',X24))))))),s('type.rat.rat',X26))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X25),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X27),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X28),s('type.rat.rat',X24))))))),s('type.rat.rat',X26))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X27),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X24),s('type.rat.rat',X25))))),s('type.rat.rat',X26))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) )),
  inference(forward_demodulation,[],[f16333,f3518])).
fof(f16333,plain,(
  ( ! [X28,X26,X24,X29,X27,X25] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X28),s('type.rat.rat',X29))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X25),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X24),s('type.rat.rat',X27))),s('type.rat.rat',X29))))),s('type.rat.rat',X26))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X25),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X27),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X28),s('type.rat.rat',X24))))))),s('type.rat.rat',X26))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X27),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X24),s('type.rat.rat',X25))))),s('type.rat.rat',X26))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) )),
  inference(forward_demodulation,[],[f16332,f4016])).
fof(f16332,plain,(
  ( ! [X28,X26,X24,X29,X27,X25] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X28),s('type.rat.rat',X29))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X29),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X25),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X24),s('type.rat.rat',X27))))),s('type.rat.rat',X26))))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X25),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X27),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X28),s('type.rat.rat',X24))))))),s('type.rat.rat',X26))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X27),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X24),s('type.rat.rat',X25))))),s('type.rat.rat',X26))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) )),
  inference(forward_demodulation,[],[f16331,f3518])).
fof(f16331,plain,(
  ( ! [X28,X26,X24,X29,X27,X25] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X28),s('type.rat.rat',X29))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X29),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X25),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X24),s('type.rat.rat',X27))))),s('type.rat.rat',X26))))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X25),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X24),s('type.rat.rat',X27))),s('type.rat.rat',X28))))),s('type.rat.rat',X26))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X27),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X24),s('type.rat.rat',X25))))),s('type.rat.rat',X26))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) )),
  inference(forward_demodulation,[],[f16330,f4016])).
fof(f16330,plain,(
  ( ! [X28,X26,X24,X29,X27,X25] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X28),s('type.rat.rat',X29))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X29),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X25),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X24),s('type.rat.rat',X27))))),s('type.rat.rat',X26))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X28),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X25),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X24),s('type.rat.rat',X27))))),s('type.rat.rat',X26))))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X27),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X24),s('type.rat.rat',X25))))),s('type.rat.rat',X26))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) )),
  inference(forward_demodulation,[],[f16329,f4016])).
fof(f16329,plain,(
  ( ! [X28,X26,X24,X29,X27,X25] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X28),s('type.rat.rat',X29))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X29),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X27),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X25),s('type.rat.rat',X24))),s('type.rat.rat',X26))))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X28),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X27),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X25),s('type.rat.rat',X24))),s('type.rat.rat',X26))))))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X27),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X24),s('type.rat.rat',X25))))),s('type.rat.rat',X26))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) )),
  inference(forward_demodulation,[],[f16328,f3474])).
fof(f16328,plain,(
  ( ! [X28,X26,X24,X29,X27,X25] : (~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X27),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X24),s('type.rat.rat',X25))))),s('type.rat.rat',X26))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X28),s('type.rat.rat',X29))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X29),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X27),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X24),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X25),s('type.rat.rat',X26))))))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X28),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X27),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X24),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X25),s('type.rat.rat',X26)))))))))))) )),
  inference(forward_demodulation,[],[f16266,f3785])).
fof(f16266,plain,(
  ( ! [X28,X26,X24,X29,X27,X25] : (~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X24),s('type.rat.rat',X25))),s('type.rat.rat',X26))),s('type.rat.rat',X27))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X28),s('type.rat.rat',X29))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X29),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X27),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X24),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X25),s('type.rat.rat',X26))))))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X28),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X27),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X24),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X25),s('type.rat.rat',X26)))))))))))) )),
  inference(superposition,[],[f1488,f1409])).
fof(f16327,plain,(
  ( ! [X23,X21,X19,X22,X20] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X22),s('type.rat.rat',X23))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X20),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X21),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X23),s('type.rat.rat',X19))))))),s('type.rat.rat',X19))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X20),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X21),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X22),s('type.rat.rat',X19))))))),s('type.rat.rat',X19))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X20),s('type.rat.rat',X21))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.rat.rat',X19) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(forward_demodulation,[],[f16326,f3518])).
fof(f16326,plain,(
  ( ! [X23,X21,X19,X22,X20] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X22),s('type.rat.rat',X23))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X20),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X19),s('type.rat.rat',X21))),s('type.rat.rat',X23))))),s('type.rat.rat',X19))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X20),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X21),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X22),s('type.rat.rat',X19))))))),s('type.rat.rat',X19))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X20),s('type.rat.rat',X21))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.rat.rat',X19) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(forward_demodulation,[],[f16325,f4016])).
fof(f16325,plain,(
  ( ! [X23,X21,X19,X22,X20] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X22),s('type.rat.rat',X23))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X23),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X20),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X19),s('type.rat.rat',X21))))),s('type.rat.rat',X19))))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X20),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X21),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X22),s('type.rat.rat',X19))))))),s('type.rat.rat',X19))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X20),s('type.rat.rat',X21))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.rat.rat',X19) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(forward_demodulation,[],[f16324,f3518])).
fof(f16324,plain,(
  ( ! [X23,X21,X19,X22,X20] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X22),s('type.rat.rat',X23))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X23),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X20),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X19),s('type.rat.rat',X21))))),s('type.rat.rat',X19))))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X20),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X19),s('type.rat.rat',X21))),s('type.rat.rat',X22))))),s('type.rat.rat',X19))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X20),s('type.rat.rat',X21))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.rat.rat',X19) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(forward_demodulation,[],[f16323,f4016])).
fof(f16323,plain,(
  ( ! [X23,X21,X19,X22,X20] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X22),s('type.rat.rat',X23))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X23),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X20),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X19),s('type.rat.rat',X21))))),s('type.rat.rat',X19))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X22),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X20),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X19),s('type.rat.rat',X21))))),s('type.rat.rat',X19))))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X20),s('type.rat.rat',X21))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.rat.rat',X19) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(forward_demodulation,[],[f16322,f4016])).
fof(f16322,plain,(
  ( ! [X23,X21,X19,X22,X20] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X22),s('type.rat.rat',X23))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X23),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X21),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X20),s('type.rat.rat',X19))),s('type.rat.rat',X19))))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X22),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X21),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X20),s('type.rat.rat',X19))),s('type.rat.rat',X19))))))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X20),s('type.rat.rat',X21))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.rat.rat',X19) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(forward_demodulation,[],[f16265,f3474])).
fof(f16265,plain,(
  ( ! [X23,X21,X19,X22,X20] : (~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X20),s('type.rat.rat',X21))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X22),s('type.rat.rat',X23))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X23),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X21),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X19),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X20),s('type.rat.rat',X19))))))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X22),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X21),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X19),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X20),s('type.rat.rat',X19))))))))))) | s('type.rat.rat',X19) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f1488,f1468])).
fof(f16128,plain,(
  ( ! [X39,X43,X41,X42,X40] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X43),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X40),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X41),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X39),s('type.rat.rat',X42))))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X41),s('type.rat.rat',X42))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X43),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X39),s('type.rat.rat',X40)))))))) )),
  inference(superposition,[],[f1385,f12972])).
fof(f16247,plain,(
  ( ! [X37,X35,X38,X36,X34] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X38),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X35),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X36),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X34),s('type.rat.rat',X37))))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X34),s('type.rat.rat',X35))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X37),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X38),s('type.rat.rat',X36)))))))) )),
  inference(forward_demodulation,[],[f16127,f3518])).
fof(f16127,plain,(
  ( ! [X37,X35,X38,X36,X34] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X38),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X35),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X36),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X34),s('type.rat.rat',X37))))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X34),s('type.rat.rat',X35))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X36),s('type.rat.rat',X37))),s('type.rat.rat',X38)))))) )),
  inference(superposition,[],[f1385,f12972])).
fof(f16246,plain,(
  ( ! [X30,X33,X31,X29,X32] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X32),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X30),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X31),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X29),s('type.rat.rat',X33))))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X30),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X31),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X29),s('type.rat.rat',X32))))))),s('type.rat.rat',X33)))) )),
  inference(forward_demodulation,[],[f16245,f12972])).
fof(f16245,plain,(
  ( ! [X30,X33,X31,X29,X32] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X32),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X29),s('type.rat.rat',X30))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X31),s('type.rat.rat',X33))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X30),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X31),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X29),s('type.rat.rat',X32))))))),s('type.rat.rat',X33)))) )),
  inference(forward_demodulation,[],[f16126,f12972])).
fof(f16126,plain,(
  ( ! [X30,X33,X31,X29,X32] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X30),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X31),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X29),s('type.rat.rat',X32))))))),s('type.rat.rat',X33))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X31),s('type.rat.rat',X32))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X29),s('type.rat.rat',X30))),s('type.rat.rat',X33)))))) )),
  inference(superposition,[],[f1375,f12972])).
fof(f16117,plain,(
  ( ! [X23,X21,X22,X20] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X21),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X22),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X20),s('type.rat.rat',X23))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X22),s('type.rat.rat',X23))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X20),s('type.rat.rat',X21)))))) )),
  inference(superposition,[],[f12972,f372])).
fof(f16114,plain,(
  ( ! [X10,X8,X11,X9] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X8),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X9),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X10),s('type.rat.rat',X11))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X9),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X10),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X8),s('type.rat.rat',X11)))))))) )),
  inference(superposition,[],[f12972,f420])).
fof(f16236,plain,(
  ( ! [X61,X59,X57,X60,X58,X56] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X60),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X57),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X61),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X56),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X58),s('type.rat.rat',X59))))))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X60),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X57),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X61),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X58),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X56),s('type.rat.rat',X59)))))))))))) )),
  inference(forward_demodulation,[],[f16235,f12972])).
fof(f16235,plain,(
  ( ! [X61,X59,X57,X60,X58,X56] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X60),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X57),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X61),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X58),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X56),s('type.rat.rat',X59))))))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X60),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X56),s('type.rat.rat',X57))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X61),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X58),s('type.rat.rat',X59)))))))))) )),
  inference(forward_demodulation,[],[f16111,f12972])).
fof(f16111,plain,(
  ( ! [X61,X59,X57,X60,X58,X56] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X60),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X56),s('type.rat.rat',X57))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X61),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X58),s('type.rat.rat',X59))))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X61),s('type.rat.rat',X60))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X57),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X58),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X56),s('type.rat.rat',X59)))))))))) )),
  inference(superposition,[],[f12972,f12972])).
fof(f16234,plain,(
  ( ! [X54,X52,X55,X53,X51] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X54),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X51),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X55),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X52),s('type.rat.rat',X53))))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X54),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X52),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X55),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X51),s('type.rat.rat',X53)))))))))) )),
  inference(forward_demodulation,[],[f16233,f12972])).
fof(f16233,plain,(
  ( ! [X54,X52,X55,X53,X51] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X54),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X51),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X55),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X52),s('type.rat.rat',X53))))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X54),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X51),s('type.rat.rat',X52))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X55),s('type.rat.rat',X53)))))))) )),
  inference(forward_demodulation,[],[f16110,f12972])).
fof(f16110,plain,(
  ( ! [X54,X52,X55,X53,X51] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X54),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X51),s('type.rat.rat',X52))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X55),s('type.rat.rat',X53))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X55),s('type.rat.rat',X54))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X51),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X52),s('type.rat.rat',X53)))))))) )),
  inference(superposition,[],[f12972,f420])).
fof(f16231,plain,(
  ( ! [X45,X43,X41,X44,X42] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X41),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X43),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X45),s('type.rat.rat',X44))))))),s('type.rat.rat',X42))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X44),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X43),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X41),s('type.rat.rat',X45))))),s('type.rat.rat',X42)))))) )),
  inference(forward_demodulation,[],[f16230,f3518])).
fof(f16230,plain,(
  ( ! [X45,X43,X41,X44,X42] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X41),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X43),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X45),s('type.rat.rat',X44))))))),s('type.rat.rat',X42))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X44),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X45),s('type.rat.rat',X43))),s('type.rat.rat',X41))),s('type.rat.rat',X42)))))) )),
  inference(forward_demodulation,[],[f16229,f3785])).
fof(f16229,plain,(
  ( ! [X45,X43,X41,X44,X42] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X41),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X43),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X45),s('type.rat.rat',X44))))))),s('type.rat.rat',X42))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X44),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X41),s('type.rat.rat',X42))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X45),s('type.rat.rat',X43)))))))) )),
  inference(forward_demodulation,[],[f16108,f4016])).
fof(f16108,plain,(
  ( ! [X45,X43,X41,X44,X42] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X44),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X41),s('type.rat.rat',X42))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X45),s('type.rat.rat',X43))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X45),s('type.rat.rat',X44))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X41),s('type.rat.rat',X43))),s('type.rat.rat',X42)))))) )),
  inference(superposition,[],[f12972,f1410])).
fof(f16105,plain,(
  ( ! [X30,X33,X31,X29,X32] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X32),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X29),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X33),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X30),s('type.rat.rat',X31))))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X33),s('type.rat.rat',X32))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X31),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X29),s('type.rat.rat',X30)))))))) )),
  inference(superposition,[],[f12972,f1385])).
fof(f16104,plain,(
  ( ! [X28,X26,X24,X27,X25] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X27),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X24),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X28),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X25),s('type.rat.rat',X26))))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X28),s('type.rat.rat',X27))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X25),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X26),s('type.rat.rat',X24)))))))) )),
  inference(superposition,[],[f12972,f1385])).
fof(f16221,plain,(
  ( ! [X23,X21,X19,X22,X20] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X19),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X20),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X23),s('type.rat.rat',X22))))))),s('type.rat.rat',X21))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X22),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X20),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X23),s('type.rat.rat',X19))))),s('type.rat.rat',X21)))))) )),
  inference(forward_demodulation,[],[f16220,f4016])).
fof(f16220,plain,(
  ( ! [X23,X21,X19,X22,X20] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X19),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X20),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X23),s('type.rat.rat',X22))))))),s('type.rat.rat',X21))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X22),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X19),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X20),s('type.rat.rat',X23))),s('type.rat.rat',X21)))))))) )),
  inference(forward_demodulation,[],[f16219,f3474])).
fof(f16219,plain,(
  ( ! [X23,X21,X19,X22,X20] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X19),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X20),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X23),s('type.rat.rat',X22))))))),s('type.rat.rat',X21))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X22),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X19),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X23),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X20),s('type.rat.rat',X21)))))))))) )),
  inference(forward_demodulation,[],[f16103,f4016])).
fof(f16103,plain,(
  ( ! [X23,X21,X19,X22,X20] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X22),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X19),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X23),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X20),s('type.rat.rat',X21))))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X23),s('type.rat.rat',X22))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X19),s('type.rat.rat',X20))),s('type.rat.rat',X21)))))) )),
  inference(superposition,[],[f12972,f1409])).
fof(f16218,plain,(
  ( ! [X17,X15,X18,X16] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X17),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X16),s('type.rat.rat',X18))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X17),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X16),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X18),s('type.rat.rat',X15))))),s('type.rat.rat',X15))))) | s('type.rat.rat',X15) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(forward_demodulation,[],[f16217,f3518])).
fof(f16217,plain,(
  ( ! [X17,X15,X18,X16] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X18),s('type.rat.rat',X17))),s('type.rat.rat',X16))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X17),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X16),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X18),s('type.rat.rat',X15))))),s('type.rat.rat',X15))))) | s('type.rat.rat',X15) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(forward_demodulation,[],[f16216,f4016])).
fof(f16216,plain,(
  ( ! [X17,X15,X18,X16] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X18),s('type.rat.rat',X17))),s('type.rat.rat',X16))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X17),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X15),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X16),s('type.rat.rat',X18))),s('type.rat.rat',X15))))))) | s('type.rat.rat',X15) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(forward_demodulation,[],[f16102,f3474])).
fof(f16102,plain,(
  ( ! [X17,X15,X18,X16] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X18),s('type.rat.rat',X17))),s('type.rat.rat',X16))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X17),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X15),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X18),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X16),s('type.rat.rat',X15))))))))) | s('type.rat.rat',X15) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f12972,f1468])).
fof(f16098,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X2),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X0),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X3),s('type.rat.rat',X1))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X3),s('type.rat.rat',X2))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X1),s('type.rat.rat',X0)))))) )),
  inference(superposition,[],[f12972,f372])).
fof(f16204,plain,(
  ( ! [X61,X59,X57,X60,X58,X56] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X59),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X60),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X58),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X57),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X61),s('type.rat.rat',X56))))))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X57),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X58),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X56),s('type.rat.rat',X59))))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X60),s('type.rat.rat',X61)))))) )),
  inference(forward_demodulation,[],[f16203,f3518])).
fof(f16203,plain,(
  ( ! [X61,X59,X57,X60,X58,X56] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X59),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X60),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X58),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X56),s('type.rat.rat',X57))),s('type.rat.rat',X61))))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X57),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X58),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X56),s('type.rat.rat',X59))))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X60),s('type.rat.rat',X61)))))) )),
  inference(forward_demodulation,[],[f16066,f12972])).
fof(f16066,plain,(
  ( ! [X61,X59,X57,X60,X58,X56] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X57),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X58),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X56),s('type.rat.rat',X59))))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X60),s('type.rat.rat',X61))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X58),s('type.rat.rat',X59))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X60),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X56),s('type.rat.rat',X57))),s('type.rat.rat',X61)))))))) )),
  inference(superposition,[],[f12972,f12972])).
fof(f16202,plain,(
  ( ! [X54,X52,X55,X53,X51] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X53),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X54),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X51),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X55),s('type.rat.rat',X52))))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X53),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X54),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X52),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X55),s('type.rat.rat',X51)))))))))) )),
  inference(forward_demodulation,[],[f16201,f3518])).
fof(f16201,plain,(
  ( ! [X54,X52,X55,X53,X51] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X53),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X54),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X51),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X55),s('type.rat.rat',X52))))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X53),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X54),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X51),s('type.rat.rat',X52))),s('type.rat.rat',X55)))))))) )),
  inference(forward_demodulation,[],[f16065,f16200])).
fof(f16065,plain,(
  ( ! [X54,X52,X55,X53,X51] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X53),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X54),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X51),s('type.rat.rat',X52))),s('type.rat.rat',X55))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X51),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X52),s('type.rat.rat',X53))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X54),s('type.rat.rat',X55)))))) )),
  inference(superposition,[],[f12972,f420])).
fof(f16200,plain,(
  ( ! [X47,X50,X48,X46,X49] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X48),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X49),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X47),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X50),s('type.rat.rat',X46))))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X47),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X46),s('type.rat.rat',X48))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X49),s('type.rat.rat',X50)))))) )),
  inference(forward_demodulation,[],[f16064,f3518])).
fof(f16064,plain,(
  ( ! [X47,X50,X48,X46,X49] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X48),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X49),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X46),s('type.rat.rat',X47))),s('type.rat.rat',X50))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X47),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X46),s('type.rat.rat',X48))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X49),s('type.rat.rat',X50)))))) )),
  inference(superposition,[],[f12972,f1375])).
fof(f16199,plain,(
  ( ! [X45,X43,X41,X44,X42] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X45),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X41),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X44),s('type.rat.rat',X43))))))),s('type.rat.rat',X42))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X45),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X44),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X43),s('type.rat.rat',X41))))))),s('type.rat.rat',X42)))) )),
  inference(forward_demodulation,[],[f16198,f3518])).
fof(f16198,plain,(
  ( ! [X45,X43,X41,X44,X42] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X45),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X41),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X44),s('type.rat.rat',X43))))))),s('type.rat.rat',X42))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X45),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X41),s('type.rat.rat',X44))),s('type.rat.rat',X43))))),s('type.rat.rat',X42)))) )),
  inference(forward_demodulation,[],[f16197,f12972])).
fof(f16197,plain,(
  ( ! [X45,X43,X41,X44,X42] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X45),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X41),s('type.rat.rat',X44))),s('type.rat.rat',X43))))),s('type.rat.rat',X42))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X44),s('type.rat.rat',X45))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X41),s('type.rat.rat',X43))))),s('type.rat.rat',X42)))) )),
  inference(forward_demodulation,[],[f16196,f4016])).
fof(f16196,plain,(
  ( ! [X45,X43,X41,X44,X42] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X44),s('type.rat.rat',X45))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X41),s('type.rat.rat',X43))))),s('type.rat.rat',X42))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X43),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X45),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X41),s('type.rat.rat',X44))))),s('type.rat.rat',X42)))))) )),
  inference(forward_demodulation,[],[f16195,f4016])).
fof(f16195,plain,(
  ( ! [X45,X43,X41,X44,X42] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X44),s('type.rat.rat',X45))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X41),s('type.rat.rat',X43))))),s('type.rat.rat',X42))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X43),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X44),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X45),s('type.rat.rat',X41))),s('type.rat.rat',X42)))))))) )),
  inference(forward_demodulation,[],[f16194,f3785])).
fof(f16194,plain,(
  ( ! [X45,X43,X41,X44,X42] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X44),s('type.rat.rat',X45))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X41),s('type.rat.rat',X43))))),s('type.rat.rat',X42))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X43),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X44),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X41),s('type.rat.rat',X42))),s('type.rat.rat',X45)))))))) )),
  inference(forward_demodulation,[],[f16063,f3785])).
fof(f16063,plain,(
  ( ! [X45,X43,X41,X44,X42] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X43),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X44),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X41),s('type.rat.rat',X42))),s('type.rat.rat',X45))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X41),s('type.rat.rat',X43))),s('type.rat.rat',X42))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X44),s('type.rat.rat',X45)))))) )),
  inference(superposition,[],[f12972,f1410])).
fof(f16192,plain,(
  ( ! [X37,X35,X36,X34] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X36),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X34),s('type.rat.rat',X37))))),s('type.rat.rat',X35))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X34),s('type.rat.rat',X35))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X36),s('type.rat.rat',X37)))))) )),
  inference(forward_demodulation,[],[f16061,f1340])).
fof(f16061,plain,(
  ( ! [X37,X35,X36,X34] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X34),s('type.rat.rat',X35))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X36),s('type.rat.rat',X37))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X35))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X36),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X34),s('type.rat.rat',X37)))))))) )),
  inference(superposition,[],[f12972,f373])).
fof(f16191,plain,(
  ( ! [X30,X33,X31,X29,X32] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X30),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X29),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X31),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X32),s('type.rat.rat',X33))))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X30),s('type.rat.rat',X31))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X32),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X29),s('type.rat.rat',X33)))))))) )),
  inference(forward_demodulation,[],[f16060,f3467])).
fof(f16060,plain,(
  ( ! [X30,X33,X31,X29,X32] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X30),s('type.rat.rat',X31))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X32),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X29),s('type.rat.rat',X33))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X31),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X29),s('type.rat.rat',X30))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X32),s('type.rat.rat',X33)))))) )),
  inference(superposition,[],[f12972,f1385])).
fof(f16190,plain,(
  ( ! [X28,X26,X24,X27,X25] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X26),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X24),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X25),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X27),s('type.rat.rat',X28))))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X25),s('type.rat.rat',X26))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X27),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X24),s('type.rat.rat',X28)))))))) )),
  inference(forward_demodulation,[],[f16059,f3718])).
fof(f16059,plain,(
  ( ! [X28,X26,X24,X27,X25] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X25),s('type.rat.rat',X26))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X27),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X24),s('type.rat.rat',X28))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X25),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X26),s('type.rat.rat',X24))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X27),s('type.rat.rat',X28)))))) )),
  inference(superposition,[],[f12972,f1385])).
fof(f16189,plain,(
  ( ! [X23,X21,X19,X22,X20] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X23),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X19),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X22),s('type.rat.rat',X20))))))),s('type.rat.rat',X21))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X20),s('type.rat.rat',X21))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X22),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X19),s('type.rat.rat',X23)))))))) )),
  inference(forward_demodulation,[],[f16188,f12972])).
fof(f16188,plain,(
  ( ! [X23,X21,X19,X22,X20] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X22),s('type.rat.rat',X23))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X19),s('type.rat.rat',X20))))),s('type.rat.rat',X21))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X20),s('type.rat.rat',X21))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X22),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X19),s('type.rat.rat',X23)))))))) )),
  inference(forward_demodulation,[],[f16058,f3785])).
fof(f16058,plain,(
  ( ! [X23,X21,X19,X22,X20] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X20),s('type.rat.rat',X21))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X22),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X19),s('type.rat.rat',X23))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X19),s('type.rat.rat',X20))),s('type.rat.rat',X21))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X22),s('type.rat.rat',X23)))))) )),
  inference(superposition,[],[f12972,f1409])).
fof(f16057,plain,(
  ( ! [X17,X15,X18,X16] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X16),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X17),s('type.rat.rat',X18))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X16),s('type.rat.rat',X15))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X17),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X15),s('type.rat.rat',X18))))))) | s('type.rat.rat',X15) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f12972,f1468])).
fof(f16187,plain,(
  ( ! [X14,X12,X13,X11] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X12),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X13),s('type.rat.rat',X14))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X12),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X14),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X13),s('type.rat.rat',X11)))))))) ) | $spl81),
  inference(forward_demodulation,[],[f16186,f3518])).
fof(f16186,plain,(
  ( ! [X14,X12,X13,X11] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X12),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X13),s('type.rat.rat',X14))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X12),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat',X14))),s('type.rat.rat',X13)))))) ) | $spl81),
  inference(forward_demodulation,[],[f16185,f1375])).
fof(f16185,plain,(
  ( ! [X14,X12,X13,X11] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X12),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat',X14))),s('type.rat.rat',X13))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat',X12))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X13),s('type.rat.rat',X14)))))) ) | $spl81),
  inference(forward_demodulation,[],[f16056,f15382])).
fof(f16056,plain,(
  ( ! [X14,X12,X13,X11] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat',X12))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X13),s('type.rat.rat',X14))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',X12))),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X13),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat',X14)))))))) ) | $spl81),
  inference(superposition,[],[f12972,f13248])).
fof(f16055,plain,(
  ( ! [X10,X8,X9] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X8),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X9),s('type.rat.rat',X10))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X9),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X8),s('type.rat.rat',X10)))))))) ) | ($spl81 | $spl118)),
  inference(superposition,[],[f12972,f14470])).
fof(f15942,plain,(
  ( ! [X14,X12,X15,X13] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X15),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X12),s('type.rat.rat',X14))))),s('type.rat.rat',X13))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X12),s('type.rat.rat',X13))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X14),s('type.rat.rat',X15)))))) )),
  inference(forward_demodulation,[],[f15862,f3785])).
fof(f15862,plain,(
  ( ! [X14,X12,X15,X13] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X12),s('type.rat.rat',X13))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X14),s('type.rat.rat',X15))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X12),s('type.rat.rat',X14))),s('type.rat.rat',X13))),s('type.rat.rat',X15)))) )),
  inference(superposition,[],[f420,f1410])).
fof(f15932,plain,(
  ( ! [X28,X26,X27,X25] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X25),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X27),s('type.rat.rat',X28))))),s('type.rat.rat',X26))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X28),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X27),s('type.rat.rat',X25))),s('type.rat.rat',X26)))))) )),
  inference(forward_demodulation,[],[f15856,f3785])).
fof(f15856,plain,(
  ( ! [X28,X26,X27,X25] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X25),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X27),s('type.rat.rat',X28))))),s('type.rat.rat',X26))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X28),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X25),s('type.rat.rat',X26))),s('type.rat.rat',X27)))))) )),
  inference(superposition,[],[f1410,f1385])).
fof(f15928,plain,(
  ( ! [X14,X15,X16] : (s('type.rat.rat',X16) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X16),s('type.rat.rat',X14))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X14),s('type.rat.rat',X15))))),s('type.rat.rat',X15))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X14),s('type.rat.rat',X15)))) )),
  inference(forward_demodulation,[],[f15853,f3474])).
fof(f15853,plain,(
  ( ! [X14,X15,X16] : (s('type.rat.rat',X16) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X14),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X16),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X14),s('type.rat.rat',X15))))))),s('type.rat.rat',X15))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X14),s('type.rat.rat',X15)))) )),
  inference(superposition,[],[f1410,f1468])).
fof(f15795,plain,(
  ( ! [X191,X189,X192,X190] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X190),s('type.rat.rat',X189))),s('type.rat.rat',X191))) | s('type.rat.rat',X192) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X189),s('type.rat.rat',X190))),s('type.rat.rat',X191))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X192),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X189),s('type.rat.rat',X190))),s('type.rat.rat',X191)))))))) )),
  inference(forward_demodulation,[],[f15748,f3474])).
fof(f15748,plain,(
  ( ! [X191,X189,X192,X190] : (s('type.rat.rat',X192) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X189),s('type.rat.rat',X190))),s('type.rat.rat',X191))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X192),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X189),s('type.rat.rat',X190))),s('type.rat.rat',X191))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X189),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X190),s('type.rat.rat',X191)))))) )),
  inference(superposition,[],[f1468,f1409])).
fof(f15794,plain,(
  ( ! [X74,X72,X71,X75,X73] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X74),s('type.rat.rat',X75))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X72),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X71),s('type.rat.rat',X75))))),s('type.rat.rat',X73))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X72),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X71),s('type.rat.rat',X74))))),s('type.rat.rat',X73))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X71),s('type.rat.rat',X72))),s('type.rat.rat',X73))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) )),
  inference(forward_demodulation,[],[f15793,f4016])).
fof(f15793,plain,(
  ( ! [X74,X72,X71,X75,X73] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X74),s('type.rat.rat',X75))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X75),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X72),s('type.rat.rat',X71))),s('type.rat.rat',X73))))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X72),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X71),s('type.rat.rat',X74))))),s('type.rat.rat',X73))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X71),s('type.rat.rat',X72))),s('type.rat.rat',X73))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) )),
  inference(forward_demodulation,[],[f15792,f4016])).
fof(f15792,plain,(
  ( ! [X74,X72,X71,X75,X73] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X74),s('type.rat.rat',X75))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X75),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X72),s('type.rat.rat',X71))),s('type.rat.rat',X73))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X74),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X72),s('type.rat.rat',X71))),s('type.rat.rat',X73))))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X71),s('type.rat.rat',X72))),s('type.rat.rat',X73))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) )),
  inference(forward_demodulation,[],[f15720,f3474])).
fof(f15720,plain,(
  ( ! [X74,X72,X71,X75,X73] : (~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X71),s('type.rat.rat',X72))),s('type.rat.rat',X73))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X74),s('type.rat.rat',X75))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X75),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X71),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X72),s('type.rat.rat',X73))))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X74),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X71),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X72),s('type.rat.rat',X73)))))))))) )),
  inference(superposition,[],[f421,f1409])).
fof(f15791,plain,(
  ( ! [X39,X37,X38] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X37),s('type.rat.rat',X39))),s('type.rat.rat',X38))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X39),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',X37))),s('type.rat.rat',X38))),s('type.rat.rat',sK12)))))) ) | $spl81),
  inference(forward_demodulation,[],[f15712,f3474])).
fof(f15712,plain,(
  ( ! [X39,X37,X38] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X39),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X37),s('type.rat.rat',X38))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X39),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',X37))),s('type.rat.rat',X38))),s('type.rat.rat',sK12)))))) ) | $spl81),
  inference(superposition,[],[f13248,f1409])).
fof(f15783,plain,(
  ( ! [X19,X17,X18,X16] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X19),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X16),s('type.rat.rat',X17))))),s('type.rat.rat',X18))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X16),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X19),s('type.rat.rat',X17))),s('type.rat.rat',X18)))))) )),
  inference(forward_demodulation,[],[f15782,f3785])).
fof(f15782,plain,(
  ( ! [X19,X17,X18,X16] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X19),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X16),s('type.rat.rat',X17))))),s('type.rat.rat',X18))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X16),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X17),s('type.rat.rat',X18))),s('type.rat.rat',X19)))))) )),
  inference(forward_demodulation,[],[f15706,f3785])).
fof(f15706,plain,(
  ( ! [X19,X17,X18,X16] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X16),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X17),s('type.rat.rat',X18))),s('type.rat.rat',X19))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X16),s('type.rat.rat',X17))),s('type.rat.rat',X18))),s('type.rat.rat',X19)))) )),
  inference(superposition,[],[f420,f1409])).
fof(f15781,plain,(
  ( ! [X14,X12,X15,X13] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X15),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X12),s('type.rat.rat',X13))))),s('type.rat.rat',X14))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X13),s('type.rat.rat',X14))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X12),s('type.rat.rat',X15)))))) )),
  inference(forward_demodulation,[],[f15705,f3785])).
fof(f15705,plain,(
  ( ! [X14,X12,X15,X13] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X13),s('type.rat.rat',X14))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X12),s('type.rat.rat',X15))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X12),s('type.rat.rat',X13))),s('type.rat.rat',X14))),s('type.rat.rat',X15)))) )),
  inference(superposition,[],[f1375,f1409])).
fof(f15778,plain,(
  ( ! [X6,X4,X7,X5] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X4),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X5),s('type.rat.rat',X7))))),s('type.rat.rat',X6))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X4),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X7),s('type.rat.rat',X5))),s('type.rat.rat',X6)))))) )),
  inference(forward_demodulation,[],[f15777,f3785])).
fof(f15777,plain,(
  ( ! [X6,X4,X7,X5] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X4),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X5),s('type.rat.rat',X7))))),s('type.rat.rat',X6))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X4),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X5),s('type.rat.rat',X6))),s('type.rat.rat',X7)))))) )),
  inference(forward_demodulation,[],[f15703,f4016])).
fof(f15703,plain,(
  ( ! [X6,X4,X7,X5] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X4),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X5),s('type.rat.rat',X6))),s('type.rat.rat',X7))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X7),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X4),s('type.rat.rat',X5))),s('type.rat.rat',X6)))))) )),
  inference(superposition,[],[f1385,f1409])).
fof(f15775,plain,(
  ( ! [X19,X17,X20,X18] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X18),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X17),s('type.rat.rat',X19))))),s('type.rat.rat',X20))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X18),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X19),s('type.rat.rat',X17))))),s('type.rat.rat',X20)))) )),
  inference(forward_demodulation,[],[f15774,f3518])).
fof(f15774,plain,(
  ( ! [X19,X17,X20,X18] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X18),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X17),s('type.rat.rat',X19))))),s('type.rat.rat',X20))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X17),s('type.rat.rat',X18))),s('type.rat.rat',X19))),s('type.rat.rat',X20)))) )),
  inference(forward_demodulation,[],[f15773,f3862])).
fof(f15773,plain,(
  ( ! [X19,X17,X20,X18] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X17),s('type.rat.rat',X18))),s('type.rat.rat',X19))),s('type.rat.rat',X20))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X17),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X19),s('type.rat.rat',X18))),s('type.rat.rat',X20)))))) )),
  inference(forward_demodulation,[],[f15699,f3474])).
fof(f15699,plain,(
  ( ! [X19,X17,X20,X18] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X17),s('type.rat.rat',X18))),s('type.rat.rat',X19))),s('type.rat.rat',X20))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X17),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X18),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X19),s('type.rat.rat',X20)))))))) )),
  inference(superposition,[],[f1409,f420])).
fof(f15772,plain,(
  ( ! [X14,X15,X13,X16] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X13),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X14),s('type.rat.rat',X15))))),s('type.rat.rat',X16))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X14),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X15),s('type.rat.rat',X13))))),s('type.rat.rat',X16)))) )),
  inference(forward_demodulation,[],[f15771,f3518])).
fof(f15771,plain,(
  ( ! [X14,X15,X13,X16] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X13),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X14),s('type.rat.rat',X15))))),s('type.rat.rat',X16))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X13),s('type.rat.rat',X14))),s('type.rat.rat',X15))),s('type.rat.rat',X16)))) )),
  inference(forward_demodulation,[],[f15770,f3862])).
fof(f15770,plain,(
  ( ! [X14,X15,X13,X16] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X13),s('type.rat.rat',X14))),s('type.rat.rat',X15))),s('type.rat.rat',X16))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X14),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X15),s('type.rat.rat',X13))),s('type.rat.rat',X16)))))) )),
  inference(forward_demodulation,[],[f15698,f3474])).
fof(f15698,plain,(
  ( ! [X14,X15,X13,X16] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X13),s('type.rat.rat',X14))),s('type.rat.rat',X15))),s('type.rat.rat',X16))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X14),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X13),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X15),s('type.rat.rat',X16)))))))) )),
  inference(superposition,[],[f1409,f1375])).
fof(f15767,plain,(
  ( ! [X26,X27,X25] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X27),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X25),s('type.rat.rat',X26))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X27),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X26),s('type.rat.rat',X25)))))) ) | $spl81),
  inference(backward_demodulation,[],[f15694,f15508])).
fof(f15769,plain,(
  ( ! [X24,X23,X22] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X23),s('type.rat.rat',X24))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X22),s('type.rat.rat',X24))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X22),s('type.rat.rat',X23))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X22),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) ) | $spl81),
  inference(forward_demodulation,[],[f15763,f15694])).
fof(f15763,plain,(
  ( ! [X24,X23,X22] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X23),s('type.rat.rat',X24))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X22),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',X24))))),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X22),s('type.rat.rat',X23))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X22),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) ) | $spl81),
  inference(backward_demodulation,[],[f15694,f13593])).
fof(f15694,plain,(
  ( ! [X0,X1] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X0),s('type.rat.rat',X1))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X0),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',X1))))),s('type.rat.rat',sK12)))) ) | $spl81),
  inference(superposition,[],[f1409,f13248])).
fof(f15508,plain,(
  ( ! [X26,X27,X25] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X27),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X25),s('type.rat.rat',X26))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X27),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X26),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',X25))))),s('type.rat.rat',sK12)))))) ) | $spl81),
  inference(superposition,[],[f13248,f1385])).
fof(f15622,plain,(
  ( ! [X21,X19,X20,X18] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X18),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X20),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X21),s('type.rat.rat',X19))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X21),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X20),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X18),s('type.rat.rat',X19)))))))) )),
  inference(forward_demodulation,[],[f15489,f3518])).
fof(f15489,plain,(
  ( ! [X21,X19,X20,X18] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X18),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X19),s('type.rat.rat',X20))),s('type.rat.rat',X21))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X21),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X20),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X18),s('type.rat.rat',X19)))))))) )),
  inference(superposition,[],[f1385,f1385])).
fof(f15619,plain,(
  ( ! [X10,X8,X9] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X10),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X8),s('type.rat.rat',X9))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X8),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X10),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',X9))))),s('type.rat.rat',sK12)))))) ) | $spl81),
  inference(forward_demodulation,[],[f15486,f3785])).
fof(f15486,plain,(
  ( ! [X10,X8,X9] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X10),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X8),s('type.rat.rat',X9))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X8),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',X9))),s('type.rat.rat',sK12))),s('type.rat.rat',X10)))))) ) | $spl81),
  inference(superposition,[],[f1385,f13248])).
fof(f15432,plain,(
  ( ! [X10,X8,X9] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X10),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X8),s('type.rat.rat',X9))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',X9))),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X10),s('type.rat.rat',X8)))))) ) | $spl81),
  inference(superposition,[],[f1385,f13248])).
fof(f15405,plain,(
  ( ! [X146,X147,X145,X148] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X146),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X147),s('type.rat.rat',X145))))) | s('type.rat.rat',X148) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X146),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X145),s('type.rat.rat',X147))))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X148),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X146),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X145),s('type.rat.rat',X147)))))))))) )),
  inference(forward_demodulation,[],[f15367,f3518])).
fof(f15367,plain,(
  ( ! [X146,X147,X145,X148] : (s('type.rat.rat',X148) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X146),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X145),s('type.rat.rat',X147))))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X148),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X146),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X145),s('type.rat.rat',X147))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X145),s('type.rat.rat',X146))),s('type.rat.rat',X147)))) )),
  inference(superposition,[],[f1468,f1375])).
fof(f15404,plain,(
  ( ! [X61,X59,X57,X60,X58] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X60),s('type.rat.rat',X61))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X61),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X58),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X59),s('type.rat.rat',X57))))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X60),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X58),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X59),s('type.rat.rat',X57))))))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X58),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X57),s('type.rat.rat',X59))))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) )),
  inference(forward_demodulation,[],[f15345,f3518])).
fof(f15345,plain,(
  ( ! [X61,X59,X57,X60,X58] : (~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X58),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X57),s('type.rat.rat',X59))))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X60),s('type.rat.rat',X61))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X61),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X57),s('type.rat.rat',X58))),s('type.rat.rat',X59))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X60),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X57),s('type.rat.rat',X58))),s('type.rat.rat',X59)))))))) )),
  inference(superposition,[],[f421,f1375])).
fof(f15397,plain,(
  ( ! [X6,X4,X5,X3] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X3),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X5),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X4),s('type.rat.rat',X6))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X3),s('type.rat.rat',X4))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X5),s('type.rat.rat',X6)))))) )),
  inference(forward_demodulation,[],[f15330,f3718])).
fof(f15330,plain,(
  ( ! [X6,X4,X5,X3] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X3),s('type.rat.rat',X4))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X5),s('type.rat.rat',X6))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X4),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X3),s('type.rat.rat',X5))))),s('type.rat.rat',X6)))) )),
  inference(superposition,[],[f420,f1375])).
fof(f15394,plain,(
  ( ! [X19,X17,X18] : (s('type.rat.rat',X19) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X18),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X19),s('type.rat.rat',X17))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X17),s('type.rat.rat',X18))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X17),s('type.rat.rat',X18)))) )),
  inference(forward_demodulation,[],[f15326,f3474])).
fof(f15326,plain,(
  ( ! [X19,X17,X18] : (s('type.rat.rat',X19) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X18),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X17),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X19),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X17),s('type.rat.rat',X18))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X17),s('type.rat.rat',X18)))) )),
  inference(superposition,[],[f1375,f1468])).
fof(f15388,plain,(
  ( ! [X26,X24,X23,X25] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X25),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X24),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X23),s('type.rat.rat',X26))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X25),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X24),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X26),s('type.rat.rat',X23)))))))) )),
  inference(forward_demodulation,[],[f15387,f3518])).
fof(f15387,plain,(
  ( ! [X26,X24,X23,X25] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X25),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X24),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X23),s('type.rat.rat',X26))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X25),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X23),s('type.rat.rat',X24))),s('type.rat.rat',X26)))))) )),
  inference(forward_demodulation,[],[f15309,f3467])).
fof(f15309,plain,(
  ( ! [X26,X24,X23,X25] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X25),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X23),s('type.rat.rat',X24))),s('type.rat.rat',X26))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X23),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X24),s('type.rat.rat',X25))))),s('type.rat.rat',X26)))) )),
  inference(superposition,[],[f1375,f420])).
fof(f15386,plain,(
  ( ! [X21,X19,X22,X20] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X21),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X19),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X20),s('type.rat.rat',X22))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X21),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X20),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X22),s('type.rat.rat',X19)))))))) )),
  inference(forward_demodulation,[],[f15385,f3518])).
fof(f15385,plain,(
  ( ! [X21,X19,X22,X20] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X21),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X19),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X20),s('type.rat.rat',X22))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X21),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X19),s('type.rat.rat',X20))),s('type.rat.rat',X22)))))) )),
  inference(forward_demodulation,[],[f15308,f3467])).
fof(f15308,plain,(
  ( ! [X21,X19,X22,X20] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X21),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X19),s('type.rat.rat',X20))),s('type.rat.rat',X22))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X20),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X19),s('type.rat.rat',X21))))),s('type.rat.rat',X22)))) )),
  inference(superposition,[],[f1375,f1375])).
fof(f15382,plain,(
  ( ! [X10,X8,X9] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X9),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X10),s('type.rat.rat',X8))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',X9))),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X8),s('type.rat.rat',X10)))))) ) | $spl81),
  inference(forward_demodulation,[],[f15304,f3518])).
fof(f15304,plain,(
  ( ! [X10,X8,X9] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X8),s('type.rat.rat',X9))),s('type.rat.rat',X10))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',X9))),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X8),s('type.rat.rat',X10)))))) ) | $spl81),
  inference(superposition,[],[f1375,f13248])).
fof(f15230,plain,(
  ( ! [X130,X128,X129] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X130),s('type.rat.rat',sK12))),s('type.rat.rat',sK12))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X129),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X130),s('type.rat.rat',X129))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X128),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X129),s('type.rat.rat',X128))))) | s('type.rat.rat',X128) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl81),
  inference(superposition,[],[f13186,f1468])).
fof(f15256,plain,(
  ( ! [X45,X43,X44,X42] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X44),s('type.rat.rat',X45))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X43),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X42),s('type.rat.rat',X45))))),s('type.rat.rat',X42))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X43),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X42),s('type.rat.rat',X44))))),s('type.rat.rat',X42))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X43),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.rat.rat',X42) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(forward_demodulation,[],[f15255,f4016])).
fof(f15255,plain,(
  ( ! [X45,X43,X44,X42] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X44),s('type.rat.rat',X45))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X45),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X43),s('type.rat.rat',X42))),s('type.rat.rat',X42))))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X43),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X42),s('type.rat.rat',X44))))),s('type.rat.rat',X42))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X43),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.rat.rat',X42) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(forward_demodulation,[],[f15254,f4016])).
fof(f15254,plain,(
  ( ! [X45,X43,X44,X42] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X44),s('type.rat.rat',X45))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X45),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X43),s('type.rat.rat',X42))),s('type.rat.rat',X42))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X44),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X43),s('type.rat.rat',X42))),s('type.rat.rat',X42))))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X43),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.rat.rat',X42) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(forward_demodulation,[],[f15198,f3474])).
fof(f15198,plain,(
  ( ! [X45,X43,X44,X42] : (~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X43),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X44),s('type.rat.rat',X45))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X45),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X42),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X43),s('type.rat.rat',X42))))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X44),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X42),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X43),s('type.rat.rat',X42))))))))) | s('type.rat.rat',X42) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f421,f1468])).
fof(f15251,plain,(
  ( ! [X12,X10,X11] : (s('type.rat.rat',X12) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X10),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X12),s('type.rat.rat',X11))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X10),s('type.rat.rat',X11))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X10),s('type.rat.rat',X11)))) )),
  inference(forward_demodulation,[],[f15184,f3474])).
fof(f15184,plain,(
  ( ! [X12,X10,X11] : (s('type.rat.rat',X12) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X10),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X12),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X10),s('type.rat.rat',X11))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X10),s('type.rat.rat',X11)))) )),
  inference(superposition,[],[f1468,f420])).
fof(f15177,plain,(
  ( ! [X19,X17,X18] : (s('type.rat.rat',X19) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X18),s('type.rat.rat',sK12))),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X19),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X18),s('type.rat.rat',sK12))),s('type.rat.rat',sK12))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X17),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X18),s('type.rat.rat',X17))))) | s('type.rat.rat',X17) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl81),
  inference(superposition,[],[f1468,f13186])).
fof(f15246,plain,(
  ( ! [X12,X13,X11] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X12),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',X11))))),s('type.rat.rat',sK12))) | s('type.rat.rat',X13) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat',X12))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X13),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat',X12)))))))) ) | $spl81),
  inference(forward_demodulation,[],[f15175,f4016])).
fof(f15175,plain,(
  ( ! [X12,X13,X11] : (s('type.rat.rat',X13) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat',X12))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X13),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat',X12))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X12),s('type.rat.rat',sK12))),s('type.rat.rat',sK12)))))) ) | $spl81),
  inference(superposition,[],[f1468,f13249])).
fof(f15159,plain,(
  ( ! [X0] : (s('type.rat.rat',X0) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X0),s('type.rat.rat',sK12)))))) ) | $spl81),
  inference(unit_resulting_resolution,[],[f7502,f1468])).
fof(f15068,plain,(
  ( ! [X12,X11] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X12),s('type.rat.rat',sK12))),s('type.rat.rat',sK12))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X12),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X11))))),s('type.rat.rat',X11))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X11)))) ) | $spl81),
  inference(superposition,[],[f1340,f13186])).
fof(f15126,plain,(
  ( ! [X10,X9] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X10),s('type.rat.rat',X9))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X10),s('type.rat.rat',sK12))),s('type.rat.rat',sK12))),s('type.rat.rat',X9)))) ) | $spl81),
  inference(forward_demodulation,[],[f15067,f1340])).
fof(f15067,plain,(
  ( ! [X10,X9] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X9))),s('type.rat.rat',X10))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X10),s('type.rat.rat',sK12))),s('type.rat.rat',sK12))),s('type.rat.rat',X9)))) ) | $spl81),
  inference(superposition,[],[f1340,f13249])).
fof(f15125,plain,(
  ( ! [X8,X7] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X8),s('type.rat.rat',X7))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',X8))),s('type.rat.rat',sK12))),s('type.rat.rat',X7)))) ) | $spl81),
  inference(forward_demodulation,[],[f15066,f1340])).
fof(f15066,plain,(
  ( ! [X8,X7] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X7))),s('type.rat.rat',X8))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',X8))),s('type.rat.rat',sK12))),s('type.rat.rat',X7)))) ) | $spl81),
  inference(superposition,[],[f1340,f13248])).
fof(f14957,plain,(
  s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',sK12))))) | ($spl81 | $spl118)),
  inference(unit_resulting_resolution,[],[f7502,f14471])).
fof(f14660,plain,(
  ( ! [X134,X135] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X135),s('type.rat.rat',sK12))),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X135),s('type.rat.rat',sK12))),s('type.rat.rat',sK12))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X134),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X135),s('type.rat.rat',X134))))) | s('type.rat.rat',X134) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | ($spl81 | $spl118)),
  inference(backward_demodulation,[],[f14384,f14370])).
fof(f14659,plain,(
  ( ! [X118,X119] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X119),s('type.rat.rat',sK12))),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X119),s('type.rat.rat',sK12))),s('type.rat.rat',sK12))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X118),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X119),s('type.rat.rat',X118))))) | s('type.rat.rat',X118) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | ($spl81 | $spl118)),
  inference(backward_demodulation,[],[f14384,f14364])).
fof(f14656,plain,(
  ( ! [X127,X128] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X127),s('type.rat.rat',X128))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X127),s('type.rat.rat',X128))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X127),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X128),s('type.rat.rat',sK12))),s('type.rat.rat',sK12)))))) ) | ($spl81 | $spl118)),
  inference(backward_demodulation,[],[f14384,f14260])).
fof(f14655,plain,(
  ( ! [X118,X119] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X118),s('type.rat.rat',X119))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X118),s('type.rat.rat',X119))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X118),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',X119))),s('type.rat.rat',sK12)))))) ) | ($spl81 | $spl118)),
  inference(backward_demodulation,[],[f14384,f14156])).
fof(f14575,plain,(
  ( ! [X35,X36] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X36),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X36))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',X35))),s('type.rat.rat',sK12))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X35),s('type.rat.rat',X35))),s('type.rat.rat',X36)))) ) | ($spl81 | $spl118)),
  inference(backward_demodulation,[],[f14384,f13171])).
fof(f14570,plain,(
  ( ! [X35,X36] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X36),s('type.rat.rat',X36))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',X35))),s('type.rat.rat',sK12))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X35),s('type.rat.rat',X35))),s('type.rat.rat',X36)))) ) | ($spl81 | $spl118)),
  inference(backward_demodulation,[],[f14384,f13165])).
fof(f14834,plain,(
  ( ! [X8,X9] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X9),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X9))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X8),s('type.rat.rat',X9))),s('type.rat.rat',X8))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.rat.rat',X8) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | ($spl81 | $spl118)),
  inference(forward_demodulation,[],[f14563,f14384])).
fof(f14563,plain,(
  ( ! [X8,X9] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X8),s('type.rat.rat',X9))),s('type.rat.rat',X8))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X9),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X9))))) | s('type.rat.rat',X8) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | ($spl81 | $spl118)),
  inference(backward_demodulation,[],[f14384,f13157])).
fof(f14833,plain,(
  ( ! [X11] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X11))))),s('type.rat.rat',X11))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X11))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) ) | ($spl81 | $spl118)),
  inference(forward_demodulation,[],[f14562,f14384])).
fof(f14562,plain,(
  ( ! [X11] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X11))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X11))))),s('type.rat.rat',X11)))) ) | ($spl81 | $spl118)),
  inference(backward_demodulation,[],[f14384,f13156])).
fof(f14561,plain,(
  ( ! [X2,X3] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X3),s('type.rat.rat',X2))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X3),s('type.rat.rat',X2))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X2),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',X3))))),s('type.rat.rat',sK12)))) ) | ($spl81 | $spl118)),
  inference(backward_demodulation,[],[f14384,f13155])).
fof(f14832,plain,(
  ( ! [X21] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X21),s('type.rat.rat',X21))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat',X21)))) ) | ($spl81 | $spl118)),
  inference(forward_demodulation,[],[f14560,f14384])).
fof(f14560,plain,(
  ( ! [X21] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat',X21))) | s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X21),s('type.rat.rat',X21)))) ) | ($spl81 | $spl118)),
  inference(backward_demodulation,[],[f14384,f13151])).
fof(f14831,plain,(
  ( ! [X6] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X6),s('type.rat.rat',X6))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X6),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) ) | ($spl81 | $spl118)),
  inference(forward_demodulation,[],[f14559,f14384])).
fof(f14559,plain,(
  ( ! [X6] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X6),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X6),s('type.rat.rat',X6)))) ) | ($spl81 | $spl118)),
  inference(backward_demodulation,[],[f14384,f13150])).
fof(f14830,plain,(
  ( ! [X6] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X6),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X6))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat',X6)))) ) | ($spl81 | $spl118)),
  inference(forward_demodulation,[],[f14558,f14384])).
fof(f14558,plain,(
  ( ! [X6] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat',X6))) | s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X6),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X6)))))) ) | ($spl81 | $spl118)),
  inference(backward_demodulation,[],[f14384,f13149])).
fof(f14555,plain,(
  ( ! [X4] : (~sP5('F_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',X4))),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat',X4)))) ) | ($spl81 | $spl118)),
  inference(backward_demodulation,[],[f14384,f13145])).
fof(f14554,plain,(
  ( ! [X12,X11] : (~sP5('F_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X12),s('type.rat.rat',sK12)))),'const.rat.rat_les_2'(s('type.rat.rat',X12),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X11),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',X11))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',X11)))) ) | ($spl81 | $spl118)),
  inference(backward_demodulation,[],[f14384,f13144])).
fof(f14553,plain,(
  ( ! [X189,X187,X188] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X189),s('type.rat.rat',X189))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X187),s('type.rat.rat',X188))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X187),s('type.rat.rat',X188))))),s('type.rat.rat',X189))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X188),s('type.rat.rat',X187)))) ) | ($spl81 | $spl118)),
  inference(backward_demodulation,[],[f14384,f13143])).
fof(f14552,plain,(
  ( ! [X4,X5] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X4),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X5),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X4),s('type.rat.rat',X5))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X5),s('type.rat.rat',X4)))) ) | ($spl81 | $spl118)),
  inference(backward_demodulation,[],[f14384,f13141])).
fof(f14551,plain,(
  ( ! [X54,X55,X53] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X55),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X55))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X53),s('type.rat.rat',X54))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X53),s('type.rat.rat',X54))))),s('type.rat.rat',X55))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X54),s('type.rat.rat',X53)))) ) | ($spl81 | $spl118)),
  inference(backward_demodulation,[],[f14384,f13140])).
fof(f14550,plain,(
  ( ! [X52,X50,X51,X49] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X52),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X49),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X50),s('type.rat.rat',X51))))))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X52),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X49),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X50),s('type.rat.rat',X51))))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X49),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X50),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X51),s('type.rat.rat',X52)))))))) ) | ($spl81 | $spl118)),
  inference(backward_demodulation,[],[f14384,f13139])).
fof(f14549,plain,(
  ( ! [X47,X45,X48,X46] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X48),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X46),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X45),s('type.rat.rat',X47))))))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X48),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X46),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X45),s('type.rat.rat',X47))))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X45),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X46),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X47),s('type.rat.rat',X48)))))))) ) | ($spl81 | $spl118)),
  inference(backward_demodulation,[],[f14384,f13138])).
fof(f14548,plain,(
  ( ! [X30,X28,X31,X29] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X31),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X30),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X28),s('type.rat.rat',X29))))))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X31),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X30),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X28),s('type.rat.rat',X29))))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X28),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X29),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X30),s('type.rat.rat',X31)))))))) ) | ($spl81 | $spl118)),
  inference(backward_demodulation,[],[f14384,f13136])).
fof(f14547,plain,(
  ( ! [X19,X17,X20,X18] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X20),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X17),s('type.rat.rat',X18))))),s('type.rat.rat',X19))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X20),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X17),s('type.rat.rat',X18))))),s('type.rat.rat',X19))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X17),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X18),s('type.rat.rat',X20))))),s('type.rat.rat',X19)))) ) | ($spl81 | $spl118)),
  inference(backward_demodulation,[],[f14384,f13135])).
fof(f14546,plain,(
  ( ! [X14,X15,X16] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X16),s('type.rat.rat',X15))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X16),s('type.rat.rat',X15))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X14),s('type.rat.rat',X15))),s('type.rat.rat',X14))),s('type.rat.rat',X16))) | s('type.rat.rat',X14) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | ($spl81 | $spl118)),
  inference(backward_demodulation,[],[f14384,f13134])).
fof(f14545,plain,(
  ( ! [X2,X3] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X3),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X3))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X2),s('type.rat.rat',X2))),s('type.rat.rat',X3))) | s('type.rat.rat',X2) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | ($spl81 | $spl118)),
  inference(backward_demodulation,[],[f14384,f13132])).
fof(f14544,plain,(
  ( ! [X54,X55,X53] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X55),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X55))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X55),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X53),s('type.rat.rat',X54))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X53),s('type.rat.rat',X54))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X54),s('type.rat.rat',X53)))) ) | ($spl81 | $spl118)),
  inference(backward_demodulation,[],[f14384,f13131])).
fof(f14543,plain,(
  ( ! [X52,X50,X51,X49] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X49),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X50),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X51),s('type.rat.rat',X52))))))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X49),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X50),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X51),s('type.rat.rat',X52))))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X52),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X49),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X50),s('type.rat.rat',X51)))))))) ) | ($spl81 | $spl118)),
  inference(backward_demodulation,[],[f14384,f13130])).
fof(f14542,plain,(
  ( ! [X47,X45,X48,X46] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X46),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X45),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X47),s('type.rat.rat',X48))))))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X46),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X45),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X47),s('type.rat.rat',X48))))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X48),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X45),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X46),s('type.rat.rat',X47)))))))) ) | ($spl81 | $spl118)),
  inference(backward_demodulation,[],[f14384,f13129])).
fof(f14541,plain,(
  ( ! [X30,X28,X31,X29] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X30),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X28),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X29),s('type.rat.rat',X31))))))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X30),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X28),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X29),s('type.rat.rat',X31))))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X31),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X28),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X29),s('type.rat.rat',X30)))))))) ) | ($spl81 | $spl118)),
  inference(backward_demodulation,[],[f14384,f13128])).
fof(f14540,plain,(
  ( ! [X26,X24,X27,X25] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X25),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X26),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X24),s('type.rat.rat',X27))))))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X25),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X26),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X24),s('type.rat.rat',X27))))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X27),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X24),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X25),s('type.rat.rat',X26)))))))) ) | ($spl81 | $spl118)),
  inference(backward_demodulation,[],[f14384,f13127])).
fof(f14539,plain,(
  ( ! [X19,X17,X20,X18] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X17),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X18),s('type.rat.rat',X20))))),s('type.rat.rat',X19))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X17),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X18),s('type.rat.rat',X20))))),s('type.rat.rat',X19))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X20),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X17),s('type.rat.rat',X18))))),s('type.rat.rat',X19)))) ) | ($spl81 | $spl118)),
  inference(backward_demodulation,[],[f14384,f13126])).
fof(f14538,plain,(
  ( ! [X14,X15,X16] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X15),s('type.rat.rat',X16))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X15),s('type.rat.rat',X16))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X16),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X14),s('type.rat.rat',X15))),s('type.rat.rat',X14))))) | s('type.rat.rat',X14) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | ($spl81 | $spl118)),
  inference(backward_demodulation,[],[f14384,f13125])).
fof(f14537,plain,(
  ( ! [X6,X7] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X7),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X7))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X7),s('type.rat.rat',X6))),s('type.rat.rat',X6))) | s('type.rat.rat',X6) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | ($spl81 | $spl118)),
  inference(backward_demodulation,[],[f14384,f13123])).
fof(f14536,plain,(
  ( ! [X14,X12,X13] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X13),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X12),s('type.rat.rat',X14))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X12),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X13),s('type.rat.rat',X14))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X12),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X13),s('type.rat.rat',X14)))))) ) | ($spl81 | $spl118)),
  inference(backward_demodulation,[],[f14384,f13122])).
fof(f14535,plain,(
  ( ! [X33,X34] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X33))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X34),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X34),s('type.rat.rat',X33))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X34),s('type.rat.rat',X33)))) ) | ($spl81 | $spl118)),
  inference(backward_demodulation,[],[f14384,f13121])).
fof(f14534,plain,(
  ( ! [X30,X31,X32] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X30),s('type.rat.rat',X31))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X32),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X30),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X31),s('type.rat.rat',X32))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X30),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X31),s('type.rat.rat',X32)))))) ) | ($spl81 | $spl118)),
  inference(backward_demodulation,[],[f14384,f13120])).
fof(f14533,plain,(
  ( ! [X28,X29,X27] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X27),s('type.rat.rat',X28))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X29),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X28),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X27),s('type.rat.rat',X29))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X27),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X28),s('type.rat.rat',X29)))))) ) | ($spl81 | $spl118)),
  inference(backward_demodulation,[],[f14384,f13119])).
fof(f14532,plain,(
  ( ! [X19,X20] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X19),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X20))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X19),s('type.rat.rat',X20))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X19),s('type.rat.rat',X20)))) ) | ($spl81 | $spl118)),
  inference(backward_demodulation,[],[f14384,f13118])).
fof(f14531,plain,(
  ( ! [X6,X7] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X6),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X7),s('type.rat.rat',X6))),s('type.rat.rat',X7))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X6),s('type.rat.rat',X7))),s('type.rat.rat',X6))) | s('type.rat.rat',X6) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | ($spl81 | $spl118)),
  inference(backward_demodulation,[],[f14384,f13117])).
fof(f14529,plain,(
  ( ! [X47,X45,X48,X46] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X48),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X46),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X45),s('type.rat.rat',X47))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X48),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X46),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X45),s('type.rat.rat',X47))))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X48),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X45),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X46),s('type.rat.rat',X47)))))))) ) | ($spl81 | $spl118)),
  inference(backward_demodulation,[],[f14384,f13115])).
fof(f14528,plain,(
  ( ! [X33,X34,X32] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X34),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X32),s('type.rat.rat',X33))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X34),s('type.rat.rat',X32))),s('type.rat.rat',X33))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X34),s('type.rat.rat',X32))),s('type.rat.rat',X33)))) ) | ($spl81 | $spl118)),
  inference(backward_demodulation,[],[f14384,f13113])).
fof(f14527,plain,(
  ( ! [X14,X15,X16] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X16),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X15),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X16),s('type.rat.rat',X15))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X16),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X14),s('type.rat.rat',X15))),s('type.rat.rat',X14))))) | s('type.rat.rat',X14) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | ($spl81 | $spl118)),
  inference(backward_demodulation,[],[f14384,f13112])).
fof(f14525,plain,(
  ( ! [X52,X50,X51,X49] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X49),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X50),s('type.rat.rat',X51))))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X52),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X49),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X50),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X51),s('type.rat.rat',X52))))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X49),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X50),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X51),s('type.rat.rat',X52)))))))) ) | ($spl81 | $spl118)),
  inference(backward_demodulation,[],[f14384,f13109])).
fof(f14524,plain,(
  ( ! [X47,X45,X48,X46] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X46),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X45),s('type.rat.rat',X47))))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X48),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X46),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X45),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X47),s('type.rat.rat',X48))))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X45),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X46),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X47),s('type.rat.rat',X48)))))))) ) | ($spl81 | $spl118)),
  inference(backward_demodulation,[],[f14384,f13108])).
fof(f14523,plain,(
  ( ! [X33,X34,X32] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X32),s('type.rat.rat',X33))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X34),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X32),s('type.rat.rat',X34))),s('type.rat.rat',X33))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X32),s('type.rat.rat',X34))),s('type.rat.rat',X33)))) ) | ($spl81 | $spl118)),
  inference(backward_demodulation,[],[f14384,f13106])).
fof(f14522,plain,(
  ( ! [X30,X28,X31,X29] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X30),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X28),s('type.rat.rat',X29))))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X31),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X30),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X28),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X29),s('type.rat.rat',X31))))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X28),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X29),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X30),s('type.rat.rat',X31)))))))) ) | ($spl81 | $spl118)),
  inference(backward_demodulation,[],[f14384,f13105])).
fof(f14521,plain,(
  ( ! [X26,X24,X27,X25] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X25),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X26),s('type.rat.rat',X24))))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X27),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X25),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X26),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X24),s('type.rat.rat',X27))))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X24),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X25),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X26),s('type.rat.rat',X27)))))))) ) | ($spl81 | $spl118)),
  inference(backward_demodulation,[],[f14384,f13104])).
fof(f14520,plain,(
  ( ! [X19,X17,X20,X18] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X17),s('type.rat.rat',X18))),s('type.rat.rat',X19))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X20),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X17),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X18),s('type.rat.rat',X20))))),s('type.rat.rat',X19))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X17),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X18),s('type.rat.rat',X20))))),s('type.rat.rat',X19)))) ) | ($spl81 | $spl118)),
  inference(backward_demodulation,[],[f14384,f13103])).
fof(f14519,plain,(
  ( ! [X14,X15,X16] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X15),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X16),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X15),s('type.rat.rat',X16))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X14),s('type.rat.rat',X15))),s('type.rat.rat',X14))),s('type.rat.rat',X16))) | s('type.rat.rat',X14) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | ($spl81 | $spl118)),
  inference(backward_demodulation,[],[f14384,f13102])).
fof(f14518,plain,(
  ( ! [X6,X4,X5] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X5),s('type.rat.rat',X4))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X6),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X5),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X4),s('type.rat.rat',X6))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X4),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X5),s('type.rat.rat',X6)))))) ) | ($spl81 | $spl118)),
  inference(backward_demodulation,[],[f14384,f13100])).
fof(f14517,plain,(
  ( ! [X2,X3] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X3),s('type.rat.rat',X3))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X2),s('type.rat.rat',X2))),s('type.rat.rat',X3))) | s('type.rat.rat',X2) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | ($spl81 | $spl118)),
  inference(backward_demodulation,[],[f14384,f13099])).
fof(f14516,plain,(
  ( ! [X17,X18,X16] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X16),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X17),s('type.rat.rat',X18))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X18),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X16),s('type.rat.rat',X17))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X16),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X17),s('type.rat.rat',X18)))))) ) | ($spl81 | $spl118)),
  inference(backward_demodulation,[],[f14384,f13098])).
fof(f14515,plain,(
  ( ! [X14,X15,X13] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X13),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X14),s('type.rat.rat',X15))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X14),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X15),s('type.rat.rat',X13))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X13),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X14),s('type.rat.rat',X15)))))) ) | ($spl81 | $spl118)),
  inference(backward_demodulation,[],[f14384,f13097])).
fof(f14514,plain,(
  ( ! [X0,X1] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X0),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X1),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X1),s('type.rat.rat',X0))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X0),s('type.rat.rat',X1)))) ) | ($spl81 | $spl118)),
  inference(backward_demodulation,[],[f14384,f13096])).
fof(f14513,plain,(
  ( ! [X30,X28,X31,X29] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X31),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X30),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X28),s('type.rat.rat',X29))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X31),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X30),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X28),s('type.rat.rat',X29))))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X31),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X28),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X29),s('type.rat.rat',X30)))))))) ) | ($spl81 | $spl118)),
  inference(backward_demodulation,[],[f14384,f13095])).
fof(f14512,plain,(
  ( ! [X26,X24,X27,X25] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X27),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X25),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X26),s('type.rat.rat',X24))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X27),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X25),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X26),s('type.rat.rat',X24))))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X27),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X24),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X25),s('type.rat.rat',X26)))))))) ) | ($spl81 | $spl118)),
  inference(backward_demodulation,[],[f14384,f13094])).
fof(f14511,plain,(
  ( ! [X6,X4,X5] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X6),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X5),s('type.rat.rat',X4))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X6),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X5),s('type.rat.rat',X4))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X6),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X4),s('type.rat.rat',X5)))))) ) | ($spl81 | $spl118)),
  inference(backward_demodulation,[],[f14384,f13093])).
fof(f14506,plain,(
  ( ! [X28,X29,X27] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X27),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X28),s('type.rat.rat',X29))))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X27),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X28),s('type.rat.rat',X29))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X27),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X29),s('type.rat.rat',X28)))))) ) | ($spl81 | $spl118)),
  inference(backward_demodulation,[],[f14384,f13086])).
fof(f14505,plain,(
  ( ! [X8,X9] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X8),s('type.rat.rat',X9))),s('type.rat.rat',X8))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X8),s('type.rat.rat',X9))),s('type.rat.rat',X8))))))) | s('type.rat.rat',X9) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.rat.rat',X8) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | ($spl81 | $spl118)),
  inference(backward_demodulation,[],[f14384,f13084])).
fof(f14504,plain,(
  ( ! [X28,X29,X27] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X28),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X27),s('type.rat.rat',X29))))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X28),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X27),s('type.rat.rat',X29))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X29),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X27),s('type.rat.rat',X28)))))) ) | ($spl81 | $spl118)),
  inference(backward_demodulation,[],[f14384,f13080])).
fof(f14503,plain,(
  ( ! [X12,X10,X11] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X10),s('type.rat.rat',X11))),s('type.rat.rat',X12))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X10),s('type.rat.rat',X11))),s('type.rat.rat',X12))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat',X10))),s('type.rat.rat',X12)))) ) | ($spl81 | $spl118)),
  inference(backward_demodulation,[],[f14384,f13079])).
fof(f14502,plain,(
  ( ! [X0,X1] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X1),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X1))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X1),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X0),s('type.rat.rat',X0))))) | s('type.rat.rat',X0) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | ($spl81 | $spl118)),
  inference(backward_demodulation,[],[f14384,f13077])).
fof(f14501,plain,(
  ( ! [X26,X27,X25] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X26),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X25),s('type.rat.rat',X27))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X26),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X25),s('type.rat.rat',X27))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X25),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X26),s('type.rat.rat',X27)))))) ) | ($spl81 | $spl118)),
  inference(backward_demodulation,[],[f14384,f13074])).
fof(f14500,plain,(
  ( ! [X17,X15,X16] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X17),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X15),s('type.rat.rat',X16))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X17),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X15),s('type.rat.rat',X16))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X15),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X16),s('type.rat.rat',X17)))))) ) | ($spl81 | $spl118)),
  inference(backward_demodulation,[],[f14384,f13072])).
fof(f14499,plain,(
  ( ! [X14,X12,X13] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X13),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X14),s('type.rat.rat',X12))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X13),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X14),s('type.rat.rat',X12))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X12),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X13),s('type.rat.rat',X14)))))) ) | ($spl81 | $spl118)),
  inference(backward_demodulation,[],[f14384,f13071])).
fof(f14498,plain,(
  ( ! [X8,X7] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X8),s('type.rat.rat',X8))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X7),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X8),s('type.rat.rat',X7))))) | s('type.rat.rat',X7) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | ($spl81 | $spl118)),
  inference(backward_demodulation,[],[f14384,f13070])).
fof(f14497,plain,(
  ( ! [X2,X3] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X3),s('type.rat.rat',X2))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X3),s('type.rat.rat',X2))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X2),s('type.rat.rat',X3)))) ) | ($spl81 | $spl118)),
  inference(backward_demodulation,[],[f14384,f13068])).
fof(f14496,plain,(
  ~sP2('const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12)),'F_0') | ($spl81 | $spl118)),
  inference(backward_demodulation,[],[f14384,f13067])).
fof(f14495,plain,(
  ( ! [X30] : (sP5('T_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat',X30)),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X30),s('type.rat.rat',sK12))),s('type.rat.rat',sK12)))) ) | ($spl81 | $spl118)),
  inference(backward_demodulation,[],[f14384,f13066])).
fof(f14494,plain,(
  ( ! [X29] : (sP5('T_0','const.rat.rat_les_2'(s('type.rat.rat',X29),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X29),s('type.rat.rat',sK12)))))) ) | ($spl81 | $spl118)),
  inference(backward_demodulation,[],[f14384,f13065])).
fof(f14493,plain,(
  ( ! [X28] : (~sP5('F_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat',X28)),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X28),s('type.rat.rat',sK12))),s('type.rat.rat',sK12)))) ) | ($spl81 | $spl118)),
  inference(backward_demodulation,[],[f14384,f13064])).
fof(f14492,plain,(
  ( ! [X27] : (~sP5('F_0','const.rat.rat_les_2'(s('type.rat.rat',X27),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X27),s('type.rat.rat',sK12)))))) ) | ($spl81 | $spl118)),
  inference(backward_demodulation,[],[f14384,f13063])).
fof(f14491,plain,(
  ( ! [X26] : (sP5('T_0','const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X26),s('type.rat.rat',sK12)))),'const.rat.rat_les_2'(s('type.rat.rat',X26),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) ) | ($spl81 | $spl118)),
  inference(backward_demodulation,[],[f14384,f13062])).
fof(f14490,plain,(
  ( ! [X25] : (sP5('T_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X25),s('type.rat.rat',sK12))),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat',X25)))) ) | ($spl81 | $spl118)),
  inference(backward_demodulation,[],[f14384,f13061])).
fof(f14489,plain,(
  ( ! [X23] : (~sP5('F_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X23),s('type.rat.rat',sK12))),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat',X23)))) ) | ($spl81 | $spl118)),
  inference(backward_demodulation,[],[f14384,f13059])).
fof(f14488,plain,(
  ( ! [X22] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat',X22))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X22),s('type.rat.rat',sK12))),s('type.rat.rat',sK12)))) ) | ($spl81 | $spl118)),
  inference(backward_demodulation,[],[f14384,f13058])).
fof(f14487,plain,(
  ( ! [X21] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X21),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X21),s('type.rat.rat',sK12)))))) ) | ($spl81 | $spl118)),
  inference(backward_demodulation,[],[f14384,f13057])).
fof(f14485,plain,(
  ( ! [X6,X7] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X7),s('type.rat.rat',X6))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X6),s('type.rat.rat',X7)))))) ) | ($spl81 | $spl118)),
  inference(backward_demodulation,[],[f14384,f13054])).
fof(f14484,plain,(
  ( ! [X8,X7] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X8),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X7),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X7),s('type.rat.rat',X8))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X7),s('type.rat.rat',X8)))) ) | ($spl81 | $spl118)),
  inference(backward_demodulation,[],[f14384,f13053])).
fof(f14483,plain,(
  ( ! [X6,X5] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X5),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X5),s('type.rat.rat',X6))))),s('type.rat.rat',X6))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X5),s('type.rat.rat',X6)))) ) | ($spl81 | $spl118)),
  inference(backward_demodulation,[],[f14384,f13052])).
fof(f14482,plain,(
  ( ! [X24,X23,X25] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X24),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X23),s('type.rat.rat',X25))))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X24),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X23),s('type.rat.rat',X25))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X23),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X24),s('type.rat.rat',X25)))))) ) | ($spl81 | $spl118)),
  inference(backward_demodulation,[],[f14384,f13051])).
fof(f14481,plain,(
  ( ! [X11] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X11))))),s('type.rat.rat',X11))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X11)))) ) | ($spl81 | $spl118)),
  inference(backward_demodulation,[],[f14384,f13050])).
fof(f14480,plain,(
  ( ! [X14,X15,X13] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X15),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X13),s('type.rat.rat',X14))))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X15),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X13),s('type.rat.rat',X14))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X13),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X14),s('type.rat.rat',X15)))))) ) | ($spl81 | $spl118)),
  inference(backward_demodulation,[],[f14384,f13049])).
fof(f14479,plain,(
  ( ! [X12,X10,X11] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X12),s('type.rat.rat',X10))))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X12),s('type.rat.rat',X10))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X10),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat',X12)))))) ) | ($spl81 | $spl118)),
  inference(backward_demodulation,[],[f14384,f13048])).
fof(f14478,plain,(
  ( ! [X6,X5] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X6),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X6))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X5),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X6),s('type.rat.rat',X5))))) | s('type.rat.rat',X5) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | ($spl81 | $spl118)),
  inference(backward_demodulation,[],[f14384,f13047])).
fof(f14475,plain,(
  ( ! [X3] : (s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X3))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat',X3)))) ) | ($spl81 | $spl118)),
  inference(backward_demodulation,[],[f14384,f13043])).
fof(f14471,plain,(
  ( ! [X0] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X0),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X0))))) | s('type.rat.rat',X0) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | ($spl81 | $spl118)),
  inference(backward_demodulation,[],[f14384,f13038])).
fof(f14470,plain,(
  ( ! [X0] : (s('type.rat.rat',X0) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X0),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) ) | ($spl81 | $spl118)),
  inference(backward_demodulation,[],[f14384,f13037])).
fof(f14469,plain,(
  s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | ($spl81 | $spl118)),
  inference(backward_demodulation,[],[f14384,f13036])).
fof(f14454,plain,(
  ( ! [X21] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',X21))),s('type.rat.rat',sK12))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X21),s('type.rat.rat',X21))) | s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X21),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X21))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12)))))))) ) | $spl81),
  inference(forward_demodulation,[],[f14453,f3474])).
fof(f14453,plain,(
  ( ! [X21] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X21),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X21),s('type.rat.rat',X21))) | s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X21),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X21))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12)))))))) ) | $spl81),
  inference(forward_demodulation,[],[f14452,f13036])).
fof(f14452,plain,(
  ( ! [X21] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X21),s('type.rat.rat',X21))) | s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X21),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X21))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X21),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) ) | $spl81),
  inference(forward_demodulation,[],[f14451,f373])).
fof(f14451,plain,(
  ( ! [X21] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X21),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X21))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X21),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X21))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X21),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) ) | $spl81),
  inference(forward_demodulation,[],[f9058,f13036])).
fof(f9058,plain,(
  ( ! [X21] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X21),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X21))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X21),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X21))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X21),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) )),
  inference(superposition,[],[f1466,f1436])).
fof(f14370,plain,(
  ( ! [X134,X135] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X135),s('type.rat.rat',sK12))),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X135),s('type.rat.rat',sK12))),s('type.rat.rat',sK12))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X134),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X135),s('type.rat.rat',X134))))) | s('type.rat.rat',X134) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl81),
  inference(superposition,[],[f13270,f13186])).
fof(f14364,plain,(
  ( ! [X118,X119] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X119),s('type.rat.rat',sK12))),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X119),s('type.rat.rat',sK12))),s('type.rat.rat',sK12))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X118),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X119),s('type.rat.rat',X118))))) | s('type.rat.rat',X118) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl81),
  inference(superposition,[],[f13038,f13186])).
fof(f14404,plain,(
  ( ! [X39,X41,X42,X40] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X41),s('type.rat.rat',X42))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X40),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X39),s('type.rat.rat',X42))))),s('type.rat.rat',X39))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X40),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X39),s('type.rat.rat',X41))))),s('type.rat.rat',X39))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X40),s('type.rat.rat',sK12))),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.rat.rat',X39) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl81),
  inference(forward_demodulation,[],[f14403,f4016])).
fof(f14403,plain,(
  ( ! [X39,X41,X42,X40] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X41),s('type.rat.rat',X42))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X42),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X40),s('type.rat.rat',X39))),s('type.rat.rat',X39))))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X40),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X39),s('type.rat.rat',X41))))),s('type.rat.rat',X39))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X40),s('type.rat.rat',sK12))),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.rat.rat',X39) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl81),
  inference(forward_demodulation,[],[f14402,f4016])).
fof(f14402,plain,(
  ( ! [X39,X41,X42,X40] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X41),s('type.rat.rat',X42))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X42),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X40),s('type.rat.rat',X39))),s('type.rat.rat',X39))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X41),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X40),s('type.rat.rat',X39))),s('type.rat.rat',X39))))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X40),s('type.rat.rat',sK12))),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.rat.rat',X39) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl81),
  inference(forward_demodulation,[],[f14334,f3474])).
fof(f14334,plain,(
  ( ! [X39,X41,X42,X40] : (~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X40),s('type.rat.rat',sK12))),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X41),s('type.rat.rat',X42))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X42),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X39),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X40),s('type.rat.rat',X39))))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X41),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X39),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X40),s('type.rat.rat',X39))))))))) | s('type.rat.rat',X39) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl81),
  inference(superposition,[],[f421,f13186])).
fof(f14401,plain,(
  ( ! [X14,X13] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X13),s('type.rat.rat',X14))),s('type.rat.rat',sK12))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X14),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X13),s('type.rat.rat',sK12))),s('type.rat.rat',sK12))),s('type.rat.rat',sK12)))))) ) | $spl81),
  inference(forward_demodulation,[],[f14400,f3474])).
fof(f14400,plain,(
  ( ! [X14,X13] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X14),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X13),s('type.rat.rat',sK12))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X14),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X13),s('type.rat.rat',sK12))),s('type.rat.rat',sK12))),s('type.rat.rat',sK12)))))) ) | $spl81),
  inference(subsumption_resolution,[],[f14326,f7502])).
fof(f14326,plain,(
  ( ! [X14,X13] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X14),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X13),s('type.rat.rat',sK12))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X14),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X13),s('type.rat.rat',sK12))),s('type.rat.rat',sK12))),s('type.rat.rat',sK12))))) | s('type.rat.rat',sK12) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl81),
  inference(superposition,[],[f13248,f13186])).
fof(f14397,plain,(
  ( ! [X4,X2,X3] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X4),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X3),s('type.rat.rat',sK12))))),s('type.rat.rat',sK12))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X2),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X4),s('type.rat.rat',X3))),s('type.rat.rat',X2))))) | s('type.rat.rat',X2) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl81),
  inference(forward_demodulation,[],[f14396,f3785])).
fof(f14396,plain,(
  ( ! [X4,X2,X3] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X3),s('type.rat.rat',sK12))),s('type.rat.rat',sK12))),s('type.rat.rat',X4))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X2),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X4),s('type.rat.rat',X3))),s('type.rat.rat',X2))))) | s('type.rat.rat',X2) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl81),
  inference(forward_demodulation,[],[f14323,f3785])).
fof(f14323,plain,(
  ( ! [X4,X2,X3] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X3),s('type.rat.rat',sK12))),s('type.rat.rat',sK12))),s('type.rat.rat',X4))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X2),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X3),s('type.rat.rat',X2))),s('type.rat.rat',X4))))) | s('type.rat.rat',X2) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl81),
  inference(superposition,[],[f420,f13186])).
fof(f14392,plain,(
  ( ! [X10,X8,X9] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X10),s('type.rat.rat',sK12))),s('type.rat.rat',sK12))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X8),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X10),s('type.rat.rat',X9))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X8),s('type.rat.rat',X9))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X8),s('type.rat.rat',X9)))) ) | $spl81),
  inference(forward_demodulation,[],[f14318,f3474])).
fof(f14318,plain,(
  ( ! [X10,X8,X9] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X10),s('type.rat.rat',sK12))),s('type.rat.rat',sK12))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X8),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X9),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X10),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X8),s('type.rat.rat',X9))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X8),s('type.rat.rat',X9)))) ) | $spl81),
  inference(superposition,[],[f13186,f420])).
fof(f14391,plain,(
  ( ! [X1] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',X1))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',X1))))),s('type.rat.rat',sK12)))) ) | $spl81),
  inference(forward_demodulation,[],[f14390,f3518])).
fof(f14390,plain,(
  ( ! [X1] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',X1))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X1),s('type.rat.rat',sK12))),s('type.rat.rat',sK12))),s('type.rat.rat',sK12)))) ) | $spl81),
  inference(subsumption_resolution,[],[f14317,f7502])).
fof(f14317,plain,(
  ( ! [X1] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',X1))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X1),s('type.rat.rat',sK12))),s('type.rat.rat',sK12))),s('type.rat.rat',sK12))) | s('type.rat.rat',sK12) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl81),
  inference(superposition,[],[f13186,f13249])).
fof(f14389,plain,(
  ( ! [X0] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat',sK12))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X0),s('type.rat.rat',X0))))) | s('type.rat.rat',X0) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl81),
  inference(subsumption_resolution,[],[f14313,f7502])).
fof(f14313,plain,(
  ( ! [X0] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat',sK12))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X0),s('type.rat.rat',X0))))) | s('type.rat.rat',sK12) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.rat.rat',X0) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl81),
  inference(superposition,[],[f13186,f13270])).
fof(f14310,plain,(
  ( ! [X26,X27] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X27),s('type.rat.rat',sK12))),s('type.rat.rat',sK12))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X26),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X27),s('type.rat.rat',X26))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat',X26)))) ) | $spl81),
  inference(superposition,[],[f13186,f13039])).
fof(f14382,plain,(
  ( ! [X24,X23,X25,X22] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X23),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X24),s('type.rat.rat',X22))))) | s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X25),s('type.rat.rat',sK12))),s('type.rat.rat',sK12))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X22),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X23),s('type.rat.rat',X24))))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X25),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X22),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X23),s('type.rat.rat',X24)))))))))) ) | $spl81),
  inference(forward_demodulation,[],[f14309,f3518])).
fof(f14309,plain,(
  ( ! [X24,X23,X25,X22] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X25),s('type.rat.rat',sK12))),s('type.rat.rat',sK12))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X22),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X23),s('type.rat.rat',X24))))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X25),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X22),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X23),s('type.rat.rat',X24))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X22),s('type.rat.rat',X23))),s('type.rat.rat',X24)))) ) | $spl81),
  inference(superposition,[],[f13186,f420])).
fof(f14308,plain,(
  ( ! [X21,X19,X20] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X21),s('type.rat.rat',sK12))),s('type.rat.rat',sK12))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X20),s('type.rat.rat',sK12))),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X21),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X20),s('type.rat.rat',sK12))),s('type.rat.rat',sK12))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X19),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X20),s('type.rat.rat',X19))))) | s('type.rat.rat',X19) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl81),
  inference(superposition,[],[f13186,f13186])).
fof(f14381,plain,(
  ( ! [X17,X18,X16] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X17),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',X16))))),s('type.rat.rat',sK12))) | s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X18),s('type.rat.rat',sK12))),s('type.rat.rat',sK12))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X16),s('type.rat.rat',X17))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X18),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X16),s('type.rat.rat',X17)))))))) ) | $spl81),
  inference(forward_demodulation,[],[f14307,f4016])).
fof(f14307,plain,(
  ( ! [X17,X18,X16] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X18),s('type.rat.rat',sK12))),s('type.rat.rat',sK12))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X16),s('type.rat.rat',X17))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X18),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X16),s('type.rat.rat',X17))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X16),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X17),s('type.rat.rat',sK12))),s('type.rat.rat',sK12)))))) ) | $spl81),
  inference(superposition,[],[f13186,f13249])).
fof(f14305,plain,(
  ( ! [X12,X11] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X12),s('type.rat.rat',sK12))),s('type.rat.rat',sK12))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X12),s('type.rat.rat',X11))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12)))))) ) | $spl81),
  inference(superposition,[],[f13186,f13037])).
fof(f14301,plain,(
  ( ! [X2,X0,X1] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X2),s('type.rat.rat',sK12))),s('type.rat.rat',sK12))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X1),s('type.rat.rat',X0))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X2),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X1),s('type.rat.rat',X0))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X0),s('type.rat.rat',X1)))) ) | $spl81),
  inference(superposition,[],[f13186,f372])).
fof(f14260,plain,(
  ( ! [X127,X128] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X127),s('type.rat.rat',X128))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X127),s('type.rat.rat',X128))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X127),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X128),s('type.rat.rat',sK12))),s('type.rat.rat',sK12)))))) ) | $spl81),
  inference(superposition,[],[f13270,f13249])).
fof(f14280,plain,(
  ( ! [X39,X41,X38,X40] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X40),s('type.rat.rat',X41))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X39),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X38),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X41),s('type.rat.rat',sK12))))))),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X39),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X38),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X40),s('type.rat.rat',sK12))))))),s('type.rat.rat',sK12))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X38),s('type.rat.rat',X39))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) ) | $spl81),
  inference(forward_demodulation,[],[f14279,f3518])).
fof(f14279,plain,(
  ( ! [X39,X41,X38,X40] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X40),s('type.rat.rat',X41))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X39),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',X38))),s('type.rat.rat',X41))))),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X39),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X38),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X40),s('type.rat.rat',sK12))))))),s('type.rat.rat',sK12))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X38),s('type.rat.rat',X39))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) ) | $spl81),
  inference(forward_demodulation,[],[f14278,f4016])).
fof(f14278,plain,(
  ( ! [X39,X41,X38,X40] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X40),s('type.rat.rat',X41))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X41),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X39),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',X38))))),s('type.rat.rat',sK12))))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X39),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X38),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X40),s('type.rat.rat',sK12))))))),s('type.rat.rat',sK12))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X38),s('type.rat.rat',X39))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) ) | $spl81),
  inference(forward_demodulation,[],[f14277,f3518])).
fof(f14277,plain,(
  ( ! [X39,X41,X38,X40] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X40),s('type.rat.rat',X41))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X41),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X39),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',X38))))),s('type.rat.rat',sK12))))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X39),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',X38))),s('type.rat.rat',X40))))),s('type.rat.rat',sK12))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X38),s('type.rat.rat',X39))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) ) | $spl81),
  inference(forward_demodulation,[],[f14276,f4016])).
fof(f14276,plain,(
  ( ! [X39,X41,X38,X40] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X40),s('type.rat.rat',X41))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X41),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X39),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',X38))))),s('type.rat.rat',sK12))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X40),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X39),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',X38))))),s('type.rat.rat',sK12))))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X38),s('type.rat.rat',X39))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) ) | $spl81),
  inference(forward_demodulation,[],[f14226,f4016])).
fof(f14226,plain,(
  ( ! [X39,X41,X38,X40] : (~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X38),s('type.rat.rat',X39))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X40),s('type.rat.rat',X41))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X41),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X38),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X39),s('type.rat.rat',sK12))),s('type.rat.rat',sK12))))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X40),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X38),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X39),s('type.rat.rat',sK12))),s('type.rat.rat',sK12)))))))))) ) | $spl81),
  inference(superposition,[],[f421,f13249])).
fof(f14275,plain,(
  ( ! [X37,X35,X38,X36] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X37),s('type.rat.rat',X38))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X36),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X35),s('type.rat.rat',X38))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X36),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X35),s('type.rat.rat',X37))))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X35),s('type.rat.rat',X36))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) ) | $spl81),
  inference(forward_demodulation,[],[f14274,f3518])).
fof(f14274,plain,(
  ( ! [X37,X35,X38,X36] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X37),s('type.rat.rat',X38))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X38),s('type.rat.rat',X36))),s('type.rat.rat',X35))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X36),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X35),s('type.rat.rat',X37))))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X35),s('type.rat.rat',X36))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) ) | $spl81),
  inference(forward_demodulation,[],[f14273,f3518])).
fof(f14273,plain,(
  ( ! [X37,X35,X38,X36] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X37),s('type.rat.rat',X38))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X38),s('type.rat.rat',X36))),s('type.rat.rat',X35))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X37),s('type.rat.rat',X36))),s('type.rat.rat',X35))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X35),s('type.rat.rat',X36))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) ) | $spl81),
  inference(forward_demodulation,[],[f14271,f14268])).
fof(f14271,plain,(
  ( ! [X37,X35,X38,X36] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X37),s('type.rat.rat',X38))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X38),s('type.rat.rat',X36))),s('type.rat.rat',X35))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X35),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X37),s('type.rat.rat',X36))))))),s('type.rat.rat',sK12))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X35),s('type.rat.rat',X36))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) ) | $spl81),
  inference(backward_demodulation,[],[f14268,f14170])).
fof(f14268,plain,(
  ( ! [X12,X13] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X13),s('type.rat.rat',X12))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X12),s('type.rat.rat',X13))))),s('type.rat.rat',sK12)))) ) | $spl81),
  inference(forward_demodulation,[],[f14267,f13249])).
fof(f14267,plain,(
  ( ! [X12,X13] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X12),s('type.rat.rat',X13))))),s('type.rat.rat',sK12))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X13),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X12),s('type.rat.rat',sK12))),s('type.rat.rat',sK12)))))) ) | $spl81),
  inference(forward_demodulation,[],[f14218,f4016])).
fof(f14218,plain,(
  ( ! [X12,X13] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X13),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X12),s('type.rat.rat',sK12))),s('type.rat.rat',sK12))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X13),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',X12))),s('type.rat.rat',sK12)))))) ) | $spl81),
  inference(superposition,[],[f13248,f13249])).
fof(f14209,plain,(
  ( ! [X4,X3] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X3),s('type.rat.rat',X4))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X4),s('type.rat.rat',sK12))),s('type.rat.rat',sK12))),s('type.rat.rat',X3)))) ) | $spl81),
  inference(superposition,[],[f13249,f372])).
fof(f14208,plain,(
  ( ! [X6,X4,X5] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X6),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X4),s('type.rat.rat',X5))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X6),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X4),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X5),s('type.rat.rat',sK12))))),s('type.rat.rat',sK12)))))) ) | $spl81),
  inference(superposition,[],[f13249,f420])).
fof(f14156,plain,(
  ( ! [X118,X119] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X118),s('type.rat.rat',X119))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X118),s('type.rat.rat',X119))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X118),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',X119))),s('type.rat.rat',sK12)))))) ) | $spl81),
  inference(superposition,[],[f13270,f13248])).
fof(f14171,plain,(
  ( ! [X114,X115] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X115),s('type.rat.rat',X114))))),s('type.rat.rat',sK12))) | s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X114),s('type.rat.rat',X115))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X114),s('type.rat.rat',X115)))))))) ) | $spl81),
  inference(forward_demodulation,[],[f14154,f4016])).
fof(f14154,plain,(
  ( ! [X114,X115] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X114),s('type.rat.rat',X115))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X114),s('type.rat.rat',X115))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X114),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',X115))),s('type.rat.rat',sK12)))))) ) | $spl81),
  inference(superposition,[],[f13038,f13248])).
fof(f14170,plain,(
  ( ! [X37,X35,X38,X36] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X37),s('type.rat.rat',X38))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X35),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X38),s('type.rat.rat',X36))))))),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X35),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X37),s('type.rat.rat',X36))))))),s('type.rat.rat',sK12))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X35),s('type.rat.rat',X36))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) ) | $spl81),
  inference(forward_demodulation,[],[f14169,f3518])).
fof(f14169,plain,(
  ( ! [X37,X35,X38,X36] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X37),s('type.rat.rat',X38))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X36),s('type.rat.rat',X35))),s('type.rat.rat',X38))))),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X35),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X37),s('type.rat.rat',X36))))))),s('type.rat.rat',sK12))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X35),s('type.rat.rat',X36))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) ) | $spl81),
  inference(forward_demodulation,[],[f14168,f4016])).
fof(f14168,plain,(
  ( ! [X37,X35,X38,X36] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X37),s('type.rat.rat',X38))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X38),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X36),s('type.rat.rat',X35))))),s('type.rat.rat',sK12))))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X35),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X37),s('type.rat.rat',X36))))))),s('type.rat.rat',sK12))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X35),s('type.rat.rat',X36))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) ) | $spl81),
  inference(forward_demodulation,[],[f14167,f3518])).
fof(f14167,plain,(
  ( ! [X37,X35,X38,X36] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X37),s('type.rat.rat',X38))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X38),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X36),s('type.rat.rat',X35))))),s('type.rat.rat',sK12))))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X36),s('type.rat.rat',X35))),s('type.rat.rat',X37))))),s('type.rat.rat',sK12))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X35),s('type.rat.rat',X36))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) ) | $spl81),
  inference(forward_demodulation,[],[f14166,f4016])).
fof(f14166,plain,(
  ( ! [X37,X35,X38,X36] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X37),s('type.rat.rat',X38))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X38),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X36),s('type.rat.rat',X35))))),s('type.rat.rat',sK12))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X37),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X36),s('type.rat.rat',X35))))),s('type.rat.rat',sK12))))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X35),s('type.rat.rat',X36))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) ) | $spl81),
  inference(forward_demodulation,[],[f14124,f4016])).
fof(f14124,plain,(
  ( ! [X37,X35,X38,X36] : (~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X35),s('type.rat.rat',X36))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X37),s('type.rat.rat',X38))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X38),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X35),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',X36))),s('type.rat.rat',sK12))))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X37),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X35),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',X36))),s('type.rat.rat',sK12)))))))))) ) | $spl81),
  inference(superposition,[],[f421,f13248])).
fof(f14163,plain,(
  ( ! [X2,X0,X1] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X1),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X2),s('type.rat.rat',X0))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X0),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X2),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',X1))))),s('type.rat.rat',sK12)))))) ) | $spl81),
  inference(forward_demodulation,[],[f14162,f3518])).
fof(f14162,plain,(
  ( ! [X2,X0,X1] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X0),s('type.rat.rat',X1))),s('type.rat.rat',X2))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X0),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X2),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',X1))))),s('type.rat.rat',sK12)))))) ) | $spl81),
  inference(forward_demodulation,[],[f14112,f3785])).
fof(f14112,plain,(
  ( ! [X2,X0,X1] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X0),s('type.rat.rat',X1))),s('type.rat.rat',X2))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X0),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',X1))),s('type.rat.rat',sK12))),s('type.rat.rat',X2)))))) ) | $spl81),
  inference(superposition,[],[f420,f13248])).
fof(f14161,plain,(
  ( ! [X6,X8,X7] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X6),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X8),s('type.rat.rat',X7))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X6),s('type.rat.rat',X7))),s('type.rat.rat',X8)))) ) | $spl81),
  inference(forward_demodulation,[],[f14160,f13248])).
fof(f14160,plain,(
  ( ! [X6,X8,X7] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X6),s('type.rat.rat',X7))),s('type.rat.rat',X8))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X6),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X8),s('type.rat.rat',X7))))),s('type.rat.rat',sK12)))))) ) | $spl81),
  inference(forward_demodulation,[],[f14110,f4016])).
fof(f14110,plain,(
  ( ! [X6,X8,X7] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X6),s('type.rat.rat',X7))),s('type.rat.rat',X8))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X6),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X7),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',X8))),s('type.rat.rat',sK12)))))))) ) | $spl81),
  inference(superposition,[],[f13248,f420])).
fof(f14108,plain,(
  ( ! [X2,X3] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X2),s('type.rat.rat',X3))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',X3))),s('type.rat.rat',sK12))),s('type.rat.rat',X2)))) ) | $spl81),
  inference(superposition,[],[f13248,f372])).
fof(f14157,plain,(
  ( ! [X4,X5] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X5),s('type.rat.rat',X4))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X5),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',X4))),s('type.rat.rat',sK12)))))) ) | $spl81),
  inference(forward_demodulation,[],[f14106,f373])).
fof(f14106,plain,(
  ( ! [X4,X5] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X5),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X4))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X5),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',X4))),s('type.rat.rat',sK12)))))) ) | $spl81),
  inference(superposition,[],[f13248,f373])).
fof(f13593,plain,(
  ( ! [X24,X23,X22] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X23),s('type.rat.rat',X24))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X22),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',X24))))),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X22),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',X23))))),s('type.rat.rat',sK12))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X22),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) ) | $spl81),
  inference(forward_demodulation,[],[f13592,f4016])).
fof(f13592,plain,(
  ( ! [X24,X23,X22] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X23),s('type.rat.rat',X24))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X24),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X22),s('type.rat.rat',sK12))),s('type.rat.rat',sK12))))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X22),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',X23))))),s('type.rat.rat',sK12))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X22),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) ) | $spl81),
  inference(forward_demodulation,[],[f13591,f4016])).
fof(f13591,plain,(
  ( ! [X24,X23,X22] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X23),s('type.rat.rat',X24))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X24),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X22),s('type.rat.rat',sK12))),s('type.rat.rat',sK12))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X23),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X22),s('type.rat.rat',sK12))),s('type.rat.rat',sK12))))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X22),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) ) | $spl81),
  inference(forward_demodulation,[],[f13561,f3785])).
fof(f13561,plain,(
  ( ! [X24,X23,X22] : (~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X22),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X23),s('type.rat.rat',X24))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X24),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat',X22))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X23),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat',X22)))))))) ) | $spl81),
  inference(superposition,[],[f421,f13039])).
fof(f13343,plain,(
  ( ! [X17,X15,X16] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X16),s('type.rat.rat',X17))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X15),s('type.rat.rat',X17))))),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X15),s('type.rat.rat',X16))))),s('type.rat.rat',sK12))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X15),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) ) | $spl81),
  inference(forward_demodulation,[],[f13342,f4016])).
fof(f13342,plain,(
  ( ! [X17,X15,X16] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X16),s('type.rat.rat',X17))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X17),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',X15))),s('type.rat.rat',sK12))))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X15),s('type.rat.rat',X16))))),s('type.rat.rat',sK12))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X15),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) ) | $spl81),
  inference(forward_demodulation,[],[f13341,f4016])).
fof(f13341,plain,(
  ( ! [X17,X15,X16] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X16),s('type.rat.rat',X17))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X17),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',X15))),s('type.rat.rat',sK12))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X16),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',X15))),s('type.rat.rat',sK12))))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X15),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) ) | $spl81),
  inference(forward_demodulation,[],[f13327,f3474])).
fof(f13327,plain,(
  ( ! [X17,X15,X16] : (~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X15),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X16),s('type.rat.rat',X17))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X17),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X15),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X16),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X15),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12)))))))))) ) | $spl81),
  inference(superposition,[],[f421,f13037])).
fof(f13249,plain,(
  ( ! [X0,X1] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X0),s('type.rat.rat',X1))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X0),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X1),s('type.rat.rat',sK12))),s('type.rat.rat',sK12)))))) ) | $spl81),
  inference(forward_demodulation,[],[f13210,f3785])).
fof(f13210,plain,(
  ( ! [X0,X1] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X0),s('type.rat.rat',X1))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X0),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat',X1)))))) ) | $spl81),
  inference(superposition,[],[f420,f13037])).
fof(f13248,plain,(
  ( ! [X4,X3] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X3),s('type.rat.rat',X4))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X3),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',X4))),s('type.rat.rat',sK12)))))) ) | $spl81),
  inference(forward_demodulation,[],[f13209,f3474])).
fof(f13209,plain,(
  ( ! [X4,X3] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X3),s('type.rat.rat',X4))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X3),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X4),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12)))))))) ) | $spl81),
  inference(superposition,[],[f13037,f420])).
fof(f13142,plain,(
  ( ! [X184,X183] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X183),s('type.rat.rat',X184))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X183),s('type.rat.rat',X184))))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X183),s('type.rat.rat',X184))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X183),s('type.rat.rat',X184))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X184),s('type.rat.rat',X183)))) ) | ($spl47 | $spl81)),
  inference(backward_demodulation,[],[f13036,f9587])).
fof(f13171,plain,(
  ( ! [X35,X36] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X36),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X36))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',X35))),s('type.rat.rat',sK12))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X35),s('type.rat.rat',X35))),s('type.rat.rat',X36)))) ) | $spl81),
  inference(forward_demodulation,[],[f13170,f13036])).
fof(f13170,plain,(
  ( ! [X35,X36] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',X35))),s('type.rat.rat',sK12))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X35),s('type.rat.rat',X35))),s('type.rat.rat',X36))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X36),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X36)))))) ) | $spl81),
  inference(forward_demodulation,[],[f13137,f3474])).
fof(f13137,plain,(
  ( ! [X35,X36] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X35),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X35),s('type.rat.rat',X35))),s('type.rat.rat',X36))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X36),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X36)))))) ) | $spl81),
  inference(backward_demodulation,[],[f13036,f9536])).
fof(f13165,plain,(
  ( ! [X35,X36] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',X35))),s('type.rat.rat',sK12))) | s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X36),s('type.rat.rat',X36))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X35),s('type.rat.rat',X35))),s('type.rat.rat',X36)))) ) | $spl81),
  inference(forward_demodulation,[],[f13164,f3474])).
fof(f13164,plain,(
  ( ! [X35,X36] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X35),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))))) | s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X36),s('type.rat.rat',X36))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X35),s('type.rat.rat',X35))),s('type.rat.rat',X36)))) ) | $spl81),
  inference(forward_demodulation,[],[f13107,f13036])).
fof(f13107,plain,(
  ( ! [X35,X36] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X36),s('type.rat.rat',X36))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X35),s('type.rat.rat',X35))),s('type.rat.rat',X36))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X35),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) ) | $spl81),
  inference(backward_demodulation,[],[f13036,f9189])).
fof(f13085,plain,(
  ( ! [X21] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X21),s('type.rat.rat',X21))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X21),s('type.rat.rat',X21))))))) | s('type.rat.rat',X21) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | ($spl47 | $spl81)),
  inference(backward_demodulation,[],[f13036,f8921])).
fof(f13155,plain,(
  ( ! [X2,X3] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X2),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',X3))))),s('type.rat.rat',sK12))) | s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X3),s('type.rat.rat',X2))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X3),s('type.rat.rat',X2)))))))) ) | $spl81),
  inference(forward_demodulation,[],[f13154,f4016])).
fof(f13154,plain,(
  ( ! [X2,X3] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X3),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X2),s('type.rat.rat',sK12))),s('type.rat.rat',sK12))))) | s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X3),s('type.rat.rat',X2))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X3),s('type.rat.rat',X2)))))))) ) | $spl81),
  inference(forward_demodulation,[],[f13153,f3785])).
fof(f13153,plain,(
  ( ! [X2,X3] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X3),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat',X2))))) | s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X3),s('type.rat.rat',X2))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X3),s('type.rat.rat',X2)))))))) ) | $spl81),
  inference(forward_demodulation,[],[f13152,f3518])).
fof(f13152,plain,(
  ( ! [X2,X3] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X2),s('type.rat.rat',X3))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))))) | s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X3),s('type.rat.rat',X2))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X3),s('type.rat.rat',X2)))))))) ) | $spl81),
  inference(forward_demodulation,[],[f13075,f13036])).
fof(f13075,plain,(
  ( ! [X2,X3] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X3),s('type.rat.rat',X2))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X3),s('type.rat.rat',X2))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X2),s('type.rat.rat',X3))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) ) | $spl81),
  inference(backward_demodulation,[],[f13036,f8645])).
fof(f12972,plain,(
  ( ! [X14,X12,X13,X11] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X12),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X13),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat',X14))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat',X12))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X13),s('type.rat.rat',X14)))))) )),
  inference(forward_demodulation,[],[f12924,f3718])).
fof(f12924,plain,(
  ( ! [X14,X12,X13,X11] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat',X12))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X13),s('type.rat.rat',X14))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X12),s('type.rat.rat',X13))))),s('type.rat.rat',X14)))) )),
  inference(superposition,[],[f420,f420])).
fof(f421,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X2),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X0),s('type.rat.rat',X1))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X1),s('type.rat.rat',X2))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X0),s('type.rat.rat',X2)))))) )),
  inference(cnf_transformation,[],[f181])).
fof(f181,plain,(
  ! [X0,X1,X2] : (~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X2),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X0),s('type.rat.rat',X1))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X1),s('type.rat.rat',X2))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X0),s('type.rat.rat',X2))))))),
  inference(ennf_transformation,[],[f140])).
fof(f140,plain,(
  ! [X0,X1,X2] : (p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X2),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) => s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X0),s('type.rat.rat',X1))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X1),s('type.rat.rat',X2))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X0),s('type.rat.rat',X2))))))),
  inference(rectify,[],[f48])).
fof(f48,axiom,(
  ! [X6,X7,X8] : (p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X8),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) => s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X6),s('type.rat.rat',X7))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X7),s('type.rat.rat',X8))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X6),s('type.rat.rat',X8))))))),
  file('thm.rat.RAT_RDIV_LES_NEG','thm.rat.RAT_LES_RMUL_NEG')).
fof(f499,plain,(
  ( ! [X0] : (sP0(X0,'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) )),
  inference(unit_resulting_resolution,[],[f286,f387])).
fof(f501,plain,(
  ( ! [X0] : (sP0('const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),X0)) )),
  inference(unit_resulting_resolution,[],[f286,f388])).
fof(f503,plain,(
  ( ! [X0,X1] : (sP4(X0,X1,'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) )),
  inference(unit_resulting_resolution,[],[f286,f436])).
fof(f507,plain,(
  ( ! [X0,X1] : (sP3(X0,X1,'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) )),
  inference(unit_resulting_resolution,[],[f286,f440])).
fof(f511,plain,(
  ( ! [X0,X1] : (sP2(X0,X1,'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) )),
  inference(unit_resulting_resolution,[],[f286,f444])).
fof(f513,plain,(
  ( ! [X0,X1] : (sP2(X0,'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),X1)) )),
  inference(unit_resulting_resolution,[],[f286,f445])).
fof(f515,plain,(
  ( ! [X0,X1] : (sP2('const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),X0,X1)) )),
  inference(unit_resulting_resolution,[],[f286,f446])).
fof(f517,plain,(
  ( ! [X0,X1] : (sP6(X0,X1,'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) )),
  inference(unit_resulting_resolution,[],[f286,f459])).
fof(f519,plain,(
  ( ! [X0,X1] : (sP6(X0,'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),X1)) )),
  inference(unit_resulting_resolution,[],[f286,f460])).
fof(f523,plain,(
  ( ! [X0,X1] : (sP8(X0,'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),X1)) )),
  inference(unit_resulting_resolution,[],[f286,f477])).
fof(f536,plain,(
  s(bool,'T_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))),
  inference(unit_resulting_resolution,[],[f286,f311])).
fof(f562,plain,(
  ( ! [X0] : (sP1('const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),X0) | p(s(bool,X0))) )),
  inference(subsumption_resolution,[],[f561,f288])).
fof(f561,plain,(
  ( ! [X0] : (~p(s(bool,'T_0')) | p(s(bool,X0)) | sP1('const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),X0)) )),
  inference(superposition,[],[f403,f536])).
fof(f565,plain,(
  sP1('const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),'F_0')),
  inference(unit_resulting_resolution,[],[f496,f562])).
fof(f570,plain,(
  ( ! [X0] : (sP1(X0,'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | p(s(bool,X0))) )),
  inference(subsumption_resolution,[],[f569,f288])).
fof(f569,plain,(
  ( ! [X0] : (~p(s(bool,'T_0')) | p(s(bool,X0)) | sP1(X0,'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) )),
  inference(superposition,[],[f406,f536])).
fof(f584,plain,(
  sP1('F_0','const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))),
  inference(unit_resulting_resolution,[],[f496,f570])).
fof(f593,plain,(
  ( ! [X0,X1] : (~p(s(bool,X0)) | sP7('const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),X1,X0)) )),
  inference(subsumption_resolution,[],[f592,f288])).
fof(f592,plain,(
  ( ! [X0,X1] : (~p(s(bool,'T_0')) | ~p(s(bool,X0)) | sP7('const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),X1,X0)) )),
  inference(superposition,[],[f463,f536])).
fof(f598,plain,(
  ( ! [X0,X1] : (~p(s(bool,X0)) | sP7('const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),X0,X1)) )),
  inference(subsumption_resolution,[],[f597,f288])).
fof(f597,plain,(
  ( ! [X0,X1] : (~p(s(bool,'T_0')) | ~p(s(bool,X0)) | sP7('const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),X0,X1)) )),
  inference(superposition,[],[f464,f536])).
fof(f606,plain,(
  ( ! [X0] : (sP7('const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),X0,'T_0')) )),
  inference(unit_resulting_resolution,[],[f288,f593])).
fof(f608,plain,(
  ( ! [X0] : (sP7('const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),X0,'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) )),
  inference(subsumption_resolution,[],[f607,f288])).
fof(f607,plain,(
  ( ! [X0] : (~p(s(bool,'T_0')) | sP7('const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),X0,'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) )),
  inference(superposition,[],[f593,f536])).
fof(f619,plain,(
  ( ! [X0,X1] : (sP9('const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),X1,X0) | p(s(bool,X0))) )),
  inference(subsumption_resolution,[],[f618,f288])).
fof(f618,plain,(
  ( ! [X0,X1] : (~p(s(bool,'T_0')) | p(s(bool,X0)) | sP9('const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),X1,X0)) )),
  inference(superposition,[],[f480,f536])).
fof(f623,plain,(
  ( ! [X0] : (sP7('const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),'T_0',X0)) )),
  inference(unit_resulting_resolution,[],[f288,f598])).
fof(f625,plain,(
  ( ! [X0] : (sP7('const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),X0)) )),
  inference(subsumption_resolution,[],[f624,f288])).
fof(f624,plain,(
  ( ! [X0] : (~p(s(bool,'T_0')) | sP7('const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),X0)) )),
  inference(superposition,[],[f598,f536])).
fof(f630,plain,(
  ( ! [X0,X1] : (sP9('const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),X0,X1) | ~p(s(bool,X0))) )),
  inference(subsumption_resolution,[],[f629,f288])).
fof(f629,plain,(
  ( ! [X0,X1] : (~p(s(bool,'T_0')) | ~p(s(bool,X0)) | sP9('const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),X0,X1)) )),
  inference(superposition,[],[f481,f536])).
fof(f649,plain,(
  ( ! [X0] : (sP9('T_0','const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),X0)) )),
  inference(unit_resulting_resolution,[],[f523,f288,f485])).
fof(f651,plain,(
  ( ! [X0,X1] : (sP9('const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),X0,X1) | ~sP8('const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),X0,X1)) )),
  inference(subsumption_resolution,[],[f650,f288])).
fof(f650,plain,(
  ( ! [X0,X1] : (~p(s(bool,'T_0')) | ~sP8('const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),X0,X1) | sP9('const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),X0,X1)) )),
  inference(superposition,[],[f485,f536])).
fof(f654,plain,(
  ( ! [X0] : (sP9('const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),X0,'F_0')) )),
  inference(unit_resulting_resolution,[],[f496,f619])).
fof(f663,plain,(
  ( ! [X0] : (sP7('T_0',X0,'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) )),
  inference(unit_resulting_resolution,[],[f517,f288,f486])).
fof(f665,plain,(
  ( ! [X0] : (sP7('T_0','const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),X0)) )),
  inference(unit_resulting_resolution,[],[f519,f288,f486])).
fof(f667,plain,(
  ( ! [X0,X1] : (sP7('const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),X0,X1) | ~sP6('const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),X0,X1)) )),
  inference(subsumption_resolution,[],[f666,f288])).
fof(f666,plain,(
  ( ! [X0,X1] : (~p(s(bool,'T_0')) | ~sP6('const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),X0,X1) | sP7('const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),X0,X1)) )),
  inference(superposition,[],[f486,f536])).
fof(f724,plain,(
  ( ! [X0] : (sP9('const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),'T_0',X0)) )),
  inference(unit_resulting_resolution,[],[f288,f630])).
fof(f766,plain,(
  sP5('T_0','const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),'T_0')),
  inference(unit_resulting_resolution,[],[f288,f536,f448])).
fof(f767,plain,(
  sP5('T_0','T_0','const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))),
  inference(unit_resulting_resolution,[],[f288,f536,f448])).
fof(f786,plain,(
  ~sP5('F_0','const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),'T_0')),
  inference(unit_resulting_resolution,[],[f496,f536,f450])).
fof(f788,plain,(
  ~sP5('F_0','T_0','const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))),
  inference(unit_resulting_resolution,[],[f496,f536,f450])).
fof(f842,plain,(
  ( ! [X0,X1] : (~sP5(X0,'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),X1) | p(s(bool,X1)) | ~p(s(bool,X0))) )),
  inference(subsumption_resolution,[],[f838,f288])).
fof(f838,plain,(
  ( ! [X0,X1] : (~p(s(bool,'T_0')) | ~p(s(bool,X0)) | p(s(bool,X1)) | ~sP5(X0,'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),X1)) )),
  inference(superposition,[],[f431,f536])).
fof(f863,plain,(
  ( ! [X0,X1] : (~sP4(X0,'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),X1) | p(s(bool,X1)) | ~p(s(bool,X0))) )),
  inference(subsumption_resolution,[],[f857,f288])).
fof(f857,plain,(
  ( ! [X0,X1] : (~p(s(bool,'T_0')) | ~p(s(bool,X0)) | p(s(bool,X1)) | ~sP4(X0,'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),X1)) )),
  inference(superposition,[],[f435,f536])).
fof(f886,plain,(
  ( ! [X0,X1] : (~sP3(X0,'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),X1) | p(s(bool,X1)) | ~p(s(bool,X0))) )),
  inference(subsumption_resolution,[],[f880,f288])).
fof(f880,plain,(
  ( ! [X0,X1] : (~p(s(bool,'T_0')) | ~p(s(bool,X0)) | p(s(bool,X1)) | ~sP3(X0,'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),X1)) )),
  inference(superposition,[],[f439,f536])).
fof(f946,plain,(
  ( ! [X0,X1] : (~sP6('const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),X0,X1) | p(s(bool,X1)) | p(s(bool,X0))) )),
  inference(subsumption_resolution,[],[f940,f288])).
fof(f940,plain,(
  ( ! [X0,X1] : (~p(s(bool,'T_0')) | p(s(bool,X0)) | p(s(bool,X1)) | ~sP6('const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),X0,X1)) )),
  inference(superposition,[],[f458,f536])).
fof(f1009,plain,(
  ( ! [X0,X1] : (~sP7('const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),X1,X0) | p(s(bool,X1)) | p(s(bool,X0))) )),
  inference(subsumption_resolution,[],[f1003,f288])).
fof(f1003,plain,(
  ( ! [X0,X1] : (~p(s(bool,'T_0')) | p(s(bool,X0)) | p(s(bool,X1)) | ~sP7('const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),X1,X0)) )),
  inference(superposition,[],[f465,f536])).
fof(f1113,plain,(
  ( ! [X0,X1] : (~sP8(X1,X0,'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | ~p(s(bool,X1)) | p(s(bool,X0))) )),
  inference(subsumption_resolution,[],[f1105,f288])).
fof(f1105,plain,(
  ( ! [X0,X1] : (~p(s(bool,'T_0')) | p(s(bool,X0)) | ~p(s(bool,X1)) | ~sP8(X1,X0,'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) )),
  inference(superposition,[],[f475,f536])).
fof(f1146,plain,(
  ( ! [X0,X1] : (~sP9('const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),X1,X0) | p(s(bool,X1)) | ~p(s(bool,X0))) )),
  inference(subsumption_resolution,[],[f1139,f288])).
fof(f1139,plain,(
  ( ! [X0,X1] : (~p(s(bool,'T_0')) | ~p(s(bool,X0)) | p(s(bool,X1)) | ~sP9('const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),X1,X0)) )),
  inference(superposition,[],[f482,f536])).
fof(f1188,plain,(
  sP5('const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),'T_0','T_0')),
  inference(unit_resulting_resolution,[],[f514,f507,f502,f288,f432])).
fof(f1190,plain,(
  sP5('const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),'T_0')),
  inference(unit_resulting_resolution,[],[f514,f507,f503,f288,f432])).
fof(f1199,plain,(
  ~sP3('const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),'T_0','F_0')),
  inference(unit_resulting_resolution,[],[f514,f505,f786,f288,f432])).
fof(f1209,plain,(
  ( ! [X0,X1] : (sP5(X0,X1,'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | ~sP4(X0,'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),X1) | ~sP3(X1,'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),X0)) )),
  inference(subsumption_resolution,[],[f1208,f515])).
fof(f1208,plain,(
  ( ! [X0,X1] : (sP5(X0,X1,'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | ~sP4(X0,'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),X1) | ~sP3(X1,'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),X0) | ~sP2('const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),X1,X0)) )),
  inference(subsumption_resolution,[],[f1202,f288])).
fof(f1202,plain,(
  ( ! [X0,X1] : (~p(s(bool,'T_0')) | sP5(X0,X1,'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | ~sP4(X0,'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),X1) | ~sP3(X1,'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),X0) | ~sP2('const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),X1,X0)) )),
  inference(superposition,[],[f432,f536])).
fof(f1230,plain,(
  sP5('const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),'F_0','F_0')),
  inference(unit_resulting_resolution,[],[f511,f507,f504,f496,f433])).
fof(f1237,plain,(
  ( ! [X0] : (sP5('const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),'F_0','const.rat.rat_les_2'(s('type.rat.rat',X0),s('type.rat.rat',X0)))) )),
  inference(unit_resulting_resolution,[],[f511,f507,f525,f496,f433])).
fof(f1241,plain,(
  sP5('F_0','F_0','const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))),
  inference(unit_resulting_resolution,[],[f515,f509,f505,f496,f433])).
fof(f1245,plain,(
  ( ! [X0] : (sP5('const.rat.rat_les_2'(s('type.rat.rat',X0),s('type.rat.rat',X0)),'F_0','const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) )),
  inference(unit_resulting_resolution,[],[f515,f509,f526,f496,f433])).
fof(f1269,plain,(
  ( ! [X0] : (sP5('F_0','const.rat.rat_les_2'(s('type.rat.rat',X0),s('type.rat.rat',X0)),'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) )),
  inference(unit_resulting_resolution,[],[f515,f528,f505,f496,f434])).
fof(f1282,plain,(
  ~sP3('T_0','const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),'F_0')),
  inference(unit_resulting_resolution,[],[f515,f788,f502,f496,f434])).
fof(f1290,plain,(
  sP5('F_0','const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),'F_0')),
  inference(unit_resulting_resolution,[],[f513,f508,f504,f496,f434])).
fof(f1294,plain,(
  ( ! [X0] : (sP5('F_0','const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),'const.rat.rat_les_2'(s('type.rat.rat',X0),s('type.rat.rat',X0)))) )),
  inference(unit_resulting_resolution,[],[f513,f527,f525,f496,f434])).
fof(f1434,plain,(
  ( ! [X0,X1] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X1),s('type.rat.rat',X0))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X1),s('type.rat.rat',X0))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X0),s('type.rat.rat',X1)))) )),
  inference(superposition,[],[f308,f372])).
fof(f1436,plain,(
  ( ! [X4] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X4),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X4))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X4),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) )),
  inference(superposition,[],[f308,f295])).
fof(f1466,plain,(
  ( ! [X4,X5] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X4),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X5),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X4),s('type.rat.rat',X5))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X4),s('type.rat.rat',X5)))) )),
  inference(forward_demodulation,[],[f1441,f373])).
fof(f1441,plain,(
  ( ! [X4,X5] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X4),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X5),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X4),s('type.rat.rat',X5))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X4),s('type.rat.rat',X5)))) )),
  inference(superposition,[],[f308,f420])).
fof(f1488,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X1),s('type.rat.rat',X0))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X2),s('type.rat.rat',X3))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X3),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X0),s('type.rat.rat',X1))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X2),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X0),s('type.rat.rat',X1)))))))) )),
  inference(superposition,[],[f421,f372])).
fof(f2251,plain,(
  ( ! [X88,X87,X89] : (sP7('const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),X88,X87) | s(bool,X87) = s(bool,X89) | s(bool,'T_0') = s(bool,X89)) )),
  inference(subsumption_resolution,[],[f1968,f288])).
fof(f1968,plain,(
  ( ! [X88,X87,X89] : (~p(s(bool,'T_0')) | sP7('const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),X88,X87) | s(bool,X87) = s(bool,X89) | s(bool,'T_0') = s(bool,X89)) )),
  inference(superposition,[],[f593,f674])).
fof(f2252,plain,(
  ( ! [X92,X90,X91] : (sP7('const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),X90,X91) | s(bool,X90) = s(bool,X92) | s(bool,'T_0') = s(bool,X92)) )),
  inference(subsumption_resolution,[],[f1969,f288])).
fof(f1969,plain,(
  ( ! [X92,X90,X91] : (~p(s(bool,'T_0')) | sP7('const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),X90,X91) | s(bool,X90) = s(bool,X92) | s(bool,'T_0') = s(bool,X92)) )),
  inference(superposition,[],[f598,f674])).
fof(f2253,plain,(
  ( ! [X107,X105,X106,X104] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X105),s('type.rat.rat',X106))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X106),s('type.rat.rat',X104))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X105),s('type.rat.rat',X104))))) | s(bool,X107) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X104),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X107)) )),
  inference(subsumption_resolution,[],[f1976,f288])).
fof(f1976,plain,(
  ( ! [X107,X105,X106,X104] : (~p(s(bool,'T_0')) | s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X105),s('type.rat.rat',X106))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X106),s('type.rat.rat',X104))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X105),s('type.rat.rat',X104))))) | s(bool,X107) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X104),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X107)) )),
  inference(superposition,[],[f421,f674])).
fof(f2861,plain,(
  ( ! [X6] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X6),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X6))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.rat.rat',X6)))) )),
  inference(superposition,[],[f308,f1308])).
fof(f3278,plain,(
  ( ! [X2,X0,X1] : (s('type.rat.rat',X2) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X1),s('type.rat.rat',X0))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X2),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X1),s('type.rat.rat',X0))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X0),s('type.rat.rat',X1)))) )),
  inference(superposition,[],[f1468,f372])).
fof(f3281,plain,(
  ( ! [X10,X8,X9] : (s('type.rat.rat',X10) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X9),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X10),s('type.rat.rat',X9))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X8),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X9),s('type.rat.rat',X8))))) | s('type.rat.rat',X8) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f1468,f1468])).
fof(f3291,plain,(
  ( ! [X10,X11] : (s('type.rat.rat',X11) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X11),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X10))))),s('type.rat.rat',X10))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X10)))) )),
  inference(superposition,[],[f1468,f1340])).
fof(f3348,plain,(
  ( ! [X8,X7,X9] : (s('type.rat.rat',X9) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X7),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X8),s('type.rat.rat',X9))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X7),s('type.rat.rat',X8))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X7),s('type.rat.rat',X8)))) )),
  inference(forward_demodulation,[],[f3290,f1409])).
fof(f3290,plain,(
  ( ! [X8,X7,X9] : (s('type.rat.rat',X9) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X7),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X8),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X9),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X7),s('type.rat.rat',X8))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X7),s('type.rat.rat',X8)))) )),
  inference(superposition,[],[f1468,f420])).
fof(f3353,plain,(
  ( ! [X39,X37,X38,X40] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X39),s('type.rat.rat',X40))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X40),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X37),s('type.rat.rat',X38))))),s('type.rat.rat',X37))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X39),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X37),s('type.rat.rat',X38))))),s('type.rat.rat',X37))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X38),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.rat.rat',X37) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(forward_demodulation,[],[f3352,f1409])).
fof(f3352,plain,(
  ( ! [X39,X37,X38,X40] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X39),s('type.rat.rat',X40))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X40),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X37),s('type.rat.rat',X38))),s('type.rat.rat',X37))))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X39),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X37),s('type.rat.rat',X38))))),s('type.rat.rat',X37))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X38),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.rat.rat',X37) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(forward_demodulation,[],[f3351,f1409])).
fof(f3351,plain,(
  ( ! [X39,X37,X38,X40] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X39),s('type.rat.rat',X40))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X40),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X37),s('type.rat.rat',X38))),s('type.rat.rat',X37))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X39),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X37),s('type.rat.rat',X38))),s('type.rat.rat',X37))))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X38),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.rat.rat',X37) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(forward_demodulation,[],[f3303,f1409])).
fof(f3303,plain,(
  ( ! [X39,X37,X38,X40] : (~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X38),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X39),s('type.rat.rat',X40))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X40),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X37),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X38),s('type.rat.rat',X37))))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X39),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X37),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X38),s('type.rat.rat',X37))))))))) | s('type.rat.rat',X37) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f421,f1468])).
fof(f3387,plain,(
  ( ! [X10,X8,X9] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X9),s('type.rat.rat',X10))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X9),s('type.rat.rat',X8))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X8),s('type.rat.rat',X10))))) | s('type.rat.rat',X8) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f1375,f1468])).
fof(f3473,plain,(
  ( ! [X14,X15,X16] : (s('type.rat.rat',X16) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X15),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X14),s('type.rat.rat',X16))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X14),s('type.rat.rat',X15))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X14),s('type.rat.rat',X15)))) )),
  inference(forward_demodulation,[],[f3409,f1409])).
fof(f3409,plain,(
  ( ! [X14,X15,X16] : (s('type.rat.rat',X16) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X15),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X14),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X16),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X14),s('type.rat.rat',X15))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X14),s('type.rat.rat',X15)))) )),
  inference(superposition,[],[f1375,f1468])).
fof(f3482,plain,(
  ( ! [X57,X54,X58,X56,X55] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X57),s('type.rat.rat',X58))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X58),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X54),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X55),s('type.rat.rat',X56))))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X57),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X54),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X55),s('type.rat.rat',X56))))))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X55),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X54),s('type.rat.rat',X56))))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) )),
  inference(forward_demodulation,[],[f3427,f420])).
fof(f3427,plain,(
  ( ! [X57,X54,X58,X56,X55] : (~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X55),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X54),s('type.rat.rat',X56))))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X57),s('type.rat.rat',X58))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X58),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X54),s('type.rat.rat',X55))),s('type.rat.rat',X56))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X57),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X54),s('type.rat.rat',X55))),s('type.rat.rat',X56)))))))) )),
  inference(superposition,[],[f421,f1375])).
fof(f3484,plain,(
  ( ! [X152,X151,X149,X150] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X149),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X150),s('type.rat.rat',X151))))) | s('type.rat.rat',X152) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X150),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X149),s('type.rat.rat',X151))))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X152),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X150),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X149),s('type.rat.rat',X151)))))))))) )),
  inference(forward_demodulation,[],[f3452,f420])).
fof(f3452,plain,(
  ( ! [X152,X151,X149,X150] : (s('type.rat.rat',X152) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X150),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X149),s('type.rat.rat',X151))))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X152),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X150),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X149),s('type.rat.rat',X151))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X149),s('type.rat.rat',X150))),s('type.rat.rat',X151)))) )),
  inference(superposition,[],[f1468,f1375])).
fof(f3502,plain,(
  ~sP5('T_0','const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),'F_0')),
  inference(unit_resulting_resolution,[],[f288,f496,f842])).
fof(f3508,plain,(
  ( ! [X10,X8,X9] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X10),s('type.rat.rat',X9))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X9),s('type.rat.rat',X8))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X10),s('type.rat.rat',X8))))) | s('type.rat.rat',X8) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f1385,f1468])).
fof(f3597,plain,(
  ( ! [X61,X59,X62,X60,X58] : (~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X60),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X58),s('type.rat.rat',X59))))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X61),s('type.rat.rat',X62))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X62),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X58),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X59),s('type.rat.rat',X60))))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X61),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X58),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X59),s('type.rat.rat',X60)))))))))) )),
  inference(superposition,[],[f421,f1385])).
fof(f3625,plain,(
  ( ! [X171,X169,X170,X168] : (s('type.rat.rat',X171) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X170),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X168),s('type.rat.rat',X169))))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X171),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X170),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X168),s('type.rat.rat',X169))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X168),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X169),s('type.rat.rat',X170)))))) )),
  inference(superposition,[],[f1468,f1385])).
fof(f3654,plain,(
  ( ! [X61,X59,X62,X60,X58] : (~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X59),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X60),s('type.rat.rat',X58))))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X61),s('type.rat.rat',X62))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X62),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X58),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X59),s('type.rat.rat',X60))))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X61),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X58),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X59),s('type.rat.rat',X60)))))))))) )),
  inference(superposition,[],[f421,f1385])).
fof(f3682,plain,(
  ( ! [X171,X169,X170,X168] : (s('type.rat.rat',X171) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X169),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X170),s('type.rat.rat',X168))))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X171),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X169),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X170),s('type.rat.rat',X168))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X168),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X169),s('type.rat.rat',X170)))))) )),
  inference(superposition,[],[f1468,f1385])).
fof(f3706,plain,(
  ( ! [X10,X8,X9] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X10),s('type.rat.rat',X9))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X8),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X9),s('type.rat.rat',X10))),s('type.rat.rat',X8))))) | s('type.rat.rat',X8) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(forward_demodulation,[],[f3566,f1410])).
fof(f3566,plain,(
  ( ! [X10,X8,X9] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X10),s('type.rat.rat',X9))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X8),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X9),s('type.rat.rat',X8))),s('type.rat.rat',X10))))) | s('type.rat.rat',X8) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f1385,f1468])).
fof(f3734,plain,(
  ~sP4('T_0','const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),'F_0')),
  inference(unit_resulting_resolution,[],[f288,f496,f863])).
fof(f3784,plain,(
  ( ! [X0,X1] : (s('type.rat.rat',X1) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X0),s('type.rat.rat',X1))),s('type.rat.rat',X0))) | s('type.rat.rat',X0) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f1409,f1468])).
fof(f3883,plain,(
  ~sP5('T_0','F_0','const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))),
  inference(unit_resulting_resolution,[],[f3734,f430])).
fof(f4012,plain,(
  ( ! [X12,X13,X11] : (s('type.rat.rat',X13) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat',X13))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X11),s('type.rat.rat',X12))))),s('type.rat.rat',X12))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X11),s('type.rat.rat',X12)))) )),
  inference(forward_demodulation,[],[f3937,f1409])).
fof(f3937,plain,(
  ( ! [X12,X13,X11] : (s('type.rat.rat',X13) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X13),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X11),s('type.rat.rat',X12))))))),s('type.rat.rat',X12))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X11),s('type.rat.rat',X12)))) )),
  inference(superposition,[],[f1410,f1468])).
fof(f4046,plain,(
  ~sP6('const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),'F_0','F_0')),
  inference(unit_resulting_resolution,[],[f496,f496,f946])).
fof(f4076,plain,(
  ~sP7('const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),'F_0','F_0')),
  inference(unit_resulting_resolution,[],[f4046,f453])).
fof(f4740,plain,(
  ( ! [X116,X115] : (s('type.rat.rat',X116) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X115),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X116),s('type.rat.rat',X115))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X115),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) )),
  inference(superposition,[],[f1468,f295])).
fof(f4784,plain,(
  ( ! [X6,X5] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X6),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X6))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X5),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X6),s('type.rat.rat',X5))))) | s('type.rat.rat',X5) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f308,f1468])).
fof(f4786,plain,(
  ( ! [X12,X10,X11] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X12),s('type.rat.rat',X10))))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X12),s('type.rat.rat',X10))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X10),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat',X12)))))) )),
  inference(superposition,[],[f308,f1385])).
fof(f4787,plain,(
  ( ! [X14,X15,X13] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X15),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X13),s('type.rat.rat',X14))))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X15),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X13),s('type.rat.rat',X14))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X13),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X14),s('type.rat.rat',X15)))))) )),
  inference(superposition,[],[f308,f1385])).
fof(f4800,plain,(
  ( ! [X11] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X11))))),s('type.rat.rat',X11))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X11)))) )),
  inference(superposition,[],[f308,f1340])).
fof(f4875,plain,(
  ( ! [X24,X23,X25] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X23),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X24),s('type.rat.rat',X25))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X24),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X23),s('type.rat.rat',X25))))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X24),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X23),s('type.rat.rat',X25)))))))))) )),
  inference(forward_demodulation,[],[f4792,f420])).
fof(f4792,plain,(
  ( ! [X24,X23,X25] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X24),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X23),s('type.rat.rat',X25))))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X24),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X23),s('type.rat.rat',X25))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X23),s('type.rat.rat',X24))),s('type.rat.rat',X25)))) )),
  inference(superposition,[],[f308,f1375])).
fof(f4879,plain,(
  ( ! [X6,X5] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X5),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X5),s('type.rat.rat',X6))))),s('type.rat.rat',X6))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X5),s('type.rat.rat',X6)))) )),
  inference(forward_demodulation,[],[f4797,f373])).
fof(f4797,plain,(
  ( ! [X6,X5] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X5),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X5),s('type.rat.rat',X6))))))),s('type.rat.rat',X6))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X5),s('type.rat.rat',X6)))) )),
  inference(superposition,[],[f308,f1410])).
fof(f4880,plain,(
  ( ! [X8,X7] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X8),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X7),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X7),s('type.rat.rat',X8))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X7),s('type.rat.rat',X8)))) )),
  inference(forward_demodulation,[],[f4798,f373])).
fof(f4798,plain,(
  ( ! [X8,X7] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X8),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X7),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X7),s('type.rat.rat',X8))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X7),s('type.rat.rat',X8)))) )),
  inference(superposition,[],[f308,f1375])).
fof(f4885,plain,(
  ( ! [X6,X7] : (s('type.rat.rat',X7) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X6))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X6),s('type.rat.rat',X7))))) | s('type.rat.rat',X6) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(forward_demodulation,[],[f4804,f1308])).
fof(f4804,plain,(
  ( ! [X6,X7] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.rat.rat',X7))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X6))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X6),s('type.rat.rat',X7))))) | s('type.rat.rat',X6) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f1375,f308])).
fof(f4888,plain,(
  ( ! [X10,X11] : (s('type.rat.rat',X11) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X10))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat',X10))))) | s('type.rat.rat',X10) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(forward_demodulation,[],[f4806,f295])).
fof(f4806,plain,(
  ( ! [X10,X11] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X10))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat',X10))))) | s('type.rat.rat',X10) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f1385,f308])).
fof(f5070,plain,(
  ( ! [X118,X117] : (s('type.rat.rat',X118) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X117),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X118),s('type.rat.rat',X117))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.rat.rat',X117)))) )),
  inference(superposition,[],[f1468,f1308])).
fof(f6162,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X1),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X0),s('type.rat.rat',X2))))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X3),s('type.rat.rat',X4))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X4),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X2),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X0),s('type.rat.rat',X1))))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X3),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X2),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X0),s('type.rat.rat',X1)))))))))) )),
  inference(forward_demodulation,[],[f6107,f420])).
fof(f6107,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X1),s('type.rat.rat',X0))),s('type.rat.rat',X2))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X3),s('type.rat.rat',X4))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X4),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X2),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X0),s('type.rat.rat',X1))))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X3),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X2),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X0),s('type.rat.rat',X1)))))))))) )),
  inference(superposition,[],[f1488,f372])).
fof(f6168,plain,(
  ( ! [X14,X17,X15,X18,X16] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X17),s('type.rat.rat',X18))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X18),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X16),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X14),s('type.rat.rat',X15))))))),s('type.rat.rat',X14))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X17),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X16),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X14),s('type.rat.rat',X15))))))),s('type.rat.rat',X14))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X15),s('type.rat.rat',X16))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.rat.rat',X14) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(forward_demodulation,[],[f6167,f1409])).
fof(f6167,plain,(
  ( ! [X14,X17,X15,X18,X16] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X17),s('type.rat.rat',X18))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X18),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X16),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X14),s('type.rat.rat',X15))))),s('type.rat.rat',X14))))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X17),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X16),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X14),s('type.rat.rat',X15))))))),s('type.rat.rat',X14))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X15),s('type.rat.rat',X16))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.rat.rat',X14) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(forward_demodulation,[],[f6166,f1409])).
fof(f6166,plain,(
  ( ! [X14,X17,X15,X18,X16] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X17),s('type.rat.rat',X18))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X18),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X16),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X14),s('type.rat.rat',X15))))),s('type.rat.rat',X14))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X17),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X16),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X14),s('type.rat.rat',X15))))),s('type.rat.rat',X14))))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X15),s('type.rat.rat',X16))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.rat.rat',X14) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(forward_demodulation,[],[f6165,f1409])).
fof(f6165,plain,(
  ( ! [X14,X17,X15,X18,X16] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X17),s('type.rat.rat',X18))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X18),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X16),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X14),s('type.rat.rat',X15))),s('type.rat.rat',X14))))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X17),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X16),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X14),s('type.rat.rat',X15))),s('type.rat.rat',X14))))))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X15),s('type.rat.rat',X16))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.rat.rat',X14) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(forward_demodulation,[],[f6110,f1409])).
fof(f6110,plain,(
  ( ! [X14,X17,X15,X18,X16] : (~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X15),s('type.rat.rat',X16))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X17),s('type.rat.rat',X18))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X18),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X16),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X14),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X15),s('type.rat.rat',X14))))))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X17),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X16),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X14),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X15),s('type.rat.rat',X14))))))))))) | s('type.rat.rat',X14) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f1488,f1468])).
fof(f6174,plain,(
  ( ! [X24,X23,X21,X19,X22,X20] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X23),s('type.rat.rat',X24))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X24),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X22),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X19),s('type.rat.rat',X20))))))),s('type.rat.rat',X21))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X23),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X22),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X19),s('type.rat.rat',X20))))))),s('type.rat.rat',X21))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X19),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X20),s('type.rat.rat',X22))))),s('type.rat.rat',X21))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) )),
  inference(forward_demodulation,[],[f6173,f1409])).
fof(f6173,plain,(
  ( ! [X24,X23,X21,X19,X22,X20] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X23),s('type.rat.rat',X24))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X24),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X22),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X19),s('type.rat.rat',X20))))),s('type.rat.rat',X21))))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X23),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X22),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X19),s('type.rat.rat',X20))))))),s('type.rat.rat',X21))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X19),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X20),s('type.rat.rat',X22))))),s('type.rat.rat',X21))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) )),
  inference(forward_demodulation,[],[f6172,f1409])).
fof(f6172,plain,(
  ( ! [X24,X23,X21,X19,X22,X20] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X23),s('type.rat.rat',X24))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X24),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X22),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X19),s('type.rat.rat',X20))))),s('type.rat.rat',X21))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X23),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X22),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X19),s('type.rat.rat',X20))))),s('type.rat.rat',X21))))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X19),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X20),s('type.rat.rat',X22))))),s('type.rat.rat',X21))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) )),
  inference(forward_demodulation,[],[f6171,f1409])).
fof(f6171,plain,(
  ( ! [X24,X23,X21,X19,X22,X20] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X23),s('type.rat.rat',X24))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X24),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X22),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X19),s('type.rat.rat',X20))),s('type.rat.rat',X21))))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X23),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X22),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X19),s('type.rat.rat',X20))),s('type.rat.rat',X21))))))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X19),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X20),s('type.rat.rat',X22))))),s('type.rat.rat',X21))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) )),
  inference(forward_demodulation,[],[f6170,f1409])).
fof(f6170,plain,(
  ( ! [X24,X23,X21,X19,X22,X20] : (~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X19),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X20),s('type.rat.rat',X22))))),s('type.rat.rat',X21))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X23),s('type.rat.rat',X24))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X24),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X22),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X19),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X20),s('type.rat.rat',X21))))))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X23),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X22),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X19),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X20),s('type.rat.rat',X21)))))))))))) )),
  inference(forward_demodulation,[],[f6169,f420])).
fof(f6169,plain,(
  ( ! [X24,X23,X21,X19,X22,X20] : (~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X19),s('type.rat.rat',X20))),s('type.rat.rat',X22))),s('type.rat.rat',X21))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X23),s('type.rat.rat',X24))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X24),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X22),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X19),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X20),s('type.rat.rat',X21))))))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X23),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X22),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X19),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X20),s('type.rat.rat',X21)))))))))))) )),
  inference(forward_demodulation,[],[f6111,f1410])).
fof(f6111,plain,(
  ( ! [X24,X23,X21,X19,X22,X20] : (~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X19),s('type.rat.rat',X20))),s('type.rat.rat',X21))),s('type.rat.rat',X22))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X23),s('type.rat.rat',X24))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X24),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X22),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X19),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X20),s('type.rat.rat',X21))))))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X23),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X22),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X19),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X20),s('type.rat.rat',X21)))))))))))) )),
  inference(superposition,[],[f1488,f1409])).
fof(f6181,plain,(
  ( ! [X30,X35,X33,X31,X34,X32] : (~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X31),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X32),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X30),s('type.rat.rat',X33))))))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X34),s('type.rat.rat',X35))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X35),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X33),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X30),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X31),s('type.rat.rat',X32))))))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X34),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X33),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X30),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X31),s('type.rat.rat',X32)))))))))))) )),
  inference(forward_demodulation,[],[f6180,f420])).
fof(f6180,plain,(
  ( ! [X30,X35,X33,X31,X34,X32] : (~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X31),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X32),s('type.rat.rat',X30))),s('type.rat.rat',X33))))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X34),s('type.rat.rat',X35))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X35),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X33),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X30),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X31),s('type.rat.rat',X32))))))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X34),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X33),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X30),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X31),s('type.rat.rat',X32)))))))))))) )),
  inference(forward_demodulation,[],[f6113,f420])).
fof(f6113,plain,(
  ( ! [X30,X35,X33,X31,X34,X32] : (~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X31),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X32),s('type.rat.rat',X30))))),s('type.rat.rat',X33))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X34),s('type.rat.rat',X35))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X35),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X33),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X30),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X31),s('type.rat.rat',X32))))))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X34),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X33),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X30),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X31),s('type.rat.rat',X32)))))))))))) )),
  inference(superposition,[],[f1488,f1385])).
fof(f6183,plain,(
  ( ! [X39,X37,X41,X38,X36,X40] : (~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X38),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X36),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X37),s('type.rat.rat',X39))))))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X40),s('type.rat.rat',X41))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X41),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X39),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X36),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X37),s('type.rat.rat',X38))))))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X40),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X39),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X36),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X37),s('type.rat.rat',X38)))))))))))) )),
  inference(forward_demodulation,[],[f6182,f420])).
fof(f6182,plain,(
  ( ! [X39,X37,X41,X38,X36,X40] : (~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X38),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X36),s('type.rat.rat',X37))),s('type.rat.rat',X39))))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X40),s('type.rat.rat',X41))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X41),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X39),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X36),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X37),s('type.rat.rat',X38))))))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X40),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X39),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X36),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X37),s('type.rat.rat',X38)))))))))))) )),
  inference(forward_demodulation,[],[f6114,f420])).
fof(f6114,plain,(
  ( ! [X39,X37,X41,X38,X36,X40] : (~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X38),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X36),s('type.rat.rat',X37))))),s('type.rat.rat',X39))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X40),s('type.rat.rat',X41))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X41),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X39),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X36),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X37),s('type.rat.rat',X38))))))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X40),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X39),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X36),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X37),s('type.rat.rat',X38)))))))))))) )),
  inference(superposition,[],[f1488,f1385])).
fof(f6188,plain,(
  ( ! [X45,X43,X46,X44,X42] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X45),s('type.rat.rat',X46))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X46),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X44),s('type.rat.rat',X42))))),s('type.rat.rat',X43))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X45),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X44),s('type.rat.rat',X42))))),s('type.rat.rat',X43))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X42),s('type.rat.rat',X44))),s('type.rat.rat',X43))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) )),
  inference(forward_demodulation,[],[f6187,f1409])).
fof(f6187,plain,(
  ( ! [X45,X43,X46,X44,X42] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X45),s('type.rat.rat',X46))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X46),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X44),s('type.rat.rat',X42))),s('type.rat.rat',X43))))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X45),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X44),s('type.rat.rat',X42))))),s('type.rat.rat',X43))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X42),s('type.rat.rat',X44))),s('type.rat.rat',X43))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) )),
  inference(forward_demodulation,[],[f6186,f1409])).
fof(f6186,plain,(
  ( ! [X45,X43,X46,X44,X42] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X45),s('type.rat.rat',X46))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X46),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X44),s('type.rat.rat',X42))),s('type.rat.rat',X43))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X45),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X44),s('type.rat.rat',X42))),s('type.rat.rat',X43))))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X42),s('type.rat.rat',X44))),s('type.rat.rat',X43))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) )),
  inference(forward_demodulation,[],[f6185,f1409])).
fof(f6185,plain,(
  ( ! [X45,X43,X46,X44,X42] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X45),s('type.rat.rat',X46))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X46),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X44),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X42),s('type.rat.rat',X43))))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X45),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X44),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X42),s('type.rat.rat',X43))))))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X42),s('type.rat.rat',X44))),s('type.rat.rat',X43))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) )),
  inference(forward_demodulation,[],[f6184,f373])).
fof(f6184,plain,(
  ( ! [X45,X43,X46,X44,X42] : (~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X42),s('type.rat.rat',X44))),s('type.rat.rat',X43))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X45),s('type.rat.rat',X46))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X46),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X44),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X42),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X43))))))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X45),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X44),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X42),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X43)))))))))))) )),
  inference(forward_demodulation,[],[f6115,f1410])).
fof(f6115,plain,(
  ( ! [X45,X43,X46,X44,X42] : (~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X42),s('type.rat.rat',X43))),s('type.rat.rat',X44))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X45),s('type.rat.rat',X46))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X46),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X44),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X42),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X43))))))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X45),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X44),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X42),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X43)))))))))))) )),
  inference(superposition,[],[f1488,f373])).
fof(f6203,plain,(
  ( ! [X61,X66,X64,X62,X65,X63] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X65),s('type.rat.rat',X66))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X66),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X64),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X61),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X62),s('type.rat.rat',X63))))))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X65),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X64),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X61),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X62),s('type.rat.rat',X63))))))))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X62),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X61),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X63),s('type.rat.rat',X64))))))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) )),
  inference(forward_demodulation,[],[f6202,f420])).
fof(f6202,plain,(
  ( ! [X61,X66,X64,X62,X65,X63] : (~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X62),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X61),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X63),s('type.rat.rat',X64))))))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X65),s('type.rat.rat',X66))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X66),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X64),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X61),s('type.rat.rat',X62))),s('type.rat.rat',X63))))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X65),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X64),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X61),s('type.rat.rat',X62))),s('type.rat.rat',X63)))))))))) )),
  inference(forward_demodulation,[],[f6201,f420])).
fof(f6201,plain,(
  ( ! [X61,X66,X64,X62,X65,X63] : (~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X62),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X61),s('type.rat.rat',X63))),s('type.rat.rat',X64))))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X65),s('type.rat.rat',X66))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X66),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X64),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X61),s('type.rat.rat',X62))),s('type.rat.rat',X63))))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X65),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X64),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X61),s('type.rat.rat',X62))),s('type.rat.rat',X63)))))))))) )),
  inference(forward_demodulation,[],[f6119,f420])).
fof(f6119,plain,(
  ( ! [X61,X66,X64,X62,X65,X63] : (~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X62),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X61),s('type.rat.rat',X63))))),s('type.rat.rat',X64))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X65),s('type.rat.rat',X66))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X66),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X64),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X61),s('type.rat.rat',X62))),s('type.rat.rat',X63))))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X65),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X64),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X61),s('type.rat.rat',X62))),s('type.rat.rat',X63)))))))))) )),
  inference(superposition,[],[f1488,f1375])).
fof(f6206,plain,(
  ( ! [X70,X68,X72,X71,X69,X67] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X71),s('type.rat.rat',X72))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X72),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X70),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X67),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X68),s('type.rat.rat',X69))))))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X71),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X70),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X67),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X68),s('type.rat.rat',X69))))))))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X67),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X68),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X69),s('type.rat.rat',X70))))))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) )),
  inference(forward_demodulation,[],[f6205,f420])).
fof(f6205,plain,(
  ( ! [X70,X68,X72,X71,X69,X67] : (~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X67),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X68),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X69),s('type.rat.rat',X70))))))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X71),s('type.rat.rat',X72))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X72),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X70),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X67),s('type.rat.rat',X68))),s('type.rat.rat',X69))))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X71),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X70),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X67),s('type.rat.rat',X68))),s('type.rat.rat',X69)))))))))) )),
  inference(forward_demodulation,[],[f6204,f420])).
fof(f6204,plain,(
  ( ! [X70,X68,X72,X71,X69,X67] : (~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X67),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X68),s('type.rat.rat',X69))),s('type.rat.rat',X70))))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X71),s('type.rat.rat',X72))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X72),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X70),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X67),s('type.rat.rat',X68))),s('type.rat.rat',X69))))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X71),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X70),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X67),s('type.rat.rat',X68))),s('type.rat.rat',X69)))))))))) )),
  inference(forward_demodulation,[],[f6120,f420])).
fof(f6120,plain,(
  ( ! [X70,X68,X72,X71,X69,X67] : (~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X67),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X68),s('type.rat.rat',X69))))),s('type.rat.rat',X70))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X71),s('type.rat.rat',X72))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X72),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X70),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X67),s('type.rat.rat',X68))),s('type.rat.rat',X69))))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X71),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X70),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X67),s('type.rat.rat',X68))),s('type.rat.rat',X69)))))))))) )),
  inference(superposition,[],[f1488,f420])).
fof(f6229,plain,(
  ( ! [X14,X17,X15,X18,X16] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X17),s('type.rat.rat',X18))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X18),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X14),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X15),s('type.rat.rat',X16))))))),s('type.rat.rat',X14))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X17),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X14),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X15),s('type.rat.rat',X16))))))),s('type.rat.rat',X14))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X16),s('type.rat.rat',X15))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.rat.rat',X14) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(forward_demodulation,[],[f6228,f1409])).
fof(f6228,plain,(
  ( ! [X14,X17,X15,X18,X16] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X17),s('type.rat.rat',X18))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X18),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X14),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X15),s('type.rat.rat',X16))))),s('type.rat.rat',X14))))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X17),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X14),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X15),s('type.rat.rat',X16))))))),s('type.rat.rat',X14))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X16),s('type.rat.rat',X15))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.rat.rat',X14) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(forward_demodulation,[],[f6227,f1409])).
fof(f6227,plain,(
  ( ! [X14,X17,X15,X18,X16] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X17),s('type.rat.rat',X18))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X18),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X14),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X15),s('type.rat.rat',X16))))),s('type.rat.rat',X14))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X17),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X14),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X15),s('type.rat.rat',X16))))),s('type.rat.rat',X14))))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X16),s('type.rat.rat',X15))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.rat.rat',X14) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(forward_demodulation,[],[f6226,f1409])).
fof(f6226,plain,(
  ( ! [X14,X17,X15,X18,X16] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X17),s('type.rat.rat',X18))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X18),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X14),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X15),s('type.rat.rat',X16))),s('type.rat.rat',X14))))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X17),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X14),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X15),s('type.rat.rat',X16))),s('type.rat.rat',X14))))))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X16),s('type.rat.rat',X15))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.rat.rat',X14) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(forward_demodulation,[],[f6225,f1410])).
fof(f6225,plain,(
  ( ! [X14,X17,X15,X18,X16] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X17),s('type.rat.rat',X18))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X18),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X14),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X15),s('type.rat.rat',X14))),s('type.rat.rat',X16))))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X17),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X14),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X15),s('type.rat.rat',X14))),s('type.rat.rat',X16))))))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X16),s('type.rat.rat',X15))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.rat.rat',X14) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(forward_demodulation,[],[f6127,f420])).
fof(f6127,plain,(
  ( ! [X14,X17,X15,X18,X16] : (~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X16),s('type.rat.rat',X15))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X17),s('type.rat.rat',X18))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X18),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X14),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X15),s('type.rat.rat',X14))))),s('type.rat.rat',X16))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X17),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X14),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X15),s('type.rat.rat',X14))))),s('type.rat.rat',X16))))))) | s('type.rat.rat',X14) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f1488,f1468])).
fof(f6235,plain,(
  ( ! [X24,X23,X21,X19,X22,X20] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X23),s('type.rat.rat',X24))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X24),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X19),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X20),s('type.rat.rat',X22))))))),s('type.rat.rat',X21))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X23),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X19),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X20),s('type.rat.rat',X22))))))),s('type.rat.rat',X21))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X22),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X19),s('type.rat.rat',X20))))),s('type.rat.rat',X21))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) )),
  inference(forward_demodulation,[],[f6234,f1409])).
fof(f6234,plain,(
  ( ! [X24,X23,X21,X19,X22,X20] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X23),s('type.rat.rat',X24))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X24),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X19),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X20),s('type.rat.rat',X22))))),s('type.rat.rat',X21))))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X23),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X19),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X20),s('type.rat.rat',X22))))))),s('type.rat.rat',X21))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X22),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X19),s('type.rat.rat',X20))))),s('type.rat.rat',X21))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) )),
  inference(forward_demodulation,[],[f6233,f1409])).
fof(f6233,plain,(
  ( ! [X24,X23,X21,X19,X22,X20] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X23),s('type.rat.rat',X24))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X24),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X19),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X20),s('type.rat.rat',X22))))),s('type.rat.rat',X21))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X23),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X19),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X20),s('type.rat.rat',X22))))),s('type.rat.rat',X21))))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X22),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X19),s('type.rat.rat',X20))))),s('type.rat.rat',X21))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) )),
  inference(forward_demodulation,[],[f6232,f1409])).
fof(f6232,plain,(
  ( ! [X24,X23,X21,X19,X22,X20] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X23),s('type.rat.rat',X24))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X24),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X19),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X20),s('type.rat.rat',X22))),s('type.rat.rat',X21))))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X23),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X19),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X20),s('type.rat.rat',X22))),s('type.rat.rat',X21))))))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X22),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X19),s('type.rat.rat',X20))))),s('type.rat.rat',X21))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) )),
  inference(forward_demodulation,[],[f6231,f1410])).
fof(f6231,plain,(
  ( ! [X24,X23,X21,X19,X22,X20] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X23),s('type.rat.rat',X24))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X24),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X19),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X20),s('type.rat.rat',X21))),s('type.rat.rat',X22))))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X23),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X19),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X20),s('type.rat.rat',X21))),s('type.rat.rat',X22))))))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X22),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X19),s('type.rat.rat',X20))))),s('type.rat.rat',X21))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) )),
  inference(forward_demodulation,[],[f6230,f420])).
fof(f6230,plain,(
  ( ! [X24,X23,X21,X19,X22,X20] : (~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X22),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X19),s('type.rat.rat',X20))))),s('type.rat.rat',X21))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X23),s('type.rat.rat',X24))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X24),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X19),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X20),s('type.rat.rat',X21))))),s('type.rat.rat',X22))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X23),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X19),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X20),s('type.rat.rat',X21))))),s('type.rat.rat',X22)))))))) )),
  inference(forward_demodulation,[],[f6128,f1409])).
fof(f6128,plain,(
  ( ! [X24,X23,X21,X19,X22,X20] : (~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X22),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X19),s('type.rat.rat',X20))),s('type.rat.rat',X21))))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X23),s('type.rat.rat',X24))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X24),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X19),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X20),s('type.rat.rat',X21))))),s('type.rat.rat',X22))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X23),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X19),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X20),s('type.rat.rat',X21))))),s('type.rat.rat',X22)))))))) )),
  inference(superposition,[],[f1488,f1409])).
fof(f6245,plain,(
  ( ! [X39,X37,X41,X38,X36,X40] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X40),s('type.rat.rat',X41))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X41),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X36),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X37),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X38),s('type.rat.rat',X39))))))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X40),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X36),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X37),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X38),s('type.rat.rat',X39))))))))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X39),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X38),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X36),s('type.rat.rat',X37))))))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) )),
  inference(forward_demodulation,[],[f6244,f420])).
fof(f6244,plain,(
  ( ! [X39,X37,X41,X38,X36,X40] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X40),s('type.rat.rat',X41))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X41),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X36),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X37),s('type.rat.rat',X38))),s('type.rat.rat',X39))))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X40),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X36),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X37),s('type.rat.rat',X38))),s('type.rat.rat',X39))))))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X39),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X38),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X36),s('type.rat.rat',X37))))))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) )),
  inference(forward_demodulation,[],[f6131,f420])).
fof(f6131,plain,(
  ( ! [X39,X37,X41,X38,X36,X40] : (~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X39),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X38),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X36),s('type.rat.rat',X37))))))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X40),s('type.rat.rat',X41))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X41),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X36),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X37),s('type.rat.rat',X38))))),s('type.rat.rat',X39))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X40),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X36),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X37),s('type.rat.rat',X38))))),s('type.rat.rat',X39)))))))) )),
  inference(superposition,[],[f1488,f1385])).
fof(f6266,plain,(
  ( ! [X61,X66,X64,X62,X65,X63] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X65),s('type.rat.rat',X66))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X66),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X61),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X62),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X63),s('type.rat.rat',X64))))))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X65),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X61),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X62),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X63),s('type.rat.rat',X64))))))))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X64),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X62),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X61),s('type.rat.rat',X63))))))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) )),
  inference(forward_demodulation,[],[f6265,f420])).
fof(f6265,plain,(
  ( ! [X61,X66,X64,X62,X65,X63] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X65),s('type.rat.rat',X66))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X66),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X61),s('type.rat.rat',X62))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X63),s('type.rat.rat',X64))))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X65),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X61),s('type.rat.rat',X62))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X63),s('type.rat.rat',X64))))))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X64),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X62),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X61),s('type.rat.rat',X63))))))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) )),
  inference(forward_demodulation,[],[f6136,f420])).
fof(f6136,plain,(
  ( ! [X61,X66,X64,X62,X65,X63] : (~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X64),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X62),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X61),s('type.rat.rat',X63))))))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X65),s('type.rat.rat',X66))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X66),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X61),s('type.rat.rat',X62))),s('type.rat.rat',X63))),s('type.rat.rat',X64))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X65),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X61),s('type.rat.rat',X62))),s('type.rat.rat',X63))),s('type.rat.rat',X64)))))))) )),
  inference(superposition,[],[f1488,f1375])).
fof(f6268,plain,(
  ( ! [X70,X68,X72,X71,X69,X67] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X71),s('type.rat.rat',X72))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X72),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X67),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X68),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X69),s('type.rat.rat',X70))))))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X71),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X67),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X68),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X69),s('type.rat.rat',X70))))))))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X70),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X67),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X68),s('type.rat.rat',X69))))))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) )),
  inference(forward_demodulation,[],[f6267,f420])).
fof(f6267,plain,(
  ( ! [X70,X68,X72,X71,X69,X67] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X71),s('type.rat.rat',X72))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X72),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X67),s('type.rat.rat',X68))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X69),s('type.rat.rat',X70))))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X71),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X67),s('type.rat.rat',X68))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X69),s('type.rat.rat',X70))))))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X70),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X67),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X68),s('type.rat.rat',X69))))))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) )),
  inference(forward_demodulation,[],[f6137,f420])).
fof(f6137,plain,(
  ( ! [X70,X68,X72,X71,X69,X67] : (~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X70),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X67),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X68),s('type.rat.rat',X69))))))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X71),s('type.rat.rat',X72))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X72),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X67),s('type.rat.rat',X68))),s('type.rat.rat',X69))),s('type.rat.rat',X70))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X71),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X67),s('type.rat.rat',X68))),s('type.rat.rat',X69))),s('type.rat.rat',X70)))))))) )),
  inference(superposition,[],[f1488,f420])).
fof(f6305,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X2),s('type.rat.rat',X3))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X3),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X1),s('type.rat.rat',X0))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X2),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X1),s('type.rat.rat',X0))))))) | s(bool,X4) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X0),s('type.rat.rat',X1))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X4)) )),
  inference(subsumption_resolution,[],[f6157,f288])).
fof(f6157,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~p(s(bool,'T_0')) | s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X2),s('type.rat.rat',X3))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X3),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X1),s('type.rat.rat',X0))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X2),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X1),s('type.rat.rat',X0))))))) | s(bool,X4) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X0),s('type.rat.rat',X1))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X4)) )),
  inference(superposition,[],[f1488,f674])).
fof(f6336,plain,(
  ~sP8('T_0','F_0','const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))),
  inference(unit_resulting_resolution,[],[f496,f288,f1113])).
fof(f6346,plain,(
  ~sP9('T_0','F_0','const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))),
  inference(unit_resulting_resolution,[],[f6336,f470])).
fof(f6348,plain,(
  ~sP9('const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),'F_0','T_0')),
  inference(unit_resulting_resolution,[],[f288,f496,f1146])).
fof(f6353,plain,(
  ~sP8('const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),'F_0','T_0')),
  inference(unit_resulting_resolution,[],[f288,f496,f6348,f474])).
fof(f6541,plain,(
  ( ! [X0,X1] : (sP9('const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),X0,'const.rat.rat_les_2'(s('type.rat.rat',X1),s('type.rat.rat',X1)))) )),
  inference(unit_resulting_resolution,[],[f530,f651])).
fof(f6543,plain,(
  ( ! [X0] : (sP9('const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),X0)) )),
  inference(unit_resulting_resolution,[],[f523,f651])).
fof(f6893,plain,(
  ( ! [X90,X91,X89] : (~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X90),s('type.rat.rat',X89)))) | sP7('const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),X91,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X89),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X90),s('type.rat.rat',sK12)))))) )),
  inference(superposition,[],[f593,f1505])).
fof(f6894,plain,(
  ( ! [X94,X92,X93] : (~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X93),s('type.rat.rat',X92)))) | sP7('const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X92),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X93),s('type.rat.rat',sK12)))),X94)) )),
  inference(superposition,[],[f598,f1505])).
fof(f7840,plain,(
  ( ! [X132,X130,X131,X129] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X131),s('type.rat.rat',X132))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X132),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X130),s('type.rat.rat',X129))))),s('type.rat.rat',X129))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X131),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X130),s('type.rat.rat',X129))))),s('type.rat.rat',X129))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X130),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.rat.rat',X129) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(forward_demodulation,[],[f7839,f1409])).
fof(f7839,plain,(
  ( ! [X132,X130,X131,X129] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X131),s('type.rat.rat',X132))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X132),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X130),s('type.rat.rat',X129))),s('type.rat.rat',X129))))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X131),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X130),s('type.rat.rat',X129))))),s('type.rat.rat',X129))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X130),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.rat.rat',X129) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(forward_demodulation,[],[f7838,f1409])).
fof(f7838,plain,(
  ( ! [X132,X130,X131,X129] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X131),s('type.rat.rat',X132))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X132),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X130),s('type.rat.rat',X129))),s('type.rat.rat',X129))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X131),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X130),s('type.rat.rat',X129))),s('type.rat.rat',X129))))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X130),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.rat.rat',X129) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(forward_demodulation,[],[f7837,f1409])).
fof(f7837,plain,(
  ( ! [X132,X130,X131,X129] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X131),s('type.rat.rat',X132))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X132),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X130),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X129),s('type.rat.rat',X129))))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X131),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X130),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X129),s('type.rat.rat',X129))))))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X130),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.rat.rat',X129) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(forward_demodulation,[],[f7836,f373])).
fof(f7836,plain,(
  ( ! [X132,X130,X131,X129] : (~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X130),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X131),s('type.rat.rat',X132))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X132),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X130),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X129),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X129))))))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X131),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X130),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X129),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X129))))))))))) | s('type.rat.rat',X129) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(forward_demodulation,[],[f7789,f1308])).
fof(f7789,plain,(
  ( ! [X132,X130,X131,X129] : (~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.rat.rat',X130))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X131),s('type.rat.rat',X132))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X132),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X130),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X129),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X129))))))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X131),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X130),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X129),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X129))))))))))) | s('type.rat.rat',X129) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f1488,f308])).
fof(f8427,plain,(
  ( ! [X2,X3] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X3),s('type.rat.rat',X2))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X3),s('type.rat.rat',X2))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X2),s('type.rat.rat',X3)))) )),
  inference(superposition,[],[f1440,f372])).
fof(f8429,plain,(
  ( ! [X6] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X6),s('type.rat.rat',X6))) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X6),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) )),
  inference(superposition,[],[f1440,f295])).
fof(f8430,plain,(
  ( ! [X8,X7] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X8),s('type.rat.rat',X8))) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X7),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X8),s('type.rat.rat',X7))))) | s('type.rat.rat',X7) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f1440,f1468])).
fof(f8432,plain,(
  ( ! [X14,X12,X13] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X13),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X14),s('type.rat.rat',X12))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X13),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X14),s('type.rat.rat',X12))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X12),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X13),s('type.rat.rat',X14)))))) )),
  inference(superposition,[],[f1440,f1385])).
fof(f8433,plain,(
  ( ! [X17,X15,X16] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X17),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X15),s('type.rat.rat',X16))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X17),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X15),s('type.rat.rat',X16))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X15),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X16),s('type.rat.rat',X17)))))) )),
  inference(superposition,[],[f1440,f1385])).
fof(f8436,plain,(
  ( ! [X21] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X21),s('type.rat.rat',X21))) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.rat.rat',X21)))) )),
  inference(superposition,[],[f1440,f1308])).
fof(f8442,plain,(
  ( ! [X0,X1] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X0),s('type.rat.rat',X0))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X1),s('type.rat.rat',X1))) | s('type.rat.rat',X1) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.rat.rat',X0) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f1440,f1440])).
fof(f8519,plain,(
  ( ! [X0,X1] : (s('type.rat.rat',X1) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X0),s('type.rat.rat',X0))),s('type.rat.rat',X1))) | s('type.rat.rat',X0) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f1308,f1440])).
fof(f8520,plain,(
  ( ! [X2,X3] : (s('type.rat.rat',X3) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X3),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X2),s('type.rat.rat',X2))))) | s('type.rat.rat',X2) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f295,f1440])).
fof(f8596,plain,(
  ( ! [X0] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X0),s('type.rat.rat',X0))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X0),s('type.rat.rat',X0))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X0),s('type.rat.rat',X0))))) | s('type.rat.rat',X0) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl47),
  inference(subsumption_resolution,[],[f8425,f2895])).
fof(f8425,plain,(
  ( ! [X0] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X0),s('type.rat.rat',X0))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X0),s('type.rat.rat',X0))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X0),s('type.rat.rat',X0))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.rat.rat',X0) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f1440,f1440])).
fof(f8600,plain,(
  ( ! [X26,X27,X25] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X25),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X26),s('type.rat.rat',X27))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X26),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X25),s('type.rat.rat',X27))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X26),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X25),s('type.rat.rat',X27)))))))) )),
  inference(forward_demodulation,[],[f8438,f420])).
fof(f8438,plain,(
  ( ! [X26,X27,X25] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X26),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X25),s('type.rat.rat',X27))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X26),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X25),s('type.rat.rat',X27))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X25),s('type.rat.rat',X26))),s('type.rat.rat',X27)))) )),
  inference(superposition,[],[f1440,f1375])).
fof(f8604,plain,(
  ( ! [X2,X3] : (s('type.rat.rat',X3) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X3),s('type.rat.rat',X2))),s('type.rat.rat',X2))) | s('type.rat.rat',X2) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(forward_demodulation,[],[f8444,f295])).
fof(f8444,plain,(
  ( ! [X2,X3] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X3),s('type.rat.rat',X2))),s('type.rat.rat',X2))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X3),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.rat.rat',X2) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f1409,f1440])).
fof(f8619,plain,(
  ( ! [X5] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X5),s('type.rat.rat',X5))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X5),s('type.rat.rat',X5))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X5),s('type.rat.rat',X5))))))) | s('type.rat.rat',X5) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl47),
  inference(subsumption_resolution,[],[f8522,f2895])).
fof(f8522,plain,(
  ( ! [X5] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X5),s('type.rat.rat',X5))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X5),s('type.rat.rat',X5))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X5),s('type.rat.rat',X5))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.rat.rat',X5) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f308,f1440])).
fof(f8624,plain,(
  ( ! [X109,X108] : (s('type.rat.rat',X109) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X108),s('type.rat.rat',X108))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X109),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X108),s('type.rat.rat',X108))))))) | s('type.rat.rat',X108) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl47),
  inference(subsumption_resolution,[],[f8569,f2895])).
fof(f8569,plain,(
  ( ! [X109,X108] : (s('type.rat.rat',X109) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X108),s('type.rat.rat',X108))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X109),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X108),s('type.rat.rat',X108))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.rat.rat',X108) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f1468,f1440])).
fof(f8626,plain,(
  ( ! [X111,X112,X110,X113] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X112),s('type.rat.rat',X113))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X113),s('type.rat.rat',X111))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X112),s('type.rat.rat',X111))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X111),s('type.rat.rat',X110))),s('type.rat.rat',X110))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.rat.rat',X110) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(forward_demodulation,[],[f8625,f1308])).
fof(f8625,plain,(
  ( ! [X111,X112,X110,X113] : (~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X111),s('type.rat.rat',X110))),s('type.rat.rat',X110))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X112),s('type.rat.rat',X113))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X113),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.rat.rat',X111))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X112),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.rat.rat',X111))))))) | s('type.rat.rat',X110) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(forward_demodulation,[],[f8570,f1409])).
fof(f8570,plain,(
  ( ! [X111,X112,X110,X113] : (~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X111),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X110),s('type.rat.rat',X110))))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X112),s('type.rat.rat',X113))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X113),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.rat.rat',X111))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X112),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.rat.rat',X111))))))) | s('type.rat.rat',X110) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f1488,f1440])).
fof(f8628,plain,(
  ( ! [X116,X114,X117,X115] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X116),s('type.rat.rat',X117))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X117),s('type.rat.rat',X115))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X116),s('type.rat.rat',X115))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X114),s('type.rat.rat',X115))),s('type.rat.rat',X114))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.rat.rat',X114) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(forward_demodulation,[],[f8627,f295])).
fof(f8627,plain,(
  ( ! [X116,X114,X117,X115] : (~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X114),s('type.rat.rat',X115))),s('type.rat.rat',X114))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X116),s('type.rat.rat',X117))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X117),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X115),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X116),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X115),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) | s('type.rat.rat',X114) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(forward_demodulation,[],[f8571,f1410])).
fof(f8571,plain,(
  ( ! [X116,X114,X117,X115] : (~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X114),s('type.rat.rat',X114))),s('type.rat.rat',X115))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X116),s('type.rat.rat',X117))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X117),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X115),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X116),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X115),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) | s('type.rat.rat',X114) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f1488,f1440])).
fof(f8645,plain,(
  ( ! [X2,X3] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X3),s('type.rat.rat',X2))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X3),s('type.rat.rat',X2))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X2),s('type.rat.rat',X3))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) )),
  inference(superposition,[],[f1436,f372])).
fof(f8668,plain,(
  ( ! [X11] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X11))))),s('type.rat.rat',X11))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X11))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) )),
  inference(superposition,[],[f1436,f1340])).
fof(f8688,plain,(
  ( ! [X0,X1] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X1),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X0),s('type.rat.rat',X0))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X1),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X1))))) | s('type.rat.rat',X0) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f1436,f1440])).
fof(f8873,plain,(
  ( ! [X8,X9] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X8),s('type.rat.rat',X9))),s('type.rat.rat',X8))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X9),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X9))))) | s('type.rat.rat',X8) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(forward_demodulation,[],[f8649,f1409])).
fof(f8649,plain,(
  ( ! [X8,X9] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X9),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X9))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X8),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X9),s('type.rat.rat',X8))))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.rat.rat',X8) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f1436,f1468])).
fof(f8876,plain,(
  ( ! [X12,X10,X11] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat',X10))),s('type.rat.rat',X12))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X10),s('type.rat.rat',X11))),s('type.rat.rat',X12))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X10),s('type.rat.rat',X11))),s('type.rat.rat',X12)))))))) )),
  inference(forward_demodulation,[],[f8875,f1410])).
fof(f8875,plain,(
  ( ! [X12,X10,X11] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X11),s('type.rat.rat',X12))),s('type.rat.rat',X10))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X10),s('type.rat.rat',X11))),s('type.rat.rat',X12))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X10),s('type.rat.rat',X11))),s('type.rat.rat',X12)))))))) )),
  inference(forward_demodulation,[],[f8874,f5017])).
fof(f8874,plain,(
  ( ! [X12,X10,X11] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X10),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X11),s('type.rat.rat',X12))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X10),s('type.rat.rat',X11))),s('type.rat.rat',X12))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X10),s('type.rat.rat',X11))),s('type.rat.rat',X12)))))))) )),
  inference(forward_demodulation,[],[f8650,f372])).
fof(f8650,plain,(
  ( ! [X12,X10,X11] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X10),s('type.rat.rat',X11))),s('type.rat.rat',X12))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X10),s('type.rat.rat',X11))),s('type.rat.rat',X12))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X10),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X11),s('type.rat.rat',X12))))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) )),
  inference(superposition,[],[f1436,f1409])).
fof(f8891,plain,(
  ( ! [X28,X29,X27] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X29),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X27),s('type.rat.rat',X28))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X28),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X27),s('type.rat.rat',X29))))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X28),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X27),s('type.rat.rat',X29)))))))))) )),
  inference(forward_demodulation,[],[f8890,f5017])).
fof(f8890,plain,(
  ( ! [X28,X29,X27] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X27),s('type.rat.rat',X28))),s('type.rat.rat',X29))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X28),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X27),s('type.rat.rat',X29))))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X28),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X27),s('type.rat.rat',X29)))))))))) )),
  inference(forward_demodulation,[],[f8658,f372])).
fof(f8658,plain,(
  ( ! [X28,X29,X27] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X28),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X27),s('type.rat.rat',X29))))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X28),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X27),s('type.rat.rat',X29))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X27),s('type.rat.rat',X28))),s('type.rat.rat',X29))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) )),
  inference(superposition,[],[f1436,f1375])).
fof(f8897,plain,(
  ( ! [X6,X5] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X5),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X5),s('type.rat.rat',X6))))),s('type.rat.rat',X6))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X5),s('type.rat.rat',X6))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) )),
  inference(forward_demodulation,[],[f8665,f373])).
fof(f8665,plain,(
  ( ! [X6,X5] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X5),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X5),s('type.rat.rat',X6))))))),s('type.rat.rat',X6))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X5),s('type.rat.rat',X6))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) )),
  inference(superposition,[],[f1436,f1410])).
fof(f8898,plain,(
  ( ! [X8,X7] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X8),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X7),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X7),s('type.rat.rat',X8))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X7),s('type.rat.rat',X8))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) )),
  inference(forward_demodulation,[],[f8666,f373])).
fof(f8666,plain,(
  ( ! [X8,X7] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X8),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X7),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X7),s('type.rat.rat',X8))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X7),s('type.rat.rat',X8))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) )),
  inference(superposition,[],[f1436,f1375])).
fof(f8899,plain,(
  ( ! [X10,X9] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X9),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X10),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X9),s('type.rat.rat',X10))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X9),s('type.rat.rat',X10))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) )),
  inference(forward_demodulation,[],[f8667,f373])).
fof(f8667,plain,(
  ( ! [X10,X9] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X9),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X10),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X9),s('type.rat.rat',X10))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X9),s('type.rat.rat',X10))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) )),
  inference(superposition,[],[f1436,f420])).
fof(f8905,plain,(
  ( ! [X8,X9] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X8),s('type.rat.rat',X9))),s('type.rat.rat',X8))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X8),s('type.rat.rat',X9))),s('type.rat.rat',X8))))))) | s('type.rat.rat',X9) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.rat.rat',X8) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(forward_demodulation,[],[f8904,f1409])).
fof(f8904,plain,(
  ( ! [X8,X9] : (s('type.rat.rat',X9) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X8),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X9),s('type.rat.rat',X8))))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X8),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X9),s('type.rat.rat',X8))))))))) | s('type.rat.rat',X8) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(forward_demodulation,[],[f8675,f295])).
fof(f8675,plain,(
  ( ! [X8,X9] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X9),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X8),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X9),s('type.rat.rat',X8))))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X8),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X9),s('type.rat.rat',X8))))))))) | s('type.rat.rat',X8) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f1436,f1468])).
fof(f8921,plain,(
  ( ! [X21] : (s('type.rat.rat',X21) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X21),s('type.rat.rat',X21))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X21),s('type.rat.rat',X21)))))))) ) | $spl47),
  inference(forward_demodulation,[],[f8920,f295])).
fof(f8920,plain,(
  ( ! [X21] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X21),s('type.rat.rat',X21))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X21),s('type.rat.rat',X21))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X21),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) ) | $spl47),
  inference(forward_demodulation,[],[f8919,f373])).
fof(f8919,plain,(
  ( ! [X21] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X21),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X21))))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X21),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X21))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X21),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) ) | $spl47),
  inference(subsumption_resolution,[],[f8918,f2895])).
fof(f8918,plain,(
  ( ! [X21] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X21),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X21))))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X21),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X21))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X21),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) )),
  inference(forward_demodulation,[],[f8680,f295])).
fof(f8680,plain,(
  ( ! [X21] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X21),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X21))))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X21),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X21))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X21),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) )),
  inference(superposition,[],[f1436,f1436])).
fof(f8932,plain,(
  ( ! [X28,X29,X27] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X27),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X28),s('type.rat.rat',X29))))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X27),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X28),s('type.rat.rat',X29))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X27),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X29),s('type.rat.rat',X28)))))) )),
  inference(forward_demodulation,[],[f8931,f420])).
fof(f8931,plain,(
  ( ! [X28,X29,X27] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X27),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X29),s('type.rat.rat',X28))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X27),s('type.rat.rat',X28))),s('type.rat.rat',X29))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X27),s('type.rat.rat',X28))),s('type.rat.rat',X29)))))))) )),
  inference(forward_demodulation,[],[f8930,f420])).
fof(f8930,plain,(
  ( ! [X28,X29,X27] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X27),s('type.rat.rat',X29))),s('type.rat.rat',X28))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X27),s('type.rat.rat',X28))),s('type.rat.rat',X29))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X27),s('type.rat.rat',X28))),s('type.rat.rat',X29)))))))) )),
  inference(forward_demodulation,[],[f8929,f5017])).
fof(f8929,plain,(
  ( ! [X28,X29,X27] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X28),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X27),s('type.rat.rat',X29))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X27),s('type.rat.rat',X28))),s('type.rat.rat',X29))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X27),s('type.rat.rat',X28))),s('type.rat.rat',X29)))))))) )),
  inference(forward_demodulation,[],[f8684,f372])).
fof(f8684,plain,(
  ( ! [X28,X29,X27] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X28),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X27),s('type.rat.rat',X29))))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X27),s('type.rat.rat',X28))),s('type.rat.rat',X29))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X27),s('type.rat.rat',X28))),s('type.rat.rat',X29)))))))) )),
  inference(superposition,[],[f1436,f1375])).
fof(f8977,plain,(
  ( ! [X4,X3] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X3),s('type.rat.rat',X4))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat',X4))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X3),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X3)))))) )),
  inference(forward_demodulation,[],[f8785,f1308])).
fof(f8785,plain,(
  ( ! [X4,X3] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat',X4))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X3),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.rat.rat',X4))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X3),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X3)))))) )),
  inference(superposition,[],[f420,f1436])).
fof(f8979,plain,(
  ( ! [X8,X7] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X7),s('type.rat.rat',X8))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X8),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X7),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X7)))))) )),
  inference(forward_demodulation,[],[f8787,f1308])).
fof(f8787,plain,(
  ( ! [X8,X7] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X8),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X7),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.rat.rat',X8))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X7),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X7)))))) )),
  inference(superposition,[],[f1385,f1436])).
fof(f9030,plain,(
  ( ! [X6,X4,X5] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X6),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X5),s('type.rat.rat',X4))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X6),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X5),s('type.rat.rat',X4))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X6),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X4),s('type.rat.rat',X5)))))) )),
  inference(superposition,[],[f1466,f372])).
fof(f9037,plain,(
  ( ! [X26,X24,X27,X25] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X27),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X25),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X26),s('type.rat.rat',X24))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X27),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X25),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X26),s('type.rat.rat',X24))))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X27),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X24),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X25),s('type.rat.rat',X26)))))))) )),
  inference(superposition,[],[f1466,f1385])).
fof(f9038,plain,(
  ( ! [X30,X28,X31,X29] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X31),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X30),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X28),s('type.rat.rat',X29))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X31),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X30),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X28),s('type.rat.rat',X29))))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X31),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X28),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X29),s('type.rat.rat',X30)))))))) )),
  inference(superposition,[],[f1466,f1385])).
fof(f9048,plain,(
  ( ! [X0,X1] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X0),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X1),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X1),s('type.rat.rat',X0))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X0),s('type.rat.rat',X1)))) )),
  inference(superposition,[],[f1466,f372])).
fof(f9055,plain,(
  ( ! [X14,X15,X13] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X13),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X14),s('type.rat.rat',X15))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X14),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X15),s('type.rat.rat',X13))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X13),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X14),s('type.rat.rat',X15)))))) )),
  inference(superposition,[],[f1466,f1385])).
fof(f9056,plain,(
  ( ! [X17,X18,X16] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X16),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X17),s('type.rat.rat',X18))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X18),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X16),s('type.rat.rat',X17))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X16),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X17),s('type.rat.rat',X18)))))) )),
  inference(superposition,[],[f1466,f1385])).
fof(f9159,plain,(
  ( ! [X0,X1] : (s('type.rat.rat',X1) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X0),s('type.rat.rat',X0))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X0),s('type.rat.rat',X0))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X1),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X0),s('type.rat.rat',X1))),s('type.rat.rat',X0))))))) | s('type.rat.rat',X0) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(forward_demodulation,[],[f9158,f1308])).
fof(f9158,plain,(
  ( ! [X0,X1] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X0),s('type.rat.rat',X0))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X0),s('type.rat.rat',X0))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X1),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X0),s('type.rat.rat',X1))),s('type.rat.rat',X0))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.rat.rat',X1))) | s('type.rat.rat',X0) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(forward_demodulation,[],[f9008,f1410])).
fof(f9008,plain,(
  ( ! [X0,X1] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X0),s('type.rat.rat',X0))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X0),s('type.rat.rat',X0))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X1),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X0),s('type.rat.rat',X0))),s('type.rat.rat',X1))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.rat.rat',X1))) | s('type.rat.rat',X0) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f1466,f1440])).
fof(f9160,plain,(
  ( ! [X2,X3] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X3),s('type.rat.rat',X3))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X2),s('type.rat.rat',X2))),s('type.rat.rat',X3))) | s('type.rat.rat',X2) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(forward_demodulation,[],[f9009,f1308])).
fof(f9009,plain,(
  ( ! [X2,X3] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X3),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.rat.rat',X3))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X2),s('type.rat.rat',X2))),s('type.rat.rat',X3))) | s('type.rat.rat',X2) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f1466,f1440])).
fof(f9162,plain,(
  ( ! [X6,X4,X5] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X4),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X5),s('type.rat.rat',X6))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X5),s('type.rat.rat',X4))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X6),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X5),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X4),s('type.rat.rat',X6)))))))))) )),
  inference(forward_demodulation,[],[f9161,f420])).
fof(f9161,plain,(
  ( ! [X6,X4,X5] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X5),s('type.rat.rat',X4))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X6),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X5),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X4),s('type.rat.rat',X6))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X4),s('type.rat.rat',X5))),s('type.rat.rat',X6)))) )),
  inference(forward_demodulation,[],[f9010,f420])).
fof(f9010,plain,(
  ( ! [X6,X4,X5] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X5),s('type.rat.rat',X4))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X6),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X5),s('type.rat.rat',X4))),s('type.rat.rat',X6))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X4),s('type.rat.rat',X5))),s('type.rat.rat',X6)))) )),
  inference(superposition,[],[f1466,f372])).
fof(f9168,plain,(
  ( ! [X14,X15,X16] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X14),s('type.rat.rat',X15))),s('type.rat.rat',X14))),s('type.rat.rat',X16))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X15),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X16),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X15),s('type.rat.rat',X16))))))) | s('type.rat.rat',X14) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(forward_demodulation,[],[f9014,f1409])).
fof(f9014,plain,(
  ( ! [X14,X15,X16] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X15),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X16),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X15),s('type.rat.rat',X16))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X14),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X15),s('type.rat.rat',X14))))),s('type.rat.rat',X16))) | s('type.rat.rat',X14) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f1466,f1468])).
fof(f9173,plain,(
  ( ! [X19,X17,X20,X18] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X17),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X18),s('type.rat.rat',X20))))),s('type.rat.rat',X19))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X17),s('type.rat.rat',X18))),s('type.rat.rat',X19))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X20),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X17),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X18),s('type.rat.rat',X20))))),s('type.rat.rat',X19)))))))) )),
  inference(forward_demodulation,[],[f9172,f1409])).
fof(f9172,plain,(
  ( ! [X19,X17,X20,X18] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X17),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X18),s('type.rat.rat',X20))),s('type.rat.rat',X19))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X17),s('type.rat.rat',X18))),s('type.rat.rat',X19))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X20),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X17),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X18),s('type.rat.rat',X20))))),s('type.rat.rat',X19)))))))) )),
  inference(forward_demodulation,[],[f9171,f1410])).
fof(f9171,plain,(
  ( ! [X19,X17,X20,X18] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X17),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X18),s('type.rat.rat',X19))),s('type.rat.rat',X20))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X17),s('type.rat.rat',X18))),s('type.rat.rat',X19))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X20),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X17),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X18),s('type.rat.rat',X20))))),s('type.rat.rat',X19)))))))) )),
  inference(forward_demodulation,[],[f9170,f420])).
fof(f9170,plain,(
  ( ! [X19,X17,X20,X18] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X17),s('type.rat.rat',X18))),s('type.rat.rat',X19))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X20),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X17),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X18),s('type.rat.rat',X20))))),s('type.rat.rat',X19))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X17),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X18),s('type.rat.rat',X19))))),s('type.rat.rat',X20)))) )),
  inference(forward_demodulation,[],[f9169,f420])).
fof(f9169,plain,(
  ( ! [X19,X17,X20,X18] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X17),s('type.rat.rat',X18))),s('type.rat.rat',X19))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X20),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X17),s('type.rat.rat',X18))),s('type.rat.rat',X20))),s('type.rat.rat',X19))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X17),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X18),s('type.rat.rat',X19))))),s('type.rat.rat',X20)))) )),
  inference(forward_demodulation,[],[f9015,f1410])).
fof(f9015,plain,(
  ( ! [X19,X17,X20,X18] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X17),s('type.rat.rat',X18))),s('type.rat.rat',X19))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X20),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X17),s('type.rat.rat',X18))),s('type.rat.rat',X19))),s('type.rat.rat',X20))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X17),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X18),s('type.rat.rat',X19))))),s('type.rat.rat',X20)))) )),
  inference(superposition,[],[f1466,f1409])).
fof(f9179,plain,(
  ( ! [X26,X24,X27,X25] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X24),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X25),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X26),s('type.rat.rat',X27))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X25),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X26),s('type.rat.rat',X24))))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X27),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X25),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X26),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X24),s('type.rat.rat',X27)))))))))))) )),
  inference(forward_demodulation,[],[f9178,f420])).
fof(f9178,plain,(
  ( ! [X26,X24,X27,X25] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X24),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X25),s('type.rat.rat',X26))),s('type.rat.rat',X27))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X25),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X26),s('type.rat.rat',X24))))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X27),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X25),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X26),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X24),s('type.rat.rat',X27)))))))))))) )),
  inference(forward_demodulation,[],[f9177,f420])).
fof(f9177,plain,(
  ( ! [X26,X24,X27,X25] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X25),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X26),s('type.rat.rat',X24))))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X27),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X25),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X26),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X24),s('type.rat.rat',X27))))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X24),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X25),s('type.rat.rat',X26))))),s('type.rat.rat',X27)))) )),
  inference(forward_demodulation,[],[f9176,f420])).
fof(f9176,plain,(
  ( ! [X26,X24,X27,X25] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X25),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X26),s('type.rat.rat',X24))))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X27),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X25),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X26),s('type.rat.rat',X24))),s('type.rat.rat',X27))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X24),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X25),s('type.rat.rat',X26))))),s('type.rat.rat',X27)))) )),
  inference(forward_demodulation,[],[f9017,f420])).
fof(f9017,plain,(
  ( ! [X26,X24,X27,X25] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X25),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X26),s('type.rat.rat',X24))))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X27),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X25),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X26),s('type.rat.rat',X24))))),s('type.rat.rat',X27))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X24),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X25),s('type.rat.rat',X26))))),s('type.rat.rat',X27)))) )),
  inference(superposition,[],[f1466,f1385])).
fof(f9183,plain,(
  ( ! [X30,X28,X31,X29] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X28),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X29),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X30),s('type.rat.rat',X31))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X30),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X28),s('type.rat.rat',X29))))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X31),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X30),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X28),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X29),s('type.rat.rat',X31)))))))))))) )),
  inference(forward_demodulation,[],[f9182,f420])).
fof(f9182,plain,(
  ( ! [X30,X28,X31,X29] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X28),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X29),s('type.rat.rat',X30))),s('type.rat.rat',X31))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X30),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X28),s('type.rat.rat',X29))))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X31),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X30),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X28),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X29),s('type.rat.rat',X31)))))))))))) )),
  inference(forward_demodulation,[],[f9181,f420])).
fof(f9181,plain,(
  ( ! [X30,X28,X31,X29] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X30),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X28),s('type.rat.rat',X29))))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X31),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X30),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X28),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X29),s('type.rat.rat',X31))))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X28),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X29),s('type.rat.rat',X30))))),s('type.rat.rat',X31)))) )),
  inference(forward_demodulation,[],[f9180,f420])).
fof(f9180,plain,(
  ( ! [X30,X28,X31,X29] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X30),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X28),s('type.rat.rat',X29))))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X31),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X30),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X28),s('type.rat.rat',X29))),s('type.rat.rat',X31))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X28),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X29),s('type.rat.rat',X30))))),s('type.rat.rat',X31)))) )),
  inference(forward_demodulation,[],[f9018,f420])).
fof(f9018,plain,(
  ( ! [X30,X28,X31,X29] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X30),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X28),s('type.rat.rat',X29))))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X31),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X30),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X28),s('type.rat.rat',X29))))),s('type.rat.rat',X31))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X28),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X29),s('type.rat.rat',X30))))),s('type.rat.rat',X31)))) )),
  inference(superposition,[],[f1466,f1385])).
fof(f9187,plain,(
  ( ! [X33,X34,X32] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X32),s('type.rat.rat',X34))),s('type.rat.rat',X33))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X32),s('type.rat.rat',X33))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X34),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X32),s('type.rat.rat',X34))),s('type.rat.rat',X33)))))))) )),
  inference(forward_demodulation,[],[f9186,f1409])).
fof(f9186,plain,(
  ( ! [X33,X34,X32] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X32),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X34),s('type.rat.rat',X33))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X32),s('type.rat.rat',X33))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X34),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X32),s('type.rat.rat',X34))),s('type.rat.rat',X33)))))))) )),
  inference(forward_demodulation,[],[f9185,f1340])).
fof(f9185,plain,(
  ( ! [X33,X34,X32] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X32),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X33))),s('type.rat.rat',X34))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X32),s('type.rat.rat',X33))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X34),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X32),s('type.rat.rat',X34))),s('type.rat.rat',X33)))))))) )),
  inference(forward_demodulation,[],[f9184,f420])).
fof(f9184,plain,(
  ( ! [X33,X34,X32] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X32),s('type.rat.rat',X33))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X34),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X32),s('type.rat.rat',X34))),s('type.rat.rat',X33))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X32),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X33))))),s('type.rat.rat',X34)))) )),
  inference(forward_demodulation,[],[f9019,f1410])).
fof(f9019,plain,(
  ( ! [X33,X34,X32] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X32),s('type.rat.rat',X33))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X34),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X32),s('type.rat.rat',X33))),s('type.rat.rat',X34))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X32),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X33))))),s('type.rat.rat',X34)))) )),
  inference(superposition,[],[f1466,f373])).
fof(f9189,plain,(
  ( ! [X35,X36] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X35),s('type.rat.rat',X35))),s('type.rat.rat',X36))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X36),s('type.rat.rat',X36))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X35),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) )),
  inference(forward_demodulation,[],[f9188,f373])).
fof(f9188,plain,(
  ( ! [X35,X36] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X36),s('type.rat.rat',X36))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X35),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X35))))),s('type.rat.rat',X36))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X35),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) )),
  inference(forward_demodulation,[],[f9020,f1308])).
fof(f9020,plain,(
  ( ! [X35,X36] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X36),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.rat.rat',X36))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X35),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X35))))),s('type.rat.rat',X36))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X35),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) )),
  inference(superposition,[],[f1466,f1436])).
fof(f9200,plain,(
  ( ! [X47,X45,X48,X46] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X45),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X46),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X47),s('type.rat.rat',X48))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X46),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X45),s('type.rat.rat',X47))))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X48),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X46),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X45),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X47),s('type.rat.rat',X48)))))))))))) )),
  inference(forward_demodulation,[],[f9199,f420])).
fof(f9199,plain,(
  ( ! [X47,X45,X48,X46] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X45),s('type.rat.rat',X46))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X47),s('type.rat.rat',X48))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X46),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X45),s('type.rat.rat',X47))))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X48),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X46),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X45),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X47),s('type.rat.rat',X48)))))))))))) )),
  inference(forward_demodulation,[],[f9198,f420])).
fof(f9198,plain,(
  ( ! [X47,X45,X48,X46] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X46),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X45),s('type.rat.rat',X47))))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X48),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X46),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X45),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X47),s('type.rat.rat',X48))))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X45),s('type.rat.rat',X46))),s('type.rat.rat',X47))),s('type.rat.rat',X48)))) )),
  inference(forward_demodulation,[],[f9197,f420])).
fof(f9197,plain,(
  ( ! [X47,X45,X48,X46] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X46),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X45),s('type.rat.rat',X47))))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X48),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X46),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X45),s('type.rat.rat',X47))),s('type.rat.rat',X48))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X45),s('type.rat.rat',X46))),s('type.rat.rat',X47))),s('type.rat.rat',X48)))) )),
  inference(forward_demodulation,[],[f9024,f420])).
fof(f9024,plain,(
  ( ! [X47,X45,X48,X46] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X46),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X45),s('type.rat.rat',X47))))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X48),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X46),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X45),s('type.rat.rat',X47))))),s('type.rat.rat',X48))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X45),s('type.rat.rat',X46))),s('type.rat.rat',X47))),s('type.rat.rat',X48)))) )),
  inference(superposition,[],[f1466,f1375])).
fof(f9204,plain,(
  ( ! [X52,X50,X51,X49] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X49),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X50),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X51),s('type.rat.rat',X52))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X49),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X50),s('type.rat.rat',X51))))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X52),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X49),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X50),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X51),s('type.rat.rat',X52)))))))))))) )),
  inference(forward_demodulation,[],[f9203,f420])).
fof(f9203,plain,(
  ( ! [X52,X50,X51,X49] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X49),s('type.rat.rat',X50))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X51),s('type.rat.rat',X52))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X49),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X50),s('type.rat.rat',X51))))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X52),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X49),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X50),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X51),s('type.rat.rat',X52)))))))))))) )),
  inference(forward_demodulation,[],[f9202,f420])).
fof(f9202,plain,(
  ( ! [X52,X50,X51,X49] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X49),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X50),s('type.rat.rat',X51))))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X52),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X49),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X50),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X51),s('type.rat.rat',X52))))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X49),s('type.rat.rat',X50))),s('type.rat.rat',X51))),s('type.rat.rat',X52)))) )),
  inference(forward_demodulation,[],[f9201,f420])).
fof(f9201,plain,(
  ( ! [X52,X50,X51,X49] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X49),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X50),s('type.rat.rat',X51))))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X52),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X49),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X50),s('type.rat.rat',X51))),s('type.rat.rat',X52))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X49),s('type.rat.rat',X50))),s('type.rat.rat',X51))),s('type.rat.rat',X52)))) )),
  inference(forward_demodulation,[],[f9025,f420])).
fof(f9025,plain,(
  ( ! [X52,X50,X51,X49] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X49),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X50),s('type.rat.rat',X51))))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X52),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X49),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X50),s('type.rat.rat',X51))))),s('type.rat.rat',X52))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X49),s('type.rat.rat',X50))),s('type.rat.rat',X51))),s('type.rat.rat',X52)))) )),
  inference(superposition,[],[f1466,f420])).
fof(f9211,plain,(
  ( ! [X0,X1] : (s('type.rat.rat',X1) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X0),s('type.rat.rat',X0))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X1),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X0),s('type.rat.rat',X0))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X1),s('type.rat.rat',X0))),s('type.rat.rat',X0))))))) | s('type.rat.rat',X0) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(forward_demodulation,[],[f9210,f295])).
fof(f9210,plain,(
  ( ! [X0,X1] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X0),s('type.rat.rat',X0))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X1),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X0),s('type.rat.rat',X0))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X1),s('type.rat.rat',X0))),s('type.rat.rat',X0))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X1),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.rat.rat',X0) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(forward_demodulation,[],[f9028,f1409])).
fof(f9028,plain,(
  ( ! [X0,X1] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X0),s('type.rat.rat',X0))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X1),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X0),s('type.rat.rat',X0))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X1),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X0),s('type.rat.rat',X0))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X1),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.rat.rat',X0) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f1466,f1440])).
fof(f9217,plain,(
  ( ! [X14,X15,X16] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X16),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X14),s('type.rat.rat',X15))),s('type.rat.rat',X14))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X16),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X15),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X16),s('type.rat.rat',X15))))))) | s('type.rat.rat',X14) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(forward_demodulation,[],[f9034,f1409])).
fof(f9034,plain,(
  ( ! [X14,X15,X16] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X16),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X15),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X16),s('type.rat.rat',X15))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X16),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X14),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X15),s('type.rat.rat',X14))))))) | s('type.rat.rat',X14) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f1466,f1468])).
fof(f9226,plain,(
  ( ! [X33,X34,X32] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X34),s('type.rat.rat',X32))),s('type.rat.rat',X33))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X34),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X32),s('type.rat.rat',X33))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X34),s('type.rat.rat',X32))),s('type.rat.rat',X33)))))))) )),
  inference(forward_demodulation,[],[f9225,f1409])).
fof(f9225,plain,(
  ( ! [X33,X34,X32] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X34),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X32),s('type.rat.rat',X33))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X34),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X32),s('type.rat.rat',X33))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X34),s('type.rat.rat',X32))),s('type.rat.rat',X33)))))))) )),
  inference(forward_demodulation,[],[f9224,f373])).
fof(f9224,plain,(
  ( ! [X33,X34,X32] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X34),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X32),s('type.rat.rat',X33))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X34),s('type.rat.rat',X32))),s('type.rat.rat',X33))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X34),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X32),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X33)))))))) )),
  inference(forward_demodulation,[],[f9039,f1409])).
fof(f9039,plain,(
  ( ! [X33,X34,X32] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X34),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X32),s('type.rat.rat',X33))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X34),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X32),s('type.rat.rat',X33))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X34),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X32),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X33)))))))) )),
  inference(superposition,[],[f1466,f373])).
fof(f9229,plain,(
  ( ! [X35,X36] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X36),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X35),s('type.rat.rat',X35))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X36),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X36))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X35),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) )),
  inference(forward_demodulation,[],[f9228,f373])).
fof(f9228,plain,(
  ( ! [X35,X36] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X36),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X36))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X36),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X35),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X35))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X35),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) )),
  inference(forward_demodulation,[],[f9227,f295])).
fof(f9227,plain,(
  ( ! [X35,X36] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X36),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X36),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X36),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X35),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X35))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X35),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) )),
  inference(forward_demodulation,[],[f9040,f2853])).
fof(f9040,plain,(
  ( ! [X35,X36] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X36),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X36),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X36),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X35),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X35))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X35),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) )),
  inference(superposition,[],[f1466,f1436])).
fof(f9237,plain,(
  ( ! [X47,X45,X48,X46] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X48),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X45),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X46),s('type.rat.rat',X47))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X48),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X46),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X45),s('type.rat.rat',X47))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X48),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X46),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X45),s('type.rat.rat',X47)))))))))))) )),
  inference(forward_demodulation,[],[f9044,f420])).
fof(f9044,plain,(
  ( ! [X47,X45,X48,X46] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X48),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X46),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X45),s('type.rat.rat',X47))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X48),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X46),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X45),s('type.rat.rat',X47))))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X48),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X45),s('type.rat.rat',X46))),s('type.rat.rat',X47)))))) )),
  inference(superposition,[],[f1466,f1375])).
fof(f9244,plain,(
  ( ! [X6,X7] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X6),s('type.rat.rat',X7))),s('type.rat.rat',X6))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X6),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X7),s('type.rat.rat',X6))),s('type.rat.rat',X7))))) | s('type.rat.rat',X6) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(forward_demodulation,[],[f9052,f1409])).
fof(f9052,plain,(
  ( ! [X6,X7] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X6),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X7),s('type.rat.rat',X6))),s('type.rat.rat',X7))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X6),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X7),s('type.rat.rat',X6))))) | s('type.rat.rat',X6) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f1466,f1468])).
fof(f9247,plain,(
  ( ! [X19,X20] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X19),s('type.rat.rat',X20))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X19),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X20))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X19),s('type.rat.rat',X20)))))))) )),
  inference(forward_demodulation,[],[f9057,f373])).
fof(f9057,plain,(
  ( ! [X19,X20] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X19),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X20))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X19),s('type.rat.rat',X20))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X19),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X20)))))) )),
  inference(superposition,[],[f1466,f373])).
fof(f9252,plain,(
  ( ! [X28,X29,X27] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X27),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X28),s('type.rat.rat',X29))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X27),s('type.rat.rat',X28))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X29),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X28),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X27),s('type.rat.rat',X29)))))))))) )),
  inference(forward_demodulation,[],[f9062,f420])).
fof(f9062,plain,(
  ( ! [X28,X29,X27] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X27),s('type.rat.rat',X28))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X29),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X28),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X27),s('type.rat.rat',X29))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X27),s('type.rat.rat',X28))),s('type.rat.rat',X29)))) )),
  inference(superposition,[],[f1466,f1375])).
fof(f9253,plain,(
  ( ! [X30,X31,X32] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X30),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X31),s('type.rat.rat',X32))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X30),s('type.rat.rat',X31))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X32),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X30),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X31),s('type.rat.rat',X32)))))))))) )),
  inference(forward_demodulation,[],[f9063,f420])).
fof(f9063,plain,(
  ( ! [X30,X31,X32] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X30),s('type.rat.rat',X31))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X32),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X30),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X31),s('type.rat.rat',X32))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X30),s('type.rat.rat',X31))),s('type.rat.rat',X32)))) )),
  inference(superposition,[],[f1466,f420])).
fof(f9254,plain,(
  ( ! [X33,X34] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X34),s('type.rat.rat',X33))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X33))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X34),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X34),s('type.rat.rat',X33)))))))) )),
  inference(forward_demodulation,[],[f9064,f1340])).
fof(f9064,plain,(
  ( ! [X33,X34] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X33))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X34),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X34),s('type.rat.rat',X33))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X33))),s('type.rat.rat',X34)))) )),
  inference(superposition,[],[f1466,f1340])).
fof(f9261,plain,(
  ( ! [X14,X12,X13] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X12),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X13),s('type.rat.rat',X14))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X13),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X12),s('type.rat.rat',X14))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X12),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X13),s('type.rat.rat',X14)))))))))) )),
  inference(forward_demodulation,[],[f9260,f420])).
fof(f9260,plain,(
  ( ! [X14,X12,X13] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X13),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X12),s('type.rat.rat',X14))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X12),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X13),s('type.rat.rat',X14))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X12),s('type.rat.rat',X13))),s('type.rat.rat',X14)))) )),
  inference(forward_demodulation,[],[f9259,f420])).
fof(f9259,plain,(
  ( ! [X14,X12,X13] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X13),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X12),s('type.rat.rat',X14))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X12),s('type.rat.rat',X13))),s('type.rat.rat',X14))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X12),s('type.rat.rat',X13))),s('type.rat.rat',X14)))) )),
  inference(forward_demodulation,[],[f9068,f1409])).
fof(f9068,plain,(
  ( ! [X14,X12,X13] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X13),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X12),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X14),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X12),s('type.rat.rat',X13))),s('type.rat.rat',X14))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X12),s('type.rat.rat',X13))),s('type.rat.rat',X14)))) )),
  inference(superposition,[],[f1466,f1375])).
fof(f9269,plain,(
  ( ! [X10,X11,X9] : (s('type.rat.rat',X11) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X10),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X9),s('type.rat.rat',X10))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X9),s('type.rat.rat',X11))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X9),s('type.rat.rat',X10)))) )),
  inference(forward_demodulation,[],[f9073,f1308])).
fof(f9073,plain,(
  ( ! [X10,X11,X9] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.rat.rat',X11))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X10),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X9),s('type.rat.rat',X10))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X9),s('type.rat.rat',X11))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X9),s('type.rat.rat',X10)))) )),
  inference(superposition,[],[f1375,f1466])).
fof(f9272,plain,(
  ( ! [X17,X15,X16] : (s('type.rat.rat',X17) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X16),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X15),s('type.rat.rat',X16))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X17),s('type.rat.rat',X15))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X15),s('type.rat.rat',X16)))) )),
  inference(forward_demodulation,[],[f9075,f295])).
fof(f9075,plain,(
  ( ! [X17,X15,X16] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X17),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X16),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X15),s('type.rat.rat',X16))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X17),s('type.rat.rat',X15))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X15),s('type.rat.rat',X16)))) )),
  inference(superposition,[],[f1385,f1466])).
fof(f9304,plain,(
  ( ! [X198,X196,X199,X197,X195] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X198),s('type.rat.rat',X199))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X199),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X195),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X196),s('type.rat.rat',X197))))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X195),s('type.rat.rat',X196))))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X198),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X195),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X196),s('type.rat.rat',X197))))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X195),s('type.rat.rat',X196))))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X197),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X195),s('type.rat.rat',X196)))) )),
  inference(forward_demodulation,[],[f9303,f1409])).
fof(f9303,plain,(
  ( ! [X198,X196,X199,X197,X195] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X198),s('type.rat.rat',X199))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X199),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X195),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X196),s('type.rat.rat',X197))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X195),s('type.rat.rat',X196))))))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X198),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X195),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X196),s('type.rat.rat',X197))))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X195),s('type.rat.rat',X196))))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X197),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X195),s('type.rat.rat',X196)))) )),
  inference(forward_demodulation,[],[f9302,f1409])).
fof(f9302,plain,(
  ( ! [X198,X196,X199,X197,X195] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X198),s('type.rat.rat',X199))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X199),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X195),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X196),s('type.rat.rat',X197))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X195),s('type.rat.rat',X196))))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X198),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X195),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X196),s('type.rat.rat',X197))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X195),s('type.rat.rat',X196))))))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X197),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X195),s('type.rat.rat',X196)))) )),
  inference(forward_demodulation,[],[f9301,f1409])).
fof(f9301,plain,(
  ( ! [X198,X196,X199,X197,X195] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X198),s('type.rat.rat',X199))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X199),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X195),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X196),s('type.rat.rat',X197))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X195),s('type.rat.rat',X196))))))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X198),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X195),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X196),s('type.rat.rat',X197))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X195),s('type.rat.rat',X196))))))))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X197),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X195),s('type.rat.rat',X196)))) )),
  inference(forward_demodulation,[],[f9300,f1410])).
fof(f9300,plain,(
  ( ! [X198,X196,X199,X197,X195] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X198),s('type.rat.rat',X199))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X199),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X195),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X196),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X195),s('type.rat.rat',X196))))),s('type.rat.rat',X197))))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X198),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X195),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X196),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X195),s('type.rat.rat',X196))))),s('type.rat.rat',X197))))))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X197),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X195),s('type.rat.rat',X196)))) )),
  inference(forward_demodulation,[],[f9299,f420])).
fof(f9299,plain,(
  ( ! [X198,X196,X199,X197,X195] : (~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X197),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X198),s('type.rat.rat',X199))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X199),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X195),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X196),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X195),s('type.rat.rat',X196))))))),s('type.rat.rat',X197))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X198),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X195),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X196),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X195),s('type.rat.rat',X196))))))),s('type.rat.rat',X197))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X195),s('type.rat.rat',X196)))) )),
  inference(forward_demodulation,[],[f9134,f295])).
fof(f9134,plain,(
  ( ! [X198,X196,X199,X197,X195] : (~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X197),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X198),s('type.rat.rat',X199))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X199),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X195),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X196),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X195),s('type.rat.rat',X196))))))),s('type.rat.rat',X197))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X198),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X195),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X196),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X195),s('type.rat.rat',X196))))))),s('type.rat.rat',X197))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X195),s('type.rat.rat',X196)))) )),
  inference(superposition,[],[f1488,f1466])).
fof(f9364,plain,(
  ( ! [X6,X7] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X7),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X7))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X7),s('type.rat.rat',X6))),s('type.rat.rat',X6))) | s('type.rat.rat',X6) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f1434,f1468])).
fof(f9469,plain,(
  ( ! [X0,X1] : (s('type.rat.rat',X1) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X0),s('type.rat.rat',X0))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X0),s('type.rat.rat',X1))),s('type.rat.rat',X0))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X0),s('type.rat.rat',X1))),s('type.rat.rat',X0))))))) | s('type.rat.rat',X0) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(forward_demodulation,[],[f9468,f295])).
fof(f9468,plain,(
  ( ! [X0,X1] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X0),s('type.rat.rat',X0))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X0),s('type.rat.rat',X1))),s('type.rat.rat',X0))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X0),s('type.rat.rat',X1))),s('type.rat.rat',X0))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X1),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.rat.rat',X0) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(forward_demodulation,[],[f9318,f1410])).
fof(f9318,plain,(
  ( ! [X0,X1] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X0),s('type.rat.rat',X0))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X0),s('type.rat.rat',X0))),s('type.rat.rat',X1))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X0),s('type.rat.rat',X0))),s('type.rat.rat',X1))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X1),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.rat.rat',X0) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f1434,f1440])).
fof(f9476,plain,(
  ( ! [X14,X15,X16] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X16),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X14),s('type.rat.rat',X15))),s('type.rat.rat',X14))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X15),s('type.rat.rat',X16))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X15),s('type.rat.rat',X16))))))) | s('type.rat.rat',X14) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(forward_demodulation,[],[f9324,f1409])).
fof(f9324,plain,(
  ( ! [X14,X15,X16] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X15),s('type.rat.rat',X16))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X15),s('type.rat.rat',X16))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X16),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X14),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X15),s('type.rat.rat',X14))))))) | s('type.rat.rat',X14) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f1434,f1468])).
fof(f9480,plain,(
  ( ! [X19,X17,X20,X18] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X20),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X17),s('type.rat.rat',X18))))),s('type.rat.rat',X19))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X17),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X18),s('type.rat.rat',X20))))),s('type.rat.rat',X19))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X17),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X18),s('type.rat.rat',X20))))),s('type.rat.rat',X19)))))))) )),
  inference(forward_demodulation,[],[f9479,f1409])).
fof(f9479,plain,(
  ( ! [X19,X17,X20,X18] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X20),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X17),s('type.rat.rat',X18))),s('type.rat.rat',X19))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X17),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X18),s('type.rat.rat',X20))))),s('type.rat.rat',X19))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X17),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X18),s('type.rat.rat',X20))))),s('type.rat.rat',X19)))))))) )),
  inference(forward_demodulation,[],[f9478,f1409])).
fof(f9478,plain,(
  ( ! [X19,X17,X20,X18] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X17),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X18),s('type.rat.rat',X20))))),s('type.rat.rat',X19))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X17),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X18),s('type.rat.rat',X20))))),s('type.rat.rat',X19))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X20),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X17),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X18),s('type.rat.rat',X19)))))))) )),
  inference(forward_demodulation,[],[f9477,f420])).
fof(f9477,plain,(
  ( ! [X19,X17,X20,X18] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X17),s('type.rat.rat',X18))),s('type.rat.rat',X20))),s('type.rat.rat',X19))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X17),s('type.rat.rat',X18))),s('type.rat.rat',X20))),s('type.rat.rat',X19))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X20),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X17),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X18),s('type.rat.rat',X19)))))))) )),
  inference(forward_demodulation,[],[f9325,f1410])).
fof(f9325,plain,(
  ( ! [X19,X17,X20,X18] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X17),s('type.rat.rat',X18))),s('type.rat.rat',X19))),s('type.rat.rat',X20))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X17),s('type.rat.rat',X18))),s('type.rat.rat',X19))),s('type.rat.rat',X20))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X20),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X17),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X18),s('type.rat.rat',X19)))))))) )),
  inference(superposition,[],[f1434,f1409])).
fof(f9484,plain,(
  ( ! [X26,X24,X27,X25] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X25),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X26),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X24),s('type.rat.rat',X27))))))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X25),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X26),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X24),s('type.rat.rat',X27))))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X27),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X24),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X25),s('type.rat.rat',X26)))))))) )),
  inference(forward_demodulation,[],[f9483,f420])).
fof(f9483,plain,(
  ( ! [X26,X24,X27,X25] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X25),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X26),s('type.rat.rat',X24))),s('type.rat.rat',X27))))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X25),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X26),s('type.rat.rat',X24))),s('type.rat.rat',X27))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X27),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X24),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X25),s('type.rat.rat',X26)))))))) )),
  inference(forward_demodulation,[],[f9327,f420])).
fof(f9327,plain,(
  ( ! [X26,X24,X27,X25] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X25),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X26),s('type.rat.rat',X24))))),s('type.rat.rat',X27))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X25),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X26),s('type.rat.rat',X24))))),s('type.rat.rat',X27))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X27),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X24),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X25),s('type.rat.rat',X26)))))))) )),
  inference(superposition,[],[f1434,f1385])).
fof(f9486,plain,(
  ( ! [X30,X28,X31,X29] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X30),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X28),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X29),s('type.rat.rat',X31))))))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X30),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X28),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X29),s('type.rat.rat',X31))))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X31),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X28),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X29),s('type.rat.rat',X30)))))))) )),
  inference(forward_demodulation,[],[f9485,f420])).
fof(f9485,plain,(
  ( ! [X30,X28,X31,X29] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X30),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X28),s('type.rat.rat',X29))),s('type.rat.rat',X31))))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X30),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X28),s('type.rat.rat',X29))),s('type.rat.rat',X31))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X31),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X28),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X29),s('type.rat.rat',X30)))))))) )),
  inference(forward_demodulation,[],[f9328,f420])).
fof(f9328,plain,(
  ( ! [X30,X28,X31,X29] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X30),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X28),s('type.rat.rat',X29))))),s('type.rat.rat',X31))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X30),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X28),s('type.rat.rat',X29))))),s('type.rat.rat',X31))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X31),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X28),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X29),s('type.rat.rat',X30)))))))) )),
  inference(superposition,[],[f1434,f1385])).
fof(f9501,plain,(
  ( ! [X47,X45,X48,X46] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X48),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X45),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X46),s('type.rat.rat',X47))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X46),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X45),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X47),s('type.rat.rat',X48))))))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X46),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X45),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X47),s('type.rat.rat',X48)))))))))))) )),
  inference(forward_demodulation,[],[f9500,f420])).
fof(f9500,plain,(
  ( ! [X47,X45,X48,X46] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X46),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X45),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X47),s('type.rat.rat',X48))))))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X46),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X45),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X47),s('type.rat.rat',X48))))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X48),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X45),s('type.rat.rat',X46))),s('type.rat.rat',X47)))))) )),
  inference(forward_demodulation,[],[f9499,f420])).
fof(f9499,plain,(
  ( ! [X47,X45,X48,X46] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X46),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X45),s('type.rat.rat',X47))),s('type.rat.rat',X48))))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X46),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X45),s('type.rat.rat',X47))),s('type.rat.rat',X48))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X48),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X45),s('type.rat.rat',X46))),s('type.rat.rat',X47)))))) )),
  inference(forward_demodulation,[],[f9334,f420])).
fof(f9334,plain,(
  ( ! [X47,X45,X48,X46] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X46),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X45),s('type.rat.rat',X47))))),s('type.rat.rat',X48))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X46),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X45),s('type.rat.rat',X47))))),s('type.rat.rat',X48))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X48),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X45),s('type.rat.rat',X46))),s('type.rat.rat',X47)))))) )),
  inference(superposition,[],[f1434,f1375])).
fof(f9504,plain,(
  ( ! [X52,X50,X51,X49] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X52),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X49),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X50),s('type.rat.rat',X51))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X49),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X50),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X51),s('type.rat.rat',X52))))))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X49),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X50),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X51),s('type.rat.rat',X52)))))))))))) )),
  inference(forward_demodulation,[],[f9503,f420])).
fof(f9503,plain,(
  ( ! [X52,X50,X51,X49] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X49),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X50),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X51),s('type.rat.rat',X52))))))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X49),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X50),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X51),s('type.rat.rat',X52))))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X52),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X49),s('type.rat.rat',X50))),s('type.rat.rat',X51)))))) )),
  inference(forward_demodulation,[],[f9502,f420])).
fof(f9502,plain,(
  ( ! [X52,X50,X51,X49] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X49),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X50),s('type.rat.rat',X51))),s('type.rat.rat',X52))))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X49),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X50),s('type.rat.rat',X51))),s('type.rat.rat',X52))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X52),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X49),s('type.rat.rat',X50))),s('type.rat.rat',X51)))))) )),
  inference(forward_demodulation,[],[f9335,f420])).
fof(f9335,plain,(
  ( ! [X52,X50,X51,X49] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X49),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X50),s('type.rat.rat',X51))))),s('type.rat.rat',X52))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X49),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X50),s('type.rat.rat',X51))))),s('type.rat.rat',X52))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X52),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X49),s('type.rat.rat',X50))),s('type.rat.rat',X51)))))) )),
  inference(superposition,[],[f1434,f420])).
fof(f9506,plain,(
  ( ! [X54,X55,X53] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X55),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X53),s('type.rat.rat',X54))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X53),s('type.rat.rat',X54))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X55),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X55))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X54),s('type.rat.rat',X53)))) )),
  inference(forward_demodulation,[],[f9505,f373])).
fof(f9505,plain,(
  ( ! [X54,X55,X53] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X55),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X55))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X55),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X53),s('type.rat.rat',X54))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X53),s('type.rat.rat',X54))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X54),s('type.rat.rat',X53)))) )),
  inference(forward_demodulation,[],[f9336,f1308])).
fof(f9336,plain,(
  ( ! [X54,X55,X53] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.rat.rat',X55))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.rat.rat',X55))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X55),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X53),s('type.rat.rat',X54))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X53),s('type.rat.rat',X54))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X54),s('type.rat.rat',X53)))) )),
  inference(superposition,[],[f1434,f1434])).
fof(f9513,plain,(
  ( ! [X0,X1] : (s('type.rat.rat',X1) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X0),s('type.rat.rat',X0))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X1),s('type.rat.rat',X0))),s('type.rat.rat',X0))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X1),s('type.rat.rat',X0))),s('type.rat.rat',X0))))))) | s('type.rat.rat',X0) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(forward_demodulation,[],[f9512,f1308])).
fof(f9512,plain,(
  ( ! [X0,X1] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X0),s('type.rat.rat',X0))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X1),s('type.rat.rat',X0))),s('type.rat.rat',X0))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X1),s('type.rat.rat',X0))),s('type.rat.rat',X0))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.rat.rat',X1))) | s('type.rat.rat',X0) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(forward_demodulation,[],[f9339,f1409])).
fof(f9339,plain,(
  ( ! [X0,X1] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X0),s('type.rat.rat',X0))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X1),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X0),s('type.rat.rat',X0))))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X1),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X0),s('type.rat.rat',X0))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.rat.rat',X1))) | s('type.rat.rat',X0) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f1434,f1440])).
fof(f9514,plain,(
  ( ! [X2,X3] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X3),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X3))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X2),s('type.rat.rat',X2))),s('type.rat.rat',X3))) | s('type.rat.rat',X2) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(forward_demodulation,[],[f9340,f295])).
fof(f9340,plain,(
  ( ! [X2,X3] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X3),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X3),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X2),s('type.rat.rat',X2))),s('type.rat.rat',X3))) | s('type.rat.rat',X2) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f1434,f1440])).
fof(f9520,plain,(
  ( ! [X14,X15,X16] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X14),s('type.rat.rat',X15))),s('type.rat.rat',X14))),s('type.rat.rat',X16))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X16),s('type.rat.rat',X15))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X16),s('type.rat.rat',X15))))))) | s('type.rat.rat',X14) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(forward_demodulation,[],[f9345,f1409])).
fof(f9345,plain,(
  ( ! [X14,X15,X16] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X16),s('type.rat.rat',X15))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X16),s('type.rat.rat',X15))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X14),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X15),s('type.rat.rat',X14))))),s('type.rat.rat',X16))) | s('type.rat.rat',X14) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f1434,f1468])).
fof(f9524,plain,(
  ( ! [X19,X17,X20,X18] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X17),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X18),s('type.rat.rat',X20))))),s('type.rat.rat',X19))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X20),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X17),s('type.rat.rat',X18))))),s('type.rat.rat',X19))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X20),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X17),s('type.rat.rat',X18))))),s('type.rat.rat',X19)))))))) )),
  inference(forward_demodulation,[],[f9523,f1409])).
fof(f9523,plain,(
  ( ! [X19,X17,X20,X18] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X17),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X18),s('type.rat.rat',X20))),s('type.rat.rat',X19))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X20),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X17),s('type.rat.rat',X18))))),s('type.rat.rat',X19))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X20),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X17),s('type.rat.rat',X18))))),s('type.rat.rat',X19)))))))) )),
  inference(forward_demodulation,[],[f9522,f1410])).
fof(f9522,plain,(
  ( ! [X19,X17,X20,X18] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X17),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X18),s('type.rat.rat',X19))),s('type.rat.rat',X20))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X20),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X17),s('type.rat.rat',X18))))),s('type.rat.rat',X19))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X20),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X17),s('type.rat.rat',X18))))),s('type.rat.rat',X19)))))))) )),
  inference(forward_demodulation,[],[f9521,f420])).
fof(f9521,plain,(
  ( ! [X19,X17,X20,X18] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X20),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X17),s('type.rat.rat',X18))))),s('type.rat.rat',X19))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X20),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X17),s('type.rat.rat',X18))))),s('type.rat.rat',X19))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X17),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X18),s('type.rat.rat',X19))))),s('type.rat.rat',X20)))) )),
  inference(forward_demodulation,[],[f9346,f1409])).
fof(f9346,plain,(
  ( ! [X19,X17,X20,X18] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X20),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X17),s('type.rat.rat',X18))),s('type.rat.rat',X19))))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X20),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X17),s('type.rat.rat',X18))),s('type.rat.rat',X19))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X17),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X18),s('type.rat.rat',X19))))),s('type.rat.rat',X20)))) )),
  inference(superposition,[],[f1434,f1409])).
fof(f9530,plain,(
  ( ! [X30,X28,X31,X29] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X28),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X29),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X30),s('type.rat.rat',X31))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X31),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X30),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X28),s('type.rat.rat',X29))))))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X31),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X30),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X28),s('type.rat.rat',X29)))))))))))) )),
  inference(forward_demodulation,[],[f9529,f420])).
fof(f9529,plain,(
  ( ! [X30,X28,X31,X29] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X28),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X29),s('type.rat.rat',X30))),s('type.rat.rat',X31))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X31),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X30),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X28),s('type.rat.rat',X29))))))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X31),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X30),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X28),s('type.rat.rat',X29)))))))))))) )),
  inference(forward_demodulation,[],[f9349,f420])).
fof(f9349,plain,(
  ( ! [X30,X28,X31,X29] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X31),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X30),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X28),s('type.rat.rat',X29))))))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X31),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X30),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X28),s('type.rat.rat',X29))))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X28),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X29),s('type.rat.rat',X30))))),s('type.rat.rat',X31)))) )),
  inference(superposition,[],[f1434,f1385])).
fof(f9536,plain,(
  ( ! [X35,X36] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X35),s('type.rat.rat',X35))),s('type.rat.rat',X36))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X36),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X36))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X35),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) )),
  inference(forward_demodulation,[],[f9535,f373])).
fof(f9535,plain,(
  ( ! [X35,X36] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X36),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X36))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X35),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X35))))),s('type.rat.rat',X36))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X35),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) )),
  inference(forward_demodulation,[],[f9351,f295])).
fof(f9351,plain,(
  ( ! [X35,X36] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X36),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X36),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X35),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X35))))),s('type.rat.rat',X36))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X35),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) )),
  inference(superposition,[],[f1434,f1436])).
fof(f9544,plain,(
  ( ! [X47,X45,X48,X46] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X45),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X46),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X47),s('type.rat.rat',X48))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X48),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X46),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X45),s('type.rat.rat',X47))))))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X48),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X46),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X45),s('type.rat.rat',X47)))))))))))) )),
  inference(forward_demodulation,[],[f9543,f420])).
fof(f9543,plain,(
  ( ! [X47,X45,X48,X46] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X45),s('type.rat.rat',X46))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X47),s('type.rat.rat',X48))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X48),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X46),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X45),s('type.rat.rat',X47))))))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X48),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X46),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X45),s('type.rat.rat',X47)))))))))))) )),
  inference(forward_demodulation,[],[f9355,f420])).
fof(f9355,plain,(
  ( ! [X47,X45,X48,X46] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X48),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X46),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X45),s('type.rat.rat',X47))))))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X48),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X46),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X45),s('type.rat.rat',X47))))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X45),s('type.rat.rat',X46))),s('type.rat.rat',X47))),s('type.rat.rat',X48)))) )),
  inference(superposition,[],[f1434,f1375])).
fof(f9546,plain,(
  ( ! [X52,X50,X51,X49] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X49),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X50),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X51),s('type.rat.rat',X52))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X52),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X49),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X50),s('type.rat.rat',X51))))))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X52),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X49),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X50),s('type.rat.rat',X51)))))))))))) )),
  inference(forward_demodulation,[],[f9545,f420])).
fof(f9545,plain,(
  ( ! [X52,X50,X51,X49] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X49),s('type.rat.rat',X50))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X51),s('type.rat.rat',X52))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X52),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X49),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X50),s('type.rat.rat',X51))))))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X52),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X49),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X50),s('type.rat.rat',X51)))))))))))) )),
  inference(forward_demodulation,[],[f9356,f420])).
fof(f9356,plain,(
  ( ! [X52,X50,X51,X49] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X52),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X49),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X50),s('type.rat.rat',X51))))))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X52),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X49),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X50),s('type.rat.rat',X51))))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X49),s('type.rat.rat',X50))),s('type.rat.rat',X51))),s('type.rat.rat',X52)))) )),
  inference(superposition,[],[f1434,f420])).
fof(f9548,plain,(
  ( ! [X54,X55,X53] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X53),s('type.rat.rat',X54))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X53),s('type.rat.rat',X54))))),s('type.rat.rat',X55))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X55),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X55))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X54),s('type.rat.rat',X53)))) )),
  inference(forward_demodulation,[],[f9547,f373])).
fof(f9547,plain,(
  ( ! [X54,X55,X53] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X55),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X55))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X53),s('type.rat.rat',X54))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X53),s('type.rat.rat',X54))))))),s('type.rat.rat',X55))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X54),s('type.rat.rat',X53)))) )),
  inference(forward_demodulation,[],[f9357,f295])).
fof(f9357,plain,(
  ( ! [X54,X55,X53] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X55),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X55),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X53),s('type.rat.rat',X54))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X53),s('type.rat.rat',X54))))))),s('type.rat.rat',X55))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X54),s('type.rat.rat',X53)))) )),
  inference(superposition,[],[f1434,f1434])).
fof(f9564,plain,(
  ( ! [X4,X5] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X4),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X5),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X4),s('type.rat.rat',X5))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X5),s('type.rat.rat',X4)))) )),
  inference(forward_demodulation,[],[f9379,f373])).
fof(f9379,plain,(
  ( ! [X4,X5] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X4),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X5),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X4),s('type.rat.rat',X5))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X5),s('type.rat.rat',X4)))) )),
  inference(superposition,[],[f1434,f420])).
fof(f9570,plain,(
  ( ! [X19,X17,X18] : (s('type.rat.rat',X19) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X17),s('type.rat.rat',X18))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X17),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X18),s('type.rat.rat',X19))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X18),s('type.rat.rat',X17)))) )),
  inference(forward_demodulation,[],[f9569,f1308])).
fof(f9569,plain,(
  ( ! [X19,X17,X18] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.rat.rat',X19))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X17),s('type.rat.rat',X18))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X17),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X18),s('type.rat.rat',X19))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X18),s('type.rat.rat',X17)))) )),
  inference(forward_demodulation,[],[f9385,f420])).
fof(f9385,plain,(
  ( ! [X19,X17,X18] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.rat.rat',X19))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X17),s('type.rat.rat',X18))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X17),s('type.rat.rat',X18))),s('type.rat.rat',X19))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X18),s('type.rat.rat',X17)))) )),
  inference(superposition,[],[f1375,f1434])).
fof(f9573,plain,(
  ( ! [X24,X23,X25] : (s('type.rat.rat',X25) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X23),s('type.rat.rat',X24))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X25),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X23),s('type.rat.rat',X24))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X24),s('type.rat.rat',X23)))) )),
  inference(forward_demodulation,[],[f9387,f295])).
fof(f9387,plain,(
  ( ! [X24,X23,X25] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X25),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X23),s('type.rat.rat',X24))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X25),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X23),s('type.rat.rat',X24))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X24),s('type.rat.rat',X23)))) )),
  inference(superposition,[],[f1385,f1434])).
fof(f9587,plain,(
  ( ! [X184,X183] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X183),s('type.rat.rat',X184))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X183),s('type.rat.rat',X184))))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X183),s('type.rat.rat',X184))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X183),s('type.rat.rat',X184))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X184),s('type.rat.rat',X183)))) ) | $spl47),
  inference(forward_demodulation,[],[f9586,f373])).
fof(f9586,plain,(
  ( ! [X184,X183] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X183),s('type.rat.rat',X184))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X183),s('type.rat.rat',X184))))))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X183),s('type.rat.rat',X184))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X183),s('type.rat.rat',X184))))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X184),s('type.rat.rat',X183)))) ) | $spl47),
  inference(subsumption_resolution,[],[f9585,f2895])).
fof(f9585,plain,(
  ( ! [X184,X183] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X183),s('type.rat.rat',X184))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X183),s('type.rat.rat',X184))))))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X183),s('type.rat.rat',X184))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X183),s('type.rat.rat',X184))))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X184),s('type.rat.rat',X183)))) )),
  inference(forward_demodulation,[],[f9438,f295])).
fof(f9438,plain,(
  ( ! [X184,X183] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X183),s('type.rat.rat',X184))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X183),s('type.rat.rat',X184))))))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X183),s('type.rat.rat',X184))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X183),s('type.rat.rat',X184))))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X184),s('type.rat.rat',X183)))) )),
  inference(superposition,[],[f1436,f1434])).
fof(f9589,plain,(
  ( ! [X189,X187,X188] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X187),s('type.rat.rat',X188))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X187),s('type.rat.rat',X188))))),s('type.rat.rat',X189))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X189),s('type.rat.rat',X189))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X188),s('type.rat.rat',X187)))) )),
  inference(forward_demodulation,[],[f9588,f373])).
fof(f9588,plain,(
  ( ! [X189,X187,X188] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X189),s('type.rat.rat',X189))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X187),s('type.rat.rat',X188))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X187),s('type.rat.rat',X188))))))),s('type.rat.rat',X189))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X188),s('type.rat.rat',X187)))) )),
  inference(forward_demodulation,[],[f9440,f1308])).
fof(f9440,plain,(
  ( ! [X189,X187,X188] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X189),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.rat.rat',X189))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X187),s('type.rat.rat',X188))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X187),s('type.rat.rat',X188))))))),s('type.rat.rat',X189))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X188),s('type.rat.rat',X187)))) )),
  inference(superposition,[],[f1466,f1434])).
fof(f9601,plain,(
  ( ! [X202,X200,X199,X203,X201] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X202),s('type.rat.rat',X203))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X203),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X199),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X200),s('type.rat.rat',X201))))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X199),s('type.rat.rat',X200))))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X202),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X199),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X200),s('type.rat.rat',X201))))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X199),s('type.rat.rat',X200))))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X201),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X200),s('type.rat.rat',X199)))) )),
  inference(forward_demodulation,[],[f9600,f1409])).
fof(f9600,plain,(
  ( ! [X202,X200,X199,X203,X201] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X202),s('type.rat.rat',X203))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X203),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X199),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X200),s('type.rat.rat',X201))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X199),s('type.rat.rat',X200))))))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X202),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X199),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X200),s('type.rat.rat',X201))))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X199),s('type.rat.rat',X200))))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X201),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X200),s('type.rat.rat',X199)))) )),
  inference(forward_demodulation,[],[f9599,f1409])).
fof(f9599,plain,(
  ( ! [X202,X200,X199,X203,X201] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X202),s('type.rat.rat',X203))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X203),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X199),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X200),s('type.rat.rat',X201))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X199),s('type.rat.rat',X200))))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X202),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X199),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X200),s('type.rat.rat',X201))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X199),s('type.rat.rat',X200))))))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X201),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X200),s('type.rat.rat',X199)))) )),
  inference(forward_demodulation,[],[f9598,f1409])).
fof(f9598,plain,(
  ( ! [X202,X200,X199,X203,X201] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X202),s('type.rat.rat',X203))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X203),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X199),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X200),s('type.rat.rat',X201))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X199),s('type.rat.rat',X200))))))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X202),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X199),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X200),s('type.rat.rat',X201))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X199),s('type.rat.rat',X200))))))))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X201),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X200),s('type.rat.rat',X199)))) )),
  inference(forward_demodulation,[],[f9597,f1409])).
fof(f9597,plain,(
  ( ! [X202,X200,X199,X203,X201] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X202),s('type.rat.rat',X203))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X203),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X199),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X200),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X201),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X199),s('type.rat.rat',X200))))))))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X202),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X199),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X200),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X201),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X199),s('type.rat.rat',X200))))))))))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X201),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X200),s('type.rat.rat',X199)))) )),
  inference(forward_demodulation,[],[f9596,f1340])).
fof(f9596,plain,(
  ( ! [X202,X200,X199,X203,X201] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X202),s('type.rat.rat',X203))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X203),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X199),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X200),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X199),s('type.rat.rat',X200))))),s('type.rat.rat',X201))))))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X202),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X199),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X200),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X199),s('type.rat.rat',X200))))),s('type.rat.rat',X201))))))))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X201),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X200),s('type.rat.rat',X199)))) )),
  inference(forward_demodulation,[],[f9595,f420])).
fof(f9595,plain,(
  ( ! [X202,X200,X199,X203,X201] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X202),s('type.rat.rat',X203))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X203),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X199),s('type.rat.rat',X200))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X199),s('type.rat.rat',X200))))),s('type.rat.rat',X201))))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X202),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X199),s('type.rat.rat',X200))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X199),s('type.rat.rat',X200))))),s('type.rat.rat',X201))))))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X201),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X200),s('type.rat.rat',X199)))) )),
  inference(forward_demodulation,[],[f9594,f420])).
fof(f9594,plain,(
  ( ! [X202,X200,X199,X203,X201] : (~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X201),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X202),s('type.rat.rat',X203))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X203),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X199),s('type.rat.rat',X200))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X199),s('type.rat.rat',X200))))))),s('type.rat.rat',X201))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X202),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X199),s('type.rat.rat',X200))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X199),s('type.rat.rat',X200))))))),s('type.rat.rat',X201))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X200),s('type.rat.rat',X199)))) )),
  inference(forward_demodulation,[],[f9444,f295])).
fof(f9444,plain,(
  ( ! [X202,X200,X199,X203,X201] : (~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X201),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X202),s('type.rat.rat',X203))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X203),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X199),s('type.rat.rat',X200))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X199),s('type.rat.rat',X200))))))),s('type.rat.rat',X201))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X202),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X199),s('type.rat.rat',X200))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X199),s('type.rat.rat',X200))))))),s('type.rat.rat',X201))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X200),s('type.rat.rat',X199)))) )),
  inference(superposition,[],[f1488,f1434])).
fof(f9606,plain,(
  ( ! [X208,X206,X204,X207,X205] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X207),s('type.rat.rat',X208))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X208),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X206),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X204),s('type.rat.rat',X205))))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X204),s('type.rat.rat',X205))))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X207),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X206),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X204),s('type.rat.rat',X205))))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X204),s('type.rat.rat',X205))))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X206),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X205),s('type.rat.rat',X204)))) )),
  inference(forward_demodulation,[],[f9605,f1409])).
fof(f9605,plain,(
  ( ! [X208,X206,X204,X207,X205] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X207),s('type.rat.rat',X208))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X208),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X206),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X204),s('type.rat.rat',X205))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X204),s('type.rat.rat',X205))))))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X207),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X206),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X204),s('type.rat.rat',X205))))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X204),s('type.rat.rat',X205))))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X206),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X205),s('type.rat.rat',X204)))) )),
  inference(forward_demodulation,[],[f9604,f1409])).
fof(f9604,plain,(
  ( ! [X208,X206,X204,X207,X205] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X207),s('type.rat.rat',X208))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X208),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X206),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X204),s('type.rat.rat',X205))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X204),s('type.rat.rat',X205))))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X207),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X206),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X204),s('type.rat.rat',X205))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X204),s('type.rat.rat',X205))))))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X206),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X205),s('type.rat.rat',X204)))) )),
  inference(forward_demodulation,[],[f9603,f1409])).
fof(f9603,plain,(
  ( ! [X208,X206,X204,X207,X205] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X207),s('type.rat.rat',X208))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X208),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X206),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X204),s('type.rat.rat',X205))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X204),s('type.rat.rat',X205))))))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X207),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X206),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X204),s('type.rat.rat',X205))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X204),s('type.rat.rat',X205))))))))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X206),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X205),s('type.rat.rat',X204)))) )),
  inference(forward_demodulation,[],[f9602,f373])).
fof(f9602,plain,(
  ( ! [X208,X206,X204,X207,X205] : (~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X206),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X207),s('type.rat.rat',X208))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X208),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X206),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X204),s('type.rat.rat',X205))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X204),s('type.rat.rat',X205))))))))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X207),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X206),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X204),s('type.rat.rat',X205))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X204),s('type.rat.rat',X205))))))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X205),s('type.rat.rat',X204)))) )),
  inference(forward_demodulation,[],[f9445,f1308])).
fof(f9445,plain,(
  ( ! [X208,X206,X204,X207,X205] : (~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.rat.rat',X206))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X207),s('type.rat.rat',X208))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X208),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X206),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X204),s('type.rat.rat',X205))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X204),s('type.rat.rat',X205))))))))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X207),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X206),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X204),s('type.rat.rat',X205))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X204),s('type.rat.rat',X205))))))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X205),s('type.rat.rat',X204)))) )),
  inference(superposition,[],[f1488,f1434])).
fof(f10669,plain,(
  ( ! [X12,X11] : (~sP5('F_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X12),s('type.rat.rat',sK12)))),'const.rat.rat_les_2'(s('type.rat.rat',X12),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X11),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',X11))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',X11)))) )),
  inference(superposition,[],[f7100,f1466])).
fof(f314,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'F_0') != s(bool,X0)) )),
  inference(cnf_transformation,[],[f203])).
fof(f203,plain,(
  ! [X0] : ((s(bool,'F_0') != s(bool,X0) | ~p(s(bool,X0))) & (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f87])).
fof(f87,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(flattening,[],[f86])).
fof(f86,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(rectify,[],[f36])).
fof(f36,axiom,(
  ! [X9] : (s(bool,'F_0') = s(bool,X9) <=> ~p(s(bool,X9)))),
  file('thm.rat.RAT_RDIV_LES_NEG','thm.bool.EQ_CLAUSES|split|2')).
fof(f315,plain,(
  ( ! [X0] : (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f203])).
fof(f552,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X0),s('type.rat.rat',X0)))) )),
  inference(unit_resulting_resolution,[],[f367,f315])).
fof(f1422,plain,(
  ( ! [X2,X0,X1] : (s(X2,f(s(bool,'F_0'))) != s(X2,g(s(bool,'F_0'))) | s(fun(bool,X2),X0) = s(fun(bool,X2),X1) | s(bool,'T_0') = s(bool,sK13(X0,X1,X2,bool))) )),
  inference(superposition,[],[f419,f297])).
fof(f1423,plain,(
  ( ! [X2,X0,X1] : (s(bool,'F_0') != s(bool,f(s(X0,sK13(X1,X2,bool,X0)))) | s(fun(X0,bool),X1) = s(fun(X0,bool),X2) | s(bool,'T_0') = s(bool,g(s(X0,sK13(X1,X2,bool,X0))))) )),
  inference(superposition,[],[f419,f297])).
fof(f4098,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,g(s(X0,sK13(X1,X2,bool,X0)))) | s(fun(X0,bool),X1) = s(fun(X0,bool),X2) | s(bool,'T_0') = s(bool,f(s(X0,sK13(X1,X2,bool,X0))))) )),
  inference(condensation,[],[f4097])).
fof(f4097,plain,(
  ( ! [X10,X8,X11,X9] : (s(fun(X8,bool),X9) = s(fun(X8,bool),X10) | s(bool,'T_0') = s(bool,g(s(X8,sK13(X9,X10,bool,X8)))) | s(bool,'T_0') = s(bool,f(s(X8,sK13(X9,X10,bool,X8)))) | s(bool,'T_0') = s(bool,X11)) )),
  inference(subsumption_resolution,[],[f4090,f297])).
fof(f4090,plain,(
  ( ! [X10,X8,X11,X9] : (s(bool,'F_0') != s(bool,X11) | s(fun(X8,bool),X9) = s(fun(X8,bool),X10) | s(bool,'T_0') = s(bool,g(s(X8,sK13(X9,X10,bool,X8)))) | s(bool,'T_0') = s(bool,f(s(X8,sK13(X9,X10,bool,X8)))) | s(bool,'T_0') = s(bool,X11)) )),
  inference(superposition,[],[f1423,f674])).
fof(f1982,plain,(
  ( ! [X123,X121,X124,X122] : (s(bool,'T_0') != s(bool,f(s(X121,sK13(X122,X123,bool,X121)))) | s(fun(X121,bool),X122) = s(fun(X121,bool),X123) | s(bool,X124) = s(bool,g(s(X121,sK13(X122,X123,bool,X121)))) | s(bool,'T_0') = s(bool,X124)) )),
  inference(superposition,[],[f419,f674])).
fof(f1868,plain,(
  ( ! [X127,X130,X128,X129] : (s(bool,X130) != s(bool,f(s(X127,sK13(X128,X129,bool,X127)))) | s(fun(X127,bool),X128) = s(fun(X127,bool),X129) | s(bool,'T_0') = s(bool,X130) | s(bool,'T_0') = s(bool,g(s(X127,sK13(X128,X129,bool,X127))))) )),
  inference(superposition,[],[f419,f674])).
fof(f1505,plain,(
  ( ! [X0,X1] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X0),s('type.rat.rat',X1))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X1),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X0),s('type.rat.rat',sK12)))))) )),
  inference(subsumption_resolution,[],[f1494,f288])).
fof(f1494,plain,(
  ( ! [X0,X1] : (~p(s(bool,'T_0')) | s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X0),s('type.rat.rat',X1))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X1),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X0),s('type.rat.rat',sK12)))))) )),
  inference(superposition,[],[f421,f536])).
fof(f6827,plain,(
  ( ! [X0,X1] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X1),s('type.rat.rat',X0))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',X0))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X1),s('type.rat.rat',sK12)))))) )),
  inference(superposition,[],[f1505,f372])).
fof(f6851,plain,(
  ( ! [X0,X1] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X0),s('type.rat.rat',X1))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X1),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',X0)))))) )),
  inference(superposition,[],[f1505,f372])).
fof(f6860,plain,(
  ( ! [X6,X7,X5] : (s(bool,'T_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X6),s('type.rat.rat',X5))) | s(bool,X7) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X5),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X6),s('type.rat.rat',sK12))))) | s(bool,'T_0') = s(bool,X7)) )),
  inference(superposition,[],[f1505,f674])).
fof(f6862,plain,(
  ( ! [X12,X13,X11] : (s(bool,X13) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X12),s('type.rat.rat',X11))) | s(bool,'T_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X12),s('type.rat.rat',sK12))))) | s(bool,'T_0') = s(bool,X13)) )),
  inference(superposition,[],[f1505,f674])).
fof(f6875,plain,(
  ( ! [X23,X21,X22] : (~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X22),s('type.rat.rat',X21)))) | sP0(X23,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X21),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X22),s('type.rat.rat',sK12)))))) )),
  inference(superposition,[],[f387,f1505])).
fof(f6876,plain,(
  ( ! [X26,X24,X25] : (~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X25),s('type.rat.rat',X24)))) | sP0('const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X24),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X25),s('type.rat.rat',sK12)))),X26)) )),
  inference(superposition,[],[f388,f1505])).
fof(f6877,plain,(
  ( ! [X28,X29,X27] : (~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X28),s('type.rat.rat',X27)))) | p(s(bool,X29)) | sP1('const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X27),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X28),s('type.rat.rat',sK12)))),X29)) )),
  inference(superposition,[],[f403,f1505])).
fof(f6878,plain,(
  ( ! [X30,X31,X32] : (~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X31),s('type.rat.rat',X30)))) | p(s(bool,X32)) | sP1(X32,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X30),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X31),s('type.rat.rat',sK12)))))) )),
  inference(superposition,[],[f406,f1505])).
fof(f6879,plain,(
  ( ! [X35,X33,X36,X34] : (~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X34),s('type.rat.rat',X33)))) | ~p(s(bool,X35)) | p(s(bool,X36)) | ~sP5(X35,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X33),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X34),s('type.rat.rat',sK12)))),X36)) )),
  inference(superposition,[],[f431,f1505])).
fof(f6880,plain,(
  ( ! [X39,X37,X38,X40] : (~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X38),s('type.rat.rat',X37)))) | sP5(X39,X40,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X37),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X38),s('type.rat.rat',sK12))))) | ~sP4(X39,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X37),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X38),s('type.rat.rat',sK12)))),X40) | ~sP3(X40,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X37),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X38),s('type.rat.rat',sK12)))),X39) | ~sP2('const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X37),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X38),s('type.rat.rat',sK12)))),X40,X39)) )),
  inference(superposition,[],[f432,f1505])).
fof(f6881,plain,(
  ( ! [X43,X41,X44,X42] : (~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X42),s('type.rat.rat',X41)))) | ~p(s(bool,X43)) | p(s(bool,X44)) | ~sP4(X43,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X41),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X42),s('type.rat.rat',sK12)))),X44)) )),
  inference(superposition,[],[f435,f1505])).
fof(f6882,plain,(
  ( ! [X47,X45,X48,X46] : (~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X46),s('type.rat.rat',X45)))) | ~p(s(bool,X47)) | p(s(bool,X48)) | ~sP3(X47,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X45),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X46),s('type.rat.rat',sK12)))),X48)) )),
  inference(superposition,[],[f439,f1505])).
fof(f6883,plain,(
  ( ! [X52,X50,X51,X49] : (~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X50),s('type.rat.rat',X49)))) | p(s(bool,X51)) | p(s(bool,X52)) | ~sP6('const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X49),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X50),s('type.rat.rat',sK12)))),X51,X52)) )),
  inference(superposition,[],[f458,f1505])).
fof(f6884,plain,(
  ( ! [X54,X56,X55,X53] : (~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X54),s('type.rat.rat',X53)))) | ~p(s(bool,X55)) | sP7('const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X53),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X54),s('type.rat.rat',sK12)))),X56,X55)) )),
  inference(superposition,[],[f463,f1505])).
fof(f6885,plain,(
  ( ! [X59,X57,X60,X58] : (~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X58),s('type.rat.rat',X57)))) | ~p(s(bool,X59)) | sP7('const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X57),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X58),s('type.rat.rat',sK12)))),X59,X60)) )),
  inference(superposition,[],[f464,f1505])).
fof(f6886,plain,(
  ( ! [X61,X64,X62,X63] : (~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X62),s('type.rat.rat',X61)))) | p(s(bool,X63)) | p(s(bool,X64)) | ~sP7('const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X61),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X62),s('type.rat.rat',sK12)))),X64,X63)) )),
  inference(superposition,[],[f465,f1505])).
fof(f6887,plain,(
  ( ! [X68,X66,X67,X65] : (~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X66),s('type.rat.rat',X65)))) | p(s(bool,X67)) | ~p(s(bool,X68)) | ~sP8(X68,X67,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X65),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X66),s('type.rat.rat',sK12)))))) )),
  inference(superposition,[],[f475,f1505])).
fof(f6888,plain,(
  ( ! [X70,X72,X71,X69] : (~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X70),s('type.rat.rat',X69)))) | p(s(bool,X71)) | sP9('const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X69),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X70),s('type.rat.rat',sK12)))),X72,X71)) )),
  inference(superposition,[],[f480,f1505])).
fof(f6889,plain,(
  ( ! [X76,X74,X75,X73] : (~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X74),s('type.rat.rat',X73)))) | ~p(s(bool,X75)) | sP9('const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X73),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X74),s('type.rat.rat',sK12)))),X75,X76)) )),
  inference(superposition,[],[f481,f1505])).
fof(f6890,plain,(
  ( ! [X80,X78,X79,X77] : (~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X78),s('type.rat.rat',X77)))) | ~p(s(bool,X79)) | p(s(bool,X80)) | ~sP9('const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X77),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X78),s('type.rat.rat',sK12)))),X80,X79)) )),
  inference(superposition,[],[f482,f1505])).
fof(f6891,plain,(
  ( ! [X83,X81,X84,X82] : (~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X82),s('type.rat.rat',X81)))) | ~sP8('const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X81),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X82),s('type.rat.rat',sK12)))),X83,X84) | sP9('const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X81),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X82),s('type.rat.rat',sK12)))),X83,X84)) )),
  inference(superposition,[],[f485,f1505])).
fof(f6892,plain,(
  ( ! [X88,X87,X85,X86] : (~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X86),s('type.rat.rat',X85)))) | ~sP6('const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X85),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X86),s('type.rat.rat',sK12)))),X87,X88) | sP7('const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X85),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X86),s('type.rat.rat',sK12)))),X87,X88)) )),
  inference(superposition,[],[f486,f1505])).
fof(f7955,plain,(
  ( ! [X21] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X21),s('type.rat.rat',sK12))))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X21),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) )),
  inference(superposition,[],[f1505,f1308])).
fof(f6830,plain,(
  ( ! [X6,X7,X5] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X7),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X5),s('type.rat.rat',X6))))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X5),s('type.rat.rat',sK12))),s('type.rat.rat',X6))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X7),s('type.rat.rat',sK12)))))) )),
  inference(superposition,[],[f1505,f1410])).
fof(f6832,plain,(
  ( ! [X12,X13,X11] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X13),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat',X12))))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X12),s('type.rat.rat',sK12))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X13),s('type.rat.rat',sK12)))))) )),
  inference(superposition,[],[f1505,f420])).
fof(f6831,plain,(
  ( ! [X10,X8,X9] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X10),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X8),s('type.rat.rat',X9))))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X9),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X8),s('type.rat.rat',sK12))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X10),s('type.rat.rat',sK12)))))) )),
  inference(superposition,[],[f1505,f1375])).
fof(f6833,plain,(
  ( ! [X14,X15] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X15),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X14))))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',X14))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X15),s('type.rat.rat',sK12)))))) )),
  inference(superposition,[],[f1505,f1340])).
fof(f7956,plain,(
  ( ! [X22] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X22),s('type.rat.rat',sK12))),s('type.rat.rat',sK12))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.rat.rat',X22)))) )),
  inference(superposition,[],[f1505,f1308])).
fof(f6854,plain,(
  ( ! [X6,X7,X5] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X5),s('type.rat.rat',X6))),s('type.rat.rat',X7))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X7),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X5),s('type.rat.rat',sK12))),s('type.rat.rat',X6)))))) )),
  inference(superposition,[],[f1505,f1410])).
fof(f6856,plain,(
  ( ! [X12,X13,X11] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat',X12))),s('type.rat.rat',X13))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X13),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X12),s('type.rat.rat',sK12)))))))) )),
  inference(superposition,[],[f1505,f420])).
fof(f6855,plain,(
  ( ! [X10,X8,X9] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X8),s('type.rat.rat',X9))),s('type.rat.rat',X10))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X10),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X9),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X8),s('type.rat.rat',sK12)))))))) )),
  inference(superposition,[],[f1505,f1375])).
fof(f6857,plain,(
  ( ! [X14,X15] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X14))),s('type.rat.rat',X15))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X15),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',X14)))))) )),
  inference(superposition,[],[f1505,f1340])).
fof(f7100,plain,(
  ( ! [X0,X1] : (~sP5('F_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',X0))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X1),s('type.rat.rat',sK12)))),'const.rat.rat_les_2'(s('type.rat.rat',X1),s('type.rat.rat',X0)))) )),
  inference(superposition,[],[f6806,f372])).
fof(f7107,plain,(
  ( ! [X0,X1] : (~sP5('F_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X1),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',X0)))),'const.rat.rat_les_2'(s('type.rat.rat',X0),s('type.rat.rat',X1)))) )),
  inference(superposition,[],[f6806,f372])).
fof(f7623,plain,(
  ( ! [X0,X1] : (sP5('T_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',X0))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X1),s('type.rat.rat',sK12)))),'const.rat.rat_les_2'(s('type.rat.rat',X1),s('type.rat.rat',X0)))) )),
  inference(superposition,[],[f6807,f372])).
fof(f7629,plain,(
  ( ! [X0,X1] : (sP5('T_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X1),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',X0)))),'const.rat.rat_les_2'(s('type.rat.rat',X0),s('type.rat.rat',X1)))) )),
  inference(superposition,[],[f6807,f372])).
fof(f7682,plain,(
  ( ! [X0,X1] : (~sP5('F_0','const.rat.rat_les_2'(s('type.rat.rat',X1),s('type.rat.rat',X0)),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',X0))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X1),s('type.rat.rat',sK12)))))) )),
  inference(superposition,[],[f6808,f372])).
fof(f7701,plain,(
  ( ! [X0,X1] : (~sP5('F_0','const.rat.rat_les_2'(s('type.rat.rat',X0),s('type.rat.rat',X1)),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X1),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',X0)))))) )),
  inference(superposition,[],[f6808,f372])).
fof(f7862,plain,(
  ( ! [X0,X1] : (sP5('T_0','const.rat.rat_les_2'(s('type.rat.rat',X1),s('type.rat.rat',X0)),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',X0))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X1),s('type.rat.rat',sK12)))))) )),
  inference(superposition,[],[f6809,f372])).
fof(f7882,plain,(
  ( ! [X0,X1] : (sP5('T_0','const.rat.rat_les_2'(s('type.rat.rat',X0),s('type.rat.rat',X1)),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X1),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',X0)))))) )),
  inference(superposition,[],[f6809,f372])).
fof(f7910,plain,(
  ( ! [X0] : (~sP2('const.rat.rat_les_2'(s('type.rat.rat',X0),s('type.rat.rat',X0)),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',X0))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',X0)))),'F_0')) )),
  inference(superposition,[],[f7097,f372])).
fof(f10659,plain,(
  ( ! [X0] : (~sP2('const.rat.rat_les_2'(s('type.rat.rat',X0),s('type.rat.rat',X0)),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',X0))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X0),s('type.rat.rat',sK12)))),'F_0')) )),
  inference(unit_resulting_resolution,[],[f496,f527,f525,f7100,f434])).
fof(f10668,plain,(
  ( ! [X10,X8,X9] : (~sP5('F_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',X8))),s('type.rat.rat',X9))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X10),s('type.rat.rat',sK12)))),'const.rat.rat_les_2'(s('type.rat.rat',X10),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X8),s('type.rat.rat',X9)))))) )),
  inference(superposition,[],[f7100,f1409])).
fof(f10671,plain,(
  ( ! [X17,X18,X16] : (~sP5('F_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X17),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',X16))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X18),s('type.rat.rat',sK12)))),'const.rat.rat_les_2'(s('type.rat.rat',X18),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X16),s('type.rat.rat',X17)))))) )),
  inference(superposition,[],[f7100,f1385])).
fof(f10675,plain,(
  ( ! [X0,X1] : (~sP5('F_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',X1))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',X0)))),'const.rat.rat_les_2'(s('type.rat.rat',X0),s('type.rat.rat',X1)))) )),
  inference(superposition,[],[f7100,f372])).
fof(f10677,plain,(
  ( ! [X4] : (~sP5('F_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',X4))),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.rat.rat',X4)))) )),
  inference(superposition,[],[f7100,f1308])).
fof(f10678,plain,(
  ( ! [X6,X7,X5] : (~sP5('F_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',X7))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X5),s('type.rat.rat',sK12))),s('type.rat.rat',X6)))),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X5),s('type.rat.rat',X6))),s('type.rat.rat',X7)))) )),
  inference(superposition,[],[f7100,f1410])).
fof(f10679,plain,(
  ( ! [X10,X8,X9] : (~sP5('F_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',X10))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X9),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X8),s('type.rat.rat',sK12)))))),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X8),s('type.rat.rat',X9))),s('type.rat.rat',X10)))) )),
  inference(superposition,[],[f7100,f1375])).
fof(f10680,plain,(
  ( ! [X12,X13,X11] : (~sP5('F_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',X13))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X12),s('type.rat.rat',sK12)))))),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat',X12))),s('type.rat.rat',X13)))) )),
  inference(superposition,[],[f7100,f420])).
fof(f10681,plain,(
  ( ! [X14,X15] : (~sP5('F_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',X15))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',X14)))),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X14))),s('type.rat.rat',X15)))) )),
  inference(superposition,[],[f7100,f1340])).
fof(f6806,plain,(
  ( ! [X0,X1] : (~sP5('F_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X0),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X1),s('type.rat.rat',sK12)))),'const.rat.rat_les_2'(s('type.rat.rat',X1),s('type.rat.rat',X0)))) )),
  inference(unit_resulting_resolution,[],[f496,f1505,f450])).
fof(f6807,plain,(
  ( ! [X0,X1] : (sP5('T_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X0),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X1),s('type.rat.rat',sK12)))),'const.rat.rat_les_2'(s('type.rat.rat',X1),s('type.rat.rat',X0)))) )),
  inference(unit_resulting_resolution,[],[f288,f1505,f448])).
fof(f6808,plain,(
  ( ! [X0,X1] : (~sP5('F_0','const.rat.rat_les_2'(s('type.rat.rat',X0),s('type.rat.rat',X1)),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X1),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X0),s('type.rat.rat',sK12)))))) )),
  inference(unit_resulting_resolution,[],[f496,f1505,f450])).
fof(f6809,plain,(
  ( ! [X0,X1] : (sP5('T_0','const.rat.rat_les_2'(s('type.rat.rat',X0),s('type.rat.rat',X1)),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X1),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X0),s('type.rat.rat',sK12)))))) )),
  inference(unit_resulting_resolution,[],[f288,f1505,f448])).
fof(f7097,plain,(
  ( ! [X0] : (~sP2('const.rat.rat_les_2'(s('type.rat.rat',X0),s('type.rat.rat',X0)),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X0),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X0),s('type.rat.rat',sK12)))),'F_0')) )),
  inference(unit_resulting_resolution,[],[f496,f527,f525,f6806,f434])).
fof(f7103,plain,(
  ( ! [X6,X7,X5] : (~sP5('F_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X5),s('type.rat.rat',sK12))),s('type.rat.rat',X6))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X7),s('type.rat.rat',sK12)))),'const.rat.rat_les_2'(s('type.rat.rat',X7),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X5),s('type.rat.rat',X6)))))) )),
  inference(superposition,[],[f6806,f1410])).
fof(f7104,plain,(
  ( ! [X10,X8,X9] : (~sP5('F_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X9),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X8),s('type.rat.rat',sK12))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X10),s('type.rat.rat',sK12)))),'const.rat.rat_les_2'(s('type.rat.rat',X10),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X8),s('type.rat.rat',X9)))))) )),
  inference(superposition,[],[f6806,f1375])).
fof(f7105,plain,(
  ( ! [X12,X13,X11] : (~sP5('F_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X12),s('type.rat.rat',sK12))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X13),s('type.rat.rat',sK12)))),'const.rat.rat_les_2'(s('type.rat.rat',X13),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat',X12)))))) )),
  inference(superposition,[],[f6806,f420])).
fof(f7106,plain,(
  ( ! [X14,X15] : (~sP5('F_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',X14))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X15),s('type.rat.rat',sK12)))),'const.rat.rat_les_2'(s('type.rat.rat',X15),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X14)))))) )),
  inference(superposition,[],[f6806,f1340])).
fof(f7110,plain,(
  ( ! [X6,X7,X5] : (~sP5('F_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X7),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X5),s('type.rat.rat',sK12))),s('type.rat.rat',X6)))),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X5),s('type.rat.rat',X6))),s('type.rat.rat',X7)))) )),
  inference(superposition,[],[f6806,f1410])).
fof(f7111,plain,(
  ( ! [X10,X8,X9] : (~sP5('F_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X10),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X9),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X8),s('type.rat.rat',sK12)))))),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X8),s('type.rat.rat',X9))),s('type.rat.rat',X10)))) )),
  inference(superposition,[],[f6806,f1375])).
fof(f7112,plain,(
  ( ! [X12,X13,X11] : (~sP5('F_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X13),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X12),s('type.rat.rat',sK12)))))),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat',X12))),s('type.rat.rat',X13)))) )),
  inference(superposition,[],[f6806,f420])).
fof(f7113,plain,(
  ( ! [X14,X15] : (~sP5('F_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X15),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',X14)))),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X14))),s('type.rat.rat',X15)))) )),
  inference(superposition,[],[f6806,f1340])).
fof(f7620,plain,(
  ( ! [X0,X1] : (sP4('T_0','const.rat.rat_les_2'(s('type.rat.rat',X0),s('type.rat.rat',X1)),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X1),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X0),s('type.rat.rat',sK12)))))) )),
  inference(unit_resulting_resolution,[],[f6807,f430])).
fof(f7625,plain,(
  ( ! [X6,X4,X5] : (sP5('T_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X4),s('type.rat.rat',sK12))),s('type.rat.rat',X5))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X6),s('type.rat.rat',sK12)))),'const.rat.rat_les_2'(s('type.rat.rat',X6),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X4),s('type.rat.rat',X5)))))) )),
  inference(superposition,[],[f6807,f1410])).
fof(f7626,plain,(
  ( ! [X8,X7,X9] : (sP5('T_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X8),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X7),s('type.rat.rat',sK12))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X9),s('type.rat.rat',sK12)))),'const.rat.rat_les_2'(s('type.rat.rat',X9),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X7),s('type.rat.rat',X8)))))) )),
  inference(superposition,[],[f6807,f1375])).
fof(f7627,plain,(
  ( ! [X12,X10,X11] : (sP5('T_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X10),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat',sK12))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X12),s('type.rat.rat',sK12)))),'const.rat.rat_les_2'(s('type.rat.rat',X12),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X10),s('type.rat.rat',X11)))))) )),
  inference(superposition,[],[f6807,f420])).
fof(f7628,plain,(
  ( ! [X14,X13] : (sP5('T_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',X13))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X14),s('type.rat.rat',sK12)))),'const.rat.rat_les_2'(s('type.rat.rat',X14),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X13)))))) )),
  inference(superposition,[],[f6807,f1340])).
fof(f7631,plain,(
  ( ! [X6,X4,X5] : (sP5('T_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X6),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X4),s('type.rat.rat',sK12))),s('type.rat.rat',X5)))),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X4),s('type.rat.rat',X5))),s('type.rat.rat',X6)))) )),
  inference(superposition,[],[f6807,f1410])).
fof(f7632,plain,(
  ( ! [X8,X7,X9] : (sP5('T_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X9),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X8),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X7),s('type.rat.rat',sK12)))))),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X7),s('type.rat.rat',X8))),s('type.rat.rat',X9)))) )),
  inference(superposition,[],[f6807,f1375])).
fof(f7633,plain,(
  ( ! [X12,X10,X11] : (sP5('T_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X12),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X10),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat',sK12)))))),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X10),s('type.rat.rat',X11))),s('type.rat.rat',X12)))) )),
  inference(superposition,[],[f6807,f420])).
fof(f7634,plain,(
  ( ! [X14,X13] : (sP5('T_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X14),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',X13)))),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X13))),s('type.rat.rat',X14)))) )),
  inference(superposition,[],[f6807,f1340])).
fof(f7665,plain,(
  ( ! [X0] : (~sP2('const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X0),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X0),s('type.rat.rat',sK12)))),'const.rat.rat_les_2'(s('type.rat.rat',X0),s('type.rat.rat',X0)),'F_0')) )),
  inference(unit_resulting_resolution,[],[f496,f527,f525,f6808,f434])).
fof(f7684,plain,(
  ( ! [X6,X4,X5] : (~sP5('F_0','const.rat.rat_les_2'(s('type.rat.rat',X6),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X4),s('type.rat.rat',X5)))),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X4),s('type.rat.rat',sK12))),s('type.rat.rat',X5))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X6),s('type.rat.rat',sK12)))))) )),
  inference(superposition,[],[f6808,f1410])).
fof(f7685,plain,(
  ( ! [X8,X7,X9] : (~sP5('F_0','const.rat.rat_les_2'(s('type.rat.rat',X9),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X7),s('type.rat.rat',X8)))),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X8),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X7),s('type.rat.rat',sK12))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X9),s('type.rat.rat',sK12)))))) )),
  inference(superposition,[],[f6808,f1375])).
fof(f7686,plain,(
  ( ! [X12,X10,X11] : (~sP5('F_0','const.rat.rat_les_2'(s('type.rat.rat',X12),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X10),s('type.rat.rat',X11)))),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X10),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat',sK12))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X12),s('type.rat.rat',sK12)))))) )),
  inference(superposition,[],[f6808,f420])).
fof(f7687,plain,(
  ( ! [X14,X13] : (~sP5('F_0','const.rat.rat_les_2'(s('type.rat.rat',X14),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X13)))),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',X13))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X14),s('type.rat.rat',sK12)))))) )),
  inference(superposition,[],[f6808,f1340])).
fof(f7703,plain,(
  ( ! [X6,X4,X5] : (~sP5('F_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X4),s('type.rat.rat',X5))),s('type.rat.rat',X6)),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X6),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X4),s('type.rat.rat',sK12))),s('type.rat.rat',X5)))))) )),
  inference(superposition,[],[f6808,f1410])).
fof(f7704,plain,(
  ( ! [X8,X7,X9] : (~sP5('F_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X7),s('type.rat.rat',X8))),s('type.rat.rat',X9)),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X9),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X8),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X7),s('type.rat.rat',sK12)))))))) )),
  inference(superposition,[],[f6808,f1375])).
fof(f7705,plain,(
  ( ! [X12,X10,X11] : (~sP5('F_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X10),s('type.rat.rat',X11))),s('type.rat.rat',X12)),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X12),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X10),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat',sK12)))))))) )),
  inference(superposition,[],[f6808,f420])).
fof(f7706,plain,(
  ( ! [X14,X13] : (~sP5('F_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X13))),s('type.rat.rat',X14)),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X14),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',X13)))))) )),
  inference(superposition,[],[f6808,f1340])).
fof(f7845,plain,(
  ( ! [X0,X1] : (sP4('T_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X0),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X1),s('type.rat.rat',sK12)))),'const.rat.rat_les_2'(s('type.rat.rat',X1),s('type.rat.rat',X0)))) )),
  inference(unit_resulting_resolution,[],[f6809,f430])).
fof(f7864,plain,(
  ( ! [X6,X4,X5] : (sP5('T_0','const.rat.rat_les_2'(s('type.rat.rat',X6),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X4),s('type.rat.rat',X5)))),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X4),s('type.rat.rat',sK12))),s('type.rat.rat',X5))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X6),s('type.rat.rat',sK12)))))) )),
  inference(superposition,[],[f6809,f1410])).
fof(f7865,plain,(
  ( ! [X8,X7,X9] : (sP5('T_0','const.rat.rat_les_2'(s('type.rat.rat',X9),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X7),s('type.rat.rat',X8)))),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X8),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X7),s('type.rat.rat',sK12))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X9),s('type.rat.rat',sK12)))))) )),
  inference(superposition,[],[f6809,f1375])).
fof(f7866,plain,(
  ( ! [X12,X10,X11] : (sP5('T_0','const.rat.rat_les_2'(s('type.rat.rat',X12),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X10),s('type.rat.rat',X11)))),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X10),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat',sK12))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X12),s('type.rat.rat',sK12)))))) )),
  inference(superposition,[],[f6809,f420])).
fof(f7867,plain,(
  ( ! [X14,X13] : (sP5('T_0','const.rat.rat_les_2'(s('type.rat.rat',X14),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X13)))),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',X13))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X14),s('type.rat.rat',sK12)))))) )),
  inference(superposition,[],[f6809,f1340])).
fof(f7884,plain,(
  ( ! [X6,X4,X5] : (sP5('T_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X4),s('type.rat.rat',X5))),s('type.rat.rat',X6)),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X6),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X4),s('type.rat.rat',sK12))),s('type.rat.rat',X5)))))) )),
  inference(superposition,[],[f6809,f1410])).
fof(f7885,plain,(
  ( ! [X8,X7,X9] : (sP5('T_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X7),s('type.rat.rat',X8))),s('type.rat.rat',X9)),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X9),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X8),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X7),s('type.rat.rat',sK12)))))))) )),
  inference(superposition,[],[f6809,f1375])).
fof(f7886,plain,(
  ( ! [X12,X10,X11] : (sP5('T_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X10),s('type.rat.rat',X11))),s('type.rat.rat',X12)),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X12),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X10),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat',sK12)))))))) )),
  inference(superposition,[],[f6809,f420])).
fof(f7887,plain,(
  ( ! [X14,X13] : (sP5('T_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X13))),s('type.rat.rat',X14)),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X14),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',X13)))))) )),
  inference(superposition,[],[f6809,f1340])).
fof(f7912,plain,(
  ( ! [X2,X3] : (~sP2('const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X2),s('type.rat.rat',X3))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X2),s('type.rat.rat',X3)))),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X2),s('type.rat.rat',sK12))),s('type.rat.rat',X3))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X2),s('type.rat.rat',sK12))),s('type.rat.rat',X3)))),'F_0')) )),
  inference(superposition,[],[f7097,f1410])).
fof(f7913,plain,(
  ( ! [X4,X5] : (~sP2('const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X4),s('type.rat.rat',X5))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X4),s('type.rat.rat',X5)))),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X5),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X4),s('type.rat.rat',sK12))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X5),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X4),s('type.rat.rat',sK12)))))),'F_0')) )),
  inference(superposition,[],[f7097,f1375])).
fof(f7914,plain,(
  ( ! [X6,X7] : (~sP2('const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X6),s('type.rat.rat',X7))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X6),s('type.rat.rat',X7)))),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X6),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X7),s('type.rat.rat',sK12))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X6),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X7),s('type.rat.rat',sK12)))))),'F_0')) )),
  inference(superposition,[],[f7097,f420])).
fof(f7957,plain,(
  ( ! [X23] : (~sP5('F_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X23),s('type.rat.rat',sK12))),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.rat.rat',X23)))) )),
  inference(superposition,[],[f6806,f1308])).
fof(f7958,plain,(
  ( ! [X24] : (~sP5('F_0','const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X24),s('type.rat.rat',sK12)))),'const.rat.rat_les_2'(s('type.rat.rat',X24),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) )),
  inference(superposition,[],[f6806,f1308])).
fof(f7959,plain,(
  ( ! [X25] : (sP5('T_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X25),s('type.rat.rat',sK12))),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.rat.rat',X25)))) )),
  inference(superposition,[],[f6807,f1308])).
fof(f7960,plain,(
  ( ! [X26] : (sP5('T_0','const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X26),s('type.rat.rat',sK12)))),'const.rat.rat_les_2'(s('type.rat.rat',X26),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) )),
  inference(superposition,[],[f6807,f1308])).
fof(f7961,plain,(
  ( ! [X27] : (~sP5('F_0','const.rat.rat_les_2'(s('type.rat.rat',X27),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X27),s('type.rat.rat',sK12)))))) )),
  inference(superposition,[],[f6808,f1308])).
fof(f7962,plain,(
  ( ! [X28] : (~sP5('F_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.rat.rat',X28)),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X28),s('type.rat.rat',sK12))),s('type.rat.rat',sK12)))) )),
  inference(superposition,[],[f6808,f1308])).
fof(f7963,plain,(
  ( ! [X29] : (sP5('T_0','const.rat.rat_les_2'(s('type.rat.rat',X29),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X29),s('type.rat.rat',sK12)))))) )),
  inference(superposition,[],[f6809,f1308])).
fof(f7964,plain,(
  ( ! [X30] : (sP5('T_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.rat.rat',X30)),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X30),s('type.rat.rat',sK12))),s('type.rat.rat',sK12)))) )),
  inference(superposition,[],[f6809,f1308])).
fof(f794,plain,(
  ~sP5('T_0','const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK10),s('type.rat.rat',sK12)))),'const.rat.rat_les_2'(s('type.rat.rat',sK10),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12)))))),
  inference(unit_resulting_resolution,[],[f288,f287,f449])).
fof(f796,plain,(
  ~sP5('T_0','const.rat.rat_les_2'(s('type.rat.rat',sK10),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12)))),'const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK10),s('type.rat.rat',sK12)))))),
  inference(unit_resulting_resolution,[],[f288,f287,f449])).
fof(f797,plain,(
  sP5('F_0','const.rat.rat_les_2'(s('type.rat.rat',sK10),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12)))),'const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK10),s('type.rat.rat',sK12)))))),
  inference(unit_resulting_resolution,[],[f496,f287,f447])).
fof(f1622,plain,(
  sP3('const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK10),s('type.rat.rat',sK12)))),'const.rat.rat_les_2'(s('type.rat.rat',sK10),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12)))),'F_0')),
  inference(unit_resulting_resolution,[],[f795,f429])).
fof(f1623,plain,(
  sP2('const.rat.rat_les_2'(s('type.rat.rat',sK10),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12)))),'const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK10),s('type.rat.rat',sK12)))),'F_0')),
  inference(unit_resulting_resolution,[],[f795,f428])).
fof(f1675,plain,(
  sP3('const.rat.rat_les_2'(s('type.rat.rat',sK10),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12)))),'const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK10),s('type.rat.rat',sK12)))),'F_0')),
  inference(unit_resulting_resolution,[],[f797,f429])).
fof(f1676,plain,(
  sP2('const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK10),s('type.rat.rat',sK12)))),'const.rat.rat_les_2'(s('type.rat.rat',sK10),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12)))),'F_0')),
  inference(unit_resulting_resolution,[],[f797,f428])).
fof(f2853,plain,(
  ( ! [X3] : (s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X3))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.rat.rat',X3)))) )),
  inference(superposition,[],[f1308,f373])).
fof(f5017,plain,(
  ( ! [X6,X7] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X7),s('type.rat.rat',X6))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X6),s('type.rat.rat',X7)))))) )),
  inference(superposition,[],[f1385,f1308])).
fof(f7965,plain,(
  ~sP2('const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12)),'F_0')),
  inference(superposition,[],[f7097,f1308])).
fof(f1410,plain,(
  ( ! [X10,X8,X9] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X8),s('type.rat.rat',X10))),s('type.rat.rat',X9))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X8),s('type.rat.rat',X9))),s('type.rat.rat',X10)))) )),
  inference(backward_demodulation,[],[f1409,f1406])).
fof(f3474,plain,(
  ( ! [X19,X17,X18] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X17),s('type.rat.rat',X18))),s('type.rat.rat',X19))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X18),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X17),s('type.rat.rat',X19)))))) )),
  inference(forward_demodulation,[],[f3410,f373])).
fof(f3410,plain,(
  ( ! [X19,X17,X18] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X17),s('type.rat.rat',X18))),s('type.rat.rat',X19))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X18),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X17),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X19)))))))) )),
  inference(superposition,[],[f1375,f373])).
fof(f3860,plain,(
  ( ! [X23,X21,X22] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X22),s('type.rat.rat',X21))),s('type.rat.rat',X23))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X22),s('type.rat.rat',X23))),s('type.rat.rat',X21)))) )),
  inference(forward_demodulation,[],[f3790,f1340])).
fof(f3790,plain,(
  ( ! [X23,X21,X22] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X22),s('type.rat.rat',X23))),s('type.rat.rat',X21))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X21))),s('type.rat.rat',X22))),s('type.rat.rat',X23)))) )),
  inference(superposition,[],[f1409,f1340])).
fof(f3862,plain,(
  ( ! [X4,X2,X5,X3] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X5),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X2),s('type.rat.rat',X3))))),s('type.rat.rat',X4))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X2),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X3),s('type.rat.rat',X5))),s('type.rat.rat',X4)))))) )),
  inference(forward_demodulation,[],[f3861,f1410])).
fof(f3861,plain,(
  ( ! [X4,X2,X5,X3] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X5),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X2),s('type.rat.rat',X3))))),s('type.rat.rat',X4))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X2),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X3),s('type.rat.rat',X4))),s('type.rat.rat',X5)))))) )),
  inference(forward_demodulation,[],[f3792,f1409])).
fof(f3792,plain,(
  ( ! [X4,X2,X5,X3] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X2),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X3),s('type.rat.rat',X4))),s('type.rat.rat',X5))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X5),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X2),s('type.rat.rat',X3))),s('type.rat.rat',X4)))))) )),
  inference(superposition,[],[f1385,f1409])).
fof(f4016,plain,(
  ( ! [X24,X23,X25,X22] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X22),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X24),s('type.rat.rat',X25))))),s('type.rat.rat',X23))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X25),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X22),s('type.rat.rat',X24))),s('type.rat.rat',X23)))))) )),
  inference(forward_demodulation,[],[f3940,f1410])).
fof(f3940,plain,(
  ( ! [X24,X23,X25,X22] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X22),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X24),s('type.rat.rat',X25))))),s('type.rat.rat',X23))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X25),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X22),s('type.rat.rat',X23))),s('type.rat.rat',X24)))))) )),
  inference(superposition,[],[f1410,f1385])).
fof(f3857,plain,(
  ( ! [X14,X15,X13,X16] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X13),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X14),s('type.rat.rat',X15))))),s('type.rat.rat',X16))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X14),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X13),s('type.rat.rat',X15))))),s('type.rat.rat',X16)))) )),
  inference(forward_demodulation,[],[f3856,f420])).
fof(f3856,plain,(
  ( ! [X14,X15,X13,X16] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X14),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X13),s('type.rat.rat',X15))))),s('type.rat.rat',X16))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X13),s('type.rat.rat',X14))),s('type.rat.rat',X15))),s('type.rat.rat',X16)))) )),
  inference(forward_demodulation,[],[f3855,f1409])).
fof(f3855,plain,(
  ( ! [X14,X15,X13,X16] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X13),s('type.rat.rat',X14))),s('type.rat.rat',X15))),s('type.rat.rat',X16))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X14),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X13),s('type.rat.rat',X15))),s('type.rat.rat',X16)))))) )),
  inference(forward_demodulation,[],[f3788,f1409])).
fof(f3788,plain,(
  ( ! [X14,X15,X13,X16] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X13),s('type.rat.rat',X14))),s('type.rat.rat',X15))),s('type.rat.rat',X16))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X14),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X13),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X15),s('type.rat.rat',X16)))))))) )),
  inference(superposition,[],[f1409,f1375])).
fof(f3060,plain,(
  ( ! [X6,X7] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X6))),s('type.rat.rat',X7))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X7))),s('type.rat.rat',X6)))) )),
  inference(superposition,[],[f1340,f373])).
fof(f7915,plain,(
  ( ! [X8] : (~sP2('const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X8))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X8)))),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',X8))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',X8)))),'F_0')) )),
  inference(superposition,[],[f7097,f1340])).
fof(f1375,plain,(
  ( ! [X2,X0,X1] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X0),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X1),s('type.rat.rat',X2))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X1),s('type.rat.rat',X0))),s('type.rat.rat',X2)))) )),
  inference(superposition,[],[f420,f372])).
fof(f1385,plain,(
  ( ! [X4,X5,X3] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X3),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X4),s('type.rat.rat',X5))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X5),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X3),s('type.rat.rat',X4)))))) )),
  inference(superposition,[],[f420,f372])).
fof(f3405,plain,(
  ( ! [X4,X5,X3] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X3),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X4),s('type.rat.rat',X5))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X4),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X3),s('type.rat.rat',X5)))))) )),
  inference(superposition,[],[f1375,f420])).
fof(f3406,plain,(
  ( ! [X6,X8,X7] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X7),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X6),s('type.rat.rat',X8))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X8),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X6),s('type.rat.rat',X7)))))) )),
  inference(superposition,[],[f1375,f372])).
fof(f3467,plain,(
  ( ! [X21,X19,X20,X18] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X20),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X18),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X19),s('type.rat.rat',X21))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X19),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X18),s('type.rat.rat',X20))))),s('type.rat.rat',X21)))) )),
  inference(forward_demodulation,[],[f3391,f420])).
fof(f3391,plain,(
  ( ! [X21,X19,X20,X18] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X20),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X18),s('type.rat.rat',X19))),s('type.rat.rat',X21))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X19),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X18),s('type.rat.rat',X20))))),s('type.rat.rat',X21)))) )),
  inference(superposition,[],[f1375,f1375])).
fof(f3469,plain,(
  ( ! [X24,X23,X25,X22] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X24),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X22),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X23),s('type.rat.rat',X25))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X24),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X23),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X22),s('type.rat.rat',X25)))))))) )),
  inference(forward_demodulation,[],[f3468,f420])).
fof(f3468,plain,(
  ( ! [X24,X23,X25,X22] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X24),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X23),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X22),s('type.rat.rat',X25))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X24),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X22),s('type.rat.rat',X23))),s('type.rat.rat',X25)))))) )),
  inference(forward_demodulation,[],[f3392,f3467])).
fof(f3392,plain,(
  ( ! [X24,X23,X25,X22] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X24),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X22),s('type.rat.rat',X23))),s('type.rat.rat',X25))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X22),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X23),s('type.rat.rat',X24))))),s('type.rat.rat',X25)))) )),
  inference(superposition,[],[f1375,f420])).
fof(f3509,plain,(
  ( ! [X14,X12,X13,X11] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X14),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X12),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X13),s('type.rat.rat',X11))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X12),s('type.rat.rat',X13))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X14),s('type.rat.rat',X11)))))) )),
  inference(superposition,[],[f1385,f1385])).
fof(f3510,plain,(
  ( ! [X17,X15,X18,X16] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X18),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X17),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X15),s('type.rat.rat',X16))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X16),s('type.rat.rat',X17))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X18),s('type.rat.rat',X15)))))) )),
  inference(superposition,[],[f1385,f1385])).
fof(f3514,plain,(
  ( ! [X28,X26,X29,X27] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X28),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X29),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X26),s('type.rat.rat',X27))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X29),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X27),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X26),s('type.rat.rat',X28)))))))) )),
  inference(superposition,[],[f1385,f1375])).
fof(f3515,plain,(
  ( ! [X30,X33,X31,X32] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X32),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X33),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X30),s('type.rat.rat',X31))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X33),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X30),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X31),s('type.rat.rat',X32)))))))) )),
  inference(superposition,[],[f1385,f420])).
fof(f3518,plain,(
  ( ! [X6,X8,X7] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X8),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X6),s('type.rat.rat',X7))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X7),s('type.rat.rat',X8))),s('type.rat.rat',X6)))) )),
  inference(superposition,[],[f1385,f372])).
fof(f3572,plain,(
  ( ! [X28,X26,X29,X27] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X29),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X27),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X26),s('type.rat.rat',X28))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X26),s('type.rat.rat',X27))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X28),s('type.rat.rat',X29)))))) )),
  inference(superposition,[],[f1385,f1375])).
fof(f3573,plain,(
  ( ! [X30,X33,X31,X32] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X33),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X30),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X31),s('type.rat.rat',X32))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X30),s('type.rat.rat',X31))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X32),s('type.rat.rat',X33)))))) )),
  inference(superposition,[],[f1385,f420])).
fof(f3580,plain,(
  ( ! [X21,X19,X20,X18] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X18),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X19),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X20),s('type.rat.rat',X21))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X20),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X21),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X18),s('type.rat.rat',X19)))))))) )),
  inference(superposition,[],[f1385,f420])).
fof(f3702,plain,(
  ( ! [X14,X17,X15,X16] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X15),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X14),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X16),s('type.rat.rat',X17))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X17),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X14),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X15),s('type.rat.rat',X16)))))))) )),
  inference(forward_demodulation,[],[f3521,f420])).
fof(f3521,plain,(
  ( ! [X14,X17,X15,X16] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X15),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X14),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X16),s('type.rat.rat',X17))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X17),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X14),s('type.rat.rat',X15))),s('type.rat.rat',X16)))))) )),
  inference(superposition,[],[f1385,f1375])).
fof(f3707,plain,(
  ( ! [X14,X12,X13,X11] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X12),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X13),s('type.rat.rat',X14))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X14),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X12),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X13),s('type.rat.rat',X11)))))))) )),
  inference(forward_demodulation,[],[f3567,f420])).
fof(f3567,plain,(
  ( ! [X14,X12,X13,X11] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X12),s('type.rat.rat',X13))),s('type.rat.rat',X14))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X14),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X12),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X13),s('type.rat.rat',X11)))))))) )),
  inference(superposition,[],[f1385,f1385])).
fof(f3708,plain,(
  ( ! [X17,X15,X18,X16] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X15),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X16),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X17),s('type.rat.rat',X18))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X18),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X17),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X15),s('type.rat.rat',X16)))))))) )),
  inference(forward_demodulation,[],[f3568,f420])).
fof(f3568,plain,(
  ( ! [X17,X15,X18,X16] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X15),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X16),s('type.rat.rat',X17))),s('type.rat.rat',X18))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X18),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X17),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X15),s('type.rat.rat',X16)))))))) )),
  inference(superposition,[],[f1385,f1385])).
fof(f3718,plain,(
  ( ! [X6,X4,X7,X5] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X4),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X5),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X6),s('type.rat.rat',X7))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X6),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X4),s('type.rat.rat',X5))))),s('type.rat.rat',X7)))) )),
  inference(forward_demodulation,[],[f3583,f420])).
fof(f3583,plain,(
  ( ! [X6,X4,X7,X5] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X4),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X5),s('type.rat.rat',X6))),s('type.rat.rat',X7))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X6),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X4),s('type.rat.rat',X5))))),s('type.rat.rat',X7)))) )),
  inference(superposition,[],[f420,f1385])).
fof(f9220,plain,(
  ( ! [X19,X17,X20,X18] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X20),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X17),s('type.rat.rat',X18))))),s('type.rat.rat',X19))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X20),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X17),s('type.rat.rat',X18))),s('type.rat.rat',X19))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X20),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X17),s('type.rat.rat',X18))))),s('type.rat.rat',X19)))))))) )),
  inference(forward_demodulation,[],[f9219,f1409])).
fof(f9219,plain,(
  ( ! [X19,X17,X20,X18] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X20),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X17),s('type.rat.rat',X18))),s('type.rat.rat',X19))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X20),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X17),s('type.rat.rat',X18))),s('type.rat.rat',X19))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X20),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X17),s('type.rat.rat',X18))))),s('type.rat.rat',X19)))))))) )),
  inference(forward_demodulation,[],[f9218,f1409])).
fof(f9218,plain,(
  ( ! [X19,X17,X20,X18] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X20),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X17),s('type.rat.rat',X18))),s('type.rat.rat',X19))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X20),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X17),s('type.rat.rat',X18))))),s('type.rat.rat',X19))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X20),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X17),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X18),s('type.rat.rat',X19)))))))) )),
  inference(forward_demodulation,[],[f9035,f1409])).
fof(f9035,plain,(
  ( ! [X19,X17,X20,X18] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X20),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X17),s('type.rat.rat',X18))),s('type.rat.rat',X19))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X20),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X17),s('type.rat.rat',X18))),s('type.rat.rat',X19))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X20),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X17),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X18),s('type.rat.rat',X19)))))))) )),
  inference(superposition,[],[f1466,f1409])).
fof(f2927,plain,(
  ( ! [X0] : (~sP2('const.rat.rat_les_2'(s('type.rat.rat',X0),s('type.rat.rat',X0)),'F_0','F_0')) )),
  inference(unit_resulting_resolution,[],[f496,f527,f525,f1552,f433])).
fof(f1981,plain,(
  ( ! [X118,X120,X119,X117] : (s(X119,f(s(bool,'T_0'))) != s(X119,g(s(bool,'T_0'))) | s(fun(bool,X119),X117) = s(fun(bool,X119),X118) | s(bool,X120) = s(bool,sK13(X117,X118,X119,bool)) | s(bool,'T_0') = s(bool,X120)) )),
  inference(superposition,[],[f419,f674])).
fof(f2250,plain,(
  ( ! [X85,X83,X86,X84] : (~sP6(X83,X84,X85) | sP7(X83,X84,X85) | s(bool,X83) = s(bool,X86) | s(bool,'T_0') = s(bool,X86)) )),
  inference(subsumption_resolution,[],[f1967,f288])).
fof(f1967,plain,(
  ( ! [X85,X83,X86,X84] : (~p(s(bool,'T_0')) | ~sP6(X83,X84,X85) | sP7(X83,X84,X85) | s(bool,X83) = s(bool,X86) | s(bool,'T_0') = s(bool,X86)) )),
  inference(superposition,[],[f486,f674])).
fof(f2249,plain,(
  ( ! [X80,X81,X79,X82] : (~sP8(X79,X80,X81) | sP9(X79,X80,X81) | s(bool,X79) = s(bool,X82) | s(bool,'T_0') = s(bool,X82)) )),
  inference(subsumption_resolution,[],[f1966,f288])).
fof(f1966,plain,(
  ( ! [X80,X81,X79,X82] : (~p(s(bool,'T_0')) | ~sP8(X79,X80,X81) | sP9(X79,X80,X81) | s(bool,X79) = s(bool,X82) | s(bool,'T_0') = s(bool,X82)) )),
  inference(superposition,[],[f485,f674])).
fof(f2248,plain,(
  ( ! [X78,X76,X77,X75] : (~p(s(bool,X76)) | p(s(bool,X77)) | ~sP9(X75,X77,X76) | s(bool,X75) = s(bool,X78) | s(bool,'T_0') = s(bool,X78)) )),
  inference(subsumption_resolution,[],[f1965,f288])).
fof(f1965,plain,(
  ( ! [X78,X76,X77,X75] : (~p(s(bool,'T_0')) | ~p(s(bool,X76)) | p(s(bool,X77)) | ~sP9(X75,X77,X76) | s(bool,X75) = s(bool,X78) | s(bool,'T_0') = s(bool,X78)) )),
  inference(superposition,[],[f482,f674])).
fof(f2247,plain,(
  ( ! [X74,X72,X71,X73] : (~p(s(bool,X72)) | sP9(X71,X72,X73) | s(bool,X71) = s(bool,X74) | s(bool,'T_0') = s(bool,X74)) )),
  inference(subsumption_resolution,[],[f1964,f288])).
fof(f1964,plain,(
  ( ! [X74,X72,X71,X73] : (~p(s(bool,'T_0')) | ~p(s(bool,X72)) | sP9(X71,X72,X73) | s(bool,X71) = s(bool,X74) | s(bool,'T_0') = s(bool,X74)) )),
  inference(superposition,[],[f481,f674])).
fof(f2246,plain,(
  ( ! [X70,X68,X69,X67] : (p(s(bool,X68)) | sP9(X67,X69,X68) | s(bool,X67) = s(bool,X70) | s(bool,'T_0') = s(bool,X70)) )),
  inference(subsumption_resolution,[],[f1963,f288])).
fof(f1963,plain,(
  ( ! [X70,X68,X69,X67] : (~p(s(bool,'T_0')) | p(s(bool,X68)) | sP9(X67,X69,X68) | s(bool,X67) = s(bool,X70) | s(bool,'T_0') = s(bool,X70)) )),
  inference(superposition,[],[f480,f674])).
fof(f2245,plain,(
  ( ! [X66,X64,X65,X63] : (p(s(bool,X64)) | ~p(s(bool,X65)) | ~sP8(X65,X64,X63) | s(bool,X63) = s(bool,X66) | s(bool,'T_0') = s(bool,X66)) )),
  inference(subsumption_resolution,[],[f1962,f288])).
fof(f1962,plain,(
  ( ! [X66,X64,X65,X63] : (~p(s(bool,'T_0')) | p(s(bool,X64)) | ~p(s(bool,X65)) | ~sP8(X65,X64,X63) | s(bool,X63) = s(bool,X66) | s(bool,'T_0') = s(bool,X66)) )),
  inference(superposition,[],[f475,f674])).
fof(f2244,plain,(
  ( ! [X61,X59,X62,X60] : (p(s(bool,X60)) | p(s(bool,X61)) | ~sP7(X59,X61,X60) | s(bool,X59) = s(bool,X62) | s(bool,'T_0') = s(bool,X62)) )),
  inference(subsumption_resolution,[],[f1961,f288])).
fof(f1961,plain,(
  ( ! [X61,X59,X62,X60] : (~p(s(bool,'T_0')) | p(s(bool,X60)) | p(s(bool,X61)) | ~sP7(X59,X61,X60) | s(bool,X59) = s(bool,X62) | s(bool,'T_0') = s(bool,X62)) )),
  inference(superposition,[],[f465,f674])).
fof(f2243,plain,(
  ( ! [X57,X58,X56,X55] : (~p(s(bool,X56)) | sP7(X55,X56,X57) | s(bool,X55) = s(bool,X58) | s(bool,'T_0') = s(bool,X58)) )),
  inference(subsumption_resolution,[],[f1960,f288])).
fof(f1960,plain,(
  ( ! [X57,X58,X56,X55] : (~p(s(bool,'T_0')) | ~p(s(bool,X56)) | sP7(X55,X56,X57) | s(bool,X55) = s(bool,X58) | s(bool,'T_0') = s(bool,X58)) )),
  inference(superposition,[],[f464,f674])).
fof(f2242,plain,(
  ( ! [X54,X52,X53,X51] : (~p(s(bool,X52)) | sP7(X51,X53,X52) | s(bool,X51) = s(bool,X54) | s(bool,'T_0') = s(bool,X54)) )),
  inference(subsumption_resolution,[],[f1959,f288])).
fof(f1959,plain,(
  ( ! [X54,X52,X53,X51] : (~p(s(bool,'T_0')) | ~p(s(bool,X52)) | sP7(X51,X53,X52) | s(bool,X51) = s(bool,X54) | s(bool,'T_0') = s(bool,X54)) )),
  inference(superposition,[],[f463,f674])).
fof(f2241,plain,(
  ( ! [X47,X50,X48,X49] : (p(s(bool,X48)) | p(s(bool,X49)) | ~sP6(X47,X48,X49) | s(bool,X47) = s(bool,X50) | s(bool,'T_0') = s(bool,X50)) )),
  inference(subsumption_resolution,[],[f1958,f288])).
fof(f1958,plain,(
  ( ! [X47,X50,X48,X49] : (~p(s(bool,'T_0')) | p(s(bool,X48)) | p(s(bool,X49)) | ~sP6(X47,X48,X49) | s(bool,X47) = s(bool,X50) | s(bool,'T_0') = s(bool,X50)) )),
  inference(superposition,[],[f458,f674])).
fof(f2240,plain,(
  ( ! [X45,X43,X46,X44] : (~p(s(bool,X44)) | p(s(bool,X45)) | ~sP3(X44,X43,X45) | s(bool,X43) = s(bool,X46) | s(bool,'T_0') = s(bool,X46)) )),
  inference(subsumption_resolution,[],[f1957,f288])).
fof(f1957,plain,(
  ( ! [X45,X43,X46,X44] : (~p(s(bool,'T_0')) | ~p(s(bool,X44)) | p(s(bool,X45)) | ~sP3(X44,X43,X45) | s(bool,X43) = s(bool,X46) | s(bool,'T_0') = s(bool,X46)) )),
  inference(superposition,[],[f439,f674])).
fof(f2239,plain,(
  ( ! [X39,X41,X42,X40] : (~p(s(bool,X40)) | p(s(bool,X41)) | ~sP4(X40,X39,X41) | s(bool,X39) = s(bool,X42) | s(bool,'T_0') = s(bool,X42)) )),
  inference(subsumption_resolution,[],[f1956,f288])).
fof(f1956,plain,(
  ( ! [X39,X41,X42,X40] : (~p(s(bool,'T_0')) | ~p(s(bool,X40)) | p(s(bool,X41)) | ~sP4(X40,X39,X41) | s(bool,X39) = s(bool,X42) | s(bool,'T_0') = s(bool,X42)) )),
  inference(superposition,[],[f435,f674])).
fof(f2238,plain,(
  ( ! [X37,X35,X38,X36] : (sP5(X36,X37,X35) | ~sP4(X36,X35,X37) | ~sP3(X37,X35,X36) | ~sP2(X35,X37,X36) | s(bool,X35) = s(bool,X38) | s(bool,'T_0') = s(bool,X38)) )),
  inference(subsumption_resolution,[],[f1955,f288])).
fof(f1955,plain,(
  ( ! [X37,X35,X38,X36] : (~p(s(bool,'T_0')) | sP5(X36,X37,X35) | ~sP4(X36,X35,X37) | ~sP3(X37,X35,X36) | ~sP2(X35,X37,X36) | s(bool,X35) = s(bool,X38) | s(bool,'T_0') = s(bool,X38)) )),
  inference(superposition,[],[f432,f674])).
fof(f2237,plain,(
  ( ! [X33,X31,X34,X32] : (~p(s(bool,X32)) | p(s(bool,X33)) | ~sP5(X32,X31,X33) | s(bool,X31) = s(bool,X34) | s(bool,'T_0') = s(bool,X34)) )),
  inference(subsumption_resolution,[],[f1954,f288])).
fof(f1954,plain,(
  ( ! [X33,X31,X34,X32] : (~p(s(bool,'T_0')) | ~p(s(bool,X32)) | p(s(bool,X33)) | ~sP5(X32,X31,X33) | s(bool,X31) = s(bool,X34) | s(bool,'T_0') = s(bool,X34)) )),
  inference(superposition,[],[f431,f674])).
fof(f2236,plain,(
  ( ! [X30,X28,X29] : (p(s(bool,X29)) | sP1(X29,X28) | s(bool,X28) = s(bool,X30) | s(bool,'T_0') = s(bool,X30)) )),
  inference(subsumption_resolution,[],[f1953,f288])).
fof(f1953,plain,(
  ( ! [X30,X28,X29] : (~p(s(bool,'T_0')) | p(s(bool,X29)) | sP1(X29,X28) | s(bool,X28) = s(bool,X30) | s(bool,'T_0') = s(bool,X30)) )),
  inference(superposition,[],[f406,f674])).
fof(f2235,plain,(
  ( ! [X26,X27,X25] : (p(s(bool,X26)) | sP1(X25,X26) | s(bool,X25) = s(bool,X27) | s(bool,'T_0') = s(bool,X27)) )),
  inference(subsumption_resolution,[],[f1952,f288])).
fof(f1952,plain,(
  ( ! [X26,X27,X25] : (~p(s(bool,'T_0')) | p(s(bool,X26)) | sP1(X25,X26) | s(bool,X25) = s(bool,X27) | s(bool,'T_0') = s(bool,X27)) )),
  inference(superposition,[],[f403,f674])).
fof(f2234,plain,(
  ( ! [X24,X23,X22] : (sP0(X22,X23) | s(bool,X22) = s(bool,X24) | s(bool,'T_0') = s(bool,X24)) )),
  inference(subsumption_resolution,[],[f1951,f288])).
fof(f1951,plain,(
  ( ! [X24,X23,X22] : (~p(s(bool,'T_0')) | sP0(X22,X23) | s(bool,X22) = s(bool,X24) | s(bool,'T_0') = s(bool,X24)) )),
  inference(superposition,[],[f388,f674])).
fof(f2233,plain,(
  ( ! [X21,X19,X20] : (sP0(X20,X19) | s(bool,X19) = s(bool,X21) | s(bool,'T_0') = s(bool,X21)) )),
  inference(subsumption_resolution,[],[f1950,f288])).
fof(f1950,plain,(
  ( ! [X21,X19,X20] : (~p(s(bool,'T_0')) | sP0(X20,X19) | s(bool,X19) = s(bool,X21) | s(bool,'T_0') = s(bool,X21)) )),
  inference(superposition,[],[f387,f674])).
fof(f2232,plain,(
  ( ! [X17,X18,X16] : (~p(s(bool,X17)) | s(bool,X16) = s(bool,X17) | s(bool,X16) = s(bool,X18) | s(bool,'T_0') = s(bool,X18)) )),
  inference(subsumption_resolution,[],[f1949,f288])).
fof(f1949,plain,(
  ( ! [X17,X18,X16] : (~p(s(bool,'T_0')) | ~p(s(bool,X17)) | s(bool,X16) = s(bool,X17) | s(bool,X16) = s(bool,X18) | s(bool,'T_0') = s(bool,X18)) )),
  inference(superposition,[],[f377,f674])).
fof(f2231,plain,(
  ( ! [X6,X7] : (s(bool,'F_0') != s(bool,X6) | s(bool,X6) = s(bool,X7) | s(bool,'T_0') = s(bool,X7)) )),
  inference(subsumption_resolution,[],[f1945,f288])).
fof(f1945,plain,(
  ( ! [X6,X7] : (~p(s(bool,'T_0')) | s(bool,'F_0') != s(bool,X6) | s(bool,X6) = s(bool,X7) | s(bool,'T_0') = s(bool,X7)) )),
  inference(superposition,[],[f314,f674])).
fof(f1913,plain,(
  ( ! [X4,X2,X3] : (s(bool,X2) != s(bool,X3) | p(s(bool,X3)) | s(bool,X2) = s(bool,X4) | s(bool,'T_0') = s(bool,X4)) )),
  inference(superposition,[],[f310,f674])).
fof(f1867,plain,(
  ( ! [X125,X123,X126,X124] : (s(X125,f(s(bool,X126))) != s(X125,g(s(bool,X126))) | s(fun(bool,X125),X123) = s(fun(bool,X125),X124) | s(bool,'T_0') = s(bool,X126) | s(bool,'T_0') = s(bool,sK13(X123,X124,X125,bool))) )),
  inference(superposition,[],[f419,f674])).
fof(f1802,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,X0) = s(bool,X1) | s(bool,X1) = s(bool,X2) | s(bool,'T_0') = s(bool,X2) | s(bool,X0) = s(bool,X3) | s(bool,'T_0') = s(bool,X3)) )),
  inference(superposition,[],[f674,f674])).
fof(f1741,plain,(
  ( ! [X0] : (~sP2('F_0','const.rat.rat_les_2'(s('type.rat.rat',X0),s('type.rat.rat',X0)),'F_0')) )),
  inference(unit_resulting_resolution,[],[f496,f508,f504,f1550,f434])).
fof(f1736,plain,(
  ( ! [X0,X1] : (s(bool,X1) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X0),s('type.rat.rat',X0))) | s(bool,'T_0') = s(bool,X1)) )),
  inference(subsumption_resolution,[],[f1730,f496])).
fof(f1730,plain,(
  ( ! [X0,X1] : (p(s(bool,'F_0')) | s(bool,X1) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X0),s('type.rat.rat',X0))) | s(bool,'T_0') = s(bool,X1)) )),
  inference(superposition,[],[f735,f552])).
fof(f1682,plain,(
  ( ! [X0] : (~sP4('T_0','T_0','const.rat.rat_les_2'(s('type.rat.rat',X0),s('type.rat.rat',X0)))) )),
  inference(unit_resulting_resolution,[],[f288,f510,f506,f1530,f432])).
fof(f1550,plain,(
  ( ! [X0] : (~sP5('F_0','const.rat.rat_les_2'(s('type.rat.rat',X0),s('type.rat.rat',X0)),'F_0')) )),
  inference(unit_resulting_resolution,[],[f496,f552,f450])).
fof(f1551,plain,(
  ( ! [X0] : (sP5('T_0','const.rat.rat_les_2'(s('type.rat.rat',X0),s('type.rat.rat',X0)),'F_0')) )),
  inference(unit_resulting_resolution,[],[f288,f552,f448])).
fof(f1552,plain,(
  ( ! [X0] : (~sP5('F_0','F_0','const.rat.rat_les_2'(s('type.rat.rat',X0),s('type.rat.rat',X0)))) )),
  inference(unit_resulting_resolution,[],[f496,f552,f450])).
fof(f1530,plain,(
  ( ! [X0] : (~sP5('T_0','const.rat.rat_les_2'(s('type.rat.rat',X0),s('type.rat.rat',X0)),'T_0')) )),
  inference(unit_resulting_resolution,[],[f288,f533,f449])).
fof(f1533,plain,(
  ( ! [X0] : (~sP5('T_0','T_0','const.rat.rat_les_2'(s('type.rat.rat',X0),s('type.rat.rat',X0)))) )),
  inference(unit_resulting_resolution,[],[f288,f533,f449])).
fof(f1406,plain,(
  ( ! [X10,X8,X9] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X8),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X10),s('type.rat.rat',X9))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X8),s('type.rat.rat',X9))),s('type.rat.rat',X10)))) )),
  inference(forward_demodulation,[],[f1378,f1340])).
fof(f1378,plain,(
  ( ! [X10,X8,X9] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X8),s('type.rat.rat',X9))),s('type.rat.rat',X10))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X8),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X9))),s('type.rat.rat',X10)))))) )),
  inference(superposition,[],[f420,f373])).
fof(f1293,plain,(
  ( ! [X0] : (sP5('F_0','T_0','const.rat.rat_les_2'(s('type.rat.rat',X0),s('type.rat.rat',X0)))) )),
  inference(unit_resulting_resolution,[],[f512,f527,f525,f496,f434])).
fof(f1229,plain,(
  sP5('T_0','F_0','F_0')),
  inference(unit_resulting_resolution,[],[f510,f506,f504,f496,f433])).
fof(f1236,plain,(
  ( ! [X0] : (sP5('T_0','F_0','const.rat.rat_les_2'(s('type.rat.rat',X0),s('type.rat.rat',X0)))) )),
  inference(unit_resulting_resolution,[],[f510,f506,f525,f496,f433])).
fof(f1187,plain,(
  sP5('T_0','T_0','T_0')),
  inference(unit_resulting_resolution,[],[f514,f506,f502,f288,f432])).
fof(f1194,plain,(
  ( ! [X0] : (sP5('F_0','const.rat.rat_les_2'(s('type.rat.rat',X0),s('type.rat.rat',X0)),'T_0')) )),
  inference(unit_resulting_resolution,[],[f514,f528,f505,f288,f432])).
fof(f1195,plain,(
  ( ! [X0] : (sP5('const.rat.rat_les_2'(s('type.rat.rat',X0),s('type.rat.rat',X0)),'F_0','T_0')) )),
  inference(unit_resulting_resolution,[],[f514,f509,f526,f288,f432])).
fof(f1196,plain,(
  ( ! [X0,X1] : (sP5('const.rat.rat_les_2'(s('type.rat.rat',X0),s('type.rat.rat',X0)),'const.rat.rat_les_2'(s('type.rat.rat',X1),s('type.rat.rat',X1)),'T_0')) )),
  inference(unit_resulting_resolution,[],[f514,f528,f526,f288,f432])).
fof(f1118,plain,(
  ~sP9('T_0','F_0','T_0')),
  inference(unit_resulting_resolution,[],[f1104,f470])).
fof(f1104,plain,(
  ~sP8('T_0','F_0','T_0')),
  inference(unit_resulting_resolution,[],[f288,f496,f288,f475])).
fof(f1091,plain,(
  sP9('F_0','F_0','T_0')),
  inference(unit_resulting_resolution,[],[f524,f288,f496,f474])).
fof(f1092,plain,(
  ( ! [X0] : (sP9('const.rat.rat_les_2'(s('type.rat.rat',X0),s('type.rat.rat',X0)),'F_0','T_0')) )),
  inference(unit_resulting_resolution,[],[f531,f288,f496,f474])).
fof(f950,plain,(
  ~sP7('T_0','F_0','F_0')),
  inference(unit_resulting_resolution,[],[f939,f453])).
fof(f939,plain,(
  ~sP6('T_0','F_0','F_0')),
  inference(unit_resulting_resolution,[],[f496,f496,f288,f458])).
fof(f926,plain,(
  sP7('F_0','F_0','F_0')),
  inference(unit_resulting_resolution,[],[f520,f496,f496,f457])).
fof(f927,plain,(
  ( ! [X0] : (sP7('const.rat.rat_les_2'(s('type.rat.rat',X0),s('type.rat.rat',X0)),'F_0','F_0')) )),
  inference(unit_resulting_resolution,[],[f529,f496,f496,f457])).
fof(f905,plain,(
  ~sP5('F_0','F_0','F_0')),
  inference(unit_resulting_resolution,[],[f896,f428])).
fof(f896,plain,(
  ~sP2('F_0','F_0','F_0')),
  inference(unit_resulting_resolution,[],[f496,f496,f496,f443])).
fof(f890,plain,(
  ~sP5('F_0','T_0','T_0')),
  inference(unit_resulting_resolution,[],[f879,f429])).
fof(f879,plain,(
  ~sP3('T_0','T_0','F_0')),
  inference(unit_resulting_resolution,[],[f496,f288,f288,f439])).
fof(f856,plain,(
  ~sP4('T_0','T_0','F_0')),
  inference(unit_resulting_resolution,[],[f496,f288,f288,f435])).
fof(f777,plain,(
  ~sP5('T_0','F_0','T_0')),
  inference(unit_resulting_resolution,[],[f288,f532,f449])).
fof(f779,plain,(
  ~sP5('T_0','T_0','F_0')),
  inference(unit_resulting_resolution,[],[f288,f532,f449])).
fof(f758,plain,(
  sP5('F_0','F_0','T_0')),
  inference(unit_resulting_resolution,[],[f496,f532,f447])).
fof(f759,plain,(
  sP5('F_0','T_0','F_0')),
  inference(unit_resulting_resolution,[],[f496,f532,f447])).
fof(f735,plain,(
  ( ! [X4,X3] : (p(s(bool,X4)) | s(bool,X3) = s(bool,X4) | s(bool,'T_0') = s(bool,X3)) )),
  inference(subsumption_resolution,[],[f731,f496])).
fof(f731,plain,(
  ( ! [X4,X3] : (p(s(bool,'F_0')) | p(s(bool,X4)) | s(bool,X3) = s(bool,X4) | s(bool,'T_0') = s(bool,X3)) )),
  inference(superposition,[],[f374,f297])).
fof(f674,plain,(
  ( ! [X0,X1] : (s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X1) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f297,f297])).
fof(f647,plain,(
  ( ! [X0,X1] : (sP9('T_0',X0,'const.rat.rat_les_2'(s('type.rat.rat',X1),s('type.rat.rat',X1)))) )),
  inference(unit_resulting_resolution,[],[f530,f288,f485])).
fof(f628,plain,(
  ( ! [X0] : (sP9('T_0','T_0',X0)) )),
  inference(unit_resulting_resolution,[],[f288,f288,f481])).
fof(f617,plain,(
  ( ! [X0] : (sP9('T_0',X0,'F_0')) )),
  inference(unit_resulting_resolution,[],[f496,f288,f480])).
fof(f609,plain,(
  ( ! [X0] : (~sP9('F_0','T_0',X0)) )),
  inference(unit_resulting_resolution,[],[f288,f496,f469])).
fof(f605,plain,(
  ( ! [X0] : (~sP9('F_0',X0,'F_0')) )),
  inference(unit_resulting_resolution,[],[f496,f496,f468])).
fof(f596,plain,(
  ( ! [X0] : (sP7('T_0','T_0',X0)) )),
  inference(unit_resulting_resolution,[],[f288,f288,f464])).
fof(f591,plain,(
  ( ! [X0] : (sP7('T_0',X0,'T_0')) )),
  inference(unit_resulting_resolution,[],[f288,f288,f463])).
fof(f588,plain,(
  ( ! [X0] : (~sP7('F_0','T_0',X0)) )),
  inference(unit_resulting_resolution,[],[f288,f496,f452])).
fof(f585,plain,(
  ( ! [X0] : (~sP7('F_0',X0,'T_0')) )),
  inference(unit_resulting_resolution,[],[f288,f496,f451])).
fof(f579,plain,(
  ~sP0('F_0','F_0')),
  inference(unit_resulting_resolution,[],[f496,f496,f497])).
fof(f568,plain,(
  sP1('F_0','T_0')),
  inference(unit_resulting_resolution,[],[f496,f288,f406])).
fof(f560,plain,(
  sP1('T_0','F_0')),
  inference(unit_resulting_resolution,[],[f496,f288,f403])).
fof(f557,plain,(
  ~sP1('T_0','T_0')),
  inference(unit_resulting_resolution,[],[f288,f288,f402])).
fof(f556,plain,(
  ~sP1('F_0','F_0')),
  inference(unit_resulting_resolution,[],[f496,f496,f401])).
fof(f532,plain,(
  s(bool,'T_0') != s(bool,'F_0')),
  inference(unit_resulting_resolution,[],[f496,f310])).
fof(f533,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X0),s('type.rat.rat',X0)))) )),
  inference(unit_resulting_resolution,[],[f367,f310])).
fof(f525,plain,(
  ( ! [X2,X0,X1] : (sP4(X0,'const.rat.rat_les_2'(s('type.rat.rat',X1),s('type.rat.rat',X1)),X2)) )),
  inference(unit_resulting_resolution,[],[f367,f437])).
fof(f526,plain,(
  ( ! [X2,X0,X1] : (sP4('const.rat.rat_les_2'(s('type.rat.rat',X0),s('type.rat.rat',X0)),X1,X2)) )),
  inference(unit_resulting_resolution,[],[f367,f438])).
fof(f527,plain,(
  ( ! [X2,X0,X1] : (sP3(X0,'const.rat.rat_les_2'(s('type.rat.rat',X1),s('type.rat.rat',X1)),X2)) )),
  inference(unit_resulting_resolution,[],[f367,f441])).
fof(f528,plain,(
  ( ! [X2,X0,X1] : (sP3('const.rat.rat_les_2'(s('type.rat.rat',X0),s('type.rat.rat',X0)),X1,X2)) )),
  inference(unit_resulting_resolution,[],[f367,f442])).
fof(f529,plain,(
  ( ! [X2,X0,X1] : (sP6('const.rat.rat_les_2'(s('type.rat.rat',X0),s('type.rat.rat',X0)),X1,X2)) )),
  inference(unit_resulting_resolution,[],[f367,f461])).
fof(f530,plain,(
  ( ! [X2,X0,X1] : (sP8(X0,X1,'const.rat.rat_les_2'(s('type.rat.rat',X2),s('type.rat.rat',X2)))) )),
  inference(unit_resulting_resolution,[],[f367,f476])).
fof(f531,plain,(
  ( ! [X2,X0,X1] : (sP8('const.rat.rat_les_2'(s('type.rat.rat',X0),s('type.rat.rat',X0)),X1,X2)) )),
  inference(unit_resulting_resolution,[],[f367,f478])).
fof(f524,plain,(
  ( ! [X0,X1] : (sP8('F_0',X0,X1)) )),
  inference(unit_resulting_resolution,[],[f496,f478])).
fof(f522,plain,(
  ( ! [X0,X1] : (sP8(X0,'T_0',X1)) )),
  inference(unit_resulting_resolution,[],[f288,f477])).
fof(f521,plain,(
  ( ! [X0,X1] : (sP8(X0,X1,'F_0')) )),
  inference(unit_resulting_resolution,[],[f496,f476])).
fof(f520,plain,(
  ( ! [X0,X1] : (sP6('F_0',X0,X1)) )),
  inference(unit_resulting_resolution,[],[f496,f461])).
fof(f518,plain,(
  ( ! [X0,X1] : (sP6(X0,'T_0',X1)) )),
  inference(unit_resulting_resolution,[],[f288,f460])).
fof(f516,plain,(
  ( ! [X0,X1] : (sP6(X0,X1,'T_0')) )),
  inference(unit_resulting_resolution,[],[f288,f459])).
fof(f514,plain,(
  ( ! [X0,X1] : (sP2('T_0',X0,X1)) )),
  inference(unit_resulting_resolution,[],[f288,f446])).
fof(f512,plain,(
  ( ! [X0,X1] : (sP2(X0,'T_0',X1)) )),
  inference(unit_resulting_resolution,[],[f288,f445])).
fof(f510,plain,(
  ( ! [X0,X1] : (sP2(X0,X1,'T_0')) )),
  inference(unit_resulting_resolution,[],[f288,f444])).
fof(f509,plain,(
  ( ! [X0,X1] : (sP3('F_0',X0,X1)) )),
  inference(unit_resulting_resolution,[],[f496,f442])).
fof(f508,plain,(
  ( ! [X0,X1] : (sP3(X0,'F_0',X1)) )),
  inference(unit_resulting_resolution,[],[f496,f441])).
fof(f506,plain,(
  ( ! [X0,X1] : (sP3(X0,X1,'T_0')) )),
  inference(unit_resulting_resolution,[],[f288,f440])).
fof(f505,plain,(
  ( ! [X0,X1] : (sP4('F_0',X0,X1)) )),
  inference(unit_resulting_resolution,[],[f496,f438])).
fof(f504,plain,(
  ( ! [X0,X1] : (sP4(X0,'F_0',X1)) )),
  inference(unit_resulting_resolution,[],[f496,f437])).
fof(f502,plain,(
  ( ! [X0,X1] : (sP4(X0,X1,'T_0')) )),
  inference(unit_resulting_resolution,[],[f288,f436])).
fof(f500,plain,(
  ( ! [X0] : (sP0('T_0',X0)) )),
  inference(unit_resulting_resolution,[],[f288,f388])).
fof(f498,plain,(
  ( ! [X0] : (sP0(X0,'T_0')) )),
  inference(unit_resulting_resolution,[],[f288,f387])).
fof(f479,plain,(
  ( ! [X2,X0,X1] : (sP9(X2,X0,X1) | p(s(bool,X0)) | ~p(s(bool,X1)) | p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f285])).
fof(f285,plain,(
  ! [X0,X1,X2] : ((((p(s(bool,X2)) | ~p(s(bool,X1)) | p(s(bool,X0))) & (~p(s(bool,X2)) | (p(s(bool,X1)) & ~p(s(bool,X0))))) | sP9(X2,X0,X1)) & (~sP9(X2,X0,X1) | ((~p(s(bool,X2)) | ~p(s(bool,X1)) | p(s(bool,X0))) & ((p(s(bool,X1)) & ~p(s(bool,X0))) | p(s(bool,X2))))))),
  inference(flattening,[],[f284])).
fof(f284,plain,(
  ! [X0,X1,X2] : ((((p(s(bool,X2)) | (~p(s(bool,X1)) | p(s(bool,X0)))) & (~p(s(bool,X2)) | (p(s(bool,X1)) & ~p(s(bool,X0))))) | sP9(X2,X0,X1)) & (~sP9(X2,X0,X1) | ((~p(s(bool,X2)) | (~p(s(bool,X1)) | p(s(bool,X0)))) & ((p(s(bool,X1)) & ~p(s(bool,X0))) | p(s(bool,X2))))))),
  inference(nnf_transformation,[],[f197])).
fof(f197,plain,(
  ! [X0,X1,X2] : ((p(s(bool,X2)) <=> (~p(s(bool,X1)) | p(s(bool,X0)))) <=> sP9(X2,X0,X1))),
  inference(definition_folding,[],[f182,f196,f195])).
fof(f195,plain,(
  ! [X2,X0,X1] : (sP8(X2,X0,X1) <=> (~p(s(bool,X1)) | p(s(bool,X0)) | ~p(s(bool,X2))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP8])])).
fof(f196,plain,(
  ! [X2,X0,X1] : (sP9(X2,X0,X1) <=> ((p(s(bool,X2)) | p(s(bool,X1))) & (p(s(bool,X2)) | ~p(s(bool,X0))) & sP8(X2,X0,X1)))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP9])])).
fof(f182,plain,(
  ! [X0,X1,X2] : ((p(s(bool,X2)) <=> (~p(s(bool,X1)) | p(s(bool,X0)))) <=> ((p(s(bool,X2)) | p(s(bool,X1))) & (p(s(bool,X2)) | ~p(s(bool,X0))) & (~p(s(bool,X1)) | p(s(bool,X0)) | ~p(s(bool,X2)))))),
  inference(ennf_transformation,[],[f147])).
fof(f147,plain,(
  ! [X0,X1,X2] : ((p(s(bool,X2)) <=> (p(s(bool,X1)) => p(s(bool,X0)))) <=> ((p(s(bool,X2)) | p(s(bool,X1))) & (p(s(bool,X2)) | ~p(s(bool,X0))) & (~p(s(bool,X1)) | p(s(bool,X0)) | ~p(s(bool,X2)))))),
  inference(flattening,[],[f146])).
fof(f146,plain,(
  ! [X0,X1,X2] : ((p(s(bool,X2)) <=> (p(s(bool,X1)) => p(s(bool,X0)))) <=> ((p(s(bool,X2)) | p(s(bool,X1))) & (p(s(bool,X2)) | ~p(s(bool,X0))) & (~p(s(bool,X1)) | p(s(bool,X0)) | ~p(s(bool,X2)))))),
  inference(rectify,[],[f56])).
fof(f56,axiom,(
  ! [X20,X21,X22] : ((p(s(bool,X22)) <=> (p(s(bool,X21)) => p(s(bool,X20)))) <=> ((p(s(bool,X22)) | p(s(bool,X21))) & (p(s(bool,X22)) | ~p(s(bool,X20))) & (~p(s(bool,X21)) | p(s(bool,X20)) | ~p(s(bool,X22)))))),
  file('thm.rat.RAT_RDIV_LES_NEG','thm.sat.sat_27_prove_ltb')).
fof(f480,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,X2)) | p(s(bool,X1)) | sP9(X2,X0,X1)) )),
  inference(cnf_transformation,[],[f285])).
fof(f481,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,X2)) | ~p(s(bool,X0)) | sP9(X2,X0,X1)) )),
  inference(cnf_transformation,[],[f285])).
fof(f482,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,X2)) | ~p(s(bool,X1)) | p(s(bool,X0)) | ~sP9(X2,X0,X1)) )),
  inference(cnf_transformation,[],[f285])).
fof(f475,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,X2)) | p(s(bool,X1)) | ~p(s(bool,X0)) | ~sP8(X0,X1,X2)) )),
  inference(cnf_transformation,[],[f283])).
fof(f283,plain,(
  ! [X0,X1,X2] : ((~sP8(X0,X1,X2) | ~p(s(bool,X2)) | p(s(bool,X1)) | ~p(s(bool,X0))) & ((p(s(bool,X2)) & ~p(s(bool,X1)) & p(s(bool,X0))) | sP8(X0,X1,X2)))),
  inference(rectify,[],[f282])).
fof(f282,plain,(
  ! [X2,X0,X1] : ((~sP8(X2,X0,X1) | ~p(s(bool,X1)) | p(s(bool,X0)) | ~p(s(bool,X2))) & ((p(s(bool,X1)) & ~p(s(bool,X0)) & p(s(bool,X2))) | sP8(X2,X0,X1)))),
  inference(flattening,[],[f281])).
fof(f281,plain,(
  ! [X2,X0,X1] : ((~sP8(X2,X0,X1) | (~p(s(bool,X1)) | p(s(bool,X0)) | ~p(s(bool,X2)))) & ((p(s(bool,X1)) & ~p(s(bool,X0)) & p(s(bool,X2))) | sP8(X2,X0,X1)))),
  inference(nnf_transformation,[],[f195])).
fof(f476,plain,(
  ( ! [X2,X0,X1] : (sP8(X0,X1,X2) | p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f283])).
fof(f477,plain,(
  ( ! [X2,X0,X1] : (sP8(X0,X1,X2) | ~p(s(bool,X1))) )),
  inference(cnf_transformation,[],[f283])).
fof(f478,plain,(
  ( ! [X2,X0,X1] : (sP8(X0,X1,X2) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f283])).
fof(f468,plain,(
  ( ! [X2,X0,X1] : (~sP9(X0,X1,X2) | p(s(bool,X0)) | p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f280])).
fof(f280,plain,(
  ! [X0,X1,X2] : ((~sP9(X0,X1,X2) | ((p(s(bool,X0)) | p(s(bool,X2))) & (p(s(bool,X0)) | ~p(s(bool,X1))) & sP8(X0,X1,X2))) & ((~p(s(bool,X0)) & ~p(s(bool,X2))) | (~p(s(bool,X0)) & p(s(bool,X1))) | ~sP8(X0,X1,X2) | sP9(X0,X1,X2)))),
  inference(rectify,[],[f279])).
fof(f279,plain,(
  ! [X2,X0,X1] : ((~sP9(X2,X0,X1) | ((p(s(bool,X2)) | p(s(bool,X1))) & (p(s(bool,X2)) | ~p(s(bool,X0))) & sP8(X2,X0,X1))) & ((~p(s(bool,X2)) & ~p(s(bool,X1))) | (~p(s(bool,X2)) & p(s(bool,X0))) | ~sP8(X2,X0,X1) | sP9(X2,X0,X1)))),
  inference(flattening,[],[f278])).
fof(f278,plain,(
  ! [X2,X0,X1] : ((~sP9(X2,X0,X1) | ((p(s(bool,X2)) | p(s(bool,X1))) & (p(s(bool,X2)) | ~p(s(bool,X0))) & sP8(X2,X0,X1))) & (((~p(s(bool,X2)) & ~p(s(bool,X1))) | (~p(s(bool,X2)) & p(s(bool,X0))) | ~sP8(X2,X0,X1)) | sP9(X2,X0,X1)))),
  inference(nnf_transformation,[],[f196])).
fof(f469,plain,(
  ( ! [X2,X0,X1] : (~sP9(X0,X1,X2) | p(s(bool,X0)) | ~p(s(bool,X1))) )),
  inference(cnf_transformation,[],[f280])).
fof(f470,plain,(
  ( ! [X2,X0,X1] : (~sP9(X0,X1,X2) | sP8(X0,X1,X2)) )),
  inference(cnf_transformation,[],[f280])).
fof(f485,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,X0)) | ~sP8(X0,X1,X2) | sP9(X0,X1,X2)) )),
  inference(duplicate_literal_removal,[],[f471])).
fof(f471,plain,(
  ( ! [X2,X0,X1] : (sP9(X0,X1,X2) | ~sP8(X0,X1,X2) | ~p(s(bool,X0)) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f280])).
fof(f472,plain,(
  ( ! [X2,X0,X1] : (sP9(X0,X1,X2) | ~sP8(X0,X1,X2) | ~p(s(bool,X0)) | ~p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f280])).
fof(f473,plain,(
  ( ! [X2,X0,X1] : (sP9(X0,X1,X2) | ~sP8(X0,X1,X2) | p(s(bool,X1)) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f280])).
fof(f474,plain,(
  ( ! [X2,X0,X1] : (sP9(X0,X1,X2) | ~sP8(X0,X1,X2) | p(s(bool,X1)) | ~p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f280])).
fof(f462,plain,(
  ( ! [X2,X0,X1] : (sP7(X2,X0,X1) | p(s(bool,X0)) | p(s(bool,X1)) | p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f277])).
fof(f277,plain,(
  ! [X0,X1,X2] : ((((p(s(bool,X2)) | p(s(bool,X1)) | p(s(bool,X0))) & (~p(s(bool,X2)) | (~p(s(bool,X1)) & ~p(s(bool,X0))))) | sP7(X2,X0,X1)) & (~sP7(X2,X0,X1) | ((~p(s(bool,X2)) | p(s(bool,X1)) | p(s(bool,X0))) & ((~p(s(bool,X1)) & ~p(s(bool,X0))) | p(s(bool,X2))))))),
  inference(flattening,[],[f276])).
fof(f276,plain,(
  ! [X0,X1,X2] : ((((p(s(bool,X2)) | (p(s(bool,X1)) | p(s(bool,X0)))) & (~p(s(bool,X2)) | (~p(s(bool,X1)) & ~p(s(bool,X0))))) | sP7(X2,X0,X1)) & (~sP7(X2,X0,X1) | ((~p(s(bool,X2)) | (p(s(bool,X1)) | p(s(bool,X0)))) & ((~p(s(bool,X1)) & ~p(s(bool,X0))) | p(s(bool,X2))))))),
  inference(nnf_transformation,[],[f194])).
fof(f194,plain,(
  ! [X0,X1,X2] : ((p(s(bool,X2)) <=> (p(s(bool,X1)) | p(s(bool,X0)))) <=> sP7(X2,X0,X1))),
  inference(definition_folding,[],[f145,f193,f192])).
fof(f192,plain,(
  ! [X2,X0,X1] : (sP6(X2,X0,X1) <=> (p(s(bool,X1)) | p(s(bool,X0)) | ~p(s(bool,X2))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP6])])).
fof(f193,plain,(
  ! [X2,X0,X1] : (sP7(X2,X0,X1) <=> ((p(s(bool,X2)) | ~p(s(bool,X1))) & (p(s(bool,X2)) | ~p(s(bool,X0))) & sP6(X2,X0,X1)))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP7])])).
fof(f145,plain,(
  ! [X0,X1,X2] : ((p(s(bool,X2)) <=> (p(s(bool,X1)) | p(s(bool,X0)))) <=> ((p(s(bool,X2)) | ~p(s(bool,X1))) & (p(s(bool,X2)) | ~p(s(bool,X0))) & (p(s(bool,X1)) | p(s(bool,X0)) | ~p(s(bool,X2)))))),
  inference(flattening,[],[f144])).
fof(f144,plain,(
  ! [X0,X1,X2] : ((p(s(bool,X2)) <=> (p(s(bool,X1)) | p(s(bool,X0)))) <=> ((p(s(bool,X2)) | ~p(s(bool,X1))) & (p(s(bool,X2)) | ~p(s(bool,X0))) & (p(s(bool,X1)) | p(s(bool,X0)) | ~p(s(bool,X2)))))),
  inference(rectify,[],[f55])).
fof(f55,axiom,(
  ! [X20,X21,X22] : ((p(s(bool,X22)) <=> (p(s(bool,X21)) | p(s(bool,X20)))) <=> ((p(s(bool,X22)) | ~p(s(bool,X21))) & (p(s(bool,X22)) | ~p(s(bool,X20))) & (p(s(bool,X21)) | p(s(bool,X20)) | ~p(s(bool,X22)))))),
  file('thm.rat.RAT_RDIV_LES_NEG','thm.sat.sat_25_prove_ltb')).
fof(f463,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,X2)) | ~p(s(bool,X1)) | sP7(X2,X0,X1)) )),
  inference(cnf_transformation,[],[f277])).
fof(f464,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,X2)) | ~p(s(bool,X0)) | sP7(X2,X0,X1)) )),
  inference(cnf_transformation,[],[f277])).
fof(f465,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,X2)) | p(s(bool,X1)) | p(s(bool,X0)) | ~sP7(X2,X0,X1)) )),
  inference(cnf_transformation,[],[f277])).
fof(f458,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,X0)) | p(s(bool,X1)) | p(s(bool,X2)) | ~sP6(X0,X1,X2)) )),
  inference(cnf_transformation,[],[f275])).
fof(f275,plain,(
  ! [X0,X1,X2] : ((~sP6(X0,X1,X2) | p(s(bool,X2)) | p(s(bool,X1)) | ~p(s(bool,X0))) & ((~p(s(bool,X2)) & ~p(s(bool,X1)) & p(s(bool,X0))) | sP6(X0,X1,X2)))),
  inference(rectify,[],[f274])).
fof(f274,plain,(
  ! [X2,X0,X1] : ((~sP6(X2,X0,X1) | p(s(bool,X1)) | p(s(bool,X0)) | ~p(s(bool,X2))) & ((~p(s(bool,X1)) & ~p(s(bool,X0)) & p(s(bool,X2))) | sP6(X2,X0,X1)))),
  inference(flattening,[],[f273])).
fof(f273,plain,(
  ! [X2,X0,X1] : ((~sP6(X2,X0,X1) | (p(s(bool,X1)) | p(s(bool,X0)) | ~p(s(bool,X2)))) & ((~p(s(bool,X1)) & ~p(s(bool,X0)) & p(s(bool,X2))) | sP6(X2,X0,X1)))),
  inference(nnf_transformation,[],[f192])).
fof(f459,plain,(
  ( ! [X2,X0,X1] : (sP6(X0,X1,X2) | ~p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f275])).
fof(f460,plain,(
  ( ! [X2,X0,X1] : (sP6(X0,X1,X2) | ~p(s(bool,X1))) )),
  inference(cnf_transformation,[],[f275])).
fof(f461,plain,(
  ( ! [X2,X0,X1] : (sP6(X0,X1,X2) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f275])).
fof(f451,plain,(
  ( ! [X2,X0,X1] : (~sP7(X0,X1,X2) | p(s(bool,X0)) | ~p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f272])).
fof(f272,plain,(
  ! [X0,X1,X2] : ((~sP7(X0,X1,X2) | ((p(s(bool,X0)) | ~p(s(bool,X2))) & (p(s(bool,X0)) | ~p(s(bool,X1))) & sP6(X0,X1,X2))) & ((~p(s(bool,X0)) & p(s(bool,X2))) | (~p(s(bool,X0)) & p(s(bool,X1))) | ~sP6(X0,X1,X2) | sP7(X0,X1,X2)))),
  inference(rectify,[],[f271])).
fof(f271,plain,(
  ! [X2,X0,X1] : ((~sP7(X2,X0,X1) | ((p(s(bool,X2)) | ~p(s(bool,X1))) & (p(s(bool,X2)) | ~p(s(bool,X0))) & sP6(X2,X0,X1))) & ((~p(s(bool,X2)) & p(s(bool,X1))) | (~p(s(bool,X2)) & p(s(bool,X0))) | ~sP6(X2,X0,X1) | sP7(X2,X0,X1)))),
  inference(flattening,[],[f270])).
fof(f270,plain,(
  ! [X2,X0,X1] : ((~sP7(X2,X0,X1) | ((p(s(bool,X2)) | ~p(s(bool,X1))) & (p(s(bool,X2)) | ~p(s(bool,X0))) & sP6(X2,X0,X1))) & (((~p(s(bool,X2)) & p(s(bool,X1))) | (~p(s(bool,X2)) & p(s(bool,X0))) | ~sP6(X2,X0,X1)) | sP7(X2,X0,X1)))),
  inference(nnf_transformation,[],[f193])).
fof(f452,plain,(
  ( ! [X2,X0,X1] : (~sP7(X0,X1,X2) | p(s(bool,X0)) | ~p(s(bool,X1))) )),
  inference(cnf_transformation,[],[f272])).
fof(f453,plain,(
  ( ! [X2,X0,X1] : (~sP7(X0,X1,X2) | sP6(X0,X1,X2)) )),
  inference(cnf_transformation,[],[f272])).
fof(f486,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,X0)) | ~sP6(X0,X1,X2) | sP7(X0,X1,X2)) )),
  inference(duplicate_literal_removal,[],[f454])).
fof(f454,plain,(
  ( ! [X2,X0,X1] : (sP7(X0,X1,X2) | ~sP6(X0,X1,X2) | ~p(s(bool,X0)) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f272])).
fof(f455,plain,(
  ( ! [X2,X0,X1] : (sP7(X0,X1,X2) | ~sP6(X0,X1,X2) | ~p(s(bool,X0)) | p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f272])).
fof(f456,plain,(
  ( ! [X2,X0,X1] : (sP7(X0,X1,X2) | ~sP6(X0,X1,X2) | p(s(bool,X1)) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f272])).
fof(f457,plain,(
  ( ! [X2,X0,X1] : (sP7(X0,X1,X2) | ~sP6(X0,X1,X2) | p(s(bool,X1)) | p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f272])).
fof(f448,plain,(
  ( ! [X2,X0,X1] : (sP5(X2,X1,X0) | s(bool,X0) != s(bool,X1) | ~p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f269])).
fof(f449,plain,(
  ( ! [X2,X0,X1] : (~sP5(X2,X1,X0) | ~p(s(bool,X2)) | s(bool,X0) = s(bool,X1)) )),
  inference(cnf_transformation,[],[f269])).
fof(f450,plain,(
  ( ! [X2,X0,X1] : (~sP5(X2,X1,X0) | s(bool,X0) != s(bool,X1) | p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f269])).
fof(f443,plain,(
  ( ! [X2,X0,X1] : (~sP2(X0,X1,X2) | p(s(bool,X1)) | p(s(bool,X2)) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f268])).
fof(f268,plain,(
  ! [X0,X1,X2] : ((~sP2(X0,X1,X2) | p(s(bool,X2)) | p(s(bool,X1)) | p(s(bool,X0))) & ((~p(s(bool,X2)) & ~p(s(bool,X1)) & ~p(s(bool,X0))) | sP2(X0,X1,X2)))),
  inference(flattening,[],[f267])).
fof(f267,plain,(
  ! [X0,X1,X2] : ((~sP2(X0,X1,X2) | (p(s(bool,X2)) | p(s(bool,X1)) | p(s(bool,X0)))) & ((~p(s(bool,X2)) & ~p(s(bool,X1)) & ~p(s(bool,X0))) | sP2(X0,X1,X2)))),
  inference(nnf_transformation,[],[f187])).
fof(f444,plain,(
  ( ! [X2,X0,X1] : (sP2(X0,X1,X2) | ~p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f268])).
fof(f445,plain,(
  ( ! [X2,X0,X1] : (sP2(X0,X1,X2) | ~p(s(bool,X1))) )),
  inference(cnf_transformation,[],[f268])).
fof(f446,plain,(
  ( ! [X2,X0,X1] : (sP2(X0,X1,X2) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f268])).
fof(f439,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,X1)) | ~p(s(bool,X0)) | p(s(bool,X2)) | ~sP3(X0,X1,X2)) )),
  inference(cnf_transformation,[],[f266])).
fof(f266,plain,(
  ! [X0,X1,X2] : ((~sP3(X0,X1,X2) | p(s(bool,X2)) | ~p(s(bool,X1)) | ~p(s(bool,X0))) & ((~p(s(bool,X2)) & p(s(bool,X1)) & p(s(bool,X0))) | sP3(X0,X1,X2)))),
  inference(rectify,[],[f265])).
fof(f265,plain,(
  ! [X1,X0,X2] : ((~sP3(X1,X0,X2) | p(s(bool,X2)) | ~p(s(bool,X0)) | ~p(s(bool,X1))) & ((~p(s(bool,X2)) & p(s(bool,X0)) & p(s(bool,X1))) | sP3(X1,X0,X2)))),
  inference(flattening,[],[f264])).
fof(f264,plain,(
  ! [X1,X0,X2] : ((~sP3(X1,X0,X2) | (p(s(bool,X2)) | ~p(s(bool,X0)) | ~p(s(bool,X1)))) & ((~p(s(bool,X2)) & p(s(bool,X0)) & p(s(bool,X1))) | sP3(X1,X0,X2)))),
  inference(nnf_transformation,[],[f188])).
fof(f440,plain,(
  ( ! [X2,X0,X1] : (sP3(X0,X1,X2) | ~p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f266])).
fof(f441,plain,(
  ( ! [X2,X0,X1] : (sP3(X0,X1,X2) | p(s(bool,X1))) )),
  inference(cnf_transformation,[],[f266])).
fof(f442,plain,(
  ( ! [X2,X0,X1] : (sP3(X0,X1,X2) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f266])).
fof(f435,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,X1)) | ~p(s(bool,X0)) | p(s(bool,X2)) | ~sP4(X0,X1,X2)) )),
  inference(cnf_transformation,[],[f263])).
fof(f263,plain,(
  ! [X0,X1,X2] : ((~sP4(X0,X1,X2) | p(s(bool,X2)) | ~p(s(bool,X1)) | ~p(s(bool,X0))) & ((~p(s(bool,X2)) & p(s(bool,X1)) & p(s(bool,X0))) | sP4(X0,X1,X2)))),
  inference(rectify,[],[f262])).
fof(f262,plain,(
  ! [X2,X0,X1] : ((~sP4(X2,X0,X1) | p(s(bool,X1)) | ~p(s(bool,X0)) | ~p(s(bool,X2))) & ((~p(s(bool,X1)) & p(s(bool,X0)) & p(s(bool,X2))) | sP4(X2,X0,X1)))),
  inference(flattening,[],[f261])).
fof(f261,plain,(
  ! [X2,X0,X1] : ((~sP4(X2,X0,X1) | (p(s(bool,X1)) | ~p(s(bool,X0)) | ~p(s(bool,X2)))) & ((~p(s(bool,X1)) & p(s(bool,X0)) & p(s(bool,X2))) | sP4(X2,X0,X1)))),
  inference(nnf_transformation,[],[f189])).
fof(f436,plain,(
  ( ! [X2,X0,X1] : (sP4(X0,X1,X2) | ~p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f263])).
fof(f437,plain,(
  ( ! [X2,X0,X1] : (sP4(X0,X1,X2) | p(s(bool,X1))) )),
  inference(cnf_transformation,[],[f263])).
fof(f438,plain,(
  ( ! [X2,X0,X1] : (sP4(X0,X1,X2) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f263])).
fof(f428,plain,(
  ( ! [X2,X0,X1] : (~sP5(X0,X1,X2) | sP2(X2,X1,X0)) )),
  inference(cnf_transformation,[],[f260])).
fof(f260,plain,(
  ! [X0,X1,X2] : ((~sP5(X0,X1,X2) | (sP2(X2,X1,X0) & sP3(X1,X2,X0) & sP4(X0,X2,X1) & (p(s(bool,X2)) | ~p(s(bool,X1)) | ~p(s(bool,X0))))) & (~sP2(X2,X1,X0) | ~sP3(X1,X2,X0) | ~sP4(X0,X2,X1) | (~p(s(bool,X2)) & p(s(bool,X1)) & p(s(bool,X0))) | sP5(X0,X1,X2)))),
  inference(rectify,[],[f259])).
fof(f259,plain,(
  ! [X2,X1,X0] : ((~sP5(X2,X1,X0) | (sP2(X0,X1,X2) & sP3(X1,X0,X2) & sP4(X2,X0,X1) & (p(s(bool,X0)) | ~p(s(bool,X1)) | ~p(s(bool,X2))))) & (~sP2(X0,X1,X2) | ~sP3(X1,X0,X2) | ~sP4(X2,X0,X1) | (~p(s(bool,X0)) & p(s(bool,X1)) & p(s(bool,X2))) | sP5(X2,X1,X0)))),
  inference(flattening,[],[f258])).
fof(f258,plain,(
  ! [X2,X1,X0] : ((~sP5(X2,X1,X0) | (sP2(X0,X1,X2) & sP3(X1,X0,X2) & sP4(X2,X0,X1) & (p(s(bool,X0)) | ~p(s(bool,X1)) | ~p(s(bool,X2))))) & ((~sP2(X0,X1,X2) | ~sP3(X1,X0,X2) | ~sP4(X2,X0,X1) | (~p(s(bool,X0)) & p(s(bool,X1)) & p(s(bool,X2)))) | sP5(X2,X1,X0)))),
  inference(nnf_transformation,[],[f190])).
fof(f429,plain,(
  ( ! [X2,X0,X1] : (~sP5(X0,X1,X2) | sP3(X1,X2,X0)) )),
  inference(cnf_transformation,[],[f260])).
fof(f430,plain,(
  ( ! [X2,X0,X1] : (~sP5(X0,X1,X2) | sP4(X0,X2,X1)) )),
  inference(cnf_transformation,[],[f260])).
fof(f431,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,X1)) | ~p(s(bool,X0)) | p(s(bool,X2)) | ~sP5(X0,X1,X2)) )),
  inference(cnf_transformation,[],[f260])).
fof(f432,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,X2)) | sP5(X0,X1,X2) | ~sP4(X0,X2,X1) | ~sP3(X1,X2,X0) | ~sP2(X2,X1,X0)) )),
  inference(cnf_transformation,[],[f260])).
fof(f433,plain,(
  ( ! [X2,X0,X1] : (~sP4(X0,X2,X1) | p(s(bool,X1)) | sP5(X0,X1,X2) | ~sP3(X1,X2,X0) | ~sP2(X2,X1,X0)) )),
  inference(cnf_transformation,[],[f260])).
fof(f434,plain,(
  ( ! [X2,X0,X1] : (~sP4(X0,X2,X1) | p(s(bool,X0)) | sP5(X0,X1,X2) | ~sP3(X1,X2,X0) | ~sP2(X2,X1,X0)) )),
  inference(cnf_transformation,[],[f260])).
fof(f419,plain,(
  ( ! [X2,X0,X3,X1] : (s(X1,f(s(X0,sK13(X3,X2,X1,X0)))) != s(X1,g(s(X0,sK13(X3,X2,X1,X0)))) | s(fun(X0,X1),X2) = s(fun(X0,X1),X3)) )),
  inference(cnf_transformation,[],[f255])).
fof(f255,plain,(
  ! [X0,X1,X2,X3] : (s(X1,f(s(X0,sK13(X3,X2,X1,X0)))) != s(X1,g(s(X0,sK13(X3,X2,X1,X0)))) | s(fun(X0,X1),X2) = s(fun(X0,X1),X3))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK13])],[f180])).
fof(f180,plain,(
  ! [X0,X1,X2,X3] : (? [X4] : s(X1,f(s(X0,X4))) != s(X1,g(s(X0,X4))) | s(fun(X0,X1),X2) = s(fun(X0,X1),X3))),
  inference(ennf_transformation,[],[f138])).
fof(f138,plain,(
  ! [X0,X1,X2,X3] : (! [X4] : s(X1,f(s(X0,X4))) = s(X1,g(s(X0,X4))) => s(fun(X0,X1),X2) = s(fun(X0,X1),X3))),
  inference(flattening,[],[f137])).
fof(f137,plain,(
  ! [X0,X1] : ! [X2,X3] : (! [X4] : s(X1,f(s(X0,X4))) = s(X1,g(s(X0,X4))) => s(fun(X0,X1),X2) = s(fun(X0,X1),X3))),
  inference(rectify,[],[f4])).
fof(f4,axiom,(
  ! [X1,X2] : ! [X3,X4] : (! [X5] : s(X2,f(s(X1,X5))) = s(X2,g(s(X1,X5))) => s(fun(X1,X2),X3) = s(fun(X1,X2),X4))),
  file('thm.rat.RAT_RDIV_LES_NEG',aHL_EXT)).
fof(f401,plain,(
  ( ! [X0,X1] : (~sP1(X0,X1) | p(s(bool,X0)) | p(s(bool,X1))) )),
  inference(cnf_transformation,[],[f249])).
fof(f249,plain,(
  ! [X0,X1] : ((~sP1(X0,X1) | ((p(s(bool,X0)) | p(s(bool,X1))) & (~p(s(bool,X1)) | ~p(s(bool,X0))))) & ((~p(s(bool,X0)) & ~p(s(bool,X1))) | (p(s(bool,X1)) & p(s(bool,X0))) | sP1(X0,X1)))),
  inference(rectify,[],[f248])).
fof(f248,plain,(
  ! [X1,X0] : ((~sP1(X1,X0) | ((p(s(bool,X1)) | p(s(bool,X0))) & (~p(s(bool,X0)) | ~p(s(bool,X1))))) & ((~p(s(bool,X1)) & ~p(s(bool,X0))) | (p(s(bool,X0)) & p(s(bool,X1))) | sP1(X1,X0)))),
  inference(flattening,[],[f247])).
fof(f247,plain,(
  ! [X1,X0] : ((~sP1(X1,X0) | ((p(s(bool,X1)) | p(s(bool,X0))) & (~p(s(bool,X0)) | ~p(s(bool,X1))))) & (((~p(s(bool,X1)) & ~p(s(bool,X0))) | (p(s(bool,X0)) & p(s(bool,X1)))) | sP1(X1,X0)))),
  inference(nnf_transformation,[],[f185])).
fof(f185,plain,(
  ! [X1,X0] : (sP1(X1,X0) <=> ((p(s(bool,X1)) | p(s(bool,X0))) & (~p(s(bool,X0)) | ~p(s(bool,X1)))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP1])])).
fof(f402,plain,(
  ( ! [X0,X1] : (~sP1(X0,X1) | ~p(s(bool,X1)) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f249])).
fof(f403,plain,(
  ( ! [X0,X1] : (~p(s(bool,X0)) | p(s(bool,X1)) | sP1(X0,X1)) )),
  inference(cnf_transformation,[],[f249])).
fof(f406,plain,(
  ( ! [X0,X1] : (~p(s(bool,X1)) | p(s(bool,X0)) | sP1(X0,X1)) )),
  inference(cnf_transformation,[],[f249])).
fof(f497,plain,(
  ( ! [X0,X1] : (~sP0(X0,X1) | p(s(bool,X1)) | p(s(bool,X0))) )),
  inference(subsumption_resolution,[],[f386,f496])).
fof(f386,plain,(
  ( ! [X0,X1] : (p(s(bool,'F_0')) | p(s(bool,X0)) | p(s(bool,X1)) | ~sP0(X0,X1)) )),
  inference(cnf_transformation,[],[f242])).
fof(f242,plain,(
  ! [X0,X1] : ((~sP0(X0,X1) | p(s(bool,X1)) | p(s(bool,X0)) | p(s(bool,'F_0'))) & ((~p(s(bool,X1)) & ~p(s(bool,X0)) & ~p(s(bool,'F_0'))) | sP0(X0,X1)))),
  inference(flattening,[],[f241])).
fof(f241,plain,(
  ! [X0,X1] : ((~sP0(X0,X1) | (p(s(bool,X1)) | p(s(bool,X0)) | p(s(bool,'F_0')))) & ((~p(s(bool,X1)) & ~p(s(bool,X0)) & ~p(s(bool,'F_0'))) | sP0(X0,X1)))),
  inference(nnf_transformation,[],[f183])).
fof(f183,plain,(
  ! [X0,X1] : (sP0(X0,X1) <=> (p(s(bool,X1)) | p(s(bool,X0)) | p(s(bool,'F_0'))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP0])])).
fof(f387,plain,(
  ( ! [X0,X1] : (~p(s(bool,X1)) | sP0(X0,X1)) )),
  inference(cnf_transformation,[],[f242])).
fof(f388,plain,(
  ( ! [X0,X1] : (~p(s(bool,X0)) | sP0(X0,X1)) )),
  inference(cnf_transformation,[],[f242])).
fof(f374,plain,(
  ( ! [X0,X1] : (p(s(bool,X1)) | p(s(bool,X0)) | s(bool,X0) = s(bool,X1)) )),
  inference(cnf_transformation,[],[f165])).
fof(f165,plain,(
  ! [X0,X1] : ((p(s(bool,X0)) & ~p(s(bool,X1))) | (p(s(bool,X1)) & ~p(s(bool,X0))) | s(bool,X0) = s(bool,X1))),
  inference(flattening,[],[f164])).
fof(f164,plain,(
  ! [X0,X1] : ((p(s(bool,X0)) & ~p(s(bool,X1))) | ((p(s(bool,X1)) & ~p(s(bool,X0))) | s(bool,X0) = s(bool,X1)))),
  inference(ennf_transformation,[],[f118])).
fof(f118,plain,(
  ! [X0,X1] : ((p(s(bool,X0)) => p(s(bool,X1))) => ((p(s(bool,X1)) => p(s(bool,X0))) => s(bool,X0) = s(bool,X1)))),
  inference(rectify,[],[f9])).
fof(f9,axiom,(
  ! [X10,X11] : ((p(s(bool,X10)) => p(s(bool,X11))) => ((p(s(bool,X11)) => p(s(bool,X10))) => s(bool,X10) = s(bool,X11)))),
  file('thm.rat.RAT_RDIV_LES_NEG','thm.bool.IMP_ANTISYM_AX')).
fof(f377,plain,(
  ( ! [X0,X1] : (~p(s(bool,X1)) | ~p(s(bool,X0)) | s(bool,X0) = s(bool,X1)) )),
  inference(cnf_transformation,[],[f165])).
fof(f367,plain,(
  ( ! [X0] : (~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X0),s('type.rat.rat',X0))))) )),
  inference(cnf_transformation,[],[f111])).
fof(f111,plain,(
  ! [X0] : ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X0),s('type.rat.rat',X0))))),
  inference(flattening,[],[f110])).
fof(f110,plain,(
  ! [X0] : ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X0),s('type.rat.rat',X0))))),
  inference(rectify,[],[f47])).
fof(f47,axiom,(
  ! [X6] : ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X6),s('type.rat.rat',X6))))),
  file('thm.rat.RAT_RDIV_LES_NEG','thm.rat.RAT_LES_REF')).
fof(f310,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,X0) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f201])).
fof(f201,plain,(
  ! [X0] : ((s(bool,'T_0') != s(bool,X0) | p(s(bool,X0))) & (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f84])).
fof(f84,plain,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) <=> p(s(bool,X0)))),
  inference(rectify,[],[f34])).
fof(f34,axiom,(
  ! [X9] : (s(bool,'T_0') = s(bool,X9) <=> p(s(bool,X9)))),
  file('thm.rat.RAT_RDIV_LES_NEG','thm.bool.EQ_CLAUSES|split|0')).
fof(f311,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f201])).
fof(f297,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f3])).
fof(f3,axiom,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) | s(bool,'F_0') = s(bool,X0))),
  file('thm.rat.RAT_RDIV_LES_NEG',aHL_BOOL_CASES)).
fof(f286,plain,(
  p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))),
  inference(cnf_transformation,[],[f198])).
fof(f27163,plain,(
  $false | ($spl2 | $spl47 | $spl81 | $spl118)),
  inference(global_subsumption,[],[f801,f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13155,f13085,f13165,f13171,f13142,f13186,f13248,f13249,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f13548,f13553,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037,f13038,f13039,f13040,f13042,f13043,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13070,f13071,f13072,f13074,f13077,f13079,f13080,f13084,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13108,f13109,f13112,f13113,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13138,f13139,f13140,f13141,f13143,f13144,f13145,f13148,f13149,f13150,f13151,f26764,f13156,f13157,f13158,f13159,f13160,f26747,f13167,f27010,f13270,f27086,f27095,f1440,f7150,f7707,f9343,f9322,f9032,f9012,f27106,f27108,f8788,f8786,f27112,f27117,f9370,f8709,f8703,f8669,f8664,f27124,f27126,f8644,f7954,f7941,f5024,f5012,f8447,f9083,f9391,f14070,f8426,f8494,f27139,f14450,f9131,f14445,f27147,f9439,f14441,f13989,f14384,f2895])).
fof(f801,plain,(
  s(bool,'F_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',sK10),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12))))) | $spl2),
  inference(cnf_transformation,[],[f801_D])).
fof(f801_D,plain,(
  s(bool,'F_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',sK10),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12))))) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f27162,plain,(
  $false | ($spl6 | $spl47 | $spl81 | $spl118)),
  inference(global_subsumption,[],[f1464,f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13155,f13085,f13165,f13171,f13142,f13186,f13248,f13249,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f13548,f13553,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037,f13038,f13039,f13040,f13042,f13043,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13070,f13071,f13072,f13074,f13077,f13079,f13080,f13084,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13108,f13109,f13112,f13113,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13138,f13139,f13140,f13141,f13143,f13144,f13145,f13148,f13149,f13150,f13151,f26764,f13156,f13157,f13158,f13159,f13160,f26747,f13167,f27010,f13270,f27086,f27095,f1440,f7150,f7707,f9343,f9322,f9032,f9012,f27106,f27108,f8788,f8786,f27112,f27117,f9370,f8709,f8703,f8669,f8664,f27124,f27126,f8644,f7954,f7941,f5024,f5012,f8447,f9083,f9391,f14070,f8426,f8494,f27139,f14450,f9131,f14445,f27147,f9439,f14441,f13989,f14384,f2895])).
fof(f27161,plain,(
  $false | ($spl47 | $spl81 | $spl118)),
  inference(global_subsumption,[],[f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13155,f13085,f13165,f13171,f13142,f13186,f13248,f13249,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f13548,f13553,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037,f13038,f13039,f13040,f13042,f13043,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13070,f13071,f13072,f13074,f13077,f13079,f13080,f13084,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13108,f13109,f13112,f13113,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13138,f13139,f13140,f13141,f13143,f13144,f13145,f13148,f13149,f13150,f13151,f26764,f13156,f13157,f13158,f13159,f13160,f26747,f13167,f27010,f13270,f27086,f27095,f1440,f7150,f7707,f9343,f9322,f9032,f9012,f27106,f27108,f8788,f8786,f27112,f27117,f9370,f8709,f8703,f8669,f8664,f27124,f27126,f8644,f7954,f7941,f5024,f5012,f8447,f9083,f9391,f14070,f8426,f8494,f27139,f14450,f9131,f14445,f27147,f9439,f14441,f13989,f14384,f2895])).
fof(f27160,plain,(
  $false | ($spl47 | $spl48 | $spl81 | $spl118)),
  inference(global_subsumption,[],[f2898,f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13155,f13085,f13165,f13171,f13142,f13186,f13248,f13249,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f13548,f13553,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037,f13038,f13039,f13040,f13042,f13043,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13070,f13071,f13072,f13074,f13077,f13079,f13080,f13084,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13108,f13109,f13112,f13113,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13138,f13139,f13140,f13141,f13143,f13144,f13145,f13148,f13149,f13150,f13151,f26764,f13156,f13157,f13158,f13159,f13160,f26747,f13167,f27010,f13270,f27086,f27095,f1440,f7150,f7707,f9343,f9322,f9032,f9012,f27106,f27108,f8788,f8786,f27112,f27117,f9370,f8709,f8703,f8669,f8664,f27124,f27126,f8644,f7954,f7941,f5024,f5012,f8447,f9083,f9391,f14070,f8426,f8494,f27139,f14450,f9131,f14445,f27147,f9439,f14441,f13989,f14384])).
fof(f27159,plain,(
  $false | ($spl47 | $spl76 | $spl81 | $spl118)),
  inference(global_subsumption,[],[f4892,f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13155,f13085,f13165,f13171,f13142,f13186,f13248,f13249,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f13548,f13553,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037,f13038,f13039,f13040,f13042,f13043,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13070,f13071,f13072,f13074,f13077,f13079,f13080,f13084,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13108,f13109,f13112,f13113,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13138,f13139,f13140,f13141,f13143,f13144,f13145,f13148,f13149,f13150,f13151,f26764,f13156,f13157,f13158,f13159,f13160,f26747,f13167,f27010,f13270,f27086,f27095,f1440,f7150,f7707,f9343,f9322,f9032,f9012,f27106,f27108,f8788,f8786,f27112,f27117,f9370,f8709,f8703,f8669,f8664,f27124,f27126,f8644,f7954,f7941,f5024,f5012,f8447,f9083,f9391,f14070,f8426,f8494,f27139,f14450,f9131,f14445,f27147,f9439,f14441,f13989,f14384])).
fof(f27158,plain,(
  $false | ($spl47 | $spl78 | $spl81 | $spl118)),
  inference(global_subsumption,[],[f5081,f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13155,f13085,f13165,f13171,f13142,f13186,f13248,f13249,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f13548,f13553,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037,f13038,f13039,f13040,f13042,f13043,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13070,f13071,f13072,f13074,f13077,f13079,f13080,f13084,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13108,f13109,f13112,f13113,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13138,f13139,f13140,f13141,f13143,f13144,f13145,f13148,f13149,f13150,f13151,f26764,f13156,f13157,f13158,f13159,f13160,f26747,f13167,f27010,f13270,f27086,f27095,f1440,f7150,f7707,f9343,f9322,f9032,f9012,f27106,f27108,f8788,f8786,f27112,f27117,f9370,f8709,f8703,f8669,f8664,f27124,f27126,f8644,f7954,f7941,f5024,f5012,f8447,f9083,f9391,f14070,f8426,f8494,f27139,f14450,f9131,f14445,f27147,f9439,f14441,f13989,f14384])).
fof(f27157,plain,(
  $false | ($spl47 | $spl81 | $spl118)),
  inference(global_subsumption,[],[f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13155,f13085,f13165,f13171,f13142,f13186,f13248,f13249,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f13548,f13553,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037,f13038,f13039,f13040,f13042,f13043,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13070,f13071,f13072,f13074,f13077,f13079,f13080,f13084,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13108,f13109,f13112,f13113,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13138,f13139,f13140,f13141,f13143,f13144,f13145,f13148,f13149,f13150,f13151,f26764,f13156,f13157,f13158,f13159,f13160,f26747,f13167,f27010,f13270,f27086,f27095,f1440,f7150,f7707,f9343,f9322,f9032,f9012,f27106,f27108,f8788,f8786,f27112,f27117,f9370,f8709,f8703,f8669,f8664,f27124,f27126,f8644,f7954,f7941,f5024,f5012,f8447,f9083,f9391,f14070,f8426,f8494,f27139,f14450,f9131,f14445,f27147,f9439,f14441,f13989,f14384])).
fof(f27156,plain,(
  $false | ($spl47 | $spl81 | $spl118 | $spl140)),
  inference(global_subsumption,[],[f14440,f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13155,f13085,f13165,f13171,f13142,f13186,f13248,f13249,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f13548,f13553,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037,f13038,f13039,f13040,f13042,f13043,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13070,f13071,f13072,f13074,f13077,f13079,f13080,f13084,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13108,f13109,f13112,f13113,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13138,f13139,f13140,f13141,f13143,f13144,f13145,f13148,f13149,f13150,f13151,f26764,f13156,f13157,f13158,f13159,f13160,f26747,f13167,f27010,f13270,f27086,f27095,f1440,f7150,f7707,f9343,f9322,f9032,f9012,f27106,f27108,f8788,f8786,f27112,f27117,f9370,f8709,f8703,f8669,f8664,f27124,f27126,f8644,f7954,f7941,f5024,f5012,f8447,f9083,f9391,f14070,f8426,f8494,f27139,f14450,f9131,f14445,f27147,f9439,f14441,f13989])).
fof(f27155,plain,(
  $false | ($spl47 | $spl81 | $spl118 | $spl142)),
  inference(global_subsumption,[],[f14457,f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13155,f13085,f13165,f13171,f13142,f13186,f13248,f13249,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f13548,f13553,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037,f13038,f13039,f13040,f13042,f13043,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13070,f13071,f13072,f13074,f13077,f13079,f13080,f13084,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13108,f13109,f13112,f13113,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13138,f13139,f13140,f13141,f13143,f13144,f13145,f13148,f13149,f13150,f13151,f26764,f13156,f13157,f13158,f13159,f13160,f26747,f13167,f27010,f13270,f27086,f27095,f1440,f7150,f7707,f9343,f9322,f9032,f9012,f27106,f27108,f8788,f8786,f27112,f27117,f9370,f8709,f8703,f8669,f8664,f27124,f27126,f8644,f7954,f7941,f5024,f5012,f8447,f9083,f9391,f14070,f8426,f8494,f27139,f14450,f9131,f14445,f27147,f9439,f14441,f13989])).
fof(f27154,plain,(
  $false | ($spl47 | $spl81 | $spl118 | $spl152)),
  inference(global_subsumption,[],[f23836,f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13155,f13085,f13165,f13171,f13142,f13186,f13248,f13249,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f13548,f13553,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037,f13038,f13039,f13040,f13042,f13043,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13070,f13071,f13072,f13074,f13077,f13079,f13080,f13084,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13108,f13109,f13112,f13113,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13138,f13139,f13140,f13141,f13143,f13144,f13145,f13148,f13149,f13150,f13151,f26764,f13156,f13157,f13158,f13159,f13160,f26747,f13167,f27010,f13270,f27086,f27095,f1440,f7150,f7707,f9343,f9322,f9032,f9012,f27106,f27108,f8788,f8786,f27112,f27117,f9370,f8709,f8703,f8669,f8664,f27124,f27126,f8644,f7954,f7941,f5024,f5012,f8447,f9083,f9391,f14070,f8426,f8494,f27139,f14450,f9131,f14445,f27147,f9439,f14441,f13989])).
fof(f27153,plain,(
  $false | ($spl47 | $spl81 | $spl116 | $spl118)),
  inference(global_subsumption,[],[f27152,f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13155,f13085,f13165,f13171,f13142,f13186,f13248,f13249,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f13548,f13553,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037,f13038,f13039,f13040,f13042,f13043,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13070,f13071,f13072,f13074,f13077,f13079,f13080,f13084,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13108,f13109,f13112,f13113,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13138,f13139,f13140,f13141,f13143,f13144,f13145,f13148,f13149,f13150,f13151,f26764,f13156,f13157,f13158,f13159,f13160,f26747,f13167,f27010,f13270,f27086,f27095,f1440,f7150,f7707,f9343,f9322,f9032,f9012,f27106,f27108,f8788,f8786,f27112,f27117,f9370,f8709,f8703,f8669,f8664,f27124,f27126,f8644,f7954,f7941,f5024,f5012,f8447,f9083,f9391,f14070,f8426,f8494,f27139,f14450,f9131,f14445,f27147,f9439,f14441,f13989])).
fof(f27151,plain,(
  $false | ($spl47 | $spl81 | $spl118)),
  inference(global_subsumption,[],[f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13155,f13085,f13165,f13171,f13142,f13186,f13248,f13249,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f13548,f13553,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037,f13038,f13039,f13040,f13042,f13043,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13070,f13071,f13072,f13074,f13077,f13079,f13080,f13084,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13108,f13109,f13112,f13113,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13138,f13139,f13140,f13141,f13143,f13144,f13145,f13148,f13149,f13150,f13151,f26764,f13156,f13157,f13158,f13159,f13160,f26747,f13167,f27010,f13270,f27086,f27095,f1440,f7150,f7707,f9343,f9322,f9032,f9012,f27106,f27108,f8788,f8786,f27112,f27117,f9370,f8709,f8703,f8669,f8664,f27124,f27126,f8644,f7954,f7941,f5024,f5012,f8447,f9083,f9391,f14070,f8426,f8494,f27139,f14450,f9131,f14445,f27147,f9439,f14441,f13989])).
fof(f27150,plain,(
  $false | ($spl47 | $spl81 | $spl118)),
  inference(global_subsumption,[],[f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13155,f13085,f13165,f13171,f13142,f13186,f13248,f13249,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f13548,f13553,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037,f13038,f13039,f13040,f13042,f13043,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13070,f13071,f13072,f13074,f13077,f13079,f13080,f13084,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13108,f13109,f13112,f13113,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13138,f13139,f13140,f13141,f13143,f13144,f13145,f13148,f13149,f13150,f13151,f26764,f13156,f13157,f13158,f13159,f13160,f26747,f13167,f27010,f13270,f27086,f27095,f1440,f7150,f7707,f9343,f9322,f9032,f9012,f27106,f27108,f8788,f8786,f27112,f27117,f9370,f8709,f8703,f8669,f8664,f27124,f27126,f8644,f7954,f7941,f5024,f5012,f8447,f9083,f9391,f14070,f8426,f8494,f27139,f14450,f9131,f14445,f27147,f9439,f14441])).
fof(f27149,plain,(
  $false | ($spl47 | $spl81 | $spl118)),
  inference(global_subsumption,[],[f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13155,f13085,f13165,f13171,f13142,f13186,f13248,f13249,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f13548,f13553,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037,f13038,f13039,f13040,f13042,f13043,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13070,f13071,f13072,f13074,f13077,f13079,f13080,f13084,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13108,f13109,f13112,f13113,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13138,f13139,f13140,f13141,f13143,f13144,f13145,f13148,f13149,f13150,f13151,f26764,f13156,f13157,f13158,f13159,f13160,f26747,f13167,f27010,f13270,f27086,f27095,f1440,f7150,f7707,f9343,f9322,f9032,f9012,f27106,f27108,f8788,f8786,f27112,f27117,f9370,f8709,f8703,f8669,f8664,f27124,f27126,f8644,f7954,f7941,f5024,f5012,f8447,f9083,f9391,f14070,f8426,f8494,f27139,f14450,f9131,f14445,f27147,f9439])).
fof(f27148,plain,(
  $false | ($spl47 | $spl81 | $spl118)),
  inference(global_subsumption,[],[f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13155,f13085,f13165,f13171,f13142,f13186,f13248,f13249,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f13548,f13553,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037,f13038,f13039,f13040,f13042,f13043,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13070,f13071,f13072,f13074,f13077,f13079,f13080,f13084,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13108,f13109,f13112,f13113,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13138,f13139,f13140,f13141,f13143,f13144,f13145,f13148,f13149,f13150,f13151,f26764,f13156,f13157,f13158,f13159,f13160,f26747,f13167,f27010,f13270,f27086,f27095,f1440,f7150,f7707,f9343,f9322,f9032,f9012,f27106,f27108,f8788,f8786,f27112,f27117,f9370,f8709,f8703,f8669,f8664,f27124,f27126,f8644,f7954,f7941,f5024,f5012,f8447,f9083,f9391,f14070,f8426,f8494,f27139,f14450,f9131,f14445,f27147])).
fof(f27143,plain,(
  $false | ($spl47 | $spl81 | $spl118)),
  inference(global_subsumption,[],[f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13155,f13085,f13165,f13171,f13142,f13186,f13248,f13249,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f13548,f13553,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037,f13038,f13039,f13040,f13042,f13043,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13070,f13071,f13072,f13074,f13077,f13079,f13080,f13084,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13108,f13109,f13112,f13113,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13138,f13139,f13140,f13141,f13143,f13144,f13145,f13148,f13149,f13150,f13151,f26764,f13156,f13157,f13158,f13159,f13160,f26747,f13167,f27010,f13270,f27086,f27095,f1440,f7150,f7707,f9343,f9322,f9032,f9012,f27106,f27108,f8788,f8786,f27112,f27117,f9370,f8709,f8703,f8669,f8664,f27124,f27126,f8644,f7954,f7941,f5024,f5012,f8447,f9083,f9391,f14070,f8426,f8494,f27139,f14450,f9131,f14445])).
fof(f27142,plain,(
  $false | ($spl47 | $spl81 | $spl118)),
  inference(global_subsumption,[],[f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13155,f13085,f13165,f13171,f13142,f13186,f13248,f13249,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f13548,f13553,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037,f13038,f13039,f13040,f13042,f13043,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13070,f13071,f13072,f13074,f13077,f13079,f13080,f13084,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13108,f13109,f13112,f13113,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13138,f13139,f13140,f13141,f13143,f13144,f13145,f13148,f13149,f13150,f13151,f26764,f13156,f13157,f13158,f13159,f13160,f26747,f13167,f27010,f13270,f27086,f27095,f1440,f7150,f7707,f9343,f9322,f9032,f9012,f27106,f27108,f8788,f8786,f27112,f27117,f9370,f8709,f8703,f8669,f8664,f27124,f27126,f8644,f7954,f7941,f5024,f5012,f8447,f9083,f9391,f14070,f8426,f8494,f27139,f14450,f9131])).
fof(f27141,plain,(
  $false | ($spl47 | $spl81 | $spl118)),
  inference(global_subsumption,[],[f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13155,f13085,f13165,f13171,f13142,f13186,f13248,f13249,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f13548,f13553,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037,f13038,f13039,f13040,f13042,f13043,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13070,f13071,f13072,f13074,f13077,f13079,f13080,f13084,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13108,f13109,f13112,f13113,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13138,f13139,f13140,f13141,f13143,f13144,f13145,f13148,f13149,f13150,f13151,f26764,f13156,f13157,f13158,f13159,f13160,f26747,f13167,f27010,f13270,f27086,f27095,f1440,f7150,f7707,f9343,f9322,f9032,f9012,f27106,f27108,f8788,f8786,f27112,f27117,f9370,f8709,f8703,f8669,f8664,f27124,f27126,f8644,f7954,f7941,f5024,f5012,f8447,f9083,f9391,f14070,f8426,f8494,f27139,f14450])).
fof(f27140,plain,(
  $false | ($spl47 | $spl81 | $spl118)),
  inference(global_subsumption,[],[f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13155,f13085,f13165,f13171,f13142,f13186,f13248,f13249,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f13548,f13553,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037,f13038,f13039,f13040,f13042,f13043,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13070,f13071,f13072,f13074,f13077,f13079,f13080,f13084,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13108,f13109,f13112,f13113,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13138,f13139,f13140,f13141,f13143,f13144,f13145,f13148,f13149,f13150,f13151,f26764,f13156,f13157,f13158,f13159,f13160,f26747,f13167,f27010,f13270,f27086,f27095,f1440,f7150,f7707,f9343,f9322,f9032,f9012,f27106,f27108,f8788,f8786,f27112,f27117,f9370,f8709,f8703,f8669,f8664,f27124,f27126,f8644,f7954,f7941,f5024,f5012,f8447,f9083,f9391,f14070,f8426,f8494,f27139])).
fof(f27138,plain,(
  $false | ($spl47 | $spl81 | $spl118)),
  inference(global_subsumption,[],[f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13155,f13085,f13165,f13171,f13142,f13186,f13248,f13249,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f13548,f13553,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037,f13038,f13039,f13040,f13042,f13043,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13070,f13071,f13072,f13074,f13077,f13079,f13080,f13084,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13108,f13109,f13112,f13113,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13138,f13139,f13140,f13141,f13143,f13144,f13145,f13148,f13149,f13150,f13151,f26764,f13156,f13157,f13158,f13159,f13160,f26747,f13167,f27010,f13270,f27086,f27095,f1440,f7150,f7707,f9343,f9322,f9032,f9012,f27106,f27108,f8788,f8786,f27112,f27117,f9370,f8709,f8703,f8669,f8664,f27124,f27126,f8644,f7954,f7941,f5024,f5012,f8447,f9083,f9391,f14070,f8426,f8494])).
fof(f27137,plain,(
  $false | ($spl47 | $spl81 | $spl118)),
  inference(global_subsumption,[],[f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13155,f13085,f13165,f13171,f13142,f13186,f13248,f13249,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f13548,f13553,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037,f13038,f13039,f13040,f13042,f13043,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13070,f13071,f13072,f13074,f13077,f13079,f13080,f13084,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13108,f13109,f13112,f13113,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13138,f13139,f13140,f13141,f13143,f13144,f13145,f13148,f13149,f13150,f13151,f26764,f13156,f13157,f13158,f13159,f13160,f26747,f13167,f27010,f13270,f27086,f27095,f1440,f7150,f7707,f9343,f9322,f9032,f9012,f27106,f27108,f8788,f8786,f27112,f27117,f9370,f8709,f8703,f8669,f8664,f27124,f27126,f8644,f7954,f7941,f5024,f5012,f8447,f9083,f9391,f14070,f8426])).
fof(f27136,plain,(
  $false | ($spl47 | $spl81 | $spl118)),
  inference(global_subsumption,[],[f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13155,f13085,f13165,f13171,f13142,f13186,f13248,f13249,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f13548,f13553,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037,f13038,f13039,f13040,f13042,f13043,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13070,f13071,f13072,f13074,f13077,f13079,f13080,f13084,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13108,f13109,f13112,f13113,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13138,f13139,f13140,f13141,f13143,f13144,f13145,f13148,f13149,f13150,f13151,f26764,f13156,f13157,f13158,f13159,f13160,f26747,f13167,f27010,f13270,f27086,f27095,f1440,f7150,f7707,f9343,f9322,f9032,f9012,f27106,f27108,f8788,f8786,f27112,f27117,f9370,f8709,f8703,f8669,f8664,f27124,f27126,f8644,f7954,f7941,f5024,f5012,f8447,f9083,f9391,f14070])).
fof(f27135,plain,(
  $false | ($spl47 | $spl81 | $spl118)),
  inference(global_subsumption,[],[f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13155,f13085,f13165,f13171,f13142,f13186,f13248,f13249,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f13548,f13553,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037,f13038,f13039,f13040,f13042,f13043,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13070,f13071,f13072,f13074,f13077,f13079,f13080,f13084,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13108,f13109,f13112,f13113,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13138,f13139,f13140,f13141,f13143,f13144,f13145,f13148,f13149,f13150,f13151,f26764,f13156,f13157,f13158,f13159,f13160,f26747,f13167,f27010,f13270,f27086,f27095,f1440,f7150,f7707,f9343,f9322,f9032,f9012,f27106,f27108,f8788,f8786,f27112,f27117,f9370,f8709,f8703,f8669,f8664,f27124,f27126,f8644,f7954,f7941,f5024,f5012,f8447,f9083,f9391])).
fof(f27134,plain,(
  $false | ($spl47 | $spl81 | $spl118)),
  inference(global_subsumption,[],[f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13155,f13085,f13165,f13171,f13142,f13186,f13248,f13249,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f13548,f13553,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037,f13038,f13039,f13040,f13042,f13043,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13070,f13071,f13072,f13074,f13077,f13079,f13080,f13084,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13108,f13109,f13112,f13113,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13138,f13139,f13140,f13141,f13143,f13144,f13145,f13148,f13149,f13150,f13151,f26764,f13156,f13157,f13158,f13159,f13160,f26747,f13167,f27010,f13270,f27086,f27095,f1440,f7150,f7707,f9343,f9322,f9032,f9012,f27106,f27108,f8788,f8786,f27112,f27117,f9370,f8709,f8703,f8669,f8664,f27124,f27126,f8644,f7954,f7941,f5024,f5012,f8447,f9083])).
fof(f27133,plain,(
  $false | ($spl47 | $spl81 | $spl118)),
  inference(global_subsumption,[],[f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13155,f13085,f13165,f13171,f13142,f13186,f13248,f13249,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f13548,f13553,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037,f13038,f13039,f13040,f13042,f13043,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13070,f13071,f13072,f13074,f13077,f13079,f13080,f13084,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13108,f13109,f13112,f13113,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13138,f13139,f13140,f13141,f13143,f13144,f13145,f13148,f13149,f13150,f13151,f26764,f13156,f13157,f13158,f13159,f13160,f26747,f13167,f27010,f13270,f27086,f27095,f1440,f7150,f7707,f9343,f9322,f9032,f9012,f27106,f27108,f8788,f8786,f27112,f27117,f9370,f8709,f8703,f8669,f8664,f27124,f27126,f8644,f7954,f7941,f5024,f5012,f8447])).
fof(f27132,plain,(
  $false | ($spl47 | $spl81 | $spl118)),
  inference(global_subsumption,[],[f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13155,f13085,f13165,f13171,f13142,f13186,f13248,f13249,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f13548,f13553,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037,f13038,f13039,f13040,f13042,f13043,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13070,f13071,f13072,f13074,f13077,f13079,f13080,f13084,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13108,f13109,f13112,f13113,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13138,f13139,f13140,f13141,f13143,f13144,f13145,f13148,f13149,f13150,f13151,f26764,f13156,f13157,f13158,f13159,f13160,f26747,f13167,f27010,f13270,f27086,f27095,f1440,f7150,f7707,f9343,f9322,f9032,f9012,f27106,f27108,f8788,f8786,f27112,f27117,f9370,f8709,f8703,f8669,f8664,f27124,f27126,f8644,f7954,f7941,f5024,f5012])).
fof(f27131,plain,(
  $false | ($spl47 | $spl81 | $spl118)),
  inference(global_subsumption,[],[f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13155,f13085,f13165,f13171,f13142,f13186,f13248,f13249,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f5012,f13548,f13553,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037,f13038,f13039,f13040,f13042,f13043,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13070,f13071,f13072,f13074,f13077,f13079,f13080,f13084,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13108,f13109,f13112,f13113,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13138,f13139,f13140,f13141,f13143,f13144,f13145,f13148,f13149,f13150,f13151,f26764,f13156,f13157,f13158,f13159,f13160,f26747,f13167,f27010,f13270,f27086,f27095,f1440,f7150,f7707,f9343,f9322,f9032,f9012,f27106,f27108,f8788,f8786,f27112,f27117,f9370,f8709,f8703,f8669,f8664,f27124,f27126,f8644,f7954,f7941,f5024])).
fof(f27130,plain,(
  $false | ($spl47 | $spl81 | $spl118)),
  inference(global_subsumption,[],[f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13155,f13085,f13165,f13171,f13142,f13186,f13248,f13249,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f5012,f13548,f13553,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037,f13038,f13039,f13040,f13042,f13043,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13070,f13071,f13072,f13074,f13077,f13079,f13080,f13084,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13108,f13109,f13112,f13113,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13138,f13139,f13140,f13141,f13143,f13144,f13145,f13148,f13149,f13150,f13151,f26764,f13156,f13157,f13158,f13159,f13160,f26747,f13167,f27010,f13270,f27086,f27095,f1440,f7150,f7707,f9343,f9322,f9032,f9012,f27106,f27108,f8788,f8786,f27112,f27117,f9370,f8709,f8703,f8669,f8664,f27124,f27126,f8644,f7954,f7941])).
fof(f27129,plain,(
  $false | ($spl47 | $spl81 | $spl118)),
  inference(global_subsumption,[],[f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13155,f13085,f13165,f13171,f13142,f13186,f13248,f13249,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f5012,f13548,f13553,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037,f13038,f13039,f13040,f13042,f13043,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13070,f13071,f13072,f13074,f13077,f13079,f13080,f13084,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13108,f13109,f13112,f13113,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13138,f13139,f13140,f13141,f13143,f13144,f13145,f13148,f13149,f13150,f13151,f26764,f13156,f13157,f13158,f13159,f13160,f26747,f13167,f27010,f13270,f27086,f27095,f1440,f7150,f7707,f9343,f9322,f9032,f9012,f27106,f27108,f8788,f8786,f27112,f27117,f9370,f8709,f8703,f8669,f8664,f27124,f27126,f8644,f7954])).
fof(f27128,plain,(
  $false | ($spl47 | $spl81 | $spl118)),
  inference(global_subsumption,[],[f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13155,f13085,f13165,f13171,f13142,f13186,f13248,f13249,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f5012,f13548,f13553,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037,f13038,f13039,f13040,f13042,f13043,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13070,f13071,f13072,f13074,f13077,f13079,f13080,f13084,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13108,f13109,f13112,f13113,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13138,f13139,f13140,f13141,f13143,f13144,f13145,f13148,f13149,f13150,f13151,f26764,f13156,f13157,f13158,f13159,f13160,f26747,f13167,f27010,f13270,f27086,f27095,f1440,f7150,f7707,f9343,f9322,f9032,f9012,f27106,f27108,f8788,f8786,f27112,f27117,f9370,f8709,f8703,f8669,f8664,f27124,f27126,f8644])).
fof(f27127,plain,(
  $false | ($spl47 | $spl81 | $spl118)),
  inference(global_subsumption,[],[f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13155,f13085,f13165,f13171,f13142,f13186,f13248,f13249,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f5012,f13548,f13553,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037,f13038,f13039,f13040,f13042,f13043,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13070,f13071,f13072,f13074,f13077,f13079,f13080,f13084,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13108,f13109,f13112,f13113,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13138,f13139,f13140,f13141,f13143,f13144,f13145,f13148,f13149,f13150,f13151,f26764,f13156,f13157,f13158,f13159,f13160,f26747,f13167,f27010,f13270,f27086,f27095,f1440,f7150,f7707,f9343,f9322,f9032,f9012,f27106,f27108,f8788,f8786,f27112,f27117,f9370,f8709,f8703,f8669,f8664,f27124,f27126])).
fof(f27125,plain,(
  $false | ($spl47 | $spl81 | $spl118)),
  inference(global_subsumption,[],[f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13155,f13085,f13165,f13171,f13142,f13186,f13248,f13249,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f5012,f13548,f13553,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037,f13038,f13039,f13040,f13042,f13043,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13070,f13071,f13072,f13074,f13077,f13079,f13080,f13084,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13108,f13109,f13112,f13113,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13138,f13139,f13140,f13141,f13143,f13144,f13145,f13148,f13149,f13150,f13151,f26764,f13156,f13157,f13158,f13159,f13160,f26747,f13167,f27010,f13270,f27086,f27095,f1440,f7150,f7707,f9343,f9322,f9032,f9012,f27106,f27108,f8788,f8786,f27112,f27117,f9370,f8709,f8703,f8669,f8664,f27124])).
fof(f27123,plain,(
  $false | ($spl47 | $spl81 | $spl118)),
  inference(global_subsumption,[],[f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13155,f13085,f13165,f13171,f13142,f13186,f13248,f13249,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f5012,f13548,f13553,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037,f13038,f13039,f13040,f13042,f13043,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13070,f13071,f13072,f13074,f13077,f13079,f13080,f13084,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13108,f13109,f13112,f13113,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13138,f13139,f13140,f13141,f13143,f13144,f13145,f13148,f13149,f13150,f13151,f26764,f13156,f13157,f13158,f13159,f13160,f26747,f13167,f27010,f13270,f27086,f27095,f1440,f7150,f7707,f9343,f9322,f9032,f9012,f27106,f27108,f8788,f8786,f27112,f27117,f9370,f8709,f8703,f8669,f8664])).
fof(f27122,plain,(
  $false | ($spl47 | $spl81 | $spl118)),
  inference(global_subsumption,[],[f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13155,f13085,f13165,f13171,f13142,f13186,f13248,f13249,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f5012,f13548,f13553,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037,f13038,f13039,f13040,f13042,f13043,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13070,f13071,f13072,f13074,f13077,f13079,f13080,f13084,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13108,f13109,f13112,f13113,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13138,f13139,f13140,f13141,f13143,f13144,f13145,f13148,f13149,f13150,f13151,f26764,f13156,f13157,f13158,f13159,f13160,f26747,f13167,f27010,f13270,f27086,f27095,f1440,f7150,f7707,f9343,f9322,f9032,f9012,f27106,f27108,f8788,f8786,f27112,f27117,f9370,f8709,f8703,f8669])).
fof(f27121,plain,(
  $false | ($spl47 | $spl81 | $spl118)),
  inference(global_subsumption,[],[f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13155,f13085,f13165,f13171,f13142,f13186,f13248,f13249,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f5012,f13548,f13553,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037,f13038,f13039,f13040,f13042,f13043,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13070,f13071,f13072,f13074,f13077,f13079,f13080,f13084,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13108,f13109,f13112,f13113,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13138,f13139,f13140,f13141,f13143,f13144,f13145,f13148,f13149,f13150,f13151,f26764,f13156,f13157,f13158,f13159,f13160,f26747,f13167,f27010,f13270,f27086,f27095,f1440,f7150,f7707,f9343,f9322,f9032,f9012,f27106,f27108,f8788,f8786,f27112,f27117,f9370,f8709,f8703])).
fof(f27120,plain,(
  $false | ($spl47 | $spl81 | $spl118)),
  inference(global_subsumption,[],[f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13155,f13085,f13165,f13171,f13142,f13186,f13248,f13249,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f5012,f13548,f13553,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037,f13038,f13039,f13040,f13042,f13043,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13070,f13071,f13072,f13074,f13077,f13079,f13080,f13084,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13108,f13109,f13112,f13113,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13138,f13139,f13140,f13141,f13143,f13144,f13145,f13148,f13149,f13150,f13151,f26764,f13156,f13157,f13158,f13159,f13160,f26747,f13167,f27010,f13270,f27086,f27095,f1440,f7150,f7707,f9343,f9322,f9032,f9012,f27106,f27108,f8788,f8786,f27112,f27117,f9370,f8709])).
fof(f27119,plain,(
  $false | ($spl47 | $spl81 | $spl118)),
  inference(global_subsumption,[],[f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13155,f13085,f13165,f13171,f13142,f13186,f13248,f13249,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f5012,f13548,f13553,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037,f13038,f13039,f13040,f13042,f13043,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13070,f13071,f13072,f13074,f13077,f13079,f13080,f13084,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13108,f13109,f13112,f13113,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13138,f13139,f13140,f13141,f13143,f13144,f13145,f13148,f13149,f13150,f13151,f26764,f13156,f13157,f13158,f13159,f13160,f26747,f13167,f27010,f13270,f27086,f27095,f1440,f7150,f7707,f9343,f9322,f9032,f9012,f27106,f27108,f8788,f8786,f27112,f27117,f9370])).
fof(f27118,plain,(
  $false | ($spl47 | $spl81 | $spl118)),
  inference(global_subsumption,[],[f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13155,f13085,f13165,f13171,f13142,f13186,f13248,f13249,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f5012,f13548,f13553,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037,f13038,f13039,f13040,f13042,f13043,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13070,f13071,f13072,f13074,f13077,f13079,f13080,f13084,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13108,f13109,f13112,f13113,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13138,f13139,f13140,f13141,f13143,f13144,f13145,f13148,f13149,f13150,f13151,f26764,f13156,f13157,f13158,f13159,f13160,f26747,f13167,f27010,f13270,f27086,f27095,f1440,f7150,f7707,f9343,f9322,f9032,f9012,f27106,f27108,f8788,f8786,f27112,f27117])).
fof(f27113,plain,(
  $false | ($spl47 | $spl81 | $spl118)),
  inference(global_subsumption,[],[f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13155,f13085,f13165,f13171,f13142,f13186,f13248,f13249,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f5012,f13548,f13553,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037,f13038,f13039,f13040,f13042,f13043,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13070,f13071,f13072,f13074,f13077,f13079,f13080,f13084,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13108,f13109,f13112,f13113,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13138,f13139,f13140,f13141,f13143,f13144,f13145,f13148,f13149,f13150,f13151,f26764,f13156,f13157,f13158,f13159,f13160,f26747,f13167,f27010,f13270,f27086,f27095,f1440,f7150,f7707,f9343,f9322,f9032,f9012,f27106,f27108,f8788,f8786,f27112])).
fof(f27111,plain,(
  $false | ($spl47 | $spl81 | $spl118)),
  inference(global_subsumption,[],[f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13155,f13085,f13165,f13171,f13142,f13186,f13248,f13249,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f5012,f13548,f13553,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037,f13038,f13039,f13040,f13042,f13043,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13070,f13071,f13072,f13074,f13077,f13079,f13080,f13084,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13108,f13109,f13112,f13113,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13138,f13139,f13140,f13141,f13143,f13144,f13145,f13148,f13149,f13150,f13151,f26764,f13156,f13157,f13158,f13159,f13160,f26747,f13167,f27010,f13270,f27086,f27095,f1440,f7150,f7707,f9343,f9322,f9032,f9012,f27106,f27108,f8788,f8786])).
fof(f27110,plain,(
  $false | ($spl47 | $spl81 | $spl118)),
  inference(global_subsumption,[],[f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13155,f13085,f13165,f13171,f13142,f13186,f13248,f13249,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f5012,f13548,f13553,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037,f13038,f13039,f13040,f13042,f13043,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13070,f13071,f13072,f13074,f13077,f13079,f13080,f13084,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13108,f13109,f13112,f13113,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13138,f13139,f13140,f13141,f13143,f13144,f13145,f13148,f13149,f13150,f13151,f26764,f13156,f13157,f13158,f13159,f13160,f26747,f13167,f27010,f13270,f27086,f27095,f1440,f7150,f7707,f9343,f9322,f9032,f9012,f27106,f27108,f8788])).
fof(f27109,plain,(
  $false | ($spl47 | $spl81 | $spl118)),
  inference(global_subsumption,[],[f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13155,f13085,f13165,f13171,f13142,f13186,f13248,f13249,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f5012,f13548,f13553,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037,f13038,f13039,f13040,f13042,f13043,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13070,f13071,f13072,f13074,f13077,f13079,f13080,f13084,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13108,f13109,f13112,f13113,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13138,f13139,f13140,f13141,f13143,f13144,f13145,f13148,f13149,f13150,f13151,f26764,f13156,f13157,f13158,f13159,f13160,f26747,f13167,f27010,f13270,f27086,f27095,f1440,f7150,f7707,f9343,f9322,f9032,f9012,f27106,f27108])).
fof(f27107,plain,(
  $false | ($spl47 | $spl81 | $spl118)),
  inference(global_subsumption,[],[f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13155,f13085,f13165,f13171,f13142,f13186,f13248,f13249,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f5012,f13548,f13553,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037,f13038,f13039,f13040,f13042,f13043,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13070,f13071,f13072,f13074,f13077,f13079,f13080,f13084,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13108,f13109,f13112,f13113,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13138,f13139,f13140,f13141,f13143,f13144,f13145,f13148,f13149,f13150,f13151,f26764,f13156,f13157,f13158,f13159,f13160,f26747,f13167,f27010,f13270,f27086,f27095,f1440,f7150,f7707,f9343,f9322,f9032,f9012,f27106])).
fof(f27105,plain,(
  $false | ($spl47 | $spl81 | $spl118)),
  inference(global_subsumption,[],[f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13155,f13085,f13165,f13171,f13142,f13186,f13248,f13249,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f5012,f13548,f13553,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037,f13038,f13039,f13040,f13042,f13043,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13070,f13071,f13072,f13074,f13077,f13079,f13080,f13084,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13108,f13109,f13112,f13113,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13138,f13139,f13140,f13141,f13143,f13144,f13145,f13148,f13149,f13150,f13151,f26764,f13156,f13157,f13158,f13159,f13160,f26747,f13167,f27010,f13270,f27086,f27095,f1440,f7150,f7707,f9343,f9322,f9032,f9012])).
fof(f27104,plain,(
  $false | ($spl47 | $spl81 | $spl118)),
  inference(global_subsumption,[],[f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13155,f13085,f13165,f13171,f13142,f13186,f13248,f13249,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f5012,f13548,f13553,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037,f13038,f13039,f13040,f13042,f13043,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13070,f13071,f13072,f13074,f13077,f13079,f13080,f13084,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13108,f13109,f13112,f13113,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13138,f13139,f13140,f13141,f13143,f13144,f13145,f13148,f13149,f13150,f13151,f26764,f13156,f13157,f13158,f13159,f13160,f26747,f13167,f27010,f13270,f27086,f27095,f1440,f7150,f7707,f9343,f9322,f9032])).
fof(f27103,plain,(
  $false | ($spl47 | $spl81 | $spl118)),
  inference(global_subsumption,[],[f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13155,f13085,f13165,f13171,f13142,f13186,f13248,f13249,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f5012,f13548,f13553,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037,f13038,f13039,f13040,f13042,f13043,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13070,f13071,f13072,f13074,f13077,f13079,f13080,f13084,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13108,f13109,f13112,f13113,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13138,f13139,f13140,f13141,f13143,f13144,f13145,f13148,f13149,f13150,f13151,f26764,f13156,f13157,f13158,f13159,f13160,f26747,f13167,f27010,f13270,f27086,f27095,f1440,f7150,f7707,f9343,f9322])).
fof(f27102,plain,(
  $false | ($spl47 | $spl81 | $spl118)),
  inference(global_subsumption,[],[f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13155,f13085,f13165,f13171,f13142,f13186,f13248,f13249,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f5012,f13548,f13553,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037,f13038,f13039,f13040,f13042,f13043,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13070,f13071,f13072,f13074,f13077,f13079,f13080,f13084,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13108,f13109,f13112,f13113,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13138,f13139,f13140,f13141,f13143,f13144,f13145,f13148,f13149,f13150,f13151,f26764,f13156,f13157,f13158,f13159,f13160,f26747,f13167,f27010,f13270,f27086,f27095,f1440,f7150,f7707,f9343])).
fof(f27101,plain,(
  $false | ($spl9 | $spl47 | $spl81 | $spl118)),
  inference(global_subsumption,[],[f8043,f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13155,f13085,f13165,f13171,f13142,f13186,f13248,f13249,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f5012,f13548,f13553,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037,f13038,f13039,f13040,f13042,f13043,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13070,f13071,f13072,f13074,f13077,f13079,f13080,f13084,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13108,f13109,f13112,f13113,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13138,f13139,f13140,f13141,f13143,f13144,f13145,f13148,f13149,f13150,f13151,f26764,f13156,f13157,f13158,f13159,f13160,f26747,f13167,f27010,f13270,f27086,f27095,f1440,f7150,f7707])).
fof(f8043,plain,(
  ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.rat.rat',sK12)))) | $spl9),
  inference(forward_demodulation,[],[f8042,f372])).
fof(f8042,plain,(
  ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat',sK12))),s('type.rat.rat',sK12)))) | $spl9),
  inference(backward_demodulation,[],[f7956,f1502])).
fof(f27100,plain,(
  $false | ($spl47 | $spl81 | $spl118)),
  inference(global_subsumption,[],[f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13155,f13085,f13165,f13171,f13142,f13186,f13248,f13249,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f5012,f13548,f13553,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037,f13038,f13039,f13040,f13042,f13043,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13070,f13071,f13072,f13074,f13077,f13079,f13080,f13084,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13108,f13109,f13112,f13113,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13138,f13139,f13140,f13141,f13143,f13144,f13145,f13148,f13149,f13150,f13151,f26764,f13156,f13157,f13158,f13159,f13160,f26747,f13167,f27010,f13270,f27086,f27095,f1440,f7150,f7707])).
fof(f27099,plain,(
  $false | ($spl47 | $spl81 | $spl118)),
  inference(global_subsumption,[],[f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13155,f13085,f13165,f13171,f13142,f13186,f13248,f13249,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f5012,f13548,f13553,f7707,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037,f13038,f13039,f13040,f13042,f13043,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13070,f13071,f13072,f13074,f13077,f13079,f13080,f13084,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13108,f13109,f13112,f13113,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13138,f13139,f13140,f13141,f13143,f13144,f13145,f13148,f13149,f13150,f13151,f26764,f13156,f13157,f13158,f13159,f13160,f26747,f13167,f27010,f13270,f27086,f27095,f1440,f7150])).
fof(f27098,plain,(
  $false | ($spl47 | $spl81 | $spl118 | $spl144)),
  inference(global_subsumption,[],[f14458,f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13155,f13085,f13165,f13171,f13142,f13186,f13248,f13249,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f5012,f13548,f13553,f7150,f7707,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037,f13038,f13039,f13040,f13042,f13043,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13070,f13071,f13072,f13074,f13077,f13079,f13080,f13084,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13108,f13109,f13112,f13113,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13138,f13139,f13140,f13141,f13143,f13144,f13145,f13148,f13149,f13150,f13151,f26764,f13156,f13157,f13158,f13159,f13160,f26747,f13167,f27010,f13270,f27086,f27095,f1440])).
fof(f27097,plain,(
  $false | ($spl47 | $spl81 | $spl118)),
  inference(global_subsumption,[],[f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13155,f13085,f13165,f13171,f13142,f13186,f13248,f13249,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f5012,f13548,f13553,f7150,f7707,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037,f13038,f13039,f13040,f13042,f13043,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13070,f13071,f13072,f13074,f13077,f13079,f13080,f13084,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13108,f13109,f13112,f13113,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13138,f13139,f13140,f13141,f13143,f13144,f13145,f13148,f13149,f13150,f13151,f26764,f13156,f13157,f13158,f13159,f13160,f26747,f13167,f27010,f13270,f27086,f27095,f1440])).
fof(f27096,plain,(
  $false | ($spl47 | $spl81 | $spl118)),
  inference(global_subsumption,[],[f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1440,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13155,f13085,f13165,f13171,f13142,f13186,f13248,f13249,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f5012,f13548,f13553,f7150,f7707,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037,f13038,f13039,f13040,f13042,f13043,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13070,f13071,f13072,f13074,f13077,f13079,f13080,f13084,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13108,f13109,f13112,f13113,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13138,f13139,f13140,f13141,f13143,f13144,f13145,f13148,f13149,f13150,f13151,f26764,f13156,f13157,f13158,f13159,f13160,f26747,f13167,f27010,f13270,f27086,f27095])).
fof(f27094,plain,(
  $false | ($spl47 | $spl81 | $spl90 | $spl118)),
  inference(global_subsumption,[],[f14418,f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1440,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13155,f13085,f13165,f13171,f13142,f13186,f13248,f13249,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f5012,f13548,f13553,f7150,f7707,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037,f13038,f13039,f13040,f13042,f13043,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13070,f13071,f13072,f13074,f13077,f13079,f13080,f13084,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13108,f13109,f13112,f13113,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13138,f13139,f13140,f13141,f13143,f13144,f13145,f13148,f13149,f13150,f13151,f26764,f13156,f13157,f13158,f13159,f13160,f26747,f13167,f27010,f13270,f27086])).
fof(f14418,plain,(
  ( ! [X1] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X1),s('type.rat.rat',X1))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X1),s('type.rat.rat',X1))))))) | s('type.rat.rat',X1) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | ($spl81 | $spl90)),
  inference(forward_demodulation,[],[f8901,f13036])).
fof(f27093,plain,(
  $false | ($spl47 | $spl81 | $spl116 | $spl118)),
  inference(global_subsumption,[],[f26650,f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1440,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13155,f13085,f13165,f13171,f13142,f13186,f13248,f13249,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f5012,f13548,f13553,f7150,f7707,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037,f13038,f13039,f13040,f13042,f13043,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13070,f13071,f13072,f13074,f13077,f13079,f13080,f13084,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13108,f13109,f13112,f13113,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13138,f13139,f13140,f13141,f13143,f13144,f13145,f13148,f13149,f13150,f13151,f26764,f13156,f13157,f13158,f13159,f13160,f26747,f13167,f27010,f13270,f27086])).
fof(f26650,plain,(
  ( ! [X134,X135] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X135),s('type.rat.rat',X135))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X134),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X135),s('type.rat.rat',X134))))) | s('type.rat.rat',X134) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | ($spl81 | $spl116)),
  inference(forward_demodulation,[],[f14370,f14378])).
fof(f27092,plain,(
  $false | ($spl47 | $spl81 | $spl116 | $spl118)),
  inference(global_subsumption,[],[f26652,f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1440,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13155,f13085,f13165,f13171,f13142,f13186,f13248,f13249,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f5012,f13548,f13553,f7150,f7707,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037,f13038,f13039,f13040,f13042,f13043,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13070,f13071,f13072,f13074,f13077,f13079,f13080,f13084,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13108,f13109,f13112,f13113,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13138,f13139,f13140,f13141,f13143,f13144,f13145,f13148,f13149,f13150,f13151,f26764,f13156,f13157,f13158,f13159,f13160,f26747,f13167,f27010,f13270,f27086])).
fof(f26652,plain,(
  ( ! [X118,X119] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X119),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X119))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X118),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X119),s('type.rat.rat',X118))))) | s('type.rat.rat',X118) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | ($spl81 | $spl116)),
  inference(forward_demodulation,[],[f14364,f14378])).
fof(f27091,plain,(
  $false | ($spl47 | $spl81 | $spl116 | $spl118)),
  inference(global_subsumption,[],[f26654,f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1440,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13155,f13085,f13165,f13171,f13142,f13186,f13248,f13249,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f5012,f13548,f13553,f7150,f7707,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037,f13038,f13039,f13040,f13042,f13043,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13070,f13071,f13072,f13074,f13077,f13079,f13080,f13084,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13108,f13109,f13112,f13113,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13138,f13139,f13140,f13141,f13143,f13144,f13145,f13148,f13149,f13150,f13151,f26764,f13156,f13157,f13158,f13159,f13160,f26747,f13167,f27010,f13270,f27086])).
fof(f26654,plain,(
  ( ! [X26,X27] : (s('type.rat.rat',X27) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X26),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X27),s('type.rat.rat',X26))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat',X26)))) ) | ($spl81 | $spl116)),
  inference(forward_demodulation,[],[f14310,f14378])).
fof(f27090,plain,(
  $false | ($spl47 | $spl81 | $spl116 | $spl118)),
  inference(global_subsumption,[],[f26656,f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1440,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13155,f13085,f13165,f13171,f13142,f13186,f13248,f13249,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f5012,f13548,f13553,f7150,f7707,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037,f13038,f13039,f13040,f13042,f13043,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13070,f13071,f13072,f13074,f13077,f13079,f13080,f13084,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13108,f13109,f13112,f13113,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13138,f13139,f13140,f13141,f13143,f13144,f13145,f13148,f13149,f13150,f13151,f26764,f13156,f13157,f13158,f13159,f13160,f26747,f13167,f27010,f13270,f27086])).
fof(f26656,plain,(
  ( ! [X12,X11] : (s('type.rat.rat',X12) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X12),s('type.rat.rat',X11))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12)))))) ) | ($spl81 | $spl116)),
  inference(forward_demodulation,[],[f14305,f14378])).
fof(f27089,plain,(
  $false | ($spl47 | $spl81 | $spl116 | $spl118)),
  inference(global_subsumption,[],[f27088,f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1440,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13155,f13085,f13165,f13171,f13142,f13186,f13248,f13249,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f5012,f13548,f13553,f7150,f7707,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037,f13038,f13039,f13040,f13042,f13043,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13070,f13071,f13072,f13074,f13077,f13079,f13080,f13084,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13108,f13109,f13112,f13113,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13138,f13139,f13140,f13141,f13143,f13144,f13145,f13148,f13149,f13150,f13151,f26764,f13156,f13157,f13158,f13159,f13160,f26747,f13167,f27010,f13270,f27086])).
fof(f27088,plain,(
  ( ! [X127,X128] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X127),s('type.rat.rat',X128))) | s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X127),s('type.rat.rat',X128))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X127),s('type.rat.rat',X128)))))) ) | ($spl81 | $spl116)),
  inference(forward_demodulation,[],[f14260,f14378])).
fof(f27087,plain,(
  $false | ($spl47 | $spl81 | $spl118)),
  inference(global_subsumption,[],[f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1440,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13155,f13085,f13165,f13171,f13142,f13186,f13248,f13249,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f5012,f13548,f13553,f7150,f7707,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037,f13038,f13039,f13040,f13042,f13043,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13070,f13071,f13072,f13074,f13077,f13079,f13080,f13084,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13108,f13109,f13112,f13113,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13138,f13139,f13140,f13141,f13143,f13144,f13145,f13148,f13149,f13150,f13151,f26764,f13156,f13157,f13158,f13159,f13160,f26747,f13167,f27010,f13270,f27086])).
fof(f27085,plain,(
  $false | ($spl47 | $spl81 | $spl113 | $spl118)),
  inference(global_subsumption,[],[f13863,f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1440,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13155,f13085,f13165,f13171,f13142,f13186,f13248,f13249,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f5012,f13548,f13553,f7150,f7707,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037,f13038,f13039,f13040,f13042,f13043,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13070,f13071,f13072,f13074,f13077,f13079,f13080,f13084,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13108,f13109,f13112,f13113,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13138,f13139,f13140,f13141,f13143,f13144,f13145,f13148,f13149,f13150,f13151,f26764,f13156,f13157,f13158,f13159,f13160,f26747,f13167,f27010,f13270])).
fof(f13863,plain,(
  ( ! [X0] : (s(bool,X0) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X0)) ) | $spl113),
  inference(subsumption_resolution,[],[f13821,f288])).
fof(f13821,plain,(
  ( ! [X0] : (~p(s(bool,'T_0')) | s(bool,X0) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X0)) ) | $spl113),
  inference(superposition,[],[f13339,f674])).
fof(f27084,plain,(
  $false | ($spl47 | $spl65 | $spl81 | $spl113 | $spl118)),
  inference(global_subsumption,[],[f13819,f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1440,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13155,f13085,f13165,f13171,f13142,f13186,f13248,f13249,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f5012,f13548,f13553,f7150,f7707,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037,f13038,f13039,f13040,f13042,f13043,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13070,f13071,f13072,f13074,f13077,f13079,f13080,f13084,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13108,f13109,f13112,f13113,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13138,f13139,f13140,f13141,f13143,f13144,f13145,f13148,f13149,f13150,f13151,f26764,f13156,f13157,f13158,f13159,f13160,f26747,f13167,f27010,f13270])).
fof(f13819,plain,(
  ( ! [X0] : (sP9(f(s(bool,'T_0')),X0,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) ) | ($spl65 | $spl113)),
  inference(unit_resulting_resolution,[],[f13339,f4974])).
fof(f4974,plain,(
  ( ! [X26,X25] : (sP9(f(s(bool,'T_0')),X26,X25) | p(s(bool,X25))) ) | $spl65),
  inference(subsumption_resolution,[],[f4930,f288])).
fof(f4930,plain,(
  ( ! [X26,X25] : (~p(s(bool,'T_0')) | p(s(bool,X25)) | sP9(f(s(bool,'T_0')),X26,X25)) ) | $spl65),
  inference(superposition,[],[f480,f4109])).
fof(f4109,plain,(
  s(bool,'T_0') = s(bool,f(s(bool,'T_0'))) | $spl65),
  inference(unit_resulting_resolution,[],[f496,f4096,f735])).
fof(f27083,plain,(
  $false | ($spl47 | $spl65 | $spl81 | $spl113 | $spl118)),
  inference(global_subsumption,[],[f13818,f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1440,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13155,f13085,f13165,f13171,f13142,f13186,f13248,f13249,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f5012,f13548,f13553,f7150,f7707,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037,f13038,f13039,f13040,f13042,f13043,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13070,f13071,f13072,f13074,f13077,f13079,f13080,f13084,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13108,f13109,f13112,f13113,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13138,f13139,f13140,f13141,f13143,f13144,f13145,f13148,f13149,f13150,f13151,f26764,f13156,f13157,f13158,f13159,f13160,f26747,f13167,f27010,f13270])).
fof(f13818,plain,(
  sP1('const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),f(s(bool,'T_0'))) | ($spl65 | $spl113)),
  inference(unit_resulting_resolution,[],[f13339,f4964])).
fof(f4964,plain,(
  ( ! [X6] : (sP1(X6,f(s(bool,'T_0'))) | p(s(bool,X6))) ) | $spl65),
  inference(subsumption_resolution,[],[f4920,f288])).
fof(f4920,plain,(
  ( ! [X6] : (~p(s(bool,'T_0')) | p(s(bool,X6)) | sP1(X6,f(s(bool,'T_0')))) ) | $spl65),
  inference(superposition,[],[f406,f4109])).
fof(f27082,plain,(
  $false | ($spl47 | $spl65 | $spl81 | $spl113 | $spl118)),
  inference(global_subsumption,[],[f13817,f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1440,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13155,f13085,f13165,f13171,f13142,f13186,f13248,f13249,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f5012,f13548,f13553,f7150,f7707,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037,f13038,f13039,f13040,f13042,f13043,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13070,f13071,f13072,f13074,f13077,f13079,f13080,f13084,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13108,f13109,f13112,f13113,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13138,f13139,f13140,f13141,f13143,f13144,f13145,f13148,f13149,f13150,f13151,f26764,f13156,f13157,f13158,f13159,f13160,f26747,f13167,f27010,f13270])).
fof(f13817,plain,(
  sP1(f(s(bool,'T_0')),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | ($spl65 | $spl113)),
  inference(unit_resulting_resolution,[],[f13339,f4963])).
fof(f4963,plain,(
  ( ! [X5] : (sP1(f(s(bool,'T_0')),X5) | p(s(bool,X5))) ) | $spl65),
  inference(subsumption_resolution,[],[f4919,f288])).
fof(f4919,plain,(
  ( ! [X5] : (~p(s(bool,'T_0')) | p(s(bool,X5)) | sP1(f(s(bool,'T_0')),X5)) ) | $spl65),
  inference(superposition,[],[f403,f4109])).
fof(f27081,plain,(
  $false | ($spl40 | $spl47 | $spl81 | $spl113 | $spl118)),
  inference(global_subsumption,[],[f13814,f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1440,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13155,f13085,f13165,f13171,f13142,f13186,f13248,f13249,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f5012,f13548,f13553,f7150,f7707,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037,f13038,f13039,f13040,f13042,f13043,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13070,f13071,f13072,f13074,f13077,f13079,f13080,f13084,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13108,f13109,f13112,f13113,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13138,f13139,f13140,f13141,f13143,f13144,f13145,f13148,f13149,f13150,f13151,f26764,f13156,f13157,f13158,f13159,f13160,f26747,f13167,f27010,f13270])).
fof(f13814,plain,(
  ~sP9('T_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),'T_0') | ($spl40 | $spl113)),
  inference(unit_resulting_resolution,[],[f288,f13339,f2224])).
fof(f27080,plain,(
  $false | ($spl36 | $spl47 | $spl81 | $spl113 | $spl118)),
  inference(global_subsumption,[],[f13813,f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1440,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13155,f13085,f13165,f13171,f13142,f13186,f13248,f13249,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f5012,f13548,f13553,f7150,f7707,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037,f13038,f13039,f13040,f13042,f13043,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13070,f13071,f13072,f13074,f13077,f13079,f13080,f13084,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13108,f13109,f13112,f13113,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13138,f13139,f13140,f13141,f13143,f13144,f13145,f13148,f13149,f13150,f13151,f26764,f13156,f13157,f13158,f13159,f13160,f26747,f13167,f27010,f13270])).
fof(f13813,plain,(
  ( ! [X0] : (sP9('T_0',X0,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) ) | ($spl36 | $spl113)),
  inference(unit_resulting_resolution,[],[f13339,f2218])).
fof(f27079,plain,(
  $false | ($spl34 | $spl47 | $spl81 | $spl113 | $spl118)),
  inference(global_subsumption,[],[f13810,f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1440,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13155,f13085,f13165,f13171,f13142,f13186,f13248,f13249,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f5012,f13548,f13553,f7150,f7707,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037,f13038,f13039,f13040,f13042,f13043,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13070,f13071,f13072,f13074,f13077,f13079,f13080,f13084,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13108,f13109,f13112,f13113,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13138,f13139,f13140,f13141,f13143,f13144,f13145,f13148,f13149,f13150,f13151,f26764,f13156,f13157,f13158,f13159,f13160,f26747,f13167,f27010,f13270])).
fof(f13810,plain,(
  ~sP8('T_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),'T_0') | ($spl34 | $spl113)),
  inference(unit_resulting_resolution,[],[f288,f13339,f2215])).
fof(f27078,plain,(
  $false | ($spl32 | $spl47 | $spl81 | $spl113 | $spl118)),
  inference(global_subsumption,[],[f13807,f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1440,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13155,f13085,f13165,f13171,f13142,f13186,f13248,f13249,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f5012,f13548,f13553,f7150,f7707,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037,f13038,f13039,f13040,f13042,f13043,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13070,f13071,f13072,f13074,f13077,f13079,f13080,f13084,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13108,f13109,f13112,f13113,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13138,f13139,f13140,f13141,f13143,f13144,f13145,f13148,f13149,f13150,f13151,f26764,f13156,f13157,f13158,f13159,f13160,f26747,f13167,f27010,f13270])).
fof(f13807,plain,(
  ~sP7('T_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | ($spl32 | $spl113)),
  inference(unit_resulting_resolution,[],[f13339,f13339,f2212])).
fof(f27077,plain,(
  $false | ($spl32 | $spl47 | $spl81 | $spl113 | $spl118)),
  inference(global_subsumption,[],[f13806,f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1440,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13155,f13085,f13165,f13171,f13142,f13186,f13248,f13249,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f5012,f13548,f13553,f7150,f7707,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037,f13038,f13039,f13040,f13042,f13043,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13070,f13071,f13072,f13074,f13077,f13079,f13080,f13084,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13108,f13109,f13112,f13113,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13138,f13139,f13140,f13141,f13143,f13144,f13145,f13148,f13149,f13150,f13151,f26764,f13156,f13157,f13158,f13159,f13160,f26747,f13167,f27010,f13270])).
fof(f13806,plain,(
  ~sP7('T_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),'F_0') | ($spl32 | $spl113)),
  inference(unit_resulting_resolution,[],[f496,f13339,f2212])).
fof(f27076,plain,(
  $false | ($spl32 | $spl47 | $spl81 | $spl113 | $spl118)),
  inference(global_subsumption,[],[f13802,f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1440,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13155,f13085,f13165,f13171,f13142,f13186,f13248,f13249,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f5012,f13548,f13553,f7150,f7707,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037,f13038,f13039,f13040,f13042,f13043,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13070,f13071,f13072,f13074,f13077,f13079,f13080,f13084,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13108,f13109,f13112,f13113,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13138,f13139,f13140,f13141,f13143,f13144,f13145,f13148,f13149,f13150,f13151,f26764,f13156,f13157,f13158,f13159,f13160,f26747,f13167,f27010,f13270])).
fof(f13802,plain,(
  ~sP7('T_0','F_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | ($spl32 | $spl113)),
  inference(unit_resulting_resolution,[],[f496,f13339,f2212])).
fof(f27075,plain,(
  $false | ($spl26 | $spl47 | $spl81 | $spl113 | $spl118)),
  inference(global_subsumption,[],[f13799,f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1440,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13155,f13085,f13165,f13171,f13142,f13186,f13248,f13249,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f5012,f13548,f13553,f7150,f7707,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037,f13038,f13039,f13040,f13042,f13043,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13070,f13071,f13072,f13074,f13077,f13079,f13080,f13084,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13108,f13109,f13112,f13113,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13138,f13139,f13140,f13141,f13143,f13144,f13145,f13148,f13149,f13150,f13151,f26764,f13156,f13157,f13158,f13159,f13160,f26747,f13167,f27010,f13270])).
fof(f13799,plain,(
  ~sP6('T_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | ($spl26 | $spl113)),
  inference(unit_resulting_resolution,[],[f13339,f13339,f2203])).
fof(f27074,plain,(
  $false | ($spl26 | $spl47 | $spl81 | $spl113 | $spl118)),
  inference(global_subsumption,[],[f13798,f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1440,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13155,f13085,f13165,f13171,f13142,f13186,f13248,f13249,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f5012,f13548,f13553,f7150,f7707,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037,f13038,f13039,f13040,f13042,f13043,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13070,f13071,f13072,f13074,f13077,f13079,f13080,f13084,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13108,f13109,f13112,f13113,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13138,f13139,f13140,f13141,f13143,f13144,f13145,f13148,f13149,f13150,f13151,f26764,f13156,f13157,f13158,f13159,f13160,f26747,f13167,f27010,f13270])).
fof(f13798,plain,(
  ~sP6('T_0','F_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | ($spl26 | $spl113)),
  inference(unit_resulting_resolution,[],[f496,f13339,f2203])).
fof(f27073,plain,(
  $false | ($spl26 | $spl47 | $spl81 | $spl113 | $spl118)),
  inference(global_subsumption,[],[f13794,f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1440,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13155,f13085,f13165,f13171,f13142,f13186,f13248,f13249,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f5012,f13548,f13553,f7150,f7707,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037,f13038,f13039,f13040,f13042,f13043,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13070,f13071,f13072,f13074,f13077,f13079,f13080,f13084,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13108,f13109,f13112,f13113,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13138,f13139,f13140,f13141,f13143,f13144,f13145,f13148,f13149,f13150,f13151,f26764,f13156,f13157,f13158,f13159,f13160,f26747,f13167,f27010,f13270])).
fof(f13794,plain,(
  ~sP6('T_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),'F_0') | ($spl26 | $spl113)),
  inference(unit_resulting_resolution,[],[f496,f13339,f2203])).
fof(f27072,plain,(
  $false | ($spl24 | $spl47 | $spl81 | $spl113 | $spl118)),
  inference(global_subsumption,[],[f13791,f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1440,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13155,f13085,f13165,f13171,f13142,f13186,f13248,f13249,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f5012,f13548,f13553,f7150,f7707,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037,f13038,f13039,f13040,f13042,f13043,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13070,f13071,f13072,f13074,f13077,f13079,f13080,f13084,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13108,f13109,f13112,f13113,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13138,f13139,f13140,f13141,f13143,f13144,f13145,f13148,f13149,f13150,f13151,f26764,f13156,f13157,f13158,f13159,f13160,f26747,f13167,f27010,f13270])).
fof(f13791,plain,(
  ~sP3('T_0','T_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | ($spl24 | $spl113)),
  inference(unit_resulting_resolution,[],[f288,f13339,f2200])).
fof(f27071,plain,(
  $false | ($spl22 | $spl47 | $spl81 | $spl113 | $spl118)),
  inference(global_subsumption,[],[f13788,f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1440,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13155,f13085,f13165,f13171,f13142,f13186,f13248,f13249,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f5012,f13548,f13553,f7150,f7707,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037,f13038,f13039,f13040,f13042,f13043,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13070,f13071,f13072,f13074,f13077,f13079,f13080,f13084,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13108,f13109,f13112,f13113,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13138,f13139,f13140,f13141,f13143,f13144,f13145,f13148,f13149,f13150,f13151,f26764,f13156,f13157,f13158,f13159,f13160,f26747,f13167,f27010,f13270])).
fof(f13788,plain,(
  ~sP4('T_0','T_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | ($spl22 | $spl113)),
  inference(unit_resulting_resolution,[],[f288,f13339,f2197])).
fof(f27070,plain,(
  $false | ($spl18 | $spl47 | $spl81 | $spl113 | $spl118)),
  inference(global_subsumption,[],[f13787,f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1440,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13155,f13085,f13165,f13171,f13142,f13186,f13248,f13249,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f5012,f13548,f13553,f7150,f7707,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037,f13038,f13039,f13040,f13042,f13043,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13070,f13071,f13072,f13074,f13077,f13079,f13080,f13084,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13108,f13109,f13112,f13113,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13138,f13139,f13140,f13141,f13143,f13144,f13145,f13148,f13149,f13150,f13151,f26764,f13156,f13157,f13158,f13159,f13160,f26747,f13167,f27010,f13270])).
fof(f13787,plain,(
  ~sP5('T_0','T_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | ($spl18 | $spl113)),
  inference(unit_resulting_resolution,[],[f288,f13339,f2190])).
fof(f27069,plain,(
  $false | ($spl16 | $spl47 | $spl81 | $spl113 | $spl118)),
  inference(global_subsumption,[],[f13786,f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1440,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13155,f13085,f13165,f13171,f13142,f13186,f13248,f13249,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f5012,f13548,f13553,f7150,f7707,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037,f13038,f13039,f13040,f13042,f13043,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13070,f13071,f13072,f13074,f13077,f13079,f13080,f13084,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13108,f13109,f13112,f13113,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13138,f13139,f13140,f13141,f13143,f13144,f13145,f13148,f13149,f13150,f13151,f26764,f13156,f13157,f13158,f13159,f13160,f26747,f13167,f27010,f13270])).
fof(f13786,plain,(
  sP1('const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),'T_0') | ($spl16 | $spl113)),
  inference(unit_resulting_resolution,[],[f13339,f2187])).
fof(f27068,plain,(
  $false | ($spl12 | $spl47 | $spl81 | $spl113 | $spl118)),
  inference(global_subsumption,[],[f13785,f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1440,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13155,f13085,f13165,f13171,f13142,f13186,f13248,f13249,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f5012,f13548,f13553,f7150,f7707,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037,f13038,f13039,f13040,f13042,f13043,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13070,f13071,f13072,f13074,f13077,f13079,f13080,f13084,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13108,f13109,f13112,f13113,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13138,f13139,f13140,f13141,f13143,f13144,f13145,f13148,f13149,f13150,f13151,f26764,f13156,f13157,f13158,f13159,f13160,f26747,f13167,f27010,f13270])).
fof(f13785,plain,(
  sP1('T_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | ($spl12 | $spl113)),
  inference(unit_resulting_resolution,[],[f13339,f2183])).
fof(f27067,plain,(
  $false | ($spl47 | $spl81 | $spl113 | $spl118)),
  inference(global_subsumption,[],[f13778,f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1440,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13155,f13085,f13165,f13171,f13142,f13186,f13248,f13249,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f5012,f13548,f13553,f7150,f7707,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037,f13038,f13039,f13040,f13042,f13043,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13070,f13071,f13072,f13074,f13077,f13079,f13080,f13084,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13108,f13109,f13112,f13113,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13138,f13139,f13140,f13141,f13143,f13144,f13145,f13148,f13149,f13150,f13151,f26764,f13156,f13157,f13158,f13159,f13160,f26747,f13167,f27010,f13270])).
fof(f13778,plain,(
  ~sP0('const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | $spl113),
  inference(unit_resulting_resolution,[],[f13339,f13339,f497])).
fof(f27066,plain,(
  $false | ($spl47 | $spl81 | $spl113 | $spl118)),
  inference(global_subsumption,[],[f13777,f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1440,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13155,f13085,f13165,f13171,f13142,f13186,f13248,f13249,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f5012,f13548,f13553,f7150,f7707,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037,f13038,f13039,f13040,f13042,f13043,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13070,f13071,f13072,f13074,f13077,f13079,f13080,f13084,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13108,f13109,f13112,f13113,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13138,f13139,f13140,f13141,f13143,f13144,f13145,f13148,f13149,f13150,f13151,f26764,f13156,f13157,f13158,f13159,f13160,f26747,f13167,f27010,f13270])).
fof(f13777,plain,(
  ~sP0('F_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | $spl113),
  inference(unit_resulting_resolution,[],[f496,f13339,f497])).
fof(f27065,plain,(
  $false | ($spl47 | $spl81 | $spl113 | $spl118)),
  inference(global_subsumption,[],[f13772,f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1440,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13155,f13085,f13165,f13171,f13142,f13186,f13248,f13249,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f5012,f13548,f13553,f7150,f7707,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037,f13038,f13039,f13040,f13042,f13043,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13070,f13071,f13072,f13074,f13077,f13079,f13080,f13084,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13108,f13109,f13112,f13113,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13138,f13139,f13140,f13141,f13143,f13144,f13145,f13148,f13149,f13150,f13151,f26764,f13156,f13157,f13158,f13159,f13160,f26747,f13167,f27010,f13270])).
fof(f13772,plain,(
  ~sP0('const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),'F_0') | $spl113),
  inference(unit_resulting_resolution,[],[f496,f13339,f497])).
fof(f27064,plain,(
  $false | ($spl47 | $spl81 | $spl113 | $spl118)),
  inference(global_subsumption,[],[f13766,f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1440,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13155,f13085,f13165,f13171,f13142,f13186,f13248,f13249,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f5012,f13548,f13553,f7150,f7707,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037,f13038,f13039,f13040,f13042,f13043,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13070,f13071,f13072,f13074,f13077,f13079,f13080,f13084,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13108,f13109,f13112,f13113,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13138,f13139,f13140,f13141,f13143,f13144,f13145,f13148,f13149,f13150,f13151,f26764,f13156,f13157,f13158,f13159,f13160,f26747,f13167,f27010,f13270])).
fof(f13766,plain,(
  sP9('const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),'T_0') | $spl113),
  inference(unit_resulting_resolution,[],[f13339,f288,f13339,f479])).
fof(f27063,plain,(
  $false | ($spl47 | $spl81 | $spl113 | $spl118)),
  inference(global_subsumption,[],[f13765,f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1440,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13155,f13085,f13165,f13171,f13142,f13186,f13248,f13249,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f5012,f13548,f13553,f7150,f7707,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037,f13038,f13039,f13040,f13042,f13043,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13070,f13071,f13072,f13074,f13077,f13079,f13080,f13084,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13108,f13109,f13112,f13113,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13138,f13139,f13140,f13141,f13143,f13144,f13145,f13148,f13149,f13150,f13151,f26764,f13156,f13157,f13158,f13159,f13160,f26747,f13167,f27010,f13270])).
fof(f13765,plain,(
  sP9('const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),'F_0','T_0') | $spl113),
  inference(unit_resulting_resolution,[],[f496,f288,f13339,f479])).
fof(f27062,plain,(
  $false | ($spl47 | $spl81 | $spl113 | $spl118)),
  inference(global_subsumption,[],[f13762,f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1440,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13155,f13085,f13165,f13171,f13142,f13186,f13248,f13249,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f5012,f13548,f13553,f7150,f7707,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037,f13038,f13039,f13040,f13042,f13043,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13070,f13071,f13072,f13074,f13077,f13079,f13080,f13084,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13108,f13109,f13112,f13113,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13138,f13139,f13140,f13141,f13143,f13144,f13145,f13148,f13149,f13150,f13151,f26764,f13156,f13157,f13158,f13159,f13160,f26747,f13167,f27010,f13270])).
fof(f13762,plain,(
  sP9('F_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),'T_0') | $spl113),
  inference(unit_resulting_resolution,[],[f496,f288,f13339,f479])).
fof(f27061,plain,(
  $false | ($spl47 | $spl81 | $spl113 | $spl118)),
  inference(global_subsumption,[],[f13761,f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1440,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13155,f13085,f13165,f13171,f13142,f13186,f13248,f13249,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f5012,f13548,f13553,f7150,f7707,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037,f13038,f13039,f13040,f13042,f13043,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13070,f13071,f13072,f13074,f13077,f13079,f13080,f13084,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13108,f13109,f13112,f13113,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13138,f13139,f13140,f13141,f13143,f13144,f13145,f13148,f13149,f13150,f13151,f26764,f13156,f13157,f13158,f13159,f13160,f26747,f13167,f27010,f13270])).
fof(f13761,plain,(
  ( ! [X0,X1] : (sP8('const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),X0,X1)) ) | $spl113),
  inference(unit_resulting_resolution,[],[f13339,f478])).
fof(f27060,plain,(
  $false | ($spl47 | $spl81 | $spl113 | $spl118)),
  inference(global_subsumption,[],[f13760,f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1440,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13155,f13085,f13165,f13171,f13142,f13186,f13248,f13249,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f5012,f13548,f13553,f7150,f7707,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037,f13038,f13039,f13040,f13042,f13043,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13070,f13071,f13072,f13074,f13077,f13079,f13080,f13084,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13108,f13109,f13112,f13113,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13138,f13139,f13140,f13141,f13143,f13144,f13145,f13148,f13149,f13150,f13151,f26764,f13156,f13157,f13158,f13159,f13160,f26747,f13167,f27010,f13270])).
fof(f13760,plain,(
  ( ! [X0,X1] : (sP8(X0,X1,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) ) | $spl113),
  inference(unit_resulting_resolution,[],[f13339,f476])).
fof(f27059,plain,(
  $false | ($spl47 | $spl81 | $spl113 | $spl118)),
  inference(global_subsumption,[],[f13754,f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1440,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13155,f13085,f13165,f13171,f13142,f13186,f13248,f13249,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f5012,f13548,f13553,f7150,f7707,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037,f13038,f13039,f13040,f13042,f13043,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13070,f13071,f13072,f13074,f13077,f13079,f13080,f13084,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13108,f13109,f13112,f13113,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13138,f13139,f13140,f13141,f13143,f13144,f13145,f13148,f13149,f13150,f13151,f26764,f13156,f13157,f13158,f13159,f13160,f26747,f13167,f27010,f13270])).
fof(f13754,plain,(
  ( ! [X0] : (sP9('const.rat.rat_les_2'(s('type.rat.rat',X0),s('type.rat.rat',X0)),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),'T_0')) ) | $spl113),
  inference(unit_resulting_resolution,[],[f288,f531,f13339,f474])).
fof(f27058,plain,(
  $false | ($spl47 | $spl81 | $spl113 | $spl118)),
  inference(global_subsumption,[],[f13746,f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1440,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13155,f13085,f13165,f13171,f13142,f13186,f13248,f13249,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f5012,f13548,f13553,f7150,f7707,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037,f13038,f13039,f13040,f13042,f13043,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13070,f13071,f13072,f13074,f13077,f13079,f13080,f13084,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13108,f13109,f13112,f13113,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13138,f13139,f13140,f13141,f13143,f13144,f13145,f13148,f13149,f13150,f13151,f26764,f13156,f13157,f13158,f13159,f13160,f26747,f13167,f27010,f13270])).
fof(f13746,plain,(
  ( ! [X0] : (~sP9('const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),'T_0',X0)) ) | $spl113),
  inference(unit_resulting_resolution,[],[f288,f13339,f469])).
fof(f27057,plain,(
  $false | ($spl47 | $spl81 | $spl113 | $spl118)),
  inference(global_subsumption,[],[f13741,f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1440,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13155,f13085,f13165,f13171,f13142,f13186,f13248,f13249,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f5012,f13548,f13553,f7150,f7707,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037,f13038,f13039,f13040,f13042,f13043,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13070,f13071,f13072,f13074,f13077,f13079,f13080,f13084,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13108,f13109,f13112,f13113,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13138,f13139,f13140,f13141,f13143,f13144,f13145,f13148,f13149,f13150,f13151,f26764,f13156,f13157,f13158,f13159,f13160,f26747,f13167,f27010,f13270])).
fof(f13741,plain,(
  ( ! [X0] : (~sP9('const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),X0,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) ) | $spl113),
  inference(unit_resulting_resolution,[],[f13339,f13339,f468])).
fof(f27056,plain,(
  $false | ($spl47 | $spl81 | $spl113 | $spl118)),
  inference(global_subsumption,[],[f13740,f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1440,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13155,f13085,f13165,f13171,f13142,f13186,f13248,f13249,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f5012,f13548,f13553,f7150,f7707,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037,f13038,f13039,f13040,f13042,f13043,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13070,f13071,f13072,f13074,f13077,f13079,f13080,f13084,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13108,f13109,f13112,f13113,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13138,f13139,f13140,f13141,f13143,f13144,f13145,f13148,f13149,f13150,f13151,f26764,f13156,f13157,f13158,f13159,f13160,f26747,f13167,f27010,f13270])).
fof(f13740,plain,(
  ( ! [X0] : (~sP9('F_0',X0,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) ) | $spl113),
  inference(unit_resulting_resolution,[],[f496,f13339,f468])).
fof(f27055,plain,(
  $false | ($spl47 | $spl81 | $spl113 | $spl118)),
  inference(global_subsumption,[],[f13738,f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1440,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13155,f13085,f13165,f13171,f13142,f13186,f13248,f13249,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f5012,f13548,f13553,f7150,f7707,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037,f13038,f13039,f13040,f13042,f13043,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13070,f13071,f13072,f13074,f13077,f13079,f13080,f13084,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13108,f13109,f13112,f13113,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13138,f13139,f13140,f13141,f13143,f13144,f13145,f13148,f13149,f13150,f13151,f26764,f13156,f13157,f13158,f13159,f13160,f26747,f13167,f27010,f13270])).
fof(f13738,plain,(
  ( ! [X0] : (~sP9('const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),X0,'F_0')) ) | $spl113),
  inference(unit_resulting_resolution,[],[f496,f13339,f468])).
fof(f27054,plain,(
  $false | ($spl47 | $spl81 | $spl113 | $spl118)),
  inference(global_subsumption,[],[f13729,f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1440,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13155,f13085,f13165,f13171,f13142,f13186,f13248,f13249,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f5012,f13548,f13553,f7150,f7707,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037,f13038,f13039,f13040,f13042,f13043,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13070,f13071,f13072,f13074,f13077,f13079,f13080,f13084,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13108,f13109,f13112,f13113,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13138,f13139,f13140,f13141,f13143,f13144,f13145,f13148,f13149,f13150,f13151,f26764,f13156,f13157,f13158,f13159,f13160,f26747,f13167,f27010,f13270])).
fof(f13729,plain,(
  sP7('const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | $spl113),
  inference(unit_resulting_resolution,[],[f13339,f13339,f13339,f462])).
fof(f27053,plain,(
  $false | ($spl47 | $spl81 | $spl113 | $spl118)),
  inference(global_subsumption,[],[f13728,f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1440,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13155,f13085,f13165,f13171,f13142,f13186,f13248,f13249,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f5012,f13548,f13553,f7150,f7707,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037,f13038,f13039,f13040,f13042,f13043,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13070,f13071,f13072,f13074,f13077,f13079,f13080,f13084,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13108,f13109,f13112,f13113,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13138,f13139,f13140,f13141,f13143,f13144,f13145,f13148,f13149,f13150,f13151,f26764,f13156,f13157,f13158,f13159,f13160,f26747,f13167,f27010,f13270])).
fof(f13728,plain,(
  sP7('const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),'F_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | $spl113),
  inference(unit_resulting_resolution,[],[f496,f13339,f13339,f462])).
fof(f27052,plain,(
  $false | ($spl47 | $spl81 | $spl113 | $spl118)),
  inference(global_subsumption,[],[f13727,f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1440,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13155,f13085,f13165,f13171,f13142,f13186,f13248,f13249,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f5012,f13548,f13553,f7150,f7707,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037,f13038,f13039,f13040,f13042,f13043,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13070,f13071,f13072,f13074,f13077,f13079,f13080,f13084,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13108,f13109,f13112,f13113,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13138,f13139,f13140,f13141,f13143,f13144,f13145,f13148,f13149,f13150,f13151,f26764,f13156,f13157,f13158,f13159,f13160,f26747,f13167,f27010,f13270])).
fof(f13727,plain,(
  sP7('const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),'F_0') | $spl113),
  inference(unit_resulting_resolution,[],[f13339,f496,f13339,f462])).
fof(f27051,plain,(
  $false | ($spl47 | $spl81 | $spl113 | $spl118)),
  inference(global_subsumption,[],[f13726,f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1440,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13155,f13085,f13165,f13171,f13142,f13186,f13248,f13249,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f5012,f13548,f13553,f7150,f7707,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037,f13038,f13039,f13040,f13042,f13043,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13070,f13071,f13072,f13074,f13077,f13079,f13080,f13084,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13108,f13109,f13112,f13113,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13138,f13139,f13140,f13141,f13143,f13144,f13145,f13148,f13149,f13150,f13151,f26764,f13156,f13157,f13158,f13159,f13160,f26747,f13167,f27010,f13270])).
fof(f13726,plain,(
  sP7('const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),'F_0','F_0') | $spl113),
  inference(unit_resulting_resolution,[],[f496,f496,f13339,f462])).
fof(f27050,plain,(
  $false | ($spl47 | $spl81 | $spl113 | $spl118)),
  inference(global_subsumption,[],[f13723,f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1440,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13155,f13085,f13165,f13171,f13142,f13186,f13248,f13249,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f5012,f13548,f13553,f7150,f7707,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037,f13038,f13039,f13040,f13042,f13043,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13070,f13071,f13072,f13074,f13077,f13079,f13080,f13084,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13108,f13109,f13112,f13113,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13138,f13139,f13140,f13141,f13143,f13144,f13145,f13148,f13149,f13150,f13151,f26764,f13156,f13157,f13158,f13159,f13160,f26747,f13167,f27010,f13270])).
fof(f13723,plain,(
  sP7('F_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | $spl113),
  inference(unit_resulting_resolution,[],[f496,f13339,f13339,f462])).
fof(f27049,plain,(
  $false | ($spl47 | $spl81 | $spl113 | $spl118)),
  inference(global_subsumption,[],[f13721,f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1440,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13155,f13085,f13165,f13171,f13142,f13186,f13248,f13249,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f5012,f13548,f13553,f7150,f7707,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037,f13038,f13039,f13040,f13042,f13043,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13070,f13071,f13072,f13074,f13077,f13079,f13080,f13084,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13108,f13109,f13112,f13113,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13138,f13139,f13140,f13141,f13143,f13144,f13145,f13148,f13149,f13150,f13151,f26764,f13156,f13157,f13158,f13159,f13160,f26747,f13167,f27010,f13270])).
fof(f13721,plain,(
  sP7('F_0','F_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | $spl113),
  inference(unit_resulting_resolution,[],[f496,f496,f13339,f462])).
fof(f27048,plain,(
  $false | ($spl47 | $spl81 | $spl113 | $spl118)),
  inference(global_subsumption,[],[f13716,f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1440,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13155,f13085,f13165,f13171,f13142,f13186,f13248,f13249,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f5012,f13548,f13553,f7150,f7707,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037,f13038,f13039,f13040,f13042,f13043,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13070,f13071,f13072,f13074,f13077,f13079,f13080,f13084,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13108,f13109,f13112,f13113,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13138,f13139,f13140,f13141,f13143,f13144,f13145,f13148,f13149,f13150,f13151,f26764,f13156,f13157,f13158,f13159,f13160,f26747,f13167,f27010,f13270])).
fof(f13716,plain,(
  sP7('F_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),'F_0') | $spl113),
  inference(unit_resulting_resolution,[],[f496,f496,f13339,f462])).
fof(f27047,plain,(
  $false | ($spl47 | $spl81 | $spl113 | $spl118)),
  inference(global_subsumption,[],[f13715,f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1440,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13155,f13085,f13165,f13171,f13142,f13186,f13248,f13249,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f5012,f13548,f13553,f7150,f7707,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037,f13038,f13039,f13040,f13042,f13043,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13070,f13071,f13072,f13074,f13077,f13079,f13080,f13084,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13108,f13109,f13112,f13113,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13138,f13139,f13140,f13141,f13143,f13144,f13145,f13148,f13149,f13150,f13151,f26764,f13156,f13157,f13158,f13159,f13160,f26747,f13167,f27010,f13270])).
fof(f13715,plain,(
  ( ! [X0,X1] : (sP6('const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),X0,X1)) ) | $spl113),
  inference(unit_resulting_resolution,[],[f13339,f461])).
fof(f27046,plain,(
  $false | ($spl47 | $spl81 | $spl113 | $spl118)),
  inference(global_subsumption,[],[f13700,f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1440,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13155,f13085,f13165,f13171,f13142,f13186,f13248,f13249,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f5012,f13548,f13553,f7150,f7707,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037,f13038,f13039,f13040,f13042,f13043,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13070,f13071,f13072,f13074,f13077,f13079,f13080,f13084,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13108,f13109,f13112,f13113,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13138,f13139,f13140,f13141,f13143,f13144,f13145,f13148,f13149,f13150,f13151,f26764,f13156,f13157,f13158,f13159,f13160,f26747,f13167,f27010,f13270])).
fof(f13700,plain,(
  ( ! [X0] : (sP7('const.rat.rat_les_2'(s('type.rat.rat',X0),s('type.rat.rat',X0)),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) ) | $spl113),
  inference(unit_resulting_resolution,[],[f13339,f529,f13339,f457])).
fof(f27045,plain,(
  $false | ($spl47 | $spl81 | $spl113 | $spl118)),
  inference(global_subsumption,[],[f13699,f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1440,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13155,f13085,f13165,f13171,f13142,f13186,f13248,f13249,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f5012,f13548,f13553,f7150,f7707,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037,f13038,f13039,f13040,f13042,f13043,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13070,f13071,f13072,f13074,f13077,f13079,f13080,f13084,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13108,f13109,f13112,f13113,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13138,f13139,f13140,f13141,f13143,f13144,f13145,f13148,f13149,f13150,f13151,f26764,f13156,f13157,f13158,f13159,f13160,f26747,f13167,f27010,f13270])).
fof(f13699,plain,(
  ( ! [X0] : (sP7('const.rat.rat_les_2'(s('type.rat.rat',X0),s('type.rat.rat',X0)),'F_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) ) | $spl113),
  inference(unit_resulting_resolution,[],[f496,f529,f13339,f457])).
fof(f27044,plain,(
  $false | ($spl47 | $spl81 | $spl113 | $spl118)),
  inference(global_subsumption,[],[f13693,f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1440,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13155,f13085,f13165,f13171,f13142,f13186,f13248,f13249,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f5012,f13548,f13553,f7150,f7707,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037,f13038,f13039,f13040,f13042,f13043,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13070,f13071,f13072,f13074,f13077,f13079,f13080,f13084,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13108,f13109,f13112,f13113,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13138,f13139,f13140,f13141,f13143,f13144,f13145,f13148,f13149,f13150,f13151,f26764,f13156,f13157,f13158,f13159,f13160,f26747,f13167,f27010,f13270])).
fof(f13693,plain,(
  ( ! [X0] : (sP7('const.rat.rat_les_2'(s('type.rat.rat',X0),s('type.rat.rat',X0)),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),'F_0')) ) | $spl113),
  inference(unit_resulting_resolution,[],[f496,f529,f13339,f457])).
fof(f27043,plain,(
  $false | ($spl47 | $spl81 | $spl113 | $spl118)),
  inference(global_subsumption,[],[f13680,f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1440,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13155,f13085,f13165,f13171,f13142,f13186,f13248,f13249,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f5012,f13548,f13553,f7150,f7707,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037,f13038,f13039,f13040,f13042,f13043,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13070,f13071,f13072,f13074,f13077,f13079,f13080,f13084,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13108,f13109,f13112,f13113,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13138,f13139,f13140,f13141,f13143,f13144,f13145,f13148,f13149,f13150,f13151,f26764,f13156,f13157,f13158,f13159,f13160,f26747,f13167,f27010,f13270])).
fof(f13680,plain,(
  ( ! [X0] : (~sP7('const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),'T_0',X0)) ) | $spl113),
  inference(unit_resulting_resolution,[],[f288,f13339,f452])).
fof(f27042,plain,(
  $false | ($spl47 | $spl81 | $spl113 | $spl118)),
  inference(global_subsumption,[],[f13679,f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1440,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13155,f13085,f13165,f13171,f13142,f13186,f13248,f13249,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f5012,f13548,f13553,f7150,f7707,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037,f13038,f13039,f13040,f13042,f13043,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13070,f13071,f13072,f13074,f13077,f13079,f13080,f13084,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13108,f13109,f13112,f13113,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13138,f13139,f13140,f13141,f13143,f13144,f13145,f13148,f13149,f13150,f13151,f26764,f13156,f13157,f13158,f13159,f13160,f26747,f13167,f27010,f13270])).
fof(f13679,plain,(
  ( ! [X0] : (~sP7('const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),X0,'T_0')) ) | $spl113),
  inference(unit_resulting_resolution,[],[f288,f13339,f451])).
fof(f27041,plain,(
  $false | ($spl47 | $spl81 | $spl113 | $spl118)),
  inference(global_subsumption,[],[f13677,f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1440,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13155,f13085,f13165,f13171,f13142,f13186,f13248,f13249,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f5012,f13548,f13553,f7150,f7707,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037,f13038,f13039,f13040,f13042,f13043,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13070,f13071,f13072,f13074,f13077,f13079,f13080,f13084,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13108,f13109,f13112,f13113,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13138,f13139,f13140,f13141,f13143,f13144,f13145,f13148,f13149,f13150,f13151,f26764,f13156,f13157,f13158,f13159,f13160,f26747,f13167,f27010,f13270])).
fof(f13677,plain,(
  ~sP5('const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),'T_0','const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | $spl113),
  inference(unit_resulting_resolution,[],[f536,f13339,f450])).
fof(f27040,plain,(
  $false | ($spl47 | $spl65 | $spl81 | $spl113 | $spl118)),
  inference(global_subsumption,[],[f13676,f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1440,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13155,f13085,f13165,f13171,f13142,f13186,f13248,f13249,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f5012,f13548,f13553,f7150,f7707,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037,f13038,f13039,f13040,f13042,f13043,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13070,f13071,f13072,f13074,f13077,f13079,f13080,f13084,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13108,f13109,f13112,f13113,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13138,f13139,f13140,f13141,f13143,f13144,f13145,f13148,f13149,f13150,f13151,f26764,f13156,f13157,f13158,f13159,f13160,f26747,f13167,f27010,f13270])).
fof(f13676,plain,(
  ~sP5('const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),'T_0',f(s(bool,'T_0'))) | ($spl65 | $spl113)),
  inference(unit_resulting_resolution,[],[f4109,f13339,f450])).
fof(f27039,plain,(
  $false | ($spl47 | $spl81 | $spl113 | $spl118)),
  inference(global_subsumption,[],[f13674,f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1440,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13155,f13085,f13165,f13171,f13142,f13186,f13248,f13249,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f5012,f13548,f13553,f7150,f7707,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037,f13038,f13039,f13040,f13042,f13043,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13070,f13071,f13072,f13074,f13077,f13079,f13080,f13084,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13108,f13109,f13112,f13113,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13138,f13139,f13140,f13141,f13143,f13144,f13145,f13148,f13149,f13150,f13151,f26764,f13156,f13157,f13158,f13159,f13160,f26747,f13167,f27010,f13270])).
fof(f13674,plain,(
  ~sP5('const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),'T_0') | $spl113),
  inference(unit_resulting_resolution,[],[f536,f13339,f450])).
fof(f27038,plain,(
  $false | ($spl47 | $spl65 | $spl81 | $spl113 | $spl118)),
  inference(global_subsumption,[],[f13673,f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1440,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13155,f13085,f13165,f13171,f13142,f13186,f13248,f13249,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f5012,f13548,f13553,f7150,f7707,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037,f13038,f13039,f13040,f13042,f13043,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13070,f13071,f13072,f13074,f13077,f13079,f13080,f13084,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13108,f13109,f13112,f13113,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13138,f13139,f13140,f13141,f13143,f13144,f13145,f13148,f13149,f13150,f13151,f26764,f13156,f13157,f13158,f13159,f13160,f26747,f13167,f27010,f13270])).
fof(f13673,plain,(
  ~sP5('const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),f(s(bool,'T_0')),'T_0') | ($spl65 | $spl113)),
  inference(unit_resulting_resolution,[],[f4109,f13339,f450])).
fof(f27037,plain,(
  $false | ($spl47 | $spl81 | $spl113 | $spl118)),
  inference(global_subsumption,[],[f13671,f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1440,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13155,f13085,f13165,f13171,f13142,f13186,f13248,f13249,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f5012,f13548,f13553,f7150,f7707,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037,f13038,f13039,f13040,f13042,f13043,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13070,f13071,f13072,f13074,f13077,f13079,f13080,f13084,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13108,f13109,f13112,f13113,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13138,f13139,f13140,f13141,f13143,f13144,f13145,f13148,f13149,f13150,f13151,f26764,f13156,f13157,f13158,f13159,f13160,f26747,f13167,f27010,f13270])).
fof(f13671,plain,(
  ( ! [X0] : (sP5('const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),'T_0','const.rat.rat_les_2'(s('type.rat.rat',X0),s('type.rat.rat',X0)))) ) | $spl113),
  inference(unit_resulting_resolution,[],[f533,f13339,f447])).
fof(f27036,plain,(
  $false | ($spl47 | $spl81 | $spl113 | $spl118)),
  inference(global_subsumption,[],[f13670,f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1440,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13155,f13085,f13165,f13171,f13142,f13186,f13248,f13249,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f5012,f13548,f13553,f7150,f7707,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037,f13038,f13039,f13040,f13042,f13043,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13070,f13071,f13072,f13074,f13077,f13079,f13080,f13084,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13108,f13109,f13112,f13113,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13138,f13139,f13140,f13141,f13143,f13144,f13145,f13148,f13149,f13150,f13151,f26764,f13156,f13157,f13158,f13159,f13160,f26747,f13167,f27010,f13270])).
fof(f13670,plain,(
  sP5('const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),'T_0','F_0') | $spl113),
  inference(unit_resulting_resolution,[],[f532,f13339,f447])).
fof(f27035,plain,(
  $false | ($spl47 | $spl81 | $spl113 | $spl118)),
  inference(global_subsumption,[],[f13668,f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1440,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13155,f13085,f13165,f13171,f13142,f13186,f13248,f13249,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f5012,f13548,f13553,f7150,f7707,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037,f13038,f13039,f13040,f13042,f13043,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13070,f13071,f13072,f13074,f13077,f13079,f13080,f13084,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13108,f13109,f13112,f13113,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13138,f13139,f13140,f13141,f13143,f13144,f13145,f13148,f13149,f13150,f13151,f26764,f13156,f13157,f13158,f13159,f13160,f26747,f13167,f27010,f13270])).
fof(f13668,plain,(
  ( ! [X0] : (sP5('const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),'const.rat.rat_les_2'(s('type.rat.rat',X0),s('type.rat.rat',X0)),'T_0')) ) | $spl113),
  inference(unit_resulting_resolution,[],[f533,f13339,f447])).
fof(f27034,plain,(
  $false | ($spl47 | $spl81 | $spl113 | $spl118)),
  inference(global_subsumption,[],[f13667,f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1440,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13155,f13085,f13165,f13171,f13142,f13186,f13248,f13249,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f5012,f13548,f13553,f7150,f7707,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037,f13038,f13039,f13040,f13042,f13043,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13070,f13071,f13072,f13074,f13077,f13079,f13080,f13084,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13108,f13109,f13112,f13113,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13138,f13139,f13140,f13141,f13143,f13144,f13145,f13148,f13149,f13150,f13151,f26764,f13156,f13157,f13158,f13159,f13160,f26747,f13167,f27010,f13270])).
fof(f13667,plain,(
  sP5('const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),'F_0','T_0') | $spl113),
  inference(unit_resulting_resolution,[],[f532,f13339,f447])).
fof(f27033,plain,(
  $false | ($spl47 | $spl81 | $spl113 | $spl118)),
  inference(global_subsumption,[],[f13662,f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1440,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13155,f13085,f13165,f13171,f13142,f13186,f13248,f13249,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f5012,f13548,f13553,f7150,f7707,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037,f13038,f13039,f13040,f13042,f13043,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13070,f13071,f13072,f13074,f13077,f13079,f13080,f13084,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13108,f13109,f13112,f13113,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13138,f13139,f13140,f13141,f13143,f13144,f13145,f13148,f13149,f13150,f13151,f26764,f13156,f13157,f13158,f13159,f13160,f26747,f13167,f27010,f13270])).
fof(f13662,plain,(
  ~sP2('const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | $spl113),
  inference(unit_resulting_resolution,[],[f13339,f13339,f13339,f443])).
fof(f27032,plain,(
  $false | ($spl47 | $spl81 | $spl113 | $spl118)),
  inference(global_subsumption,[],[f13661,f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1440,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13155,f13085,f13165,f13171,f13142,f13186,f13248,f13249,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f5012,f13548,f13553,f7150,f7707,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037,f13038,f13039,f13040,f13042,f13043,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13070,f13071,f13072,f13074,f13077,f13079,f13080,f13084,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13108,f13109,f13112,f13113,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13138,f13139,f13140,f13141,f13143,f13144,f13145,f13148,f13149,f13150,f13151,f26764,f13156,f13157,f13158,f13159,f13160,f26747,f13167,f27010,f13270])).
fof(f13661,plain,(
  ~sP2('F_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | $spl113),
  inference(unit_resulting_resolution,[],[f496,f13339,f13339,f443])).
fof(f27031,plain,(
  $false | ($spl47 | $spl81 | $spl113 | $spl118)),
  inference(global_subsumption,[],[f13660,f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1440,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13155,f13085,f13165,f13171,f13142,f13186,f13248,f13249,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f5012,f13548,f13553,f7150,f7707,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037,f13038,f13039,f13040,f13042,f13043,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13070,f13071,f13072,f13074,f13077,f13079,f13080,f13084,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13108,f13109,f13112,f13113,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13138,f13139,f13140,f13141,f13143,f13144,f13145,f13148,f13149,f13150,f13151,f26764,f13156,f13157,f13158,f13159,f13160,f26747,f13167,f27010,f13270])).
fof(f13660,plain,(
  ~sP2('const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),'F_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | $spl113),
  inference(unit_resulting_resolution,[],[f13339,f496,f13339,f443])).
fof(f27030,plain,(
  $false | ($spl47 | $spl81 | $spl113 | $spl118)),
  inference(global_subsumption,[],[f13659,f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1440,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13155,f13085,f13165,f13171,f13142,f13186,f13248,f13249,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f5012,f13548,f13553,f7150,f7707,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037,f13038,f13039,f13040,f13042,f13043,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13070,f13071,f13072,f13074,f13077,f13079,f13080,f13084,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13108,f13109,f13112,f13113,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13138,f13139,f13140,f13141,f13143,f13144,f13145,f13148,f13149,f13150,f13151,f26764,f13156,f13157,f13158,f13159,f13160,f26747,f13167,f27010,f13270])).
fof(f13659,plain,(
  ~sP2('F_0','F_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | $spl113),
  inference(unit_resulting_resolution,[],[f496,f496,f13339,f443])).
fof(f27029,plain,(
  $false | ($spl47 | $spl81 | $spl113 | $spl118)),
  inference(global_subsumption,[],[f13652,f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1440,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13155,f13085,f13165,f13171,f13142,f13186,f13248,f13249,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f5012,f13548,f13553,f7150,f7707,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037,f13038,f13039,f13040,f13042,f13043,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13070,f13071,f13072,f13074,f13077,f13079,f13080,f13084,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13108,f13109,f13112,f13113,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13138,f13139,f13140,f13141,f13143,f13144,f13145,f13148,f13149,f13150,f13151,f26764,f13156,f13157,f13158,f13159,f13160,f26747,f13167,f27010,f13270])).
fof(f13652,plain,(
  ~sP2('const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),'F_0') | $spl113),
  inference(unit_resulting_resolution,[],[f13339,f496,f13339,f443])).
fof(f27028,plain,(
  $false | ($spl47 | $spl81 | $spl113 | $spl118)),
  inference(global_subsumption,[],[f13651,f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1440,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13155,f13085,f13165,f13171,f13142,f13186,f13248,f13249,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f5012,f13548,f13553,f7150,f7707,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037,f13038,f13039,f13040,f13042,f13043,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13070,f13071,f13072,f13074,f13077,f13079,f13080,f13084,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13108,f13109,f13112,f13113,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13138,f13139,f13140,f13141,f13143,f13144,f13145,f13148,f13149,f13150,f13151,f26764,f13156,f13157,f13158,f13159,f13160,f26747,f13167,f27010,f13270])).
fof(f13651,plain,(
  ~sP2('F_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),'F_0') | $spl113),
  inference(unit_resulting_resolution,[],[f496,f496,f13339,f443])).
fof(f27027,plain,(
  $false | ($spl47 | $spl81 | $spl113 | $spl118)),
  inference(global_subsumption,[],[f13643,f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1440,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13155,f13085,f13165,f13171,f13142,f13186,f13248,f13249,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f5012,f13548,f13553,f7150,f7707,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037,f13038,f13039,f13040,f13042,f13043,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13070,f13071,f13072,f13074,f13077,f13079,f13080,f13084,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13108,f13109,f13112,f13113,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13138,f13139,f13140,f13141,f13143,f13144,f13145,f13148,f13149,f13150,f13151,f26764,f13156,f13157,f13158,f13159,f13160,f26747,f13167,f27010,f13270])).
fof(f13643,plain,(
  ~sP2('const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),'F_0','F_0') | $spl113),
  inference(unit_resulting_resolution,[],[f496,f496,f13339,f443])).
fof(f27026,plain,(
  $false | ($spl47 | $spl81 | $spl113 | $spl118)),
  inference(global_subsumption,[],[f13642,f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1440,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13155,f13085,f13165,f13171,f13142,f13186,f13248,f13249,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f5012,f13548,f13553,f7150,f7707,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037,f13038,f13039,f13040,f13042,f13043,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13070,f13071,f13072,f13074,f13077,f13079,f13080,f13084,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13108,f13109,f13112,f13113,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13138,f13139,f13140,f13141,f13143,f13144,f13145,f13148,f13149,f13150,f13151,f26764,f13156,f13157,f13158,f13159,f13160,f26747,f13167,f27010,f13270])).
fof(f13642,plain,(
  ( ! [X0,X1] : (sP3('const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),X0,X1)) ) | $spl113),
  inference(unit_resulting_resolution,[],[f13339,f442])).
fof(f27025,plain,(
  $false | ($spl47 | $spl81 | $spl113 | $spl118)),
  inference(global_subsumption,[],[f13641,f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1440,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13155,f13085,f13165,f13171,f13142,f13186,f13248,f13249,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f5012,f13548,f13553,f7150,f7707,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037,f13038,f13039,f13040,f13042,f13043,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13070,f13071,f13072,f13074,f13077,f13079,f13080,f13084,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13108,f13109,f13112,f13113,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13138,f13139,f13140,f13141,f13143,f13144,f13145,f13148,f13149,f13150,f13151,f26764,f13156,f13157,f13158,f13159,f13160,f26747,f13167,f27010,f13270])).
fof(f13641,plain,(
  ( ! [X0,X1] : (sP3(X0,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),X1)) ) | $spl113),
  inference(unit_resulting_resolution,[],[f13339,f441])).
fof(f27024,plain,(
  $false | ($spl47 | $spl81 | $spl113 | $spl118)),
  inference(global_subsumption,[],[f13635,f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1440,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13155,f13085,f13165,f13171,f13142,f13186,f13248,f13249,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f5012,f13548,f13553,f7150,f7707,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037,f13038,f13039,f13040,f13042,f13043,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13070,f13071,f13072,f13074,f13077,f13079,f13080,f13084,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13108,f13109,f13112,f13113,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13138,f13139,f13140,f13141,f13143,f13144,f13145,f13148,f13149,f13150,f13151,f26764,f13156,f13157,f13158,f13159,f13160,f26747,f13167,f27010,f13270])).
fof(f13635,plain,(
  ( ! [X0,X1] : (sP4('const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),X0,X1)) ) | $spl113),
  inference(unit_resulting_resolution,[],[f13339,f438])).
fof(f27023,plain,(
  $false | ($spl47 | $spl81 | $spl113 | $spl118)),
  inference(global_subsumption,[],[f13634,f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1440,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13155,f13085,f13165,f13171,f13142,f13186,f13248,f13249,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f5012,f13548,f13553,f7150,f7707,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037,f13038,f13039,f13040,f13042,f13043,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13070,f13071,f13072,f13074,f13077,f13079,f13080,f13084,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13108,f13109,f13112,f13113,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13138,f13139,f13140,f13141,f13143,f13144,f13145,f13148,f13149,f13150,f13151,f26764,f13156,f13157,f13158,f13159,f13160,f26747,f13167,f27010,f13270])).
fof(f13634,plain,(
  ( ! [X0,X1] : (sP4(X0,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),X1)) ) | $spl113),
  inference(unit_resulting_resolution,[],[f13339,f437])).
fof(f27022,plain,(
  $false | ($spl47 | $spl81 | $spl113 | $spl118)),
  inference(global_subsumption,[],[f13628,f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1440,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13155,f13085,f13165,f13171,f13142,f13186,f13248,f13249,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f5012,f13548,f13553,f7150,f7707,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037,f13038,f13039,f13040,f13042,f13043,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13070,f13071,f13072,f13074,f13077,f13079,f13080,f13084,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13108,f13109,f13112,f13113,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13138,f13139,f13140,f13141,f13143,f13144,f13145,f13148,f13149,f13150,f13151,f26764,f13156,f13157,f13158,f13159,f13160,f26747,f13167,f27010,f13270])).
fof(f13628,plain,(
  ( ! [X0] : (sP5('const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),'const.rat.rat_les_2'(s('type.rat.rat',X0),s('type.rat.rat',X0)))) ) | $spl113),
  inference(unit_resulting_resolution,[],[f513,f527,f525,f13339,f434])).
fof(f27021,plain,(
  $false | ($spl47 | $spl81 | $spl113 | $spl118)),
  inference(global_subsumption,[],[f13626,f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1440,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13155,f13085,f13165,f13171,f13142,f13186,f13248,f13249,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f5012,f13548,f13553,f7150,f7707,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037,f13038,f13039,f13040,f13042,f13043,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13070,f13071,f13072,f13074,f13077,f13079,f13080,f13084,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13108,f13109,f13112,f13113,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13138,f13139,f13140,f13141,f13143,f13144,f13145,f13148,f13149,f13150,f13151,f26764,f13156,f13157,f13158,f13159,f13160,f26747,f13167,f27010,f13270])).
fof(f13626,plain,(
  sP5('const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),'F_0') | $spl113),
  inference(unit_resulting_resolution,[],[f513,f508,f504,f13339,f434])).
fof(f27020,plain,(
  $false | ($spl47 | $spl81 | $spl113 | $spl118)),
  inference(global_subsumption,[],[f13620,f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1440,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13155,f13085,f13165,f13171,f13142,f13186,f13248,f13249,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f5012,f13548,f13553,f7150,f7707,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037,f13038,f13039,f13040,f13042,f13043,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13070,f13071,f13072,f13074,f13077,f13079,f13080,f13084,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13108,f13109,f13112,f13113,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13138,f13139,f13140,f13141,f13143,f13144,f13145,f13148,f13149,f13150,f13151,f26764,f13156,f13157,f13158,f13159,f13160,f26747,f13167,f27010,f13270])).
fof(f13620,plain,(
  ( ! [X0] : (sP5('const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),'const.rat.rat_les_2'(s('type.rat.rat',X0),s('type.rat.rat',X0)))) ) | $spl113),
  inference(unit_resulting_resolution,[],[f511,f507,f525,f13339,f433])).
fof(f27019,plain,(
  $false | ($spl47 | $spl81 | $spl113 | $spl118)),
  inference(global_subsumption,[],[f13619,f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1440,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13155,f13085,f13165,f13171,f13142,f13186,f13248,f13249,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f5012,f13548,f13553,f7150,f7707,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037,f13038,f13039,f13040,f13042,f13043,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13070,f13071,f13072,f13074,f13077,f13079,f13080,f13084,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13108,f13109,f13112,f13113,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13138,f13139,f13140,f13141,f13143,f13144,f13145,f13148,f13149,f13150,f13151,f26764,f13156,f13157,f13158,f13159,f13160,f26747,f13167,f27010,f13270])).
fof(f13619,plain,(
  ( ! [X0] : (sP5('T_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),'const.rat.rat_les_2'(s('type.rat.rat',X0),s('type.rat.rat',X0)))) ) | $spl113),
  inference(unit_resulting_resolution,[],[f510,f506,f525,f13339,f433])).
fof(f27018,plain,(
  $false | ($spl47 | $spl81 | $spl113 | $spl118)),
  inference(global_subsumption,[],[f13616,f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1440,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13155,f13085,f13165,f13171,f13142,f13186,f13248,f13249,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f5012,f13548,f13553,f7150,f7707,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037,f13038,f13039,f13040,f13042,f13043,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13070,f13071,f13072,f13074,f13077,f13079,f13080,f13084,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13108,f13109,f13112,f13113,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13138,f13139,f13140,f13141,f13143,f13144,f13145,f13148,f13149,f13150,f13151,f26764,f13156,f13157,f13158,f13159,f13160,f26747,f13167,f27010,f13270])).
fof(f13616,plain,(
  sP5('const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),'F_0') | $spl113),
  inference(unit_resulting_resolution,[],[f511,f507,f504,f13339,f433])).
fof(f27017,plain,(
  $false | ($spl47 | $spl81 | $spl113 | $spl118)),
  inference(global_subsumption,[],[f13615,f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1440,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13155,f13085,f13165,f13171,f13142,f13186,f13248,f13249,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f5012,f13548,f13553,f7150,f7707,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037,f13038,f13039,f13040,f13042,f13043,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13070,f13071,f13072,f13074,f13077,f13079,f13080,f13084,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13108,f13109,f13112,f13113,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13138,f13139,f13140,f13141,f13143,f13144,f13145,f13148,f13149,f13150,f13151,f26764,f13156,f13157,f13158,f13159,f13160,f26747,f13167,f27010,f13270])).
fof(f13615,plain,(
  sP5('T_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),'F_0') | $spl113),
  inference(unit_resulting_resolution,[],[f510,f506,f504,f13339,f433])).
fof(f27016,plain,(
  $false | ($spl47 | $spl81 | $spl113 | $spl118)),
  inference(global_subsumption,[],[f13609,f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1440,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13155,f13085,f13165,f13171,f13142,f13186,f13248,f13249,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f5012,f13548,f13553,f7150,f7707,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037,f13038,f13039,f13040,f13042,f13043,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13070,f13071,f13072,f13074,f13077,f13079,f13080,f13084,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13108,f13109,f13112,f13113,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13138,f13139,f13140,f13141,f13143,f13144,f13145,f13148,f13149,f13150,f13151,f26764,f13156,f13157,f13158,f13159,f13160,f26747,f13167,f27010,f13270])).
fof(f13609,plain,(
  ~sP1('const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | $spl113),
  inference(unit_resulting_resolution,[],[f13339,f13339,f401])).
fof(f27015,plain,(
  $false | ($spl47 | $spl81 | $spl113 | $spl118)),
  inference(global_subsumption,[],[f13608,f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1440,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13155,f13085,f13165,f13171,f13142,f13186,f13248,f13249,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f5012,f13548,f13553,f7150,f7707,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037,f13038,f13039,f13040,f13042,f13043,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13070,f13071,f13072,f13074,f13077,f13079,f13080,f13084,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13108,f13109,f13112,f13113,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13138,f13139,f13140,f13141,f13143,f13144,f13145,f13148,f13149,f13150,f13151,f26764,f13156,f13157,f13158,f13159,f13160,f26747,f13167,f27010,f13270])).
fof(f13608,plain,(
  ~sP1('F_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | $spl113),
  inference(unit_resulting_resolution,[],[f496,f13339,f401])).
fof(f27014,plain,(
  $false | ($spl47 | $spl81 | $spl113 | $spl118)),
  inference(global_subsumption,[],[f13606,f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1440,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13155,f13085,f13165,f13171,f13142,f13186,f13248,f13249,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f5012,f13548,f13553,f7150,f7707,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037,f13038,f13039,f13040,f13042,f13043,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13070,f13071,f13072,f13074,f13077,f13079,f13080,f13084,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13108,f13109,f13112,f13113,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13138,f13139,f13140,f13141,f13143,f13144,f13145,f13148,f13149,f13150,f13151,f26764,f13156,f13157,f13158,f13159,f13160,f26747,f13167,f27010,f13270])).
fof(f13606,plain,(
  ~sP1('const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),'F_0') | $spl113),
  inference(unit_resulting_resolution,[],[f496,f13339,f401])).
fof(f27013,plain,(
  $false | ($spl47 | $spl81 | $spl113 | $spl118)),
  inference(global_subsumption,[],[f13600,f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1440,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13155,f13085,f13165,f13171,f13142,f13186,f13248,f13249,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f5012,f13548,f13553,f7150,f7707,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037,f13038,f13039,f13040,f13042,f13043,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13070,f13071,f13072,f13074,f13077,f13079,f13080,f13084,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13108,f13109,f13112,f13113,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13138,f13139,f13140,f13141,f13143,f13144,f13145,f13148,f13149,f13150,f13151,f26764,f13156,f13157,f13158,f13159,f13160,f26747,f13167,f27010,f13270])).
fof(f13600,plain,(
  s(bool,'T_0') != s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | $spl113),
  inference(unit_resulting_resolution,[],[f13339,f310])).
fof(f27012,plain,(
  $false | ($spl47 | $spl81 | $spl118)),
  inference(global_subsumption,[],[f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1440,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13155,f13085,f13165,f13171,f13142,f13186,f13248,f13249,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f5012,f13548,f13553,f7150,f7707,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037,f13038,f13039,f13040,f13042,f13043,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13070,f13071,f13072,f13074,f13077,f13079,f13080,f13084,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13108,f13109,f13112,f13113,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13138,f13139,f13140,f13141,f13143,f13144,f13145,f13148,f13149,f13150,f13151,f26764,f13156,f13157,f13158,f13159,f13160,f26747,f13167,f27010,f13270])).
fof(f27011,plain,(
  $false | ($spl47 | $spl81 | $spl118)),
  inference(global_subsumption,[],[f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1440,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13155,f13085,f13165,f13171,f13142,f13186,f13248,f13249,f13270,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f5012,f13548,f13553,f7150,f7707,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037,f13038,f13039,f13040,f13042,f13043,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13070,f13071,f13072,f13074,f13077,f13079,f13080,f13084,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13108,f13109,f13112,f13113,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13138,f13139,f13140,f13141,f13143,f13144,f13145,f13148,f13149,f13150,f13151,f26764,f13156,f13157,f13158,f13159,f13160,f26747,f13167,f27010])).
fof(f27009,plain,(
  $false | ($spl47 | $spl81 | $spl118)),
  inference(global_subsumption,[],[f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1440,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13155,f13085,f13165,f13171,f13142,f13186,f13248,f13249,f13270,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f5012,f13548,f13553,f7150,f7707,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037,f13038,f13039,f13040,f13042,f13043,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13070,f13071,f13072,f13074,f13077,f13079,f13080,f13084,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13108,f13109,f13112,f13113,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13138,f13139,f13140,f13141,f13143,f13144,f13145,f13148,f13149,f13150,f13151,f26764,f13156,f13157,f13158,f13159,f13160,f26747,f13167])).
fof(f27008,plain,(
  $false | ($spl47 | $spl81 | $spl118)),
  inference(global_subsumption,[],[f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1440,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13155,f13085,f13165,f13167,f13171,f13142,f13186,f13248,f13249,f13270,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f5012,f13548,f13553,f7150,f7707,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037,f13038,f13039,f13040,f13042,f13043,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13070,f13071,f13072,f13074,f13077,f13079,f13080,f13084,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13108,f13109,f13112,f13113,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13138,f13139,f13140,f13141,f13143,f13144,f13145,f13148,f13149,f13150,f13151,f26764,f13156,f13157,f13158,f13159,f13160,f26747])).
fof(f27007,plain,(
  $false | ($spl47 | $spl81 | $spl118)),
  inference(global_subsumption,[],[f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1440,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13155,f13085,f13165,f13167,f13171,f13142,f13186,f13248,f13249,f13270,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f5012,f13548,f13553,f7150,f7707,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037,f13038,f13039,f13040,f13042,f13043,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13070,f13071,f13072,f13074,f13077,f13079,f13080,f13084,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13108,f13109,f13112,f13113,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13138,f13139,f13140,f13141,f13143,f13144,f13145,f13148,f13149,f13150,f13151,f26764,f13156,f13157,f13158,f13159,f13160])).
fof(f27006,plain,(
  $false | ($spl47 | $spl81 | $spl118)),
  inference(global_subsumption,[],[f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1440,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13155,f13160,f13085,f13165,f13167,f13171,f13142,f13186,f13248,f13249,f13270,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f5012,f13548,f13553,f7150,f7707,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037,f13038,f13039,f13040,f13042,f13043,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13070,f13071,f13072,f13074,f13077,f13079,f13080,f13084,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13108,f13109,f13112,f13113,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13138,f13139,f13140,f13141,f13143,f13144,f13145,f13148,f13149,f13150,f13151,f26764,f13156,f13157,f13158,f13159])).
fof(f27005,plain,(
  $false | ($spl47 | $spl81 | $spl118)),
  inference(global_subsumption,[],[f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1440,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13155,f13159,f13160,f13085,f13165,f13167,f13171,f13142,f13186,f13248,f13249,f13270,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f5012,f13548,f13553,f7150,f7707,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037,f13038,f13039,f13040,f13042,f13043,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13070,f13071,f13072,f13074,f13077,f13079,f13080,f13084,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13108,f13109,f13112,f13113,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13138,f13139,f13140,f13141,f13143,f13144,f13145,f13148,f13149,f13150,f13151,f26764,f13156,f13157,f13158])).
fof(f27004,plain,(
  $false | ($spl47 | $spl81 | $spl118)),
  inference(global_subsumption,[],[f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1440,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13155,f13158,f13159,f13160,f13085,f13165,f13167,f13171,f13142,f13186,f13248,f13249,f13270,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f5012,f13548,f13553,f7150,f7707,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037,f13038,f13039,f13040,f13042,f13043,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13070,f13071,f13072,f13074,f13077,f13079,f13080,f13084,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13108,f13109,f13112,f13113,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13138,f13139,f13140,f13141,f13143,f13144,f13145,f13148,f13149,f13150,f13151,f26764,f13156,f13157])).
fof(f27003,plain,(
  $false | ($spl47 | $spl81 | $spl118)),
  inference(global_subsumption,[],[f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1440,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13155,f13157,f13158,f13159,f13160,f13085,f13165,f13167,f13171,f13142,f13186,f13248,f13249,f13270,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f5012,f13548,f13553,f7150,f7707,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037,f13038,f13039,f13040,f13042,f13043,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13070,f13071,f13072,f13074,f13077,f13079,f13080,f13084,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13108,f13109,f13112,f13113,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13138,f13139,f13140,f13141,f13143,f13144,f13145,f13148,f13149,f13150,f13151,f26764,f13156])).
fof(f27002,plain,(
  $false | ($spl47 | $spl81 | $spl118)),
  inference(global_subsumption,[],[f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1440,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13155,f13156,f13157,f13158,f13159,f13160,f13085,f13165,f13167,f13171,f13142,f13186,f13248,f13249,f13270,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f5012,f13548,f13553,f7150,f7707,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037,f13038,f13039,f13040,f13042,f13043,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13070,f13071,f13072,f13074,f13077,f13079,f13080,f13084,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13108,f13109,f13112,f13113,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13138,f13139,f13140,f13141,f13143,f13144,f13145,f13148,f13149,f13150,f13151,f26764])).
fof(f27001,plain,(
  $false | ($spl47 | $spl81 | $spl118)),
  inference(global_subsumption,[],[f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1440,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13155,f13156,f13157,f13158,f13159,f13160,f13085,f13165,f13167,f13171,f13142,f13186,f13248,f13249,f13270,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f5012,f13548,f13553,f7150,f7707,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037,f13038,f13039,f13040,f13042,f13043,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13070,f13071,f13072,f13074,f13077,f13079,f13080,f13084,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13108,f13109,f13112,f13113,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13138,f13139,f13140,f13141,f13143,f13144,f13145,f13148,f13149,f13150,f13151])).
fof(f27000,plain,(
  $false | ($spl47 | $spl81 | $spl118)),
  inference(global_subsumption,[],[f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1440,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13151,f13155,f13156,f13157,f13158,f13159,f13160,f13085,f13165,f13167,f13171,f13142,f13186,f13248,f13249,f13270,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f5012,f13548,f13553,f7150,f7707,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037,f13038,f13039,f13040,f13042,f13043,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13070,f13071,f13072,f13074,f13077,f13079,f13080,f13084,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13108,f13109,f13112,f13113,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13138,f13139,f13140,f13141,f13143,f13144,f13145,f13148,f13149,f13150])).
fof(f26999,plain,(
  $false | ($spl47 | $spl81 | $spl118)),
  inference(global_subsumption,[],[f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1440,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13150,f13151,f13155,f13156,f13157,f13158,f13159,f13160,f13085,f13165,f13167,f13171,f13142,f13186,f13248,f13249,f13270,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f5012,f13548,f13553,f7150,f7707,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037,f13038,f13039,f13040,f13042,f13043,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13070,f13071,f13072,f13074,f13077,f13079,f13080,f13084,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13108,f13109,f13112,f13113,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13138,f13139,f13140,f13141,f13143,f13144,f13145,f13148,f13149])).
fof(f26998,plain,(
  $false | ($spl47 | $spl81 | $spl118)),
  inference(global_subsumption,[],[f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1440,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13149,f13150,f13151,f13155,f13156,f13157,f13158,f13159,f13160,f13085,f13165,f13167,f13171,f13142,f13186,f13248,f13249,f13270,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f5012,f13548,f13553,f7150,f7707,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037,f13038,f13039,f13040,f13042,f13043,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13070,f13071,f13072,f13074,f13077,f13079,f13080,f13084,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13108,f13109,f13112,f13113,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13138,f13139,f13140,f13141,f13143,f13144,f13145,f13148])).
fof(f26997,plain,(
  $false | ($spl47 | $spl81 | $spl94 | $spl118)),
  inference(global_subsumption,[],[f13146,f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1440,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13148,f13149,f13150,f13151,f13155,f13156,f13157,f13158,f13159,f13160,f13085,f13165,f13167,f13171,f13142,f13186,f13248,f13249,f13270,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f5012,f13548,f13553,f7150,f7707,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037,f13038,f13039,f13040,f13042,f13043,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13070,f13071,f13072,f13074,f13077,f13079,f13080,f13084,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13108,f13109,f13112,f13113,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13138,f13139,f13140,f13141,f13143,f13144,f13145])).
fof(f13146,plain,(
  ( ! [X4] : (~sP5('F_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X4),s('type.rat.rat',sK12)))),'const.rat.rat_les_2'(s('type.rat.rat',X4),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12)))))) ) | ($spl81 | $spl94)),
  inference(backward_demodulation,[],[f13036,f10730])).
fof(f26996,plain,(
  $false | ($spl47 | $spl81 | $spl118)),
  inference(global_subsumption,[],[f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1440,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13148,f13149,f13150,f13151,f13155,f13156,f13157,f13158,f13159,f13160,f13085,f13165,f13167,f13171,f13142,f13186,f13248,f13249,f13270,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f5012,f13548,f13553,f7150,f7707,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037,f13038,f13039,f13040,f13042,f13043,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13070,f13071,f13072,f13074,f13077,f13079,f13080,f13084,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13108,f13109,f13112,f13113,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13138,f13139,f13140,f13141,f13143,f13144,f13145])).
fof(f26995,plain,(
  $false | ($spl47 | $spl81 | $spl118)),
  inference(global_subsumption,[],[f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1440,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13148,f13149,f13150,f13151,f13155,f13156,f13157,f13158,f13159,f13160,f13085,f13165,f13167,f13171,f13142,f13145,f13186,f13248,f13249,f13270,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f5012,f13548,f13553,f7150,f7707,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037,f13038,f13039,f13040,f13042,f13043,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13070,f13071,f13072,f13074,f13077,f13079,f13080,f13084,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13108,f13109,f13112,f13113,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13138,f13139,f13140,f13141,f13143,f13144])).
fof(f26994,plain,(
  $false | ($spl47 | $spl81 | $spl118)),
  inference(global_subsumption,[],[f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1440,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13148,f13149,f13150,f13151,f13155,f13156,f13157,f13158,f13159,f13160,f13085,f13165,f13167,f13171,f13142,f13144,f13145,f13186,f13248,f13249,f13270,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f5012,f13548,f13553,f7150,f7707,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037,f13038,f13039,f13040,f13042,f13043,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13070,f13071,f13072,f13074,f13077,f13079,f13080,f13084,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13108,f13109,f13112,f13113,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13138,f13139,f13140,f13141,f13143])).
fof(f26993,plain,(
  $false | ($spl47 | $spl81 | $spl118)),
  inference(global_subsumption,[],[f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1440,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13148,f13149,f13150,f13151,f13155,f13156,f13157,f13158,f13159,f13160,f13085,f13165,f13167,f13171,f13142,f13143,f13144,f13145,f13186,f13248,f13249,f13270,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f5012,f13548,f13553,f7150,f7707,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037,f13038,f13039,f13040,f13042,f13043,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13070,f13071,f13072,f13074,f13077,f13079,f13080,f13084,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13108,f13109,f13112,f13113,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13138,f13139,f13140,f13141])).
fof(f26992,plain,(
  $false | ($spl47 | $spl81 | $spl118)),
  inference(global_subsumption,[],[f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1440,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13148,f13149,f13150,f13151,f13155,f13156,f13157,f13158,f13159,f13160,f13085,f13165,f13167,f13171,f13141,f13142,f13143,f13144,f13145,f13186,f13248,f13249,f13270,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f5012,f13548,f13553,f7150,f7707,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037,f13038,f13039,f13040,f13042,f13043,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13070,f13071,f13072,f13074,f13077,f13079,f13080,f13084,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13108,f13109,f13112,f13113,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13138,f13139,f13140])).
fof(f26991,plain,(
  $false | ($spl47 | $spl81 | $spl118)),
  inference(global_subsumption,[],[f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1440,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13148,f13149,f13150,f13151,f13155,f13156,f13157,f13158,f13159,f13160,f13085,f13165,f13167,f13171,f13140,f13141,f13142,f13143,f13144,f13145,f13186,f13248,f13249,f13270,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f5012,f13548,f13553,f7150,f7707,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037,f13038,f13039,f13040,f13042,f13043,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13070,f13071,f13072,f13074,f13077,f13079,f13080,f13084,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13108,f13109,f13112,f13113,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13138,f13139])).
fof(f26990,plain,(
  $false | ($spl47 | $spl81 | $spl118)),
  inference(global_subsumption,[],[f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1440,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13148,f13149,f13150,f13151,f13155,f13156,f13157,f13158,f13159,f13160,f13085,f13165,f13167,f13171,f13139,f13140,f13141,f13142,f13143,f13144,f13145,f13186,f13248,f13249,f13270,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f5012,f13548,f13553,f7150,f7707,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037,f13038,f13039,f13040,f13042,f13043,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13070,f13071,f13072,f13074,f13077,f13079,f13080,f13084,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13108,f13109,f13112,f13113,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13138])).
fof(f26989,plain,(
  $false | ($spl47 | $spl81 | $spl118)),
  inference(global_subsumption,[],[f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1440,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13148,f13149,f13150,f13151,f13155,f13156,f13157,f13158,f13159,f13160,f13085,f13165,f13167,f13171,f13138,f13139,f13140,f13141,f13142,f13143,f13144,f13145,f13186,f13248,f13249,f13270,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f5012,f13548,f13553,f7150,f7707,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037,f13038,f13039,f13040,f13042,f13043,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13070,f13071,f13072,f13074,f13077,f13079,f13080,f13084,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13108,f13109,f13112,f13113,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136])).
fof(f26988,plain,(
  $false | ($spl47 | $spl81 | $spl118)),
  inference(global_subsumption,[],[f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1440,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13148,f13149,f13150,f13151,f13155,f13156,f13157,f13158,f13159,f13160,f13085,f13165,f13167,f13136,f13171,f13138,f13139,f13140,f13141,f13142,f13143,f13144,f13145,f13186,f13248,f13249,f13270,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f5012,f13548,f13553,f7150,f7707,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037,f13038,f13039,f13040,f13042,f13043,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13070,f13071,f13072,f13074,f13077,f13079,f13080,f13084,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13108,f13109,f13112,f13113,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135])).
fof(f26987,plain,(
  $false | ($spl47 | $spl81 | $spl118)),
  inference(global_subsumption,[],[f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1440,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13148,f13149,f13150,f13151,f13155,f13156,f13157,f13158,f13159,f13160,f13085,f13165,f13167,f13135,f13136,f13171,f13138,f13139,f13140,f13141,f13142,f13143,f13144,f13145,f13186,f13248,f13249,f13270,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f5012,f13548,f13553,f7150,f7707,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037,f13038,f13039,f13040,f13042,f13043,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13070,f13071,f13072,f13074,f13077,f13079,f13080,f13084,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13108,f13109,f13112,f13113,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134])).
fof(f26986,plain,(
  $false | ($spl47 | $spl81 | $spl118)),
  inference(global_subsumption,[],[f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1440,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13148,f13149,f13150,f13151,f13155,f13156,f13157,f13158,f13159,f13160,f13085,f13165,f13167,f13134,f13135,f13136,f13171,f13138,f13139,f13140,f13141,f13142,f13143,f13144,f13145,f13186,f13248,f13249,f13270,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f5012,f13548,f13553,f7150,f7707,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037,f13038,f13039,f13040,f13042,f13043,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13070,f13071,f13072,f13074,f13077,f13079,f13080,f13084,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13108,f13109,f13112,f13113,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132])).
fof(f26985,plain,(
  $false | ($spl47 | $spl81 | $spl118)),
  inference(global_subsumption,[],[f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1440,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13148,f13149,f13150,f13151,f13155,f13156,f13157,f13158,f13159,f13160,f13085,f13165,f13167,f13132,f13134,f13135,f13136,f13171,f13138,f13139,f13140,f13141,f13142,f13143,f13144,f13145,f13186,f13248,f13249,f13270,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f5012,f13548,f13553,f7150,f7707,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037,f13038,f13039,f13040,f13042,f13043,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13070,f13071,f13072,f13074,f13077,f13079,f13080,f13084,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13108,f13109,f13112,f13113,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131])).
fof(f26984,plain,(
  $false | ($spl47 | $spl81 | $spl118)),
  inference(global_subsumption,[],[f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1440,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13148,f13149,f13150,f13151,f13155,f13156,f13157,f13158,f13159,f13160,f13085,f13165,f13167,f13131,f13132,f13134,f13135,f13136,f13171,f13138,f13139,f13140,f13141,f13142,f13143,f13144,f13145,f13186,f13248,f13249,f13270,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f5012,f13548,f13553,f7150,f7707,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037,f13038,f13039,f13040,f13042,f13043,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13070,f13071,f13072,f13074,f13077,f13079,f13080,f13084,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13108,f13109,f13112,f13113,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130])).
fof(f26983,plain,(
  $false | ($spl47 | $spl81 | $spl118)),
  inference(global_subsumption,[],[f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1440,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13148,f13149,f13150,f13151,f13155,f13156,f13157,f13158,f13159,f13160,f13085,f13165,f13167,f13130,f13131,f13132,f13134,f13135,f13136,f13171,f13138,f13139,f13140,f13141,f13142,f13143,f13144,f13145,f13186,f13248,f13249,f13270,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f5012,f13548,f13553,f7150,f7707,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037,f13038,f13039,f13040,f13042,f13043,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13070,f13071,f13072,f13074,f13077,f13079,f13080,f13084,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13108,f13109,f13112,f13113,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129])).
fof(f26982,plain,(
  $false | ($spl47 | $spl81 | $spl118)),
  inference(global_subsumption,[],[f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1440,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13148,f13149,f13150,f13151,f13155,f13156,f13157,f13158,f13159,f13160,f13085,f13165,f13167,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13171,f13138,f13139,f13140,f13141,f13142,f13143,f13144,f13145,f13186,f13248,f13249,f13270,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f5012,f13548,f13553,f7150,f7707,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037,f13038,f13039,f13040,f13042,f13043,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13070,f13071,f13072,f13074,f13077,f13079,f13080,f13084,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13108,f13109,f13112,f13113,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128])).
fof(f26981,plain,(
  $false | ($spl47 | $spl81 | $spl118)),
  inference(global_subsumption,[],[f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1440,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13148,f13149,f13150,f13151,f13155,f13156,f13157,f13158,f13159,f13160,f13085,f13165,f13167,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13171,f13138,f13139,f13140,f13141,f13142,f13143,f13144,f13145,f13186,f13248,f13249,f13270,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f5012,f13548,f13553,f7150,f7707,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037,f13038,f13039,f13040,f13042,f13043,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13070,f13071,f13072,f13074,f13077,f13079,f13080,f13084,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13108,f13109,f13112,f13113,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127])).
fof(f26980,plain,(
  $false | ($spl47 | $spl81 | $spl118)),
  inference(global_subsumption,[],[f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1440,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13148,f13149,f13150,f13151,f13155,f13156,f13157,f13158,f13159,f13160,f13085,f13165,f13167,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13171,f13138,f13139,f13140,f13141,f13142,f13143,f13144,f13145,f13186,f13248,f13249,f13270,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f5012,f13548,f13553,f7150,f7707,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037,f13038,f13039,f13040,f13042,f13043,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13070,f13071,f13072,f13074,f13077,f13079,f13080,f13084,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13108,f13109,f13112,f13113,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126])).
fof(f26979,plain,(
  $false | ($spl47 | $spl81 | $spl118)),
  inference(global_subsumption,[],[f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1440,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13148,f13149,f13150,f13151,f13155,f13156,f13157,f13158,f13159,f13160,f13085,f13165,f13167,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13171,f13138,f13139,f13140,f13141,f13142,f13143,f13144,f13145,f13186,f13248,f13249,f13270,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f5012,f13548,f13553,f7150,f7707,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037,f13038,f13039,f13040,f13042,f13043,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13070,f13071,f13072,f13074,f13077,f13079,f13080,f13084,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13108,f13109,f13112,f13113,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125])).
fof(f26978,plain,(
  $false | ($spl47 | $spl81 | $spl118)),
  inference(global_subsumption,[],[f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1440,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13148,f13149,f13150,f13151,f13155,f13156,f13157,f13158,f13159,f13160,f13085,f13165,f13167,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13171,f13138,f13139,f13140,f13141,f13142,f13143,f13144,f13145,f13186,f13248,f13249,f13270,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f5012,f13548,f13553,f7150,f7707,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037,f13038,f13039,f13040,f13042,f13043,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13070,f13071,f13072,f13074,f13077,f13079,f13080,f13084,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13108,f13109,f13112,f13113,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123])).
fof(f26977,plain,(
  $false | ($spl47 | $spl81 | $spl118)),
  inference(global_subsumption,[],[f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1440,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13148,f13149,f13150,f13151,f13155,f13156,f13157,f13158,f13159,f13160,f13085,f13165,f13167,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13171,f13138,f13139,f13140,f13141,f13142,f13143,f13144,f13145,f13186,f13248,f13249,f13270,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f5012,f13548,f13553,f7150,f7707,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037,f13038,f13039,f13040,f13042,f13043,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13070,f13071,f13072,f13074,f13077,f13079,f13080,f13084,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13108,f13109,f13112,f13113,f13115,f13117,f13118,f13119,f13120,f13121,f13122])).
fof(f26976,plain,(
  $false | ($spl47 | $spl81 | $spl118)),
  inference(global_subsumption,[],[f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1440,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13148,f13149,f13150,f13151,f13155,f13156,f13157,f13158,f13159,f13160,f13085,f13165,f13167,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13171,f13138,f13139,f13140,f13141,f13142,f13143,f13144,f13145,f13186,f13248,f13249,f13270,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f5012,f13548,f13553,f7150,f7707,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037,f13038,f13039,f13040,f13042,f13043,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13070,f13071,f13072,f13074,f13077,f13079,f13080,f13084,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13108,f13109,f13112,f13113,f13115,f13117,f13118,f13119,f13120,f13121])).
fof(f26975,plain,(
  $false | ($spl47 | $spl81 | $spl118)),
  inference(global_subsumption,[],[f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1440,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13148,f13149,f13150,f13151,f13155,f13156,f13157,f13158,f13159,f13160,f13085,f13165,f13167,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13171,f13138,f13139,f13140,f13141,f13142,f13143,f13144,f13145,f13186,f13248,f13249,f13270,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f5012,f13548,f13553,f7150,f7707,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037,f13038,f13039,f13040,f13042,f13043,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13070,f13071,f13072,f13074,f13077,f13079,f13080,f13084,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13108,f13109,f13112,f13113,f13115,f13117,f13118,f13119,f13120])).
fof(f26974,plain,(
  $false | ($spl47 | $spl81 | $spl118)),
  inference(global_subsumption,[],[f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1440,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13148,f13149,f13150,f13151,f13155,f13156,f13157,f13158,f13159,f13160,f13085,f13165,f13167,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13171,f13138,f13139,f13140,f13141,f13142,f13143,f13144,f13145,f13186,f13248,f13249,f13270,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f5012,f13548,f13553,f7150,f7707,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037,f13038,f13039,f13040,f13042,f13043,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13070,f13071,f13072,f13074,f13077,f13079,f13080,f13084,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13108,f13109,f13112,f13113,f13115,f13117,f13118,f13119])).
fof(f26973,plain,(
  $false | ($spl47 | $spl81 | $spl118)),
  inference(global_subsumption,[],[f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1440,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13148,f13149,f13150,f13151,f13155,f13156,f13157,f13158,f13159,f13160,f13085,f13165,f13167,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13171,f13138,f13139,f13140,f13141,f13142,f13143,f13144,f13145,f13186,f13248,f13249,f13270,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f5012,f13548,f13553,f7150,f7707,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037,f13038,f13039,f13040,f13042,f13043,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13070,f13071,f13072,f13074,f13077,f13079,f13080,f13084,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13108,f13109,f13112,f13113,f13115,f13117,f13118])).
fof(f26972,plain,(
  $false | ($spl47 | $spl81 | $spl118)),
  inference(global_subsumption,[],[f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1440,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13148,f13149,f13150,f13151,f13155,f13156,f13157,f13158,f13159,f13160,f13085,f13165,f13167,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13171,f13138,f13139,f13140,f13141,f13142,f13143,f13144,f13145,f13186,f13248,f13249,f13270,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f5012,f13548,f13553,f7150,f7707,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037,f13038,f13039,f13040,f13042,f13043,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13070,f13071,f13072,f13074,f13077,f13079,f13080,f13084,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13108,f13109,f13112,f13113,f13115,f13117])).
fof(f26971,plain,(
  $false | ($spl47 | $spl81 | $spl118)),
  inference(global_subsumption,[],[f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1440,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13148,f13149,f13150,f13151,f13155,f13156,f13157,f13158,f13159,f13160,f13085,f13165,f13167,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13171,f13138,f13139,f13140,f13141,f13142,f13143,f13144,f13145,f13186,f13248,f13249,f13270,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f5012,f13548,f13553,f7150,f7707,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037,f13038,f13039,f13040,f13042,f13043,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13070,f13071,f13072,f13074,f13077,f13079,f13080,f13084,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13108,f13109,f13112,f13113,f13115])).
fof(f26970,plain,(
  $false | ($spl47 | $spl81 | $spl118)),
  inference(global_subsumption,[],[f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1440,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13148,f13149,f13150,f13151,f13155,f13156,f13157,f13158,f13159,f13160,f13085,f13165,f13167,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13171,f13138,f13139,f13140,f13141,f13142,f13143,f13144,f13145,f13186,f13248,f13249,f13270,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f5012,f13548,f13553,f7150,f7707,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037,f13038,f13039,f13040,f13042,f13043,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13070,f13071,f13072,f13074,f13077,f13079,f13080,f13084,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13108,f13109,f13112,f13113])).
fof(f26969,plain,(
  $false | ($spl47 | $spl81 | $spl118)),
  inference(global_subsumption,[],[f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1440,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13148,f13149,f13150,f13151,f13155,f13156,f13157,f13158,f13159,f13160,f13085,f13165,f13113,f13167,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13171,f13138,f13139,f13140,f13141,f13142,f13143,f13144,f13145,f13186,f13248,f13249,f13270,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f5012,f13548,f13553,f7150,f7707,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037,f13038,f13039,f13040,f13042,f13043,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13070,f13071,f13072,f13074,f13077,f13079,f13080,f13084,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13108,f13109,f13112])).
fof(f26968,plain,(
  $false | ($spl47 | $spl81 | $spl118)),
  inference(global_subsumption,[],[f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1440,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13148,f13149,f13150,f13151,f13155,f13156,f13157,f13158,f13159,f13160,f13085,f13165,f13112,f13113,f13167,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13171,f13138,f13139,f13140,f13141,f13142,f13143,f13144,f13145,f13186,f13248,f13249,f13270,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f5012,f13548,f13553,f7150,f7707,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037,f13038,f13039,f13040,f13042,f13043,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13070,f13071,f13072,f13074,f13077,f13079,f13080,f13084,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13108,f13109])).
fof(f26967,plain,(
  $false | ($spl47 | $spl81 | $spl118)),
  inference(global_subsumption,[],[f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1440,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13148,f13149,f13150,f13151,f13155,f13156,f13157,f13158,f13159,f13160,f13085,f13165,f13109,f13112,f13113,f13167,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13171,f13138,f13139,f13140,f13141,f13142,f13143,f13144,f13145,f13186,f13248,f13249,f13270,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f5012,f13548,f13553,f7150,f7707,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037,f13038,f13039,f13040,f13042,f13043,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13070,f13071,f13072,f13074,f13077,f13079,f13080,f13084,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13108])).
fof(f26966,plain,(
  $false | ($spl47 | $spl81 | $spl118)),
  inference(global_subsumption,[],[f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1440,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13148,f13149,f13150,f13151,f13155,f13156,f13157,f13158,f13159,f13160,f13085,f13165,f13108,f13109,f13112,f13113,f13167,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13171,f13138,f13139,f13140,f13141,f13142,f13143,f13144,f13145,f13186,f13248,f13249,f13270,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f5012,f13548,f13553,f7150,f7707,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037,f13038,f13039,f13040,f13042,f13043,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13070,f13071,f13072,f13074,f13077,f13079,f13080,f13084,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106])).
fof(f26965,plain,(
  $false | ($spl47 | $spl81 | $spl118)),
  inference(global_subsumption,[],[f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1440,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13148,f13149,f13150,f13151,f13155,f13156,f13157,f13158,f13159,f13160,f13085,f13106,f13165,f13108,f13109,f13112,f13113,f13167,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13171,f13138,f13139,f13140,f13141,f13142,f13143,f13144,f13145,f13186,f13248,f13249,f13270,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f5012,f13548,f13553,f7150,f7707,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037,f13038,f13039,f13040,f13042,f13043,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13070,f13071,f13072,f13074,f13077,f13079,f13080,f13084,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105])).
fof(f26964,plain,(
  $false | ($spl47 | $spl81 | $spl118)),
  inference(global_subsumption,[],[f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1440,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13148,f13149,f13150,f13151,f13155,f13156,f13157,f13158,f13159,f13160,f13085,f13105,f13106,f13165,f13108,f13109,f13112,f13113,f13167,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13171,f13138,f13139,f13140,f13141,f13142,f13143,f13144,f13145,f13186,f13248,f13249,f13270,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f5012,f13548,f13553,f7150,f7707,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037,f13038,f13039,f13040,f13042,f13043,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13070,f13071,f13072,f13074,f13077,f13079,f13080,f13084,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104])).
fof(f26963,plain,(
  $false | ($spl47 | $spl81 | $spl118)),
  inference(global_subsumption,[],[f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1440,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13148,f13149,f13150,f13151,f13155,f13156,f13157,f13158,f13159,f13160,f13085,f13104,f13105,f13106,f13165,f13108,f13109,f13112,f13113,f13167,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13171,f13138,f13139,f13140,f13141,f13142,f13143,f13144,f13145,f13186,f13248,f13249,f13270,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f5012,f13548,f13553,f7150,f7707,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037,f13038,f13039,f13040,f13042,f13043,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13070,f13071,f13072,f13074,f13077,f13079,f13080,f13084,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103])).
fof(f26962,plain,(
  $false | ($spl47 | $spl81 | $spl118)),
  inference(global_subsumption,[],[f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1440,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13148,f13149,f13150,f13151,f13155,f13156,f13157,f13158,f13159,f13160,f13085,f13103,f13104,f13105,f13106,f13165,f13108,f13109,f13112,f13113,f13167,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13171,f13138,f13139,f13140,f13141,f13142,f13143,f13144,f13145,f13186,f13248,f13249,f13270,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f5012,f13548,f13553,f7150,f7707,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037,f13038,f13039,f13040,f13042,f13043,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13070,f13071,f13072,f13074,f13077,f13079,f13080,f13084,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102])).
fof(f26961,plain,(
  $false | ($spl47 | $spl81 | $spl118)),
  inference(global_subsumption,[],[f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1440,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13148,f13149,f13150,f13151,f13155,f13156,f13157,f13158,f13159,f13160,f13085,f13102,f13103,f13104,f13105,f13106,f13165,f13108,f13109,f13112,f13113,f13167,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13171,f13138,f13139,f13140,f13141,f13142,f13143,f13144,f13145,f13186,f13248,f13249,f13270,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f5012,f13548,f13553,f7150,f7707,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037,f13038,f13039,f13040,f13042,f13043,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13070,f13071,f13072,f13074,f13077,f13079,f13080,f13084,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100])).
fof(f26960,plain,(
  $false | ($spl47 | $spl81 | $spl118)),
  inference(global_subsumption,[],[f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1440,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13148,f13149,f13150,f13151,f13155,f13156,f13157,f13158,f13159,f13160,f13085,f13100,f13102,f13103,f13104,f13105,f13106,f13165,f13108,f13109,f13112,f13113,f13167,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13171,f13138,f13139,f13140,f13141,f13142,f13143,f13144,f13145,f13186,f13248,f13249,f13270,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f5012,f13548,f13553,f7150,f7707,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037,f13038,f13039,f13040,f13042,f13043,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13070,f13071,f13072,f13074,f13077,f13079,f13080,f13084,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099])).
fof(f26959,plain,(
  $false | ($spl47 | $spl81 | $spl118)),
  inference(global_subsumption,[],[f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1440,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13148,f13149,f13150,f13151,f13155,f13156,f13157,f13158,f13159,f13160,f13085,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13165,f13108,f13109,f13112,f13113,f13167,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13171,f13138,f13139,f13140,f13141,f13142,f13143,f13144,f13145,f13186,f13248,f13249,f13270,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f5012,f13548,f13553,f7150,f7707,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037,f13038,f13039,f13040,f13042,f13043,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13070,f13071,f13072,f13074,f13077,f13079,f13080,f13084,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098])).
fof(f26958,plain,(
  $false | ($spl47 | $spl81 | $spl118)),
  inference(global_subsumption,[],[f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1440,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13148,f13149,f13150,f13151,f13155,f13156,f13157,f13158,f13159,f13160,f13085,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13165,f13108,f13109,f13112,f13113,f13167,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13171,f13138,f13139,f13140,f13141,f13142,f13143,f13144,f13145,f13186,f13248,f13249,f13270,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f5012,f13548,f13553,f7150,f7707,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037,f13038,f13039,f13040,f13042,f13043,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13070,f13071,f13072,f13074,f13077,f13079,f13080,f13084,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097])).
fof(f26957,plain,(
  $false | ($spl47 | $spl81 | $spl118)),
  inference(global_subsumption,[],[f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1440,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13148,f13149,f13150,f13151,f13155,f13156,f13157,f13158,f13159,f13160,f13085,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13165,f13108,f13109,f13112,f13113,f13167,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13171,f13138,f13139,f13140,f13141,f13142,f13143,f13144,f13145,f13186,f13248,f13249,f13270,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f5012,f13548,f13553,f7150,f7707,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037,f13038,f13039,f13040,f13042,f13043,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13070,f13071,f13072,f13074,f13077,f13079,f13080,f13084,f13086,f13087,f13089,f13093,f13094,f13095,f13096])).
fof(f26956,plain,(
  $false | ($spl47 | $spl81 | $spl118)),
  inference(global_subsumption,[],[f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1440,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13148,f13149,f13150,f13151,f13155,f13156,f13157,f13158,f13159,f13160,f13085,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13165,f13108,f13109,f13112,f13113,f13167,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13171,f13138,f13139,f13140,f13141,f13142,f13143,f13144,f13145,f13186,f13248,f13249,f13270,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f5012,f13548,f13553,f7150,f7707,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037,f13038,f13039,f13040,f13042,f13043,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13070,f13071,f13072,f13074,f13077,f13079,f13080,f13084,f13086,f13087,f13089,f13093,f13094,f13095])).
fof(f26955,plain,(
  $false | ($spl47 | $spl81 | $spl118)),
  inference(global_subsumption,[],[f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1440,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13148,f13149,f13150,f13151,f13155,f13156,f13157,f13158,f13159,f13160,f13085,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13165,f13108,f13109,f13112,f13113,f13167,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13171,f13138,f13139,f13140,f13141,f13142,f13143,f13144,f13145,f13186,f13248,f13249,f13270,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f5012,f13548,f13553,f7150,f7707,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037,f13038,f13039,f13040,f13042,f13043,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13070,f13071,f13072,f13074,f13077,f13079,f13080,f13084,f13086,f13087,f13089,f13093,f13094])).
fof(f26954,plain,(
  $false | ($spl47 | $spl81 | $spl118)),
  inference(global_subsumption,[],[f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1440,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13148,f13149,f13150,f13151,f13155,f13156,f13157,f13158,f13159,f13160,f13085,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13165,f13108,f13109,f13112,f13113,f13167,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13171,f13138,f13139,f13140,f13141,f13142,f13143,f13144,f13145,f13186,f13248,f13249,f13270,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f5012,f13548,f13553,f7150,f7707,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037,f13038,f13039,f13040,f13042,f13043,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13070,f13071,f13072,f13074,f13077,f13079,f13080,f13084,f13086,f13087,f13089,f13093])).
fof(f26953,plain,(
  $false | ($spl47 | $spl81 | $spl118)),
  inference(global_subsumption,[],[f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1440,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13148,f13149,f13150,f13151,f13155,f13156,f13157,f13158,f13159,f13160,f13085,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13165,f13108,f13109,f13112,f13113,f13167,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13171,f13138,f13139,f13140,f13141,f13142,f13143,f13144,f13145,f13186,f13248,f13249,f13270,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f5012,f13548,f13553,f7150,f7707,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037,f13038,f13039,f13040,f13042,f13043,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13070,f13071,f13072,f13074,f13077,f13079,f13080,f13084,f13086,f13087,f13089])).
fof(f26952,plain,(
  $false | ($spl47 | $spl81 | $spl118)),
  inference(global_subsumption,[],[f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1440,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13148,f13149,f13150,f13151,f13155,f13156,f13157,f13158,f13159,f13160,f13085,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13165,f13108,f13109,f13112,f13113,f13167,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13171,f13138,f13139,f13140,f13141,f13142,f13143,f13144,f13145,f13186,f13248,f13249,f13270,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f5012,f13548,f13553,f7150,f7707,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037,f13038,f13039,f13040,f13042,f13043,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13070,f13071,f13072,f13074,f13077,f13079,f13080,f13084,f13086,f13087])).
fof(f26951,plain,(
  $false | ($spl47 | $spl81 | $spl118)),
  inference(global_subsumption,[],[f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1440,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13148,f13149,f13150,f13151,f13155,f13156,f13157,f13158,f13159,f13160,f13085,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13165,f13108,f13109,f13112,f13113,f13167,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13171,f13138,f13139,f13140,f13141,f13142,f13143,f13144,f13145,f13186,f13248,f13249,f13270,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f5012,f13548,f13553,f7150,f7707,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037,f13038,f13039,f13040,f13042,f13043,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13070,f13071,f13072,f13074,f13077,f13079,f13080,f13084,f13086])).
fof(f26950,plain,(
  $false | ($spl47 | $spl81 | $spl118)),
  inference(global_subsumption,[],[f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1440,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13148,f13149,f13150,f13151,f13155,f13156,f13157,f13158,f13159,f13160,f13085,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13165,f13108,f13109,f13112,f13113,f13167,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13171,f13138,f13139,f13140,f13141,f13142,f13143,f13144,f13145,f13186,f13248,f13249,f13270,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f5012,f13548,f13553,f7150,f7707,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037,f13038,f13039,f13040,f13042,f13043,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13070,f13071,f13072,f13074,f13077,f13079,f13080,f13084])).
fof(f26949,plain,(
  $false | ($spl47 | $spl81 | $spl118)),
  inference(global_subsumption,[],[f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1440,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13148,f13149,f13150,f13151,f13155,f13156,f13157,f13158,f13159,f13160,f13084,f13085,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13165,f13108,f13109,f13112,f13113,f13167,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13171,f13138,f13139,f13140,f13141,f13142,f13143,f13144,f13145,f13186,f13248,f13249,f13270,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f5012,f13548,f13553,f7150,f7707,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037,f13038,f13039,f13040,f13042,f13043,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13070,f13071,f13072,f13074,f13077,f13079,f13080])).
fof(f26948,plain,(
  $false | ($spl47 | $spl81 | $spl118)),
  inference(global_subsumption,[],[f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1440,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13148,f13149,f13150,f13151,f13155,f13156,f13157,f13080,f13158,f13159,f13160,f13084,f13085,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13165,f13108,f13109,f13112,f13113,f13167,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13171,f13138,f13139,f13140,f13141,f13142,f13143,f13144,f13145,f13186,f13248,f13249,f13270,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f5012,f13548,f13553,f7150,f7707,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037,f13038,f13039,f13040,f13042,f13043,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13070,f13071,f13072,f13074,f13077,f13079])).
fof(f26947,plain,(
  $false | ($spl47 | $spl81 | $spl118)),
  inference(global_subsumption,[],[f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1440,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13148,f13149,f13150,f13151,f13155,f13156,f13157,f13079,f13080,f13158,f13159,f13160,f13084,f13085,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13165,f13108,f13109,f13112,f13113,f13167,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13171,f13138,f13139,f13140,f13141,f13142,f13143,f13144,f13145,f13186,f13248,f13249,f13270,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f5012,f13548,f13553,f7150,f7707,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037,f13038,f13039,f13040,f13042,f13043,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13070,f13071,f13072,f13074,f13077])).
fof(f26946,plain,(
  $false | ($spl47 | $spl81 | $spl118)),
  inference(global_subsumption,[],[f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1440,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13148,f13149,f13150,f13151,f13155,f13156,f13077,f13157,f13079,f13080,f13158,f13159,f13160,f13084,f13085,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13165,f13108,f13109,f13112,f13113,f13167,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13171,f13138,f13139,f13140,f13141,f13142,f13143,f13144,f13145,f13186,f13248,f13249,f13270,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f5012,f13548,f13553,f7150,f7707,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037,f13038,f13039,f13040,f13042,f13043,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13070,f13071,f13072,f13074])).
fof(f26945,plain,(
  $false | ($spl47 | $spl81 | $spl118)),
  inference(global_subsumption,[],[f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1440,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13148,f13149,f13150,f13151,f13074,f13155,f13156,f13077,f13157,f13079,f13080,f13158,f13159,f13160,f13084,f13085,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13165,f13108,f13109,f13112,f13113,f13167,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13171,f13138,f13139,f13140,f13141,f13142,f13143,f13144,f13145,f13186,f13248,f13249,f13270,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f5012,f13548,f13553,f7150,f7707,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037,f13038,f13039,f13040,f13042,f13043,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13070,f13071,f13072])).
fof(f26944,plain,(
  $false | ($spl47 | $spl81 | $spl118)),
  inference(global_subsumption,[],[f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1440,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13148,f13149,f13150,f13072,f13151,f13074,f13155,f13156,f13077,f13157,f13079,f13080,f13158,f13159,f13160,f13084,f13085,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13165,f13108,f13109,f13112,f13113,f13167,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13171,f13138,f13139,f13140,f13141,f13142,f13143,f13144,f13145,f13186,f13248,f13249,f13270,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f5012,f13548,f13553,f7150,f7707,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037,f13038,f13039,f13040,f13042,f13043,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13070,f13071])).
fof(f26943,plain,(
  $false | ($spl47 | $spl81 | $spl118)),
  inference(global_subsumption,[],[f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1440,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13148,f13149,f13150,f13071,f13072,f13151,f13074,f13155,f13156,f13077,f13157,f13079,f13080,f13158,f13159,f13160,f13084,f13085,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13165,f13108,f13109,f13112,f13113,f13167,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13171,f13138,f13139,f13140,f13141,f13142,f13143,f13144,f13145,f13186,f13248,f13249,f13270,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f5012,f13548,f13553,f7150,f7707,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037,f13038,f13039,f13040,f13042,f13043,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13070])).
fof(f26942,plain,(
  $false | ($spl47 | $spl81 | $spl118)),
  inference(global_subsumption,[],[f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1440,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13148,f13149,f13150,f13070,f13071,f13072,f13151,f13074,f13155,f13156,f13077,f13157,f13079,f13080,f13158,f13159,f13160,f13084,f13085,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13165,f13108,f13109,f13112,f13113,f13167,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13171,f13138,f13139,f13140,f13141,f13142,f13143,f13144,f13145,f13186,f13248,f13249,f13270,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f5012,f13548,f13553,f7150,f7707,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037,f13038,f13039,f13040,f13042,f13043,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068])).
fof(f26941,plain,(
  $false | ($spl47 | $spl81 | $spl118)),
  inference(global_subsumption,[],[f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1440,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13148,f13149,f13068,f13150,f13070,f13071,f13072,f13151,f13074,f13155,f13156,f13077,f13157,f13079,f13080,f13158,f13159,f13160,f13084,f13085,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13165,f13108,f13109,f13112,f13113,f13167,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13171,f13138,f13139,f13140,f13141,f13142,f13143,f13144,f13145,f13186,f13248,f13249,f13270,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f5012,f13548,f13553,f7150,f7707,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037,f13038,f13039,f13040,f13042,f13043,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067])).
fof(f26940,plain,(
  $false | ($spl47 | $spl81 | $spl118)),
  inference(global_subsumption,[],[f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1440,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13148,f13149,f13067,f13068,f13150,f13070,f13071,f13072,f13151,f13074,f13155,f13156,f13077,f13157,f13079,f13080,f13158,f13159,f13160,f13084,f13085,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13165,f13108,f13109,f13112,f13113,f13167,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13171,f13138,f13139,f13140,f13141,f13142,f13143,f13144,f13145,f13186,f13248,f13249,f13270,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f5012,f13548,f13553,f7150,f7707,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037,f13038,f13039,f13040,f13042,f13043,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066])).
fof(f26939,plain,(
  $false | ($spl47 | $spl81 | $spl118)),
  inference(global_subsumption,[],[f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1440,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13148,f13149,f13066,f13067,f13068,f13150,f13070,f13071,f13072,f13151,f13074,f13155,f13156,f13077,f13157,f13079,f13080,f13158,f13159,f13160,f13084,f13085,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13165,f13108,f13109,f13112,f13113,f13167,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13171,f13138,f13139,f13140,f13141,f13142,f13143,f13144,f13145,f13186,f13248,f13249,f13270,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f5012,f13548,f13553,f7150,f7707,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037,f13038,f13039,f13040,f13042,f13043,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065])).
fof(f26938,plain,(
  $false | ($spl47 | $spl81 | $spl118)),
  inference(global_subsumption,[],[f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1440,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13148,f13149,f13065,f13066,f13067,f13068,f13150,f13070,f13071,f13072,f13151,f13074,f13155,f13156,f13077,f13157,f13079,f13080,f13158,f13159,f13160,f13084,f13085,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13165,f13108,f13109,f13112,f13113,f13167,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13171,f13138,f13139,f13140,f13141,f13142,f13143,f13144,f13145,f13186,f13248,f13249,f13270,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f5012,f13548,f13553,f7150,f7707,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037,f13038,f13039,f13040,f13042,f13043,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064])).
fof(f26937,plain,(
  $false | ($spl47 | $spl81 | $spl118)),
  inference(global_subsumption,[],[f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1440,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13148,f13149,f13064,f13065,f13066,f13067,f13068,f13150,f13070,f13071,f13072,f13151,f13074,f13155,f13156,f13077,f13157,f13079,f13080,f13158,f13159,f13160,f13084,f13085,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13165,f13108,f13109,f13112,f13113,f13167,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13171,f13138,f13139,f13140,f13141,f13142,f13143,f13144,f13145,f13186,f13248,f13249,f13270,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f5012,f13548,f13553,f7150,f7707,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037,f13038,f13039,f13040,f13042,f13043,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063])).
fof(f26936,plain,(
  $false | ($spl47 | $spl81 | $spl118)),
  inference(global_subsumption,[],[f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1440,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13148,f13149,f13063,f13064,f13065,f13066,f13067,f13068,f13150,f13070,f13071,f13072,f13151,f13074,f13155,f13156,f13077,f13157,f13079,f13080,f13158,f13159,f13160,f13084,f13085,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13165,f13108,f13109,f13112,f13113,f13167,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13171,f13138,f13139,f13140,f13141,f13142,f13143,f13144,f13145,f13186,f13248,f13249,f13270,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f5012,f13548,f13553,f7150,f7707,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037,f13038,f13039,f13040,f13042,f13043,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062])).
fof(f26935,plain,(
  $false | ($spl47 | $spl81 | $spl118)),
  inference(global_subsumption,[],[f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1440,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13148,f13149,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13150,f13070,f13071,f13072,f13151,f13074,f13155,f13156,f13077,f13157,f13079,f13080,f13158,f13159,f13160,f13084,f13085,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13165,f13108,f13109,f13112,f13113,f13167,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13171,f13138,f13139,f13140,f13141,f13142,f13143,f13144,f13145,f13186,f13248,f13249,f13270,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f5012,f13548,f13553,f7150,f7707,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037,f13038,f13039,f13040,f13042,f13043,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061])).
fof(f26934,plain,(
  $false | ($spl47 | $spl81 | $spl118)),
  inference(global_subsumption,[],[f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1440,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13148,f13149,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13150,f13070,f13071,f13072,f13151,f13074,f13155,f13156,f13077,f13157,f13079,f13080,f13158,f13159,f13160,f13084,f13085,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13165,f13108,f13109,f13112,f13113,f13167,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13171,f13138,f13139,f13140,f13141,f13142,f13143,f13144,f13145,f13186,f13248,f13249,f13270,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f5012,f13548,f13553,f7150,f7707,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037,f13038,f13039,f13040,f13042,f13043,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059])).
fof(f26933,plain,(
  $false | ($spl47 | $spl81 | $spl118)),
  inference(global_subsumption,[],[f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1440,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13148,f13149,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13150,f13070,f13071,f13072,f13151,f13074,f13155,f13156,f13077,f13157,f13079,f13080,f13158,f13159,f13160,f13084,f13085,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13165,f13108,f13109,f13112,f13113,f13167,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13171,f13138,f13139,f13140,f13141,f13142,f13143,f13144,f13145,f13186,f13248,f13249,f13270,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f5012,f13548,f13553,f7150,f7707,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037,f13038,f13039,f13040,f13042,f13043,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058])).
fof(f26932,plain,(
  $false | ($spl47 | $spl81 | $spl118)),
  inference(global_subsumption,[],[f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1440,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13148,f13149,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13150,f13070,f13071,f13072,f13151,f13074,f13155,f13156,f13077,f13157,f13079,f13080,f13158,f13159,f13160,f13084,f13085,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13165,f13108,f13109,f13112,f13113,f13167,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13171,f13138,f13139,f13140,f13141,f13142,f13143,f13144,f13145,f13186,f13248,f13249,f13270,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f5012,f13548,f13553,f7150,f7707,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037,f13038,f13039,f13040,f13042,f13043,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057])).
fof(f26931,plain,(
  $false | ($spl47 | $spl81 | $spl118)),
  inference(global_subsumption,[],[f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1440,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13148,f13149,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13150,f13070,f13071,f13072,f13151,f13074,f13155,f13156,f13077,f13157,f13079,f13080,f13158,f13159,f13160,f13084,f13085,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13165,f13108,f13109,f13112,f13113,f13167,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13171,f13138,f13139,f13140,f13141,f13142,f13143,f13144,f13145,f13186,f13248,f13249,f13270,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f5012,f13548,f13553,f7150,f7707,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037,f13038,f13039,f13040,f13042,f13043,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055])).
fof(f26930,plain,(
  $false | ($spl47 | $spl81 | $spl118)),
  inference(global_subsumption,[],[f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1440,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13148,f13149,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13150,f13070,f13071,f13072,f13151,f13074,f13155,f13156,f13077,f13157,f13079,f13080,f13158,f13159,f13160,f13084,f13085,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13165,f13108,f13109,f13112,f13113,f13167,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13171,f13138,f13139,f13140,f13141,f13142,f13143,f13144,f13145,f13186,f13248,f13249,f13270,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f5012,f13548,f13553,f7150,f7707,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037,f13038,f13039,f13040,f13042,f13043,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054])).
fof(f26929,plain,(
  $false | ($spl47 | $spl81 | $spl118)),
  inference(global_subsumption,[],[f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1440,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13148,f13149,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13150,f13070,f13071,f13072,f13151,f13074,f13155,f13156,f13077,f13157,f13079,f13080,f13158,f13159,f13160,f13084,f13085,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13165,f13108,f13109,f13112,f13113,f13167,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13171,f13138,f13139,f13140,f13141,f13142,f13143,f13144,f13145,f13186,f13248,f13249,f13270,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f5012,f13548,f13553,f7150,f7707,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037,f13038,f13039,f13040,f13042,f13043,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053])).
fof(f26928,plain,(
  $false | ($spl47 | $spl81 | $spl118)),
  inference(global_subsumption,[],[f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1440,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13148,f13149,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13150,f13070,f13071,f13072,f13151,f13074,f13155,f13156,f13077,f13157,f13079,f13080,f13158,f13159,f13160,f13084,f13085,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13165,f13108,f13109,f13112,f13113,f13167,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13171,f13138,f13139,f13140,f13141,f13142,f13143,f13144,f13145,f13186,f13248,f13249,f13270,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f5012,f13548,f13553,f7150,f7707,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037,f13038,f13039,f13040,f13042,f13043,f13046,f13047,f13048,f13049,f13050,f13051,f13052])).
fof(f26927,plain,(
  $false | ($spl47 | $spl81 | $spl118)),
  inference(global_subsumption,[],[f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1440,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13148,f13149,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13150,f13070,f13071,f13072,f13151,f13074,f13155,f13156,f13077,f13157,f13079,f13080,f13158,f13159,f13160,f13084,f13085,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13165,f13108,f13109,f13112,f13113,f13167,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13171,f13138,f13139,f13140,f13141,f13142,f13143,f13144,f13145,f13186,f13248,f13249,f13270,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f5012,f13548,f13553,f7150,f7707,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037,f13038,f13039,f13040,f13042,f13043,f13046,f13047,f13048,f13049,f13050,f13051])).
fof(f26926,plain,(
  $false | ($spl47 | $spl81 | $spl118)),
  inference(global_subsumption,[],[f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1440,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13148,f13149,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13150,f13070,f13071,f13072,f13151,f13074,f13155,f13156,f13077,f13157,f13079,f13080,f13158,f13159,f13160,f13084,f13085,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13165,f13108,f13109,f13112,f13113,f13167,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13171,f13138,f13139,f13140,f13141,f13142,f13143,f13144,f13145,f13186,f13248,f13249,f13270,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f5012,f13548,f13553,f7150,f7707,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037,f13038,f13039,f13040,f13042,f13043,f13046,f13047,f13048,f13049,f13050])).
fof(f26925,plain,(
  $false | ($spl47 | $spl81 | $spl118)),
  inference(global_subsumption,[],[f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1440,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13148,f13149,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13150,f13070,f13071,f13072,f13151,f13074,f13155,f13156,f13077,f13157,f13079,f13080,f13158,f13159,f13160,f13084,f13085,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13165,f13108,f13109,f13112,f13113,f13167,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13171,f13138,f13139,f13140,f13141,f13142,f13143,f13144,f13145,f13186,f13248,f13249,f13270,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f5012,f13548,f13553,f7150,f7707,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037,f13038,f13039,f13040,f13042,f13043,f13046,f13047,f13048,f13049])).
fof(f26924,plain,(
  $false | ($spl47 | $spl81 | $spl118)),
  inference(global_subsumption,[],[f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1440,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13148,f13149,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13150,f13070,f13071,f13072,f13151,f13074,f13155,f13156,f13077,f13157,f13079,f13080,f13158,f13159,f13160,f13084,f13085,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13165,f13108,f13109,f13112,f13113,f13167,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13171,f13138,f13139,f13140,f13141,f13142,f13143,f13144,f13145,f13186,f13248,f13249,f13270,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f5012,f13548,f13553,f7150,f7707,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037,f13038,f13039,f13040,f13042,f13043,f13046,f13047,f13048])).
fof(f26923,plain,(
  $false | ($spl47 | $spl81 | $spl118)),
  inference(global_subsumption,[],[f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1440,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13148,f13149,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13150,f13070,f13071,f13072,f13151,f13074,f13155,f13156,f13077,f13157,f13079,f13080,f13158,f13159,f13160,f13084,f13085,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13165,f13108,f13109,f13112,f13113,f13167,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13171,f13138,f13139,f13140,f13141,f13142,f13143,f13144,f13145,f13186,f13248,f13249,f13270,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f5012,f13548,f13553,f7150,f7707,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037,f13038,f13039,f13040,f13042,f13043,f13046,f13047])).
fof(f26922,plain,(
  $false | ($spl47 | $spl81 | $spl118)),
  inference(global_subsumption,[],[f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1440,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13148,f13149,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13150,f13070,f13071,f13072,f13151,f13074,f13155,f13156,f13077,f13157,f13079,f13080,f13158,f13159,f13160,f13084,f13085,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13165,f13108,f13109,f13112,f13113,f13167,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13171,f13138,f13139,f13140,f13141,f13142,f13143,f13144,f13145,f13186,f13248,f13249,f13270,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f5012,f13548,f13553,f7150,f7707,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037,f13038,f13039,f13040,f13042,f13043,f13046])).
fof(f26921,plain,(
  $false | ($spl47 | $spl81 | $spl118)),
  inference(global_subsumption,[],[f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1440,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13148,f13149,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13150,f13070,f13071,f13072,f13151,f13074,f13155,f13156,f13077,f13157,f13079,f13080,f13158,f13159,f13160,f13084,f13085,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13165,f13108,f13109,f13112,f13113,f13167,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13171,f13138,f13139,f13140,f13141,f13142,f13143,f13144,f13145,f13186,f13248,f13249,f13270,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f5012,f13548,f13553,f7150,f7707,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037,f13038,f13039,f13040,f13042,f13043])).
fof(f26920,plain,(
  $false | ($spl47 | $spl81 | $spl118)),
  inference(global_subsumption,[],[f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1440,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13148,f13043,f13149,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13150,f13070,f13071,f13072,f13151,f13074,f13155,f13156,f13077,f13157,f13079,f13080,f13158,f13159,f13160,f13084,f13085,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13165,f13108,f13109,f13112,f13113,f13167,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13171,f13138,f13139,f13140,f13141,f13142,f13143,f13144,f13145,f13186,f13248,f13249,f13270,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f5012,f13548,f13553,f7150,f7707,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037,f13038,f13039,f13040,f13042])).
fof(f26919,plain,(
  $false | ($spl47 | $spl81 | $spl118)),
  inference(global_subsumption,[],[f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1440,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13148,f13042,f13043,f13149,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13150,f13070,f13071,f13072,f13151,f13074,f13155,f13156,f13077,f13157,f13079,f13080,f13158,f13159,f13160,f13084,f13085,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13165,f13108,f13109,f13112,f13113,f13167,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13171,f13138,f13139,f13140,f13141,f13142,f13143,f13144,f13145,f13186,f13248,f13249,f13270,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f5012,f13548,f13553,f7150,f7707,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037,f13038,f13039,f13040])).
fof(f26918,plain,(
  $false | ($spl47 | $spl81 | $spl118)),
  inference(global_subsumption,[],[f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1440,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13040,f13148,f13042,f13043,f13149,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13150,f13070,f13071,f13072,f13151,f13074,f13155,f13156,f13077,f13157,f13079,f13080,f13158,f13159,f13160,f13084,f13085,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13165,f13108,f13109,f13112,f13113,f13167,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13171,f13138,f13139,f13140,f13141,f13142,f13143,f13144,f13145,f13186,f13248,f13249,f13270,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f5012,f13548,f13553,f7150,f7707,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037,f13038,f13039])).
fof(f26917,plain,(
  $false | ($spl47 | $spl81 | $spl118)),
  inference(global_subsumption,[],[f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1440,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13039,f13040,f13148,f13042,f13043,f13149,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13150,f13070,f13071,f13072,f13151,f13074,f13155,f13156,f13077,f13157,f13079,f13080,f13158,f13159,f13160,f13084,f13085,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13165,f13108,f13109,f13112,f13113,f13167,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13171,f13138,f13139,f13140,f13141,f13142,f13143,f13144,f13145,f13186,f13248,f13249,f13270,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f5012,f13548,f13553,f7150,f7707,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037,f13038])).
fof(f26916,plain,(
  $false | ($spl47 | $spl81 | $spl118)),
  inference(global_subsumption,[],[f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1440,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13038,f13039,f13040,f13148,f13042,f13043,f13149,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13150,f13070,f13071,f13072,f13151,f13074,f13155,f13156,f13077,f13157,f13079,f13080,f13158,f13159,f13160,f13084,f13085,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13165,f13108,f13109,f13112,f13113,f13167,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13171,f13138,f13139,f13140,f13141,f13142,f13143,f13144,f13145,f13186,f13248,f13249,f13270,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f5012,f13548,f13553,f7150,f7707,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036,f13037])).
fof(f26915,plain,(
  $false | ($spl47 | $spl81 | $spl118)),
  inference(global_subsumption,[],[f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1440,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13037,f13038,f13039,f13040,f13148,f13042,f13043,f13149,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13150,f13070,f13071,f13072,f13151,f13074,f13155,f13156,f13077,f13157,f13079,f13080,f13158,f13159,f13160,f13084,f13085,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13165,f13108,f13109,f13112,f13113,f13167,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13171,f13138,f13139,f13140,f13141,f13142,f13143,f13144,f13145,f13186,f13248,f13249,f13270,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f5012,f13548,f13553,f7150,f7707,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789,f13036])).
fof(f26914,plain,(
  $false | ($spl47 | $spl81 | $spl118 | $spl146)),
  inference(global_subsumption,[],[f14464,f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1440,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13036,f13037,f13038,f13039,f13040,f13148,f13042,f13043,f13149,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13150,f13070,f13071,f13072,f13151,f13074,f13155,f13156,f13077,f13157,f13079,f13080,f13158,f13159,f13160,f13084,f13085,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13165,f13108,f13109,f13112,f13113,f13167,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13171,f13138,f13139,f13140,f13141,f13142,f13143,f13144,f13145,f13186,f13248,f13249,f13270,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f5012,f13548,f13553,f7150,f7707,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789])).
fof(f26913,plain,(
  $false | ($spl47 | $spl81 | $spl116 | $spl118 | $spl138)),
  inference(global_subsumption,[],[f26873,f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1440,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13036,f13037,f13038,f13039,f13040,f13148,f13042,f13043,f13149,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13150,f13070,f13071,f13072,f13151,f13074,f13155,f13156,f13077,f13157,f13079,f13080,f13158,f13159,f13160,f13084,f13085,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13165,f13108,f13109,f13112,f13113,f13167,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13171,f13138,f13139,f13140,f13141,f13142,f13143,f13144,f13145,f13186,f13248,f13249,f13270,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f5012,f13548,f13553,f7150,f7707,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789])).
fof(f26873,plain,(
  ( ! [X9] : (s('type.rat.rat',X9) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X9),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12)))))) ) | ($spl116 | $spl138)),
  inference(forward_demodulation,[],[f14437,f14378])).
fof(f26912,plain,(
  $false | ($spl47 | $spl81 | $spl118 | $spl132)),
  inference(global_subsumption,[],[f26875,f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1440,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13036,f13037,f13038,f13039,f13040,f13148,f13042,f13043,f13149,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13150,f13070,f13071,f13072,f13151,f13074,f13155,f13156,f13077,f13157,f13079,f13080,f13158,f13159,f13160,f13084,f13085,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13165,f13108,f13109,f13112,f13113,f13167,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13171,f13138,f13139,f13140,f13141,f13142,f13143,f13144,f13145,f13186,f13248,f13249,f13270,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f5012,f13548,f13553,f7150,f7707,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789])).
fof(f26875,plain,(
  ( ! [X21] : (s('type.rat.rat',X21) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X21),s('type.rat.rat',X21))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X21),s('type.rat.rat',X21)))))))) ) | ($spl81 | $spl132)),
  inference(forward_demodulation,[],[f14427,f21793])).
fof(f26911,plain,(
  $false | ($spl47 | $spl81 | $spl118 | $spl130)),
  inference(global_subsumption,[],[f14417,f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1440,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13036,f13037,f13038,f13039,f13040,f13148,f13042,f13043,f13149,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13150,f13070,f13071,f13072,f13151,f13074,f13155,f13156,f13077,f13157,f13079,f13080,f13158,f13159,f13160,f13084,f13085,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13165,f13108,f13109,f13112,f13113,f13167,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13171,f13138,f13139,f13140,f13141,f13142,f13143,f13144,f13145,f13186,f13248,f13249,f13270,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f5012,f13548,f13553,f7150,f7707,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789])).
fof(f26910,plain,(
  $false | ($spl47 | $spl81 | $spl118 | $spl128)),
  inference(global_subsumption,[],[f14413,f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1440,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13036,f13037,f13038,f13039,f13040,f13148,f13042,f13043,f13149,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13150,f13070,f13071,f13072,f13151,f13074,f13155,f13156,f13077,f13157,f13079,f13080,f13158,f13159,f13160,f13084,f13085,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13165,f13108,f13109,f13112,f13113,f13167,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13171,f13138,f13139,f13140,f13141,f13142,f13143,f13144,f13145,f13186,f13248,f13249,f13270,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f5012,f13548,f13553,f7150,f7707,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789])).
fof(f26909,plain,(
  $false | ($spl47 | $spl81 | $spl118)),
  inference(global_subsumption,[],[f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1440,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13036,f13037,f13038,f13039,f13040,f13148,f13042,f13043,f13149,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13150,f13070,f13071,f13072,f13151,f13074,f13155,f13156,f13077,f13157,f13079,f13080,f13158,f13159,f13160,f13084,f13085,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13165,f13108,f13109,f13112,f13113,f13167,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13171,f13138,f13139,f13140,f13141,f13142,f13143,f13144,f13145,f13186,f13248,f13249,f13270,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f5012,f13548,f13553,f7150,f7707,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719,f4789])).
fof(f26908,plain,(
  $false | ($spl47 | $spl81 | $spl118)),
  inference(global_subsumption,[],[f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1440,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13036,f13037,f13038,f13039,f13040,f13148,f13042,f13043,f13149,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13150,f13070,f13071,f13072,f13151,f13074,f13155,f13156,f13077,f13157,f13079,f13080,f13158,f13159,f13160,f13084,f13085,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13165,f13108,f13109,f13112,f13113,f13167,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13171,f13138,f13139,f13140,f13141,f13142,f13143,f13144,f13145,f13186,f13248,f13249,f13270,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f4789,f5012,f13548,f13553,f7150,f7707,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178,f7719])).
fof(f26907,plain,(
  $false | ($spl47 | $spl81 | $spl118)),
  inference(global_subsumption,[],[f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1440,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13036,f13037,f13038,f13039,f13040,f13148,f13042,f13043,f13149,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13150,f13070,f13071,f13072,f13151,f13074,f13155,f13156,f13077,f13157,f13079,f13080,f13158,f13159,f13160,f13084,f13085,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13165,f13108,f13109,f13112,f13113,f13167,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13171,f13138,f13139,f13140,f13141,f13142,f13143,f13144,f13145,f13186,f13248,f13249,f13270,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f4789,f5012,f13548,f13553,f7150,f7707,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267,f13178])).
fof(f26906,plain,(
  $false | ($spl47 | $spl81 | $spl118)),
  inference(global_subsumption,[],[f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1440,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13036,f13037,f13038,f13039,f13040,f13148,f13042,f13043,f13149,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13150,f13070,f13071,f13072,f13151,f13074,f13155,f13156,f13077,f13157,f13079,f13080,f13158,f13159,f13160,f13084,f13085,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13165,f13108,f13109,f13112,f13113,f13167,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13171,f13138,f13139,f13140,f13141,f13142,f13143,f13144,f13145,f13186,f13248,f13249,f13270,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f4789,f5012,f13548,f13553,f7150,f7707,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287,f13267])).
fof(f26905,plain,(
  $false | ($spl47 | $spl81 | $spl118)),
  inference(global_subsumption,[],[f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1440,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13036,f13037,f13038,f13039,f13040,f13148,f13042,f13043,f13149,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13150,f13070,f13071,f13072,f13151,f13074,f13155,f13156,f13077,f13157,f13079,f13080,f13158,f13159,f13160,f13084,f13085,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13165,f13108,f13109,f13112,f13113,f13167,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13171,f13138,f13139,f13140,f13141,f13142,f13143,f13144,f13145,f13186,f13248,f13249,f13270,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f4789,f5012,f13548,f13553,f7150,f7707,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599,f287])).
fof(f26904,plain,(
  $false | ($spl47 | $spl81 | $spl118)),
  inference(global_subsumption,[],[f287,f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1440,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13036,f13037,f13038,f13039,f13040,f13148,f13042,f13043,f13149,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13150,f13070,f13071,f13072,f13151,f13074,f13155,f13156,f13077,f13157,f13079,f13080,f13158,f13159,f13160,f13084,f13085,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13165,f13108,f13109,f13112,f13113,f13167,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13171,f13138,f13139,f13140,f13141,f13142,f13143,f13144,f13145,f13186,f13248,f13249,f13270,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f4789,f5012,f13548,f13553,f7150,f7707,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620,f1599])).
fof(f26903,plain,(
  $false | ($spl47 | $spl81 | $spl118)),
  inference(global_subsumption,[],[f287,f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1440,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13036,f13037,f13038,f13039,f13040,f13148,f13042,f13043,f13149,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13150,f13070,f13071,f13072,f13151,f13074,f13155,f13156,f13077,f13157,f13079,f13080,f13158,f13159,f13160,f13084,f13085,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13165,f13108,f13109,f13112,f13113,f13167,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13171,f13138,f13139,f13140,f13141,f13142,f13143,f13144,f13145,f13186,f13248,f13249,f13270,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f4789,f5012,f13548,f13553,f7150,f7707,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648,f1620])).
fof(f26902,plain,(
  $false | ($spl47 | $spl81 | $spl118)),
  inference(global_subsumption,[],[f287,f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1440,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13036,f13037,f13038,f13039,f13040,f13148,f13042,f13043,f13149,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13150,f13070,f13071,f13072,f13151,f13074,f13155,f13156,f13077,f13157,f13079,f13080,f13158,f13159,f13160,f13084,f13085,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13165,f13108,f13109,f13112,f13113,f13167,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13171,f13138,f13139,f13140,f13141,f13142,f13143,f13144,f13145,f13186,f13248,f13249,f13270,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f4789,f5012,f13548,f13553,f7150,f7707,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673,f1648])).
fof(f26901,plain,(
  $false | ($spl47 | $spl81 | $spl118)),
  inference(global_subsumption,[],[f287,f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1440,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13036,f13037,f13038,f13039,f13040,f13148,f13042,f13043,f13149,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13150,f13070,f13071,f13072,f13151,f13074,f13155,f13156,f13077,f13157,f13079,f13080,f13158,f13159,f13160,f13084,f13085,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13165,f13108,f13109,f13112,f13113,f13167,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13171,f13138,f13139,f13140,f13141,f13142,f13143,f13144,f13145,f13186,f13248,f13249,f13270,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f4789,f5012,f13548,f13553,f7150,f7707,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454,f1673])).
fof(f26900,plain,(
  $false | ($spl47 | $spl81 | $spl118)),
  inference(global_subsumption,[],[f287,f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1440,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13036,f13037,f13038,f13039,f13040,f13148,f13042,f13043,f13149,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13150,f13070,f13071,f13072,f13151,f13074,f13155,f13156,f13077,f13157,f13079,f13080,f13158,f13159,f13160,f13084,f13085,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13165,f13108,f13109,f13112,f13113,f13167,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13171,f13138,f13139,f13140,f13141,f13142,f13143,f13144,f13145,f13186,f13248,f13249,f13270,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f4789,f5012,f13548,f13553,f7150,f7707,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453,f2454])).
fof(f26899,plain,(
  $false | ($spl47 | $spl81 | $spl118)),
  inference(global_subsumption,[],[f287,f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1440,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13036,f13037,f13038,f13039,f13040,f13148,f13042,f13043,f13149,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13150,f13070,f13071,f13072,f13151,f13074,f13155,f13156,f13077,f13157,f13079,f13080,f13158,f13159,f13160,f13084,f13085,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13165,f13108,f13109,f13112,f13113,f13167,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13171,f13138,f13139,f13140,f13141,f13142,f13143,f13144,f13145,f13186,f13248,f13249,f13270,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f4789,f5012,f13548,f13553,f7150,f7707,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864,f2453])).
fof(f26898,plain,(
  $false | ($spl47 | $spl81 | $spl118)),
  inference(global_subsumption,[],[f287,f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1440,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13036,f13037,f13038,f13039,f13040,f13148,f13042,f13043,f13149,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13150,f13070,f13071,f13072,f13151,f13074,f13155,f13156,f13077,f13157,f13079,f13080,f13158,f13159,f13160,f13084,f13085,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13165,f13108,f13109,f13112,f13113,f13167,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13171,f13138,f13139,f13140,f13141,f13142,f13143,f13144,f13145,f13186,f13248,f13249,f13270,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f4789,f5012,f13548,f13553,f7150,f7707,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867,f6864])).
fof(f26897,plain,(
  $false | ($spl47 | $spl81 | $spl118)),
  inference(global_subsumption,[],[f287,f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1440,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13036,f13037,f13038,f13039,f13040,f13148,f13042,f13043,f13149,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13150,f13070,f13071,f13072,f13151,f13074,f13155,f13156,f13077,f13157,f13079,f13080,f13158,f13159,f13160,f13084,f13085,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13165,f13108,f13109,f13112,f13113,f13167,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13171,f13138,f13139,f13140,f13141,f13142,f13143,f13144,f13145,f13186,f13248,f13249,f13270,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f4789,f5012,f13548,f13553,f7150,f7707,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942,f6867])).
fof(f26896,plain,(
  $false | ($spl47 | $spl81 | $spl113 | $spl118)),
  inference(global_subsumption,[],[f13339,f287,f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1440,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13036,f13037,f13038,f13039,f13040,f13148,f13042,f13043,f13149,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13150,f13070,f13071,f13072,f13151,f13074,f13155,f13156,f13077,f13157,f13079,f13080,f13158,f13159,f13160,f13084,f13085,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13165,f13108,f13109,f13112,f13113,f13167,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13171,f13138,f13139,f13140,f13141,f13142,f13143,f13144,f13145,f13186,f13248,f13249,f13270,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f4789,f5012,f13548,f13553,f7150,f7707,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942])).
fof(f26895,plain,(
  $false | ($spl47 | $spl81 | $spl113 | $spl118)),
  inference(global_subsumption,[],[f26894,f287,f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1440,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13036,f13037,f13038,f13039,f13040,f13148,f13042,f13043,f13149,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13150,f13070,f13071,f13072,f13151,f13074,f13155,f13156,f13077,f13157,f13079,f13080,f13158,f13159,f13160,f13084,f13085,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13165,f13108,f13109,f13112,f13113,f13167,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13171,f13138,f13139,f13140,f13141,f13142,f13143,f13144,f13145,f13186,f13248,f13249,f13270,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f4789,f5012,f13548,f13553,f7150,f7707,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942])).
fof(f26894,plain,(
  s(bool,'F_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | $spl113),
  inference(forward_demodulation,[],[f13783,f552])).
fof(f13783,plain,(
  ( ! [X0] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X0),s('type.rat.rat',X0))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) ) | $spl113),
  inference(unit_resulting_resolution,[],[f533,f13339,f735])).
fof(f26893,plain,(
  $false | ($spl47 | $spl81 | $spl113 | $spl118)),
  inference(global_subsumption,[],[f13782,f287,f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1440,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13036,f13037,f13038,f13039,f13040,f13148,f13042,f13043,f13149,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13150,f13070,f13071,f13072,f13151,f13074,f13155,f13156,f13077,f13157,f13079,f13080,f13158,f13159,f13160,f13084,f13085,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13165,f13108,f13109,f13112,f13113,f13167,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13171,f13138,f13139,f13140,f13141,f13142,f13143,f13144,f13145,f13186,f13248,f13249,f13270,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f4789,f5012,f13548,f13553,f7150,f7707,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942])).
fof(f13782,plain,(
  s(bool,'F_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | $spl113),
  inference(unit_resulting_resolution,[],[f532,f13339,f735])).
fof(f26892,plain,(
  $false | ($spl47 | $spl81 | $spl113 | $spl118)),
  inference(global_subsumption,[],[f13604,f287,f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1440,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13036,f13037,f13038,f13039,f13040,f13148,f13042,f13043,f13149,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13150,f13070,f13071,f13072,f13151,f13074,f13155,f13156,f13077,f13157,f13079,f13080,f13158,f13159,f13160,f13084,f13085,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13165,f13108,f13109,f13112,f13113,f13167,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13171,f13138,f13139,f13140,f13141,f13142,f13143,f13144,f13145,f13186,f13248,f13249,f13270,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f4789,f5012,f13548,f13553,f7150,f7707,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942])).
fof(f13604,plain,(
  s(bool,'F_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | $spl113),
  inference(unit_resulting_resolution,[],[f496,f13339,f374])).
fof(f26891,plain,(
  $false | ($spl47 | $spl81 | $spl113 | $spl118)),
  inference(global_subsumption,[],[f13602,f287,f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1440,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13036,f13037,f13038,f13039,f13040,f13148,f13042,f13043,f13149,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13150,f13070,f13071,f13072,f13151,f13074,f13155,f13156,f13077,f13157,f13079,f13080,f13158,f13159,f13160,f13084,f13085,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13165,f13108,f13109,f13112,f13113,f13167,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13171,f13138,f13139,f13140,f13141,f13142,f13143,f13144,f13145,f13186,f13248,f13249,f13270,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f4789,f5012,f13548,f13553,f7150,f7707,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942])).
fof(f13602,plain,(
  s(bool,'F_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | $spl113),
  inference(unit_resulting_resolution,[],[f496,f13339,f374])).
fof(f26890,plain,(
  $false | ($spl47 | $spl81 | $spl113 | $spl118)),
  inference(global_subsumption,[],[f13601,f287,f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1440,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13036,f13037,f13038,f13039,f13040,f13148,f13042,f13043,f13149,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13150,f13070,f13071,f13072,f13151,f13074,f13155,f13156,f13077,f13157,f13079,f13080,f13158,f13159,f13160,f13084,f13085,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13165,f13108,f13109,f13112,f13113,f13167,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13171,f13138,f13139,f13140,f13141,f13142,f13143,f13144,f13145,f13186,f13248,f13249,f13270,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f4789,f5012,f13548,f13553,f7150,f7707,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942])).
fof(f13601,plain,(
  s(bool,'F_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | $spl113),
  inference(unit_resulting_resolution,[],[f13339,f315])).
fof(f26889,plain,(
  $false | ($spl47 | $spl81 | $spl118)),
  inference(global_subsumption,[],[f287,f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1440,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13036,f13037,f13038,f13039,f13040,f13148,f13042,f13043,f13149,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13150,f13070,f13071,f13072,f13151,f13074,f13155,f13156,f13077,f13157,f13079,f13080,f13158,f13159,f13160,f13084,f13085,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13165,f13108,f13109,f13112,f13113,f13167,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13171,f13138,f13139,f13140,f13141,f13142,f13143,f13144,f13145,f13186,f13248,f13249,f13270,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f4789,f5012,f13548,f13553,f7150,f7707,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949,f13942])).
fof(f26888,plain,(
  $false | ($spl47 | $spl81 | $spl118)),
  inference(global_subsumption,[],[f287,f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1440,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13036,f13037,f13038,f13039,f13040,f13148,f13042,f13043,f13149,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13150,f13070,f13071,f13072,f13151,f13074,f13155,f13156,f13077,f13157,f13079,f13080,f13158,f13159,f13160,f13084,f13085,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13165,f13108,f13109,f13112,f13113,f13167,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13171,f13138,f13139,f13140,f13141,f13142,f13143,f13144,f13145,f13186,f13248,f13249,f13270,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f4789,f5012,f13548,f13553,f7150,f7707,f22888,f21678,f20937,f20929,f26884,f13965,f13959,f13949])).
fof(f26887,plain,(
  $false | ($spl47 | $spl81 | $spl118)),
  inference(global_subsumption,[],[f287,f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1440,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13036,f13037,f13038,f13039,f13040,f13148,f13042,f13043,f13149,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13150,f13070,f13071,f13072,f13151,f13074,f13155,f13156,f13077,f13157,f13079,f13080,f13158,f13159,f13160,f13084,f13085,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13165,f13108,f13109,f13112,f13113,f13167,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13171,f13138,f13139,f13140,f13141,f13142,f13143,f13144,f13145,f13186,f13248,f13249,f13270,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f4789,f5012,f13548,f13553,f7150,f7707,f22888,f21678,f20937,f20929,f26884,f13965,f13959])).
fof(f26886,plain,(
  $false | ($spl47 | $spl81 | $spl118)),
  inference(global_subsumption,[],[f287,f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1440,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13036,f13037,f13038,f13039,f13040,f13148,f13042,f13043,f13149,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13150,f13070,f13071,f13072,f13151,f13074,f13155,f13156,f13077,f13157,f13079,f13080,f13158,f13159,f13160,f13084,f13085,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13165,f13108,f13109,f13112,f13113,f13167,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13171,f13138,f13139,f13140,f13141,f13142,f13143,f13144,f13145,f13186,f13248,f13249,f13270,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f4789,f5012,f13548,f13553,f7150,f7707,f22888,f21678,f20937,f20929,f26884,f13965])).
fof(f26885,plain,(
  $false | ($spl47 | $spl81 | $spl118)),
  inference(global_subsumption,[],[f287,f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1440,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13036,f13037,f13038,f13039,f13040,f13148,f13042,f13043,f13149,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13150,f13070,f13071,f13072,f13151,f13074,f13155,f13156,f13077,f13157,f13079,f13080,f13158,f13159,f13160,f13084,f13085,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13165,f13108,f13109,f13112,f13113,f13167,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13171,f13138,f13139,f13140,f13141,f13142,f13143,f13144,f13145,f13186,f13248,f13249,f13270,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f4789,f5012,f13548,f13553,f7150,f7707,f22888,f21678,f20937,f20929,f26884])).
fof(f26882,plain,(
  $false | ($spl47 | $spl81 | $spl118)),
  inference(global_subsumption,[],[f287,f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1440,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13036,f13037,f13038,f13039,f13040,f13148,f13042,f13043,f13149,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13150,f13070,f13071,f13072,f13151,f13074,f13155,f13156,f13077,f13157,f13079,f13080,f13158,f13159,f13160,f13084,f13085,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13165,f13108,f13109,f13112,f13113,f13167,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13171,f13138,f13139,f13140,f13141,f13142,f13143,f13144,f13145,f13186,f13248,f13249,f13270,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f4789,f5012,f13548,f13553,f7150,f7707,f22888,f21678,f20937,f20929])).
fof(f26881,plain,(
  $false | ($spl47 | $spl81 | $spl118)),
  inference(global_subsumption,[],[f287,f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2927,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4856,f5007,f5019,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9587,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8921,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8624,f8619,f8604,f8600,f8596,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2895,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1440,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f7502,f12972,f13036,f13037,f13038,f13039,f13040,f13148,f13042,f13043,f13149,f13046,f13047,f13048,f13049,f13050,f13051,f13052,f13053,f13054,f13055,f13057,f13058,f13059,f13061,f13062,f13063,f13064,f13065,f13066,f13067,f13068,f13150,f13070,f13071,f13072,f13151,f13074,f13155,f13156,f13077,f13157,f13079,f13080,f13158,f13159,f13160,f13084,f13085,f13086,f13087,f13089,f13093,f13094,f13095,f13096,f13097,f13098,f13099,f13100,f13102,f13103,f13104,f13105,f13106,f13165,f13108,f13109,f13112,f13113,f13167,f13115,f13117,f13118,f13119,f13120,f13121,f13122,f13123,f13125,f13126,f13127,f13128,f13129,f13130,f13131,f13132,f13134,f13135,f13136,f13171,f13138,f13139,f13140,f13141,f13142,f13143,f13144,f13145,f13186,f13248,f13249,f13270,f13337,f13343,f13593,f14157,f14108,f14161,f14163,f14170,f14171,f14156,f14208,f14209,f14268,f14275,f14280,f14260,f14301,f14305,f14381,f14308,f14382,f14310,f14311,f14389,f14391,f14392,f14397,f14401,f14404,f14364,f14370,f14029,f13988,f14412,f14416,f14426,f14430,f14433,f14435,f14436,f14324,f14319,f14386,f14376,f13984,f14441,f14445,f14454,f14456,f14460,f14461,f14463,f14466,f14467,f14384,f14469,f14470,f14471,f14475,f14478,f14479,f14480,f14481,f14482,f14483,f14484,f14485,f14487,f14488,f14489,f14490,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14511,f14512,f14513,f14514,f14515,f14516,f14517,f14518,f14519,f14520,f14521,f14522,f14523,f14524,f14525,f14527,f14528,f14529,f14531,f14532,f14533,f14534,f14535,f14536,f14537,f14538,f14539,f14540,f14541,f14542,f14543,f14544,f14545,f14546,f14547,f14548,f14549,f14550,f14551,f14552,f14553,f14554,f14555,f14830,f14831,f14832,f14561,f14833,f14834,f14570,f14575,f14655,f14656,f14659,f14660,f14957,f15125,f15126,f15068,f15159,f15246,f15177,f15239,f15251,f15238,f15256,f15230,f15382,f15386,f15388,f15394,f15397,f15404,f15405,f15432,f15619,f15622,f15508,f15694,f15769,f15767,f15772,f15775,f15778,f15781,f15783,f15791,f15794,f15795,f15928,f15932,f15942,f16055,f16187,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16377,f16388,f16395,f16420,f16421,f16424,f16436,f18486,f18632,f18541,f18543,f18546,f18592,f18612,f19310,f19389,f19390,f19505,f19507,f19516,f20111,f20231,f20232,f20234,f20253,f20175,f20196,f20885,f20926,f20996,f20997,f20998,f20999,f21000,f21108,f21109,f21312,f21349,f21350,f21197,f21198,f21199,f21362,f21363,f21369,f21372,f21376,f21377,f21378,f21379,f21380,f21381,f21416,f21419,f21423,f21424,f21425,f21426,f21427,f21428,f21543,f21544,f21545,f21685,f21562,f21695,f21753,f21742,f21746,f21747,f21748,f21749,f21750,f21751,f21930,f21981,f21985,f21986,f21987,f21988,f21989,f21990,f22035,f22073,f22077,f22078,f22079,f22080,f22081,f22082,f22087,f22125,f22129,f22130,f22131,f22132,f22133,f22134,f22272,f22426,f22295,f22450,f22456,f22460,f22466,f22469,f22546,f22550,f22551,f22552,f22553,f22554,f22555,f23038,f22580,f22584,f22587,f23060,f23061,f22742,f22744,f23064,f22746,f22761,f23089,f23091,f23094,f23174,f23178,f23179,f23180,f23181,f23183,f23990,f23088,f22909,f22907,f22904,f22899,f22702,f23991,f22442,f23992,f21941,f23999,f21793,f21704,f24001,f24009,f21201,f21125,f20115,f20113,f24075,f24104,f14820,f24116,f24125,f24156,f24159,f24445,f24526,f26384,f25914,f26386,f26387,f25919,f25921,f25922,f26395,f25985,f25988,f25990,f25992,f25993,f25994,f25998,f26000,f26001,f26002,f26003,f26004,f26413,f26009,f26416,f26045,f26466,f26468,f26469,f26052,f26056,f26058,f26472,f26061,f26077,f26078,f26477,f26478,f26479,f26480,f26481,f26482,f26483,f26087,f26484,f26485,f26486,f26487,f26488,f26489,f26504,f26505,f26506,f26507,f26185,f26516,f26517,f26523,f26529,f26532,f26550,f26376,f4789,f5012,f13548,f13553,f7150,f7707,f22888,f21678,f20937])).
fof(f26880,plain,(
  $false | ($spl46 | $spl81 | $spl119)),
  inference(subsumption_resolution,[],[f14383,f19087])).
fof(f19087,plain,(
  s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) | ($spl46 | $spl81)),
  inference(unit_resulting_resolution,[],[f7502,f14438])).
fof(f14438,plain,(
  ( ! [X30] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X30),s('type.rat.rat',X30))) | s('type.rat.rat',X30) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | ($spl46 | $spl81)),
  inference(global_subsumption,[],[f14386,f287,f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2900,f2902,f2903,f2905,f2906,f2908,f2913,f2927,f3112,f3115,f3116,f3338,f3485,f3571,f3637,f3694,f3854,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4277,f4282,f4287,f4289,f4293,f4297,f4301,f4313,f4317,f4168,f4323,f4326,f4329,f4174,f4175,f4332,f4340,f4184,f4349,f4190,f4191,f4351,f4352,f4354,f4355,f4356,f4363,f4371,f4374,f4536,f4539,f4543,f4547,f4549,f4552,f4562,f4565,f4567,f4576,f4580,f4582,f4586,f4599,f4601,f4603,f4449,f4610,f4623,f4627,f4633,f4636,f4639,f4856,f5007,f5019,f2896,f5086,f5088,f5089,f5091,f5092,f5094,f5110,f5098,f5099,f5100,f5101,f5102,f5103,f5104,f5105,f5365,f5367,f5368,f5370,f5371,f5373,f5445,f5449,f5733,f5738,f5743,f5745,f5749,f5753,f5757,f5769,f5773,f5624,f5779,f5782,f5785,f5630,f5631,f5788,f5796,f5640,f5805,f5646,f5647,f5807,f5808,f5810,f5811,f5812,f5819,f5827,f5830,f5988,f5991,f5995,f5999,f6001,f6004,f6014,f6017,f6019,f6028,f6032,f6034,f6038,f6051,f6053,f6055,f5901,f6072,f6078,f6081,f6084,f6179,f6211,f6241,f6276,f6829,f6853,f7151,f7102,f7109,f7189,f7163,f7165,f7166,f7167,f7168,f7169,f7295,f7298,f7299,f7300,f7301,f7431,f7438,f7469,f7473,f7474,f7475,f7477,f7150,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8604,f8600,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1440,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f12972])).
fof(f7477,plain,(
  ( ! [X8,X9] : (~sP5('F_0','const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X9),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',X8)))))),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X8),s('type.rat.rat',X9))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) ) | $spl46),
  inference(superposition,[],[f7163,f1385])).
fof(f7475,plain,(
  ( ! [X5] : (~sP5('F_0','const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X5),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',X5))))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',X5)))) ) | $spl46),
  inference(superposition,[],[f7163,f5092])).
fof(f7474,plain,(
  ( ! [X4,X3] : (~sP5('F_0','const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',X3))),s('type.rat.rat',X4)))),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X3),s('type.rat.rat',X4))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) ) | $spl46),
  inference(superposition,[],[f7163,f1409])).
fof(f7469,plain,(
  ( ! [X0] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X0),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',X0)))))) ) | $spl46),
  inference(unit_resulting_resolution,[],[f496,f7163,f447])).
fof(f7438,plain,(
  ( ! [X111,X112,X110,X113] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X112),s('type.rat.rat',X113))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X113),s('type.rat.rat',X111))),s('type.rat.rat',X110))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X112),s('type.rat.rat',X111))),s('type.rat.rat',X110))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X111),s('type.rat.rat',X110))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) ) | $spl46),
  inference(forward_demodulation,[],[f7437,f1409])).
fof(f7437,plain,(
  ( ! [X111,X112,X110,X113] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X112),s('type.rat.rat',X113))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X113),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X111),s('type.rat.rat',X110))))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X112),s('type.rat.rat',X111))),s('type.rat.rat',X110))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X111),s('type.rat.rat',X110))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) ) | $spl46),
  inference(forward_demodulation,[],[f7436,f5088])).
fof(f7436,plain,(
  ( ! [X111,X112,X110,X113] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X112),s('type.rat.rat',X113))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X113),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat',X111))),s('type.rat.rat',X110))))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X112),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat',X111))))),s('type.rat.rat',X110))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X111),s('type.rat.rat',X110))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) ) | $spl46),
  inference(forward_demodulation,[],[f7435,f1409])).
fof(f7435,plain,(
  ( ! [X111,X112,X110,X113] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X112),s('type.rat.rat',X113))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X113),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat',X111))),s('type.rat.rat',X110))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X112),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat',X111))),s('type.rat.rat',X110))))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X111),s('type.rat.rat',X110))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) ) | $spl46),
  inference(forward_demodulation,[],[f7434,f1410])).
fof(f7434,plain,(
  ( ! [X111,X112,X110,X113] : (~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X111),s('type.rat.rat',X110))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X112),s('type.rat.rat',X113))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X113),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat',X110))),s('type.rat.rat',X111))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X112),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat',X110))),s('type.rat.rat',X111)))))))) ) | $spl46),
  inference(forward_demodulation,[],[f7398,f373])).
fof(f7398,plain,(
  ( ! [X111,X112,X110,X113] : (~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X111),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X110))))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X112),s('type.rat.rat',X113))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X113),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat',X110))),s('type.rat.rat',X111))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X112),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat',X110))),s('type.rat.rat',X111)))))))) ) | $spl46),
  inference(superposition,[],[f1488,f5094])).
fof(f7431,plain,(
  ( ! [X24,X23,X25] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X24),s('type.rat.rat',X25))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X25),s('type.rat.rat',X23))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X24),s('type.rat.rat',X23))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X23))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) ) | $spl46),
  inference(forward_demodulation,[],[f7430,f5086])).
fof(f7430,plain,(
  ( ! [X24,X23,X25] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X24),s('type.rat.rat',X25))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X25),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.rat.rat',X23))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X24),s('type.rat.rat',X23))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X23))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) ) | $spl46),
  inference(forward_demodulation,[],[f7429,f1409])).
fof(f7429,plain,(
  ( ! [X24,X23,X25] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X24),s('type.rat.rat',X25))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X25),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat',X23))))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X24),s('type.rat.rat',X23))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X23))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) ) | $spl46),
  inference(forward_demodulation,[],[f7428,f5086])).
fof(f7428,plain,(
  ( ! [X24,X23,X25] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X24),s('type.rat.rat',X25))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X25),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat',X23))))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X24),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.rat.rat',X23))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X23))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) ) | $spl46),
  inference(forward_demodulation,[],[f7358,f1409])).
fof(f7358,plain,(
  ( ! [X24,X23,X25] : (~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X23))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X24),s('type.rat.rat',X25))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X25),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat',X23))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X24),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat',X23)))))))) ) | $spl46),
  inference(superposition,[],[f421,f5094])).
fof(f7301,plain,(
  ( ! [X8] : (~sP5('F_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',X8))),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X8)))))) ) | $spl46),
  inference(superposition,[],[f7109,f1340])).
fof(f7300,plain,(
  ( ! [X6,X7] : (~sP5('F_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X6),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X7),s('type.rat.rat',sK12))))),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X6),s('type.rat.rat',X7)))))) ) | $spl46),
  inference(superposition,[],[f7109,f420])).
fof(f7299,plain,(
  ( ! [X4,X5] : (~sP5('F_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X5),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X4),s('type.rat.rat',sK12))))),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X4),s('type.rat.rat',X5)))))) ) | $spl46),
  inference(superposition,[],[f7109,f1375])).
fof(f7298,plain,(
  ( ! [X2,X3] : (~sP5('F_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X2),s('type.rat.rat',sK12))),s('type.rat.rat',X3))),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X2),s('type.rat.rat',X3)))))) ) | $spl46),
  inference(superposition,[],[f7109,f1410])).
fof(f7295,plain,(
  ( ! [X0] : (~sP5('F_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',X0))),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat',X0)))) ) | $spl46),
  inference(superposition,[],[f7109,f372])).
fof(f7169,plain,(
  ( ! [X8] : (~sP5('F_0','const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',X8)))),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X8))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) ) | $spl46),
  inference(superposition,[],[f7102,f1340])).
fof(f7168,plain,(
  ( ! [X6,X7] : (~sP5('F_0','const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X6),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X7),s('type.rat.rat',sK12)))))),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X6),s('type.rat.rat',X7))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) ) | $spl46),
  inference(superposition,[],[f7102,f420])).
fof(f7167,plain,(
  ( ! [X4,X5] : (~sP5('F_0','const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X5),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X4),s('type.rat.rat',sK12)))))),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X4),s('type.rat.rat',X5))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) ) | $spl46),
  inference(superposition,[],[f7102,f1375])).
fof(f7166,plain,(
  ( ! [X2,X3] : (~sP5('F_0','const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X2),s('type.rat.rat',sK12))),s('type.rat.rat',X3)))),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X2),s('type.rat.rat',X3))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) ) | $spl46),
  inference(superposition,[],[f7102,f1410])).
fof(f7165,plain,(
  ~sP5('F_0','const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | $spl46),
  inference(superposition,[],[f7102,f5088])).
fof(f7163,plain,(
  ( ! [X0] : (~sP5('F_0','const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',X0)))),'const.rat.rat_les_2'(s('type.rat.rat',X0),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) ) | $spl46),
  inference(superposition,[],[f7102,f372])).
fof(f7189,plain,(
  ~sP2('const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12)),'F_0') | $spl46),
  inference(forward_demodulation,[],[f7188,f5086])).
fof(f7188,plain,(
  ~sP2('const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))),'F_0') | $spl46),
  inference(forward_demodulation,[],[f7161,f372])).
fof(f7161,plain,(
  ~sP2('const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat',sK12)))),'F_0') | $spl46),
  inference(unit_resulting_resolution,[],[f496,f527,f525,f7102,f434])).
fof(f7109,plain,(
  ( ! [X4] : (~sP5('F_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X4),s('type.rat.rat',sK12))),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat',X4)))) ) | $spl46),
  inference(superposition,[],[f6806,f5088])).
fof(f7102,plain,(
  ( ! [X4] : (~sP5('F_0','const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X4),s('type.rat.rat',sK12)))),'const.rat.rat_les_2'(s('type.rat.rat',X4),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) ) | $spl46),
  inference(superposition,[],[f6806,f5088])).
fof(f7151,plain,(
  ~sP3('const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12)))),'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),'F_0') | $spl46),
  inference(forward_demodulation,[],[f7150,f5086])).
fof(f6853,plain,(
  ( ! [X4] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat',X4))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X4),s('type.rat.rat',sK12))),s('type.rat.rat',sK12)))) ) | $spl46),
  inference(superposition,[],[f1505,f5088])).
fof(f6829,plain,(
  ( ! [X4] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X4),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X4),s('type.rat.rat',sK12)))))) ) | $spl46),
  inference(superposition,[],[f1505,f5088])).
fof(f6276,plain,(
  ( ! [X76,X74,X77,X75,X73] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X76),s('type.rat.rat',X77))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X77),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X73),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X74),s('type.rat.rat',X75))))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X73),s('type.rat.rat',X74))))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X76),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X73),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X74),s('type.rat.rat',X75))))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X73),s('type.rat.rat',X74))))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X75),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X74),s('type.rat.rat',X73)))) ) | $spl46),
  inference(forward_demodulation,[],[f6275,f1409])).
fof(f6275,plain,(
  ( ! [X76,X74,X77,X75,X73] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X76),s('type.rat.rat',X77))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X77),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X73),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X74),s('type.rat.rat',X75))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X73),s('type.rat.rat',X74))))))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X76),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X73),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X74),s('type.rat.rat',X75))))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X73),s('type.rat.rat',X74))))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X75),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X74),s('type.rat.rat',X73)))) ) | $spl46),
  inference(forward_demodulation,[],[f6274,f1409])).
fof(f6274,plain,(
  ( ! [X76,X74,X77,X75,X73] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X76),s('type.rat.rat',X77))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X77),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X73),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X74),s('type.rat.rat',X75))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X73),s('type.rat.rat',X74))))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X76),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X73),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X74),s('type.rat.rat',X75))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X73),s('type.rat.rat',X74))))))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X75),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X74),s('type.rat.rat',X73)))) ) | $spl46),
  inference(forward_demodulation,[],[f6273,f1409])).
fof(f6273,plain,(
  ( ! [X76,X74,X77,X75,X73] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X76),s('type.rat.rat',X77))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X77),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X73),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X74),s('type.rat.rat',X75))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X73),s('type.rat.rat',X74))))))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X76),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X73),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X74),s('type.rat.rat',X75))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X73),s('type.rat.rat',X74))))))))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X75),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X74),s('type.rat.rat',X73)))) ) | $spl46),
  inference(forward_demodulation,[],[f6272,f1409])).
fof(f6272,plain,(
  ( ! [X76,X74,X77,X75,X73] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X76),s('type.rat.rat',X77))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X77),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X73),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X74),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X75),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X73),s('type.rat.rat',X74))))))))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X76),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X73),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X74),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X75),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X73),s('type.rat.rat',X74))))))))))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X75),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X74),s('type.rat.rat',X73)))) ) | $spl46),
  inference(forward_demodulation,[],[f6271,f1340])).
fof(f6271,plain,(
  ( ! [X76,X74,X77,X75,X73] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X76),s('type.rat.rat',X77))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X77),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X73),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X74),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X73),s('type.rat.rat',X74))))),s('type.rat.rat',X75))))))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X76),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X73),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X74),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X73),s('type.rat.rat',X74))))),s('type.rat.rat',X75))))))))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X75),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X74),s('type.rat.rat',X73)))) ) | $spl46),
  inference(forward_demodulation,[],[f6270,f420])).
fof(f6270,plain,(
  ( ! [X76,X74,X77,X75,X73] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X76),s('type.rat.rat',X77))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X77),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X73),s('type.rat.rat',X74))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X73),s('type.rat.rat',X74))))),s('type.rat.rat',X75))))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X76),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X73),s('type.rat.rat',X74))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X73),s('type.rat.rat',X74))))),s('type.rat.rat',X75))))))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X75),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X74),s('type.rat.rat',X73)))) ) | $spl46),
  inference(forward_demodulation,[],[f6269,f420])).
fof(f6269,plain,(
  ( ! [X76,X74,X77,X75,X73] : (~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X75),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X76),s('type.rat.rat',X77))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X77),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X73),s('type.rat.rat',X74))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X73),s('type.rat.rat',X74))))))),s('type.rat.rat',X75))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X76),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X73),s('type.rat.rat',X74))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X73),s('type.rat.rat',X74))))))),s('type.rat.rat',X75))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X74),s('type.rat.rat',X73)))) ) | $spl46),
  inference(forward_demodulation,[],[f6138,f5086])).
fof(f6138,plain,(
  ( ! [X76,X74,X77,X75,X73] : (~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X75),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X76),s('type.rat.rat',X77))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X77),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X73),s('type.rat.rat',X74))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X73),s('type.rat.rat',X74))))))),s('type.rat.rat',X75))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X76),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X73),s('type.rat.rat',X74))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X73),s('type.rat.rat',X74))))))),s('type.rat.rat',X75))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X74),s('type.rat.rat',X73)))) ) | $spl46),
  inference(superposition,[],[f1488,f5089])).
fof(f6241,plain,(
  ( ! [X28,X26,X29,X27,X25] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X28),s('type.rat.rat',X29))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X29),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X25),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X26),s('type.rat.rat',X27))))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X25),s('type.rat.rat',X26))))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X28),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X25),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X26),s('type.rat.rat',X27))))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X25),s('type.rat.rat',X26))))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X27),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X25),s('type.rat.rat',X26)))) ) | $spl46),
  inference(forward_demodulation,[],[f6240,f1409])).
fof(f6240,plain,(
  ( ! [X28,X26,X29,X27,X25] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X28),s('type.rat.rat',X29))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X29),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X25),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X26),s('type.rat.rat',X27))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X25),s('type.rat.rat',X26))))))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X28),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X25),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X26),s('type.rat.rat',X27))))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X25),s('type.rat.rat',X26))))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X27),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X25),s('type.rat.rat',X26)))) ) | $spl46),
  inference(forward_demodulation,[],[f6239,f1409])).
fof(f6239,plain,(
  ( ! [X28,X26,X29,X27,X25] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X28),s('type.rat.rat',X29))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X29),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X25),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X26),s('type.rat.rat',X27))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X25),s('type.rat.rat',X26))))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X28),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X25),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X26),s('type.rat.rat',X27))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X25),s('type.rat.rat',X26))))))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X27),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X25),s('type.rat.rat',X26)))) ) | $spl46),
  inference(forward_demodulation,[],[f6238,f1409])).
fof(f6238,plain,(
  ( ! [X28,X26,X29,X27,X25] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X28),s('type.rat.rat',X29))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X29),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X25),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X26),s('type.rat.rat',X27))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X25),s('type.rat.rat',X26))))))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X28),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X25),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X26),s('type.rat.rat',X27))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X25),s('type.rat.rat',X26))))))))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X27),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X25),s('type.rat.rat',X26)))) ) | $spl46),
  inference(forward_demodulation,[],[f6237,f1410])).
fof(f6237,plain,(
  ( ! [X28,X26,X29,X27,X25] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X28),s('type.rat.rat',X29))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X29),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X25),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X26),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X25),s('type.rat.rat',X26))))),s('type.rat.rat',X27))))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X28),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X25),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X26),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X25),s('type.rat.rat',X26))))),s('type.rat.rat',X27))))))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X27),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X25),s('type.rat.rat',X26)))) ) | $spl46),
  inference(forward_demodulation,[],[f6236,f420])).
fof(f6236,plain,(
  ( ! [X28,X26,X29,X27,X25] : (~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X27),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X28),s('type.rat.rat',X29))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X29),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X25),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X26),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X25),s('type.rat.rat',X26))))))),s('type.rat.rat',X27))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X28),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X25),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X26),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X25),s('type.rat.rat',X26))))))),s('type.rat.rat',X27))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X25),s('type.rat.rat',X26)))) ) | $spl46),
  inference(forward_demodulation,[],[f6129,f5086])).
fof(f6129,plain,(
  ( ! [X28,X26,X29,X27,X25] : (~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X27),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X28),s('type.rat.rat',X29))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X29),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X25),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X26),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X25),s('type.rat.rat',X26))))))),s('type.rat.rat',X27))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X28),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X25),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X26),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X25),s('type.rat.rat',X26))))))),s('type.rat.rat',X27))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X25),s('type.rat.rat',X26)))) ) | $spl46),
  inference(superposition,[],[f1488,f5092])).
fof(f6211,plain,(
  ( ! [X76,X74,X77,X75,X73] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X76),s('type.rat.rat',X77))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X77),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X75),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X73),s('type.rat.rat',X74))))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X73),s('type.rat.rat',X74))))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X76),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X75),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X73),s('type.rat.rat',X74))))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X73),s('type.rat.rat',X74))))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X75),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X74),s('type.rat.rat',X73)))) ) | $spl46),
  inference(forward_demodulation,[],[f6210,f1409])).
fof(f6210,plain,(
  ( ! [X76,X74,X77,X75,X73] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X76),s('type.rat.rat',X77))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X77),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X75),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X73),s('type.rat.rat',X74))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X73),s('type.rat.rat',X74))))))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X76),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X75),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X73),s('type.rat.rat',X74))))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X73),s('type.rat.rat',X74))))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X75),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X74),s('type.rat.rat',X73)))) ) | $spl46),
  inference(forward_demodulation,[],[f6209,f1409])).
fof(f6209,plain,(
  ( ! [X76,X74,X77,X75,X73] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X76),s('type.rat.rat',X77))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X77),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X75),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X73),s('type.rat.rat',X74))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X73),s('type.rat.rat',X74))))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X76),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X75),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X73),s('type.rat.rat',X74))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X73),s('type.rat.rat',X74))))))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X75),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X74),s('type.rat.rat',X73)))) ) | $spl46),
  inference(forward_demodulation,[],[f6208,f1409])).
fof(f6208,plain,(
  ( ! [X76,X74,X77,X75,X73] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X76),s('type.rat.rat',X77))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X77),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X75),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X73),s('type.rat.rat',X74))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X73),s('type.rat.rat',X74))))))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X76),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X75),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X73),s('type.rat.rat',X74))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X73),s('type.rat.rat',X74))))))))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X75),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X74),s('type.rat.rat',X73)))) ) | $spl46),
  inference(forward_demodulation,[],[f6207,f373])).
fof(f6207,plain,(
  ( ! [X76,X74,X77,X75,X73] : (~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X75),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X76),s('type.rat.rat',X77))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X77),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X75),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X73),s('type.rat.rat',X74))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X73),s('type.rat.rat',X74))))))))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X76),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X75),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X73),s('type.rat.rat',X74))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X73),s('type.rat.rat',X74))))))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X74),s('type.rat.rat',X73)))) ) | $spl46),
  inference(forward_demodulation,[],[f6121,f5088])).
fof(f6121,plain,(
  ( ! [X76,X74,X77,X75,X73] : (~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat',X75))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X76),s('type.rat.rat',X77))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X77),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X75),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X73),s('type.rat.rat',X74))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X73),s('type.rat.rat',X74))))))))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X76),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X75),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X73),s('type.rat.rat',X74))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X73),s('type.rat.rat',X74))))))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X74),s('type.rat.rat',X73)))) ) | $spl46),
  inference(superposition,[],[f1488,f5089])).
fof(f6179,plain,(
  ( ! [X28,X26,X29,X27,X25] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X28),s('type.rat.rat',X29))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X29),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X27),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X25),s('type.rat.rat',X26))))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X25),s('type.rat.rat',X26))))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X28),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X27),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X25),s('type.rat.rat',X26))))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X25),s('type.rat.rat',X26))))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X27),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X25),s('type.rat.rat',X26)))) ) | $spl46),
  inference(forward_demodulation,[],[f6178,f1409])).
fof(f6178,plain,(
  ( ! [X28,X26,X29,X27,X25] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X28),s('type.rat.rat',X29))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X29),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X27),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X25),s('type.rat.rat',X26))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X25),s('type.rat.rat',X26))))))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X28),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X27),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X25),s('type.rat.rat',X26))))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X25),s('type.rat.rat',X26))))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X27),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X25),s('type.rat.rat',X26)))) ) | $spl46),
  inference(forward_demodulation,[],[f6177,f1409])).
fof(f6177,plain,(
  ( ! [X28,X26,X29,X27,X25] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X28),s('type.rat.rat',X29))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X29),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X27),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X25),s('type.rat.rat',X26))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X25),s('type.rat.rat',X26))))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X28),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X27),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X25),s('type.rat.rat',X26))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X25),s('type.rat.rat',X26))))))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X27),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X25),s('type.rat.rat',X26)))) ) | $spl46),
  inference(forward_demodulation,[],[f6176,f1409])).
fof(f6176,plain,(
  ( ! [X28,X26,X29,X27,X25] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X28),s('type.rat.rat',X29))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X29),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X27),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X25),s('type.rat.rat',X26))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X25),s('type.rat.rat',X26))))))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X28),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X27),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X25),s('type.rat.rat',X26))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X25),s('type.rat.rat',X26))))))))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X27),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X25),s('type.rat.rat',X26)))) ) | $spl46),
  inference(forward_demodulation,[],[f6175,f1409])).
fof(f6175,plain,(
  ( ! [X28,X26,X29,X27,X25] : (~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X27),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X28),s('type.rat.rat',X29))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X29),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X27),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X25),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X26),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X25),s('type.rat.rat',X26))))))))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X28),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X27),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X25),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X26),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X25),s('type.rat.rat',X26))))))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X25),s('type.rat.rat',X26)))) ) | $spl46),
  inference(forward_demodulation,[],[f6112,f5088])).
fof(f6112,plain,(
  ( ! [X28,X26,X29,X27,X25] : (~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat',X27))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X28),s('type.rat.rat',X29))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X29),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X27),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X25),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X26),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X25),s('type.rat.rat',X26))))))))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X28),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X27),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X25),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X26),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X25),s('type.rat.rat',X26))))))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X25),s('type.rat.rat',X26)))) ) | $spl46),
  inference(superposition,[],[f1488,f5092])).
fof(f6084,plain,(
  ( ! [X198,X199,X197] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X197),s('type.rat.rat',X198))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X197),s('type.rat.rat',X198))))),s('type.rat.rat',X199))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X199),s('type.rat.rat',X199))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X198),s('type.rat.rat',X197)))) ) | $spl46),
  inference(forward_demodulation,[],[f6083,f373])).
fof(f6083,plain,(
  ( ! [X198,X199,X197] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X199),s('type.rat.rat',X199))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X197),s('type.rat.rat',X198))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X197),s('type.rat.rat',X198))))))),s('type.rat.rat',X199))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X198),s('type.rat.rat',X197)))) ) | $spl46),
  inference(forward_demodulation,[],[f5983,f5088])).
fof(f5983,plain,(
  ( ! [X198,X199,X197] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X199),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat',X199))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X197),s('type.rat.rat',X198))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X197),s('type.rat.rat',X198))))))),s('type.rat.rat',X199))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X198),s('type.rat.rat',X197)))) ) | $spl46),
  inference(superposition,[],[f5092,f5089])).
fof(f6081,plain,(
  ( ! [X23,X21,X22] : (s('type.rat.rat',X23) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X21),s('type.rat.rat',X22))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X23),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X21),s('type.rat.rat',X22))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X22),s('type.rat.rat',X21)))) ) | $spl46),
  inference(forward_demodulation,[],[f5923,f5086])).
fof(f5923,plain,(
  ( ! [X23,X21,X22] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X23),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X21),s('type.rat.rat',X22))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X23),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X21),s('type.rat.rat',X22))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X22),s('type.rat.rat',X21)))) ) | $spl46),
  inference(superposition,[],[f1385,f5089])).
fof(f6078,plain,(
  ( ! [X17,X15,X16] : (s('type.rat.rat',X17) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X15),s('type.rat.rat',X16))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X15),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X16),s('type.rat.rat',X17))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X16),s('type.rat.rat',X15)))) ) | $spl46),
  inference(forward_demodulation,[],[f6077,f5088])).
fof(f6077,plain,(
  ( ! [X17,X15,X16] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat',X17))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X15),s('type.rat.rat',X16))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X15),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X16),s('type.rat.rat',X17))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X16),s('type.rat.rat',X15)))) ) | $spl46),
  inference(forward_demodulation,[],[f5921,f420])).
fof(f5921,plain,(
  ( ! [X17,X15,X16] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat',X17))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X15),s('type.rat.rat',X16))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X15),s('type.rat.rat',X16))),s('type.rat.rat',X17))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X16),s('type.rat.rat',X15)))) ) | $spl46),
  inference(superposition,[],[f1375,f5089])).
fof(f6072,plain,(
  ( ! [X4,X5] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X4),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X5),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X4),s('type.rat.rat',X5))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X5),s('type.rat.rat',X4)))) ) | $spl46),
  inference(forward_demodulation,[],[f5915,f373])).
fof(f5915,plain,(
  ( ! [X4,X5] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X4),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X5),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X4),s('type.rat.rat',X5))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X5),s('type.rat.rat',X4)))) ) | $spl46),
  inference(superposition,[],[f5089,f420])).
fof(f5901,plain,(
  ( ! [X6,X5] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X6),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X6))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X6),s('type.rat.rat',X5))),s('type.rat.rat',X5))) | s('type.rat.rat',X5) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl46),
  inference(superposition,[],[f5089,f1468])).
fof(f6055,plain,(
  ( ! [X47,X45,X46] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X45),s('type.rat.rat',X46))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X45),s('type.rat.rat',X46))))),s('type.rat.rat',X47))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X47),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X47))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X46),s('type.rat.rat',X45)))) ) | $spl46),
  inference(forward_demodulation,[],[f6054,f373])).
fof(f6054,plain,(
  ( ! [X47,X45,X46] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X47),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X47))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X45),s('type.rat.rat',X46))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X45),s('type.rat.rat',X46))))))),s('type.rat.rat',X47))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X46),s('type.rat.rat',X45)))) ) | $spl46),
  inference(forward_demodulation,[],[f5895,f5086])).
fof(f5895,plain,(
  ( ! [X47,X45,X46] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X47),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X47),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X45),s('type.rat.rat',X46))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X45),s('type.rat.rat',X46))))))),s('type.rat.rat',X47))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X46),s('type.rat.rat',X45)))) ) | $spl46),
  inference(superposition,[],[f5089,f5089])).
fof(f6053,plain,(
  ( ! [X43,X41,X44,X42] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X41),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X42),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X43),s('type.rat.rat',X44))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X44),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X41),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X42),s('type.rat.rat',X43))))))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X44),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X41),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X42),s('type.rat.rat',X43)))))))))))) ) | $spl46),
  inference(forward_demodulation,[],[f6052,f420])).
fof(f6052,plain,(
  ( ! [X43,X41,X44,X42] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X41),s('type.rat.rat',X42))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X43),s('type.rat.rat',X44))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X44),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X41),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X42),s('type.rat.rat',X43))))))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X44),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X41),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X42),s('type.rat.rat',X43)))))))))))) ) | $spl46),
  inference(forward_demodulation,[],[f5894,f420])).
fof(f5894,plain,(
  ( ! [X43,X41,X44,X42] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X44),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X41),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X42),s('type.rat.rat',X43))))))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X44),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X41),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X42),s('type.rat.rat',X43))))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X41),s('type.rat.rat',X42))),s('type.rat.rat',X43))),s('type.rat.rat',X44)))) ) | $spl46),
  inference(superposition,[],[f5089,f420])).
fof(f6051,plain,(
  ( ! [X39,X37,X38,X40] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X37),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X38),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X39),s('type.rat.rat',X40))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X40),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X38),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X37),s('type.rat.rat',X39))))))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X40),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X38),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X37),s('type.rat.rat',X39)))))))))))) ) | $spl46),
  inference(forward_demodulation,[],[f6050,f420])).
fof(f6050,plain,(
  ( ! [X39,X37,X38,X40] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X37),s('type.rat.rat',X38))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X39),s('type.rat.rat',X40))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X40),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X38),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X37),s('type.rat.rat',X39))))))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X40),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X38),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X37),s('type.rat.rat',X39)))))))))))) ) | $spl46),
  inference(forward_demodulation,[],[f5893,f420])).
fof(f5893,plain,(
  ( ! [X39,X37,X38,X40] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X40),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X38),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X37),s('type.rat.rat',X39))))))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X40),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X38),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X37),s('type.rat.rat',X39))))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X37),s('type.rat.rat',X38))),s('type.rat.rat',X39))),s('type.rat.rat',X40)))) ) | $spl46),
  inference(superposition,[],[f5089,f1375])).
fof(f6038,plain,(
  ( ! [X24,X23,X25,X22] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X22),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X23),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X24),s('type.rat.rat',X25))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X25),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X24),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X22),s('type.rat.rat',X23))))))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X25),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X24),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X22),s('type.rat.rat',X23)))))))))))) ) | $spl46),
  inference(forward_demodulation,[],[f6037,f420])).
fof(f6037,plain,(
  ( ! [X24,X23,X25,X22] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X22),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X23),s('type.rat.rat',X24))),s('type.rat.rat',X25))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X25),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X24),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X22),s('type.rat.rat',X23))))))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X25),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X24),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X22),s('type.rat.rat',X23)))))))))))) ) | $spl46),
  inference(forward_demodulation,[],[f5888,f420])).
fof(f5888,plain,(
  ( ! [X24,X23,X25,X22] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X25),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X24),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X22),s('type.rat.rat',X23))))))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X25),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X24),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X22),s('type.rat.rat',X23))))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X22),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X23),s('type.rat.rat',X24))))),s('type.rat.rat',X25)))) ) | $spl46),
  inference(superposition,[],[f5089,f1385])).
fof(f6034,plain,(
  ( ! [X17,X15,X16] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X15),s('type.rat.rat',X16))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X15),s('type.rat.rat',X16))))),s('type.rat.rat',X17))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X17),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X17))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X15),s('type.rat.rat',X16)))) ) | $spl46),
  inference(forward_demodulation,[],[f6033,f1409])).
fof(f6033,plain,(
  ( ! [X17,X15,X16] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X17),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X17))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X15),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X16),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X15),s('type.rat.rat',X16))))))),s('type.rat.rat',X17))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X15),s('type.rat.rat',X16)))) ) | $spl46),
  inference(forward_demodulation,[],[f5886,f5086])).
fof(f5886,plain,(
  ( ! [X17,X15,X16] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X17),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X17),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X15),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X16),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X15),s('type.rat.rat',X16))))))),s('type.rat.rat',X17))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X15),s('type.rat.rat',X16)))) ) | $spl46),
  inference(superposition,[],[f5089,f5092])).
fof(f6032,plain,(
  ( ! [X14,X12,X13,X11] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X12),s('type.rat.rat',X14))))),s('type.rat.rat',X13))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X14),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat',X12))))),s('type.rat.rat',X13))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X14),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat',X12))))),s('type.rat.rat',X13)))))))) ) | $spl46),
  inference(forward_demodulation,[],[f6031,f1409])).
fof(f6031,plain,(
  ( ! [X14,X12,X13,X11] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X12),s('type.rat.rat',X14))),s('type.rat.rat',X13))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X14),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat',X12))))),s('type.rat.rat',X13))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X14),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat',X12))))),s('type.rat.rat',X13)))))))) ) | $spl46),
  inference(forward_demodulation,[],[f6030,f1410])).
fof(f6030,plain,(
  ( ! [X14,X12,X13,X11] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X12),s('type.rat.rat',X13))),s('type.rat.rat',X14))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X14),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat',X12))))),s('type.rat.rat',X13))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X14),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat',X12))))),s('type.rat.rat',X13)))))))) ) | $spl46),
  inference(forward_demodulation,[],[f6029,f420])).
fof(f6029,plain,(
  ( ! [X14,X12,X13,X11] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X14),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat',X12))))),s('type.rat.rat',X13))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X14),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat',X12))))),s('type.rat.rat',X13))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X12),s('type.rat.rat',X13))))),s('type.rat.rat',X14)))) ) | $spl46),
  inference(forward_demodulation,[],[f5885,f1409])).
fof(f5885,plain,(
  ( ! [X14,X12,X13,X11] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X14),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat',X12))),s('type.rat.rat',X13))))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X14),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat',X12))),s('type.rat.rat',X13))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X12),s('type.rat.rat',X13))))),s('type.rat.rat',X14)))) ) | $spl46),
  inference(superposition,[],[f5089,f1409])).
fof(f6028,plain,(
  ( ! [X10,X8,X9] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X8),s('type.rat.rat',X9))),s('type.rat.rat',X8))),s('type.rat.rat',X10))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X10),s('type.rat.rat',X9))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X10),s('type.rat.rat',X9))))))) | s('type.rat.rat',X8) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl46),
  inference(forward_demodulation,[],[f5884,f1409])).
fof(f5884,plain,(
  ( ! [X10,X8,X9] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X10),s('type.rat.rat',X9))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X10),s('type.rat.rat',X9))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X8),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X9),s('type.rat.rat',X8))))),s('type.rat.rat',X10))) | s('type.rat.rat',X8) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl46),
  inference(superposition,[],[f5089,f1468])).
fof(f6019,plain,(
  ( ! [X47,X45,X46] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X47),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X45),s('type.rat.rat',X46))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X45),s('type.rat.rat',X46))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X47),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X47))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X46),s('type.rat.rat',X45)))) ) | $spl46),
  inference(forward_demodulation,[],[f6018,f373])).
fof(f6018,plain,(
  ( ! [X47,X45,X46] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X47),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X47))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X47),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X45),s('type.rat.rat',X46))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X45),s('type.rat.rat',X46))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X46),s('type.rat.rat',X45)))) ) | $spl46),
  inference(forward_demodulation,[],[f5878,f5088])).
fof(f5878,plain,(
  ( ! [X47,X45,X46] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat',X47))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat',X47))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X47),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X45),s('type.rat.rat',X46))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X45),s('type.rat.rat',X46))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X46),s('type.rat.rat',X45)))) ) | $spl46),
  inference(superposition,[],[f5089,f5089])).
fof(f6017,plain,(
  ( ! [X43,X41,X44,X42] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X44),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X41),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X42),s('type.rat.rat',X43))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X41),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X42),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X43),s('type.rat.rat',X44))))))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X41),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X42),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X43),s('type.rat.rat',X44)))))))))))) ) | $spl46),
  inference(forward_demodulation,[],[f6016,f420])).
fof(f6016,plain,(
  ( ! [X43,X41,X44,X42] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X41),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X42),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X43),s('type.rat.rat',X44))))))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X41),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X42),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X43),s('type.rat.rat',X44))))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X44),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X41),s('type.rat.rat',X42))),s('type.rat.rat',X43)))))) ) | $spl46),
  inference(forward_demodulation,[],[f6015,f420])).
fof(f6015,plain,(
  ( ! [X43,X41,X44,X42] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X41),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X42),s('type.rat.rat',X43))),s('type.rat.rat',X44))))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X41),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X42),s('type.rat.rat',X43))),s('type.rat.rat',X44))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X44),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X41),s('type.rat.rat',X42))),s('type.rat.rat',X43)))))) ) | $spl46),
  inference(forward_demodulation,[],[f5877,f420])).
fof(f5877,plain,(
  ( ! [X43,X41,X44,X42] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X41),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X42),s('type.rat.rat',X43))))),s('type.rat.rat',X44))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X41),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X42),s('type.rat.rat',X43))))),s('type.rat.rat',X44))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X44),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X41),s('type.rat.rat',X42))),s('type.rat.rat',X43)))))) ) | $spl46),
  inference(superposition,[],[f5089,f420])).
fof(f6014,plain,(
  ( ! [X39,X37,X38,X40] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X40),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X37),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X38),s('type.rat.rat',X39))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X38),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X37),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X39),s('type.rat.rat',X40))))))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X38),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X37),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X39),s('type.rat.rat',X40)))))))))))) ) | $spl46),
  inference(forward_demodulation,[],[f6013,f420])).
fof(f6013,plain,(
  ( ! [X39,X37,X38,X40] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X38),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X37),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X39),s('type.rat.rat',X40))))))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X38),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X37),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X39),s('type.rat.rat',X40))))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X40),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X37),s('type.rat.rat',X38))),s('type.rat.rat',X39)))))) ) | $spl46),
  inference(forward_demodulation,[],[f6012,f420])).
fof(f6012,plain,(
  ( ! [X39,X37,X38,X40] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X38),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X37),s('type.rat.rat',X39))),s('type.rat.rat',X40))))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X38),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X37),s('type.rat.rat',X39))),s('type.rat.rat',X40))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X40),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X37),s('type.rat.rat',X38))),s('type.rat.rat',X39)))))) ) | $spl46),
  inference(forward_demodulation,[],[f5876,f420])).
fof(f5876,plain,(
  ( ! [X39,X37,X38,X40] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X38),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X37),s('type.rat.rat',X39))))),s('type.rat.rat',X40))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X38),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X37),s('type.rat.rat',X39))))),s('type.rat.rat',X40))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X40),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X37),s('type.rat.rat',X38))),s('type.rat.rat',X39)))))) ) | $spl46),
  inference(superposition,[],[f5089,f1375])).
fof(f6004,plain,(
  ( ! [X28,X26,X27] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X28),s('type.rat.rat',X26))),s('type.rat.rat',X27))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X26),s('type.rat.rat',X28))),s('type.rat.rat',X27))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X26),s('type.rat.rat',X28))),s('type.rat.rat',X27)))))))) ) | $spl46),
  inference(forward_demodulation,[],[f6003,f1409])).
fof(f6003,plain,(
  ( ! [X28,X26,X27] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X28),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X26),s('type.rat.rat',X27))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X26),s('type.rat.rat',X28))),s('type.rat.rat',X27))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X26),s('type.rat.rat',X28))),s('type.rat.rat',X27)))))))) ) | $spl46),
  inference(forward_demodulation,[],[f6002,f373])).
fof(f6002,plain,(
  ( ! [X28,X26,X27] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X26),s('type.rat.rat',X28))),s('type.rat.rat',X27))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X26),s('type.rat.rat',X28))),s('type.rat.rat',X27))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X28),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X26),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X27)))))))) ) | $spl46),
  inference(forward_demodulation,[],[f5872,f1410])).
fof(f5872,plain,(
  ( ! [X28,X26,X27] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X26),s('type.rat.rat',X27))),s('type.rat.rat',X28))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X26),s('type.rat.rat',X27))),s('type.rat.rat',X28))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X28),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X26),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X27)))))))) ) | $spl46),
  inference(superposition,[],[f5089,f373])).
fof(f6001,plain,(
  ( ! [X24,X23,X25,X22] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X24),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X22),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X23),s('type.rat.rat',X25))))))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X24),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X22),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X23),s('type.rat.rat',X25))))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X25),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X22),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X23),s('type.rat.rat',X24)))))))) ) | $spl46),
  inference(forward_demodulation,[],[f6000,f420])).
fof(f6000,plain,(
  ( ! [X24,X23,X25,X22] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X24),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X22),s('type.rat.rat',X23))),s('type.rat.rat',X25))))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X24),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X22),s('type.rat.rat',X23))),s('type.rat.rat',X25))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X25),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X22),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X23),s('type.rat.rat',X24)))))))) ) | $spl46),
  inference(forward_demodulation,[],[f5871,f420])).
fof(f5871,plain,(
  ( ! [X24,X23,X25,X22] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X24),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X22),s('type.rat.rat',X23))))),s('type.rat.rat',X25))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X24),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X22),s('type.rat.rat',X23))))),s('type.rat.rat',X25))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X25),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X22),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X23),s('type.rat.rat',X24)))))))) ) | $spl46),
  inference(superposition,[],[f5089,f1385])).
fof(f5999,plain,(
  ( ! [X21,X19,X20,X18] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X19),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X20),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X18),s('type.rat.rat',X21))))))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X19),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X20),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X18),s('type.rat.rat',X21))))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X21),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X18),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X19),s('type.rat.rat',X20)))))))) ) | $spl46),
  inference(forward_demodulation,[],[f5998,f420])).
fof(f5998,plain,(
  ( ! [X21,X19,X20,X18] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X19),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X20),s('type.rat.rat',X18))),s('type.rat.rat',X21))))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X19),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X20),s('type.rat.rat',X18))),s('type.rat.rat',X21))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X21),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X18),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X19),s('type.rat.rat',X20)))))))) ) | $spl46),
  inference(forward_demodulation,[],[f5870,f420])).
fof(f5870,plain,(
  ( ! [X21,X19,X20,X18] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X19),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X20),s('type.rat.rat',X18))))),s('type.rat.rat',X21))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X19),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X20),s('type.rat.rat',X18))))),s('type.rat.rat',X21))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X21),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X18),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X19),s('type.rat.rat',X20)))))))) ) | $spl46),
  inference(superposition,[],[f5089,f1385])).
fof(f5995,plain,(
  ( ! [X14,X12,X13,X11] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X14),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat',X12))))),s('type.rat.rat',X13))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X12),s('type.rat.rat',X14))))),s('type.rat.rat',X13))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X12),s('type.rat.rat',X14))))),s('type.rat.rat',X13)))))))) ) | $spl46),
  inference(forward_demodulation,[],[f5994,f1409])).
fof(f5994,plain,(
  ( ! [X14,X12,X13,X11] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X14),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat',X12))),s('type.rat.rat',X13))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X12),s('type.rat.rat',X14))))),s('type.rat.rat',X13))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X12),s('type.rat.rat',X14))))),s('type.rat.rat',X13)))))))) ) | $spl46),
  inference(forward_demodulation,[],[f5993,f1409])).
fof(f5993,plain,(
  ( ! [X14,X12,X13,X11] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X12),s('type.rat.rat',X14))))),s('type.rat.rat',X13))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X12),s('type.rat.rat',X14))))),s('type.rat.rat',X13))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X14),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X12),s('type.rat.rat',X13)))))))) ) | $spl46),
  inference(forward_demodulation,[],[f5992,f420])).
fof(f5992,plain,(
  ( ! [X14,X12,X13,X11] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat',X12))),s('type.rat.rat',X14))),s('type.rat.rat',X13))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat',X12))),s('type.rat.rat',X14))),s('type.rat.rat',X13))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X14),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X12),s('type.rat.rat',X13)))))))) ) | $spl46),
  inference(forward_demodulation,[],[f5868,f1410])).
fof(f5868,plain,(
  ( ! [X14,X12,X13,X11] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat',X12))),s('type.rat.rat',X13))),s('type.rat.rat',X14))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat',X12))),s('type.rat.rat',X13))),s('type.rat.rat',X14))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X14),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X12),s('type.rat.rat',X13)))))))) ) | $spl46),
  inference(superposition,[],[f5089,f1409])).
fof(f5991,plain,(
  ( ! [X10,X8,X9] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X10),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X8),s('type.rat.rat',X9))),s('type.rat.rat',X8))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X9),s('type.rat.rat',X10))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X9),s('type.rat.rat',X10))))))) | s('type.rat.rat',X8) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl46),
  inference(forward_demodulation,[],[f5867,f1409])).
fof(f5867,plain,(
  ( ! [X10,X8,X9] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X9),s('type.rat.rat',X10))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X9),s('type.rat.rat',X10))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X10),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X8),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X9),s('type.rat.rat',X8))))))) | s('type.rat.rat',X8) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl46),
  inference(superposition,[],[f5089,f1468])).
fof(f5988,plain,(
  ( ! [X2,X0,X1] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X1),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X0),s('type.rat.rat',X2))))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X1),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X0),s('type.rat.rat',X2))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X2),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X0),s('type.rat.rat',X1)))))) ) | $spl46),
  inference(forward_demodulation,[],[f5864,f420])).
fof(f5864,plain,(
  ( ! [X2,X0,X1] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X1),s('type.rat.rat',X0))),s('type.rat.rat',X2))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X1),s('type.rat.rat',X0))),s('type.rat.rat',X2))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X2),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X0),s('type.rat.rat',X1)))))) ) | $spl46),
  inference(superposition,[],[f5089,f372])).
fof(f5830,plain,(
  ( ! [X17,X15,X16] : (s('type.rat.rat',X17) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X16),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X15),s('type.rat.rat',X16))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X17),s('type.rat.rat',X15))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X15),s('type.rat.rat',X16)))) ) | $spl46),
  inference(forward_demodulation,[],[f5665,f5086])).
fof(f5665,plain,(
  ( ! [X17,X15,X16] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X17),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X16),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X15),s('type.rat.rat',X16))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X17),s('type.rat.rat',X15))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X15),s('type.rat.rat',X16)))) ) | $spl46),
  inference(superposition,[],[f1385,f5092])).
fof(f5827,plain,(
  ( ! [X10,X11,X9] : (s('type.rat.rat',X11) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X10),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X9),s('type.rat.rat',X10))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X9),s('type.rat.rat',X11))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X9),s('type.rat.rat',X10)))) ) | $spl46),
  inference(forward_demodulation,[],[f5663,f5088])).
fof(f5663,plain,(
  ( ! [X10,X11,X9] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat',X11))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X10),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X9),s('type.rat.rat',X10))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X9),s('type.rat.rat',X11))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X9),s('type.rat.rat',X10)))) ) | $spl46),
  inference(superposition,[],[f1375,f5092])).
fof(f5819,plain,(
  ( ! [X14,X12,X13] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X12),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X13),s('type.rat.rat',X14))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X13),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X12),s('type.rat.rat',X14))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X12),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X13),s('type.rat.rat',X14)))))))))) ) | $spl46),
  inference(forward_demodulation,[],[f5818,f420])).
fof(f5818,plain,(
  ( ! [X14,X12,X13] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X13),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X12),s('type.rat.rat',X14))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X12),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X13),s('type.rat.rat',X14))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X12),s('type.rat.rat',X13))),s('type.rat.rat',X14)))) ) | $spl46),
  inference(forward_demodulation,[],[f5817,f420])).
fof(f5817,plain,(
  ( ! [X14,X12,X13] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X13),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X12),s('type.rat.rat',X14))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X12),s('type.rat.rat',X13))),s('type.rat.rat',X14))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X12),s('type.rat.rat',X13))),s('type.rat.rat',X14)))) ) | $spl46),
  inference(forward_demodulation,[],[f5658,f1409])).
fof(f5658,plain,(
  ( ! [X14,X12,X13] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X13),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X12),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X14),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X12),s('type.rat.rat',X13))),s('type.rat.rat',X14))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X12),s('type.rat.rat',X13))),s('type.rat.rat',X14)))) ) | $spl46),
  inference(superposition,[],[f5092,f1375])).
fof(f5812,plain,(
  ( ! [X31,X32] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X32),s('type.rat.rat',X31))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X31))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X32),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X32),s('type.rat.rat',X31)))))))) ) | $spl46),
  inference(forward_demodulation,[],[f5654,f1340])).
fof(f5654,plain,(
  ( ! [X31,X32] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X31))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X32),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X32),s('type.rat.rat',X31))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X31))),s('type.rat.rat',X32)))) ) | $spl46),
  inference(superposition,[],[f5092,f1340])).
fof(f5811,plain,(
  ( ! [X30,X28,X29] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X28),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X29),s('type.rat.rat',X30))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X28),s('type.rat.rat',X29))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X30),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X28),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X29),s('type.rat.rat',X30)))))))))) ) | $spl46),
  inference(forward_demodulation,[],[f5653,f420])).
fof(f5653,plain,(
  ( ! [X30,X28,X29] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X28),s('type.rat.rat',X29))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X30),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X28),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X29),s('type.rat.rat',X30))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X28),s('type.rat.rat',X29))),s('type.rat.rat',X30)))) ) | $spl46),
  inference(superposition,[],[f5092,f420])).
fof(f5810,plain,(
  ( ! [X26,X27,X25] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X25),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X26),s('type.rat.rat',X27))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X25),s('type.rat.rat',X26))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X27),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X26),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X25),s('type.rat.rat',X27)))))))))) ) | $spl46),
  inference(forward_demodulation,[],[f5652,f420])).
fof(f5652,plain,(
  ( ! [X26,X27,X25] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X25),s('type.rat.rat',X26))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X27),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X26),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X25),s('type.rat.rat',X27))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X25),s('type.rat.rat',X26))),s('type.rat.rat',X27)))) ) | $spl46),
  inference(superposition,[],[f5092,f1375])).
fof(f5808,plain,(
  ( ! [X21] : (s('type.rat.rat',X21) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X21),s('type.rat.rat',X21)))))) ) | $spl46),
  inference(forward_demodulation,[],[f5650,f5088])).
fof(f5650,plain,(
  ( ! [X21] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X21),s('type.rat.rat',X21))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat',X21)))) ) | $spl46),
  inference(superposition,[],[f5092,f5088])).
fof(f5807,plain,(
  ( ! [X19,X18] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X18),s('type.rat.rat',X19))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X18),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X19))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X18),s('type.rat.rat',X19)))))))) ) | $spl46),
  inference(forward_demodulation,[],[f5648,f373])).
fof(f5648,plain,(
  ( ! [X19,X18] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X18),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X19))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X18),s('type.rat.rat',X19))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X18),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X19)))))) ) | $spl46),
  inference(superposition,[],[f5092,f373])).
fof(f5647,plain,(
  ( ! [X17,X15,X16] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X15),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X16),s('type.rat.rat',X17))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X17),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X15),s('type.rat.rat',X16))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X15),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X16),s('type.rat.rat',X17)))))) ) | $spl46),
  inference(superposition,[],[f5092,f1385])).
fof(f5646,plain,(
  ( ! [X14,X12,X13] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X12),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X13),s('type.rat.rat',X14))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X13),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X14),s('type.rat.rat',X12))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X12),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X13),s('type.rat.rat',X14)))))) ) | $spl46),
  inference(superposition,[],[f5092,f1385])).
fof(f5805,plain,(
  ( ! [X6,X5] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X5),s('type.rat.rat',X6))),s('type.rat.rat',X5))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X5),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X6),s('type.rat.rat',X5))),s('type.rat.rat',X6))))) | s('type.rat.rat',X5) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl46),
  inference(forward_demodulation,[],[f5643,f1409])).
fof(f5643,plain,(
  ( ! [X6,X5] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X5),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X6),s('type.rat.rat',X5))),s('type.rat.rat',X6))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X5),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X6),s('type.rat.rat',X5))))) | s('type.rat.rat',X5) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl46),
  inference(superposition,[],[f5092,f1468])).
fof(f5640,plain,(
  ( ! [X0,X1] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X0),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X1),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X1),s('type.rat.rat',X0))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X0),s('type.rat.rat',X1)))) ) | $spl46),
  inference(superposition,[],[f5092,f372])).
fof(f5796,plain,(
  ( ! [X39,X37,X38,X40] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X40),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X37),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X38),s('type.rat.rat',X39))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X40),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X38),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X37),s('type.rat.rat',X39))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X40),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X38),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X37),s('type.rat.rat',X39)))))))))))) ) | $spl46),
  inference(forward_demodulation,[],[f5636,f420])).
fof(f5636,plain,(
  ( ! [X39,X37,X38,X40] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X40),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X38),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X37),s('type.rat.rat',X39))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X40),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X38),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X37),s('type.rat.rat',X39))))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X40),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X37),s('type.rat.rat',X38))),s('type.rat.rat',X39)))))) ) | $spl46),
  inference(superposition,[],[f5092,f1375])).
fof(f5788,plain,(
  ( ! [X28,X26,X27] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X28),s('type.rat.rat',X26))),s('type.rat.rat',X27))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X28),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X26),s('type.rat.rat',X27))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X28),s('type.rat.rat',X26))),s('type.rat.rat',X27)))))))) ) | $spl46),
  inference(forward_demodulation,[],[f5787,f1409])).
fof(f5787,plain,(
  ( ! [X28,X26,X27] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X28),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X26),s('type.rat.rat',X27))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X28),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X26),s('type.rat.rat',X27))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X28),s('type.rat.rat',X26))),s('type.rat.rat',X27)))))))) ) | $spl46),
  inference(forward_demodulation,[],[f5786,f373])).
fof(f5786,plain,(
  ( ! [X28,X26,X27] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X28),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X26),s('type.rat.rat',X27))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X28),s('type.rat.rat',X26))),s('type.rat.rat',X27))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X28),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X26),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X27)))))))) ) | $spl46),
  inference(forward_demodulation,[],[f5632,f1409])).
fof(f5632,plain,(
  ( ! [X28,X26,X27] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X28),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X26),s('type.rat.rat',X27))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X28),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X26),s('type.rat.rat',X27))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X28),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X26),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X27)))))))) ) | $spl46),
  inference(superposition,[],[f5092,f373])).
fof(f5631,plain,(
  ( ! [X24,X23,X25,X22] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X25),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X24),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X22),s('type.rat.rat',X23))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X25),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X24),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X22),s('type.rat.rat',X23))))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X25),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X22),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X23),s('type.rat.rat',X24)))))))) ) | $spl46),
  inference(superposition,[],[f5092,f1385])).
fof(f5630,plain,(
  ( ! [X21,X19,X20,X18] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X21),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X19),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X20),s('type.rat.rat',X18))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X21),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X19),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X20),s('type.rat.rat',X18))))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X21),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X18),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X19),s('type.rat.rat',X20)))))))) ) | $spl46),
  inference(superposition,[],[f5092,f1385])).
fof(f5785,plain,(
  ( ! [X17,X15,X16] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X17),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X15),s('type.rat.rat',X16))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X15),s('type.rat.rat',X16))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X17),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X17))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X15),s('type.rat.rat',X16)))) ) | $spl46),
  inference(forward_demodulation,[],[f5784,f1409])).
fof(f5784,plain,(
  ( ! [X17,X15,X16] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X17),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X17))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X17),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X15),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X16),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X15),s('type.rat.rat',X16))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X15),s('type.rat.rat',X16)))) ) | $spl46),
  inference(forward_demodulation,[],[f5783,f5086])).
fof(f5783,plain,(
  ( ! [X17,X15,X16] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X17),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X17),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X17),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X15),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X16),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X15),s('type.rat.rat',X16))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X15),s('type.rat.rat',X16)))) ) | $spl46),
  inference(forward_demodulation,[],[f5629,f5094])).
fof(f5629,plain,(
  ( ! [X17,X15,X16] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X17),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X17),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X17),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X15),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X16),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X15),s('type.rat.rat',X16))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X15),s('type.rat.rat',X16)))) ) | $spl46),
  inference(superposition,[],[f5092,f5092])).
fof(f5782,plain,(
  ( ! [X14,X12,X13,X11] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X14),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat',X12))))),s('type.rat.rat',X13))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X14),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat',X12))),s('type.rat.rat',X13))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X14),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat',X12))))),s('type.rat.rat',X13)))))))) ) | $spl46),
  inference(forward_demodulation,[],[f5781,f1409])).
fof(f5781,plain,(
  ( ! [X14,X12,X13,X11] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X14),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat',X12))),s('type.rat.rat',X13))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X14),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat',X12))),s('type.rat.rat',X13))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X14),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat',X12))))),s('type.rat.rat',X13)))))))) ) | $spl46),
  inference(forward_demodulation,[],[f5780,f1409])).
fof(f5780,plain,(
  ( ! [X14,X12,X13,X11] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X14),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat',X12))),s('type.rat.rat',X13))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X14),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat',X12))))),s('type.rat.rat',X13))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X14),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X12),s('type.rat.rat',X13)))))))) ) | $spl46),
  inference(forward_demodulation,[],[f5628,f1409])).
fof(f5628,plain,(
  ( ! [X14,X12,X13,X11] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X14),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat',X12))),s('type.rat.rat',X13))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X14),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat',X12))),s('type.rat.rat',X13))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X14),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X12),s('type.rat.rat',X13)))))))) ) | $spl46),
  inference(superposition,[],[f5092,f1409])).
fof(f5779,plain,(
  ( ! [X10,X8,X9] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X10),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X8),s('type.rat.rat',X9))),s('type.rat.rat',X8))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X10),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X9),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X10),s('type.rat.rat',X9))))))) | s('type.rat.rat',X8) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl46),
  inference(forward_demodulation,[],[f5627,f1409])).
fof(f5627,plain,(
  ( ! [X10,X8,X9] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X10),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X9),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X10),s('type.rat.rat',X9))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X10),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X8),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X9),s('type.rat.rat',X8))))))) | s('type.rat.rat',X8) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl46),
  inference(superposition,[],[f5092,f1468])).
fof(f5624,plain,(
  ( ! [X2,X0,X1] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X2),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X1),s('type.rat.rat',X0))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X2),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X1),s('type.rat.rat',X0))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X2),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X0),s('type.rat.rat',X1)))))) ) | $spl46),
  inference(superposition,[],[f5092,f372])).
fof(f5773,plain,(
  ( ! [X43,X41,X44,X42] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X41),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X42),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X43),s('type.rat.rat',X44))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X41),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X42),s('type.rat.rat',X43))))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X44),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X41),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X42),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X43),s('type.rat.rat',X44)))))))))))) ) | $spl46),
  inference(forward_demodulation,[],[f5772,f420])).
fof(f5772,plain,(
  ( ! [X43,X41,X44,X42] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X41),s('type.rat.rat',X42))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X43),s('type.rat.rat',X44))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X41),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X42),s('type.rat.rat',X43))))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X44),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X41),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X42),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X43),s('type.rat.rat',X44)))))))))))) ) | $spl46),
  inference(forward_demodulation,[],[f5771,f420])).
fof(f5771,plain,(
  ( ! [X43,X41,X44,X42] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X41),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X42),s('type.rat.rat',X43))))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X44),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X41),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X42),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X43),s('type.rat.rat',X44))))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X41),s('type.rat.rat',X42))),s('type.rat.rat',X43))),s('type.rat.rat',X44)))) ) | $spl46),
  inference(forward_demodulation,[],[f5770,f420])).
fof(f5770,plain,(
  ( ! [X43,X41,X44,X42] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X41),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X42),s('type.rat.rat',X43))))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X44),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X41),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X42),s('type.rat.rat',X43))),s('type.rat.rat',X44))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X41),s('type.rat.rat',X42))),s('type.rat.rat',X43))),s('type.rat.rat',X44)))) ) | $spl46),
  inference(forward_demodulation,[],[f5621,f420])).
fof(f5621,plain,(
  ( ! [X43,X41,X44,X42] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X41),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X42),s('type.rat.rat',X43))))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X44),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X41),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X42),s('type.rat.rat',X43))))),s('type.rat.rat',X44))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X41),s('type.rat.rat',X42))),s('type.rat.rat',X43))),s('type.rat.rat',X44)))) ) | $spl46),
  inference(superposition,[],[f5092,f420])).
fof(f5769,plain,(
  ( ! [X39,X37,X38,X40] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X37),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X38),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X39),s('type.rat.rat',X40))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X38),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X37),s('type.rat.rat',X39))))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X40),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X38),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X37),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X39),s('type.rat.rat',X40)))))))))))) ) | $spl46),
  inference(forward_demodulation,[],[f5768,f420])).
fof(f5768,plain,(
  ( ! [X39,X37,X38,X40] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X37),s('type.rat.rat',X38))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X39),s('type.rat.rat',X40))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X38),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X37),s('type.rat.rat',X39))))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X40),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X38),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X37),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X39),s('type.rat.rat',X40)))))))))))) ) | $spl46),
  inference(forward_demodulation,[],[f5767,f420])).
fof(f5767,plain,(
  ( ! [X39,X37,X38,X40] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X38),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X37),s('type.rat.rat',X39))))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X40),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X38),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X37),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X39),s('type.rat.rat',X40))))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X37),s('type.rat.rat',X38))),s('type.rat.rat',X39))),s('type.rat.rat',X40)))) ) | $spl46),
  inference(forward_demodulation,[],[f5766,f420])).
fof(f5766,plain,(
  ( ! [X39,X37,X38,X40] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X38),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X37),s('type.rat.rat',X39))))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X40),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X38),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X37),s('type.rat.rat',X39))),s('type.rat.rat',X40))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X37),s('type.rat.rat',X38))),s('type.rat.rat',X39))),s('type.rat.rat',X40)))) ) | $spl46),
  inference(forward_demodulation,[],[f5620,f420])).
fof(f5620,plain,(
  ( ! [X39,X37,X38,X40] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X38),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X37),s('type.rat.rat',X39))))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X40),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X38),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X37),s('type.rat.rat',X39))))),s('type.rat.rat',X40))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X37),s('type.rat.rat',X38))),s('type.rat.rat',X39))),s('type.rat.rat',X40)))) ) | $spl46),
  inference(superposition,[],[f5092,f1375])).
fof(f5757,plain,(
  ( ! [X28,X26,X27] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X26),s('type.rat.rat',X28))),s('type.rat.rat',X27))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X26),s('type.rat.rat',X27))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X28),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X26),s('type.rat.rat',X28))),s('type.rat.rat',X27)))))))) ) | $spl46),
  inference(forward_demodulation,[],[f5756,f1409])).
fof(f5756,plain,(
  ( ! [X28,X26,X27] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X26),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X28),s('type.rat.rat',X27))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X26),s('type.rat.rat',X27))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X28),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X26),s('type.rat.rat',X28))),s('type.rat.rat',X27)))))))) ) | $spl46),
  inference(forward_demodulation,[],[f5755,f1340])).
fof(f5755,plain,(
  ( ! [X28,X26,X27] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X26),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X27))),s('type.rat.rat',X28))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X26),s('type.rat.rat',X27))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X28),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X26),s('type.rat.rat',X28))),s('type.rat.rat',X27)))))))) ) | $spl46),
  inference(forward_demodulation,[],[f5754,f420])).
fof(f5754,plain,(
  ( ! [X28,X26,X27] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X26),s('type.rat.rat',X27))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X28),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X26),s('type.rat.rat',X28))),s('type.rat.rat',X27))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X26),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X27))))),s('type.rat.rat',X28)))) ) | $spl46),
  inference(forward_demodulation,[],[f5616,f1410])).
fof(f5616,plain,(
  ( ! [X28,X26,X27] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X26),s('type.rat.rat',X27))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X28),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X26),s('type.rat.rat',X27))),s('type.rat.rat',X28))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X26),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X27))))),s('type.rat.rat',X28)))) ) | $spl46),
  inference(superposition,[],[f5092,f373])).
fof(f5753,plain,(
  ( ! [X24,X23,X25,X22] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X22),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X23),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X24),s('type.rat.rat',X25))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X24),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X22),s('type.rat.rat',X23))))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X25),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X24),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X22),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X23),s('type.rat.rat',X25)))))))))))) ) | $spl46),
  inference(forward_demodulation,[],[f5752,f420])).
fof(f5752,plain,(
  ( ! [X24,X23,X25,X22] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X22),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X23),s('type.rat.rat',X24))),s('type.rat.rat',X25))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X24),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X22),s('type.rat.rat',X23))))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X25),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X24),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X22),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X23),s('type.rat.rat',X25)))))))))))) ) | $spl46),
  inference(forward_demodulation,[],[f5751,f420])).
fof(f5751,plain,(
  ( ! [X24,X23,X25,X22] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X24),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X22),s('type.rat.rat',X23))))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X25),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X24),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X22),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X23),s('type.rat.rat',X25))))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X22),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X23),s('type.rat.rat',X24))))),s('type.rat.rat',X25)))) ) | $spl46),
  inference(forward_demodulation,[],[f5750,f420])).
fof(f5750,plain,(
  ( ! [X24,X23,X25,X22] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X24),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X22),s('type.rat.rat',X23))))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X25),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X24),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X22),s('type.rat.rat',X23))),s('type.rat.rat',X25))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X22),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X23),s('type.rat.rat',X24))))),s('type.rat.rat',X25)))) ) | $spl46),
  inference(forward_demodulation,[],[f5615,f420])).
fof(f5615,plain,(
  ( ! [X24,X23,X25,X22] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X24),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X22),s('type.rat.rat',X23))))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X25),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X24),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X22),s('type.rat.rat',X23))))),s('type.rat.rat',X25))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X22),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X23),s('type.rat.rat',X24))))),s('type.rat.rat',X25)))) ) | $spl46),
  inference(superposition,[],[f5092,f1385])).
fof(f5749,plain,(
  ( ! [X21,X19,X20,X18] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X18),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X19),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X20),s('type.rat.rat',X21))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X19),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X20),s('type.rat.rat',X18))))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X21),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X19),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X20),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X18),s('type.rat.rat',X21)))))))))))) ) | $spl46),
  inference(forward_demodulation,[],[f5748,f420])).
fof(f5748,plain,(
  ( ! [X21,X19,X20,X18] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X18),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X19),s('type.rat.rat',X20))),s('type.rat.rat',X21))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X19),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X20),s('type.rat.rat',X18))))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X21),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X19),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X20),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X18),s('type.rat.rat',X21)))))))))))) ) | $spl46),
  inference(forward_demodulation,[],[f5747,f420])).
fof(f5747,plain,(
  ( ! [X21,X19,X20,X18] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X19),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X20),s('type.rat.rat',X18))))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X21),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X19),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X20),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X18),s('type.rat.rat',X21))))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X18),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X19),s('type.rat.rat',X20))))),s('type.rat.rat',X21)))) ) | $spl46),
  inference(forward_demodulation,[],[f5746,f420])).
fof(f5746,plain,(
  ( ! [X21,X19,X20,X18] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X19),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X20),s('type.rat.rat',X18))))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X21),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X19),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X20),s('type.rat.rat',X18))),s('type.rat.rat',X21))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X18),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X19),s('type.rat.rat',X20))))),s('type.rat.rat',X21)))) ) | $spl46),
  inference(forward_demodulation,[],[f5614,f420])).
fof(f5614,plain,(
  ( ! [X21,X19,X20,X18] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X19),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X20),s('type.rat.rat',X18))))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X21),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X19),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X20),s('type.rat.rat',X18))))),s('type.rat.rat',X21))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X18),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X19),s('type.rat.rat',X20))))),s('type.rat.rat',X21)))) ) | $spl46),
  inference(superposition,[],[f5092,f1385])).
fof(f5745,plain,(
  ( ! [X17,X15,X16] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X15),s('type.rat.rat',X16))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X15),s('type.rat.rat',X16))))),s('type.rat.rat',X17))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X17),s('type.rat.rat',X17))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X15),s('type.rat.rat',X16)))) ) | $spl46),
  inference(forward_demodulation,[],[f5744,f1409])).
fof(f5744,plain,(
  ( ! [X17,X15,X16] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X17),s('type.rat.rat',X17))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X15),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X16),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X15),s('type.rat.rat',X16))))))),s('type.rat.rat',X17))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X15),s('type.rat.rat',X16)))) ) | $spl46),
  inference(forward_demodulation,[],[f5613,f5088])).
fof(f5613,plain,(
  ( ! [X17,X15,X16] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X17),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat',X17))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X15),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X16),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X15),s('type.rat.rat',X16))))))),s('type.rat.rat',X17))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X15),s('type.rat.rat',X16)))) ) | $spl46),
  inference(superposition,[],[f5092,f5092])).
fof(f5743,plain,(
  ( ! [X14,X12,X13,X11] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X12),s('type.rat.rat',X14))))),s('type.rat.rat',X13))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat',X12))),s('type.rat.rat',X13))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X14),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X12),s('type.rat.rat',X14))))),s('type.rat.rat',X13)))))))) ) | $spl46),
  inference(forward_demodulation,[],[f5742,f1409])).
fof(f5742,plain,(
  ( ! [X14,X12,X13,X11] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X12),s('type.rat.rat',X14))),s('type.rat.rat',X13))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat',X12))),s('type.rat.rat',X13))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X14),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X12),s('type.rat.rat',X14))))),s('type.rat.rat',X13)))))))) ) | $spl46),
  inference(forward_demodulation,[],[f5741,f1410])).
fof(f5741,plain,(
  ( ! [X14,X12,X13,X11] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X12),s('type.rat.rat',X13))),s('type.rat.rat',X14))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat',X12))),s('type.rat.rat',X13))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X14),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X12),s('type.rat.rat',X14))))),s('type.rat.rat',X13)))))))) ) | $spl46),
  inference(forward_demodulation,[],[f5740,f420])).
fof(f5740,plain,(
  ( ! [X14,X12,X13,X11] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat',X12))),s('type.rat.rat',X13))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X14),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X12),s('type.rat.rat',X14))))),s('type.rat.rat',X13))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X12),s('type.rat.rat',X13))))),s('type.rat.rat',X14)))) ) | $spl46),
  inference(forward_demodulation,[],[f5739,f420])).
fof(f5739,plain,(
  ( ! [X14,X12,X13,X11] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat',X12))),s('type.rat.rat',X13))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X14),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat',X12))),s('type.rat.rat',X14))),s('type.rat.rat',X13))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X12),s('type.rat.rat',X13))))),s('type.rat.rat',X14)))) ) | $spl46),
  inference(forward_demodulation,[],[f5612,f1410])).
fof(f5612,plain,(
  ( ! [X14,X12,X13,X11] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat',X12))),s('type.rat.rat',X13))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X14),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat',X12))),s('type.rat.rat',X13))),s('type.rat.rat',X14))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X12),s('type.rat.rat',X13))))),s('type.rat.rat',X14)))) ) | $spl46),
  inference(superposition,[],[f5092,f1409])).
fof(f5738,plain,(
  ( ! [X10,X8,X9] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X8),s('type.rat.rat',X9))),s('type.rat.rat',X8))),s('type.rat.rat',X10))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X9),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X10),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X9),s('type.rat.rat',X10))))))) | s('type.rat.rat',X8) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl46),
  inference(forward_demodulation,[],[f5611,f1409])).
fof(f5611,plain,(
  ( ! [X10,X8,X9] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X9),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X10),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X9),s('type.rat.rat',X10))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X8),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X9),s('type.rat.rat',X8))))),s('type.rat.rat',X10))) | s('type.rat.rat',X8) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl46),
  inference(superposition,[],[f5092,f1468])).
fof(f5733,plain,(
  ( ! [X2,X0,X1] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X0),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X1),s('type.rat.rat',X2))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X1),s('type.rat.rat',X0))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X2),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X1),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X0),s('type.rat.rat',X2)))))))))) ) | $spl46),
  inference(forward_demodulation,[],[f5732,f420])).
fof(f5732,plain,(
  ( ! [X2,X0,X1] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X1),s('type.rat.rat',X0))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X2),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X1),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X0),s('type.rat.rat',X2))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X0),s('type.rat.rat',X1))),s('type.rat.rat',X2)))) ) | $spl46),
  inference(forward_demodulation,[],[f5608,f420])).
fof(f5608,plain,(
  ( ! [X2,X0,X1] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X1),s('type.rat.rat',X0))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X2),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X1),s('type.rat.rat',X0))),s('type.rat.rat',X2))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X0),s('type.rat.rat',X1))),s('type.rat.rat',X2)))) ) | $spl46),
  inference(superposition,[],[f5092,f372])).
fof(f5449,plain,(
  ( ! [X2,X3] : (s('type.rat.rat',X3) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X3),s('type.rat.rat',X2))),s('type.rat.rat',X2))) | s('type.rat.rat',X2) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl46),
  inference(forward_demodulation,[],[f5380,f5086])).
fof(f5380,plain,(
  ( ! [X2,X3] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X3),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X3),s('type.rat.rat',X2))),s('type.rat.rat',X2))) | s('type.rat.rat',X2) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl46),
  inference(superposition,[],[f1409,f5091])).
fof(f5445,plain,(
  ( ! [X24,X23,X22] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X22),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X23),s('type.rat.rat',X24))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X23),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X22),s('type.rat.rat',X24))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X23),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X22),s('type.rat.rat',X24)))))))) ) | $spl46),
  inference(forward_demodulation,[],[f5375,f420])).
fof(f5375,plain,(
  ( ! [X24,X23,X22] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X23),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X22),s('type.rat.rat',X24))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X23),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X22),s('type.rat.rat',X24))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X22),s('type.rat.rat',X23))),s('type.rat.rat',X24)))) ) | $spl46),
  inference(superposition,[],[f5091,f1375])).
fof(f5373,plain,(
  ( ! [X18] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X18),s('type.rat.rat',X18))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat',X18)))) ) | $spl46),
  inference(superposition,[],[f5091,f5088])).
fof(f5371,plain,(
  ( ! [X14,X15,X13] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X15),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X13),s('type.rat.rat',X14))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X15),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X13),s('type.rat.rat',X14))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X13),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X14),s('type.rat.rat',X15)))))) ) | $spl46),
  inference(superposition,[],[f5091,f1385])).
fof(f5370,plain,(
  ( ! [X12,X10,X11] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X12),s('type.rat.rat',X10))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X12),s('type.rat.rat',X10))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X10),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat',X12)))))) ) | $spl46),
  inference(superposition,[],[f5091,f1385])).
fof(f5368,plain,(
  ( ! [X6,X5] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X6),s('type.rat.rat',X6))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X5),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X6),s('type.rat.rat',X5))))) | s('type.rat.rat',X5) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl46),
  inference(superposition,[],[f5091,f1468])).
fof(f5367,plain,(
  ( ! [X4] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X4),s('type.rat.rat',X4))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X4),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) ) | $spl46),
  inference(superposition,[],[f5091,f5086])).
fof(f5365,plain,(
  ( ! [X0,X1] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X1),s('type.rat.rat',X0))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X1),s('type.rat.rat',X0))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X0),s('type.rat.rat',X1)))) ) | $spl46),
  inference(superposition,[],[f5091,f372])).
fof(f5105,plain,(
  ( ! [X6,X7] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X7),s('type.rat.rat',X6))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X6),s('type.rat.rat',X7)))))) ) | $spl46),
  inference(backward_demodulation,[],[f2896,f5017])).
fof(f5104,plain,(
  ( ! [X8,X7] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X8),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X7),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X7),s('type.rat.rat',X8))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X7),s('type.rat.rat',X8)))) ) | $spl46),
  inference(backward_demodulation,[],[f2896,f4880])).
fof(f5103,plain,(
  ( ! [X6,X5] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X5),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X5),s('type.rat.rat',X6))))),s('type.rat.rat',X6))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X5),s('type.rat.rat',X6)))) ) | $spl46),
  inference(backward_demodulation,[],[f2896,f4879])).
fof(f5102,plain,(
  ( ! [X24,X23,X25] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X24),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X23),s('type.rat.rat',X25))))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X24),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X23),s('type.rat.rat',X25))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X23),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X24),s('type.rat.rat',X25)))))) ) | $spl46),
  inference(backward_demodulation,[],[f2896,f4875])).
fof(f5101,plain,(
  ( ! [X11] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X11))))),s('type.rat.rat',X11))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X11)))) ) | $spl46),
  inference(backward_demodulation,[],[f2896,f4800])).
fof(f5100,plain,(
  ( ! [X14,X15,X13] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X15),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X13),s('type.rat.rat',X14))))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X15),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X13),s('type.rat.rat',X14))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X13),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X14),s('type.rat.rat',X15)))))) ) | $spl46),
  inference(backward_demodulation,[],[f2896,f4787])).
fof(f5099,plain,(
  ( ! [X12,X10,X11] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X12),s('type.rat.rat',X10))))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X12),s('type.rat.rat',X10))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X10),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat',X12)))))) ) | $spl46),
  inference(backward_demodulation,[],[f2896,f4786])).
fof(f5098,plain,(
  ( ! [X6,X5] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X6),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X6))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X5),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X6),s('type.rat.rat',X5))))) | s('type.rat.rat',X5) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl46),
  inference(backward_demodulation,[],[f2896,f4784])).
fof(f5110,plain,(
  ( ! [X6] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat',X6))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X6),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X6)))))) ) | $spl46),
  inference(forward_demodulation,[],[f5095,f2896])).
fof(f5095,plain,(
  ( ! [X6] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X6),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X6))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.rat.rat',X6)))) ) | $spl46),
  inference(backward_demodulation,[],[f2896,f2861])).
fof(f5094,plain,(
  ( ! [X3] : (s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X3))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat',X3)))) ) | $spl46),
  inference(backward_demodulation,[],[f2896,f2853])).
fof(f5092,plain,(
  ( ! [X4,X5] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X4),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X5),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X4),s('type.rat.rat',X5))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X4),s('type.rat.rat',X5)))) ) | $spl46),
  inference(backward_demodulation,[],[f2896,f1466])).
fof(f5091,plain,(
  ( ! [X0] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X0),s('type.rat.rat',X0))) | s('type.rat.rat',X0) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl46),
  inference(backward_demodulation,[],[f2896,f1440])).
fof(f5089,plain,(
  ( ! [X0,X1] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X1),s('type.rat.rat',X0))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X1),s('type.rat.rat',X0))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X0),s('type.rat.rat',X1)))) ) | $spl46),
  inference(backward_demodulation,[],[f2896,f1434])).
fof(f5088,plain,(
  ( ! [X1] : (s('type.rat.rat',X1) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat',X1)))) ) | $spl46),
  inference(backward_demodulation,[],[f2896,f1308])).
fof(f5086,plain,(
  ( ! [X0] : (s('type.rat.rat',X0) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X0),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) ) | $spl46),
  inference(backward_demodulation,[],[f2896,f295])).
fof(f4639,plain,(
  ( ! [X196,X197,X195] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X195),s('type.rat.rat',X196))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X195),s('type.rat.rat',X196))))),s('type.rat.rat',X197))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X197),s('type.rat.rat',X197))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X196),s('type.rat.rat',X195)))) ) | $spl46),
  inference(forward_demodulation,[],[f4638,f373])).
fof(f4638,plain,(
  ( ! [X196,X197,X195] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X197),s('type.rat.rat',X197))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X195),s('type.rat.rat',X196))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X195),s('type.rat.rat',X196))))))),s('type.rat.rat',X197))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X196),s('type.rat.rat',X195)))) ) | $spl46),
  inference(forward_demodulation,[],[f4530,f2902])).
fof(f4530,plain,(
  ( ! [X196,X197,X195] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X197),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat',X197))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X195),s('type.rat.rat',X196))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X195),s('type.rat.rat',X196))))))),s('type.rat.rat',X197))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X196),s('type.rat.rat',X195)))) ) | $spl46),
  inference(superposition,[],[f2906,f2903])).
fof(f4636,plain,(
  ( ! [X23,X21,X22] : (s('type.rat.rat',X23) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X21),s('type.rat.rat',X22))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X23),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X21),s('type.rat.rat',X22))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X22),s('type.rat.rat',X21)))) ) | $spl46),
  inference(forward_demodulation,[],[f4471,f2900])).
fof(f4471,plain,(
  ( ! [X23,X21,X22] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X23),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X21),s('type.rat.rat',X22))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X23),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X21),s('type.rat.rat',X22))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X22),s('type.rat.rat',X21)))) ) | $spl46),
  inference(superposition,[],[f1385,f2903])).
fof(f4633,plain,(
  ( ! [X17,X15,X16] : (s('type.rat.rat',X17) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X15),s('type.rat.rat',X16))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X15),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X16),s('type.rat.rat',X17))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X16),s('type.rat.rat',X15)))) ) | $spl46),
  inference(forward_demodulation,[],[f4632,f2902])).
fof(f4632,plain,(
  ( ! [X17,X15,X16] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat',X17))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X15),s('type.rat.rat',X16))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X15),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X16),s('type.rat.rat',X17))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X16),s('type.rat.rat',X15)))) ) | $spl46),
  inference(forward_demodulation,[],[f4469,f420])).
fof(f4469,plain,(
  ( ! [X17,X15,X16] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat',X17))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X15),s('type.rat.rat',X16))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X15),s('type.rat.rat',X16))),s('type.rat.rat',X17))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X16),s('type.rat.rat',X15)))) ) | $spl46),
  inference(superposition,[],[f1375,f2903])).
fof(f4627,plain,(
  ( ! [X4,X5] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X4),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X5),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X4),s('type.rat.rat',X5))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X5),s('type.rat.rat',X4)))) ) | $spl46),
  inference(forward_demodulation,[],[f4463,f373])).
fof(f4463,plain,(
  ( ! [X4,X5] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X4),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X5),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X4),s('type.rat.rat',X5))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X5),s('type.rat.rat',X4)))) ) | $spl46),
  inference(superposition,[],[f2903,f420])).
fof(f4449,plain,(
  ( ! [X6,X5] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X6),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X6))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X6),s('type.rat.rat',X5))),s('type.rat.rat',X5))) | s('type.rat.rat',X5) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl46),
  inference(superposition,[],[f2903,f1468])).
fof(f4603,plain,(
  ( ! [X47,X45,X46] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X45),s('type.rat.rat',X46))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X45),s('type.rat.rat',X46))))),s('type.rat.rat',X47))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X47),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X47))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X46),s('type.rat.rat',X45)))) ) | $spl46),
  inference(forward_demodulation,[],[f4602,f373])).
fof(f4602,plain,(
  ( ! [X47,X45,X46] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X47),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X47))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X45),s('type.rat.rat',X46))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X45),s('type.rat.rat',X46))))))),s('type.rat.rat',X47))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X46),s('type.rat.rat',X45)))) ) | $spl46),
  inference(forward_demodulation,[],[f4443,f2900])).
fof(f4443,plain,(
  ( ! [X47,X45,X46] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X47),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X47),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X45),s('type.rat.rat',X46))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X45),s('type.rat.rat',X46))))))),s('type.rat.rat',X47))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X46),s('type.rat.rat',X45)))) ) | $spl46),
  inference(superposition,[],[f2903,f2903])).
fof(f4601,plain,(
  ( ! [X43,X41,X44,X42] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X41),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X42),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X43),s('type.rat.rat',X44))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X44),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X41),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X42),s('type.rat.rat',X43))))))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X44),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X41),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X42),s('type.rat.rat',X43)))))))))))) ) | $spl46),
  inference(forward_demodulation,[],[f4600,f420])).
fof(f4600,plain,(
  ( ! [X43,X41,X44,X42] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X41),s('type.rat.rat',X42))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X43),s('type.rat.rat',X44))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X44),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X41),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X42),s('type.rat.rat',X43))))))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X44),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X41),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X42),s('type.rat.rat',X43)))))))))))) ) | $spl46),
  inference(forward_demodulation,[],[f4442,f420])).
fof(f4442,plain,(
  ( ! [X43,X41,X44,X42] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X44),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X41),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X42),s('type.rat.rat',X43))))))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X44),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X41),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X42),s('type.rat.rat',X43))))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X41),s('type.rat.rat',X42))),s('type.rat.rat',X43))),s('type.rat.rat',X44)))) ) | $spl46),
  inference(superposition,[],[f2903,f420])).
fof(f4599,plain,(
  ( ! [X39,X37,X38,X40] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X37),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X38),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X39),s('type.rat.rat',X40))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X40),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X38),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X37),s('type.rat.rat',X39))))))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X40),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X38),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X37),s('type.rat.rat',X39)))))))))))) ) | $spl46),
  inference(forward_demodulation,[],[f4598,f420])).
fof(f4598,plain,(
  ( ! [X39,X37,X38,X40] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X37),s('type.rat.rat',X38))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X39),s('type.rat.rat',X40))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X40),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X38),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X37),s('type.rat.rat',X39))))))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X40),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X38),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X37),s('type.rat.rat',X39)))))))))))) ) | $spl46),
  inference(forward_demodulation,[],[f4441,f420])).
fof(f4441,plain,(
  ( ! [X39,X37,X38,X40] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X40),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X38),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X37),s('type.rat.rat',X39))))))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X40),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X38),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X37),s('type.rat.rat',X39))))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X37),s('type.rat.rat',X38))),s('type.rat.rat',X39))),s('type.rat.rat',X40)))) ) | $spl46),
  inference(superposition,[],[f2903,f1375])).
fof(f4586,plain,(
  ( ! [X24,X23,X25,X22] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X22),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X23),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X24),s('type.rat.rat',X25))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X25),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X24),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X22),s('type.rat.rat',X23))))))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X25),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X24),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X22),s('type.rat.rat',X23)))))))))))) ) | $spl46),
  inference(forward_demodulation,[],[f4585,f420])).
fof(f4585,plain,(
  ( ! [X24,X23,X25,X22] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X22),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X23),s('type.rat.rat',X24))),s('type.rat.rat',X25))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X25),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X24),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X22),s('type.rat.rat',X23))))))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X25),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X24),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X22),s('type.rat.rat',X23)))))))))))) ) | $spl46),
  inference(forward_demodulation,[],[f4436,f420])).
fof(f4436,plain,(
  ( ! [X24,X23,X25,X22] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X25),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X24),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X22),s('type.rat.rat',X23))))))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X25),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X24),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X22),s('type.rat.rat',X23))))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X22),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X23),s('type.rat.rat',X24))))),s('type.rat.rat',X25)))) ) | $spl46),
  inference(superposition,[],[f2903,f1385])).
fof(f4582,plain,(
  ( ! [X17,X15,X16] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X15),s('type.rat.rat',X16))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X15),s('type.rat.rat',X16))))),s('type.rat.rat',X17))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X17),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X17))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X15),s('type.rat.rat',X16)))) ) | $spl46),
  inference(forward_demodulation,[],[f4581,f1409])).
fof(f4581,plain,(
  ( ! [X17,X15,X16] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X17),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X17))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X15),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X16),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X15),s('type.rat.rat',X16))))))),s('type.rat.rat',X17))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X15),s('type.rat.rat',X16)))) ) | $spl46),
  inference(forward_demodulation,[],[f4434,f2900])).
fof(f4434,plain,(
  ( ! [X17,X15,X16] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X17),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X17),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X15),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X16),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X15),s('type.rat.rat',X16))))))),s('type.rat.rat',X17))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X15),s('type.rat.rat',X16)))) ) | $spl46),
  inference(superposition,[],[f2903,f2906])).
fof(f4580,plain,(
  ( ! [X14,X12,X13,X11] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X12),s('type.rat.rat',X14))))),s('type.rat.rat',X13))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X14),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat',X12))))),s('type.rat.rat',X13))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X14),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat',X12))))),s('type.rat.rat',X13)))))))) ) | $spl46),
  inference(forward_demodulation,[],[f4579,f1409])).
fof(f4579,plain,(
  ( ! [X14,X12,X13,X11] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X12),s('type.rat.rat',X14))),s('type.rat.rat',X13))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X14),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat',X12))))),s('type.rat.rat',X13))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X14),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat',X12))))),s('type.rat.rat',X13)))))))) ) | $spl46),
  inference(forward_demodulation,[],[f4578,f1410])).
fof(f4578,plain,(
  ( ! [X14,X12,X13,X11] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X12),s('type.rat.rat',X13))),s('type.rat.rat',X14))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X14),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat',X12))))),s('type.rat.rat',X13))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X14),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat',X12))))),s('type.rat.rat',X13)))))))) ) | $spl46),
  inference(forward_demodulation,[],[f4577,f420])).
fof(f4577,plain,(
  ( ! [X14,X12,X13,X11] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X14),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat',X12))))),s('type.rat.rat',X13))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X14),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat',X12))))),s('type.rat.rat',X13))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X12),s('type.rat.rat',X13))))),s('type.rat.rat',X14)))) ) | $spl46),
  inference(forward_demodulation,[],[f4433,f1409])).
fof(f4433,plain,(
  ( ! [X14,X12,X13,X11] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X14),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat',X12))),s('type.rat.rat',X13))))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X14),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat',X12))),s('type.rat.rat',X13))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X12),s('type.rat.rat',X13))))),s('type.rat.rat',X14)))) ) | $spl46),
  inference(superposition,[],[f2903,f1409])).
fof(f4576,plain,(
  ( ! [X10,X8,X9] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X8),s('type.rat.rat',X9))),s('type.rat.rat',X8))),s('type.rat.rat',X10))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X10),s('type.rat.rat',X9))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X10),s('type.rat.rat',X9))))))) | s('type.rat.rat',X8) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl46),
  inference(forward_demodulation,[],[f4432,f1409])).
fof(f4432,plain,(
  ( ! [X10,X8,X9] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X10),s('type.rat.rat',X9))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X10),s('type.rat.rat',X9))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X8),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X9),s('type.rat.rat',X8))))),s('type.rat.rat',X10))) | s('type.rat.rat',X8) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl46),
  inference(superposition,[],[f2903,f1468])).
fof(f4567,plain,(
  ( ! [X47,X45,X46] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X47),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X45),s('type.rat.rat',X46))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X45),s('type.rat.rat',X46))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X47),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X47))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X46),s('type.rat.rat',X45)))) ) | $spl46),
  inference(forward_demodulation,[],[f4566,f373])).
fof(f4566,plain,(
  ( ! [X47,X45,X46] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X47),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X47))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X47),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X45),s('type.rat.rat',X46))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X45),s('type.rat.rat',X46))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X46),s('type.rat.rat',X45)))) ) | $spl46),
  inference(forward_demodulation,[],[f4426,f2902])).
fof(f4426,plain,(
  ( ! [X47,X45,X46] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat',X47))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat',X47))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X47),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X45),s('type.rat.rat',X46))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X45),s('type.rat.rat',X46))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X46),s('type.rat.rat',X45)))) ) | $spl46),
  inference(superposition,[],[f2903,f2903])).
fof(f4565,plain,(
  ( ! [X43,X41,X44,X42] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X44),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X41),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X42),s('type.rat.rat',X43))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X41),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X42),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X43),s('type.rat.rat',X44))))))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X41),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X42),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X43),s('type.rat.rat',X44)))))))))))) ) | $spl46),
  inference(forward_demodulation,[],[f4564,f420])).
fof(f4564,plain,(
  ( ! [X43,X41,X44,X42] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X41),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X42),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X43),s('type.rat.rat',X44))))))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X41),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X42),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X43),s('type.rat.rat',X44))))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X44),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X41),s('type.rat.rat',X42))),s('type.rat.rat',X43)))))) ) | $spl46),
  inference(forward_demodulation,[],[f4563,f420])).
fof(f4563,plain,(
  ( ! [X43,X41,X44,X42] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X41),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X42),s('type.rat.rat',X43))),s('type.rat.rat',X44))))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X41),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X42),s('type.rat.rat',X43))),s('type.rat.rat',X44))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X44),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X41),s('type.rat.rat',X42))),s('type.rat.rat',X43)))))) ) | $spl46),
  inference(forward_demodulation,[],[f4425,f420])).
fof(f4425,plain,(
  ( ! [X43,X41,X44,X42] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X41),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X42),s('type.rat.rat',X43))))),s('type.rat.rat',X44))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X41),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X42),s('type.rat.rat',X43))))),s('type.rat.rat',X44))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X44),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X41),s('type.rat.rat',X42))),s('type.rat.rat',X43)))))) ) | $spl46),
  inference(superposition,[],[f2903,f420])).
fof(f4562,plain,(
  ( ! [X39,X37,X38,X40] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X40),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X37),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X38),s('type.rat.rat',X39))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X38),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X37),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X39),s('type.rat.rat',X40))))))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X38),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X37),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X39),s('type.rat.rat',X40)))))))))))) ) | $spl46),
  inference(forward_demodulation,[],[f4561,f420])).
fof(f4561,plain,(
  ( ! [X39,X37,X38,X40] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X38),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X37),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X39),s('type.rat.rat',X40))))))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X38),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X37),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X39),s('type.rat.rat',X40))))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X40),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X37),s('type.rat.rat',X38))),s('type.rat.rat',X39)))))) ) | $spl46),
  inference(forward_demodulation,[],[f4560,f420])).
fof(f4560,plain,(
  ( ! [X39,X37,X38,X40] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X38),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X37),s('type.rat.rat',X39))),s('type.rat.rat',X40))))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X38),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X37),s('type.rat.rat',X39))),s('type.rat.rat',X40))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X40),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X37),s('type.rat.rat',X38))),s('type.rat.rat',X39)))))) ) | $spl46),
  inference(forward_demodulation,[],[f4424,f420])).
fof(f4424,plain,(
  ( ! [X39,X37,X38,X40] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X38),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X37),s('type.rat.rat',X39))))),s('type.rat.rat',X40))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X38),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X37),s('type.rat.rat',X39))))),s('type.rat.rat',X40))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X40),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X37),s('type.rat.rat',X38))),s('type.rat.rat',X39)))))) ) | $spl46),
  inference(superposition,[],[f2903,f1375])).
fof(f4552,plain,(
  ( ! [X28,X26,X27] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X28),s('type.rat.rat',X26))),s('type.rat.rat',X27))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X26),s('type.rat.rat',X28))),s('type.rat.rat',X27))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X26),s('type.rat.rat',X28))),s('type.rat.rat',X27)))))))) ) | $spl46),
  inference(forward_demodulation,[],[f4551,f1409])).
fof(f4551,plain,(
  ( ! [X28,X26,X27] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X28),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X26),s('type.rat.rat',X27))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X26),s('type.rat.rat',X28))),s('type.rat.rat',X27))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X26),s('type.rat.rat',X28))),s('type.rat.rat',X27)))))))) ) | $spl46),
  inference(forward_demodulation,[],[f4550,f373])).
fof(f4550,plain,(
  ( ! [X28,X26,X27] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X26),s('type.rat.rat',X28))),s('type.rat.rat',X27))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X26),s('type.rat.rat',X28))),s('type.rat.rat',X27))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X28),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X26),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X27)))))))) ) | $spl46),
  inference(forward_demodulation,[],[f4420,f1410])).
fof(f4420,plain,(
  ( ! [X28,X26,X27] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X26),s('type.rat.rat',X27))),s('type.rat.rat',X28))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X26),s('type.rat.rat',X27))),s('type.rat.rat',X28))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X28),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X26),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X27)))))))) ) | $spl46),
  inference(superposition,[],[f2903,f373])).
fof(f4549,plain,(
  ( ! [X24,X23,X25,X22] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X24),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X22),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X23),s('type.rat.rat',X25))))))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X24),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X22),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X23),s('type.rat.rat',X25))))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X25),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X22),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X23),s('type.rat.rat',X24)))))))) ) | $spl46),
  inference(forward_demodulation,[],[f4548,f420])).
fof(f4548,plain,(
  ( ! [X24,X23,X25,X22] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X24),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X22),s('type.rat.rat',X23))),s('type.rat.rat',X25))))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X24),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X22),s('type.rat.rat',X23))),s('type.rat.rat',X25))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X25),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X22),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X23),s('type.rat.rat',X24)))))))) ) | $spl46),
  inference(forward_demodulation,[],[f4419,f420])).
fof(f4419,plain,(
  ( ! [X24,X23,X25,X22] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X24),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X22),s('type.rat.rat',X23))))),s('type.rat.rat',X25))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X24),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X22),s('type.rat.rat',X23))))),s('type.rat.rat',X25))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X25),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X22),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X23),s('type.rat.rat',X24)))))))) ) | $spl46),
  inference(superposition,[],[f2903,f1385])).
fof(f4547,plain,(
  ( ! [X21,X19,X20,X18] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X19),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X20),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X18),s('type.rat.rat',X21))))))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X19),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X20),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X18),s('type.rat.rat',X21))))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X21),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X18),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X19),s('type.rat.rat',X20)))))))) ) | $spl46),
  inference(forward_demodulation,[],[f4546,f420])).
fof(f4546,plain,(
  ( ! [X21,X19,X20,X18] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X19),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X20),s('type.rat.rat',X18))),s('type.rat.rat',X21))))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X19),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X20),s('type.rat.rat',X18))),s('type.rat.rat',X21))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X21),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X18),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X19),s('type.rat.rat',X20)))))))) ) | $spl46),
  inference(forward_demodulation,[],[f4418,f420])).
fof(f4418,plain,(
  ( ! [X21,X19,X20,X18] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X19),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X20),s('type.rat.rat',X18))))),s('type.rat.rat',X21))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X19),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X20),s('type.rat.rat',X18))))),s('type.rat.rat',X21))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X21),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X18),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X19),s('type.rat.rat',X20)))))))) ) | $spl46),
  inference(superposition,[],[f2903,f1385])).
fof(f4543,plain,(
  ( ! [X14,X12,X13,X11] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X14),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat',X12))))),s('type.rat.rat',X13))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X12),s('type.rat.rat',X14))))),s('type.rat.rat',X13))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X12),s('type.rat.rat',X14))))),s('type.rat.rat',X13)))))))) ) | $spl46),
  inference(forward_demodulation,[],[f4542,f1409])).
fof(f4542,plain,(
  ( ! [X14,X12,X13,X11] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X14),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat',X12))),s('type.rat.rat',X13))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X12),s('type.rat.rat',X14))))),s('type.rat.rat',X13))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X12),s('type.rat.rat',X14))))),s('type.rat.rat',X13)))))))) ) | $spl46),
  inference(forward_demodulation,[],[f4541,f1409])).
fof(f4541,plain,(
  ( ! [X14,X12,X13,X11] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X12),s('type.rat.rat',X14))))),s('type.rat.rat',X13))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X12),s('type.rat.rat',X14))))),s('type.rat.rat',X13))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X14),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X12),s('type.rat.rat',X13)))))))) ) | $spl46),
  inference(forward_demodulation,[],[f4540,f420])).
fof(f4540,plain,(
  ( ! [X14,X12,X13,X11] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat',X12))),s('type.rat.rat',X14))),s('type.rat.rat',X13))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat',X12))),s('type.rat.rat',X14))),s('type.rat.rat',X13))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X14),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X12),s('type.rat.rat',X13)))))))) ) | $spl46),
  inference(forward_demodulation,[],[f4416,f1410])).
fof(f4416,plain,(
  ( ! [X14,X12,X13,X11] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat',X12))),s('type.rat.rat',X13))),s('type.rat.rat',X14))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat',X12))),s('type.rat.rat',X13))),s('type.rat.rat',X14))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X14),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X12),s('type.rat.rat',X13)))))))) ) | $spl46),
  inference(superposition,[],[f2903,f1409])).
fof(f4539,plain,(
  ( ! [X10,X8,X9] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X10),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X8),s('type.rat.rat',X9))),s('type.rat.rat',X8))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X9),s('type.rat.rat',X10))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X9),s('type.rat.rat',X10))))))) | s('type.rat.rat',X8) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl46),
  inference(forward_demodulation,[],[f4415,f1409])).
fof(f4415,plain,(
  ( ! [X10,X8,X9] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X9),s('type.rat.rat',X10))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X9),s('type.rat.rat',X10))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X10),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X8),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X9),s('type.rat.rat',X8))))))) | s('type.rat.rat',X8) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl46),
  inference(superposition,[],[f2903,f1468])).
fof(f4536,plain,(
  ( ! [X2,X0,X1] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X1),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X0),s('type.rat.rat',X2))))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X1),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X0),s('type.rat.rat',X2))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X2),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X0),s('type.rat.rat',X1)))))) ) | $spl46),
  inference(forward_demodulation,[],[f4412,f420])).
fof(f4412,plain,(
  ( ! [X2,X0,X1] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X1),s('type.rat.rat',X0))),s('type.rat.rat',X2))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X1),s('type.rat.rat',X0))),s('type.rat.rat',X2))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X2),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X0),s('type.rat.rat',X1)))))) ) | $spl46),
  inference(superposition,[],[f2903,f372])).
fof(f4374,plain,(
  ( ! [X17,X15,X16] : (s('type.rat.rat',X17) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X16),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X15),s('type.rat.rat',X16))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X17),s('type.rat.rat',X15))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X15),s('type.rat.rat',X16)))) ) | $spl46),
  inference(forward_demodulation,[],[f4209,f2900])).
fof(f4209,plain,(
  ( ! [X17,X15,X16] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X17),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X16),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X15),s('type.rat.rat',X16))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X17),s('type.rat.rat',X15))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X15),s('type.rat.rat',X16)))) ) | $spl46),
  inference(superposition,[],[f1385,f2906])).
fof(f4371,plain,(
  ( ! [X10,X11,X9] : (s('type.rat.rat',X11) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X10),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X9),s('type.rat.rat',X10))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X9),s('type.rat.rat',X11))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X9),s('type.rat.rat',X10)))) ) | $spl46),
  inference(forward_demodulation,[],[f4207,f2902])).
fof(f4207,plain,(
  ( ! [X10,X11,X9] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat',X11))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X10),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X9),s('type.rat.rat',X10))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X9),s('type.rat.rat',X11))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X9),s('type.rat.rat',X10)))) ) | $spl46),
  inference(superposition,[],[f1375,f2906])).
fof(f4363,plain,(
  ( ! [X14,X12,X13] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X12),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X13),s('type.rat.rat',X14))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X13),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X12),s('type.rat.rat',X14))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X12),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X13),s('type.rat.rat',X14)))))))))) ) | $spl46),
  inference(forward_demodulation,[],[f4362,f420])).
fof(f4362,plain,(
  ( ! [X14,X12,X13] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X13),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X12),s('type.rat.rat',X14))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X12),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X13),s('type.rat.rat',X14))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X12),s('type.rat.rat',X13))),s('type.rat.rat',X14)))) ) | $spl46),
  inference(forward_demodulation,[],[f4361,f420])).
fof(f4361,plain,(
  ( ! [X14,X12,X13] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X13),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X12),s('type.rat.rat',X14))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X12),s('type.rat.rat',X13))),s('type.rat.rat',X14))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X12),s('type.rat.rat',X13))),s('type.rat.rat',X14)))) ) | $spl46),
  inference(forward_demodulation,[],[f4202,f1409])).
fof(f4202,plain,(
  ( ! [X14,X12,X13] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X13),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X12),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X14),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X12),s('type.rat.rat',X13))),s('type.rat.rat',X14))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X12),s('type.rat.rat',X13))),s('type.rat.rat',X14)))) ) | $spl46),
  inference(superposition,[],[f2906,f1375])).
fof(f4356,plain,(
  ( ! [X31,X32] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X32),s('type.rat.rat',X31))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X31))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X32),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X32),s('type.rat.rat',X31)))))))) ) | $spl46),
  inference(forward_demodulation,[],[f4198,f1340])).
fof(f4198,plain,(
  ( ! [X31,X32] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X31))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X32),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X32),s('type.rat.rat',X31))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X31))),s('type.rat.rat',X32)))) ) | $spl46),
  inference(superposition,[],[f2906,f1340])).
fof(f4355,plain,(
  ( ! [X30,X28,X29] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X28),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X29),s('type.rat.rat',X30))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X28),s('type.rat.rat',X29))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X30),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X28),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X29),s('type.rat.rat',X30)))))))))) ) | $spl46),
  inference(forward_demodulation,[],[f4197,f420])).
fof(f4197,plain,(
  ( ! [X30,X28,X29] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X28),s('type.rat.rat',X29))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X30),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X28),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X29),s('type.rat.rat',X30))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X28),s('type.rat.rat',X29))),s('type.rat.rat',X30)))) ) | $spl46),
  inference(superposition,[],[f2906,f420])).
fof(f4354,plain,(
  ( ! [X26,X27,X25] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X25),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X26),s('type.rat.rat',X27))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X25),s('type.rat.rat',X26))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X27),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X26),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X25),s('type.rat.rat',X27)))))))))) ) | $spl46),
  inference(forward_demodulation,[],[f4196,f420])).
fof(f4196,plain,(
  ( ! [X26,X27,X25] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X25),s('type.rat.rat',X26))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X27),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X26),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X25),s('type.rat.rat',X27))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X25),s('type.rat.rat',X26))),s('type.rat.rat',X27)))) ) | $spl46),
  inference(superposition,[],[f2906,f1375])).
fof(f4352,plain,(
  ( ! [X21] : (s('type.rat.rat',X21) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X21),s('type.rat.rat',X21)))))) ) | $spl46),
  inference(forward_demodulation,[],[f4194,f2902])).
fof(f4194,plain,(
  ( ! [X21] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X21),s('type.rat.rat',X21))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat',X21)))) ) | $spl46),
  inference(superposition,[],[f2906,f2902])).
fof(f4351,plain,(
  ( ! [X19,X18] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X18),s('type.rat.rat',X19))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X18),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X19))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X18),s('type.rat.rat',X19)))))))) ) | $spl46),
  inference(forward_demodulation,[],[f4192,f373])).
fof(f4192,plain,(
  ( ! [X19,X18] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X18),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X19))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X18),s('type.rat.rat',X19))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X18),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X19)))))) ) | $spl46),
  inference(superposition,[],[f2906,f373])).
fof(f4191,plain,(
  ( ! [X17,X15,X16] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X15),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X16),s('type.rat.rat',X17))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X17),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X15),s('type.rat.rat',X16))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X15),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X16),s('type.rat.rat',X17)))))) ) | $spl46),
  inference(superposition,[],[f2906,f1385])).
fof(f4190,plain,(
  ( ! [X14,X12,X13] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X12),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X13),s('type.rat.rat',X14))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X13),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X14),s('type.rat.rat',X12))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X12),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X13),s('type.rat.rat',X14)))))) ) | $spl46),
  inference(superposition,[],[f2906,f1385])).
fof(f4349,plain,(
  ( ! [X6,X5] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X5),s('type.rat.rat',X6))),s('type.rat.rat',X5))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X5),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X6),s('type.rat.rat',X5))),s('type.rat.rat',X6))))) | s('type.rat.rat',X5) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl46),
  inference(forward_demodulation,[],[f4187,f1409])).
fof(f4187,plain,(
  ( ! [X6,X5] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X5),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X6),s('type.rat.rat',X5))),s('type.rat.rat',X6))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X5),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X6),s('type.rat.rat',X5))))) | s('type.rat.rat',X5) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl46),
  inference(superposition,[],[f2906,f1468])).
fof(f4184,plain,(
  ( ! [X0,X1] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X0),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X1),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X1),s('type.rat.rat',X0))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X0),s('type.rat.rat',X1)))) ) | $spl46),
  inference(superposition,[],[f2906,f372])).
fof(f4340,plain,(
  ( ! [X39,X37,X38,X40] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X40),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X37),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X38),s('type.rat.rat',X39))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X40),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X38),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X37),s('type.rat.rat',X39))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X40),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X38),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X37),s('type.rat.rat',X39)))))))))))) ) | $spl46),
  inference(forward_demodulation,[],[f4180,f420])).
fof(f4180,plain,(
  ( ! [X39,X37,X38,X40] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X40),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X38),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X37),s('type.rat.rat',X39))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X40),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X38),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X37),s('type.rat.rat',X39))))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X40),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X37),s('type.rat.rat',X38))),s('type.rat.rat',X39)))))) ) | $spl46),
  inference(superposition,[],[f2906,f1375])).
fof(f4332,plain,(
  ( ! [X28,X26,X27] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X28),s('type.rat.rat',X26))),s('type.rat.rat',X27))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X28),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X26),s('type.rat.rat',X27))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X28),s('type.rat.rat',X26))),s('type.rat.rat',X27)))))))) ) | $spl46),
  inference(forward_demodulation,[],[f4331,f1409])).
fof(f4331,plain,(
  ( ! [X28,X26,X27] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X28),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X26),s('type.rat.rat',X27))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X28),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X26),s('type.rat.rat',X27))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X28),s('type.rat.rat',X26))),s('type.rat.rat',X27)))))))) ) | $spl46),
  inference(forward_demodulation,[],[f4330,f373])).
fof(f4330,plain,(
  ( ! [X28,X26,X27] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X28),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X26),s('type.rat.rat',X27))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X28),s('type.rat.rat',X26))),s('type.rat.rat',X27))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X28),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X26),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X27)))))))) ) | $spl46),
  inference(forward_demodulation,[],[f4176,f1409])).
fof(f4176,plain,(
  ( ! [X28,X26,X27] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X28),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X26),s('type.rat.rat',X27))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X28),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X26),s('type.rat.rat',X27))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X28),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X26),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X27)))))))) ) | $spl46),
  inference(superposition,[],[f2906,f373])).
fof(f4175,plain,(
  ( ! [X24,X23,X25,X22] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X25),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X24),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X22),s('type.rat.rat',X23))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X25),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X24),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X22),s('type.rat.rat',X23))))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X25),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X22),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X23),s('type.rat.rat',X24)))))))) ) | $spl46),
  inference(superposition,[],[f2906,f1385])).
fof(f4174,plain,(
  ( ! [X21,X19,X20,X18] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X21),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X19),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X20),s('type.rat.rat',X18))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X21),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X19),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X20),s('type.rat.rat',X18))))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X21),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X18),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X19),s('type.rat.rat',X20)))))))) ) | $spl46),
  inference(superposition,[],[f2906,f1385])).
fof(f4329,plain,(
  ( ! [X17,X15,X16] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X17),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X15),s('type.rat.rat',X16))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X15),s('type.rat.rat',X16))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X17),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X17))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X15),s('type.rat.rat',X16)))) ) | $spl46),
  inference(forward_demodulation,[],[f4328,f1409])).
fof(f4328,plain,(
  ( ! [X17,X15,X16] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X17),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X17))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X17),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X15),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X16),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X15),s('type.rat.rat',X16))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X15),s('type.rat.rat',X16)))) ) | $spl46),
  inference(forward_demodulation,[],[f4327,f2900])).
fof(f4327,plain,(
  ( ! [X17,X15,X16] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X17),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X17),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X17),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X15),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X16),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X15),s('type.rat.rat',X16))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X15),s('type.rat.rat',X16)))) ) | $spl46),
  inference(forward_demodulation,[],[f4173,f2908])).
fof(f4173,plain,(
  ( ! [X17,X15,X16] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X17),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X17),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X17),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X15),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X16),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X15),s('type.rat.rat',X16))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X15),s('type.rat.rat',X16)))) ) | $spl46),
  inference(superposition,[],[f2906,f2906])).
fof(f4326,plain,(
  ( ! [X14,X12,X13,X11] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X14),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat',X12))))),s('type.rat.rat',X13))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X14),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat',X12))),s('type.rat.rat',X13))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X14),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat',X12))))),s('type.rat.rat',X13)))))))) ) | $spl46),
  inference(forward_demodulation,[],[f4325,f1409])).
fof(f4325,plain,(
  ( ! [X14,X12,X13,X11] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X14),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat',X12))),s('type.rat.rat',X13))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X14),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat',X12))),s('type.rat.rat',X13))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X14),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat',X12))))),s('type.rat.rat',X13)))))))) ) | $spl46),
  inference(forward_demodulation,[],[f4324,f1409])).
fof(f4324,plain,(
  ( ! [X14,X12,X13,X11] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X14),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat',X12))),s('type.rat.rat',X13))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X14),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat',X12))))),s('type.rat.rat',X13))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X14),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X12),s('type.rat.rat',X13)))))))) ) | $spl46),
  inference(forward_demodulation,[],[f4172,f1409])).
fof(f4172,plain,(
  ( ! [X14,X12,X13,X11] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X14),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat',X12))),s('type.rat.rat',X13))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X14),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat',X12))),s('type.rat.rat',X13))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X14),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X12),s('type.rat.rat',X13)))))))) ) | $spl46),
  inference(superposition,[],[f2906,f1409])).
fof(f4323,plain,(
  ( ! [X10,X8,X9] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X10),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X8),s('type.rat.rat',X9))),s('type.rat.rat',X8))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X10),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X9),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X10),s('type.rat.rat',X9))))))) | s('type.rat.rat',X8) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl46),
  inference(forward_demodulation,[],[f4171,f1409])).
fof(f4171,plain,(
  ( ! [X10,X8,X9] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X10),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X9),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X10),s('type.rat.rat',X9))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X10),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X8),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X9),s('type.rat.rat',X8))))))) | s('type.rat.rat',X8) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl46),
  inference(superposition,[],[f2906,f1468])).
fof(f4168,plain,(
  ( ! [X2,X0,X1] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X2),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X1),s('type.rat.rat',X0))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X2),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X1),s('type.rat.rat',X0))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X2),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X0),s('type.rat.rat',X1)))))) ) | $spl46),
  inference(superposition,[],[f2906,f372])).
fof(f4317,plain,(
  ( ! [X43,X41,X44,X42] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X41),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X42),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X43),s('type.rat.rat',X44))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X41),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X42),s('type.rat.rat',X43))))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X44),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X41),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X42),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X43),s('type.rat.rat',X44)))))))))))) ) | $spl46),
  inference(forward_demodulation,[],[f4316,f420])).
fof(f4316,plain,(
  ( ! [X43,X41,X44,X42] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X41),s('type.rat.rat',X42))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X43),s('type.rat.rat',X44))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X41),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X42),s('type.rat.rat',X43))))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X44),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X41),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X42),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X43),s('type.rat.rat',X44)))))))))))) ) | $spl46),
  inference(forward_demodulation,[],[f4315,f420])).
fof(f4315,plain,(
  ( ! [X43,X41,X44,X42] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X41),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X42),s('type.rat.rat',X43))))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X44),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X41),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X42),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X43),s('type.rat.rat',X44))))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X41),s('type.rat.rat',X42))),s('type.rat.rat',X43))),s('type.rat.rat',X44)))) ) | $spl46),
  inference(forward_demodulation,[],[f4314,f420])).
fof(f4314,plain,(
  ( ! [X43,X41,X44,X42] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X41),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X42),s('type.rat.rat',X43))))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X44),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X41),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X42),s('type.rat.rat',X43))),s('type.rat.rat',X44))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X41),s('type.rat.rat',X42))),s('type.rat.rat',X43))),s('type.rat.rat',X44)))) ) | $spl46),
  inference(forward_demodulation,[],[f4165,f420])).
fof(f4165,plain,(
  ( ! [X43,X41,X44,X42] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X41),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X42),s('type.rat.rat',X43))))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X44),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X41),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X42),s('type.rat.rat',X43))))),s('type.rat.rat',X44))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X41),s('type.rat.rat',X42))),s('type.rat.rat',X43))),s('type.rat.rat',X44)))) ) | $spl46),
  inference(superposition,[],[f2906,f420])).
fof(f4313,plain,(
  ( ! [X39,X37,X38,X40] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X37),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X38),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X39),s('type.rat.rat',X40))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X38),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X37),s('type.rat.rat',X39))))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X40),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X38),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X37),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X39),s('type.rat.rat',X40)))))))))))) ) | $spl46),
  inference(forward_demodulation,[],[f4312,f420])).
fof(f4312,plain,(
  ( ! [X39,X37,X38,X40] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X37),s('type.rat.rat',X38))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X39),s('type.rat.rat',X40))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X38),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X37),s('type.rat.rat',X39))))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X40),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X38),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X37),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X39),s('type.rat.rat',X40)))))))))))) ) | $spl46),
  inference(forward_demodulation,[],[f4311,f420])).
fof(f4311,plain,(
  ( ! [X39,X37,X38,X40] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X38),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X37),s('type.rat.rat',X39))))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X40),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X38),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X37),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X39),s('type.rat.rat',X40))))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X37),s('type.rat.rat',X38))),s('type.rat.rat',X39))),s('type.rat.rat',X40)))) ) | $spl46),
  inference(forward_demodulation,[],[f4310,f420])).
fof(f4310,plain,(
  ( ! [X39,X37,X38,X40] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X38),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X37),s('type.rat.rat',X39))))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X40),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X38),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X37),s('type.rat.rat',X39))),s('type.rat.rat',X40))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X37),s('type.rat.rat',X38))),s('type.rat.rat',X39))),s('type.rat.rat',X40)))) ) | $spl46),
  inference(forward_demodulation,[],[f4164,f420])).
fof(f4164,plain,(
  ( ! [X39,X37,X38,X40] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X38),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X37),s('type.rat.rat',X39))))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X40),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X38),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X37),s('type.rat.rat',X39))))),s('type.rat.rat',X40))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X37),s('type.rat.rat',X38))),s('type.rat.rat',X39))),s('type.rat.rat',X40)))) ) | $spl46),
  inference(superposition,[],[f2906,f1375])).
fof(f4301,plain,(
  ( ! [X28,X26,X27] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X26),s('type.rat.rat',X28))),s('type.rat.rat',X27))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X26),s('type.rat.rat',X27))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X28),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X26),s('type.rat.rat',X28))),s('type.rat.rat',X27)))))))) ) | $spl46),
  inference(forward_demodulation,[],[f4300,f1409])).
fof(f4300,plain,(
  ( ! [X28,X26,X27] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X26),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X28),s('type.rat.rat',X27))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X26),s('type.rat.rat',X27))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X28),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X26),s('type.rat.rat',X28))),s('type.rat.rat',X27)))))))) ) | $spl46),
  inference(forward_demodulation,[],[f4299,f1340])).
fof(f4299,plain,(
  ( ! [X28,X26,X27] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X26),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X27))),s('type.rat.rat',X28))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X26),s('type.rat.rat',X27))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X28),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X26),s('type.rat.rat',X28))),s('type.rat.rat',X27)))))))) ) | $spl46),
  inference(forward_demodulation,[],[f4298,f420])).
fof(f4298,plain,(
  ( ! [X28,X26,X27] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X26),s('type.rat.rat',X27))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X28),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X26),s('type.rat.rat',X28))),s('type.rat.rat',X27))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X26),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X27))))),s('type.rat.rat',X28)))) ) | $spl46),
  inference(forward_demodulation,[],[f4160,f1410])).
fof(f4160,plain,(
  ( ! [X28,X26,X27] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X26),s('type.rat.rat',X27))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X28),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X26),s('type.rat.rat',X27))),s('type.rat.rat',X28))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X26),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X27))))),s('type.rat.rat',X28)))) ) | $spl46),
  inference(superposition,[],[f2906,f373])).
fof(f4297,plain,(
  ( ! [X24,X23,X25,X22] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X22),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X23),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X24),s('type.rat.rat',X25))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X24),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X22),s('type.rat.rat',X23))))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X25),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X24),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X22),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X23),s('type.rat.rat',X25)))))))))))) ) | $spl46),
  inference(forward_demodulation,[],[f4296,f420])).
fof(f4296,plain,(
  ( ! [X24,X23,X25,X22] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X22),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X23),s('type.rat.rat',X24))),s('type.rat.rat',X25))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X24),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X22),s('type.rat.rat',X23))))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X25),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X24),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X22),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X23),s('type.rat.rat',X25)))))))))))) ) | $spl46),
  inference(forward_demodulation,[],[f4295,f420])).
fof(f4295,plain,(
  ( ! [X24,X23,X25,X22] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X24),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X22),s('type.rat.rat',X23))))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X25),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X24),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X22),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X23),s('type.rat.rat',X25))))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X22),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X23),s('type.rat.rat',X24))))),s('type.rat.rat',X25)))) ) | $spl46),
  inference(forward_demodulation,[],[f4294,f420])).
fof(f4294,plain,(
  ( ! [X24,X23,X25,X22] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X24),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X22),s('type.rat.rat',X23))))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X25),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X24),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X22),s('type.rat.rat',X23))),s('type.rat.rat',X25))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X22),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X23),s('type.rat.rat',X24))))),s('type.rat.rat',X25)))) ) | $spl46),
  inference(forward_demodulation,[],[f4159,f420])).
fof(f4159,plain,(
  ( ! [X24,X23,X25,X22] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X24),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X22),s('type.rat.rat',X23))))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X25),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X24),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X22),s('type.rat.rat',X23))))),s('type.rat.rat',X25))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X22),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X23),s('type.rat.rat',X24))))),s('type.rat.rat',X25)))) ) | $spl46),
  inference(superposition,[],[f2906,f1385])).
fof(f4293,plain,(
  ( ! [X21,X19,X20,X18] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X18),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X19),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X20),s('type.rat.rat',X21))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X19),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X20),s('type.rat.rat',X18))))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X21),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X19),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X20),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X18),s('type.rat.rat',X21)))))))))))) ) | $spl46),
  inference(forward_demodulation,[],[f4292,f420])).
fof(f4292,plain,(
  ( ! [X21,X19,X20,X18] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X18),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X19),s('type.rat.rat',X20))),s('type.rat.rat',X21))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X19),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X20),s('type.rat.rat',X18))))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X21),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X19),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X20),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X18),s('type.rat.rat',X21)))))))))))) ) | $spl46),
  inference(forward_demodulation,[],[f4291,f420])).
fof(f4291,plain,(
  ( ! [X21,X19,X20,X18] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X19),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X20),s('type.rat.rat',X18))))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X21),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X19),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X20),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X18),s('type.rat.rat',X21))))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X18),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X19),s('type.rat.rat',X20))))),s('type.rat.rat',X21)))) ) | $spl46),
  inference(forward_demodulation,[],[f4290,f420])).
fof(f4290,plain,(
  ( ! [X21,X19,X20,X18] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X19),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X20),s('type.rat.rat',X18))))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X21),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X19),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X20),s('type.rat.rat',X18))),s('type.rat.rat',X21))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X18),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X19),s('type.rat.rat',X20))))),s('type.rat.rat',X21)))) ) | $spl46),
  inference(forward_demodulation,[],[f4158,f420])).
fof(f4158,plain,(
  ( ! [X21,X19,X20,X18] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X19),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X20),s('type.rat.rat',X18))))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X21),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X19),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X20),s('type.rat.rat',X18))))),s('type.rat.rat',X21))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X18),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X19),s('type.rat.rat',X20))))),s('type.rat.rat',X21)))) ) | $spl46),
  inference(superposition,[],[f2906,f1385])).
fof(f4289,plain,(
  ( ! [X17,X15,X16] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X15),s('type.rat.rat',X16))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X15),s('type.rat.rat',X16))))),s('type.rat.rat',X17))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X17),s('type.rat.rat',X17))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X15),s('type.rat.rat',X16)))) ) | $spl46),
  inference(forward_demodulation,[],[f4288,f1409])).
fof(f4288,plain,(
  ( ! [X17,X15,X16] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X17),s('type.rat.rat',X17))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X15),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X16),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X15),s('type.rat.rat',X16))))))),s('type.rat.rat',X17))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X15),s('type.rat.rat',X16)))) ) | $spl46),
  inference(forward_demodulation,[],[f4157,f2902])).
fof(f4157,plain,(
  ( ! [X17,X15,X16] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X17),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat',X17))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X15),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X16),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X15),s('type.rat.rat',X16))))))),s('type.rat.rat',X17))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X15),s('type.rat.rat',X16)))) ) | $spl46),
  inference(superposition,[],[f2906,f2906])).
fof(f4287,plain,(
  ( ! [X14,X12,X13,X11] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X12),s('type.rat.rat',X14))))),s('type.rat.rat',X13))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat',X12))),s('type.rat.rat',X13))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X14),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X12),s('type.rat.rat',X14))))),s('type.rat.rat',X13)))))))) ) | $spl46),
  inference(forward_demodulation,[],[f4286,f1409])).
fof(f4286,plain,(
  ( ! [X14,X12,X13,X11] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X12),s('type.rat.rat',X14))),s('type.rat.rat',X13))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat',X12))),s('type.rat.rat',X13))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X14),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X12),s('type.rat.rat',X14))))),s('type.rat.rat',X13)))))))) ) | $spl46),
  inference(forward_demodulation,[],[f4285,f1410])).
fof(f4285,plain,(
  ( ! [X14,X12,X13,X11] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X12),s('type.rat.rat',X13))),s('type.rat.rat',X14))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat',X12))),s('type.rat.rat',X13))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X14),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X12),s('type.rat.rat',X14))))),s('type.rat.rat',X13)))))))) ) | $spl46),
  inference(forward_demodulation,[],[f4284,f420])).
fof(f4284,plain,(
  ( ! [X14,X12,X13,X11] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat',X12))),s('type.rat.rat',X13))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X14),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X12),s('type.rat.rat',X14))))),s('type.rat.rat',X13))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X12),s('type.rat.rat',X13))))),s('type.rat.rat',X14)))) ) | $spl46),
  inference(forward_demodulation,[],[f4283,f420])).
fof(f4283,plain,(
  ( ! [X14,X12,X13,X11] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat',X12))),s('type.rat.rat',X13))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X14),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat',X12))),s('type.rat.rat',X14))),s('type.rat.rat',X13))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X12),s('type.rat.rat',X13))))),s('type.rat.rat',X14)))) ) | $spl46),
  inference(forward_demodulation,[],[f4156,f1410])).
fof(f4156,plain,(
  ( ! [X14,X12,X13,X11] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat',X12))),s('type.rat.rat',X13))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X14),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat',X12))),s('type.rat.rat',X13))),s('type.rat.rat',X14))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X12),s('type.rat.rat',X13))))),s('type.rat.rat',X14)))) ) | $spl46),
  inference(superposition,[],[f2906,f1409])).
fof(f4282,plain,(
  ( ! [X10,X8,X9] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X8),s('type.rat.rat',X9))),s('type.rat.rat',X8))),s('type.rat.rat',X10))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X9),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X10),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X9),s('type.rat.rat',X10))))))) | s('type.rat.rat',X8) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl46),
  inference(forward_demodulation,[],[f4155,f1409])).
fof(f4155,plain,(
  ( ! [X10,X8,X9] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X9),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X10),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X9),s('type.rat.rat',X10))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X8),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X9),s('type.rat.rat',X8))))),s('type.rat.rat',X10))) | s('type.rat.rat',X8) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl46),
  inference(superposition,[],[f2906,f1468])).
fof(f4277,plain,(
  ( ! [X2,X0,X1] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X0),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X1),s('type.rat.rat',X2))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X1),s('type.rat.rat',X0))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X2),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X1),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X0),s('type.rat.rat',X2)))))))))) ) | $spl46),
  inference(forward_demodulation,[],[f4276,f420])).
fof(f4276,plain,(
  ( ! [X2,X0,X1] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X1),s('type.rat.rat',X0))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X2),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X1),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X0),s('type.rat.rat',X2))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X0),s('type.rat.rat',X1))),s('type.rat.rat',X2)))) ) | $spl46),
  inference(forward_demodulation,[],[f4152,f420])).
fof(f4152,plain,(
  ( ! [X2,X0,X1] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X1),s('type.rat.rat',X0))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X2),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X1),s('type.rat.rat',X0))),s('type.rat.rat',X2))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X0),s('type.rat.rat',X1))),s('type.rat.rat',X2)))) ) | $spl46),
  inference(superposition,[],[f2906,f372])).
fof(f3854,plain,(
  ( ! [X0,X1] : (s('type.rat.rat',X1) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X1),s('type.rat.rat',X0))),s('type.rat.rat',X0))) | s('type.rat.rat',X0) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl46),
  inference(forward_demodulation,[],[f3783,f2900])).
fof(f3783,plain,(
  ( ! [X0,X1] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X1),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X1),s('type.rat.rat',X0))),s('type.rat.rat',X0))) | s('type.rat.rat',X0) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl46),
  inference(superposition,[],[f1409,f2905])).
fof(f3694,plain,(
  ( ! [X206,X207,X205] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X206),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X207),s('type.rat.rat',X205))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X206),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X207),s('type.rat.rat',X205))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X205),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X206),s('type.rat.rat',X207)))))) ) | $spl46),
  inference(superposition,[],[f2905,f1385])).
fof(f3637,plain,(
  ( ! [X206,X207,X205] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X207),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X205),s('type.rat.rat',X206))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X207),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X205),s('type.rat.rat',X206))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X205),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X206),s('type.rat.rat',X207)))))) ) | $spl46),
  inference(superposition,[],[f2905,f1385])).
fof(f3571,plain,(
  ( ! [X24,X25] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X25),s('type.rat.rat',X24))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X24),s('type.rat.rat',X25)))))) ) | $spl46),
  inference(superposition,[],[f1385,f2902])).
fof(f3485,plain,(
  ( ! [X187,X188,X186] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X186),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X187),s('type.rat.rat',X188))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X187),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X186),s('type.rat.rat',X188))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X187),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X186),s('type.rat.rat',X188)))))))) ) | $spl46),
  inference(forward_demodulation,[],[f3464,f420])).
fof(f3464,plain,(
  ( ! [X187,X188,X186] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X187),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X186),s('type.rat.rat',X188))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X187),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X186),s('type.rat.rat',X188))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X186),s('type.rat.rat',X187))),s('type.rat.rat',X188)))) ) | $spl46),
  inference(superposition,[],[f2905,f1375])).
fof(f3338,plain,(
  ( ! [X127,X126] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X127),s('type.rat.rat',X127))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X126),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X127),s('type.rat.rat',X126))))) | s('type.rat.rat',X126) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl46),
  inference(superposition,[],[f2905,f1468])).
fof(f3116,plain,(
  ( ! [X7] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X7),s('type.rat.rat',X7))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat',X7)))) ) | $spl46),
  inference(superposition,[],[f2905,f2902])).
fof(f3115,plain,(
  ( ! [X6] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X6),s('type.rat.rat',X6))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X6),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) ) | $spl46),
  inference(superposition,[],[f2905,f2900])).
fof(f3112,plain,(
  ( ! [X0,X1] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X1),s('type.rat.rat',X0))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X1),s('type.rat.rat',X0))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X0),s('type.rat.rat',X1)))) ) | $spl46),
  inference(superposition,[],[f2905,f372])).
fof(f2913,plain,(
  ( ! [X6] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat',X6))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X6),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X6)))))) ) | $spl46),
  inference(forward_demodulation,[],[f2909,f2896])).
fof(f2909,plain,(
  ( ! [X6] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X6),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X6))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.rat.rat',X6)))) ) | $spl46),
  inference(backward_demodulation,[],[f2896,f2861])).
fof(f2908,plain,(
  ( ! [X3] : (s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X3))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat',X3)))) ) | $spl46),
  inference(backward_demodulation,[],[f2896,f2853])).
fof(f2906,plain,(
  ( ! [X4,X5] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X4),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X5),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X4),s('type.rat.rat',X5))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X4),s('type.rat.rat',X5)))) ) | $spl46),
  inference(backward_demodulation,[],[f2896,f1466])).
fof(f2905,plain,(
  ( ! [X0] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X0),s('type.rat.rat',X0))) | s('type.rat.rat',X0) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl46),
  inference(backward_demodulation,[],[f2896,f1440])).
fof(f2903,plain,(
  ( ! [X0,X1] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X1),s('type.rat.rat',X0))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X1),s('type.rat.rat',X0))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X0),s('type.rat.rat',X1)))) ) | $spl46),
  inference(backward_demodulation,[],[f2896,f1434])).
fof(f2902,plain,(
  ( ! [X1] : (s('type.rat.rat',X1) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat',X1)))) ) | $spl46),
  inference(backward_demodulation,[],[f2896,f1308])).
fof(f2900,plain,(
  ( ! [X0] : (s('type.rat.rat',X0) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X0),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) ) | $spl46),
  inference(backward_demodulation,[],[f2896,f295])).
fof(f14383,plain,(
  s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) | $spl119),
  inference(cnf_transformation,[],[f14383_D])).
fof(f14383_D,plain,(
  s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) <=> ~$spl119),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl119])])).
fof(f26589,plain,(
  s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) = s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))))) | $spl240),
  inference(cnf_transformation,[],[f26589_D])).
fof(f26589_D,plain,(
  s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) = s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))))) <=> ~$spl240),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl240])])).
fof(f26598,plain,(
  ( ! [X184,X183] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X184),s('type.rat.rat',X183))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X183),s('type.rat.rat',X184))))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X183),s('type.rat.rat',X184)))) ) | $spl244),
  inference(cnf_transformation,[],[f26598_D])).
fof(f26598_D,plain,(
  ( ! [X184,X183] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X184),s('type.rat.rat',X183))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X183),s('type.rat.rat',X184))))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X183),s('type.rat.rat',X184)))) ) <=> ~$spl244),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl244])])).
fof(f26597,plain,(
  ( ! [X184,X183] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X184),s('type.rat.rat',X183))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X183),s('type.rat.rat',X184))))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) = s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X183),s('type.rat.rat',X184)))) ) | ($spl46 | $spl81)),
  inference(forward_demodulation,[],[f26596,f3474])).
fof(f26596,plain,(
  ( ! [X184,X183] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X183),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X184),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X183),s('type.rat.rat',X184))))))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) = s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X183),s('type.rat.rat',X184)))) ) | ($spl46 | $spl81)),
  inference(forward_demodulation,[],[f14448,f26557])).
fof(f26557,plain,(
  s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl46),
  inference(global_subsumption,[],[f287,f286,f288,f297,f311,f310,f367,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f498,f500,f502,f504,f505,f506,f508,f509,f510,f512,f514,f516,f518,f520,f521,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f556,f557,f560,f568,f579,f585,f588,f591,f596,f605,f609,f617,f628,f647,f674,f735,f759,f758,f779,f777,f798,f856,f879,f890,f896,f905,f927,f926,f939,f950,f1092,f1091,f1104,f1118,f1196,f1195,f1194,f1187,f1236,f1229,f1293,f1406,f1438,f1500,f1533,f1530,f1552,f1551,f1550,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f2854,f2859,f2900,f2902,f2903,f2905,f2906,f2908,f2913,f2927,f3112,f3115,f3116,f3338,f3485,f3571,f3637,f3694,f3854,f4059,f4060,f4061,f4062,f4063,f4083,f4084,f4277,f4282,f4287,f4289,f4293,f4297,f4301,f4313,f4317,f4168,f4323,f4326,f4329,f4174,f4175,f4332,f4340,f4184,f4349,f4190,f4191,f4351,f4352,f4354,f4355,f4356,f4363,f4371,f4374,f4536,f4539,f4543,f4547,f4549,f4552,f4562,f4565,f4567,f4576,f4580,f4582,f4586,f4599,f4601,f4603,f4449,f4610,f4623,f4627,f4633,f4636,f4639,f4856,f5007,f5019,f2896,f5086,f5088,f5089,f5091,f5092,f5094,f5110,f5098,f5099,f5100,f5101,f5102,f5103,f5104,f5105,f5365,f5367,f5368,f5370,f5371,f5373,f5445,f5449,f5733,f5738,f5743,f5745,f5749,f5753,f5757,f5769,f5773,f5624,f5779,f5782,f5785,f5630,f5631,f5788,f5796,f5640,f5805,f5646,f5647,f5807,f5808,f5810,f5811,f5812,f5819,f5827,f5830,f5988,f5991,f5995,f5999,f6001,f6004,f6014,f6017,f6019,f6028,f6032,f6034,f6038,f6051,f6053,f6055,f5901,f6072,f6078,f6081,f6084,f6179,f6211,f6241,f6276,f6829,f6853,f7151,f7102,f7109,f7189,f7163,f7165,f7166,f7167,f7168,f7169,f7295,f7298,f7299,f7300,f7301,f7431,f7438,f7469,f7473,f7474,f7475,f7477,f7150,f8621,f8670,f9220,f10729,f10667,f10734,f10674,f3718,f3708,f3707,f3702,f3580,f3573,f3572,f3518,f3515,f3514,f3510,f3509,f3469,f3467,f3406,f3405,f1385,f1375,f420,f372,f7915,f3060,f3857,f4016,f3862,f3860,f3785,f3474,f1410,f1409,f1340,f373,f7965,f5017,f2853,f1308,f295,f1676,f1675,f1623,f1622,f797,f796,f795,f794,f7964,f7963,f7962,f7961,f7960,f7959,f7958,f7957,f7914,f7913,f7912,f7887,f7886,f7885,f7884,f7867,f7866,f7865,f7864,f7845,f7706,f7705,f7704,f7703,f7687,f7686,f7685,f7684,f7665,f7634,f7633,f7632,f7631,f7628,f7627,f7626,f7625,f7620,f7113,f7112,f7111,f7110,f7106,f7105,f7104,f7103,f7097,f6809,f6808,f6807,f6806,f10681,f10680,f10679,f10678,f10677,f10675,f10671,f10668,f10659,f7910,f7882,f7862,f7701,f7682,f7629,f7623,f7107,f7100,f6857,f6855,f6856,f6854,f7956,f6833,f6831,f6832,f6830,f7955,f6892,f6891,f6890,f6889,f6888,f6887,f6886,f6885,f6884,f6883,f6882,f6881,f6880,f6879,f6878,f6877,f6876,f6875,f6862,f6860,f6851,f6827,f1505,f1868,f1982,f4098,f1423,f1422,f552,f496,f315,f314,f10669,f9606,f9601,f9589,f9573,f9570,f9564,f9548,f9546,f9544,f9536,f9530,f9524,f9520,f9514,f9513,f9506,f9504,f9501,f9486,f9484,f9480,f9476,f9469,f9364,f9304,f9272,f9269,f9261,f9254,f9253,f9252,f9247,f9244,f9237,f9229,f9226,f9217,f9211,f9204,f9200,f9189,f9187,f9183,f9179,f9173,f9168,f9162,f9160,f9159,f9056,f9055,f9048,f9038,f9037,f9030,f8979,f8977,f8932,f8905,f8899,f8898,f8897,f8891,f8876,f8873,f8688,f8668,f8645,f8628,f8626,f8604,f8600,f8520,f8519,f8442,f8436,f8433,f8432,f8430,f8429,f8427,f7840,f6894,f6893,f6543,f6541,f6353,f6348,f6346,f6336,f6305,f6268,f6266,f6245,f6235,f6229,f6206,f6203,f6188,f6183,f6181,f6174,f6168,f6162,f5070,f4888,f4885,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f4076,f4046,f4012,f3883,f3784,f3734,f3706,f3682,f3654,f3625,f3597,f3508,f3502,f3484,f3482,f3473,f3387,f3353,f3348,f3291,f3281,f3278,f2861,f2253,f2252,f2251,f1488,f1468,f1466,f1440,f1436,f1434,f1294,f1290,f1282,f1269,f1245,f1241,f1237,f1230,f1209,f1199,f1190,f1188,f1146,f1113,f1009,f946,f886,f863,f842,f788,f786,f767,f766,f724,f667,f665,f663,f654,f651,f649,f630,f625,f623,f619,f608,f606,f598,f593,f584,f570,f565,f562,f536,f523,f519,f517,f515,f513,f511,f507,f503,f501,f499,f421,f308,f12972,f15251,f15256,f15386,f15388,f15394,f15397,f15404,f15405,f15622,f15772,f15775,f15778,f15781,f15783,f15794,f15795,f15928,f15932,f15942,f16057,f16189,f16190,f16191,f16192,f16199,f16200,f16202,f16204,f16098,f16218,f16221,f16104,f16105,f16231,f16234,f16236,f16114,f16117,f16246,f16247,f16128,f16327,f16334,f16355,f16360,f16388,f16395,f16420,f16421,f16424,f4789,f5012])).
fof(f26595,plain,(
  ( ! [X182,X181] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X181),s('type.rat.rat',X182))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X181),s('type.rat.rat',X182))))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X182),s('type.rat.rat',X181)))) ) | $spl242),
  inference(cnf_transformation,[],[f26595_D])).
fof(f26595_D,plain,(
  ( ! [X182,X181] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X181),s('type.rat.rat',X182))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X181),s('type.rat.rat',X182))))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X182),s('type.rat.rat',X181)))) ) <=> ~$spl242),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl242])])).
fof(f26594,plain,(
  ( ! [X182,X181] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X181),s('type.rat.rat',X182))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X181),s('type.rat.rat',X182))))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) = s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X182),s('type.rat.rat',X181)))) ) | ($spl46 | $spl81)),
  inference(forward_demodulation,[],[f26593,f3474])).
fof(f26593,plain,(
  ( ! [X182,X181] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X182),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X181),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X181),s('type.rat.rat',X182))))))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) = s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X182),s('type.rat.rat',X181)))) ) | ($spl46 | $spl81)),
  inference(forward_demodulation,[],[f26592,f373])).
fof(f26592,plain,(
  ( ! [X182,X181] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X182),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X181),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X181),s('type.rat.rat',X182))))))))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) = s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X182),s('type.rat.rat',X181)))) ) | ($spl46 | $spl81)),
  inference(forward_demodulation,[],[f26591,f15767])).
fof(f26591,plain,(
  ( ! [X182,X181] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X182),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X181),s('type.rat.rat',X182))))),s('type.rat.rat',X181))))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) = s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X182),s('type.rat.rat',X181)))) ) | ($spl46 | $spl81)),
  inference(forward_demodulation,[],[f26590,f3518])).
fof(f26590,plain,(
  ( ! [X182,X181] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X181),s('type.rat.rat',X182))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X181),s('type.rat.rat',X182))))))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) = s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X182),s('type.rat.rat',X181)))) ) | ($spl46 | $spl81)),
  inference(forward_demodulation,[],[f14444,f26557])).
fof(f14384,plain,(
  s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) | $spl118),
  inference(cnf_transformation,[],[f14384_D])).
fof(f14384_D,plain,(
  s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) <=> ~$spl118),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl118])])).
fof(f13553,plain,(
  s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) = s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) | $spl81),
  inference(superposition,[],[f13038,f13039])).
fof(f13548,plain,(
  s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) = s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) | $spl81),
  inference(superposition,[],[f13039,f13038])).
fof(f4619,plain,(
  s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl72),
  inference(cnf_transformation,[],[f4619_D])).
fof(f4619_D,plain,(
  s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) <=> ~$spl72),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl72])])).
fof(f26587,plain,(
  ( ! [X21] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X21),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X21))),s('type.rat.rat',X21)))) ) | $spl238),
  inference(cnf_transformation,[],[f26587_D])).
fof(f26587_D,plain,(
  ( ! [X21] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X21),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X21))),s('type.rat.rat',X21)))) ) <=> ~$spl238),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl238])])).
fof(f26586,plain,(
  ( ! [X21] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X21),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X21))),s('type.rat.rat',X21)))) ) | $spl46),
  inference(forward_demodulation,[],[f26585,f26557])).
fof(f26585,plain,(
  ( ! [X21] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X21))),s('type.rat.rat',X21))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X21),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) ) | $spl46),
  inference(forward_demodulation,[],[f9370,f26557])).
fof(f26584,plain,(
  ( ! [X23] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X23),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X23),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X23)))))) ) | $spl236),
  inference(cnf_transformation,[],[f26584_D])).
fof(f26584_D,plain,(
  ( ! [X23] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X23),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X23),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X23)))))) ) <=> ~$spl236),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl236])])).
fof(f26583,plain,(
  ( ! [X23] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X23),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X23),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X23)))))) ) | $spl46),
  inference(forward_demodulation,[],[f26582,f26557])).
fof(f26582,plain,(
  ( ! [X23] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X23),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X23))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X23),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) ) | $spl46),
  inference(forward_demodulation,[],[f8709,f26557])).
fof(f26578,plain,(
  ( ! [X0] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X0),s('type.rat.rat',X0))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X0),s('type.rat.rat',X0))))) | s('type.rat.rat',X0) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl234),
  inference(cnf_transformation,[],[f26578_D])).
fof(f26578_D,plain,(
  ( ! [X0] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X0),s('type.rat.rat',X0))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X0),s('type.rat.rat',X0))))) | s('type.rat.rat',X0) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) <=> ~$spl234),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl234])])).
fof(f26567,plain,(
  s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | $spl230),
  inference(cnf_transformation,[],[f26567_D])).
fof(f26567_D,plain,(
  s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) <=> ~$spl230),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl230])])).
fof(f26577,plain,(
  ( ! [X0] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X0),s('type.rat.rat',X0))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X0),s('type.rat.rat',X0))))) | s('type.rat.rat',X0) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl46),
  inference(forward_demodulation,[],[f26576,f373])).
fof(f26576,plain,(
  ( ! [X0] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X0),s('type.rat.rat',X0))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X0),s('type.rat.rat',X0))))) | s('type.rat.rat',X0) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl46),
  inference(forward_demodulation,[],[f8669,f26557])).
fof(f26568,plain,(
  ( ! [X21] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X21),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X21),s('type.rat.rat',X21))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) ) | $spl232),
  inference(cnf_transformation,[],[f26568_D])).
fof(f26568_D,plain,(
  ( ! [X21] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X21),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X21),s('type.rat.rat',X21))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) ) <=> ~$spl232),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl232])])).
fof(f26565,plain,(
  ( ! [X21] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X21),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X21),s('type.rat.rat',X21))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) ) | $spl46),
  inference(forward_demodulation,[],[f26564,f26557])).
fof(f26564,plain,(
  ( ! [X21] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X21),s('type.rat.rat',X21))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X21),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) ) | $spl46),
  inference(forward_demodulation,[],[f26563,f373])).
fof(f26563,plain,(
  ( ! [X21] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X21),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X21))))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X21),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) ) | $spl46),
  inference(forward_demodulation,[],[f26562,f26557])).
fof(f26562,plain,(
  ( ! [X21] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X21),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X21))))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X21),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) ) | $spl46),
  inference(forward_demodulation,[],[f26561,f373])).
fof(f26561,plain,(
  ( ! [X21] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X21),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X21))))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X21),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) ) | $spl46),
  inference(forward_demodulation,[],[f8654,f26557])).
fof(f23924,plain,(
  ~sP5('const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),'F_0','const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12))) | $spl215),
  inference(cnf_transformation,[],[f23924_D])).
fof(f23924_D,plain,(
  ~sP5('const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),'F_0','const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12))) <=> ~$spl215),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl215])])).
fof(f23836,plain,(
  s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK10),s('type.rat.rat',sK10))) | $spl152),
  inference(cnf_transformation,[],[f23836_D])).
fof(f23836_D,plain,(
  s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK10),s('type.rat.rat',sK10))) <=> ~$spl152),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl152])])).
fof(f26513,plain,(
  s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK10),s('type.rat.rat',sK10))) | ~sP5('const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),'F_0','const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12))) | ($spl3 | $spl81 | $spl113 | $spl118)),
  inference(forward_demodulation,[],[f26130,f373])).
fof(f26130,plain,(
  ~sP5('const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),'F_0','const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK10),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',sK10))))) | ($spl3 | $spl81 | $spl113 | $spl118)),
  inference(superposition,[],[f14609,f14820])).
fof(f14609,plain,(
  ~sP5('const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),'F_0','const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK10),s('type.rat.rat',sK12))))) | ($spl3 | $spl113 | $spl118)),
  inference(backward_demodulation,[],[f14384,f13678])).
fof(f13678,plain,(
  ~sP5('const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),'F_0','const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK10),s('type.rat.rat',sK12))))) | ($spl3 | $spl113)),
  inference(unit_resulting_resolution,[],[f818,f13339,f450])).
fof(f818,plain,(
  s(bool,'F_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK10),s('type.rat.rat',sK12))))) | $spl3),
  inference(unit_resulting_resolution,[],[f815,f297])).
fof(f815,plain,(
  s(bool,'T_0') != s(bool,'const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK10),s('type.rat.rat',sK12))))) | $spl3),
  inference(backward_demodulation,[],[f803,f287])).
fof(f803,plain,(
  s(bool,'T_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',sK10),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12))))) | $spl3),
  inference(unit_resulting_resolution,[],[f802,f297])).
fof(f23921,plain,(
  ~sP5('const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),'const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12)),'F_0') | $spl213),
  inference(cnf_transformation,[],[f23921_D])).
fof(f23921_D,plain,(
  ~sP5('const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),'const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12)),'F_0') <=> ~$spl213),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl213])])).
fof(f26512,plain,(
  s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK10),s('type.rat.rat',sK10))) | ~sP5('const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),'const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12)),'F_0') | ($spl3 | $spl81 | $spl113 | $spl118)),
  inference(forward_demodulation,[],[f26129,f373])).
fof(f26129,plain,(
  ~sP5('const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),'const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12)),'F_0') | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK10),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',sK10))))) | ($spl3 | $spl81 | $spl113 | $spl118)),
  inference(superposition,[],[f14606,f14820])).
fof(f14606,plain,(
  ~sP5('const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),'const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK10),s('type.rat.rat',sK12)))),'F_0') | ($spl3 | $spl113 | $spl118)),
  inference(backward_demodulation,[],[f14384,f13675])).
fof(f13675,plain,(
  ~sP5('const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),'const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK10),s('type.rat.rat',sK12)))),'F_0') | ($spl3 | $spl113)),
  inference(unit_resulting_resolution,[],[f818,f13339,f450])).
fof(f23918,plain,(
  sP5('const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),'T_0','const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12))) | $spl210),
  inference(cnf_transformation,[],[f23918_D])).
fof(f23918_D,plain,(
  sP5('const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),'T_0','const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12))) <=> ~$spl210),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl210])])).
fof(f26511,plain,(
  s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK10),s('type.rat.rat',sK10))) | sP5('const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),'T_0','const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12))) | ($spl3 | $spl81 | $spl113 | $spl118)),
  inference(forward_demodulation,[],[f26128,f373])).
fof(f26128,plain,(
  sP5('const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),'T_0','const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK10),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',sK10))))) | ($spl3 | $spl81 | $spl113 | $spl118)),
  inference(superposition,[],[f14603,f14820])).
fof(f14603,plain,(
  sP5('const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),'T_0','const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK10),s('type.rat.rat',sK12))))) | ($spl3 | $spl113 | $spl118)),
  inference(backward_demodulation,[],[f14384,f13672])).
fof(f13672,plain,(
  sP5('const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),'T_0','const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK10),s('type.rat.rat',sK12))))) | ($spl3 | $spl113)),
  inference(unit_resulting_resolution,[],[f815,f13339,f447])).
fof(f23915,plain,(
  sP5('const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),'const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12)),'T_0') | $spl208),
  inference(cnf_transformation,[],[f23915_D])).
fof(f23915_D,plain,(
  sP5('const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),'const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12)),'T_0') <=> ~$spl208),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl208])])).
fof(f26510,plain,(
  s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK10),s('type.rat.rat',sK10))) | sP5('const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),'const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12)),'T_0') | ($spl3 | $spl81 | $spl113 | $spl118)),
  inference(forward_demodulation,[],[f26127,f373])).
fof(f26127,plain,(
  sP5('const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),'const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12)),'T_0') | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK10),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',sK10))))) | ($spl3 | $spl81 | $spl113 | $spl118)),
  inference(superposition,[],[f14600,f14820])).
fof(f14600,plain,(
  sP5('const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),'const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK10),s('type.rat.rat',sK12)))),'T_0') | ($spl3 | $spl113 | $spl118)),
  inference(backward_demodulation,[],[f14384,f13669])).
fof(f13669,plain,(
  sP5('const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),'const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK10),s('type.rat.rat',sK12)))),'T_0') | ($spl3 | $spl113)),
  inference(unit_resulting_resolution,[],[f815,f13339,f447])).
fof(f23912,plain,(
  sP1('const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12)),'T_0') | $spl206),
  inference(cnf_transformation,[],[f23912_D])).
fof(f23912_D,plain,(
  sP1('const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12)),'T_0') <=> ~$spl206),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl206])])).
fof(f26509,plain,(
  s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK10),s('type.rat.rat',sK10))) | sP1('const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12)),'T_0') | ($spl3 | $spl16 | $spl81 | $spl118)),
  inference(forward_demodulation,[],[f26126,f373])).
fof(f26126,plain,(
  sP1('const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12)),'T_0') | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK10),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',sK10))))) | ($spl3 | $spl16 | $spl81 | $spl118)),
  inference(superposition,[],[f2763,f14820])).
fof(f2763,plain,(
  sP1('const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK10),s('type.rat.rat',sK12)))),'T_0') | ($spl3 | $spl16)),
  inference(subsumption_resolution,[],[f2756,f496])).
fof(f2756,plain,(
  p(s(bool,'F_0')) | sP1('const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK10),s('type.rat.rat',sK12)))),'T_0') | ($spl3 | $spl16)),
  inference(superposition,[],[f2187,f818])).
fof(f23909,plain,(
  sP1('T_0','const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12))) | $spl204),
  inference(cnf_transformation,[],[f23909_D])).
fof(f23909_D,plain,(
  sP1('T_0','const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12))) <=> ~$spl204),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl204])])).
fof(f26508,plain,(
  s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK10),s('type.rat.rat',sK10))) | sP1('T_0','const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12))) | ($spl3 | $spl12 | $spl81 | $spl118)),
  inference(forward_demodulation,[],[f26125,f373])).
fof(f26125,plain,(
  sP1('T_0','const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK10),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',sK10))))) | ($spl3 | $spl12 | $spl81 | $spl118)),
  inference(superposition,[],[f2762,f14820])).
fof(f2762,plain,(
  sP1('T_0','const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK10),s('type.rat.rat',sK12))))) | ($spl3 | $spl12)),
  inference(subsumption_resolution,[],[f2755,f496])).
fof(f2755,plain,(
  p(s(bool,'F_0')) | sP1('T_0','const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK10),s('type.rat.rat',sK12))))) | ($spl3 | $spl12)),
  inference(superposition,[],[f2183,f818])).
fof(f23847,plain,(
  s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK10),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',sK10))))) | $spl160),
  inference(cnf_transformation,[],[f23847_D])).
fof(f23847_D,plain,(
  s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK10),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',sK10))))) <=> ~$spl160),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl160])])).
fof(f23906,plain,(
  ( ! [X106] : (s(bool,X106) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12))) | s(bool,'T_0') = s(bool,X106)) ) | $spl202),
  inference(cnf_transformation,[],[f23906_D])).
fof(f23906_D,plain,(
  ( ! [X106] : (s(bool,X106) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12))) | s(bool,'T_0') = s(bool,X106)) ) <=> ~$spl202),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl202])])).
fof(f26124,plain,(
  ( ! [X102] : (s(bool,X102) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12))) | s(bool,'T_0') = s(bool,X102) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK10),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',sK10)))))) ) | ($spl3 | $spl81 | $spl118)),
  inference(superposition,[],[f1737,f14820])).
fof(f1737,plain,(
  ( ! [X3] : (s(bool,X3) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK10),s('type.rat.rat',sK12))))) | s(bool,'T_0') = s(bool,X3)) ) | $spl3),
  inference(subsumption_resolution,[],[f1732,f496])).
fof(f1732,plain,(
  ( ! [X3] : (p(s(bool,'F_0')) | s(bool,X3) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK10),s('type.rat.rat',sK12))))) | s(bool,'T_0') = s(bool,X3)) ) | $spl3),
  inference(superposition,[],[f735,f818])).
fof(f23905,plain,(
  sP2('const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat',sK10),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12)))),'F_0') | $spl200),
  inference(cnf_transformation,[],[f23905_D])).
fof(f23905_D,plain,(
  sP2('const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat',sK10),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12)))),'F_0') <=> ~$spl200),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl200])])).
fof(f26507,plain,(
  s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK10),s('type.rat.rat',sK10))) | sP2('const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat',sK10),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12)))),'F_0') | ($spl81 | $spl118)),
  inference(forward_demodulation,[],[f26123,f373])).
fof(f26123,plain,(
  sP2('const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat',sK10),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12)))),'F_0') | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK10),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',sK10))))) | ($spl81 | $spl118)),
  inference(superposition,[],[f1676,f14820])).
fof(f23902,plain,(
  sP3('const.rat.rat_les_2'(s('type.rat.rat',sK10),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12)))),'const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12)),'F_0') | $spl198),
  inference(cnf_transformation,[],[f23902_D])).
fof(f23902_D,plain,(
  sP3('const.rat.rat_les_2'(s('type.rat.rat',sK10),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12)))),'const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12)),'F_0') <=> ~$spl198),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl198])])).
fof(f26506,plain,(
  s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK10),s('type.rat.rat',sK10))) | sP3('const.rat.rat_les_2'(s('type.rat.rat',sK10),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12)))),'const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12)),'F_0') | ($spl81 | $spl118)),
  inference(forward_demodulation,[],[f26122,f373])).
fof(f26122,plain,(
  sP3('const.rat.rat_les_2'(s('type.rat.rat',sK10),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12)))),'const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12)),'F_0') | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK10),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',sK10))))) | ($spl81 | $spl118)),
  inference(superposition,[],[f1675,f14820])).
fof(f23899,plain,(
  sP2('const.rat.rat_les_2'(s('type.rat.rat',sK10),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12)))),'const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12)),'F_0') | $spl196),
  inference(cnf_transformation,[],[f23899_D])).
fof(f23899_D,plain,(
  sP2('const.rat.rat_les_2'(s('type.rat.rat',sK10),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12)))),'const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12)),'F_0') <=> ~$spl196),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl196])])).
fof(f26505,plain,(
  s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK10),s('type.rat.rat',sK10))) | sP2('const.rat.rat_les_2'(s('type.rat.rat',sK10),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12)))),'const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12)),'F_0') | ($spl81 | $spl118)),
  inference(forward_demodulation,[],[f26121,f373])).
fof(f26121,plain,(
  sP2('const.rat.rat_les_2'(s('type.rat.rat',sK10),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12)))),'const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12)),'F_0') | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK10),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',sK10))))) | ($spl81 | $spl118)),
  inference(superposition,[],[f1623,f14820])).
fof(f23896,plain,(
  sP3('const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat',sK10),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12)))),'F_0') | $spl194),
  inference(cnf_transformation,[],[f23896_D])).
fof(f23896_D,plain,(
  sP3('const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat',sK10),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12)))),'F_0') <=> ~$spl194),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl194])])).
fof(f26504,plain,(
  s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK10),s('type.rat.rat',sK10))) | sP3('const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat',sK10),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12)))),'F_0') | ($spl81 | $spl118)),
  inference(forward_demodulation,[],[f26120,f373])).
fof(f26120,plain,(
  sP3('const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat',sK10),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12)))),'F_0') | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK10),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',sK10))))) | ($spl81 | $spl118)),
  inference(superposition,[],[f1622,f14820])).
fof(f23893,plain,(
  ~sP2('F_0','const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12)),'F_0') | $spl193),
  inference(cnf_transformation,[],[f23893_D])).
fof(f23893_D,plain,(
  ~sP2('F_0','const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12)),'F_0') <=> ~$spl193),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl193])])).
fof(f26503,plain,(
  s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK10),s('type.rat.rat',sK10))) | ~sP2('F_0','const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12)),'F_0') | ($spl3 | $spl81 | $spl118)),
  inference(forward_demodulation,[],[f26119,f373])).
fof(f26119,plain,(
  ~sP2('F_0','const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12)),'F_0') | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK10),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',sK10))))) | ($spl3 | $spl81 | $spl118)),
  inference(superposition,[],[f1291,f14820])).
fof(f1291,plain,(
  ~sP2('F_0','const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK10),s('type.rat.rat',sK12)))),'F_0') | $spl3),
  inference(unit_resulting_resolution,[],[f508,f964,f504,f496,f434])).
fof(f964,plain,(
  ~sP5('F_0','const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK10),s('type.rat.rat',sK12)))),'F_0') | $spl3),
  inference(unit_resulting_resolution,[],[f496,f818,f450])).
fof(f23890,plain,(
  ~sP2('const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12)),'F_0','F_0') | $spl191),
  inference(cnf_transformation,[],[f23890_D])).
fof(f23890_D,plain,(
  ~sP2('const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12)),'F_0','F_0') <=> ~$spl191),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl191])])).
fof(f26502,plain,(
  s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK10),s('type.rat.rat',sK10))) | ~sP2('const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12)),'F_0','F_0') | ($spl3 | $spl81 | $spl118)),
  inference(forward_demodulation,[],[f26118,f373])).
fof(f26118,plain,(
  ~sP2('const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12)),'F_0','F_0') | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK10),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',sK10))))) | ($spl3 | $spl81 | $spl118)),
  inference(superposition,[],[f1243,f14820])).
fof(f1243,plain,(
  ~sP2('const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK10),s('type.rat.rat',sK12)))),'F_0','F_0') | $spl3),
  inference(unit_resulting_resolution,[],[f509,f966,f505,f496,f433])).
fof(f966,plain,(
  ~sP5('F_0','F_0','const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK10),s('type.rat.rat',sK12))))) | $spl3),
  inference(unit_resulting_resolution,[],[f496,f818,f450])).
fof(f23887,plain,(
  ~sP4('T_0','T_0','const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12))) | $spl189),
  inference(cnf_transformation,[],[f23887_D])).
fof(f23887_D,plain,(
  ~sP4('T_0','T_0','const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12))) <=> ~$spl189),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl189])])).
fof(f26501,plain,(
  s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK10),s('type.rat.rat',sK10))) | ~sP4('T_0','T_0','const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12))) | ($spl3 | $spl81 | $spl118)),
  inference(forward_demodulation,[],[f26117,f373])).
fof(f26117,plain,(
  ~sP4('T_0','T_0','const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK10),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',sK10))))) | ($spl3 | $spl81 | $spl118)),
  inference(superposition,[],[f1198,f14820])).
fof(f1198,plain,(
  ~sP4('T_0','T_0','const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK10),s('type.rat.rat',sK12))))) | $spl3),
  inference(unit_resulting_resolution,[],[f514,f506,f820,f288,f432])).
fof(f820,plain,(
  ~sP5('T_0','const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK10),s('type.rat.rat',sK12)))),'T_0') | $spl3),
  inference(unit_resulting_resolution,[],[f288,f815,f449])).
fof(f23884,plain,(
  sP4('T_0','const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12)),'F_0') | $spl186),
  inference(cnf_transformation,[],[f23884_D])).
fof(f23884_D,plain,(
  sP4('T_0','const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12)),'F_0') <=> ~$spl186),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl186])])).
fof(f26500,plain,(
  s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK10),s('type.rat.rat',sK10))) | sP4('T_0','const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12)),'F_0') | ($spl3 | $spl81 | $spl118)),
  inference(forward_demodulation,[],[f26116,f373])).
fof(f26116,plain,(
  sP4('T_0','const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12)),'F_0') | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK10),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',sK10))))) | ($spl3 | $spl81 | $spl118)),
  inference(superposition,[],[f1026,f14820])).
fof(f1026,plain,(
  sP4('T_0','const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK10),s('type.rat.rat',sK12)))),'F_0') | $spl3),
  inference(unit_resulting_resolution,[],[f967,f430])).
fof(f967,plain,(
  sP5('T_0','F_0','const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK10),s('type.rat.rat',sK12))))) | $spl3),
  inference(unit_resulting_resolution,[],[f288,f818,f448])).
fof(f23881,plain,(
  sP5('T_0','F_0','const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12))) | $spl184),
  inference(cnf_transformation,[],[f23881_D])).
fof(f23881_D,plain,(
  sP5('T_0','F_0','const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12))) <=> ~$spl184),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl184])])).
fof(f26499,plain,(
  s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK10),s('type.rat.rat',sK10))) | sP5('T_0','F_0','const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12))) | ($spl3 | $spl81 | $spl118)),
  inference(forward_demodulation,[],[f26115,f373])).
fof(f26115,plain,(
  sP5('T_0','F_0','const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK10),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',sK10))))) | ($spl3 | $spl81 | $spl118)),
  inference(superposition,[],[f967,f14820])).
fof(f23878,plain,(
  ~sP5('F_0','F_0','const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12))) | $spl183),
  inference(cnf_transformation,[],[f23878_D])).
fof(f23878_D,plain,(
  ~sP5('F_0','F_0','const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12))) <=> ~$spl183),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl183])])).
fof(f26498,plain,(
  s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK10),s('type.rat.rat',sK10))) | ~sP5('F_0','F_0','const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12))) | ($spl3 | $spl81 | $spl118)),
  inference(forward_demodulation,[],[f26114,f373])).
fof(f26114,plain,(
  ~sP5('F_0','F_0','const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK10),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',sK10))))) | ($spl3 | $spl81 | $spl118)),
  inference(superposition,[],[f966,f14820])).
fof(f23875,plain,(
  sP5('T_0','const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12)),'F_0') | $spl180),
  inference(cnf_transformation,[],[f23875_D])).
fof(f23875_D,plain,(
  sP5('T_0','const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12)),'F_0') <=> ~$spl180),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl180])])).
fof(f26497,plain,(
  s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK10),s('type.rat.rat',sK10))) | sP5('T_0','const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12)),'F_0') | ($spl3 | $spl81 | $spl118)),
  inference(forward_demodulation,[],[f26113,f373])).
fof(f26113,plain,(
  sP5('T_0','const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12)),'F_0') | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK10),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',sK10))))) | ($spl3 | $spl81 | $spl118)),
  inference(superposition,[],[f965,f14820])).
fof(f965,plain,(
  sP5('T_0','const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK10),s('type.rat.rat',sK12)))),'F_0') | $spl3),
  inference(unit_resulting_resolution,[],[f288,f818,f448])).
fof(f23872,plain,(
  ~sP5('F_0','const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12)),'F_0') | $spl179),
  inference(cnf_transformation,[],[f23872_D])).
fof(f23872_D,plain,(
  ~sP5('F_0','const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12)),'F_0') <=> ~$spl179),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl179])])).
fof(f26496,plain,(
  s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK10),s('type.rat.rat',sK10))) | ~sP5('F_0','const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12)),'F_0') | ($spl3 | $spl81 | $spl118)),
  inference(forward_demodulation,[],[f26112,f373])).
fof(f26112,plain,(
  ~sP5('F_0','const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12)),'F_0') | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK10),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',sK10))))) | ($spl3 | $spl81 | $spl118)),
  inference(superposition,[],[f964,f14820])).
fof(f23869,plain,(
  sP3('T_0','const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12)),'F_0') | $spl176),
  inference(cnf_transformation,[],[f23869_D])).
fof(f23869_D,plain,(
  sP3('T_0','const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12)),'F_0') <=> ~$spl176),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl176])])).
fof(f26495,plain,(
  s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK10),s('type.rat.rat',sK10))) | sP3('T_0','const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12)),'F_0') | ($spl3 | $spl81 | $spl118)),
  inference(forward_demodulation,[],[f26111,f373])).
fof(f26111,plain,(
  sP3('T_0','const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12)),'F_0') | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK10),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',sK10))))) | ($spl3 | $spl81 | $spl118)),
  inference(superposition,[],[f848,f14820])).
fof(f848,plain,(
  sP3('T_0','const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK10),s('type.rat.rat',sK12)))),'F_0') | $spl3),
  inference(unit_resulting_resolution,[],[f824,f429])).
fof(f824,plain,(
  sP5('F_0','T_0','const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK10),s('type.rat.rat',sK12))))) | $spl3),
  inference(unit_resulting_resolution,[],[f496,f815,f447])).
fof(f23866,plain,(
  sP3('const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12)),'T_0','F_0') | $spl174),
  inference(cnf_transformation,[],[f23866_D])).
fof(f23866_D,plain,(
  sP3('const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12)),'T_0','F_0') <=> ~$spl174),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl174])])).
fof(f26494,plain,(
  s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK10),s('type.rat.rat',sK10))) | sP3('const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12)),'T_0','F_0') | ($spl3 | $spl81 | $spl118)),
  inference(forward_demodulation,[],[f26110,f373])).
fof(f26110,plain,(
  sP3('const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12)),'T_0','F_0') | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK10),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',sK10))))) | ($spl3 | $spl81 | $spl118)),
  inference(superposition,[],[f833,f14820])).
fof(f833,plain,(
  sP3('const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK10),s('type.rat.rat',sK12)))),'T_0','F_0') | $spl3),
  inference(unit_resulting_resolution,[],[f821,f429])).
fof(f821,plain,(
  sP5('F_0','const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK10),s('type.rat.rat',sK12)))),'T_0') | $spl3),
  inference(unit_resulting_resolution,[],[f496,f815,f447])).
fof(f23863,plain,(
  sP5('F_0','T_0','const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12))) | $spl172),
  inference(cnf_transformation,[],[f23863_D])).
fof(f23863_D,plain,(
  sP5('F_0','T_0','const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12))) <=> ~$spl172),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl172])])).
fof(f26493,plain,(
  s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK10),s('type.rat.rat',sK10))) | sP5('F_0','T_0','const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12))) | ($spl3 | $spl81 | $spl118)),
  inference(forward_demodulation,[],[f26109,f373])).
fof(f26109,plain,(
  sP5('F_0','T_0','const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK10),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',sK10))))) | ($spl3 | $spl81 | $spl118)),
  inference(superposition,[],[f824,f14820])).
fof(f23860,plain,(
  ~sP5('T_0','T_0','const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12))) | $spl171),
  inference(cnf_transformation,[],[f23860_D])).
fof(f23860_D,plain,(
  ~sP5('T_0','T_0','const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12))) <=> ~$spl171),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl171])])).
fof(f26492,plain,(
  s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK10),s('type.rat.rat',sK10))) | ~sP5('T_0','T_0','const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12))) | ($spl3 | $spl81 | $spl118)),
  inference(forward_demodulation,[],[f26108,f373])).
fof(f26108,plain,(
  ~sP5('T_0','T_0','const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK10),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',sK10))))) | ($spl3 | $spl81 | $spl118)),
  inference(superposition,[],[f823,f14820])).
fof(f823,plain,(
  ~sP5('T_0','T_0','const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK10),s('type.rat.rat',sK12))))) | $spl3),
  inference(unit_resulting_resolution,[],[f288,f815,f449])).
fof(f23857,plain,(
  sP5('F_0','const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12)),'T_0') | $spl168),
  inference(cnf_transformation,[],[f23857_D])).
fof(f23857_D,plain,(
  sP5('F_0','const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12)),'T_0') <=> ~$spl168),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl168])])).
fof(f26491,plain,(
  s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK10),s('type.rat.rat',sK10))) | sP5('F_0','const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12)),'T_0') | ($spl3 | $spl81 | $spl118)),
  inference(forward_demodulation,[],[f26107,f373])).
fof(f26107,plain,(
  sP5('F_0','const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12)),'T_0') | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK10),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',sK10))))) | ($spl3 | $spl81 | $spl118)),
  inference(superposition,[],[f821,f14820])).
fof(f23854,plain,(
  ~sP5('T_0','const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12)),'T_0') | $spl167),
  inference(cnf_transformation,[],[f23854_D])).
fof(f23854_D,plain,(
  ~sP5('T_0','const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12)),'T_0') <=> ~$spl167),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl167])])).
fof(f26490,plain,(
  s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK10),s('type.rat.rat',sK10))) | ~sP5('T_0','const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12)),'T_0') | ($spl3 | $spl81 | $spl118)),
  inference(forward_demodulation,[],[f26106,f373])).
fof(f26106,plain,(
  ~sP5('T_0','const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12)),'T_0') | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK10),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',sK10))))) | ($spl3 | $spl81 | $spl118)),
  inference(superposition,[],[f820,f14820])).
fof(f23851,plain,(
  s(bool,'F_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12))) | $spl164),
  inference(cnf_transformation,[],[f23851_D])).
fof(f23851_D,plain,(
  s(bool,'F_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12))) <=> ~$spl164),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl164])])).
fof(f26105,plain,(
  s(bool,'F_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK10),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',sK10))))) | ($spl3 | $spl81 | $spl118)),
  inference(superposition,[],[f818,f14820])).
fof(f23849,plain,(
  s(bool,'T_0') != s(bool,'const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12))) | $spl163),
  inference(cnf_transformation,[],[f23849_D])).
fof(f23849_D,plain,(
  s(bool,'T_0') != s(bool,'const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12))) <=> ~$spl163),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl163])])).
fof(f26104,plain,(
  s(bool,'T_0') != s(bool,'const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK10),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',sK10))))) | ($spl3 | $spl81 | $spl118)),
  inference(superposition,[],[f815,f14820])).
fof(f23845,plain,(
  sP5('F_0','const.rat.rat_les_2'(s('type.rat.rat',sK10),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12)))),'const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12))) | $spl158),
  inference(cnf_transformation,[],[f23845_D])).
fof(f23845_D,plain,(
  sP5('F_0','const.rat.rat_les_2'(s('type.rat.rat',sK10),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12)))),'const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12))) <=> ~$spl158),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl158])])).
fof(f26489,plain,(
  s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK10),s('type.rat.rat',sK10))) | sP5('F_0','const.rat.rat_les_2'(s('type.rat.rat',sK10),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12)))),'const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12))) | ($spl81 | $spl118)),
  inference(forward_demodulation,[],[f26103,f373])).
fof(f26103,plain,(
  sP5('F_0','const.rat.rat_les_2'(s('type.rat.rat',sK10),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12)))),'const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK10),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',sK10))))) | ($spl81 | $spl118)),
  inference(superposition,[],[f797,f14820])).
fof(f23842,plain,(
  ~sP5('T_0','const.rat.rat_les_2'(s('type.rat.rat',sK10),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12)))),'const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12))) | $spl157),
  inference(cnf_transformation,[],[f23842_D])).
fof(f23842_D,plain,(
  ~sP5('T_0','const.rat.rat_les_2'(s('type.rat.rat',sK10),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12)))),'const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12))) <=> ~$spl157),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl157])])).
fof(f26488,plain,(
  s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK10),s('type.rat.rat',sK10))) | ~sP5('T_0','const.rat.rat_les_2'(s('type.rat.rat',sK10),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12)))),'const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12))) | ($spl81 | $spl118)),
  inference(forward_demodulation,[],[f26102,f373])).
fof(f26102,plain,(
  ~sP5('T_0','const.rat.rat_les_2'(s('type.rat.rat',sK10),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12)))),'const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK10),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',sK10))))) | ($spl81 | $spl118)),
  inference(superposition,[],[f796,f14820])).
fof(f23839,plain,(
  sP5('F_0','const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat',sK10),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12))))) | $spl154),
  inference(cnf_transformation,[],[f23839_D])).
fof(f23839_D,plain,(
  sP5('F_0','const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat',sK10),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12))))) <=> ~$spl154),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl154])])).
fof(f26487,plain,(
  s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK10),s('type.rat.rat',sK10))) | sP5('F_0','const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat',sK10),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12))))) | ($spl81 | $spl118)),
  inference(forward_demodulation,[],[f26101,f373])).
fof(f26101,plain,(
  sP5('F_0','const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat',sK10),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK10),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',sK10))))) | ($spl81 | $spl118)),
  inference(superposition,[],[f795,f14820])).
fof(f23834,plain,(
  ~sP5('T_0','const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat',sK10),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12))))) | $spl151),
  inference(cnf_transformation,[],[f23834_D])).
fof(f23834_D,plain,(
  ~sP5('T_0','const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat',sK10),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12))))) <=> ~$spl151),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl151])])).
fof(f26486,plain,(
  s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK10),s('type.rat.rat',sK10))) | ~sP5('T_0','const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat',sK10),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12))))) | ($spl81 | $spl118)),
  inference(forward_demodulation,[],[f26100,f373])).
fof(f26100,plain,(
  ~sP5('T_0','const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat',sK10),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK10),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',sK10))))) | ($spl81 | $spl118)),
  inference(superposition,[],[f794,f14820])).
fof(f25891,plain,(
  $false | ($spl69 | $spl76 | $spl81 | $spl116 | $spl118)),
  inference(subsumption_resolution,[],[f25890,f4612])).
fof(f4612,plain,(
  s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | $spl69),
  inference(cnf_transformation,[],[f4612_D])).
fof(f4612_D,plain,(
  s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) <=> ~$spl69),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl69])])).
fof(f25890,plain,(
  s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | ($spl76 | $spl81 | $spl116 | $spl118)),
  inference(forward_demodulation,[],[f25775,f14384])).
fof(f25775,plain,(
  s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) = s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | ($spl76 | $spl81 | $spl116 | $spl118)),
  inference(superposition,[],[f17293,f25553])).
fof(f25553,plain,(
  ( ! [X1] : (s('type.rat.rat',X1) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X1),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) ) | ($spl76 | $spl81 | $spl116 | $spl118)),
  inference(superposition,[],[f14663,f22424])).
fof(f22424,plain,(
  ( ! [X8] : (s('type.rat.rat',X8) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat',X8)))) ) | ($spl81 | $spl116 | $spl118)),
  inference(forward_demodulation,[],[f22280,f14378])).
fof(f22280,plain,(
  ( ! [X8] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat',X8))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X8),s('type.rat.rat',sK12))),s('type.rat.rat',sK12)))) ) | ($spl81 | $spl118)),
  inference(superposition,[],[f15694,f14485])).
fof(f14663,plain,(
  ( ! [X119] : (s('type.rat.rat',X119) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X119),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))))) ) | ($spl76 | $spl81 | $spl118)),
  inference(backward_demodulation,[],[f14384,f14468])).
fof(f14468,plain,(
  ( ! [X119] : (s('type.rat.rat',X119) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X119),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12)))))))) ) | ($spl76 | $spl81)),
  inference(forward_demodulation,[],[f4892,f13036])).
fof(f17293,plain,(
  ( ! [X8] : (s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X8))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',X8))),s('type.rat.rat',sK12)))) ) | $spl116),
  inference(superposition,[],[f14378,f1340])).
fof(f25889,plain,(
  $false | ($spl69 | $spl76 | $spl81 | $spl116 | $spl118)),
  inference(subsumption_resolution,[],[f25774,f4612])).
fof(f25774,plain,(
  s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | ($spl76 | $spl81 | $spl116 | $spl118)),
  inference(superposition,[],[f14475,f25553])).
fof(f25888,plain,(
  $false | ($spl69 | $spl76 | $spl81 | $spl116 | $spl118)),
  inference(subsumption_resolution,[],[f25773,f4612])).
fof(f25773,plain,(
  s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | ($spl76 | $spl81 | $spl116 | $spl118)),
  inference(superposition,[],[f25553,f14475])).
fof(f25496,plain,(
  $false | ($spl69 | $spl81 | $spl116 | $spl118 | $spl142)),
  inference(subsumption_resolution,[],[f25495,f4612])).
fof(f25495,plain,(
  s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | ($spl81 | $spl116 | $spl118 | $spl142)),
  inference(forward_demodulation,[],[f25380,f14384])).
fof(f25380,plain,(
  s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) = s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | ($spl81 | $spl116 | $spl118 | $spl142)),
  inference(superposition,[],[f17293,f25158])).
fof(f25158,plain,(
  ( ! [X1] : (s('type.rat.rat',X1) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X1),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) ) | ($spl81 | $spl116 | $spl118 | $spl142)),
  inference(superposition,[],[f14864,f22424])).
fof(f14864,plain,(
  ( ! [X128] : (s('type.rat.rat',X128) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X128),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))))) ) | ($spl118 | $spl142)),
  inference(forward_demodulation,[],[f14457,f14384])).
fof(f25494,plain,(
  $false | ($spl69 | $spl81 | $spl116 | $spl118 | $spl142)),
  inference(subsumption_resolution,[],[f25379,f4612])).
fof(f25379,plain,(
  s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | ($spl81 | $spl116 | $spl118 | $spl142)),
  inference(superposition,[],[f14475,f25158])).
fof(f25493,plain,(
  $false | ($spl69 | $spl81 | $spl116 | $spl118 | $spl142)),
  inference(subsumption_resolution,[],[f25378,f4612])).
fof(f25378,plain,(
  s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | ($spl81 | $spl116 | $spl118 | $spl142)),
  inference(superposition,[],[f25158,f14475])).
fof(f25085,plain,(
  $false | ($spl69 | $spl81 | $spl118 | $spl140)),
  inference(subsumption_resolution,[],[f24972,f4612])).
fof(f24972,plain,(
  s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | ($spl81 | $spl118 | $spl140)),
  inference(superposition,[],[f14475,f14866])).
fof(f14866,plain,(
  s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | ($spl118 | $spl140)),
  inference(forward_demodulation,[],[f14440,f14384])).
fof(f25084,plain,(
  $false | ($spl69 | $spl81 | $spl118 | $spl140)),
  inference(subsumption_resolution,[],[f24971,f4612])).
fof(f24971,plain,(
  s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | ($spl81 | $spl118 | $spl140)),
  inference(superposition,[],[f14866,f14475])).
fof(f24723,plain,(
  $false | ($spl6 | $spl69 | $spl81 | $spl118)),
  inference(subsumption_resolution,[],[f24722,f4612])).
fof(f24722,plain,(
  s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | ($spl6 | $spl81 | $spl118)),
  inference(forward_demodulation,[],[f24721,f14470])).
fof(f24721,plain,(
  s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | ($spl6 | $spl81 | $spl118)),
  inference(forward_demodulation,[],[f24590,f14470])).
fof(f24590,plain,(
  s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | ($spl6 | $spl81 | $spl118)),
  inference(superposition,[],[f14485,f24205])).
fof(f24205,plain,(
  s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl6 | $spl81 | $spl118)),
  inference(forward_demodulation,[],[f1464,f14469])).
fof(f24720,plain,(
  $false | ($spl6 | $spl69 | $spl81 | $spl118)),
  inference(subsumption_resolution,[],[f24719,f4612])).
fof(f24719,plain,(
  s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | ($spl6 | $spl81 | $spl118)),
  inference(forward_demodulation,[],[f24718,f21793])).
fof(f24718,plain,(
  s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.rat.rat',sK12))) | ($spl6 | $spl81 | $spl118)),
  inference(forward_demodulation,[],[f24589,f14470])).
fof(f24589,plain,(
  s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.rat.rat',sK12))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | ($spl6 | $spl81 | $spl118)),
  inference(superposition,[],[f14268,f24205])).
fof(f24699,plain,(
  $false | ($spl6 | $spl69 | $spl81 | $spl116 | $spl118)),
  inference(subsumption_resolution,[],[f24579,f4612])).
fof(f24579,plain,(
  s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | ($spl6 | $spl81 | $spl116 | $spl118)),
  inference(superposition,[],[f22424,f24205])).
fof(f24698,plain,(
  $false | ($spl6 | $spl69 | $spl81 | $spl116 | $spl118)),
  inference(subsumption_resolution,[],[f24577,f4612])).
fof(f24577,plain,(
  s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | ($spl6 | $spl81 | $spl116 | $spl118)),
  inference(superposition,[],[f24205,f22424])).
fof(f24174,plain,(
  $false | ($spl48 | $spl69 | $spl81 | $spl118)),
  inference(subsumption_resolution,[],[f4612,f14476])).
fof(f14476,plain,(
  s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | ($spl48 | $spl81 | $spl118)),
  inference(backward_demodulation,[],[f14384,f13045])).
fof(f13045,plain,(
  s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) = s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))))) | ($spl48 | $spl81)),
  inference(backward_demodulation,[],[f13036,f2898])).
fof(f23945,plain,(
  ~sP2('const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12)),'F_0','const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) | $spl229),
  inference(cnf_transformation,[],[f23945_D])).
fof(f23945_D,plain,(
  ~sP2('const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12)),'F_0','const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) <=> ~$spl229),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl229])])).
fof(f23943,plain,(
  s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK10),s('type.rat.rat',sK10))) | ~sP2('const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12)),'F_0','const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) | ($spl3 | $spl9 | $spl68 | $spl81 | $spl118)),
  inference(forward_demodulation,[],[f23430,f373])).
fof(f23430,plain,(
  ~sP2('const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12)),'F_0','const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK10),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',sK10))))) | ($spl3 | $spl9 | $spl68 | $spl81 | $spl118)),
  inference(superposition,[],[f14811,f14819])).
fof(f14819,plain,(
  ( ! [X4,X3] : (s('type.rat.rat',X4) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X3),s('type.rat.rat',X4))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X3),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X3)))))) ) | ($spl68 | $spl81 | $spl118)),
  inference(forward_demodulation,[],[f14507,f14666])).
fof(f14666,plain,(
  ( ! [X0] : (s('type.rat.rat',X0) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat',X0)))) ) | ($spl68 | $spl81 | $spl118)),
  inference(backward_demodulation,[],[f14665,f6971])).
fof(f6971,plain,(
  ( ! [X0] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X0),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat',X0)))) ) | $spl68),
  inference(superposition,[],[f1340,f4613])).
fof(f14665,plain,(
  ( ! [X1] : (s('type.rat.rat',X1) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X1),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) ) | ($spl68 | $spl81 | $spl118)),
  inference(backward_demodulation,[],[f14470,f6972])).
fof(f6972,plain,(
  ( ! [X1] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X1),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X1),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) ) | $spl68),
  inference(superposition,[],[f373,f4613])).
fof(f14507,plain,(
  ( ! [X4,X3] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X3),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X3))))) | s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X3),s('type.rat.rat',X4))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat',X4)))) ) | ($spl81 | $spl118)),
  inference(backward_demodulation,[],[f14384,f13087])).
fof(f14811,plain,(
  ~sP2('const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK10),s('type.rat.rat',sK12)))),'F_0','const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) | ($spl3 | $spl9 | $spl68 | $spl81 | $spl118)),
  inference(backward_demodulation,[],[f14665,f10579])).
fof(f10579,plain,(
  ~sP2('const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK10),s('type.rat.rat',sK12)))),'F_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.rat.rat',sK12))) | ($spl3 | $spl9 | $spl68)),
  inference(unit_resulting_resolution,[],[f496,f509,f8085,f8132,f433])).
fof(f8132,plain,(
  ~sP5('const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.rat.rat',sK12)),'F_0','const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK10),s('type.rat.rat',sK12))))) | ($spl3 | $spl9 | $spl68)),
  inference(unit_resulting_resolution,[],[f818,f8044,f450])).
fof(f8044,plain,(
  ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.rat.rat',sK12)))) | ($spl9 | $spl68)),
  inference(forward_demodulation,[],[f8043,f6972])).
fof(f8085,plain,(
  ( ! [X0,X1] : (sP4('const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.rat.rat',sK12)),X0,X1)) ) | ($spl9 | $spl68)),
  inference(unit_resulting_resolution,[],[f8044,f438])).
fof(f23942,plain,(
  sP3('T_0','const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) | $spl226),
  inference(cnf_transformation,[],[f23942_D])).
fof(f23942_D,plain,(
  sP3('T_0','const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) <=> ~$spl226),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl226])])).
fof(f23940,plain,(
  s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK10),s('type.rat.rat',sK10))) | sP3('T_0','const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) | ($spl3 | $spl9 | $spl68 | $spl81 | $spl118)),
  inference(forward_demodulation,[],[f23429,f373])).
fof(f23429,plain,(
  sP3('T_0','const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK10),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',sK10))))) | ($spl3 | $spl9 | $spl68 | $spl81 | $spl118)),
  inference(superposition,[],[f14809,f14819])).
fof(f14809,plain,(
  sP3('T_0','const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK10),s('type.rat.rat',sK12)))),'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) | ($spl3 | $spl9 | $spl68 | $spl81 | $spl118)),
  inference(backward_demodulation,[],[f14665,f10530])).
fof(f10530,plain,(
  sP3('T_0','const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK10),s('type.rat.rat',sK12)))),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.rat.rat',sK12))) | ($spl3 | $spl9 | $spl68)),
  inference(unit_resulting_resolution,[],[f8121,f429])).
fof(f8121,plain,(
  sP5('const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.rat.rat',sK12)),'T_0','const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK10),s('type.rat.rat',sK12))))) | ($spl3 | $spl9 | $spl68)),
  inference(unit_resulting_resolution,[],[f815,f8044,f447])).
fof(f23939,plain,(
  sP3('const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12)),'T_0','const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) | $spl224),
  inference(cnf_transformation,[],[f23939_D])).
fof(f23939_D,plain,(
  sP3('const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12)),'T_0','const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) <=> ~$spl224),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl224])])).
fof(f23937,plain,(
  s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK10),s('type.rat.rat',sK10))) | sP3('const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12)),'T_0','const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) | ($spl3 | $spl9 | $spl68 | $spl81 | $spl118)),
  inference(forward_demodulation,[],[f23428,f373])).
fof(f23428,plain,(
  sP3('const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12)),'T_0','const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK10),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',sK10))))) | ($spl3 | $spl9 | $spl68 | $spl81 | $spl118)),
  inference(superposition,[],[f14808,f14819])).
fof(f14808,plain,(
  sP3('const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK10),s('type.rat.rat',sK12)))),'T_0','const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) | ($spl3 | $spl9 | $spl68 | $spl81 | $spl118)),
  inference(backward_demodulation,[],[f14665,f10513])).
fof(f10513,plain,(
  sP3('const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK10),s('type.rat.rat',sK12)))),'T_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.rat.rat',sK12))) | ($spl3 | $spl9 | $spl68)),
  inference(unit_resulting_resolution,[],[f8118,f429])).
fof(f8118,plain,(
  sP5('const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK10),s('type.rat.rat',sK12)))),'T_0') | ($spl3 | $spl9 | $spl68)),
  inference(unit_resulting_resolution,[],[f815,f8044,f447])).
fof(f23936,plain,(
  ~sP5('const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12)),'F_0','const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12))) | $spl223),
  inference(cnf_transformation,[],[f23936_D])).
fof(f23936_D,plain,(
  ~sP5('const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12)),'F_0','const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12))) <=> ~$spl223),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl223])])).
fof(f23934,plain,(
  s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK10),s('type.rat.rat',sK10))) | ~sP5('const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12)),'F_0','const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12))) | ($spl3 | $spl9 | $spl68 | $spl81 | $spl118)),
  inference(forward_demodulation,[],[f23427,f373])).
fof(f23427,plain,(
  ~sP5('const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12)),'F_0','const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK10),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',sK10))))) | ($spl3 | $spl9 | $spl68 | $spl81 | $spl118)),
  inference(superposition,[],[f14708,f14819])).
fof(f14708,plain,(
  ~sP5('const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12)),'F_0','const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK10),s('type.rat.rat',sK12))))) | ($spl3 | $spl9 | $spl68 | $spl81 | $spl118)),
  inference(backward_demodulation,[],[f14665,f8132])).
fof(f23933,plain,(
  ~sP5('const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12)),'F_0') | $spl221),
  inference(cnf_transformation,[],[f23933_D])).
fof(f23933_D,plain,(
  ~sP5('const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12)),'F_0') <=> ~$spl221),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl221])])).
fof(f23931,plain,(
  s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK10),s('type.rat.rat',sK10))) | ~sP5('const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12)),'F_0') | ($spl3 | $spl9 | $spl68 | $spl81 | $spl118)),
  inference(forward_demodulation,[],[f23426,f373])).
fof(f23426,plain,(
  ~sP5('const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12)),'F_0') | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK10),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',sK10))))) | ($spl3 | $spl9 | $spl68 | $spl81 | $spl118)),
  inference(superposition,[],[f14702,f14819])).
fof(f14702,plain,(
  ~sP5('const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK10),s('type.rat.rat',sK12)))),'F_0') | ($spl3 | $spl9 | $spl68 | $spl81 | $spl118)),
  inference(backward_demodulation,[],[f14665,f8126])).
fof(f8126,plain,(
  ~sP5('const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK10),s('type.rat.rat',sK12)))),'F_0') | ($spl3 | $spl9 | $spl68)),
  inference(unit_resulting_resolution,[],[f818,f8044,f450])).
fof(f23930,plain,(
  sP5('const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12)),'T_0','const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12))) | $spl218),
  inference(cnf_transformation,[],[f23930_D])).
fof(f23930_D,plain,(
  sP5('const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12)),'T_0','const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12))) <=> ~$spl218),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl218])])).
fof(f23928,plain,(
  s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK10),s('type.rat.rat',sK10))) | sP5('const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12)),'T_0','const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12))) | ($spl3 | $spl9 | $spl68 | $spl81 | $spl118)),
  inference(forward_demodulation,[],[f23425,f373])).
fof(f23425,plain,(
  sP5('const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12)),'T_0','const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK10),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',sK10))))) | ($spl3 | $spl9 | $spl68 | $spl81 | $spl118)),
  inference(superposition,[],[f14697,f14819])).
fof(f14697,plain,(
  sP5('const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12)),'T_0','const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK10),s('type.rat.rat',sK12))))) | ($spl3 | $spl9 | $spl68 | $spl81 | $spl118)),
  inference(backward_demodulation,[],[f14665,f8121])).
fof(f23927,plain,(
  sP5('const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12)),'T_0') | $spl216),
  inference(cnf_transformation,[],[f23927_D])).
fof(f23927_D,plain,(
  sP5('const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12)),'T_0') <=> ~$spl216),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl216])])).
fof(f23925,plain,(
  s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK10),s('type.rat.rat',sK10))) | sP5('const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12)),'T_0') | ($spl3 | $spl9 | $spl68 | $spl81 | $spl118)),
  inference(forward_demodulation,[],[f23424,f373])).
fof(f23424,plain,(
  sP5('const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12)),'T_0') | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK10),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',sK10))))) | ($spl3 | $spl9 | $spl68 | $spl81 | $spl118)),
  inference(superposition,[],[f14694,f14819])).
fof(f14694,plain,(
  sP5('const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK10),s('type.rat.rat',sK12)))),'T_0') | ($spl3 | $spl9 | $spl68 | $spl81 | $spl118)),
  inference(backward_demodulation,[],[f14665,f8118])).
fof(f23922,plain,(
  s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK10),s('type.rat.rat',sK10))) | ~sP5('const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),'F_0','const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12))) | ($spl3 | $spl68 | $spl81 | $spl113 | $spl118)),
  inference(forward_demodulation,[],[f23423,f373])).
fof(f23423,plain,(
  ~sP5('const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),'F_0','const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK10),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',sK10))))) | ($spl3 | $spl68 | $spl81 | $spl113 | $spl118)),
  inference(superposition,[],[f14609,f14819])).
fof(f23919,plain,(
  s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK10),s('type.rat.rat',sK10))) | ~sP5('const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),'const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12)),'F_0') | ($spl3 | $spl68 | $spl81 | $spl113 | $spl118)),
  inference(forward_demodulation,[],[f23422,f373])).
fof(f23422,plain,(
  ~sP5('const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),'const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12)),'F_0') | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK10),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',sK10))))) | ($spl3 | $spl68 | $spl81 | $spl113 | $spl118)),
  inference(superposition,[],[f14606,f14819])).
fof(f23916,plain,(
  s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK10),s('type.rat.rat',sK10))) | sP5('const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),'T_0','const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12))) | ($spl3 | $spl68 | $spl81 | $spl113 | $spl118)),
  inference(forward_demodulation,[],[f23421,f373])).
fof(f23421,plain,(
  sP5('const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),'T_0','const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK10),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',sK10))))) | ($spl3 | $spl68 | $spl81 | $spl113 | $spl118)),
  inference(superposition,[],[f14603,f14819])).
fof(f23913,plain,(
  s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK10),s('type.rat.rat',sK10))) | sP5('const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),'const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12)),'T_0') | ($spl3 | $spl68 | $spl81 | $spl113 | $spl118)),
  inference(forward_demodulation,[],[f23420,f373])).
fof(f23420,plain,(
  sP5('const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),'const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12)),'T_0') | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK10),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',sK10))))) | ($spl3 | $spl68 | $spl81 | $spl113 | $spl118)),
  inference(superposition,[],[f14600,f14819])).
fof(f23910,plain,(
  s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK10),s('type.rat.rat',sK10))) | sP1('const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12)),'T_0') | ($spl3 | $spl16 | $spl68 | $spl81 | $spl118)),
  inference(forward_demodulation,[],[f23419,f373])).
fof(f23419,plain,(
  sP1('const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12)),'T_0') | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK10),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',sK10))))) | ($spl3 | $spl16 | $spl68 | $spl81 | $spl118)),
  inference(superposition,[],[f2763,f14819])).
fof(f23907,plain,(
  s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK10),s('type.rat.rat',sK10))) | sP1('T_0','const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12))) | ($spl3 | $spl12 | $spl68 | $spl81 | $spl118)),
  inference(forward_demodulation,[],[f23418,f373])).
fof(f23418,plain,(
  sP1('T_0','const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK10),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',sK10))))) | ($spl3 | $spl12 | $spl68 | $spl81 | $spl118)),
  inference(superposition,[],[f2762,f14819])).
fof(f23417,plain,(
  ( ! [X106] : (s(bool,X106) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12))) | s(bool,'T_0') = s(bool,X106) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK10),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',sK10)))))) ) | ($spl3 | $spl68 | $spl81 | $spl118)),
  inference(superposition,[],[f1737,f14819])).
fof(f23903,plain,(
  s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK10),s('type.rat.rat',sK10))) | sP2('const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat',sK10),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12)))),'F_0') | ($spl68 | $spl81 | $spl118)),
  inference(forward_demodulation,[],[f23416,f373])).
fof(f23416,plain,(
  sP2('const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat',sK10),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12)))),'F_0') | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK10),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',sK10))))) | ($spl68 | $spl81 | $spl118)),
  inference(superposition,[],[f1676,f14819])).
fof(f23900,plain,(
  s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK10),s('type.rat.rat',sK10))) | sP3('const.rat.rat_les_2'(s('type.rat.rat',sK10),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12)))),'const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12)),'F_0') | ($spl68 | $spl81 | $spl118)),
  inference(forward_demodulation,[],[f23415,f373])).
fof(f23415,plain,(
  sP3('const.rat.rat_les_2'(s('type.rat.rat',sK10),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12)))),'const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12)),'F_0') | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK10),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',sK10))))) | ($spl68 | $spl81 | $spl118)),
  inference(superposition,[],[f1675,f14819])).
fof(f23897,plain,(
  s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK10),s('type.rat.rat',sK10))) | sP2('const.rat.rat_les_2'(s('type.rat.rat',sK10),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12)))),'const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12)),'F_0') | ($spl68 | $spl81 | $spl118)),
  inference(forward_demodulation,[],[f23414,f373])).
fof(f23414,plain,(
  sP2('const.rat.rat_les_2'(s('type.rat.rat',sK10),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12)))),'const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12)),'F_0') | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK10),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',sK10))))) | ($spl68 | $spl81 | $spl118)),
  inference(superposition,[],[f1623,f14819])).
fof(f23894,plain,(
  s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK10),s('type.rat.rat',sK10))) | sP3('const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat',sK10),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12)))),'F_0') | ($spl68 | $spl81 | $spl118)),
  inference(forward_demodulation,[],[f23413,f373])).
fof(f23413,plain,(
  sP3('const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat',sK10),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12)))),'F_0') | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK10),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',sK10))))) | ($spl68 | $spl81 | $spl118)),
  inference(superposition,[],[f1622,f14819])).
fof(f23891,plain,(
  s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK10),s('type.rat.rat',sK10))) | ~sP2('F_0','const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12)),'F_0') | ($spl3 | $spl68 | $spl81 | $spl118)),
  inference(forward_demodulation,[],[f23412,f373])).
fof(f23412,plain,(
  ~sP2('F_0','const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12)),'F_0') | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK10),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',sK10))))) | ($spl3 | $spl68 | $spl81 | $spl118)),
  inference(superposition,[],[f1291,f14819])).
fof(f23888,plain,(
  s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK10),s('type.rat.rat',sK10))) | ~sP2('const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12)),'F_0','F_0') | ($spl3 | $spl68 | $spl81 | $spl118)),
  inference(forward_demodulation,[],[f23411,f373])).
fof(f23411,plain,(
  ~sP2('const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12)),'F_0','F_0') | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK10),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',sK10))))) | ($spl3 | $spl68 | $spl81 | $spl118)),
  inference(superposition,[],[f1243,f14819])).
fof(f23885,plain,(
  s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK10),s('type.rat.rat',sK10))) | ~sP4('T_0','T_0','const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12))) | ($spl3 | $spl68 | $spl81 | $spl118)),
  inference(forward_demodulation,[],[f23410,f373])).
fof(f23410,plain,(
  ~sP4('T_0','T_0','const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK10),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',sK10))))) | ($spl3 | $spl68 | $spl81 | $spl118)),
  inference(superposition,[],[f1198,f14819])).
fof(f23882,plain,(
  s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK10),s('type.rat.rat',sK10))) | sP4('T_0','const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12)),'F_0') | ($spl3 | $spl68 | $spl81 | $spl118)),
  inference(forward_demodulation,[],[f23409,f373])).
fof(f23409,plain,(
  sP4('T_0','const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12)),'F_0') | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK10),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',sK10))))) | ($spl3 | $spl68 | $spl81 | $spl118)),
  inference(superposition,[],[f1026,f14819])).
fof(f23879,plain,(
  s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK10),s('type.rat.rat',sK10))) | sP5('T_0','F_0','const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12))) | ($spl3 | $spl68 | $spl81 | $spl118)),
  inference(forward_demodulation,[],[f23408,f373])).
fof(f23408,plain,(
  sP5('T_0','F_0','const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK10),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',sK10))))) | ($spl3 | $spl68 | $spl81 | $spl118)),
  inference(superposition,[],[f967,f14819])).
fof(f23876,plain,(
  s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK10),s('type.rat.rat',sK10))) | ~sP5('F_0','F_0','const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12))) | ($spl3 | $spl68 | $spl81 | $spl118)),
  inference(forward_demodulation,[],[f23407,f373])).
fof(f23407,plain,(
  ~sP5('F_0','F_0','const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK10),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',sK10))))) | ($spl3 | $spl68 | $spl81 | $spl118)),
  inference(superposition,[],[f966,f14819])).
fof(f23873,plain,(
  s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK10),s('type.rat.rat',sK10))) | sP5('T_0','const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12)),'F_0') | ($spl3 | $spl68 | $spl81 | $spl118)),
  inference(forward_demodulation,[],[f23406,f373])).
fof(f23406,plain,(
  sP5('T_0','const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12)),'F_0') | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK10),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',sK10))))) | ($spl3 | $spl68 | $spl81 | $spl118)),
  inference(superposition,[],[f965,f14819])).
fof(f23870,plain,(
  s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK10),s('type.rat.rat',sK10))) | ~sP5('F_0','const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12)),'F_0') | ($spl3 | $spl68 | $spl81 | $spl118)),
  inference(forward_demodulation,[],[f23405,f373])).
fof(f23405,plain,(
  ~sP5('F_0','const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12)),'F_0') | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK10),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',sK10))))) | ($spl3 | $spl68 | $spl81 | $spl118)),
  inference(superposition,[],[f964,f14819])).
fof(f23867,plain,(
  s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK10),s('type.rat.rat',sK10))) | sP3('T_0','const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12)),'F_0') | ($spl3 | $spl68 | $spl81 | $spl118)),
  inference(forward_demodulation,[],[f23404,f373])).
fof(f23404,plain,(
  sP3('T_0','const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12)),'F_0') | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK10),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',sK10))))) | ($spl3 | $spl68 | $spl81 | $spl118)),
  inference(superposition,[],[f848,f14819])).
fof(f23864,plain,(
  s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK10),s('type.rat.rat',sK10))) | sP3('const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12)),'T_0','F_0') | ($spl3 | $spl68 | $spl81 | $spl118)),
  inference(forward_demodulation,[],[f23403,f373])).
fof(f23403,plain,(
  sP3('const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12)),'T_0','F_0') | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK10),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',sK10))))) | ($spl3 | $spl68 | $spl81 | $spl118)),
  inference(superposition,[],[f833,f14819])).
fof(f23861,plain,(
  s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK10),s('type.rat.rat',sK10))) | sP5('F_0','T_0','const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12))) | ($spl3 | $spl68 | $spl81 | $spl118)),
  inference(forward_demodulation,[],[f23402,f373])).
fof(f23402,plain,(
  sP5('F_0','T_0','const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK10),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',sK10))))) | ($spl3 | $spl68 | $spl81 | $spl118)),
  inference(superposition,[],[f824,f14819])).
fof(f23858,plain,(
  s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK10),s('type.rat.rat',sK10))) | ~sP5('T_0','T_0','const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12))) | ($spl3 | $spl68 | $spl81 | $spl118)),
  inference(forward_demodulation,[],[f23401,f373])).
fof(f23401,plain,(
  ~sP5('T_0','T_0','const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK10),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',sK10))))) | ($spl3 | $spl68 | $spl81 | $spl118)),
  inference(superposition,[],[f823,f14819])).
fof(f23855,plain,(
  s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK10),s('type.rat.rat',sK10))) | sP5('F_0','const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12)),'T_0') | ($spl3 | $spl68 | $spl81 | $spl118)),
  inference(forward_demodulation,[],[f23400,f373])).
fof(f23400,plain,(
  sP5('F_0','const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12)),'T_0') | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK10),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',sK10))))) | ($spl3 | $spl68 | $spl81 | $spl118)),
  inference(superposition,[],[f821,f14819])).
fof(f23852,plain,(
  s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK10),s('type.rat.rat',sK10))) | ~sP5('T_0','const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12)),'T_0') | ($spl3 | $spl68 | $spl81 | $spl118)),
  inference(forward_demodulation,[],[f23399,f373])).
fof(f23399,plain,(
  ~sP5('T_0','const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12)),'T_0') | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK10),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',sK10))))) | ($spl3 | $spl68 | $spl81 | $spl118)),
  inference(superposition,[],[f820,f14819])).
fof(f23398,plain,(
  s(bool,'F_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK10),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',sK10))))) | ($spl3 | $spl68 | $spl81 | $spl118)),
  inference(superposition,[],[f818,f14819])).
fof(f23397,plain,(
  s(bool,'T_0') != s(bool,'const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK10),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',sK10))))) | ($spl3 | $spl68 | $spl81 | $spl118)),
  inference(superposition,[],[f815,f14819])).
fof(f23843,plain,(
  s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK10),s('type.rat.rat',sK10))) | sP5('F_0','const.rat.rat_les_2'(s('type.rat.rat',sK10),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12)))),'const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12))) | ($spl68 | $spl81 | $spl118)),
  inference(forward_demodulation,[],[f23396,f373])).
fof(f23396,plain,(
  sP5('F_0','const.rat.rat_les_2'(s('type.rat.rat',sK10),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12)))),'const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK10),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',sK10))))) | ($spl68 | $spl81 | $spl118)),
  inference(superposition,[],[f797,f14819])).
fof(f23840,plain,(
  s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK10),s('type.rat.rat',sK10))) | ~sP5('T_0','const.rat.rat_les_2'(s('type.rat.rat',sK10),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12)))),'const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12))) | ($spl68 | $spl81 | $spl118)),
  inference(forward_demodulation,[],[f23395,f373])).
fof(f23395,plain,(
  ~sP5('T_0','const.rat.rat_les_2'(s('type.rat.rat',sK10),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12)))),'const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK10),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',sK10))))) | ($spl68 | $spl81 | $spl118)),
  inference(superposition,[],[f796,f14819])).
fof(f23837,plain,(
  s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK10),s('type.rat.rat',sK10))) | sP5('F_0','const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat',sK10),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12))))) | ($spl68 | $spl81 | $spl118)),
  inference(forward_demodulation,[],[f23394,f373])).
fof(f23394,plain,(
  sP5('F_0','const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat',sK10),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK10),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',sK10))))) | ($spl68 | $spl81 | $spl118)),
  inference(superposition,[],[f795,f14819])).
fof(f23832,plain,(
  s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK10),s('type.rat.rat',sK10))) | ~sP5('T_0','const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat',sK10),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12))))) | ($spl68 | $spl81 | $spl118)),
  inference(forward_demodulation,[],[f23393,f373])).
fof(f23393,plain,(
  ~sP5('T_0','const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat',sK10),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK10),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',sK10))))) | ($spl68 | $spl81 | $spl118)),
  inference(superposition,[],[f794,f14819])).
fof(f15250,plain,(
  ( ! [X4] : (s('type.rat.rat',X4) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl148),
  inference(cnf_transformation,[],[f15250_D])).
fof(f15250_D,plain,(
  ( ! [X4] : (s('type.rat.rat',X4) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) <=> ~$spl148),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl148])])).
fof(f14378,plain,(
  ( ! [X10] : (s('type.rat.rat',X10) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X10),s('type.rat.rat',sK12))),s('type.rat.rat',sK12)))) ) | $spl116),
  inference(cnf_transformation,[],[f14378_D])).
fof(f14378_D,plain,(
  ( ! [X10] : (s('type.rat.rat',X10) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X10),s('type.rat.rat',sK12))),s('type.rat.rat',sK12)))) ) <=> ~$spl116),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl116])])).
fof(f15238,plain,(
  ( ! [X2,X3] : (s('type.rat.rat',X3) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X3),s('type.rat.rat',sK12))),s('type.rat.rat',sK12))) | s('type.rat.rat',X2) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl81),
  inference(duplicate_literal_removal,[],[f15187])).
fof(f15187,plain,(
  ( ! [X2,X3] : (s('type.rat.rat',X3) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X3),s('type.rat.rat',sK12))),s('type.rat.rat',sK12))) | s('type.rat.rat',X2) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.rat.rat',X2) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl81),
  inference(superposition,[],[f13186,f1468])).
fof(f15239,plain,(
  ( ! [X4,X5] : (s('type.rat.rat',X5) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X5),s('type.rat.rat',sK12))),s('type.rat.rat',sK12))) | s('type.rat.rat',X4) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl81),
  inference(duplicate_literal_removal,[],[f15183])).
fof(f15183,plain,(
  ( ! [X4,X5] : (s('type.rat.rat',X5) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X5),s('type.rat.rat',sK12))),s('type.rat.rat',sK12))) | s('type.rat.rat',X4) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.rat.rat',X4) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl81),
  inference(superposition,[],[f1468,f13186])).
fof(f1462,plain,(
  ( ! [X7] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X7),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X7))))) | s('type.rat.rat',X7) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl4),
  inference(cnf_transformation,[],[f1462_D])).
fof(f1462_D,plain,(
  ( ! [X7] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X7),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X7))))) | s('type.rat.rat',X7) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) <=> ~$spl4),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl4])])).
fof(f14457,plain,(
  ( ! [X128] : (s('type.rat.rat',X128) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X128),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12)))))))) ) | $spl142),
  inference(cnf_transformation,[],[f14457_D])).
fof(f14457_D,plain,(
  ( ! [X128] : (s('type.rat.rat',X128) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X128),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12)))))))) ) <=> ~$spl142),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl142])])).
fof(f14467,plain,(
  ( ! [X123,X124] : (s('type.rat.rat',X124) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X124),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X123),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X123))))) | s('type.rat.rat',X123) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl81),
  inference(forward_demodulation,[],[f7787,f13036])).
fof(f7787,plain,(
  ( ! [X123,X124] : (s('type.rat.rat',X124) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X124),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X123),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X123))))) | s('type.rat.rat',X123) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f1468,f308])).
fof(f14466,plain,(
  ( ! [X3] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) | s('type.rat.rat',X3) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X3),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12)))))) ) | $spl81),
  inference(forward_demodulation,[],[f14465,f13036])).
fof(f14465,plain,(
  ( ! [X3] : (s('type.rat.rat',X3) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X3),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl81),
  inference(forward_demodulation,[],[f7936,f13036])).
fof(f7936,plain,(
  ( ! [X3] : (s('type.rat.rat',X3) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X3),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) )),
  inference(superposition,[],[f1308,f1468])).
fof(f14463,plain,(
  ( ! [X13] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) | s('type.rat.rat',X13) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X13),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12)))))) ) | $spl81),
  inference(forward_demodulation,[],[f14462,f13036])).
fof(f14462,plain,(
  ( ! [X13] : (s('type.rat.rat',X13) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X13),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl81),
  inference(forward_demodulation,[],[f7949,f13036])).
fof(f7949,plain,(
  ( ! [X13] : (s('type.rat.rat',X13) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X13),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) )),
  inference(superposition,[],[f1468,f1308])).
fof(f14440,plain,(
  s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))))) | $spl140),
  inference(cnf_transformation,[],[f14440_D])).
fof(f14440_D,plain,(
  s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))))) <=> ~$spl140),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl140])])).
fof(f14461,plain,(
  ( ! [X20] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X20),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X20))))) | s('type.rat.rat',X20) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl81),
  inference(forward_demodulation,[],[f8435,f13036])).
fof(f8435,plain,(
  ( ! [X20] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X20),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X20))))) | s('type.rat.rat',X20) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f1440,f308])).
fof(f14458,plain,(
  ( ! [X127] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X127),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X127),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X127)))))) ) | $spl144),
  inference(cnf_transformation,[],[f14458_D])).
fof(f14458_D,plain,(
  ( ! [X127] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X127),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X127),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X127)))))) ) <=> ~$spl144),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl144])])).
fof(f14460,plain,(
  ( ! [X124] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X124),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))))) | s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X124),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X124)))))) ) | $spl81),
  inference(forward_demodulation,[],[f14459,f13036])).
fof(f14459,plain,(
  ( ! [X124] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X124),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X124))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X124),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) ) | $spl81),
  inference(forward_demodulation,[],[f8755,f13036])).
fof(f8755,plain,(
  ( ! [X124] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X124),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X124))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X124),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) )),
  inference(superposition,[],[f1440,f1436])).
fof(f14456,plain,(
  ( ! [X127,X128] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X127),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))))) | s('type.rat.rat',X128) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X128),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X127),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X127)))))) ) | $spl81),
  inference(forward_demodulation,[],[f14455,f13036])).
fof(f14455,plain,(
  ( ! [X127,X128] : (s('type.rat.rat',X128) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X128),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X127),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X127))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X127),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) ) | $spl81),
  inference(forward_demodulation,[],[f8757,f13036])).
fof(f8757,plain,(
  ( ! [X127,X128] : (s('type.rat.rat',X128) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X128),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X127),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X127))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X127),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) )),
  inference(superposition,[],[f1468,f1436])).
fof(f13984,plain,(
  ( ! [X6] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X6),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X6))))) | s('type.rat.rat',X6) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl81),
  inference(superposition,[],[f13270,f13038])).
fof(f14437,plain,(
  ( ! [X9] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X9),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X9),s('type.rat.rat',sK12))),s('type.rat.rat',sK12)))) ) | $spl138),
  inference(cnf_transformation,[],[f14437_D])).
fof(f14437_D,plain,(
  ( ! [X9] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X9),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X9),s('type.rat.rat',sK12))),s('type.rat.rat',sK12)))) ) <=> ~$spl138),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl138])])).
fof(f14376,plain,(
  ( ! [X10,X9] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X10),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X10),s('type.rat.rat',sK12))),s('type.rat.rat',sK12))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X9),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X9))))) | s('type.rat.rat',X9) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl81),
  inference(forward_demodulation,[],[f14304,f13039])).
fof(f14304,plain,(
  ( ! [X10,X9] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X10),s('type.rat.rat',sK12))),s('type.rat.rat',sK12))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X10),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X9),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X9))))) | s('type.rat.rat',X9) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl81),
  inference(superposition,[],[f13186,f13038])).
fof(f14319,plain,(
  ( ! [X11] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X11),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat',sK12))),s('type.rat.rat',sK12))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12)))) ) | $spl81),
  inference(superposition,[],[f13186,f13039])).
fof(f14324,plain,(
  ( ! [X9] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X9),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X9),s('type.rat.rat',sK12))),s('type.rat.rat',sK12))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12)))) ) | $spl81),
  inference(superposition,[],[f13039,f13186])).
fof(f14406,plain,(
  ( ! [X12] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X12),s('type.rat.rat',X12))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X12),s('type.rat.rat',X12))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X12),s('type.rat.rat',X12))))) | s('type.rat.rat',X12) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl126),
  inference(cnf_transformation,[],[f14406_D])).
fof(f14406_D,plain,(
  ( ! [X12] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X12),s('type.rat.rat',X12))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X12),s('type.rat.rat',X12))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X12),s('type.rat.rat',X12))))) | s('type.rat.rat',X12) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) <=> ~$spl126),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl126])])).
fof(f14436,plain,(
  ( ! [X0] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) | s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X0),s('type.rat.rat',X0))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X0),s('type.rat.rat',X0))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X0),s('type.rat.rat',X0))))) | s('type.rat.rat',X0) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl81),
  inference(forward_demodulation,[],[f8425,f13036])).
fof(f14405,plain,(
  ( ! [X70] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X70),s('type.rat.rat',X70))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X70),s('type.rat.rat',X70))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X70),s('type.rat.rat',X70))))))) | s('type.rat.rat',X70) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl124),
  inference(cnf_transformation,[],[f14405_D])).
fof(f14405_D,plain,(
  ( ! [X70] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X70),s('type.rat.rat',X70))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X70),s('type.rat.rat',X70))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X70),s('type.rat.rat',X70))))))) | s('type.rat.rat',X70) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) <=> ~$spl124),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl124])])).
fof(f14435,plain,(
  ( ! [X5] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) | s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X5),s('type.rat.rat',X5))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X5),s('type.rat.rat',X5))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X5),s('type.rat.rat',X5))))))) | s('type.rat.rat',X5) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl81),
  inference(forward_demodulation,[],[f8522,f13036])).
fof(f14434,plain,(
  ( ! [X109,X108] : (s('type.rat.rat',X109) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X108),s('type.rat.rat',X108))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X109),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X108),s('type.rat.rat',X108))))))) | s('type.rat.rat',X108) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl136),
  inference(cnf_transformation,[],[f14434_D])).
fof(f14434_D,plain,(
  ( ! [X109,X108] : (s('type.rat.rat',X109) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X108),s('type.rat.rat',X108))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X109),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X108),s('type.rat.rat',X108))))))) | s('type.rat.rat',X108) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) <=> ~$spl136),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl136])])).
fof(f14433,plain,(
  ( ! [X109,X108] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) | s('type.rat.rat',X109) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X108),s('type.rat.rat',X108))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X109),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X108),s('type.rat.rat',X108))))))) | s('type.rat.rat',X108) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl81),
  inference(forward_demodulation,[],[f8569,f13036])).
fof(f14432,plain,(
  s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat',sK12))),s('type.rat.rat',sK12))) | $spl134),
  inference(cnf_transformation,[],[f14432_D])).
fof(f14432_D,plain,(
  s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat',sK12))),s('type.rat.rat',sK12))) <=> ~$spl134),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl134])])).
fof(f14430,plain,(
  ( ! [X0] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat',sK12))),s('type.rat.rat',sK12))) | s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X0),s('type.rat.rat',X0))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X0),s('type.rat.rat',X0))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X0),s('type.rat.rat',X0))))))) | s('type.rat.rat',X0) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl81),
  inference(forward_demodulation,[],[f14429,f3474])).
fof(f14429,plain,(
  ( ! [X0] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))))),s('type.rat.rat',sK12))) | s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X0),s('type.rat.rat',X0))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X0),s('type.rat.rat',X0))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X0),s('type.rat.rat',X0))))))) | s('type.rat.rat',X0) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl81),
  inference(forward_demodulation,[],[f14428,f3474])).
fof(f14428,plain,(
  ( ! [X0] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))))) | s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X0),s('type.rat.rat',X0))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X0),s('type.rat.rat',X0))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X0),s('type.rat.rat',X0))))))) | s('type.rat.rat',X0) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl81),
  inference(forward_demodulation,[],[f8643,f13036])).
fof(f8643,plain,(
  ( ! [X0] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X0),s('type.rat.rat',X0))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X0),s('type.rat.rat',X0))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X0),s('type.rat.rat',X0))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.rat.rat',X0) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f1436,f1440])).
fof(f14427,plain,(
  ( ! [X21] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',X21))),s('type.rat.rat',sK12))) | s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X21),s('type.rat.rat',X21))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X21),s('type.rat.rat',X21)))))))) ) | $spl132),
  inference(cnf_transformation,[],[f14427_D])).
fof(f14427_D,plain,(
  ( ! [X21] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',X21))),s('type.rat.rat',sK12))) | s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X21),s('type.rat.rat',X21))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X21),s('type.rat.rat',X21)))))))) ) <=> ~$spl132),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl132])])).
fof(f14426,plain,(
  ( ! [X21] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',X21))),s('type.rat.rat',sK12))) | s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X21),s('type.rat.rat',X21))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X21),s('type.rat.rat',X21))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12)))) ) | $spl81),
  inference(forward_demodulation,[],[f14425,f3474])).
fof(f14425,plain,(
  ( ! [X21] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X21),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))))) | s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X21),s('type.rat.rat',X21))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X21),s('type.rat.rat',X21))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12)))) ) | $spl81),
  inference(forward_demodulation,[],[f14424,f13036])).
fof(f14424,plain,(
  ( ! [X21] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X21),s('type.rat.rat',X21))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X21),s('type.rat.rat',X21))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X21),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) ) | $spl81),
  inference(forward_demodulation,[],[f14423,f13036])).
fof(f14423,plain,(
  ( ! [X21] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X21),s('type.rat.rat',X21))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X21),s('type.rat.rat',X21))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X21),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) ) | $spl81),
  inference(forward_demodulation,[],[f14422,f373])).
fof(f14422,plain,(
  ( ! [X21] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X21),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X21))))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X21),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X21))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X21),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) ) | $spl81),
  inference(forward_demodulation,[],[f8918,f13036])).
fof(f14417,plain,(
  ( ! [X185,X186] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X186),s('type.rat.rat',X185))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X185),s('type.rat.rat',X186))))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X186),s('type.rat.rat',X185))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X185),s('type.rat.rat',X186))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X185),s('type.rat.rat',X186)))) ) | $spl130),
  inference(cnf_transformation,[],[f14417_D])).
fof(f14417_D,plain,(
  ( ! [X185,X186] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X186),s('type.rat.rat',X185))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X185),s('type.rat.rat',X186))))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X186),s('type.rat.rat',X185))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X185),s('type.rat.rat',X186))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X185),s('type.rat.rat',X186)))) ) <=> ~$spl130),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl130])])).
fof(f14416,plain,(
  ( ! [X185,X186] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X186),s('type.rat.rat',X185))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X185),s('type.rat.rat',X186))))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X186),s('type.rat.rat',X185))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X185),s('type.rat.rat',X186))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X185),s('type.rat.rat',X186)))) ) | $spl81),
  inference(forward_demodulation,[],[f14415,f13036])).
fof(f14415,plain,(
  ( ! [X185,X186] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X186),s('type.rat.rat',X185))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X185),s('type.rat.rat',X186))))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X186),s('type.rat.rat',X185))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X185),s('type.rat.rat',X186))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X185),s('type.rat.rat',X186)))) ) | $spl81),
  inference(forward_demodulation,[],[f14414,f3474])).
fof(f14414,plain,(
  ( ! [X185,X186] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X185),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X186),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X185),s('type.rat.rat',X186))))))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X185),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X186),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X185),s('type.rat.rat',X186))))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X185),s('type.rat.rat',X186)))) ) | $spl81),
  inference(forward_demodulation,[],[f9295,f13036])).
fof(f9295,plain,(
  ( ! [X185,X186] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X185),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X186),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X185),s('type.rat.rat',X186))))))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X185),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X186),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X185),s('type.rat.rat',X186))))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X185),s('type.rat.rat',X186)))) )),
  inference(forward_demodulation,[],[f9130,f295])).
fof(f9130,plain,(
  ( ! [X185,X186] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X185),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X186),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X185),s('type.rat.rat',X186))))))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X185),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X186),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X185),s('type.rat.rat',X186))))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X185),s('type.rat.rat',X186)))) )),
  inference(superposition,[],[f1436,f1466])).
fof(f14413,plain,(
  ( ! [X184,X183] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X183),s('type.rat.rat',X184))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X183),s('type.rat.rat',X184))))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X183),s('type.rat.rat',X184))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X183),s('type.rat.rat',X184))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X184),s('type.rat.rat',X183)))) ) | $spl128),
  inference(cnf_transformation,[],[f14413_D])).
fof(f14413_D,plain,(
  ( ! [X184,X183] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X183),s('type.rat.rat',X184))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X183),s('type.rat.rat',X184))))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X183),s('type.rat.rat',X184))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X183),s('type.rat.rat',X184))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X184),s('type.rat.rat',X183)))) ) <=> ~$spl128),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl128])])).
fof(f14412,plain,(
  ( ! [X184,X183] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X183),s('type.rat.rat',X184))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X183),s('type.rat.rat',X184))))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X183),s('type.rat.rat',X184))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X183),s('type.rat.rat',X184))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X184),s('type.rat.rat',X183)))) ) | $spl81),
  inference(forward_demodulation,[],[f14411,f13036])).
fof(f14411,plain,(
  ( ! [X184,X183] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X183),s('type.rat.rat',X184))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X183),s('type.rat.rat',X184))))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X183),s('type.rat.rat',X184))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X183),s('type.rat.rat',X184))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X184),s('type.rat.rat',X183)))) ) | $spl81),
  inference(forward_demodulation,[],[f14410,f3474])).
fof(f14410,plain,(
  ( ! [X184,X183] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X184),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X183),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X183),s('type.rat.rat',X184))))))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X184),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X183),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X183),s('type.rat.rat',X184))))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X184),s('type.rat.rat',X183)))) ) | $spl81),
  inference(forward_demodulation,[],[f14409,f373])).
fof(f14409,plain,(
  ( ! [X184,X183] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X184),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X183),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X183),s('type.rat.rat',X184))))))))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X184),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X183),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X183),s('type.rat.rat',X184))))))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X184),s('type.rat.rat',X183)))) ) | $spl81),
  inference(forward_demodulation,[],[f14408,f372])).
fof(f14408,plain,(
  ( ! [X184,X183] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X184),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X183),s('type.rat.rat',X184))))),s('type.rat.rat',X183))))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X184),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X183),s('type.rat.rat',X184))))),s('type.rat.rat',X183))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X184),s('type.rat.rat',X183)))) ) | $spl81),
  inference(forward_demodulation,[],[f14407,f3518])).
fof(f14407,plain,(
  ( ! [X184,X183] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X183),s('type.rat.rat',X184))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X183),s('type.rat.rat',X184))))))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X183),s('type.rat.rat',X184))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X183),s('type.rat.rat',X184))))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X184),s('type.rat.rat',X183)))) ) | $spl81),
  inference(forward_demodulation,[],[f9585,f13036])).
fof(f13988,plain,(
  ( ! [X12] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X12),s('type.rat.rat',X12))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X12),s('type.rat.rat',X12))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X12),s('type.rat.rat',X12))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) | s('type.rat.rat',X12) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl81),
  inference(superposition,[],[f13270,f13270])).
fof(f14029,plain,(
  ( ! [X70] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X70),s('type.rat.rat',X70))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X70),s('type.rat.rat',X70))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X70),s('type.rat.rat',X70))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) | s('type.rat.rat',X70) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl81),
  inference(superposition,[],[f13038,f13270])).
fof(f14398,plain,(
  ( ! [X9] : (s('type.rat.rat',X9) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X9),s('type.rat.rat',sK12))),s('type.rat.rat',sK12))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12)))) ) | ($spl78 | $spl81)),
  inference(forward_demodulation,[],[f14324,f13056])).
fof(f13056,plain,(
  ( ! [X3] : (s('type.rat.rat',X3) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X3),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12)))))) ) | ($spl78 | $spl81)),
  inference(backward_demodulation,[],[f13036,f5081])).
fof(f14393,plain,(
  ( ! [X11] : (s('type.rat.rat',X11) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat',sK12))),s('type.rat.rat',sK12))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12)))) ) | ($spl78 | $spl81)),
  inference(forward_demodulation,[],[f14319,f13056])).
fof(f14387,plain,(
  ( ! [X30,X31] : (s('type.rat.rat',X31) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X31),s('type.rat.rat',sK12))),s('type.rat.rat',sK12))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X30),s('type.rat.rat',X30))) | s('type.rat.rat',X30) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | ($spl78 | $spl81)),
  inference(forward_demodulation,[],[f14386,f13056])).
fof(f14385,plain,(
  ( ! [X28,X29] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X29),s('type.rat.rat',sK12))),s('type.rat.rat',sK12))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X28),s('type.rat.rat',X28))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X29),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X28),s('type.rat.rat',X28))))))) | s('type.rat.rat',X28) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl120),
  inference(cnf_transformation,[],[f14385_D])).
fof(f14385_D,plain,(
  ( ! [X28,X29] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X29),s('type.rat.rat',sK12))),s('type.rat.rat',sK12))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X28),s('type.rat.rat',X28))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X29),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X28),s('type.rat.rat',X28))))))) | s('type.rat.rat',X28) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) <=> ~$spl120),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl120])])).
fof(f14311,plain,(
  ( ! [X28,X29] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X29),s('type.rat.rat',sK12))),s('type.rat.rat',sK12))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X28),s('type.rat.rat',X28))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X29),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X28),s('type.rat.rat',X28))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) | s('type.rat.rat',X28) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl81),
  inference(superposition,[],[f13186,f13270])).
fof(f14377,plain,(
  ( ! [X10,X9] : (s('type.rat.rat',X10) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X10),s('type.rat.rat',sK12))),s('type.rat.rat',sK12))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X9),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X9))))) | s('type.rat.rat',X9) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | ($spl78 | $spl81)),
  inference(forward_demodulation,[],[f14376,f13056])).
fof(f13339,plain,(
  ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | $spl113),
  inference(cnf_transformation,[],[f13339_D])).
fof(f13339_D,plain,(
  ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) <=> ~$spl113),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl113])])).
fof(f13340,plain,(
  ( ! [X14,X12,X13] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X13),s('type.rat.rat',X14))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X12),s('type.rat.rat',X14))),s('type.rat.rat',X12))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X12),s('type.rat.rat',X13))),s('type.rat.rat',X12))))) | s('type.rat.rat',X12) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl114),
  inference(cnf_transformation,[],[f13340_D])).
fof(f13340_D,plain,(
  ( ! [X14,X12,X13] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X13),s('type.rat.rat',X14))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X12),s('type.rat.rat',X14))),s('type.rat.rat',X12))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X12),s('type.rat.rat',X13))),s('type.rat.rat',X12))))) | s('type.rat.rat',X12) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) <=> ~$spl114),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl114])])).
fof(f13337,plain,(
  ( ! [X14,X12,X13] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X13),s('type.rat.rat',X14))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X12),s('type.rat.rat',X14))),s('type.rat.rat',X12))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X12),s('type.rat.rat',X13))),s('type.rat.rat',X12))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.rat.rat',X12) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl81),
  inference(forward_demodulation,[],[f13336,f3474])).
fof(f13336,plain,(
  ( ! [X14,X12,X13] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X13),s('type.rat.rat',X14))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X14),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X12),s('type.rat.rat',X12))))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X12),s('type.rat.rat',X13))),s('type.rat.rat',X12))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.rat.rat',X12) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl81),
  inference(forward_demodulation,[],[f13335,f3474])).
fof(f13335,plain,(
  ( ! [X14,X12,X13] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X13),s('type.rat.rat',X14))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X14),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X12),s('type.rat.rat',X12))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X13),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X12),s('type.rat.rat',X12))))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.rat.rat',X12) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl81),
  inference(forward_demodulation,[],[f13326,f373])).
fof(f13326,plain,(
  ( ! [X14,X12,X13] : (~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X13),s('type.rat.rat',X14))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X14),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X12),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X12))))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X13),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X12),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X12))))))))) | s('type.rat.rat',X12) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl81),
  inference(superposition,[],[f421,f13038])).
fof(f12374,plain,(
  $false | ($spl9 | $spl68 | $spl80)),
  inference(subsumption_resolution,[],[f11117,f531])).
fof(f11117,plain,(
  ~sP8('const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat',sK12)),'T_0') | ($spl9 | $spl68 | $spl80)),
  inference(backward_demodulation,[],[f7503,f10582])).
fof(f10582,plain,(
  ~sP8('const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.rat.rat',sK12)),'T_0') | ($spl9 | $spl68)),
  inference(unit_resulting_resolution,[],[f8309,f651])).
fof(f8309,plain,(
  ~sP9('const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.rat.rat',sK12)),'T_0') | ($spl9 | $spl68)),
  inference(unit_resulting_resolution,[],[f288,f8044,f1146])).
fof(f12373,plain,(
  $false | ($spl3 | $spl9 | $spl68 | $spl80 | $spl86)),
  inference(subsumption_resolution,[],[f12372,f10742])).
fof(f10742,plain,(
  ( ! [X0,X1] : (sP2(X0,X1,'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12)))) ) | $spl80),
  inference(backward_demodulation,[],[f7503,f511])).
fof(f12372,plain,(
  ~sP2('const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK10),s('type.rat.rat',sK12)))),'F_0','const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) | ($spl3 | $spl9 | $spl68 | $spl80 | $spl86)),
  inference(forward_demodulation,[],[f12371,f7503])).
fof(f12371,plain,(
  ~sP2('const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK10),s('type.rat.rat',sK12)))),'F_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat',sK12))) | ($spl3 | $spl9 | $spl68 | $spl80 | $spl86)),
  inference(forward_demodulation,[],[f11116,f11458])).
fof(f11458,plain,(
  ( ! [X23] : (s('type.rat.rat',X23) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | ($spl80 | $spl86)),
  inference(subsumption_resolution,[],[f11002,f11134])).
fof(f11134,plain,(
  ( ! [X0] : (p(s(bool,X0))) ) | $spl80),
  inference(condensation,[],[f11133])).
fof(f11133,plain,(
  ( ! [X0,X1] : (p(s(bool,X1)) | p(s(bool,X0))) ) | $spl80),
  inference(subsumption_resolution,[],[f10775,f529])).
fof(f10775,plain,(
  ( ! [X0,X1] : (~sP6('const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12)),X0,X1) | p(s(bool,X1)) | p(s(bool,X0))) ) | $spl80),
  inference(backward_demodulation,[],[f7503,f946])).
fof(f11002,plain,(
  ( ! [X23] : (~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X23),s('type.rat.rat',X23))),s('type.rat.rat',sK12)))) | s('type.rat.rat',X23) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | ($spl80 | $spl86)),
  inference(backward_demodulation,[],[f7503,f8622])).
fof(f11116,plain,(
  ~sP2('const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK10),s('type.rat.rat',sK12)))),'F_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat',sK12))) | ($spl3 | $spl9 | $spl68 | $spl80)),
  inference(backward_demodulation,[],[f7503,f10579])).
fof(f12370,plain,(
  $false | ($spl9 | $spl68 | $spl80)),
  inference(subsumption_resolution,[],[f11115,f647])).
fof(f11115,plain,(
  ~sP9('T_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) | ($spl9 | $spl68 | $spl80)),
  inference(backward_demodulation,[],[f7503,f10576])).
fof(f10576,plain,(
  ~sP9('T_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | ($spl9 | $spl68)),
  inference(unit_resulting_resolution,[],[f8303,f470])).
fof(f8303,plain,(
  ~sP8('T_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | ($spl9 | $spl68)),
  inference(unit_resulting_resolution,[],[f288,f8044,f1113])).
fof(f12365,plain,(
  $false | ($spl9 | $spl68 | $spl80)),
  inference(subsumption_resolution,[],[f11112,f11139])).
fof(f11139,plain,(
  ( ! [X0,X1] : (sP5(X0,X1,'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12)))) ) | $spl80),
  inference(subsumption_resolution,[],[f11138,f527])).
fof(f11138,plain,(
  ( ! [X0,X1] : (~sP3(X1,'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12)),X0) | sP5(X0,X1,'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12)))) ) | $spl80),
  inference(forward_demodulation,[],[f11137,f7503])).
fof(f11137,plain,(
  ( ! [X0,X1] : (sP5(X0,X1,'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) | ~sP3(X1,'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),X0)) ) | $spl80),
  inference(forward_demodulation,[],[f11136,f7503])).
fof(f11136,plain,(
  ( ! [X0,X1] : (sP5(X0,X1,'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | ~sP3(X1,'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),X0)) ) | $spl80),
  inference(subsumption_resolution,[],[f10784,f525])).
fof(f10784,plain,(
  ( ! [X0,X1] : (~sP4(X0,'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12)),X1) | sP5(X0,X1,'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | ~sP3(X1,'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),X0)) ) | $spl80),
  inference(backward_demodulation,[],[f7503,f1209])).
fof(f11112,plain,(
  ~sP5('T_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) | ($spl9 | $spl68 | $spl80)),
  inference(backward_demodulation,[],[f7503,f10508])).
fof(f10508,plain,(
  ~sP5('T_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | ($spl9 | $spl68)),
  inference(unit_resulting_resolution,[],[f8249,f430])).
fof(f8249,plain,(
  ~sP4('T_0','const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.rat.rat',sK12))) | ($spl9 | $spl68)),
  inference(unit_resulting_resolution,[],[f288,f8044,f863])).
fof(f12364,plain,(
  $false | ($spl9 | $spl68 | $spl80)),
  inference(subsumption_resolution,[],[f11111,f528])).
fof(f11111,plain,(
  ~sP3('const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12)),'T_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat',sK12))) | ($spl9 | $spl68 | $spl80)),
  inference(backward_demodulation,[],[f7503,f10289])).
fof(f10289,plain,(
  ~sP3('const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),'T_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.rat.rat',sK12))) | ($spl9 | $spl68)),
  inference(unit_resulting_resolution,[],[f288,f514,f8085,f8124,f432])).
fof(f8124,plain,(
  ~sP5('const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),'T_0') | ($spl9 | $spl68)),
  inference(unit_resulting_resolution,[],[f536,f8044,f450])).
fof(f12363,plain,(
  $false | ($spl9 | $spl65 | $spl68 | $spl80 | $spl86)),
  inference(subsumption_resolution,[],[f12362,f10741])).
fof(f10741,plain,(
  ( ! [X0,X1] : (sP3(X0,X1,'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12)))) ) | $spl80),
  inference(backward_demodulation,[],[f7503,f507])).
fof(f12362,plain,(
  ~sP3(f(s(bool,'T_0')),'T_0','const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) | ($spl9 | $spl65 | $spl68 | $spl80 | $spl86)),
  inference(forward_demodulation,[],[f12361,f7503])).
fof(f12361,plain,(
  ~sP3(f(s(bool,'T_0')),'T_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat',sK12))) | ($spl9 | $spl65 | $spl68 | $spl80 | $spl86)),
  inference(forward_demodulation,[],[f11106,f11458])).
fof(f11106,plain,(
  ~sP3(f(s(bool,'T_0')),'T_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat',sK12))) | ($spl9 | $spl65 | $spl68 | $spl80)),
  inference(backward_demodulation,[],[f7503,f10206])).
fof(f10206,plain,(
  ~sP3(f(s(bool,'T_0')),'T_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.rat.rat',sK12))) | ($spl9 | $spl65 | $spl68)),
  inference(unit_resulting_resolution,[],[f288,f514,f8085,f8123,f432])).
fof(f8123,plain,(
  ~sP5('const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.rat.rat',sK12)),f(s(bool,'T_0')),'T_0') | ($spl9 | $spl65 | $spl68)),
  inference(unit_resulting_resolution,[],[f4109,f8044,f450])).
fof(f12360,plain,(
  $false | ($spl9 | $spl68 | $spl80 | $spl86)),
  inference(subsumption_resolution,[],[f12359,f10742])).
fof(f12359,plain,(
  ( ! [X0] : (~sP2('const.rat.rat_les_2'(s('type.rat.rat',X0),s('type.rat.rat',X0)),'F_0','const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12)))) ) | ($spl9 | $spl68 | $spl80 | $spl86)),
  inference(forward_demodulation,[],[f12358,f7503])).
fof(f12358,plain,(
  ( ! [X0] : (~sP2('const.rat.rat_les_2'(s('type.rat.rat',X0),s('type.rat.rat',X0)),'F_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat',sK12)))) ) | ($spl9 | $spl68 | $spl80 | $spl86)),
  inference(forward_demodulation,[],[f11103,f11458])).
fof(f11103,plain,(
  ( ! [X0] : (~sP2('const.rat.rat_les_2'(s('type.rat.rat',X0),s('type.rat.rat',X0)),'F_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat',sK12)))) ) | ($spl9 | $spl68 | $spl80)),
  inference(backward_demodulation,[],[f7503,f10085])).
fof(f10085,plain,(
  ( ! [X0] : (~sP2('const.rat.rat_les_2'(s('type.rat.rat',X0),s('type.rat.rat',X0)),'F_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.rat.rat',sK12)))) ) | ($spl9 | $spl68)),
  inference(unit_resulting_resolution,[],[f496,f527,f525,f8133,f433])).
fof(f8133,plain,(
  ( ! [X0] : (~sP5('const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.rat.rat',sK12)),'F_0','const.rat.rat_les_2'(s('type.rat.rat',X0),s('type.rat.rat',X0)))) ) | ($spl9 | $spl68)),
  inference(unit_resulting_resolution,[],[f552,f8044,f450])).
fof(f12357,plain,(
  $false | ($spl9 | $spl24 | $spl68 | $spl80 | $spl86)),
  inference(subsumption_resolution,[],[f12356,f10781])).
fof(f10781,plain,(
  sP5('const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12)),'T_0','T_0') | $spl80),
  inference(backward_demodulation,[],[f7503,f1188])).
fof(f12356,plain,(
  ~sP5('const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12)),'T_0','T_0') | ($spl9 | $spl24 | $spl68 | $spl80 | $spl86)),
  inference(forward_demodulation,[],[f12355,f7503])).
fof(f12355,plain,(
  ~sP5('const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat',sK12)),'T_0','T_0') | ($spl9 | $spl24 | $spl68 | $spl80 | $spl86)),
  inference(forward_demodulation,[],[f11102,f11458])).
fof(f11102,plain,(
  ~sP5('const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat',sK12)),'T_0','T_0') | ($spl9 | $spl24 | $spl68 | $spl80)),
  inference(backward_demodulation,[],[f7503,f9864])).
fof(f9864,plain,(
  ~sP5('const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.rat.rat',sK12)),'T_0','T_0') | ($spl9 | $spl24 | $spl68)),
  inference(unit_resulting_resolution,[],[f8320,f429])).
fof(f8320,plain,(
  ~sP3('T_0','T_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.rat.rat',sK12))) | ($spl9 | $spl24 | $spl68)),
  inference(unit_resulting_resolution,[],[f288,f8044,f2200])).
fof(f12352,plain,(
  $false | ($spl9 | $spl68 | $spl80 | $spl86)),
  inference(subsumption_resolution,[],[f12351,f10785])).
fof(f10785,plain,(
  sP5('const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12)),'F_0','F_0') | $spl80),
  inference(backward_demodulation,[],[f7503,f1230])).
fof(f12351,plain,(
  ~sP5('const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12)),'F_0','F_0') | ($spl9 | $spl68 | $spl80 | $spl86)),
  inference(forward_demodulation,[],[f12350,f7503])).
fof(f12350,plain,(
  ~sP5('const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat',sK12)),'F_0','F_0') | ($spl9 | $spl68 | $spl80 | $spl86)),
  inference(forward_demodulation,[],[f11100,f11458])).
fof(f11100,plain,(
  ~sP5('const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat',sK12)),'F_0','F_0') | ($spl9 | $spl68 | $spl80)),
  inference(backward_demodulation,[],[f7503,f9672])).
fof(f9672,plain,(
  ~sP5('const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.rat.rat',sK12)),'F_0','F_0') | ($spl9 | $spl68)),
  inference(unit_resulting_resolution,[],[f8109,f428])).
fof(f8109,plain,(
  ~sP2('F_0','F_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.rat.rat',sK12))) | ($spl9 | $spl68)),
  inference(unit_resulting_resolution,[],[f496,f496,f8044,f443])).
fof(f12345,plain,(
  $false | ($spl9 | $spl68 | $spl80 | $spl86)),
  inference(subsumption_resolution,[],[f12344,f10743])).
fof(f10743,plain,(
  ( ! [X0,X1] : (sP2(X0,'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12)),X1)) ) | $spl80),
  inference(backward_demodulation,[],[f7503,f513])).
fof(f12344,plain,(
  ~sP2('const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat',sK12)))),'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12)),'F_0') | ($spl9 | $spl68 | $spl80 | $spl86)),
  inference(forward_demodulation,[],[f12343,f7503])).
fof(f12343,plain,(
  ~sP2('const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat',sK12)))),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat',sK12)),'F_0') | ($spl9 | $spl68 | $spl80 | $spl86)),
  inference(forward_demodulation,[],[f11097,f11458])).
fof(f11097,plain,(
  ~sP2('const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat',sK12)))),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat',sK12)),'F_0') | ($spl9 | $spl68 | $spl80)),
  inference(backward_demodulation,[],[f7503,f9658])).
fof(f9658,plain,(
  ~sP2('const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.rat.rat',sK12)),'F_0') | ($spl9 | $spl68)),
  inference(forward_demodulation,[],[f9657,f1409])).
fof(f9657,plain,(
  ~sP2('const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))))),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.rat.rat',sK12)),'F_0') | ($spl9 | $spl68)),
  inference(forward_demodulation,[],[f9642,f372])).
fof(f9642,plain,(
  ~sP2('const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.rat.rat',sK12)))),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.rat.rat',sK12)),'F_0') | ($spl9 | $spl68)),
  inference(unit_resulting_resolution,[],[f496,f505,f6808,f8092,f434])).
fof(f8092,plain,(
  ( ! [X0,X1] : (sP3('const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.rat.rat',sK12)),X0,X1)) ) | ($spl9 | $spl68)),
  inference(unit_resulting_resolution,[],[f8044,f442])).
fof(f12336,plain,(
  $false | ($spl9 | $spl68 | $spl80 | $spl86)),
  inference(subsumption_resolution,[],[f12335,f10743])).
fof(f12335,plain,(
  ~sP2('const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12)),'F_0') | ($spl9 | $spl68 | $spl80 | $spl86)),
  inference(forward_demodulation,[],[f12334,f7503])).
fof(f12334,plain,(
  ~sP2('const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat',sK12)),'F_0') | ($spl9 | $spl68 | $spl80 | $spl86)),
  inference(forward_demodulation,[],[f12333,f11458])).
fof(f12333,plain,(
  ~sP2('const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat',sK12)),'F_0') | ($spl9 | $spl68 | $spl80 | $spl86)),
  inference(forward_demodulation,[],[f12332,f7503])).
fof(f12332,plain,(
  ~sP2('const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),'F_0') | ($spl9 | $spl68 | $spl80 | $spl86)),
  inference(forward_demodulation,[],[f11092,f11458])).
fof(f11092,plain,(
  ~sP2('const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat',sK12)))),'F_0') | ($spl9 | $spl68 | $spl80)),
  inference(backward_demodulation,[],[f7503,f9639])).
fof(f9639,plain,(
  ~sP2('const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))),'F_0') | ($spl9 | $spl68)),
  inference(forward_demodulation,[],[f9638,f1409])).
fof(f9638,plain,(
  ~sP2('const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))))),'F_0') | ($spl9 | $spl68)),
  inference(forward_demodulation,[],[f9633,f372])).
fof(f9633,plain,(
  ~sP2('const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.rat.rat',sK12)))),'F_0') | ($spl9 | $spl68)),
  inference(unit_resulting_resolution,[],[f496,f505,f6806,f8091,f434])).
fof(f8091,plain,(
  ( ! [X0,X1] : (sP3(X0,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.rat.rat',sK12)),X1)) ) | ($spl9 | $spl68)),
  inference(unit_resulting_resolution,[],[f8044,f441])).
fof(f12331,plain,(
  $false | ($spl9 | $spl68 | $spl80 | $spl86)),
  inference(subsumption_resolution,[],[f11091,f11771])).
fof(f11771,plain,(
  ( ! [X24] : (~sP5('F_0','const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat',X24),s('type.rat.rat',sK12)))) ) | ($spl68 | $spl80 | $spl86)),
  inference(forward_demodulation,[],[f11770,f7503])).
fof(f11770,plain,(
  ( ! [X24] : (~sP5('F_0','const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),'const.rat.rat_les_2'(s('type.rat.rat',X24),s('type.rat.rat',sK12)))) ) | ($spl68 | $spl80 | $spl86)),
  inference(forward_demodulation,[],[f11769,f11458])).
fof(f11769,plain,(
  ( ! [X24] : (~sP5('F_0','const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X24),s('type.rat.rat',sK12)))),'const.rat.rat_les_2'(s('type.rat.rat',X24),s('type.rat.rat',sK12)))) ) | ($spl68 | $spl80 | $spl86)),
  inference(forward_demodulation,[],[f11488,f7503])).
fof(f11488,plain,(
  ( ! [X24] : (~sP5('F_0','const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X24),s('type.rat.rat',sK12)))),'const.rat.rat_les_2'(s('type.rat.rat',X24),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) ) | ($spl68 | $spl80 | $spl86)),
  inference(backward_demodulation,[],[f11458,f11314])).
fof(f11314,plain,(
  ( ! [X24] : (~sP5('F_0','const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X24),s('type.rat.rat',sK12)))),'const.rat.rat_les_2'(s('type.rat.rat',X24),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) ) | ($spl68 | $spl80)),
  inference(backward_demodulation,[],[f10872,f7958])).
fof(f10872,plain,(
  ( ! [X1] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X1),s('type.rat.rat',sK12))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X1),s('type.rat.rat',sK12)))) ) | ($spl68 | $spl80)),
  inference(backward_demodulation,[],[f7503,f6972])).
fof(f11091,plain,(
  sP5('F_0','const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat',sK12))) | ($spl9 | $spl68 | $spl80)),
  inference(backward_demodulation,[],[f7503,f9632])).
fof(f9632,plain,(
  sP5('F_0','const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.rat.rat',sK12))) | ($spl9 | $spl68)),
  inference(unit_resulting_resolution,[],[f496,f513,f505,f8091,f434])).
fof(f12250,plain,(
  ( ! [X6] : (s('type.rat.rat',sK12) = s('type.rat.rat',X6)) ) | $spl110),
  inference(cnf_transformation,[],[f12250_D])).
fof(f12250_D,plain,(
  ( ! [X6] : (s('type.rat.rat',sK12) = s('type.rat.rat',X6)) ) <=> ~$spl110),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl110])])).
fof(f11846,plain,(
  ( ! [X2] : (s('type.rat.rat',X2) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12)))) ) | $spl108),
  inference(cnf_transformation,[],[f11846_D])).
fof(f11846_D,plain,(
  ( ! [X2] : (s('type.rat.rat',X2) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12)))) ) <=> ~$spl108),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl108])])).
fof(f12259,plain,(
  ( ! [X109,X108] : (s('type.rat.rat',X109) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) | s('type.rat.rat',sK12) = s('type.rat.rat',X108)) ) | ($spl47 | $spl80 | $spl86)),
  inference(forward_demodulation,[],[f12258,f7503])).
fof(f12258,plain,(
  ( ! [X109,X108] : (s('type.rat.rat',X109) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat',sK12))) | s('type.rat.rat',sK12) = s('type.rat.rat',X108)) ) | ($spl47 | $spl80 | $spl86)),
  inference(forward_demodulation,[],[f12257,f11458])).
fof(f12257,plain,(
  ( ! [X109,X108] : (s('type.rat.rat',X109) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X108),s('type.rat.rat',X108))),s('type.rat.rat',sK12))) | s('type.rat.rat',sK12) = s('type.rat.rat',X108)) ) | ($spl47 | $spl80 | $spl86)),
  inference(forward_demodulation,[],[f12256,f7503])).
fof(f12256,plain,(
  ( ! [X109,X108] : (s('type.rat.rat',X109) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X108),s('type.rat.rat',X108))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.rat.rat',sK12) = s('type.rat.rat',X108)) ) | ($spl47 | $spl80 | $spl86)),
  inference(forward_demodulation,[],[f11003,f11458])).
fof(f11003,plain,(
  ( ! [X109,X108] : (s('type.rat.rat',sK12) = s('type.rat.rat',X108) | s('type.rat.rat',X109) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X108),s('type.rat.rat',X108))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X109),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X108),s('type.rat.rat',X108)))))))) ) | ($spl47 | $spl80)),
  inference(backward_demodulation,[],[f7503,f8624])).
fof(f12253,plain,(
  ( ! [X10,X11] : (s('type.rat.rat',X11) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) | s('type.rat.rat',sK12) = s('type.rat.rat',X10)) ) | ($spl80 | $spl86)),
  inference(forward_demodulation,[],[f12252,f7503])).
fof(f12252,plain,(
  ( ! [X10,X11] : (s('type.rat.rat',X11) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat',sK12))) | s('type.rat.rat',sK12) = s('type.rat.rat',X10)) ) | ($spl80 | $spl86)),
  inference(forward_demodulation,[],[f12251,f11458])).
fof(f12251,plain,(
  ( ! [X10,X11] : (s('type.rat.rat',X11) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X10))),s('type.rat.rat',sK12))) | s('type.rat.rat',sK12) = s('type.rat.rat',X10)) ) | ($spl80 | $spl86)),
  inference(forward_demodulation,[],[f11754,f7503])).
fof(f11754,plain,(
  ( ! [X10,X11] : (s('type.rat.rat',X11) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X10))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.rat.rat',sK12) = s('type.rat.rat',X10)) ) | ($spl80 | $spl86)),
  inference(backward_demodulation,[],[f11458,f10837])).
fof(f10837,plain,(
  ( ! [X10,X11] : (s('type.rat.rat',sK12) = s('type.rat.rat',X10) | s('type.rat.rat',X11) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X10))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X11),s('type.rat.rat',X10)))))) ) | $spl80),
  inference(backward_demodulation,[],[f7503,f4888])).
fof(f12249,plain,(
  ( ! [X6,X7] : (s('type.rat.rat',X7) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) | s('type.rat.rat',sK12) = s('type.rat.rat',X6)) ) | ($spl80 | $spl86)),
  inference(forward_demodulation,[],[f12248,f7503])).
fof(f12248,plain,(
  ( ! [X6,X7] : (s('type.rat.rat',X7) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat',sK12))) | s('type.rat.rat',sK12) = s('type.rat.rat',X6)) ) | ($spl80 | $spl86)),
  inference(forward_demodulation,[],[f12247,f11458])).
fof(f12247,plain,(
  ( ! [X6,X7] : (s('type.rat.rat',X7) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X6))),s('type.rat.rat',sK12))) | s('type.rat.rat',sK12) = s('type.rat.rat',X6)) ) | ($spl80 | $spl86)),
  inference(forward_demodulation,[],[f11753,f7503])).
fof(f11753,plain,(
  ( ! [X6,X7] : (s('type.rat.rat',X7) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X6))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.rat.rat',sK12) = s('type.rat.rat',X6)) ) | ($spl80 | $spl86)),
  inference(backward_demodulation,[],[f11458,f10836])).
fof(f10836,plain,(
  ( ! [X6,X7] : (s('type.rat.rat',sK12) = s('type.rat.rat',X6) | s('type.rat.rat',X7) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X6))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X6),s('type.rat.rat',X7)))))) ) | $spl80),
  inference(backward_demodulation,[],[f7503,f4885])).
fof(f12223,plain,(
  $false | ($spl9 | $spl40 | $spl68 | $spl80 | $spl86)),
  inference(subsumption_resolution,[],[f12222,f10761])).
fof(f10761,plain,(
  ( ! [X0] : (sP9('T_0','const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12)),X0)) ) | $spl80),
  inference(backward_demodulation,[],[f7503,f649])).
fof(f12222,plain,(
  ~sP9('T_0','const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12)),'T_0') | ($spl9 | $spl40 | $spl68 | $spl80 | $spl86)),
  inference(forward_demodulation,[],[f11728,f7503])).
fof(f11728,plain,(
  ~sP9('T_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat',sK12)),'T_0') | ($spl9 | $spl40 | $spl68 | $spl80 | $spl86)),
  inference(backward_demodulation,[],[f11458,f10983])).
fof(f10983,plain,(
  ~sP9('T_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat',sK12)),'T_0') | ($spl9 | $spl40 | $spl68 | $spl80)),
  inference(backward_demodulation,[],[f7503,f8343])).
fof(f8343,plain,(
  ~sP9('T_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.rat.rat',sK12)),'T_0') | ($spl9 | $spl40 | $spl68)),
  inference(unit_resulting_resolution,[],[f288,f8044,f2224])).
fof(f12220,plain,(
  $false | ($spl9 | $spl34 | $spl68 | $spl80 | $spl86)),
  inference(subsumption_resolution,[],[f12219,f10747])).
fof(f10747,plain,(
  ( ! [X0,X1] : (sP8(X0,'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12)),X1)) ) | $spl80),
  inference(backward_demodulation,[],[f7503,f523])).
fof(f12219,plain,(
  ~sP8('T_0','const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12)),'T_0') | ($spl9 | $spl34 | $spl68 | $spl80 | $spl86)),
  inference(forward_demodulation,[],[f11726,f7503])).
fof(f11726,plain,(
  ~sP8('T_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat',sK12)),'T_0') | ($spl9 | $spl34 | $spl68 | $spl80 | $spl86)),
  inference(backward_demodulation,[],[f11458,f10981])).
fof(f10981,plain,(
  ~sP8('T_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat',sK12)),'T_0') | ($spl9 | $spl34 | $spl68 | $spl80)),
  inference(backward_demodulation,[],[f7503,f8339])).
fof(f8339,plain,(
  ~sP8('T_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.rat.rat',sK12)),'T_0') | ($spl9 | $spl34 | $spl68)),
  inference(unit_resulting_resolution,[],[f288,f8044,f2215])).
fof(f12218,plain,(
  $false | ($spl9 | $spl32 | $spl68 | $spl80 | $spl86)),
  inference(subsumption_resolution,[],[f12217,f10764])).
fof(f10764,plain,(
  ( ! [X0] : (sP7('T_0',X0,'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12)))) ) | $spl80),
  inference(backward_demodulation,[],[f7503,f663])).
fof(f12217,plain,(
  ~sP7('T_0','const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) | ($spl9 | $spl32 | $spl68 | $spl80 | $spl86)),
  inference(forward_demodulation,[],[f11725,f7503])).
fof(f11725,plain,(
  ~sP7('T_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat',sK12))) | ($spl9 | $spl32 | $spl68 | $spl80 | $spl86)),
  inference(backward_demodulation,[],[f11458,f10980])).
fof(f10980,plain,(
  ~sP7('T_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat',sK12))) | ($spl9 | $spl32 | $spl68 | $spl80)),
  inference(backward_demodulation,[],[f7503,f8336])).
fof(f8336,plain,(
  ~sP7('T_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.rat.rat',sK12))) | ($spl9 | $spl32 | $spl68)),
  inference(unit_resulting_resolution,[],[f8044,f8044,f2212])).
fof(f12216,plain,(
  $false | ($spl9 | $spl32 | $spl68 | $spl80 | $spl86)),
  inference(subsumption_resolution,[],[f12215,f10765])).
fof(f10765,plain,(
  ( ! [X0] : (sP7('T_0','const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12)),X0)) ) | $spl80),
  inference(backward_demodulation,[],[f7503,f665])).
fof(f12215,plain,(
  ~sP7('T_0','const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12)),'F_0') | ($spl9 | $spl32 | $spl68 | $spl80 | $spl86)),
  inference(forward_demodulation,[],[f11724,f7503])).
fof(f11724,plain,(
  ~sP7('T_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat',sK12)),'F_0') | ($spl9 | $spl32 | $spl68 | $spl80 | $spl86)),
  inference(backward_demodulation,[],[f11458,f10979])).
fof(f10979,plain,(
  ~sP7('T_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat',sK12)),'F_0') | ($spl9 | $spl32 | $spl68 | $spl80)),
  inference(backward_demodulation,[],[f7503,f8335])).
fof(f8335,plain,(
  ~sP7('T_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.rat.rat',sK12)),'F_0') | ($spl9 | $spl32 | $spl68)),
  inference(unit_resulting_resolution,[],[f496,f8044,f2212])).
fof(f12214,plain,(
  $false | ($spl9 | $spl32 | $spl68 | $spl80 | $spl86)),
  inference(subsumption_resolution,[],[f12213,f10764])).
fof(f12213,plain,(
  ~sP7('T_0','F_0','const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) | ($spl9 | $spl32 | $spl68 | $spl80 | $spl86)),
  inference(forward_demodulation,[],[f11723,f7503])).
fof(f11723,plain,(
  ~sP7('T_0','F_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat',sK12))) | ($spl9 | $spl32 | $spl68 | $spl80 | $spl86)),
  inference(backward_demodulation,[],[f11458,f10978])).
fof(f10978,plain,(
  ~sP7('T_0','F_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat',sK12))) | ($spl9 | $spl32 | $spl68 | $spl80)),
  inference(backward_demodulation,[],[f7503,f8331])).
fof(f8331,plain,(
  ~sP7('T_0','F_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.rat.rat',sK12))) | ($spl9 | $spl32 | $spl68)),
  inference(unit_resulting_resolution,[],[f496,f8044,f2212])).
fof(f12212,plain,(
  $false | ($spl9 | $spl26 | $spl68 | $spl80 | $spl86)),
  inference(subsumption_resolution,[],[f12211,f10745])).
fof(f10745,plain,(
  ( ! [X0,X1] : (sP6(X0,X1,'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12)))) ) | $spl80),
  inference(backward_demodulation,[],[f7503,f517])).
fof(f12211,plain,(
  ~sP6('T_0','const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) | ($spl9 | $spl26 | $spl68 | $spl80 | $spl86)),
  inference(forward_demodulation,[],[f11722,f7503])).
fof(f11722,plain,(
  ~sP6('T_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat',sK12))) | ($spl9 | $spl26 | $spl68 | $spl80 | $spl86)),
  inference(backward_demodulation,[],[f11458,f10977])).
fof(f10977,plain,(
  ~sP6('T_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat',sK12))) | ($spl9 | $spl26 | $spl68 | $spl80)),
  inference(backward_demodulation,[],[f7503,f8328])).
fof(f8328,plain,(
  ~sP6('T_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.rat.rat',sK12))) | ($spl9 | $spl26 | $spl68)),
  inference(unit_resulting_resolution,[],[f8044,f8044,f2203])).
fof(f12210,plain,(
  $false | ($spl9 | $spl26 | $spl68 | $spl80 | $spl86)),
  inference(subsumption_resolution,[],[f12209,f10745])).
fof(f12209,plain,(
  ~sP6('T_0','F_0','const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) | ($spl9 | $spl26 | $spl68 | $spl80 | $spl86)),
  inference(forward_demodulation,[],[f11721,f7503])).
fof(f11721,plain,(
  ~sP6('T_0','F_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat',sK12))) | ($spl9 | $spl26 | $spl68 | $spl80 | $spl86)),
  inference(backward_demodulation,[],[f11458,f10976])).
fof(f10976,plain,(
  ~sP6('T_0','F_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat',sK12))) | ($spl9 | $spl26 | $spl68 | $spl80)),
  inference(backward_demodulation,[],[f7503,f8327])).
fof(f8327,plain,(
  ~sP6('T_0','F_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.rat.rat',sK12))) | ($spl9 | $spl26 | $spl68)),
  inference(unit_resulting_resolution,[],[f496,f8044,f2203])).
fof(f12208,plain,(
  $false | ($spl9 | $spl26 | $spl68 | $spl80 | $spl86)),
  inference(subsumption_resolution,[],[f12207,f10746])).
fof(f10746,plain,(
  ( ! [X0,X1] : (sP6(X0,'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12)),X1)) ) | $spl80),
  inference(backward_demodulation,[],[f7503,f519])).
fof(f12207,plain,(
  ~sP6('T_0','const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12)),'F_0') | ($spl9 | $spl26 | $spl68 | $spl80 | $spl86)),
  inference(forward_demodulation,[],[f11720,f7503])).
fof(f11720,plain,(
  ~sP6('T_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat',sK12)),'F_0') | ($spl9 | $spl26 | $spl68 | $spl80 | $spl86)),
  inference(backward_demodulation,[],[f11458,f10975])).
fof(f10975,plain,(
  ~sP6('T_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat',sK12)),'F_0') | ($spl9 | $spl26 | $spl68 | $spl80)),
  inference(backward_demodulation,[],[f7503,f8323])).
fof(f8323,plain,(
  ~sP6('T_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.rat.rat',sK12)),'F_0') | ($spl9 | $spl26 | $spl68)),
  inference(unit_resulting_resolution,[],[f496,f8044,f2203])).
fof(f12206,plain,(
  $false | ($spl9 | $spl24 | $spl68 | $spl80 | $spl86)),
  inference(subsumption_resolution,[],[f12205,f10741])).
fof(f12205,plain,(
  ~sP3('T_0','T_0','const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) | ($spl9 | $spl24 | $spl68 | $spl80 | $spl86)),
  inference(forward_demodulation,[],[f11719,f7503])).
fof(f11719,plain,(
  ~sP3('T_0','T_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat',sK12))) | ($spl9 | $spl24 | $spl68 | $spl80 | $spl86)),
  inference(backward_demodulation,[],[f11458,f10974])).
fof(f10974,plain,(
  ~sP3('T_0','T_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat',sK12))) | ($spl9 | $spl24 | $spl68 | $spl80)),
  inference(backward_demodulation,[],[f7503,f8320])).
fof(f12200,plain,(
  $false | ($spl9 | $spl68 | $spl80 | $spl86)),
  inference(subsumption_resolution,[],[f11714,f11777])).
fof(f11777,plain,(
  ( ! [X26] : (sP5('T_0','const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat',X26),s('type.rat.rat',sK12)))) ) | ($spl68 | $spl80 | $spl86)),
  inference(forward_demodulation,[],[f11776,f7503])).
fof(f11776,plain,(
  ( ! [X26] : (sP5('T_0','const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),'const.rat.rat_les_2'(s('type.rat.rat',X26),s('type.rat.rat',sK12)))) ) | ($spl68 | $spl80 | $spl86)),
  inference(forward_demodulation,[],[f11775,f11458])).
fof(f11775,plain,(
  ( ! [X26] : (sP5('T_0','const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X26),s('type.rat.rat',sK12)))),'const.rat.rat_les_2'(s('type.rat.rat',X26),s('type.rat.rat',sK12)))) ) | ($spl68 | $spl80 | $spl86)),
  inference(forward_demodulation,[],[f11490,f7503])).
fof(f11490,plain,(
  ( ! [X26] : (sP5('T_0','const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X26),s('type.rat.rat',sK12)))),'const.rat.rat_les_2'(s('type.rat.rat',X26),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) ) | ($spl68 | $spl80 | $spl86)),
  inference(backward_demodulation,[],[f11458,f11316])).
fof(f11316,plain,(
  ( ! [X26] : (sP5('T_0','const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X26),s('type.rat.rat',sK12)))),'const.rat.rat_les_2'(s('type.rat.rat',X26),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) ) | ($spl68 | $spl80)),
  inference(backward_demodulation,[],[f10872,f7960])).
fof(f11714,plain,(
  ~sP5('T_0','const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat',sK12))) | ($spl9 | $spl68 | $spl80 | $spl86)),
  inference(backward_demodulation,[],[f11458,f10945])).
fof(f10945,plain,(
  ~sP5('T_0','const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat',sK12))) | ($spl9 | $spl68 | $spl80)),
  inference(backward_demodulation,[],[f7503,f8248])).
fof(f8248,plain,(
  ~sP5('T_0','const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.rat.rat',sK12))) | ($spl9 | $spl68)),
  inference(unit_resulting_resolution,[],[f288,f8044,f842])).
fof(f12199,plain,(
  $false | ($spl9 | $spl68 | $spl80 | $spl86)),
  inference(subsumption_resolution,[],[f12198,f12128])).
fof(f12128,plain,(
  ~sP1('const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) | ($spl9 | $spl68 | $spl80 | $spl86)),
  inference(forward_demodulation,[],[f11660,f7503])).
fof(f11660,plain,(
  ~sP1('const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat',sK12))) | ($spl9 | $spl68 | $spl80 | $spl86)),
  inference(backward_demodulation,[],[f11458,f10880])).
fof(f10880,plain,(
  ~sP1('const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat',sK12))) | ($spl9 | $spl68 | $spl80)),
  inference(backward_demodulation,[],[f7503,f8058])).
fof(f8058,plain,(
  ~sP1('const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.rat.rat',sK12))) | ($spl9 | $spl68)),
  inference(unit_resulting_resolution,[],[f8044,f8044,f401])).
fof(f12198,plain,(
  sP1('const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) | ($spl9 | $spl68 | $spl80 | $spl86)),
  inference(forward_demodulation,[],[f11713,f7503])).
fof(f11713,plain,(
  sP1('const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) | ($spl9 | $spl68 | $spl80 | $spl86)),
  inference(backward_demodulation,[],[f11458,f10943])).
fof(f10943,plain,(
  sP1('const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) | ($spl9 | $spl68 | $spl80)),
  inference(backward_demodulation,[],[f7503,f8243])).
fof(f8243,plain,(
  sP1('const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | ($spl9 | $spl68)),
  inference(unit_resulting_resolution,[],[f8044,f570])).
fof(f12197,plain,(
  $false | ($spl9 | $spl68 | $spl80 | $spl86)),
  inference(subsumption_resolution,[],[f12196,f12128])).
fof(f12196,plain,(
  sP1('const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) | ($spl9 | $spl68 | $spl80 | $spl86)),
  inference(forward_demodulation,[],[f11712,f7503])).
fof(f11712,plain,(
  sP1('const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat',sK12))) | ($spl9 | $spl68 | $spl80 | $spl86)),
  inference(backward_demodulation,[],[f11458,f10942])).
fof(f10942,plain,(
  sP1('const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat',sK12))) | ($spl9 | $spl68 | $spl80)),
  inference(backward_demodulation,[],[f7503,f8242])).
fof(f8242,plain,(
  sP1('const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.rat.rat',sK12))) | ($spl9 | $spl68)),
  inference(unit_resulting_resolution,[],[f8044,f562])).
fof(f12195,plain,(
  $false | ($spl9 | $spl68 | $spl80 | $spl86)),
  inference(subsumption_resolution,[],[f12194,f10738])).
fof(f10738,plain,(
  ( ! [X0] : (sP0(X0,'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12)))) ) | $spl80),
  inference(backward_demodulation,[],[f7503,f499])).
fof(f12194,plain,(
  ~sP0('const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) | ($spl9 | $spl68 | $spl80 | $spl86)),
  inference(forward_demodulation,[],[f11711,f7503])).
fof(f11711,plain,(
  ~sP0('const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat',sK12))) | ($spl9 | $spl68 | $spl80 | $spl86)),
  inference(backward_demodulation,[],[f11458,f10941])).
fof(f10941,plain,(
  ~sP0('const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat',sK12))) | ($spl9 | $spl68 | $spl80)),
  inference(backward_demodulation,[],[f7503,f8237])).
fof(f8237,plain,(
  ~sP0('const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.rat.rat',sK12))) | ($spl9 | $spl68)),
  inference(unit_resulting_resolution,[],[f8044,f8044,f497])).
fof(f12193,plain,(
  $false | ($spl9 | $spl68 | $spl80 | $spl86)),
  inference(subsumption_resolution,[],[f12192,f10738])).
fof(f12192,plain,(
  ~sP0('F_0','const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) | ($spl9 | $spl68 | $spl80 | $spl86)),
  inference(forward_demodulation,[],[f11710,f7503])).
fof(f11710,plain,(
  ~sP0('F_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat',sK12))) | ($spl9 | $spl68 | $spl80 | $spl86)),
  inference(backward_demodulation,[],[f11458,f10940])).
fof(f10940,plain,(
  ~sP0('F_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat',sK12))) | ($spl9 | $spl68 | $spl80)),
  inference(backward_demodulation,[],[f7503,f8236])).
fof(f8236,plain,(
  ~sP0('F_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.rat.rat',sK12))) | ($spl9 | $spl68)),
  inference(unit_resulting_resolution,[],[f496,f8044,f497])).
fof(f12191,plain,(
  $false | ($spl9 | $spl68 | $spl80 | $spl86)),
  inference(subsumption_resolution,[],[f12190,f10739])).
fof(f10739,plain,(
  ( ! [X0] : (sP0('const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12)),X0)) ) | $spl80),
  inference(backward_demodulation,[],[f7503,f501])).
fof(f12190,plain,(
  ~sP0('const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12)),'F_0') | ($spl9 | $spl68 | $spl80 | $spl86)),
  inference(forward_demodulation,[],[f11709,f7503])).
fof(f11709,plain,(
  ~sP0('const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat',sK12)),'F_0') | ($spl9 | $spl68 | $spl80 | $spl86)),
  inference(backward_demodulation,[],[f11458,f10939])).
fof(f10939,plain,(
  ~sP0('const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat',sK12)),'F_0') | ($spl9 | $spl68 | $spl80)),
  inference(backward_demodulation,[],[f7503,f8230])).
fof(f8230,plain,(
  ~sP0('const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.rat.rat',sK12)),'F_0') | ($spl9 | $spl68)),
  inference(unit_resulting_resolution,[],[f496,f8044,f497])).
fof(f12183,plain,(
  $false | ($spl9 | $spl68 | $spl80 | $spl86)),
  inference(subsumption_resolution,[],[f12182,f11122])).
fof(f11122,plain,(
  ( ! [X0,X1] : (sP9('const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12)),X0,X1)) ) | $spl80),
  inference(subsumption_resolution,[],[f11121,f531])).
fof(f11121,plain,(
  ( ! [X0,X1] : (~sP8('const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12)),X0,X1) | sP9('const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12)),X0,X1)) ) | $spl80),
  inference(forward_demodulation,[],[f10762,f7503])).
fof(f10762,plain,(
  ( ! [X0,X1] : (sP9('const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12)),X0,X1) | ~sP8('const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),X0,X1)) ) | $spl80),
  inference(backward_demodulation,[],[f7503,f651])).
fof(f12182,plain,(
  ( ! [X0] : (~sP9('const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12)),'T_0',X0)) ) | ($spl9 | $spl68 | $spl80 | $spl86)),
  inference(forward_demodulation,[],[f11702,f7503])).
fof(f11702,plain,(
  ( ! [X0] : (~sP9('const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat',sK12)),'T_0',X0)) ) | ($spl9 | $spl68 | $spl80 | $spl86)),
  inference(backward_demodulation,[],[f11458,f10932])).
fof(f10932,plain,(
  ( ! [X0] : (~sP9('const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat',sK12)),'T_0',X0)) ) | ($spl9 | $spl68 | $spl80)),
  inference(backward_demodulation,[],[f7503,f8204])).
fof(f8204,plain,(
  ( ! [X0] : (~sP9('const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.rat.rat',sK12)),'T_0',X0)) ) | ($spl9 | $spl68)),
  inference(unit_resulting_resolution,[],[f288,f8044,f469])).
fof(f12181,plain,(
  $false | ($spl9 | $spl68 | $spl80 | $spl86)),
  inference(subsumption_resolution,[],[f12180,f11122])).
fof(f12180,plain,(
  ( ! [X0] : (~sP9('const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12)),X0,'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12)))) ) | ($spl9 | $spl68 | $spl80 | $spl86)),
  inference(forward_demodulation,[],[f11701,f7503])).
fof(f11701,plain,(
  ( ! [X0] : (~sP9('const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat',sK12)),X0,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat',sK12)))) ) | ($spl9 | $spl68 | $spl80 | $spl86)),
  inference(backward_demodulation,[],[f11458,f10931])).
fof(f10931,plain,(
  ( ! [X0] : (~sP9('const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat',sK12)),X0,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat',sK12)))) ) | ($spl9 | $spl68 | $spl80)),
  inference(backward_demodulation,[],[f7503,f8197])).
fof(f8197,plain,(
  ( ! [X0] : (~sP9('const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.rat.rat',sK12)),X0,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.rat.rat',sK12)))) ) | ($spl9 | $spl68)),
  inference(unit_resulting_resolution,[],[f8044,f8044,f468])).
fof(f12178,plain,(
  $false | ($spl9 | $spl68 | $spl80 | $spl86)),
  inference(subsumption_resolution,[],[f12177,f11122])).
fof(f12177,plain,(
  ( ! [X0] : (~sP9('const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12)),X0,'F_0')) ) | ($spl9 | $spl68 | $spl80 | $spl86)),
  inference(forward_demodulation,[],[f11699,f7503])).
fof(f11699,plain,(
  ( ! [X0] : (~sP9('const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat',sK12)),X0,'F_0')) ) | ($spl9 | $spl68 | $spl80 | $spl86)),
  inference(backward_demodulation,[],[f11458,f10929])).
fof(f10929,plain,(
  ( ! [X0] : (~sP9('const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat',sK12)),X0,'F_0')) ) | ($spl9 | $spl68 | $spl80)),
  inference(backward_demodulation,[],[f7503,f8194])).
fof(f8194,plain,(
  ( ! [X0] : (~sP9('const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.rat.rat',sK12)),X0,'F_0')) ) | ($spl9 | $spl68)),
  inference(unit_resulting_resolution,[],[f496,f8044,f468])).
fof(f12165,plain,(
  $false | ($spl9 | $spl68 | $spl80 | $spl86)),
  inference(subsumption_resolution,[],[f12164,f11124])).
fof(f11124,plain,(
  ( ! [X0,X1] : (sP7('const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12)),X0,X1)) ) | $spl80),
  inference(subsumption_resolution,[],[f11123,f529])).
fof(f11123,plain,(
  ( ! [X0,X1] : (~sP6('const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12)),X0,X1) | sP7('const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12)),X0,X1)) ) | $spl80),
  inference(forward_demodulation,[],[f10766,f7503])).
fof(f10766,plain,(
  ( ! [X0,X1] : (sP7('const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12)),X0,X1) | ~sP6('const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),X0,X1)) ) | $spl80),
  inference(backward_demodulation,[],[f7503,f667])).
fof(f12164,plain,(
  ( ! [X0] : (~sP7('const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12)),'T_0',X0)) ) | ($spl9 | $spl68 | $spl80 | $spl86)),
  inference(forward_demodulation,[],[f11687,f7503])).
fof(f11687,plain,(
  ( ! [X0] : (~sP7('const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat',sK12)),'T_0',X0)) ) | ($spl9 | $spl68 | $spl80 | $spl86)),
  inference(backward_demodulation,[],[f11458,f10917])).
fof(f10917,plain,(
  ( ! [X0] : (~sP7('const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat',sK12)),'T_0',X0)) ) | ($spl9 | $spl68 | $spl80)),
  inference(backward_demodulation,[],[f7503,f8136])).
fof(f8136,plain,(
  ( ! [X0] : (~sP7('const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.rat.rat',sK12)),'T_0',X0)) ) | ($spl9 | $spl68)),
  inference(unit_resulting_resolution,[],[f288,f8044,f452])).
fof(f12163,plain,(
  $false | ($spl9 | $spl68 | $spl80 | $spl86)),
  inference(subsumption_resolution,[],[f12162,f10755])).
fof(f10755,plain,(
  ( ! [X0] : (sP7('const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12)),X0,'T_0')) ) | $spl80),
  inference(backward_demodulation,[],[f7503,f606])).
fof(f12162,plain,(
  ( ! [X0] : (~sP7('const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12)),X0,'T_0')) ) | ($spl9 | $spl68 | $spl80 | $spl86)),
  inference(forward_demodulation,[],[f11686,f7503])).
fof(f11686,plain,(
  ( ! [X0] : (~sP7('const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat',sK12)),X0,'T_0')) ) | ($spl9 | $spl68 | $spl80 | $spl86)),
  inference(backward_demodulation,[],[f11458,f10916])).
fof(f10916,plain,(
  ( ! [X0] : (~sP7('const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat',sK12)),X0,'T_0')) ) | ($spl9 | $spl68 | $spl80)),
  inference(backward_demodulation,[],[f7503,f8135])).
fof(f8135,plain,(
  ( ! [X0] : (~sP7('const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.rat.rat',sK12)),X0,'T_0')) ) | ($spl9 | $spl68)),
  inference(unit_resulting_resolution,[],[f288,f8044,f451])).
fof(f12161,plain,(
  $false | ($spl9 | $spl68 | $spl80 | $spl86)),
  inference(subsumption_resolution,[],[f12160,f10786])).
fof(f10786,plain,(
  ( ! [X0] : (sP5('const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12)),'F_0','const.rat.rat_les_2'(s('type.rat.rat',X0),s('type.rat.rat',X0)))) ) | $spl80),
  inference(backward_demodulation,[],[f7503,f1237])).
fof(f12160,plain,(
  ( ! [X0] : (~sP5('const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12)),'F_0','const.rat.rat_les_2'(s('type.rat.rat',X0),s('type.rat.rat',X0)))) ) | ($spl9 | $spl68 | $spl80 | $spl86)),
  inference(forward_demodulation,[],[f11685,f7503])).
fof(f11685,plain,(
  ( ! [X0] : (~sP5('const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat',sK12)),'F_0','const.rat.rat_les_2'(s('type.rat.rat',X0),s('type.rat.rat',X0)))) ) | ($spl9 | $spl68 | $spl80 | $spl86)),
  inference(backward_demodulation,[],[f11458,f10914])).
fof(f10914,plain,(
  ( ! [X0] : (~sP5('const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat',sK12)),'F_0','const.rat.rat_les_2'(s('type.rat.rat',X0),s('type.rat.rat',X0)))) ) | ($spl9 | $spl68 | $spl80)),
  inference(backward_demodulation,[],[f7503,f8133])).
fof(f12152,plain,(
  $false | ($spl9 | $spl68 | $spl80 | $spl86)),
  inference(subsumption_resolution,[],[f12151,f10742])).
fof(f12151,plain,(
  ~sP2('const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) | ($spl9 | $spl68 | $spl80 | $spl86)),
  inference(forward_demodulation,[],[f11677,f7503])).
fof(f11677,plain,(
  ~sP2('const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat',sK12))) | ($spl9 | $spl68 | $spl80 | $spl86)),
  inference(backward_demodulation,[],[f11458,f10897])).
fof(f10897,plain,(
  ~sP2('const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat',sK12))) | ($spl9 | $spl68 | $spl80)),
  inference(backward_demodulation,[],[f7503,f8112])).
fof(f8112,plain,(
  ~sP2('const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.rat.rat',sK12))) | ($spl9 | $spl68)),
  inference(unit_resulting_resolution,[],[f8044,f8044,f8044,f443])).
fof(f12150,plain,(
  $false | ($spl9 | $spl68 | $spl80 | $spl86)),
  inference(subsumption_resolution,[],[f12149,f10742])).
fof(f12149,plain,(
  ~sP2('F_0','const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) | ($spl9 | $spl68 | $spl80 | $spl86)),
  inference(forward_demodulation,[],[f11676,f7503])).
fof(f11676,plain,(
  ~sP2('F_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat',sK12))) | ($spl9 | $spl68 | $spl80 | $spl86)),
  inference(backward_demodulation,[],[f11458,f10896])).
fof(f10896,plain,(
  ~sP2('F_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat',sK12))) | ($spl9 | $spl68 | $spl80)),
  inference(backward_demodulation,[],[f7503,f8111])).
fof(f8111,plain,(
  ~sP2('F_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.rat.rat',sK12))) | ($spl9 | $spl68)),
  inference(unit_resulting_resolution,[],[f496,f8044,f8044,f443])).
fof(f12148,plain,(
  $false | ($spl9 | $spl68 | $spl80 | $spl86)),
  inference(subsumption_resolution,[],[f12147,f10742])).
fof(f12147,plain,(
  ~sP2('const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12)),'F_0','const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) | ($spl9 | $spl68 | $spl80 | $spl86)),
  inference(forward_demodulation,[],[f11675,f7503])).
fof(f11675,plain,(
  ~sP2('const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat',sK12)),'F_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat',sK12))) | ($spl9 | $spl68 | $spl80 | $spl86)),
  inference(backward_demodulation,[],[f11458,f10895])).
fof(f10895,plain,(
  ~sP2('const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat',sK12)),'F_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat',sK12))) | ($spl9 | $spl68 | $spl80)),
  inference(backward_demodulation,[],[f7503,f8110])).
fof(f8110,plain,(
  ~sP2('const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.rat.rat',sK12)),'F_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.rat.rat',sK12))) | ($spl9 | $spl68)),
  inference(unit_resulting_resolution,[],[f8044,f496,f8044,f443])).
fof(f12146,plain,(
  $false | ($spl9 | $spl68 | $spl80 | $spl86)),
  inference(subsumption_resolution,[],[f12145,f10742])).
fof(f12145,plain,(
  ~sP2('F_0','F_0','const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) | ($spl9 | $spl68 | $spl80 | $spl86)),
  inference(forward_demodulation,[],[f11674,f7503])).
fof(f11674,plain,(
  ~sP2('F_0','F_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat',sK12))) | ($spl9 | $spl68 | $spl80 | $spl86)),
  inference(backward_demodulation,[],[f11458,f10894])).
fof(f10894,plain,(
  ~sP2('F_0','F_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat',sK12))) | ($spl9 | $spl68 | $spl80)),
  inference(backward_demodulation,[],[f7503,f8109])).
fof(f12144,plain,(
  $false | ($spl9 | $spl68 | $spl80 | $spl86)),
  inference(subsumption_resolution,[],[f12143,f10743])).
fof(f12143,plain,(
  ~sP2('const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12)),'F_0') | ($spl9 | $spl68 | $spl80 | $spl86)),
  inference(forward_demodulation,[],[f11673,f7503])).
fof(f11673,plain,(
  ~sP2('const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat',sK12)),'F_0') | ($spl9 | $spl68 | $spl80 | $spl86)),
  inference(backward_demodulation,[],[f11458,f10893])).
fof(f10893,plain,(
  ~sP2('const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat',sK12)),'F_0') | ($spl9 | $spl68 | $spl80)),
  inference(backward_demodulation,[],[f7503,f8102])).
fof(f8102,plain,(
  ~sP2('const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.rat.rat',sK12)),'F_0') | ($spl9 | $spl68)),
  inference(unit_resulting_resolution,[],[f8044,f496,f8044,f443])).
fof(f12136,plain,(
  $false | ($spl9 | $spl68 | $spl80 | $spl86)),
  inference(subsumption_resolution,[],[f12135,f11966])).
fof(f11966,plain,(
  ( ! [X0,X1] : (~sP5('const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat',X1),s('type.rat.rat',X0)))) ) | ($spl9 | $spl68 | $spl80 | $spl86)),
  inference(forward_demodulation,[],[f11965,f7503])).
fof(f11965,plain,(
  ( ! [X0,X1] : (~sP5('const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat',X1),s('type.rat.rat',X0)))) ) | ($spl9 | $spl68 | $spl80 | $spl86)),
  inference(forward_demodulation,[],[f11964,f11458])).
fof(f11964,plain,(
  ( ! [X0,X1] : (~sP5('const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat',X1),s('type.rat.rat',X0)))) ) | ($spl9 | $spl68 | $spl80 | $spl86)),
  inference(forward_demodulation,[],[f11963,f7503])).
fof(f11963,plain,(
  ( ! [X0,X1] : (~sP5('const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),'const.rat.rat_les_2'(s('type.rat.rat',X1),s('type.rat.rat',X0)))) ) | ($spl9 | $spl68 | $spl80 | $spl86)),
  inference(forward_demodulation,[],[f11558,f11458])).
fof(f11558,plain,(
  ( ! [X0,X1] : (~sP5('const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X1),s('type.rat.rat',sK12)))),'const.rat.rat_les_2'(s('type.rat.rat',X1),s('type.rat.rat',X0)))) ) | ($spl9 | $spl68 | $spl80 | $spl86)),
  inference(backward_demodulation,[],[f11458,f11440])).
fof(f11440,plain,(
  ( ! [X0,X1] : (~sP5('const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X0),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X1),s('type.rat.rat',sK12)))),'const.rat.rat_les_2'(s('type.rat.rat',X1),s('type.rat.rat',X0)))) ) | ($spl9 | $spl68 | $spl80)),
  inference(forward_demodulation,[],[f11439,f10872])).
fof(f11439,plain,(
  ( ! [X0,X1] : (~sP5('const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X0),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X1),s('type.rat.rat',sK12)))),'const.rat.rat_les_2'(s('type.rat.rat',X1),s('type.rat.rat',X0)))) ) | ($spl9 | $spl68 | $spl80)),
  inference(forward_demodulation,[],[f10909,f10872])).
fof(f10909,plain,(
  ( ! [X0,X1] : (~sP5('const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X0),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X1),s('type.rat.rat',sK12)))),'const.rat.rat_les_2'(s('type.rat.rat',X1),s('type.rat.rat',X0)))) ) | ($spl9 | $spl68 | $spl80)),
  inference(backward_demodulation,[],[f7503,f8128])).
fof(f8128,plain,(
  ( ! [X0,X1] : (~sP5('const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X0),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X1),s('type.rat.rat',sK12)))),'const.rat.rat_les_2'(s('type.rat.rat',X1),s('type.rat.rat',X0)))) ) | ($spl9 | $spl68)),
  inference(unit_resulting_resolution,[],[f1505,f8044,f450])).
fof(f12135,plain,(
  ( ! [X0] : (sP5('const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat',X0),s('type.rat.rat',X0)))) ) | ($spl9 | $spl68 | $spl80 | $spl86)),
  inference(forward_demodulation,[],[f11666,f7503])).
fof(f11666,plain,(
  ( ! [X0] : (sP5('const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat',X0),s('type.rat.rat',X0)))) ) | ($spl9 | $spl68 | $spl80 | $spl86)),
  inference(backward_demodulation,[],[f11458,f10886])).
fof(f10886,plain,(
  ( ! [X0] : (sP5('const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat',X0),s('type.rat.rat',X0)))) ) | ($spl9 | $spl68 | $spl80)),
  inference(backward_demodulation,[],[f7503,f8078])).
fof(f8078,plain,(
  ( ! [X0] : (sP5('const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),'const.rat.rat_les_2'(s('type.rat.rat',X0),s('type.rat.rat',X0)))) ) | ($spl9 | $spl68)),
  inference(unit_resulting_resolution,[],[f513,f527,f525,f8044,f434])).
fof(f12133,plain,(
  $false | ($spl9 | $spl68 | $spl80 | $spl86)),
  inference(subsumption_resolution,[],[f12132,f11966])).
fof(f12132,plain,(
  ( ! [X0] : (sP5('const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat',X0),s('type.rat.rat',X0)))) ) | ($spl9 | $spl68 | $spl80 | $spl86)),
  inference(forward_demodulation,[],[f11664,f7503])).
fof(f11664,plain,(
  ( ! [X0] : (sP5('const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat',X0),s('type.rat.rat',X0)))) ) | ($spl9 | $spl68 | $spl80 | $spl86)),
  inference(backward_demodulation,[],[f11458,f10884])).
fof(f10884,plain,(
  ( ! [X0] : (sP5('const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat',X0),s('type.rat.rat',X0)))) ) | ($spl9 | $spl68 | $spl80)),
  inference(backward_demodulation,[],[f7503,f8070])).
fof(f8070,plain,(
  ( ! [X0] : (sP5('const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat',X0),s('type.rat.rat',X0)))) ) | ($spl9 | $spl68)),
  inference(unit_resulting_resolution,[],[f511,f507,f525,f8044,f433])).
fof(f12127,plain,(
  $false | ($spl9 | $spl68 | $spl80 | $spl86)),
  inference(subsumption_resolution,[],[f12126,f10752])).
fof(f10752,plain,(
  sP1('F_0','const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) | $spl80),
  inference(backward_demodulation,[],[f7503,f584])).
fof(f12126,plain,(
  ~sP1('F_0','const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) | ($spl9 | $spl68 | $spl80 | $spl86)),
  inference(forward_demodulation,[],[f11659,f7503])).
fof(f11659,plain,(
  ~sP1('F_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat',sK12))) | ($spl9 | $spl68 | $spl80 | $spl86)),
  inference(backward_demodulation,[],[f11458,f10879])).
fof(f10879,plain,(
  ~sP1('F_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat',sK12))) | ($spl9 | $spl68 | $spl80)),
  inference(backward_demodulation,[],[f7503,f8057])).
fof(f8057,plain,(
  ~sP1('F_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.rat.rat',sK12))) | ($spl9 | $spl68)),
  inference(unit_resulting_resolution,[],[f496,f8044,f401])).
fof(f12125,plain,(
  $false | ($spl9 | $spl68 | $spl80 | $spl86)),
  inference(subsumption_resolution,[],[f12124,f10750])).
fof(f10750,plain,(
  sP1('const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12)),'F_0') | $spl80),
  inference(backward_demodulation,[],[f7503,f565])).
fof(f12124,plain,(
  ~sP1('const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12)),'F_0') | ($spl9 | $spl68 | $spl80 | $spl86)),
  inference(forward_demodulation,[],[f11658,f7503])).
fof(f11658,plain,(
  ~sP1('const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat',sK12)),'F_0') | ($spl9 | $spl68 | $spl80 | $spl86)),
  inference(backward_demodulation,[],[f11458,f10878])).
fof(f10878,plain,(
  ~sP1('const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat',sK12)),'F_0') | ($spl9 | $spl68 | $spl80)),
  inference(backward_demodulation,[],[f7503,f8055])).
fof(f8055,plain,(
  ~sP1('const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.rat.rat',sK12)),'F_0') | ($spl9 | $spl68)),
  inference(unit_resulting_resolution,[],[f496,f8044,f401])).
fof(f12123,plain,(
  $false | ($spl80 | $spl86)),
  inference(subsumption_resolution,[],[f12122,f10743])).
fof(f12122,plain,(
  ( ! [X8] : (~sP2('const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X8))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X8)))),'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12)),'F_0')) ) | ($spl80 | $spl86)),
  inference(forward_demodulation,[],[f11657,f7503])).
fof(f11657,plain,(
  ( ! [X8] : (~sP2('const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X8))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X8)))),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),'F_0')) ) | ($spl80 | $spl86)),
  inference(backward_demodulation,[],[f11458,f7915])).
fof(f12121,plain,(
  $false | ($spl3 | $spl9 | $spl68 | $spl80 | $spl86)),
  inference(subsumption_resolution,[],[f12120,f12043])).
fof(f12043,plain,(
  ( ! [X24,X23] : (sP9('const.rat.rat_les_2'(s('type.rat.rat',sK10),s('type.rat.rat',sK12)),X23,X24)) ) | ($spl3 | $spl80 | $spl86)),
  inference(forward_demodulation,[],[f12042,f7503])).
fof(f12042,plain,(
  ( ! [X24,X23] : (sP9('const.rat.rat_les_2'(s('type.rat.rat',sK10),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),X23,X24)) ) | ($spl3 | $spl80 | $spl86)),
  inference(subsumption_resolution,[],[f11619,f11134])).
fof(f11619,plain,(
  ( ! [X24,X23] : (sP9('const.rat.rat_les_2'(s('type.rat.rat',sK10),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),X23,X24) | ~p(s(bool,X23))) ) | ($spl3 | $spl80 | $spl86)),
  inference(backward_demodulation,[],[f11458,f1084])).
fof(f1084,plain,(
  ( ! [X24,X23] : (sP9('const.rat.rat_les_2'(s('type.rat.rat',sK10),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12)))),X23,X24) | ~p(s(bool,X23))) ) | $spl3),
  inference(subsumption_resolution,[],[f1060,f288])).
fof(f1060,plain,(
  ( ! [X24,X23] : (~p(s(bool,'T_0')) | ~p(s(bool,X23)) | sP9('const.rat.rat_les_2'(s('type.rat.rat',sK10),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12)))),X23,X24)) ) | $spl3),
  inference(superposition,[],[f481,f803])).
fof(f12120,plain,(
  ~sP9('const.rat.rat_les_2'(s('type.rat.rat',sK10),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12)),'T_0') | ($spl3 | $spl9 | $spl68 | $spl80 | $spl86)),
  inference(forward_demodulation,[],[f12119,f7503])).
fof(f12119,plain,(
  ~sP9('const.rat.rat_les_2'(s('type.rat.rat',sK10),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat',sK12)),'T_0') | ($spl3 | $spl9 | $spl68 | $spl80 | $spl86)),
  inference(forward_demodulation,[],[f11656,f11458])).
fof(f11656,plain,(
  ~sP9('const.rat.rat_les_2'(s('type.rat.rat',sK10),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat',sK12)),'T_0') | ($spl3 | $spl9 | $spl68 | $spl80 | $spl86)),
  inference(backward_demodulation,[],[f11458,f10969])).
fof(f10969,plain,(
  ~sP9('const.rat.rat_les_2'(s('type.rat.rat',sK10),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12)))),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat',sK12)),'T_0') | ($spl3 | $spl9 | $spl68 | $spl80)),
  inference(backward_demodulation,[],[f7503,f8312])).
fof(f8312,plain,(
  ~sP9('const.rat.rat_les_2'(s('type.rat.rat',sK10),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12)))),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.rat.rat',sK12)),'T_0') | ($spl3 | $spl9 | $spl68)),
  inference(unit_resulting_resolution,[],[f288,f8044,f1147])).
fof(f1147,plain,(
  ( ! [X4,X5] : (~sP9('const.rat.rat_les_2'(s('type.rat.rat',sK10),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12)))),X5,X4) | p(s(bool,X5)) | ~p(s(bool,X4))) ) | $spl3),
  inference(subsumption_resolution,[],[f1141,f288])).
fof(f1141,plain,(
  ( ! [X4,X5] : (~p(s(bool,'T_0')) | ~p(s(bool,X4)) | p(s(bool,X5)) | ~sP9('const.rat.rat_les_2'(s('type.rat.rat',sK10),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12)))),X5,X4)) ) | $spl3),
  inference(superposition,[],[f482,f803])).
fof(f12118,plain,(
  $false | ($spl3 | $spl9 | $spl68 | $spl80 | $spl86)),
  inference(subsumption_resolution,[],[f12117,f10747])).
fof(f12117,plain,(
  ~sP8('T_0','const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat',sK10),s('type.rat.rat',sK12))) | ($spl3 | $spl9 | $spl68 | $spl80 | $spl86)),
  inference(forward_demodulation,[],[f12116,f7503])).
fof(f12116,plain,(
  ~sP8('T_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat',sK10),s('type.rat.rat',sK12))) | ($spl3 | $spl9 | $spl68 | $spl80 | $spl86)),
  inference(forward_demodulation,[],[f12115,f11458])).
fof(f12115,plain,(
  ~sP8('T_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat',sK10),s('type.rat.rat',sK12))) | ($spl3 | $spl9 | $spl68 | $spl80 | $spl86)),
  inference(forward_demodulation,[],[f11655,f7503])).
fof(f11655,plain,(
  ~sP8('T_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat',sK10),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | ($spl3 | $spl9 | $spl68 | $spl80 | $spl86)),
  inference(backward_demodulation,[],[f11458,f10967])).
fof(f10967,plain,(
  ~sP8('T_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat',sK10),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12))))) | ($spl3 | $spl9 | $spl68 | $spl80)),
  inference(backward_demodulation,[],[f7503,f8306])).
fof(f8306,plain,(
  ~sP8('T_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat',sK10),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12))))) | ($spl3 | $spl9 | $spl68)),
  inference(unit_resulting_resolution,[],[f288,f8044,f1114])).
fof(f1114,plain,(
  ( ! [X4,X5] : (~sP8(X5,X4,'const.rat.rat_les_2'(s('type.rat.rat',sK10),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12))))) | ~p(s(bool,X5)) | p(s(bool,X4))) ) | $spl3),
  inference(subsumption_resolution,[],[f1107,f288])).
fof(f1107,plain,(
  ( ! [X4,X5] : (~p(s(bool,'T_0')) | p(s(bool,X4)) | ~p(s(bool,X5)) | ~sP8(X5,X4,'const.rat.rat_les_2'(s('type.rat.rat',sK10),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12)))))) ) | $spl3),
  inference(superposition,[],[f475,f803])).
fof(f12112,plain,(
  $false | ($spl3 | $spl9 | $spl68 | $spl80 | $spl86)),
  inference(subsumption_resolution,[],[f12111,f12039])).
fof(f12039,plain,(
  ( ! [X15,X16] : (sP7('const.rat.rat_les_2'(s('type.rat.rat',sK10),s('type.rat.rat',sK12)),X16,X15)) ) | ($spl3 | $spl80 | $spl86)),
  inference(forward_demodulation,[],[f12038,f7503])).
fof(f12038,plain,(
  ( ! [X15,X16] : (sP7('const.rat.rat_les_2'(s('type.rat.rat',sK10),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),X16,X15)) ) | ($spl3 | $spl80 | $spl86)),
  inference(subsumption_resolution,[],[f11615,f11134])).
fof(f11615,plain,(
  ( ! [X15,X16] : (sP7('const.rat.rat_les_2'(s('type.rat.rat',sK10),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),X16,X15) | ~p(s(bool,X15))) ) | ($spl3 | $spl80 | $spl86)),
  inference(backward_demodulation,[],[f11458,f1080])).
fof(f1080,plain,(
  ( ! [X15,X16] : (sP7('const.rat.rat_les_2'(s('type.rat.rat',sK10),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12)))),X16,X15) | ~p(s(bool,X15))) ) | $spl3),
  inference(subsumption_resolution,[],[f1056,f288])).
fof(f1056,plain,(
  ( ! [X15,X16] : (~p(s(bool,'T_0')) | ~p(s(bool,X15)) | sP7('const.rat.rat_les_2'(s('type.rat.rat',sK10),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12)))),X16,X15)) ) | $spl3),
  inference(superposition,[],[f463,f803])).
fof(f12111,plain,(
  ~sP7('const.rat.rat_les_2'(s('type.rat.rat',sK10),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) | ($spl3 | $spl9 | $spl68 | $spl80 | $spl86)),
  inference(forward_demodulation,[],[f12110,f7503])).
fof(f12110,plain,(
  ~sP7('const.rat.rat_les_2'(s('type.rat.rat',sK10),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat',sK12))) | ($spl3 | $spl9 | $spl68 | $spl80 | $spl86)),
  inference(forward_demodulation,[],[f11653,f11458])).
fof(f11653,plain,(
  ~sP7('const.rat.rat_les_2'(s('type.rat.rat',sK10),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat',sK12))) | ($spl3 | $spl9 | $spl68 | $spl80 | $spl86)),
  inference(backward_demodulation,[],[f11458,f10964])).
fof(f10964,plain,(
  ~sP7('const.rat.rat_les_2'(s('type.rat.rat',sK10),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12)))),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat',sK12))) | ($spl3 | $spl9 | $spl68 | $spl80)),
  inference(backward_demodulation,[],[f7503,f8300])).
fof(f8300,plain,(
  ~sP7('const.rat.rat_les_2'(s('type.rat.rat',sK10),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12)))),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.rat.rat',sK12))) | ($spl3 | $spl9 | $spl68)),
  inference(unit_resulting_resolution,[],[f8044,f8044,f1082])).
fof(f1082,plain,(
  ( ! [X19,X20] : (~sP7('const.rat.rat_les_2'(s('type.rat.rat',sK10),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12)))),X20,X19) | p(s(bool,X20)) | p(s(bool,X19))) ) | $spl3),
  inference(subsumption_resolution,[],[f1058,f288])).
fof(f1058,plain,(
  ( ! [X19,X20] : (~p(s(bool,'T_0')) | p(s(bool,X19)) | p(s(bool,X20)) | ~sP7('const.rat.rat_les_2'(s('type.rat.rat',sK10),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12)))),X20,X19)) ) | $spl3),
  inference(superposition,[],[f465,f803])).
fof(f12109,plain,(
  $false | ($spl3 | $spl9 | $spl68 | $spl80 | $spl86)),
  inference(subsumption_resolution,[],[f12108,f12039])).
fof(f12108,plain,(
  ~sP7('const.rat.rat_les_2'(s('type.rat.rat',sK10),s('type.rat.rat',sK12)),'F_0','const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) | ($spl3 | $spl9 | $spl68 | $spl80 | $spl86)),
  inference(forward_demodulation,[],[f12107,f7503])).
fof(f12107,plain,(
  ~sP7('const.rat.rat_les_2'(s('type.rat.rat',sK10),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),'F_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat',sK12))) | ($spl3 | $spl9 | $spl68 | $spl80 | $spl86)),
  inference(forward_demodulation,[],[f11652,f11458])).
fof(f11652,plain,(
  ~sP7('const.rat.rat_les_2'(s('type.rat.rat',sK10),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),'F_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat',sK12))) | ($spl3 | $spl9 | $spl68 | $spl80 | $spl86)),
  inference(backward_demodulation,[],[f11458,f10963])).
fof(f10963,plain,(
  ~sP7('const.rat.rat_les_2'(s('type.rat.rat',sK10),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12)))),'F_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat',sK12))) | ($spl3 | $spl9 | $spl68 | $spl80)),
  inference(backward_demodulation,[],[f7503,f8299])).
fof(f8299,plain,(
  ~sP7('const.rat.rat_les_2'(s('type.rat.rat',sK10),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12)))),'F_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.rat.rat',sK12))) | ($spl3 | $spl9 | $spl68)),
  inference(unit_resulting_resolution,[],[f496,f8044,f1082])).
fof(f12106,plain,(
  $false | ($spl3 | $spl9 | $spl68 | $spl80 | $spl86)),
  inference(subsumption_resolution,[],[f12105,f12039])).
fof(f12105,plain,(
  ~sP7('const.rat.rat_les_2'(s('type.rat.rat',sK10),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12)),'F_0') | ($spl3 | $spl9 | $spl68 | $spl80 | $spl86)),
  inference(forward_demodulation,[],[f12104,f7503])).
fof(f12104,plain,(
  ~sP7('const.rat.rat_les_2'(s('type.rat.rat',sK10),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat',sK12)),'F_0') | ($spl3 | $spl9 | $spl68 | $spl80 | $spl86)),
  inference(forward_demodulation,[],[f11651,f11458])).
fof(f11651,plain,(
  ~sP7('const.rat.rat_les_2'(s('type.rat.rat',sK10),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat',sK12)),'F_0') | ($spl3 | $spl9 | $spl68 | $spl80 | $spl86)),
  inference(backward_demodulation,[],[f11458,f10962])).
fof(f10962,plain,(
  ~sP7('const.rat.rat_les_2'(s('type.rat.rat',sK10),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12)))),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat',sK12)),'F_0') | ($spl3 | $spl9 | $spl68 | $spl80)),
  inference(backward_demodulation,[],[f7503,f8296])).
fof(f8296,plain,(
  ~sP7('const.rat.rat_les_2'(s('type.rat.rat',sK10),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12)))),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.rat.rat',sK12)),'F_0') | ($spl3 | $spl9 | $spl68)),
  inference(unit_resulting_resolution,[],[f496,f8044,f1082])).
fof(f12103,plain,(
  $false | ($spl3 | $spl9 | $spl68 | $spl80 | $spl86)),
  inference(subsumption_resolution,[],[f12102,f10745])).
fof(f12102,plain,(
  ~sP6('const.rat.rat_les_2'(s('type.rat.rat',sK10),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) | ($spl3 | $spl9 | $spl68 | $spl80 | $spl86)),
  inference(forward_demodulation,[],[f12101,f7503])).
fof(f12101,plain,(
  ~sP6('const.rat.rat_les_2'(s('type.rat.rat',sK10),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat',sK12))) | ($spl3 | $spl9 | $spl68 | $spl80 | $spl86)),
  inference(forward_demodulation,[],[f11650,f11458])).
fof(f11650,plain,(
  ~sP6('const.rat.rat_les_2'(s('type.rat.rat',sK10),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat',sK12))) | ($spl3 | $spl9 | $spl68 | $spl80 | $spl86)),
  inference(backward_demodulation,[],[f11458,f10961])).
fof(f10961,plain,(
  ~sP6('const.rat.rat_les_2'(s('type.rat.rat',sK10),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12)))),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat',sK12))) | ($spl3 | $spl9 | $spl68 | $spl80)),
  inference(backward_demodulation,[],[f7503,f8293])).
fof(f8293,plain,(
  ~sP6('const.rat.rat_les_2'(s('type.rat.rat',sK10),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12)))),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.rat.rat',sK12))) | ($spl3 | $spl9 | $spl68)),
  inference(unit_resulting_resolution,[],[f8044,f8044,f1079])).
fof(f1079,plain,(
  ( ! [X14,X13] : (~sP6('const.rat.rat_les_2'(s('type.rat.rat',sK10),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12)))),X13,X14) | p(s(bool,X14)) | p(s(bool,X13))) ) | $spl3),
  inference(subsumption_resolution,[],[f1055,f288])).
fof(f1055,plain,(
  ( ! [X14,X13] : (~p(s(bool,'T_0')) | p(s(bool,X13)) | p(s(bool,X14)) | ~sP6('const.rat.rat_les_2'(s('type.rat.rat',sK10),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12)))),X13,X14)) ) | $spl3),
  inference(superposition,[],[f458,f803])).
fof(f12100,plain,(
  $false | ($spl3 | $spl9 | $spl68 | $spl80 | $spl86)),
  inference(subsumption_resolution,[],[f12099,f10745])).
fof(f12099,plain,(
  ~sP6('const.rat.rat_les_2'(s('type.rat.rat',sK10),s('type.rat.rat',sK12)),'F_0','const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) | ($spl3 | $spl9 | $spl68 | $spl80 | $spl86)),
  inference(forward_demodulation,[],[f12098,f7503])).
fof(f12098,plain,(
  ~sP6('const.rat.rat_les_2'(s('type.rat.rat',sK10),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),'F_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat',sK12))) | ($spl3 | $spl9 | $spl68 | $spl80 | $spl86)),
  inference(forward_demodulation,[],[f11649,f11458])).
fof(f11649,plain,(
  ~sP6('const.rat.rat_les_2'(s('type.rat.rat',sK10),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),'F_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat',sK12))) | ($spl3 | $spl9 | $spl68 | $spl80 | $spl86)),
  inference(backward_demodulation,[],[f11458,f10960])).
fof(f10960,plain,(
  ~sP6('const.rat.rat_les_2'(s('type.rat.rat',sK10),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12)))),'F_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat',sK12))) | ($spl3 | $spl9 | $spl68 | $spl80)),
  inference(backward_demodulation,[],[f7503,f8292])).
fof(f8292,plain,(
  ~sP6('const.rat.rat_les_2'(s('type.rat.rat',sK10),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12)))),'F_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.rat.rat',sK12))) | ($spl3 | $spl9 | $spl68)),
  inference(unit_resulting_resolution,[],[f496,f8044,f1079])).
fof(f12097,plain,(
  $false | ($spl3 | $spl9 | $spl68 | $spl80 | $spl86)),
  inference(subsumption_resolution,[],[f12096,f10746])).
fof(f12096,plain,(
  ~sP6('const.rat.rat_les_2'(s('type.rat.rat',sK10),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12)),'F_0') | ($spl3 | $spl9 | $spl68 | $spl80 | $spl86)),
  inference(forward_demodulation,[],[f12095,f7503])).
fof(f12095,plain,(
  ~sP6('const.rat.rat_les_2'(s('type.rat.rat',sK10),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat',sK12)),'F_0') | ($spl3 | $spl9 | $spl68 | $spl80 | $spl86)),
  inference(forward_demodulation,[],[f11648,f11458])).
fof(f11648,plain,(
  ~sP6('const.rat.rat_les_2'(s('type.rat.rat',sK10),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat',sK12)),'F_0') | ($spl3 | $spl9 | $spl68 | $spl80 | $spl86)),
  inference(backward_demodulation,[],[f11458,f10959])).
fof(f10959,plain,(
  ~sP6('const.rat.rat_les_2'(s('type.rat.rat',sK10),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12)))),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat',sK12)),'F_0') | ($spl3 | $spl9 | $spl68 | $spl80)),
  inference(backward_demodulation,[],[f7503,f8288])).
fof(f8288,plain,(
  ~sP6('const.rat.rat_les_2'(s('type.rat.rat',sK10),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12)))),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.rat.rat',sK12)),'F_0') | ($spl3 | $spl9 | $spl68)),
  inference(unit_resulting_resolution,[],[f496,f8044,f1079])).
fof(f12094,plain,(
  $false | ($spl3 | $spl9 | $spl68 | $spl80 | $spl86)),
  inference(subsumption_resolution,[],[f12093,f10741])).
fof(f12093,plain,(
  ~sP3('T_0','const.rat.rat_les_2'(s('type.rat.rat',sK10),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) | ($spl3 | $spl9 | $spl68 | $spl80 | $spl86)),
  inference(forward_demodulation,[],[f12092,f7503])).
fof(f12092,plain,(
  ~sP3('T_0','const.rat.rat_les_2'(s('type.rat.rat',sK10),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat',sK12))) | ($spl3 | $spl9 | $spl68 | $spl80 | $spl86)),
  inference(forward_demodulation,[],[f11647,f11458])).
fof(f11647,plain,(
  ~sP3('T_0','const.rat.rat_les_2'(s('type.rat.rat',sK10),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat',sK12))) | ($spl3 | $spl9 | $spl68 | $spl80 | $spl86)),
  inference(backward_demodulation,[],[f11458,f10958])).
fof(f10958,plain,(
  ~sP3('T_0','const.rat.rat_les_2'(s('type.rat.rat',sK10),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12)))),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat',sK12))) | ($spl3 | $spl9 | $spl68 | $spl80)),
  inference(backward_demodulation,[],[f7503,f8285])).
fof(f8285,plain,(
  ~sP3('T_0','const.rat.rat_les_2'(s('type.rat.rat',sK10),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12)))),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.rat.rat',sK12))) | ($spl3 | $spl9 | $spl68)),
  inference(unit_resulting_resolution,[],[f288,f8044,f1078])).
fof(f1078,plain,(
  ( ! [X12,X11] : (~sP3(X11,'const.rat.rat_les_2'(s('type.rat.rat',sK10),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12)))),X12) | p(s(bool,X12)) | ~p(s(bool,X11))) ) | $spl3),
  inference(subsumption_resolution,[],[f1054,f288])).
fof(f1054,plain,(
  ( ! [X12,X11] : (~p(s(bool,'T_0')) | ~p(s(bool,X11)) | p(s(bool,X12)) | ~sP3(X11,'const.rat.rat_les_2'(s('type.rat.rat',sK10),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12)))),X12)) ) | $spl3),
  inference(superposition,[],[f439,f803])).
fof(f12091,plain,(
  $false | ($spl3 | $spl9 | $spl68 | $spl80 | $spl86)),
  inference(subsumption_resolution,[],[f12090,f10740])).
fof(f10740,plain,(
  ( ! [X0,X1] : (sP4(X0,X1,'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12)))) ) | $spl80),
  inference(backward_demodulation,[],[f7503,f503])).
fof(f12090,plain,(
  ~sP4('T_0','const.rat.rat_les_2'(s('type.rat.rat',sK10),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) | ($spl3 | $spl9 | $spl68 | $spl80 | $spl86)),
  inference(forward_demodulation,[],[f12089,f7503])).
fof(f12089,plain,(
  ~sP4('T_0','const.rat.rat_les_2'(s('type.rat.rat',sK10),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat',sK12))) | ($spl3 | $spl9 | $spl68 | $spl80 | $spl86)),
  inference(forward_demodulation,[],[f11646,f11458])).
fof(f11646,plain,(
  ~sP4('T_0','const.rat.rat_les_2'(s('type.rat.rat',sK10),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat',sK12))) | ($spl3 | $spl9 | $spl68 | $spl80 | $spl86)),
  inference(backward_demodulation,[],[f11458,f10957])).
fof(f10957,plain,(
  ~sP4('T_0','const.rat.rat_les_2'(s('type.rat.rat',sK10),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12)))),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat',sK12))) | ($spl3 | $spl9 | $spl68 | $spl80)),
  inference(backward_demodulation,[],[f7503,f8282])).
fof(f8282,plain,(
  ~sP4('T_0','const.rat.rat_les_2'(s('type.rat.rat',sK10),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12)))),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.rat.rat',sK12))) | ($spl3 | $spl9 | $spl68)),
  inference(unit_resulting_resolution,[],[f288,f8044,f1077])).
fof(f1077,plain,(
  ( ! [X10,X9] : (~sP4(X9,'const.rat.rat_les_2'(s('type.rat.rat',sK10),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12)))),X10) | p(s(bool,X10)) | ~p(s(bool,X9))) ) | $spl3),
  inference(subsumption_resolution,[],[f1053,f288])).
fof(f1053,plain,(
  ( ! [X10,X9] : (~p(s(bool,'T_0')) | ~p(s(bool,X9)) | p(s(bool,X10)) | ~sP4(X9,'const.rat.rat_les_2'(s('type.rat.rat',sK10),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12)))),X10)) ) | $spl3),
  inference(superposition,[],[f435,f803])).
fof(f12088,plain,(
  $false | ($spl3 | $spl9 | $spl68 | $spl80 | $spl86)),
  inference(subsumption_resolution,[],[f12087,f11139])).
fof(f12087,plain,(
  ~sP5('T_0','const.rat.rat_les_2'(s('type.rat.rat',sK10),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) | ($spl3 | $spl9 | $spl68 | $spl80 | $spl86)),
  inference(forward_demodulation,[],[f12086,f7503])).
fof(f12086,plain,(
  ~sP5('T_0','const.rat.rat_les_2'(s('type.rat.rat',sK10),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat',sK12))) | ($spl3 | $spl9 | $spl68 | $spl80 | $spl86)),
  inference(forward_demodulation,[],[f11645,f11458])).
fof(f11645,plain,(
  ~sP5('T_0','const.rat.rat_les_2'(s('type.rat.rat',sK10),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat',sK12))) | ($spl3 | $spl9 | $spl68 | $spl80 | $spl86)),
  inference(backward_demodulation,[],[f11458,f10956])).
fof(f10956,plain,(
  ~sP5('T_0','const.rat.rat_les_2'(s('type.rat.rat',sK10),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12)))),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat',sK12))) | ($spl3 | $spl9 | $spl68 | $spl80)),
  inference(backward_demodulation,[],[f7503,f8281])).
fof(f8281,plain,(
  ~sP5('T_0','const.rat.rat_les_2'(s('type.rat.rat',sK10),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12)))),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.rat.rat',sK12))) | ($spl3 | $spl9 | $spl68)),
  inference(unit_resulting_resolution,[],[f288,f8044,f1076])).
fof(f1076,plain,(
  ( ! [X8,X7] : (~sP5(X7,'const.rat.rat_les_2'(s('type.rat.rat',sK10),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12)))),X8) | p(s(bool,X8)) | ~p(s(bool,X7))) ) | $spl3),
  inference(subsumption_resolution,[],[f1052,f288])).
fof(f1052,plain,(
  ( ! [X8,X7] : (~p(s(bool,'T_0')) | ~p(s(bool,X7)) | p(s(bool,X8)) | ~sP5(X7,'const.rat.rat_les_2'(s('type.rat.rat',sK10),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12)))),X8)) ) | $spl3),
  inference(superposition,[],[f431,f803])).
fof(f12073,plain,(
  $false | ($spl3 | $spl80 | $spl86)),
  inference(subsumption_resolution,[],[f12072,f12043])).
fof(f12072,plain,(
  ~sP9('const.rat.rat_les_2'(s('type.rat.rat',sK10),s('type.rat.rat',sK12)),'F_0','T_0') | ($spl3 | $spl80 | $spl86)),
  inference(forward_demodulation,[],[f11639,f7503])).
fof(f11639,plain,(
  ~sP9('const.rat.rat_les_2'(s('type.rat.rat',sK10),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),'F_0','T_0') | ($spl3 | $spl80 | $spl86)),
  inference(backward_demodulation,[],[f11458,f6798])).
fof(f6798,plain,(
  ~sP9('const.rat.rat_les_2'(s('type.rat.rat',sK10),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12)))),'F_0','T_0') | $spl3),
  inference(unit_resulting_resolution,[],[f288,f496,f1147])).
fof(f12069,plain,(
  $false | ($spl3 | $spl80 | $spl86)),
  inference(subsumption_resolution,[],[f12068,f12039])).
fof(f12068,plain,(
  ~sP7('const.rat.rat_les_2'(s('type.rat.rat',sK10),s('type.rat.rat',sK12)),'F_0','F_0') | ($spl3 | $spl80 | $spl86)),
  inference(forward_demodulation,[],[f11636,f7503])).
fof(f11636,plain,(
  ~sP7('const.rat.rat_les_2'(s('type.rat.rat',sK10),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),'F_0','F_0') | ($spl3 | $spl80 | $spl86)),
  inference(backward_demodulation,[],[f11458,f6765])).
fof(f6765,plain,(
  ~sP7('const.rat.rat_les_2'(s('type.rat.rat',sK10),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12)))),'F_0','F_0') | $spl3),
  inference(unit_resulting_resolution,[],[f6753,f453])).
fof(f6753,plain,(
  ~sP6('const.rat.rat_les_2'(s('type.rat.rat',sK10),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12)))),'F_0','F_0') | $spl3),
  inference(unit_resulting_resolution,[],[f496,f496,f1079])).
fof(f11977,plain,(
  $false | ($spl68 | $spl80 | $spl86)),
  inference(subsumption_resolution,[],[f11976,f10743])).
fof(f11976,plain,(
  ( ! [X4,X5] : (~sP2('const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X4),s('type.rat.rat',X5))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X4),s('type.rat.rat',X5)))),'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12)),'F_0')) ) | ($spl68 | $spl80 | $spl86)),
  inference(forward_demodulation,[],[f11565,f7503])).
fof(f11565,plain,(
  ( ! [X4,X5] : (~sP2('const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X4),s('type.rat.rat',X5))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X4),s('type.rat.rat',X5)))),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),'F_0')) ) | ($spl68 | $spl80 | $spl86)),
  inference(backward_demodulation,[],[f11458,f11412])).
fof(f11412,plain,(
  ( ! [X4,X5] : (~sP2('const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X4),s('type.rat.rat',X5))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X4),s('type.rat.rat',X5)))),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X5),s('type.rat.rat',X4))),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X5),s('type.rat.rat',X4))),s('type.rat.rat',sK12)))),'F_0')) ) | ($spl68 | $spl80)),
  inference(forward_demodulation,[],[f11311,f1409])).
fof(f11311,plain,(
  ( ! [X4,X5] : (~sP2('const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X4),s('type.rat.rat',X5))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X4),s('type.rat.rat',X5)))),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X5),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X4),s('type.rat.rat',sK12))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X5),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X4),s('type.rat.rat',sK12)))))),'F_0')) ) | ($spl68 | $spl80)),
  inference(backward_demodulation,[],[f10872,f7913])).
fof(f11970,plain,(
  $false | ($spl9 | $spl68 | $spl80 | $spl86)),
  inference(subsumption_resolution,[],[f11969,f11139])).
fof(f11969,plain,(
  ( ! [X0,X1] : (~sP5('const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat',X0),s('type.rat.rat',X1)),'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12)))) ) | ($spl9 | $spl68 | $spl80 | $spl86)),
  inference(forward_demodulation,[],[f11968,f7503])).
fof(f11968,plain,(
  ( ! [X0,X1] : (~sP5('const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat',X0),s('type.rat.rat',X1)),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat',sK12)))) ) | ($spl9 | $spl68 | $spl80 | $spl86)),
  inference(forward_demodulation,[],[f11967,f11458])).
fof(f11967,plain,(
  ( ! [X0,X1] : (~sP5('const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat',X0),s('type.rat.rat',X1)),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X1),s('type.rat.rat',sK12))),s('type.rat.rat',sK12)))) ) | ($spl9 | $spl68 | $spl80 | $spl86)),
  inference(forward_demodulation,[],[f11559,f7503])).
fof(f11559,plain,(
  ( ! [X0,X1] : (~sP5('const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat',X0),s('type.rat.rat',X1)),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X1),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) ) | ($spl9 | $spl68 | $spl80 | $spl86)),
  inference(backward_demodulation,[],[f11458,f11444])).
fof(f11444,plain,(
  ( ! [X0,X1] : (~sP5('const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat',X0),s('type.rat.rat',X1)),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X1),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X0),s('type.rat.rat',sK12)))))) ) | ($spl9 | $spl68 | $spl80)),
  inference(forward_demodulation,[],[f11443,f10872])).
fof(f11443,plain,(
  ( ! [X0,X1] : (~sP5('const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat',X0),s('type.rat.rat',X1)),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X1),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X0),s('type.rat.rat',sK12)))))) ) | ($spl9 | $spl68 | $spl80)),
  inference(forward_demodulation,[],[f10915,f10872])).
fof(f10915,plain,(
  ( ! [X0,X1] : (~sP5('const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat',X0),s('type.rat.rat',X1)),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X1),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X0),s('type.rat.rat',sK12)))))) ) | ($spl9 | $spl68 | $spl80)),
  inference(backward_demodulation,[],[f7503,f8134])).
fof(f8134,plain,(
  ( ! [X0,X1] : (~sP5('const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat',X0),s('type.rat.rat',X1)),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X1),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X0),s('type.rat.rat',sK12)))))) ) | ($spl9 | $spl68)),
  inference(unit_resulting_resolution,[],[f1505,f8044,f450])).
fof(f11927,plain,(
  $false | ($spl68 | $spl80 | $spl86)),
  inference(subsumption_resolution,[],[f11926,f11139])).
fof(f11926,plain,(
  ( ! [X8,X7,X9] : (~sP5('F_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X7),s('type.rat.rat',X8))),s('type.rat.rat',X9)),'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12)))) ) | ($spl68 | $spl80 | $spl86)),
  inference(forward_demodulation,[],[f11925,f7503])).
fof(f11925,plain,(
  ( ! [X8,X7,X9] : (~sP5('F_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X7),s('type.rat.rat',X8))),s('type.rat.rat',X9)),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) ) | ($spl68 | $spl80 | $spl86)),
  inference(forward_demodulation,[],[f11549,f11458])).
fof(f11549,plain,(
  ( ! [X8,X7,X9] : (~sP5('F_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X7),s('type.rat.rat',X8))),s('type.rat.rat',X9)),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X8),s('type.rat.rat',X7))),s('type.rat.rat',sK12)))))) ) | ($spl68 | $spl80 | $spl86)),
  inference(backward_demodulation,[],[f11458,f11398])).
fof(f11398,plain,(
  ( ! [X8,X7,X9] : (~sP5('F_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X7),s('type.rat.rat',X8))),s('type.rat.rat',X9)),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X9),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X8),s('type.rat.rat',X7))),s('type.rat.rat',sK12)))))) ) | ($spl68 | $spl80)),
  inference(forward_demodulation,[],[f11397,f10872])).
fof(f11397,plain,(
  ( ! [X8,X7,X9] : (~sP5('F_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X7),s('type.rat.rat',X8))),s('type.rat.rat',X9)),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X9),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X8),s('type.rat.rat',X7))),s('type.rat.rat',sK12)))))) ) | ($spl68 | $spl80)),
  inference(forward_demodulation,[],[f11298,f1409])).
fof(f11298,plain,(
  ( ! [X8,X7,X9] : (~sP5('F_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X7),s('type.rat.rat',X8))),s('type.rat.rat',X9)),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X9),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X8),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X7),s('type.rat.rat',sK12)))))))) ) | ($spl68 | $spl80)),
  inference(backward_demodulation,[],[f10872,f7704])).
fof(f11924,plain,(
  $false | ($spl68 | $spl80 | $spl86)),
  inference(subsumption_resolution,[],[f11923,f11139])).
fof(f11923,plain,(
  ( ! [X8,X7,X9] : (~sP5('F_0','const.rat.rat_les_2'(s('type.rat.rat',X9),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X7),s('type.rat.rat',X8)))),'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12)))) ) | ($spl68 | $spl80 | $spl86)),
  inference(forward_demodulation,[],[f11922,f7503])).
fof(f11922,plain,(
  ( ! [X8,X7,X9] : (~sP5('F_0','const.rat.rat_les_2'(s('type.rat.rat',X9),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X7),s('type.rat.rat',X8)))),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat',sK12)))) ) | ($spl68 | $spl80 | $spl86)),
  inference(forward_demodulation,[],[f11921,f11458])).
fof(f11921,plain,(
  ( ! [X8,X7,X9] : (~sP5('F_0','const.rat.rat_les_2'(s('type.rat.rat',X9),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X7),s('type.rat.rat',X8)))),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X8),s('type.rat.rat',X7))),s('type.rat.rat',sK12))),s('type.rat.rat',sK12)))) ) | ($spl68 | $spl80 | $spl86)),
  inference(forward_demodulation,[],[f11548,f7503])).
fof(f11548,plain,(
  ( ! [X8,X7,X9] : (~sP5('F_0','const.rat.rat_les_2'(s('type.rat.rat',X9),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X7),s('type.rat.rat',X8)))),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X8),s('type.rat.rat',X7))),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) ) | ($spl68 | $spl80 | $spl86)),
  inference(backward_demodulation,[],[f11458,f11393])).
fof(f11393,plain,(
  ( ! [X8,X7,X9] : (~sP5('F_0','const.rat.rat_les_2'(s('type.rat.rat',X9),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X7),s('type.rat.rat',X8)))),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X8),s('type.rat.rat',X7))),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X9),s('type.rat.rat',sK12)))))) ) | ($spl68 | $spl80)),
  inference(forward_demodulation,[],[f11392,f1409])).
fof(f11392,plain,(
  ( ! [X8,X7,X9] : (~sP5('F_0','const.rat.rat_les_2'(s('type.rat.rat',X9),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X7),s('type.rat.rat',X8)))),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X8),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X7),s('type.rat.rat',sK12))))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X9),s('type.rat.rat',sK12)))))) ) | ($spl68 | $spl80)),
  inference(forward_demodulation,[],[f11294,f10872])).
fof(f11294,plain,(
  ( ! [X8,X7,X9] : (~sP5('F_0','const.rat.rat_les_2'(s('type.rat.rat',X9),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X7),s('type.rat.rat',X8)))),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X8),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X7),s('type.rat.rat',sK12))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X9),s('type.rat.rat',sK12)))))) ) | ($spl68 | $spl80)),
  inference(backward_demodulation,[],[f10872,f7685])).
fof(f11898,plain,(
  $false | ($spl68 | $spl80 | $spl86)),
  inference(subsumption_resolution,[],[f11897,f11139])).
fof(f11897,plain,(
  ( ! [X0,X1] : (~sP5('F_0','const.rat.rat_les_2'(s('type.rat.rat',X0),s('type.rat.rat',X1)),'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12)))) ) | ($spl68 | $spl80 | $spl86)),
  inference(forward_demodulation,[],[f11896,f7503])).
fof(f11896,plain,(
  ( ! [X0,X1] : (~sP5('F_0','const.rat.rat_les_2'(s('type.rat.rat',X0),s('type.rat.rat',X1)),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat',sK12)))) ) | ($spl68 | $spl80 | $spl86)),
  inference(forward_demodulation,[],[f11895,f11458])).
fof(f11895,plain,(
  ( ! [X0,X1] : (~sP5('F_0','const.rat.rat_les_2'(s('type.rat.rat',X0),s('type.rat.rat',X1)),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X1),s('type.rat.rat',sK12))),s('type.rat.rat',sK12)))) ) | ($spl68 | $spl80 | $spl86)),
  inference(forward_demodulation,[],[f11541,f7503])).
fof(f11541,plain,(
  ( ! [X0,X1] : (~sP5('F_0','const.rat.rat_les_2'(s('type.rat.rat',X0),s('type.rat.rat',X1)),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X1),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) ) | ($spl68 | $spl80 | $spl86)),
  inference(backward_demodulation,[],[f11458,f11368])).
fof(f11368,plain,(
  ( ! [X0,X1] : (~sP5('F_0','const.rat.rat_les_2'(s('type.rat.rat',X0),s('type.rat.rat',X1)),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X1),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X0),s('type.rat.rat',sK12)))))) ) | ($spl68 | $spl80)),
  inference(forward_demodulation,[],[f11272,f10872])).
fof(f11272,plain,(
  ( ! [X0,X1] : (~sP5('F_0','const.rat.rat_les_2'(s('type.rat.rat',X0),s('type.rat.rat',X1)),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X1),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X0),s('type.rat.rat',sK12)))))) ) | ($spl68 | $spl80)),
  inference(backward_demodulation,[],[f10872,f6808])).
fof(f11887,plain,(
  $false | ($spl68 | $spl80 | $spl86)),
  inference(subsumption_resolution,[],[f11886,f11139])).
fof(f11886,plain,(
  ( ! [X14,X13] : (~sP5('F_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X13))),s('type.rat.rat',X14)),'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12)))) ) | ($spl68 | $spl80 | $spl86)),
  inference(forward_demodulation,[],[f11885,f7503])).
fof(f11885,plain,(
  ( ! [X14,X13] : (~sP5('F_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X13))),s('type.rat.rat',X14)),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) ) | ($spl68 | $spl80 | $spl86)),
  inference(forward_demodulation,[],[f11537,f11458])).
fof(f11537,plain,(
  ( ! [X14,X13] : (~sP5('F_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X13))),s('type.rat.rat',X14)),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',X13)))))) ) | ($spl68 | $spl80 | $spl86)),
  inference(backward_demodulation,[],[f11458,f11300])).
fof(f11300,plain,(
  ( ! [X14,X13] : (~sP5('F_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X13))),s('type.rat.rat',X14)),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X14),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',X13)))))) ) | ($spl68 | $spl80)),
  inference(backward_demodulation,[],[f10872,f7706])).
fof(f11884,plain,(
  $false | ($spl68 | $spl80 | $spl86)),
  inference(subsumption_resolution,[],[f11883,f11139])).
fof(f11883,plain,(
  ( ! [X14,X13] : (~sP5('F_0','const.rat.rat_les_2'(s('type.rat.rat',X14),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X13)))),'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12)))) ) | ($spl68 | $spl80 | $spl86)),
  inference(forward_demodulation,[],[f11882,f7503])).
fof(f11882,plain,(
  ( ! [X14,X13] : (~sP5('F_0','const.rat.rat_les_2'(s('type.rat.rat',X14),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X13)))),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat',sK12)))) ) | ($spl68 | $spl80 | $spl86)),
  inference(forward_demodulation,[],[f11881,f11458])).
fof(f11881,plain,(
  ( ! [X14,X13] : (~sP5('F_0','const.rat.rat_les_2'(s('type.rat.rat',X14),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X13)))),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',X13))),s('type.rat.rat',sK12)))) ) | ($spl68 | $spl80 | $spl86)),
  inference(forward_demodulation,[],[f11536,f7503])).
fof(f11536,plain,(
  ( ! [X14,X13] : (~sP5('F_0','const.rat.rat_les_2'(s('type.rat.rat',X14),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X13)))),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',X13))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) ) | ($spl68 | $spl80 | $spl86)),
  inference(backward_demodulation,[],[f11458,f11296])).
fof(f11296,plain,(
  ( ! [X14,X13] : (~sP5('F_0','const.rat.rat_les_2'(s('type.rat.rat',X14),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X13)))),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',X13))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X14),s('type.rat.rat',sK12)))))) ) | ($spl68 | $spl80)),
  inference(backward_demodulation,[],[f10872,f7687])).
fof(f11880,plain,(
  $false | ($spl68 | $spl80 | $spl86)),
  inference(subsumption_resolution,[],[f11879,f10744])).
fof(f10744,plain,(
  ( ! [X0,X1] : (sP2('const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12)),X0,X1)) ) | $spl80),
  inference(backward_demodulation,[],[f7503,f515])).
fof(f11879,plain,(
  ( ! [X0] : (~sP2('const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat',X0),s('type.rat.rat',X0)),'F_0')) ) | ($spl68 | $spl80 | $spl86)),
  inference(forward_demodulation,[],[f11535,f7503])).
fof(f11535,plain,(
  ( ! [X0] : (~sP2('const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),'const.rat.rat_les_2'(s('type.rat.rat',X0),s('type.rat.rat',X0)),'F_0')) ) | ($spl68 | $spl80 | $spl86)),
  inference(backward_demodulation,[],[f11458,f11292])).
fof(f11292,plain,(
  ( ! [X0] : (~sP2('const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X0),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X0),s('type.rat.rat',sK12)))),'const.rat.rat_les_2'(s('type.rat.rat',X0),s('type.rat.rat',X0)),'F_0')) ) | ($spl68 | $spl80)),
  inference(backward_demodulation,[],[f10872,f7665])).
fof(f11859,plain,(
  $false | ($spl68 | $spl80 | $spl86)),
  inference(subsumption_resolution,[],[f11858,f10743])).
fof(f11858,plain,(
  ( ! [X0] : (~sP2('const.rat.rat_les_2'(s('type.rat.rat',X0),s('type.rat.rat',X0)),'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12)),'F_0')) ) | ($spl68 | $spl80 | $spl86)),
  inference(forward_demodulation,[],[f11529,f7503])).
fof(f11529,plain,(
  ( ! [X0] : (~sP2('const.rat.rat_les_2'(s('type.rat.rat',X0),s('type.rat.rat',X0)),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),'F_0')) ) | ($spl68 | $spl80 | $spl86)),
  inference(backward_demodulation,[],[f11458,f11258])).
fof(f11258,plain,(
  ( ! [X0] : (~sP2('const.rat.rat_les_2'(s('type.rat.rat',X0),s('type.rat.rat',X0)),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X0),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X0),s('type.rat.rat',sK12)))),'F_0')) ) | ($spl68 | $spl80)),
  inference(backward_demodulation,[],[f10871,f7910])).
fof(f10871,plain,(
  ( ! [X0] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X0),s('type.rat.rat',sK12))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',X0)))) ) | ($spl68 | $spl80)),
  inference(backward_demodulation,[],[f7503,f6971])).
fof(f11845,plain,(
  ( ! [X0,X1] : (s('type.rat.rat',sK12) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X0),s('type.rat.rat',X1)))) ) | $spl106),
  inference(cnf_transformation,[],[f11845_D])).
fof(f11845_D,plain,(
  ( ! [X0,X1] : (s('type.rat.rat',sK12) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X0),s('type.rat.rat',X1)))) ) <=> ~$spl106),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl106])])).
fof(f11844,plain,(
  ( ! [X2,X0,X1] : (s('type.rat.rat',X2) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) | s('type.rat.rat',sK12) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X0),s('type.rat.rat',X1)))) ) | ($spl80 | $spl86)),
  inference(forward_demodulation,[],[f11843,f7503])).
fof(f11843,plain,(
  ( ! [X2,X0,X1] : (s('type.rat.rat',X2) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat',sK12))) | s('type.rat.rat',sK12) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X0),s('type.rat.rat',X1)))) ) | ($spl80 | $spl86)),
  inference(forward_demodulation,[],[f11842,f11458])).
fof(f11842,plain,(
  ( ! [X2,X0,X1] : (s('type.rat.rat',X2) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X1),s('type.rat.rat',X0))),s('type.rat.rat',sK12))) | s('type.rat.rat',sK12) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X0),s('type.rat.rat',X1)))) ) | ($spl80 | $spl86)),
  inference(forward_demodulation,[],[f11522,f7503])).
fof(f11522,plain,(
  ( ! [X2,X0,X1] : (s('type.rat.rat',X2) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X1),s('type.rat.rat',X0))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.rat.rat',sK12) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X0),s('type.rat.rat',X1)))) ) | ($spl80 | $spl86)),
  inference(backward_demodulation,[],[f11458,f10804])).
fof(f10804,plain,(
  ( ! [X2,X0,X1] : (s('type.rat.rat',sK12) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X0),s('type.rat.rat',X1))) | s('type.rat.rat',X2) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X1),s('type.rat.rat',X0))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X2),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X1),s('type.rat.rat',X0)))))))) ) | $spl80),
  inference(backward_demodulation,[],[f7503,f3278])).
fof(f11833,plain,(
  $false | ($spl68 | $spl80 | $spl86)),
  inference(subsumption_resolution,[],[f11832,f11139])).
fof(f11832,plain,(
  ( ! [X6] : (~sP5('F_0','const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',X6)),'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12)))) ) | ($spl68 | $spl80 | $spl86)),
  inference(forward_demodulation,[],[f11831,f7503])).
fof(f11831,plain,(
  ( ! [X6] : (~sP5('F_0','const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',X6)),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat',sK12)))) ) | ($spl68 | $spl80 | $spl86)),
  inference(forward_demodulation,[],[f11830,f11458])).
fof(f11830,plain,(
  ( ! [X6] : (~sP5('F_0','const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',X6)),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X6),s('type.rat.rat',sK12))),s('type.rat.rat',sK12)))) ) | ($spl68 | $spl80 | $spl86)),
  inference(forward_demodulation,[],[f11829,f7503])).
fof(f11829,plain,(
  ( ! [X6] : (~sP5('F_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat',X6)),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X6),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) ) | ($spl68 | $spl80 | $spl86)),
  inference(forward_demodulation,[],[f11519,f11458])).
fof(f11519,plain,(
  ( ! [X6,X4,X5] : (~sP5('F_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat',X6)),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X6),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X4),s('type.rat.rat',sK12))),s('type.rat.rat',X5)))))) ) | ($spl68 | $spl80 | $spl86)),
  inference(backward_demodulation,[],[f11458,f11396])).
fof(f11396,plain,(
  ( ! [X6,X4,X5] : (~sP5('F_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X4),s('type.rat.rat',X5))),s('type.rat.rat',X6)),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X6),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X4),s('type.rat.rat',sK12))),s('type.rat.rat',X5)))))) ) | ($spl68 | $spl80)),
  inference(forward_demodulation,[],[f11297,f10872])).
fof(f11297,plain,(
  ( ! [X6,X4,X5] : (~sP5('F_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X4),s('type.rat.rat',X5))),s('type.rat.rat',X6)),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X6),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X4),s('type.rat.rat',sK12))),s('type.rat.rat',X5)))))) ) | ($spl68 | $spl80)),
  inference(backward_demodulation,[],[f10872,f7703])).
fof(f11828,plain,(
  $false | ($spl68 | $spl80 | $spl86)),
  inference(subsumption_resolution,[],[f11827,f11139])).
fof(f11827,plain,(
  ( ! [X6] : (~sP5('F_0','const.rat.rat_les_2'(s('type.rat.rat',X6),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12)))) ) | ($spl68 | $spl80 | $spl86)),
  inference(forward_demodulation,[],[f11826,f7503])).
fof(f11826,plain,(
  ( ! [X6] : (~sP5('F_0','const.rat.rat_les_2'(s('type.rat.rat',X6),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat',sK12)))) ) | ($spl68 | $spl80 | $spl86)),
  inference(forward_demodulation,[],[f11825,f11458])).
fof(f11825,plain,(
  ( ! [X6,X4,X5] : (~sP5('F_0','const.rat.rat_les_2'(s('type.rat.rat',X6),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X4),s('type.rat.rat',sK12))),s('type.rat.rat',X5))),s('type.rat.rat',sK12)))) ) | ($spl68 | $spl80 | $spl86)),
  inference(forward_demodulation,[],[f11824,f7503])).
fof(f11824,plain,(
  ( ! [X6,X4,X5] : (~sP5('F_0','const.rat.rat_les_2'(s('type.rat.rat',X6),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X4),s('type.rat.rat',sK12))),s('type.rat.rat',X5))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) ) | ($spl68 | $spl80 | $spl86)),
  inference(forward_demodulation,[],[f11518,f11458])).
fof(f11518,plain,(
  ( ! [X6,X4,X5] : (~sP5('F_0','const.rat.rat_les_2'(s('type.rat.rat',X6),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X4),s('type.rat.rat',sK12))),s('type.rat.rat',X5))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X6),s('type.rat.rat',sK12)))))) ) | ($spl68 | $spl80 | $spl86)),
  inference(backward_demodulation,[],[f11458,f11391])).
fof(f11391,plain,(
  ( ! [X6,X4,X5] : (~sP5('F_0','const.rat.rat_les_2'(s('type.rat.rat',X6),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X4),s('type.rat.rat',X5)))),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X4),s('type.rat.rat',sK12))),s('type.rat.rat',X5))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X6),s('type.rat.rat',sK12)))))) ) | ($spl68 | $spl80)),
  inference(forward_demodulation,[],[f11293,f10872])).
fof(f11293,plain,(
  ( ! [X6,X4,X5] : (~sP5('F_0','const.rat.rat_les_2'(s('type.rat.rat',X6),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X4),s('type.rat.rat',X5)))),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X4),s('type.rat.rat',sK12))),s('type.rat.rat',X5))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X6),s('type.rat.rat',sK12)))))) ) | ($spl68 | $spl80)),
  inference(backward_demodulation,[],[f10872,f7684])).
fof(f11803,plain,(
  $false | ($spl68 | $spl80 | $spl86)),
  inference(subsumption_resolution,[],[f11802,f10743])).
fof(f11802,plain,(
  ~sP2('const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12)),'F_0') | ($spl68 | $spl80 | $spl86)),
  inference(forward_demodulation,[],[f11801,f7503])).
fof(f11801,plain,(
  ~sP2('const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),'F_0') | ($spl68 | $spl80 | $spl86)),
  inference(forward_demodulation,[],[f11513,f11458])).
fof(f11513,plain,(
  ( ! [X2,X3] : (~sP2('const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X2),s('type.rat.rat',sK12))),s('type.rat.rat',X3))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X2),s('type.rat.rat',sK12))),s('type.rat.rat',X3)))),'F_0')) ) | ($spl68 | $spl80 | $spl86)),
  inference(backward_demodulation,[],[f11458,f11310])).
fof(f11310,plain,(
  ( ! [X2,X3] : (~sP2('const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X2),s('type.rat.rat',X3))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X2),s('type.rat.rat',X3)))),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X2),s('type.rat.rat',sK12))),s('type.rat.rat',X3))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X2),s('type.rat.rat',sK12))),s('type.rat.rat',X3)))),'F_0')) ) | ($spl68 | $spl80)),
  inference(backward_demodulation,[],[f10872,f7912])).
fof(f11783,plain,(
  $false | ($spl68 | $spl80 | $spl86)),
  inference(subsumption_resolution,[],[f11782,f11139])).
fof(f11782,plain,(
  ( ! [X28] : (~sP5('F_0','const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',X28)),'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12)))) ) | ($spl68 | $spl80 | $spl86)),
  inference(forward_demodulation,[],[f11781,f7503])).
fof(f11781,plain,(
  ( ! [X28] : (~sP5('F_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat',X28)),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat',sK12)))) ) | ($spl68 | $spl80 | $spl86)),
  inference(forward_demodulation,[],[f11492,f11458])).
fof(f11492,plain,(
  ( ! [X28] : (~sP5('F_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat',X28)),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X28),s('type.rat.rat',sK12))),s('type.rat.rat',sK12)))) ) | ($spl68 | $spl80 | $spl86)),
  inference(backward_demodulation,[],[f11458,f11318])).
fof(f11318,plain,(
  ( ! [X28] : (~sP5('F_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.rat.rat',X28)),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X28),s('type.rat.rat',sK12))),s('type.rat.rat',sK12)))) ) | ($spl68 | $spl80)),
  inference(backward_demodulation,[],[f10872,f7962])).
fof(f11780,plain,(
  $false | ($spl68 | $spl80 | $spl86)),
  inference(subsumption_resolution,[],[f11779,f11139])).
fof(f11779,plain,(
  ( ! [X27] : (~sP5('F_0','const.rat.rat_les_2'(s('type.rat.rat',X27),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12)))) ) | ($spl68 | $spl80 | $spl86)),
  inference(forward_demodulation,[],[f11778,f7503])).
fof(f11778,plain,(
  ( ! [X27] : (~sP5('F_0','const.rat.rat_les_2'(s('type.rat.rat',X27),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) ) | ($spl68 | $spl80 | $spl86)),
  inference(forward_demodulation,[],[f11491,f11458])).
fof(f11491,plain,(
  ( ! [X27] : (~sP5('F_0','const.rat.rat_les_2'(s('type.rat.rat',X27),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X27),s('type.rat.rat',sK12)))))) ) | ($spl68 | $spl80 | $spl86)),
  inference(backward_demodulation,[],[f11458,f11317])).
fof(f11317,plain,(
  ( ! [X27] : (~sP5('F_0','const.rat.rat_les_2'(s('type.rat.rat',X27),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X27),s('type.rat.rat',sK12)))))) ) | ($spl68 | $spl80)),
  inference(backward_demodulation,[],[f10872,f7961])).
fof(f11763,plain,(
  $false | ($spl80 | $spl86)),
  inference(subsumption_resolution,[],[f11465,f10743])).
fof(f11465,plain,(
  ~sP2('const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12)),'F_0') | ($spl80 | $spl86)),
  inference(backward_demodulation,[],[f11458,f7965])).
fof(f11454,plain,(
  $false | ($spl9 | $spl68 | $spl80)),
  inference(subsumption_resolution,[],[f10968,f10933])).
fof(f10933,plain,(
  ( ! [X0] : (sP9('const.rat.rat_les_2'(s('type.rat.rat',X0),s('type.rat.rat',X0)),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat',sK12)),'T_0')) ) | ($spl9 | $spl68 | $spl80)),
  inference(backward_demodulation,[],[f7503,f8212])).
fof(f8212,plain,(
  ( ! [X0] : (sP9('const.rat.rat_les_2'(s('type.rat.rat',X0),s('type.rat.rat',X0)),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.rat.rat',sK12)),'T_0')) ) | ($spl9 | $spl68)),
  inference(unit_resulting_resolution,[],[f288,f531,f8044,f474])).
fof(f10968,plain,(
  ~sP9('const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat',sK12)),'T_0') | ($spl9 | $spl68 | $spl80)),
  inference(backward_demodulation,[],[f7503,f8309])).
fof(f11453,plain,(
  $false | ($spl9 | $spl68 | $spl80)),
  inference(subsumption_resolution,[],[f10966,f530])).
fof(f10966,plain,(
  ~sP8('T_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) | ($spl9 | $spl68 | $spl80)),
  inference(backward_demodulation,[],[f7503,f8303])).
fof(f11452,plain,(
  $false | ($spl9 | $spl68 | $spl80)),
  inference(subsumption_resolution,[],[f10953,f10920])).
fof(f10920,plain,(
  ( ! [X0] : (sP7('const.rat.rat_les_2'(s('type.rat.rat',X0),s('type.rat.rat',X0)),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat',sK12)))) ) | ($spl9 | $spl68 | $spl80)),
  inference(backward_demodulation,[],[f7503,f8156])).
fof(f8156,plain,(
  ( ! [X0] : (sP7('const.rat.rat_les_2'(s('type.rat.rat',X0),s('type.rat.rat',X0)),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.rat.rat',sK12)))) ) | ($spl9 | $spl68)),
  inference(unit_resulting_resolution,[],[f8044,f529,f8044,f457])).
fof(f10953,plain,(
  ~sP7('const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat',sK12))) | ($spl9 | $spl68 | $spl80)),
  inference(backward_demodulation,[],[f7503,f8274])).
fof(f8274,plain,(
  ~sP7('const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.rat.rat',sK12))) | ($spl9 | $spl68)),
  inference(unit_resulting_resolution,[],[f8044,f8044,f1009])).
fof(f11451,plain,(
  $false | ($spl9 | $spl68 | $spl80)),
  inference(subsumption_resolution,[],[f10952,f10918])).
fof(f10918,plain,(
  ( ! [X0] : (sP7('const.rat.rat_les_2'(s('type.rat.rat',X0),s('type.rat.rat',X0)),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat',sK12)),'F_0')) ) | ($spl9 | $spl68 | $spl80)),
  inference(backward_demodulation,[],[f7503,f8149])).
fof(f8149,plain,(
  ( ! [X0] : (sP7('const.rat.rat_les_2'(s('type.rat.rat',X0),s('type.rat.rat',X0)),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.rat.rat',sK12)),'F_0')) ) | ($spl9 | $spl68)),
  inference(unit_resulting_resolution,[],[f496,f529,f8044,f457])).
fof(f10952,plain,(
  ~sP7('const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat',sK12)),'F_0') | ($spl9 | $spl68 | $spl80)),
  inference(backward_demodulation,[],[f7503,f8273])).
fof(f8273,plain,(
  ~sP7('const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.rat.rat',sK12)),'F_0') | ($spl9 | $spl68)),
  inference(unit_resulting_resolution,[],[f496,f8044,f1009])).
fof(f11450,plain,(
  $false | ($spl9 | $spl68 | $spl80)),
  inference(subsumption_resolution,[],[f10951,f10919])).
fof(f10919,plain,(
  ( ! [X0] : (sP7('const.rat.rat_les_2'(s('type.rat.rat',X0),s('type.rat.rat',X0)),'F_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat',sK12)))) ) | ($spl9 | $spl68 | $spl80)),
  inference(backward_demodulation,[],[f7503,f8155])).
fof(f8155,plain,(
  ( ! [X0] : (sP7('const.rat.rat_les_2'(s('type.rat.rat',X0),s('type.rat.rat',X0)),'F_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.rat.rat',sK12)))) ) | ($spl9 | $spl68)),
  inference(unit_resulting_resolution,[],[f496,f529,f8044,f457])).
fof(f10951,plain,(
  ~sP7('const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12)),'F_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat',sK12))) | ($spl9 | $spl68 | $spl80)),
  inference(backward_demodulation,[],[f7503,f8267])).
fof(f8267,plain,(
  ~sP7('const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),'F_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.rat.rat',sK12))) | ($spl9 | $spl68)),
  inference(unit_resulting_resolution,[],[f496,f8044,f1009])).
fof(f11449,plain,(
  $false | ($spl9 | $spl68 | $spl80)),
  inference(subsumption_resolution,[],[f10950,f529])).
fof(f10950,plain,(
  ~sP6('const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat',sK12))) | ($spl9 | $spl68 | $spl80)),
  inference(backward_demodulation,[],[f7503,f8262])).
fof(f8262,plain,(
  ~sP6('const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.rat.rat',sK12))) | ($spl9 | $spl68)),
  inference(unit_resulting_resolution,[],[f8044,f8044,f946])).
fof(f11448,plain,(
  $false | ($spl9 | $spl68 | $spl80)),
  inference(subsumption_resolution,[],[f10949,f529])).
fof(f10949,plain,(
  ~sP6('const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12)),'F_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat',sK12))) | ($spl9 | $spl68 | $spl80)),
  inference(backward_demodulation,[],[f7503,f8261])).
fof(f8261,plain,(
  ~sP6('const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),'F_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.rat.rat',sK12))) | ($spl9 | $spl68)),
  inference(unit_resulting_resolution,[],[f496,f8044,f946])).
fof(f11447,plain,(
  $false | ($spl9 | $spl68 | $spl80)),
  inference(subsumption_resolution,[],[f10948,f529])).
fof(f10948,plain,(
  ~sP6('const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat',sK12)),'F_0') | ($spl9 | $spl68 | $spl80)),
  inference(backward_demodulation,[],[f7503,f8255])).
fof(f8255,plain,(
  ~sP6('const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.rat.rat',sK12)),'F_0') | ($spl9 | $spl68)),
  inference(unit_resulting_resolution,[],[f496,f8044,f946])).
fof(f11446,plain,(
  $false | ($spl9 | $spl68 | $spl80)),
  inference(subsumption_resolution,[],[f10947,f527])).
fof(f10947,plain,(
  ~sP3('T_0','const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat',sK12))) | ($spl9 | $spl68 | $spl80)),
  inference(backward_demodulation,[],[f7503,f8252])).
fof(f8252,plain,(
  ~sP3('T_0','const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.rat.rat',sK12))) | ($spl9 | $spl68)),
  inference(unit_resulting_resolution,[],[f288,f8044,f886])).
fof(f11445,plain,(
  $false | ($spl9 | $spl68 | $spl80)),
  inference(subsumption_resolution,[],[f10946,f525])).
fof(f10946,plain,(
  ~sP4('T_0','const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat',sK12))) | ($spl9 | $spl68 | $spl80)),
  inference(backward_demodulation,[],[f7503,f8249])).
fof(f11441,plain,(
  $false | ($spl9 | $spl68 | $spl80)),
  inference(subsumption_resolution,[],[f10911,f10903])).
fof(f10903,plain,(
  ( ! [X0] : (sP5('const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat',sK12)),'T_0','const.rat.rat_les_2'(s('type.rat.rat',X0),s('type.rat.rat',X0)))) ) | ($spl9 | $spl68 | $spl80)),
  inference(backward_demodulation,[],[f7503,f8122])).
fof(f8122,plain,(
  ( ! [X0] : (sP5('const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.rat.rat',sK12)),'T_0','const.rat.rat_les_2'(s('type.rat.rat',X0),s('type.rat.rat',X0)))) ) | ($spl9 | $spl68)),
  inference(unit_resulting_resolution,[],[f533,f8044,f447])).
fof(f10911,plain,(
  ~sP5('const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat',sK12)),'T_0','const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) | ($spl9 | $spl68 | $spl80)),
  inference(backward_demodulation,[],[f7503,f8130])).
fof(f8130,plain,(
  ~sP5('const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.rat.rat',sK12)),'T_0','const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | ($spl9 | $spl68)),
  inference(unit_resulting_resolution,[],[f536,f8044,f450])).
fof(f11437,plain,(
  $false | ($spl9 | $spl68 | $spl80)),
  inference(subsumption_resolution,[],[f10905,f10900])).
fof(f10900,plain,(
  ( ! [X0] : (sP5('const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat',X0),s('type.rat.rat',X0)),'T_0')) ) | ($spl9 | $spl68 | $spl80)),
  inference(backward_demodulation,[],[f7503,f8119])).
fof(f8119,plain,(
  ( ! [X0] : (sP5('const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat',X0),s('type.rat.rat',X0)),'T_0')) ) | ($spl9 | $spl68)),
  inference(unit_resulting_resolution,[],[f533,f8044,f447])).
fof(f10905,plain,(
  ~sP5('const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12)),'T_0') | ($spl9 | $spl68 | $spl80)),
  inference(backward_demodulation,[],[f7503,f8124])).
fof(f11434,plain,(
  $false | ($spl9 | $spl68 | $spl80)),
  inference(subsumption_resolution,[],[f10877,f11143])).
fof(f11143,plain,(
  ( ! [X107] : (s(bool,'T_0') = s(bool,X107)) ) | $spl80),
  inference(global_subsumption,[],[f287,f286,f288,f297,f311,f310,f367,f372,f373,f377,f374,f388,f387,f497,f406,f403,f402,f401,f419,f420,f434,f433,f432,f431,f430,f429,f428,f438,f437,f436,f435,f442,f441,f440,f439,f446,f445,f444,f443,f450,f449,f448,f447,f457,f456,f455,f486,f453,f452,f451,f461,f460,f459,f458,f465,f464,f463,f462,f474,f473,f472,f485,f470,f469,f468,f478,f477,f476,f475,f482,f481,f480,f479,f499,f498,f501,f500,f503,f502,f504,f505,f507,f506,f508,f509,f511,f510,f513,f512,f515,f514,f517,f516,f519,f518,f520,f521,f523,f522,f524,f531,f530,f529,f528,f527,f526,f525,f533,f532,f536,f556,f557,f560,f562,f565,f568,f570,f579,f584,f585,f588,f591,f593,f596,f598,f605,f606,f608,f609,f617,f619,f623,f625,f628,f630,f649,f647,f651,f654,f665,f663,f667,f674,f724,f735,f759,f758,f767,f766,f779,f777,f788,f786,f797,f796,f795,f794,f798,f842,f856,f863,f879,f886,f890,f896,f905,f927,f926,f939,f946,f950,f1009,f1092,f1091,f1104,f1113,f1118,f1146,f1199,f1196,f1195,f1194,f1190,f1188,f1187,f1209,f1245,f1241,f1237,f1236,f1230,f1229,f1294,f1293,f1290,f1282,f1269,f1340,f1375,f1406,f1385,f1409,f1410,f1438,f1468,f1500,f1533,f1530,f1552,f1551,f1550,f1623,f1622,f1676,f1675,f1682,f1736,f1741,f1802,f1867,f1913,f2182,f2186,f2189,f2193,f2196,f2199,f2202,f2205,f2208,f2211,f2214,f2217,f2220,f2223,f2226,f2229,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2244,f2245,f2246,f2247,f2248,f2249,f2250,f2251,f2252,f1981,f2255,f2257,f2259,f2262,f2264,f2266,f2268,f2270,f2272,f2274,f2276,f2278,f2280,f2282,f2284,f2286,f421,f1488,f1505,f2253,f1868,f1982,f1423,f1422,f552,f496,f315,f314,f2854,f2859,f2927,f3060,f3278,f3281,f3348,f3291,f3353,f3387,f3467,f3469,f3405,f3406,f3473,f3474,f3482,f3484,f3502,f3508,f3509,f3510,f3514,f3515,f3518,f3702,f3706,f3707,f3708,f3572,f3573,f3580,f3718,f3597,f3625,f3654,f3682,f3734,f3784,f3785,f3857,f3860,f3862,f3883,f4012,f4016,f4046,f4059,f4060,f4061,f4062,f4063,f4076,f4083,f4084,f4098,f4885,f4888,f4856,f5007,f5019,f6162,f6168,f6174,f6181,f6183,f6188,f6203,f6206,f6229,f6235,f6245,f6266,f6268,f6305,f6336,f6346,f6348,f6353,f6543,f6541,f6809,f6808,f6807,f6806,f6827,f6830,f6831,f6832,f6833,f6851,f6854,f6855,f6856,f6857,f6860,f6862,f6875,f6876,f6877,f6878,f6879,f6880,f6881,f6882,f6883,f6884,f6885,f6886,f6887,f6888,f6889,f6890,f6891,f6892,f6893,f6894,f7097,f7100,f7103,f7104,f7105,f7106,f7107,f7110,f7111,f7112,f7113,f7150,f5070,f5017,f4880,f4879,f4875,f4800,f4787,f4786,f4784,f4740,f2861,f2853,f1466,f1440,f1436,f1434,f1308,f308,f295,f7620,f7623,f7625,f7626,f7627,f7628,f7629,f7631,f7632,f7633,f7634,f7665,f7682,f7684,f7685,f7686,f7687,f7701,f7703,f7704,f7705,f7706,f7840,f7845,f7862,f7864,f7865,f7866,f7867,f7882,f7884,f7885,f7886,f7887,f7910,f7912,f7913,f7914,f7915,f7955,f7956,f7957,f7958,f7959,f7960,f7961,f7962,f7963,f7964,f7965,f8427,f8429,f8430,f8432,f8433,f8436,f8600,f8442,f8604,f8519,f8520,f8621,f8626,f8628,f8645,f8873,f8876,f8891,f8897,f8898,f8899,f8668,f8670,f8905,f8932,f8688,f8977,f8979,f9159,f9160,f9162,f9168,f9173,f9179,f9183,f9187,f9189,f9200,f9204,f9211,f9030,f9217,f9220,f9037,f9038,f9226,f9229,f9237,f9048,f9244,f9055,f9056,f9247,f9252,f9253,f9254,f9261,f9269,f9272,f9304,f9469,f9476,f9480,f9484,f9486,f9501,f9504,f9506,f9513,f9514,f9520,f9524,f9530,f9536,f9544,f9546,f9548,f9364,f9564,f9570,f9573,f9589,f9601,f9606,f10659,f10729,f10667,f10668,f10669,f10671,f10734,f10674,f10675,f10677,f10678,f10679,f10680,f10681,f7503,f10736,f10737,f10738,f10739,f10740,f10741,f10742,f10743,f10744,f10745,f10746,f10747,f10749,f10750,f10751,f10752,f10753,f10754,f10755,f10756,f10757,f10758,f10759,f10760,f10761,f11122,f10764,f10765,f11124,f10772,f11129,f11132,f11134,f10781,f11139,f10785,f10786,f10792,f10793,f10794,f10795,f10796,f10797,f11142,f10801])).
fof(f10801,plain,(
  ( ! [X107,X105,X106,X104] : (s(bool,X107) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X104),s('type.rat.rat',sK12))) | s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X105),s('type.rat.rat',X106))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X106),s('type.rat.rat',X104))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X105),s('type.rat.rat',X104))))) | s(bool,'T_0') = s(bool,X107)) ) | $spl80),
  inference(backward_demodulation,[],[f7503,f2253])).
fof(f11142,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X2),s('type.rat.rat',X3))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X3),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X0),s('type.rat.rat',X1))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X2),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X0),s('type.rat.rat',X1)))))))) ) | $spl80),
  inference(subsumption_resolution,[],[f10798,f11134])).
fof(f10798,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X1),s('type.rat.rat',X0))),s('type.rat.rat',sK12)))) | s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X2),s('type.rat.rat',X3))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X3),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X0),s('type.rat.rat',X1))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X2),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X0),s('type.rat.rat',X1)))))))) ) | $spl80),
  inference(backward_demodulation,[],[f7503,f1488])).
fof(f10797,plain,(
  ( ! [X2,X1] : (s('type.rat.rat',sK12) = s('type.rat.rat',X1) | s('type.rat.rat',X2) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X1),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X2),s('type.rat.rat',X1)))))) ) | $spl80),
  inference(backward_demodulation,[],[f7503,f1468])).
fof(f10796,plain,(
  ( ! [X4,X5] : (s('type.rat.rat',sK12) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X4),s('type.rat.rat',X5))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X4),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X5),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X4),s('type.rat.rat',X5)))))))) ) | $spl80),
  inference(backward_demodulation,[],[f7503,f1466])).
fof(f10795,plain,(
  ( ! [X0] : (s('type.rat.rat',sK12) = s('type.rat.rat',X0) | s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X0),s('type.rat.rat',X0))) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl80),
  inference(backward_demodulation,[],[f7503,f1440])).
fof(f10794,plain,(
  ( ! [X4] : (s('type.rat.rat',sK12) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X4),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X4),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X4)))))) ) | $spl80),
  inference(backward_demodulation,[],[f7503,f1436])).
fof(f10793,plain,(
  ( ! [X0,X1] : (s('type.rat.rat',sK12) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X0),s('type.rat.rat',X1))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X1),s('type.rat.rat',X0))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X1),s('type.rat.rat',X0)))))))) ) | $spl80),
  inference(backward_demodulation,[],[f7503,f1434])).
fof(f10792,plain,(
  ( ! [X0] : (sP5('F_0','const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat',X0),s('type.rat.rat',X0)))) ) | $spl80),
  inference(backward_demodulation,[],[f7503,f1294])).
fof(f10772,plain,(
  ( ! [X0,X1] : (~sP5(X0,'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12)),X1) | p(s(bool,X1)) | ~p(s(bool,X0))) ) | $spl80),
  inference(backward_demodulation,[],[f7503,f842])).
fof(f10760,plain,(
  ( ! [X0,X1] : (sP9('const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12)),X0,X1) | ~p(s(bool,X0))) ) | $spl80),
  inference(backward_demodulation,[],[f7503,f630])).
fof(f10759,plain,(
  ( ! [X0] : (sP7('const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12)),X0)) ) | $spl80),
  inference(backward_demodulation,[],[f7503,f625])).
fof(f10758,plain,(
  ( ! [X0] : (sP7('const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12)),'T_0',X0)) ) | $spl80),
  inference(backward_demodulation,[],[f7503,f623])).
fof(f10757,plain,(
  ( ! [X0,X1] : (sP9('const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12)),X1,X0) | p(s(bool,X0))) ) | $spl80),
  inference(backward_demodulation,[],[f7503,f619])).
fof(f10756,plain,(
  ( ! [X0] : (sP7('const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12)),X0,'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12)))) ) | $spl80),
  inference(backward_demodulation,[],[f7503,f608])).
fof(f10754,plain,(
  ( ! [X0,X1] : (sP7('const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12)),X0,X1) | ~p(s(bool,X0))) ) | $spl80),
  inference(backward_demodulation,[],[f7503,f598])).
fof(f10753,plain,(
  ( ! [X0,X1] : (sP7('const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12)),X1,X0) | ~p(s(bool,X0))) ) | $spl80),
  inference(backward_demodulation,[],[f7503,f593])).
fof(f10751,plain,(
  ( ! [X0] : (sP1(X0,'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) | p(s(bool,X0))) ) | $spl80),
  inference(backward_demodulation,[],[f7503,f570])).
fof(f10749,plain,(
  ( ! [X0] : (sP1('const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12)),X0) | p(s(bool,X0))) ) | $spl80),
  inference(backward_demodulation,[],[f7503,f562])).
fof(f10737,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X2),s('type.rat.rat',sK12)))) | s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X0),s('type.rat.rat',X1))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X1),s('type.rat.rat',X2))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X0),s('type.rat.rat',X2)))))) ) | $spl80),
  inference(backward_demodulation,[],[f7503,f421])).
fof(f10736,plain,(
  ( ! [X0] : (s('type.rat.rat',sK12) = s('type.rat.rat',X0) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X0),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X0)))))) ) | $spl80),
  inference(backward_demodulation,[],[f7503,f308])).
fof(f10877,plain,(
  s(bool,'T_0') != s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat',sK12))) | ($spl9 | $spl68 | $spl80)),
  inference(backward_demodulation,[],[f7503,f8049])).
fof(f8049,plain,(
  s(bool,'T_0') != s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.rat.rat',sK12))) | ($spl9 | $spl68)),
  inference(unit_resulting_resolution,[],[f8044,f310])).
fof(f11431,plain,(
  $false | ($spl68 | $spl80)),
  inference(subsumption_resolution,[],[f10875,f528])).
fof(f10875,plain,(
  ~sP3('const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12)))),'F_0') | ($spl68 | $spl80)),
  inference(backward_demodulation,[],[f7503,f7708])).
fof(f7708,plain,(
  ~sP3('const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12)))),'F_0') | $spl68),
  inference(forward_demodulation,[],[f7707,f6972])).
fof(f11430,plain,(
  $false | ($spl68 | $spl80)),
  inference(subsumption_resolution,[],[f10874,f527])).
fof(f10874,plain,(
  ~sP3('const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12)))),'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12)),'F_0') | ($spl68 | $spl80)),
  inference(backward_demodulation,[],[f7503,f7514])).
fof(f7514,plain,(
  ~sP3('const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12)))),'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),'F_0') | $spl68),
  inference(backward_demodulation,[],[f6972,f7150])).
fof(f11427,plain,(
  $false | ($spl3 | $spl68 | $spl80)),
  inference(subsumption_resolution,[],[f11344,f11143])).
fof(f11344,plain,(
  s(bool,'T_0') != s(bool,'const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK10),s('type.rat.rat',sK12))))) | ($spl3 | $spl68 | $spl80)),
  inference(backward_demodulation,[],[f10872,f815])).
fof(f11249,plain,(
  $false | $spl80),
  inference(subsumption_resolution,[],[f10864,f531])).
fof(f10864,plain,(
  ~sP8('const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12)),'F_0','T_0') | $spl80),
  inference(backward_demodulation,[],[f7503,f6353])).
fof(f11248,plain,(
  $false | $spl80),
  inference(subsumption_resolution,[],[f10863,f1092])).
fof(f10863,plain,(
  ~sP9('const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12)),'F_0','T_0') | $spl80),
  inference(backward_demodulation,[],[f7503,f6348])).
fof(f11247,plain,(
  $false | $spl80),
  inference(subsumption_resolution,[],[f10862,f647])).
fof(f10862,plain,(
  ~sP9('T_0','F_0','const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) | $spl80),
  inference(backward_demodulation,[],[f7503,f6346])).
fof(f11246,plain,(
  $false | $spl80),
  inference(subsumption_resolution,[],[f10861,f530])).
fof(f10861,plain,(
  ~sP8('T_0','F_0','const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) | $spl80),
  inference(backward_demodulation,[],[f7503,f6336])).
fof(f11217,plain,(
  $false | $spl80),
  inference(subsumption_resolution,[],[f10825,f927])).
fof(f10825,plain,(
  ~sP7('const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12)),'F_0','F_0') | $spl80),
  inference(backward_demodulation,[],[f7503,f4076])).
fof(f11216,plain,(
  $false | $spl80),
  inference(subsumption_resolution,[],[f10824,f529])).
fof(f10824,plain,(
  ~sP6('const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12)),'F_0','F_0') | $spl80),
  inference(backward_demodulation,[],[f7503,f4046])).
fof(f11215,plain,(
  $false | $spl80),
  inference(subsumption_resolution,[],[f10822,f1236])).
fof(f10822,plain,(
  ~sP5('T_0','F_0','const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) | $spl80),
  inference(backward_demodulation,[],[f7503,f3883])).
fof(f11214,plain,(
  $false | $spl80),
  inference(subsumption_resolution,[],[f10820,f525])).
fof(f10820,plain,(
  ~sP4('T_0','const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12)),'F_0') | $spl80),
  inference(backward_demodulation,[],[f7503,f3734])).
fof(f11209,plain,(
  $false | $spl80),
  inference(subsumption_resolution,[],[f10813,f1551])).
fof(f10813,plain,(
  ~sP5('T_0','const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12)),'F_0') | $spl80),
  inference(backward_demodulation,[],[f7503,f3502])).
fof(f11196,plain,(
  $false | $spl80),
  inference(subsumption_resolution,[],[f11146,f288])).
fof(f11146,plain,(
  ~p(s(bool,'T_0')) | $spl80),
  inference(backward_demodulation,[],[f11143,f496])).
fof(f11195,plain,(
  $false | $spl80),
  inference(subsumption_resolution,[],[f11194,f11143])).
fof(f11194,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,X0)) ) | $spl80),
  inference(subsumption_resolution,[],[f11144,f310])).
fof(f11144,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,X0) | ~p(s(bool,X0))) ) | $spl80),
  inference(backward_demodulation,[],[f11143,f314])).
fof(f11141,plain,(
  $false | $spl80),
  inference(subsumption_resolution,[],[f10791,f1550])).
fof(f10791,plain,(
  sP5('F_0','const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12)),'F_0') | $spl80),
  inference(backward_demodulation,[],[f7503,f1290])).
fof(f11140,plain,(
  $false | $spl80),
  inference(subsumption_resolution,[],[f10790,f527])).
fof(f10790,plain,(
  ~sP3('T_0','const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12)),'F_0') | $spl80),
  inference(backward_demodulation,[],[f7503,f1282])).
fof(f11135,plain,(
  $false | $spl80),
  inference(subsumption_resolution,[],[f10783,f528])).
fof(f10783,plain,(
  ~sP3('const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12)),'T_0','F_0') | $spl80),
  inference(backward_demodulation,[],[f7503,f1199])).
fof(f11130,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | $spl102),
  inference(cnf_transformation,[],[f11130_D])).
fof(f11130_D,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) <=> ~$spl102),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl102])])).
fof(f11131,plain,(
  ( ! [X1] : (p(s(bool,X1))) ) | $spl104),
  inference(cnf_transformation,[],[f11131_D])).
fof(f11131_D,plain,(
  ( ! [X1] : (p(s(bool,X1))) ) <=> ~$spl104),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl104])])).
fof(f11132,plain,(
  ( ! [X0,X1] : (p(s(bool,X1)) | ~p(s(bool,X0))) ) | $spl80),
  inference(subsumption_resolution,[],[f10774,f527])).
fof(f10774,plain,(
  ( ! [X0,X1] : (~sP3(X0,'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12)),X1) | p(s(bool,X1)) | ~p(s(bool,X0))) ) | $spl80),
  inference(backward_demodulation,[],[f7503,f886])).
fof(f11129,plain,(
  ( ! [X0,X1] : (p(s(bool,X1)) | ~p(s(bool,X0))) ) | $spl80),
  inference(subsumption_resolution,[],[f10773,f525])).
fof(f10773,plain,(
  ( ! [X0,X1] : (~sP4(X0,'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12)),X1) | p(s(bool,X1)) | ~p(s(bool,X0))) ) | $spl80),
  inference(backward_demodulation,[],[f7503,f863])).
fof(f11128,plain,(
  $false | $spl80),
  inference(subsumption_resolution,[],[f10771,f1293])).
fof(f10771,plain,(
  ~sP5('F_0','T_0','const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) | $spl80),
  inference(backward_demodulation,[],[f7503,f788])).
fof(f11127,plain,(
  $false | $spl80),
  inference(subsumption_resolution,[],[f10770,f1194])).
fof(f10770,plain,(
  ~sP5('F_0','const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12)),'T_0') | $spl80),
  inference(backward_demodulation,[],[f7503,f786])).
fof(f11126,plain,(
  $false | $spl80),
  inference(subsumption_resolution,[],[f10769,f1533])).
fof(f10769,plain,(
  sP5('T_0','T_0','const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) | $spl80),
  inference(backward_demodulation,[],[f7503,f767])).
fof(f11125,plain,(
  $false | $spl80),
  inference(subsumption_resolution,[],[f10768,f1530])).
fof(f10768,plain,(
  sP5('T_0','const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12)),'T_0') | $spl80),
  inference(backward_demodulation,[],[f7503,f766])).
fof(f11120,plain,(
  $false | $spl80),
  inference(subsumption_resolution,[],[f10748,f533])).
fof(f10748,plain,(
  s(bool,'T_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) | $spl80),
  inference(backward_demodulation,[],[f7503,f536])).
fof(f7503,plain,(
  s('type.rat.rat',sK12) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) | $spl80),
  inference(cnf_transformation,[],[f7503_D])).
fof(f7503_D,plain,(
  s('type.rat.rat',sK12) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) <=> ~$spl80),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl80])])).
fof(f10735,plain,(
  ( ! [X21] : (~sP5('F_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X21),s('type.rat.rat',sK12)))),'const.rat.rat_les_2'(s('type.rat.rat',X21),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',sK12)))))) ) | $spl100),
  inference(cnf_transformation,[],[f10735_D])).
fof(f10735_D,plain,(
  ( ! [X21] : (~sP5('F_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X21),s('type.rat.rat',sK12)))),'const.rat.rat_les_2'(s('type.rat.rat',X21),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',sK12)))))) ) <=> ~$spl100),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl100])])).
fof(f10674,plain,(
  ( ! [X22] : (~sP5('F_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X22),s('type.rat.rat',sK12)))),'const.rat.rat_les_2'(s('type.rat.rat',X22),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',sK12))))) | s('type.rat.rat',sK12) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f7100,f308])).
fof(f10734,plain,(
  ( ! [X21] : (s('type.rat.rat',sK12) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) | ~sP5('F_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X21),s('type.rat.rat',sK12)))),'const.rat.rat_les_2'(s('type.rat.rat',X21),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',sK12)))))) )),
  inference(forward_demodulation,[],[f10673,f295])).
fof(f10673,plain,(
  ( ! [X21] : (~sP5('F_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X21),s('type.rat.rat',sK12)))),'const.rat.rat_les_2'(s('type.rat.rat',X21),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',sK12))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) )),
  inference(superposition,[],[f7100,f1436])).
fof(f10733,plain,(
  ( ! [X6,X7] : (~sP5('F_0','const.rat.rat_les_2'(s('type.rat.rat',X6),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X7),s('type.rat.rat',sK12)))),'const.rat.rat_les_2'(s('type.rat.rat',X7),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X6),s('type.rat.rat',sK12)))))) ) | $spl98),
  inference(cnf_transformation,[],[f10733_D])).
fof(f10733_D,plain,(
  ( ! [X6,X7] : (~sP5('F_0','const.rat.rat_les_2'(s('type.rat.rat',X6),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X7),s('type.rat.rat',sK12)))),'const.rat.rat_les_2'(s('type.rat.rat',X7),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X6),s('type.rat.rat',sK12)))))) ) <=> ~$spl98),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl98])])).
fof(f10667,plain,(
  ( ! [X6,X7] : (~sP5('F_0','const.rat.rat_les_2'(s('type.rat.rat',X6),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X7),s('type.rat.rat',sK12)))),'const.rat.rat_les_2'(s('type.rat.rat',X7),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X6),s('type.rat.rat',sK12))))) | s('type.rat.rat',sK12) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f7100,f1468])).
fof(f10730,plain,(
  ( ! [X4] : (~sP5('F_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X4),s('type.rat.rat',sK12)))),'const.rat.rat_les_2'(s('type.rat.rat',X4),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) ) | $spl94),
  inference(cnf_transformation,[],[f10730_D])).
fof(f10730_D,plain,(
  ( ! [X4] : (~sP5('F_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X4),s('type.rat.rat',sK12)))),'const.rat.rat_les_2'(s('type.rat.rat',X4),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) ) <=> ~$spl94),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl94])])).
fof(f10732,plain,(
  s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl96),
  inference(cnf_transformation,[],[f10732_D])).
fof(f10732_D,plain,(
  s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> ~$spl96),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl96])])).
fof(f10729,plain,(
  ( ! [X4] : (s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12))) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | ~sP5('F_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X4),s('type.rat.rat',sK12)))),'const.rat.rat_les_2'(s('type.rat.rat',X4),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) )),
  inference(forward_demodulation,[],[f10665,f373])).
fof(f10665,plain,(
  ( ! [X4] : (~sP5('F_0','const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X4),s('type.rat.rat',sK12)))),'const.rat.rat_les_2'(s('type.rat.rat',X4),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',sK12)))))) )),
  inference(superposition,[],[f7100,f1436])).
fof(f8901,plain,(
  ( ! [X1] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X1),s('type.rat.rat',X1))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X1),s('type.rat.rat',X1))))))) | s('type.rat.rat',X1) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl90),
  inference(cnf_transformation,[],[f8901_D])).
fof(f8901_D,plain,(
  ( ! [X1] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X1),s('type.rat.rat',X1))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X1),s('type.rat.rat',X1))))))) | s('type.rat.rat',X1) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) <=> ~$spl90),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl90])])).
fof(f8903,plain,(
  s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl92),
  inference(cnf_transformation,[],[f8903_D])).
fof(f8903_D,plain,(
  s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) <=> ~$spl92),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl92])])).
fof(f8670,plain,(
  ( ! [X1] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X1),s('type.rat.rat',X1))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X1),s('type.rat.rat',X1))))))) | s('type.rat.rat',X1) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f1436,f1440])).
fof(f8622,plain,(
  ( ! [X23] : (~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X23),s('type.rat.rat',X23))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.rat.rat',X23) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl86),
  inference(cnf_transformation,[],[f8622_D])).
fof(f8622_D,plain,(
  ( ! [X23] : (~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X23),s('type.rat.rat',X23))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.rat.rat',X23) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) <=> ~$spl86),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl86])])).
fof(f8623,plain,(
  ( ! [X24,X25] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X24),s('type.rat.rat',X25))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X25),s('type.rat.rat',X24)))) ) | $spl88),
  inference(cnf_transformation,[],[f8623_D])).
fof(f8623_D,plain,(
  ( ! [X24,X25] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X24),s('type.rat.rat',X25))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X25),s('type.rat.rat',X24)))) ) <=> ~$spl88),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl88])])).
fof(f8621,plain,(
  ( ! [X24,X23,X25] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X24),s('type.rat.rat',X25))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X25),s('type.rat.rat',X24))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X23),s('type.rat.rat',X23))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.rat.rat',X23) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(forward_demodulation,[],[f8620,f295])).
fof(f8620,plain,(
  ( ! [X24,X23,X25] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X24),s('type.rat.rat',X25))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X25),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.rat.rat',X24))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X23),s('type.rat.rat',X23))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.rat.rat',X23) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(forward_demodulation,[],[f8530,f295])).
fof(f8530,plain,(
  ( ! [X24,X23,X25] : (~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X23),s('type.rat.rat',X23))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X24),s('type.rat.rat',X25))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X25),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X24),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.rat.rat',X23) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f421,f1440])).
fof(f7506,plain,(
  ~sP5('F_0','const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | $spl85),
  inference(cnf_transformation,[],[f7506_D])).
fof(f7506_D,plain,(
  ~sP5('F_0','const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) <=> ~$spl85),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl85])])).
fof(f7479,plain,(
  ~sP5('F_0','const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.rat.rat',sK12) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) | ($spl4 | $spl46)),
  inference(superposition,[],[f7163,f1462])).
fof(f7504,plain,(
  ( ! [X2] : (~sP5('F_0','const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',X2)),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X2),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) ) | $spl82),
  inference(cnf_transformation,[],[f7504_D])).
fof(f7504_D,plain,(
  ( ! [X2] : (~sP5('F_0','const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',X2)),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X2),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) ) <=> ~$spl82),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl82])])).
fof(f7473,plain,(
  ( ! [X2] : (~sP5('F_0','const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',X2)),'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X2),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.rat.rat',sK12) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl46),
  inference(superposition,[],[f7163,f1468])).
fof(f2896,plain,(
  s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl46),
  inference(cnf_transformation,[],[f2896_D])).
fof(f2896_D,plain,(
  s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> ~$spl46),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl46])])).
fof(f5081,plain,(
  ( ! [X3] : (s('type.rat.rat',X3) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X3),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) ) | $spl78),
  inference(cnf_transformation,[],[f5081_D])).
fof(f5081_D,plain,(
  ( ! [X3] : (s('type.rat.rat',X3) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X3),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) ) <=> ~$spl78),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl78])])).
fof(f5019,plain,(
  ( ! [X10] : (s('type.rat.rat',X10) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X10),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) )),
  inference(superposition,[],[f1468,f1308])).
fof(f5007,plain,(
  ( ! [X3] : (s('type.rat.rat',X3) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X3),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) )),
  inference(superposition,[],[f1308,f1468])).
fof(f4892,plain,(
  ( ! [X119] : (s('type.rat.rat',X119) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X119),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) ) | $spl76),
  inference(cnf_transformation,[],[f4892_D])).
fof(f4892_D,plain,(
  ( ! [X119] : (s('type.rat.rat',X119) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X119),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) ) <=> ~$spl76),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl76])])).
fof(f4856,plain,(
  ( ! [X118,X119] : (s('type.rat.rat',X119) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X119),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X118),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X118))))) | s('type.rat.rat',X118) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f1468,f308])).
fof(f4882,plain,(
  $false | ($spl4 | $spl47)),
  inference(subsumption_resolution,[],[f4869,f2895])).
fof(f4869,plain,(
  s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl4),
  inference(condensation,[],[f4868])).
fof(f4868,plain,(
  ( ! [X1] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.rat.rat',X1) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl4),
  inference(duplicate_literal_removal,[],[f4802])).
fof(f4802,plain,(
  ( ! [X1] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.rat.rat',X1) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.rat.rat',X1) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl4),
  inference(superposition,[],[f1462,f308])).
fof(f4878,plain,(
  $false | ($spl4 | $spl47)),
  inference(subsumption_resolution,[],[f4871,f2895])).
fof(f4871,plain,(
  s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl4),
  inference(condensation,[],[f4870])).
fof(f4870,plain,(
  ( ! [X2] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.rat.rat',X2) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl4),
  inference(duplicate_literal_removal,[],[f4796])).
fof(f4796,plain,(
  ( ! [X2] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.rat.rat',X2) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.rat.rat',X2) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl4),
  inference(superposition,[],[f308,f1462])).
fof(f4624,plain,(
  ( ! [X31,X32] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X31),s('type.rat.rat',X32))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X31),s('type.rat.rat',X32))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X32),s('type.rat.rat',X31)))) ) | $spl74),
  inference(cnf_transformation,[],[f4624_D])).
fof(f4624_D,plain,(
  ( ! [X31,X32] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X31),s('type.rat.rat',X32))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X31),s('type.rat.rat',X32))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X32),s('type.rat.rat',X31)))) ) <=> ~$spl74),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl74])])).
fof(f4613,plain,(
  s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | $spl68),
  inference(cnf_transformation,[],[f4613_D])).
fof(f4613_D,plain,(
  s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) <=> ~$spl68),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl68])])).
fof(f4623,plain,(
  ( ! [X31,X32] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X31),s('type.rat.rat',X32))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X31),s('type.rat.rat',X32))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X32),s('type.rat.rat',X31)))) ) | $spl46),
  inference(forward_demodulation,[],[f4622,f2908])).
fof(f4622,plain,(
  ( ! [X31,X32] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X31),s('type.rat.rat',X32))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X31),s('type.rat.rat',X32))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X32),s('type.rat.rat',X31)))) ) | $spl46),
  inference(forward_demodulation,[],[f4460,f373])).
fof(f4460,plain,(
  ( ! [X31,X32] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X31),s('type.rat.rat',X32))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X31),s('type.rat.rat',X32))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X32),s('type.rat.rat',X31)))) ) | $spl46),
  inference(superposition,[],[f2903,f2903])).
fof(f4617,plain,(
  ( ! [X20] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X20))),s('type.rat.rat',X20))) | s('type.rat.rat',X20) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl70),
  inference(cnf_transformation,[],[f4617_D])).
fof(f4617_D,plain,(
  ( ! [X20] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X20))),s('type.rat.rat',X20))) | s('type.rat.rat',X20) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) <=> ~$spl70),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl70])])).
fof(f4455,plain,(
  ( ! [X20] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X20))),s('type.rat.rat',X20))) | s('type.rat.rat',X20) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | ($spl4 | $spl46)),
  inference(superposition,[],[f2903,f1462])).
fof(f4611,plain,(
  ( ! [X10,X11] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X11),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X10),s('type.rat.rat',X11))))),s('type.rat.rat',X10))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X10),s('type.rat.rat',X11)))) ) | $spl66),
  inference(cnf_transformation,[],[f4611_D])).
fof(f4611_D,plain,(
  ( ! [X10,X11] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X11),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X10),s('type.rat.rat',X11))))),s('type.rat.rat',X10))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X10),s('type.rat.rat',X11)))) ) <=> ~$spl66),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl66])])).
fof(f4610,plain,(
  ( ! [X10,X11] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X11),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X10),s('type.rat.rat',X11))))),s('type.rat.rat',X10))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X10),s('type.rat.rat',X11)))) ) | $spl46),
  inference(forward_demodulation,[],[f4609,f2908])).
fof(f4609,plain,(
  ( ! [X10,X11] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X11),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X10),s('type.rat.rat',X11))))),s('type.rat.rat',X10))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X10),s('type.rat.rat',X11)))) ) | $spl46),
  inference(forward_demodulation,[],[f4451,f373])).
fof(f4451,plain,(
  ( ! [X10,X11] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X11),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X10),s('type.rat.rat',X11))))),s('type.rat.rat',X10))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X10),s('type.rat.rat',X11)))) ) | $spl46),
  inference(superposition,[],[f2903,f2906])).
fof(f4094,plain,(
  ( ! [X2,X0,X1] : (s(fun(bool,bool),X0) = s(fun(bool,bool),X1) | s(bool,'T_0') = s(bool,X2) | s(bool,X2) = s(bool,sK13(X0,X1,bool,bool)) | s(bool,'T_0') = s(bool,g(s(bool,sK13(X0,X1,bool,bool))))) ) | $spl62),
  inference(cnf_transformation,[],[f4094_D])).
fof(f4094_D,plain,(
  ( ! [X2,X0,X1] : (s(fun(bool,bool),X0) = s(fun(bool,bool),X1) | s(bool,'T_0') = s(bool,X2) | s(bool,X2) = s(bool,sK13(X0,X1,bool,bool)) | s(bool,'T_0') = s(bool,g(s(bool,sK13(X0,X1,bool,bool))))) ) <=> ~$spl62),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl62])])).
fof(f4096,plain,(
  s(bool,'F_0') != s(bool,f(s(bool,'T_0'))) | $spl65),
  inference(cnf_transformation,[],[f4096_D])).
fof(f4096_D,plain,(
  s(bool,'F_0') != s(bool,f(s(bool,'T_0'))) <=> ~$spl65),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl65])])).
fof(f4084,plain,(
  ( ! [X4,X5,X3] : (s(bool,'F_0') != s(bool,f(s(bool,'T_0'))) | s(fun(bool,bool),X3) = s(fun(bool,bool),X4) | s(bool,'T_0') = s(bool,g(s(bool,sK13(X3,X4,bool,bool)))) | s(bool,X5) = s(bool,sK13(X3,X4,bool,bool)) | s(bool,'T_0') = s(bool,X5)) )),
  inference(superposition,[],[f1423,f674])).
fof(f4083,plain,(
  ( ! [X2,X0,X1] : (s(bool,'F_0') != s(bool,f(s(bool,'T_0'))) | s(fun(bool,bool),X0) = s(fun(bool,bool),X1) | s(bool,'T_0') = s(bool,g(s(bool,sK13(X0,X1,bool,bool)))) | s(bool,X2) = s(bool,sK13(X0,X1,bool,bool)) | s(bool,'T_0') = s(bool,X2)) )),
  inference(superposition,[],[f1423,f674])).
fof(f4069,plain,(
  s(bool,'T_0') = s(bool,g(s(bool,'F_0'))) | $spl56),
  inference(cnf_transformation,[],[f4069_D])).
fof(f4069_D,plain,(
  s(bool,'T_0') = s(bool,g(s(bool,'F_0'))) <=> ~$spl56),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl56])])).
fof(f4065,plain,(
  ( ! [X0,X1] : (s(fun(bool,bool),X0) = s(fun(bool,bool),X1) | s(bool,'T_0') = s(bool,sK13(X0,X1,bool,bool))) ) | $spl52),
  inference(cnf_transformation,[],[f4065_D])).
fof(f4065_D,plain,(
  ( ! [X0,X1] : (s(fun(bool,bool),X0) = s(fun(bool,bool),X1) | s(bool,'T_0') = s(bool,sK13(X0,X1,bool,bool))) ) <=> ~$spl52),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl52])])).
fof(f4072,plain,(
  s(bool,'F_0') != s(bool,f(s(bool,'F_0'))) | $spl61),
  inference(cnf_transformation,[],[f4072_D])).
fof(f4072_D,plain,(
  s(bool,'F_0') != s(bool,f(s(bool,'F_0'))) <=> ~$spl61),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl61])])).
fof(f4063,plain,(
  ( ! [X12,X13] : (s(bool,'F_0') != s(bool,f(s(bool,'F_0'))) | s(fun(bool,bool),X12) = s(fun(bool,bool),X13) | s(bool,'T_0') = s(bool,sK13(X12,X13,bool,bool)) | s(bool,'T_0') = s(bool,g(s(bool,'F_0')))) )),
  inference(superposition,[],[f1422,f297])).
fof(f4070,plain,(
  ( ! [X6] : (s(bool,X6) != s(bool,f(s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X6)) ) | $spl58),
  inference(cnf_transformation,[],[f4070_D])).
fof(f4070_D,plain,(
  ( ! [X6] : (s(bool,X6) != s(bool,f(s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X6)) ) <=> ~$spl58),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl58])])).
fof(f4062,plain,(
  ( ! [X10,X11,X9] : (s(bool,X9) != s(bool,f(s(bool,'F_0'))) | s(fun(bool,bool),X10) = s(fun(bool,bool),X11) | s(bool,'T_0') = s(bool,sK13(X10,X11,bool,bool)) | s(bool,'T_0') = s(bool,X9) | s(bool,'T_0') = s(bool,g(s(bool,'F_0')))) )),
  inference(superposition,[],[f1422,f674])).
fof(f4061,plain,(
  ( ! [X6,X8,X7] : (s(bool,X6) != s(bool,f(s(bool,'F_0'))) | s(fun(bool,bool),X7) = s(fun(bool,bool),X8) | s(bool,'T_0') = s(bool,sK13(X7,X8,bool,bool)) | s(bool,'T_0') = s(bool,g(s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X6)) )),
  inference(superposition,[],[f1422,f674])).
fof(f4064,plain,(
  ( ! [X2] : (s(bool,X2) = s(bool,g(s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X2)) ) | $spl50),
  inference(cnf_transformation,[],[f4064_D])).
fof(f4064_D,plain,(
  ( ! [X2] : (s(bool,X2) = s(bool,g(s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X2)) ) <=> ~$spl50),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl50])])).
fof(f4067,plain,(
  s(bool,'T_0') != s(bool,f(s(bool,'F_0'))) | $spl55),
  inference(cnf_transformation,[],[f4067_D])).
fof(f4067_D,plain,(
  s(bool,'T_0') != s(bool,f(s(bool,'F_0'))) <=> ~$spl55),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl55])])).
fof(f4060,plain,(
  ( ! [X4,X5,X3] : (s(bool,'T_0') != s(bool,f(s(bool,'F_0'))) | s(fun(bool,bool),X3) = s(fun(bool,bool),X4) | s(bool,'T_0') = s(bool,sK13(X3,X4,bool,bool)) | s(bool,X5) = s(bool,g(s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X5)) )),
  inference(superposition,[],[f1422,f674])).
fof(f4059,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') != s(bool,f(s(bool,'F_0'))) | s(fun(bool,bool),X0) = s(fun(bool,bool),X1) | s(bool,'T_0') = s(bool,sK13(X0,X1,bool,bool)) | s(bool,X2) = s(bool,g(s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X2)) )),
  inference(superposition,[],[f1422,f674])).
fof(f2898,plain,(
  s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl48),
  inference(cnf_transformation,[],[f2898_D])).
fof(f2898_D,plain,(
  s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) <=> ~$spl48),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl48])])).
fof(f2859,plain,(
  s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),
  inference(superposition,[],[f308,f1308])).
fof(f2854,plain,(
  s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),
  inference(superposition,[],[f1308,f308])).
fof(f2305,plain,(
  $false | ($spl9 | $spl14)),
  inference(subsumption_resolution,[],[f2300,f288])).
fof(f2300,plain,(
  ~p(s(bool,'T_0')) | ($spl9 | $spl14)),
  inference(backward_demodulation,[],[f2184,f1502])).
fof(f2304,plain,(
  $false | $spl14),
  inference(subsumption_resolution,[],[f2289,f288])).
fof(f2289,plain,(
  ~p(s(bool,'T_0')) | $spl14),
  inference(backward_demodulation,[],[f2184,f496])).
fof(f2303,plain,(
  $false | $spl14),
  inference(subsumption_resolution,[],[f2302,f2184])).
fof(f2302,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,X0)) ) | $spl14),
  inference(subsumption_resolution,[],[f2287,f310])).
fof(f2287,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,X0) | ~p(s(bool,X0))) ) | $spl14),
  inference(backward_demodulation,[],[f2184,f314])).
fof(f2230,plain,(
  ( ! [X2,X1] : (sP7('T_0',X1,X2) | ~sP6('T_0',X1,X2)) ) | $spl44),
  inference(cnf_transformation,[],[f2230_D])).
fof(f2230_D,plain,(
  ( ! [X2,X1] : (sP7('T_0',X1,X2) | ~sP6('T_0',X1,X2)) ) <=> ~$spl44),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl44])])).
fof(f2184,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,X0)) ) | $spl14),
  inference(cnf_transformation,[],[f2184_D])).
fof(f2184_D,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,X0)) ) <=> ~$spl14),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl14])])).
fof(f2286,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | ~sP6('T_0',X1,X2) | sP7('T_0',X1,X2)) )),
  inference(condensation,[],[f2285])).
fof(f2285,plain,(
  ( ! [X92,X90,X93,X91] : (~sP6('T_0',X91,X92) | sP7('T_0',X91,X92) | s(bool,X90) = s(bool,X93) | s(bool,'T_0') = s(bool,X93)) )),
  inference(subsumption_resolution,[],[f2009,f735])).
fof(f2009,plain,(
  ( ! [X92,X90,X93,X91] : (~p(s(bool,X90)) | ~sP6('T_0',X91,X92) | sP7('T_0',X91,X92) | s(bool,X90) = s(bool,X93) | s(bool,'T_0') = s(bool,X93)) )),
  inference(superposition,[],[f486,f674])).
fof(f2227,plain,(
  ( ! [X2,X1] : (sP9('T_0',X1,X2) | ~sP8('T_0',X1,X2)) ) | $spl42),
  inference(cnf_transformation,[],[f2227_D])).
fof(f2227_D,plain,(
  ( ! [X2,X1] : (sP9('T_0',X1,X2) | ~sP8('T_0',X1,X2)) ) <=> ~$spl42),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl42])])).
fof(f2284,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | ~sP8('T_0',X1,X2) | sP9('T_0',X1,X2)) )),
  inference(condensation,[],[f2283])).
fof(f2283,plain,(
  ( ! [X88,X87,X89,X86] : (~sP8('T_0',X87,X88) | sP9('T_0',X87,X88) | s(bool,X86) = s(bool,X89) | s(bool,'T_0') = s(bool,X89)) )),
  inference(subsumption_resolution,[],[f2008,f735])).
fof(f2008,plain,(
  ( ! [X88,X87,X89,X86] : (~p(s(bool,X86)) | ~sP8('T_0',X87,X88) | sP9('T_0',X87,X88) | s(bool,X86) = s(bool,X89) | s(bool,'T_0') = s(bool,X89)) )),
  inference(superposition,[],[f485,f674])).
fof(f2224,plain,(
  ( ! [X2,X1] : (~sP9('T_0',X2,X1) | p(s(bool,X2)) | ~p(s(bool,X1))) ) | $spl40),
  inference(cnf_transformation,[],[f2224_D])).
fof(f2224_D,plain,(
  ( ! [X2,X1] : (~sP9('T_0',X2,X1) | p(s(bool,X2)) | ~p(s(bool,X1))) ) <=> ~$spl40),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl40])])).
fof(f2282,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X1)) | p(s(bool,X2)) | ~sP9('T_0',X2,X1)) )),
  inference(condensation,[],[f2281])).
fof(f2281,plain,(
  ( ! [X85,X83,X84,X82] : (~p(s(bool,X83)) | p(s(bool,X84)) | ~sP9('T_0',X84,X83) | s(bool,X82) = s(bool,X85) | s(bool,'T_0') = s(bool,X85)) )),
  inference(subsumption_resolution,[],[f2007,f735])).
fof(f2007,plain,(
  ( ! [X85,X83,X84,X82] : (~p(s(bool,X82)) | ~p(s(bool,X83)) | p(s(bool,X84)) | ~sP9('T_0',X84,X83) | s(bool,X82) = s(bool,X85) | s(bool,'T_0') = s(bool,X85)) )),
  inference(superposition,[],[f482,f674])).
fof(f2221,plain,(
  ( ! [X2,X1] : (sP9('T_0',X1,X2) | ~p(s(bool,X1))) ) | $spl38),
  inference(cnf_transformation,[],[f2221_D])).
fof(f2221_D,plain,(
  ( ! [X2,X1] : (sP9('T_0',X1,X2) | ~p(s(bool,X1))) ) <=> ~$spl38),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl38])])).
fof(f2280,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X1)) | sP9('T_0',X1,X2)) )),
  inference(condensation,[],[f2279])).
fof(f2279,plain,(
  ( ! [X80,X78,X81,X79] : (~p(s(bool,X79)) | sP9('T_0',X79,X80) | s(bool,X78) = s(bool,X81) | s(bool,'T_0') = s(bool,X81)) )),
  inference(subsumption_resolution,[],[f2006,f735])).
fof(f2006,plain,(
  ( ! [X80,X78,X81,X79] : (~p(s(bool,X78)) | ~p(s(bool,X79)) | sP9('T_0',X79,X80) | s(bool,X78) = s(bool,X81) | s(bool,'T_0') = s(bool,X81)) )),
  inference(superposition,[],[f481,f674])).
fof(f2218,plain,(
  ( ! [X2,X1] : (sP9('T_0',X2,X1) | p(s(bool,X1))) ) | $spl36),
  inference(cnf_transformation,[],[f2218_D])).
fof(f2218_D,plain,(
  ( ! [X2,X1] : (sP9('T_0',X2,X1) | p(s(bool,X1))) ) <=> ~$spl36),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl36])])).
fof(f2278,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,X1)) | sP9('T_0',X2,X1)) )),
  inference(condensation,[],[f2277])).
fof(f2277,plain,(
  ( ! [X76,X74,X77,X75] : (p(s(bool,X75)) | sP9('T_0',X76,X75) | s(bool,X74) = s(bool,X77) | s(bool,'T_0') = s(bool,X77)) )),
  inference(subsumption_resolution,[],[f2005,f735])).
fof(f2005,plain,(
  ( ! [X76,X74,X77,X75] : (~p(s(bool,X74)) | p(s(bool,X75)) | sP9('T_0',X76,X75) | s(bool,X74) = s(bool,X77) | s(bool,'T_0') = s(bool,X77)) )),
  inference(superposition,[],[f480,f674])).
fof(f2215,plain,(
  ( ! [X2,X1] : (~sP8(X2,X1,'T_0') | ~p(s(bool,X2)) | p(s(bool,X1))) ) | $spl34),
  inference(cnf_transformation,[],[f2215_D])).
fof(f2215_D,plain,(
  ( ! [X2,X1] : (~sP8(X2,X1,'T_0') | ~p(s(bool,X2)) | p(s(bool,X1))) ) <=> ~$spl34),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl34])])).
fof(f2276,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,X1)) | ~p(s(bool,X2)) | ~sP8(X2,X1,'T_0')) )),
  inference(condensation,[],[f2275])).
fof(f2275,plain,(
  ( ! [X70,X72,X71,X73] : (p(s(bool,X71)) | ~p(s(bool,X72)) | ~sP8(X72,X71,'T_0') | s(bool,X70) = s(bool,X73) | s(bool,'T_0') = s(bool,X73)) )),
  inference(subsumption_resolution,[],[f2004,f735])).
fof(f2004,plain,(
  ( ! [X70,X72,X71,X73] : (~p(s(bool,X70)) | p(s(bool,X71)) | ~p(s(bool,X72)) | ~sP8(X72,X71,'T_0') | s(bool,X70) = s(bool,X73) | s(bool,'T_0') = s(bool,X73)) )),
  inference(superposition,[],[f475,f674])).
fof(f2212,plain,(
  ( ! [X2,X1] : (~sP7('T_0',X2,X1) | p(s(bool,X2)) | p(s(bool,X1))) ) | $spl32),
  inference(cnf_transformation,[],[f2212_D])).
fof(f2212_D,plain,(
  ( ! [X2,X1] : (~sP7('T_0',X2,X1) | p(s(bool,X2)) | p(s(bool,X1))) ) <=> ~$spl32),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl32])])).
fof(f2274,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,X1)) | p(s(bool,X2)) | ~sP7('T_0',X2,X1)) )),
  inference(condensation,[],[f2273])).
fof(f2273,plain,(
  ( ! [X68,X66,X69,X67] : (p(s(bool,X67)) | p(s(bool,X68)) | ~sP7('T_0',X68,X67) | s(bool,X66) = s(bool,X69) | s(bool,'T_0') = s(bool,X69)) )),
  inference(subsumption_resolution,[],[f2003,f735])).
fof(f2003,plain,(
  ( ! [X68,X66,X69,X67] : (~p(s(bool,X66)) | p(s(bool,X67)) | p(s(bool,X68)) | ~sP7('T_0',X68,X67) | s(bool,X66) = s(bool,X69) | s(bool,'T_0') = s(bool,X69)) )),
  inference(superposition,[],[f465,f674])).
fof(f2209,plain,(
  ( ! [X2,X1] : (sP7('T_0',X1,X2) | ~p(s(bool,X1))) ) | $spl30),
  inference(cnf_transformation,[],[f2209_D])).
fof(f2209_D,plain,(
  ( ! [X2,X1] : (sP7('T_0',X1,X2) | ~p(s(bool,X1))) ) <=> ~$spl30),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl30])])).
fof(f2272,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X1)) | sP7('T_0',X1,X2)) )),
  inference(condensation,[],[f2271])).
fof(f2271,plain,(
  ( ! [X64,X62,X65,X63] : (~p(s(bool,X63)) | sP7('T_0',X63,X64) | s(bool,X62) = s(bool,X65) | s(bool,'T_0') = s(bool,X65)) )),
  inference(subsumption_resolution,[],[f2002,f735])).
fof(f2002,plain,(
  ( ! [X64,X62,X65,X63] : (~p(s(bool,X62)) | ~p(s(bool,X63)) | sP7('T_0',X63,X64) | s(bool,X62) = s(bool,X65) | s(bool,'T_0') = s(bool,X65)) )),
  inference(superposition,[],[f464,f674])).
fof(f2206,plain,(
  ( ! [X2,X1] : (sP7('T_0',X2,X1) | ~p(s(bool,X1))) ) | $spl28),
  inference(cnf_transformation,[],[f2206_D])).
fof(f2206_D,plain,(
  ( ! [X2,X1] : (sP7('T_0',X2,X1) | ~p(s(bool,X1))) ) <=> ~$spl28),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl28])])).
fof(f2270,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X1)) | sP7('T_0',X2,X1)) )),
  inference(condensation,[],[f2269])).
fof(f2269,plain,(
  ( ! [X61,X59,X60,X58] : (~p(s(bool,X59)) | sP7('T_0',X60,X59) | s(bool,X58) = s(bool,X61) | s(bool,'T_0') = s(bool,X61)) )),
  inference(subsumption_resolution,[],[f2001,f735])).
fof(f2001,plain,(
  ( ! [X61,X59,X60,X58] : (~p(s(bool,X58)) | ~p(s(bool,X59)) | sP7('T_0',X60,X59) | s(bool,X58) = s(bool,X61) | s(bool,'T_0') = s(bool,X61)) )),
  inference(superposition,[],[f463,f674])).
fof(f2203,plain,(
  ( ! [X2,X1] : (~sP6('T_0',X1,X2) | p(s(bool,X1)) | p(s(bool,X2))) ) | $spl26),
  inference(cnf_transformation,[],[f2203_D])).
fof(f2203_D,plain,(
  ( ! [X2,X1] : (~sP6('T_0',X1,X2) | p(s(bool,X1)) | p(s(bool,X2))) ) <=> ~$spl26),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl26])])).
fof(f2268,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,X1)) | p(s(bool,X2)) | ~sP6('T_0',X1,X2)) )),
  inference(condensation,[],[f2267])).
fof(f2267,plain,(
  ( ! [X57,X54,X56,X55] : (p(s(bool,X55)) | p(s(bool,X56)) | ~sP6('T_0',X55,X56) | s(bool,X54) = s(bool,X57) | s(bool,'T_0') = s(bool,X57)) )),
  inference(subsumption_resolution,[],[f2000,f735])).
fof(f2000,plain,(
  ( ! [X57,X54,X56,X55] : (~p(s(bool,X54)) | p(s(bool,X55)) | p(s(bool,X56)) | ~sP6('T_0',X55,X56) | s(bool,X54) = s(bool,X57) | s(bool,'T_0') = s(bool,X57)) )),
  inference(superposition,[],[f458,f674])).
fof(f2200,plain,(
  ( ! [X2,X1] : (~sP3(X1,'T_0',X2) | ~p(s(bool,X1)) | p(s(bool,X2))) ) | $spl24),
  inference(cnf_transformation,[],[f2200_D])).
fof(f2200_D,plain,(
  ( ! [X2,X1] : (~sP3(X1,'T_0',X2) | ~p(s(bool,X1)) | p(s(bool,X2))) ) <=> ~$spl24),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl24])])).
fof(f2266,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X1)) | p(s(bool,X2)) | ~sP3(X1,'T_0',X2)) )),
  inference(condensation,[],[f2265])).
fof(f2265,plain,(
  ( ! [X52,X50,X53,X51] : (~p(s(bool,X51)) | p(s(bool,X52)) | ~sP3(X51,'T_0',X52) | s(bool,X50) = s(bool,X53) | s(bool,'T_0') = s(bool,X53)) )),
  inference(subsumption_resolution,[],[f1999,f735])).
fof(f1999,plain,(
  ( ! [X52,X50,X53,X51] : (~p(s(bool,X50)) | ~p(s(bool,X51)) | p(s(bool,X52)) | ~sP3(X51,'T_0',X52) | s(bool,X50) = s(bool,X53) | s(bool,'T_0') = s(bool,X53)) )),
  inference(superposition,[],[f439,f674])).
fof(f2197,plain,(
  ( ! [X2,X1] : (~sP4(X1,'T_0',X2) | ~p(s(bool,X1)) | p(s(bool,X2))) ) | $spl22),
  inference(cnf_transformation,[],[f2197_D])).
fof(f2197_D,plain,(
  ( ! [X2,X1] : (~sP4(X1,'T_0',X2) | ~p(s(bool,X1)) | p(s(bool,X2))) ) <=> ~$spl22),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl22])])).
fof(f2264,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X1)) | p(s(bool,X2)) | ~sP4(X1,'T_0',X2)) )),
  inference(condensation,[],[f2263])).
fof(f2263,plain,(
  ( ! [X47,X48,X46,X49] : (~p(s(bool,X47)) | p(s(bool,X48)) | ~sP4(X47,'T_0',X48) | s(bool,X46) = s(bool,X49) | s(bool,'T_0') = s(bool,X49)) )),
  inference(subsumption_resolution,[],[f1998,f735])).
fof(f1998,plain,(
  ( ! [X47,X48,X46,X49] : (~p(s(bool,X46)) | ~p(s(bool,X47)) | p(s(bool,X48)) | ~sP4(X47,'T_0',X48) | s(bool,X46) = s(bool,X49) | s(bool,'T_0') = s(bool,X49)) )),
  inference(superposition,[],[f435,f674])).
fof(f2194,plain,(
  ( ! [X2,X1] : (~sP3(X2,'T_0',X1) | sP5(X1,X2,'T_0') | ~sP4(X1,'T_0',X2)) ) | $spl20),
  inference(cnf_transformation,[],[f2194_D])).
fof(f2194_D,plain,(
  ( ! [X2,X1] : (~sP3(X2,'T_0',X1) | sP5(X1,X2,'T_0') | ~sP4(X1,'T_0',X2)) ) <=> ~$spl20),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl20])])).
fof(f2262,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | sP5(X1,X2,'T_0') | ~sP4(X1,'T_0',X2) | ~sP3(X2,'T_0',X1)) )),
  inference(subsumption_resolution,[],[f2261,f514])).
fof(f2261,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | sP5(X1,X2,'T_0') | ~sP4(X1,'T_0',X2) | ~sP3(X2,'T_0',X1) | ~sP2('T_0',X2,X1)) )),
  inference(condensation,[],[f2260])).
fof(f2260,plain,(
  ( ! [X45,X43,X44,X42] : (sP5(X43,X44,'T_0') | ~sP4(X43,'T_0',X44) | ~sP3(X44,'T_0',X43) | ~sP2('T_0',X44,X43) | s(bool,X42) = s(bool,X45) | s(bool,'T_0') = s(bool,X45)) )),
  inference(subsumption_resolution,[],[f1997,f735])).
fof(f1997,plain,(
  ( ! [X45,X43,X44,X42] : (~p(s(bool,X42)) | sP5(X43,X44,'T_0') | ~sP4(X43,'T_0',X44) | ~sP3(X44,'T_0',X43) | ~sP2('T_0',X44,X43) | s(bool,X42) = s(bool,X45) | s(bool,'T_0') = s(bool,X45)) )),
  inference(superposition,[],[f432,f674])).
fof(f2190,plain,(
  ( ! [X2,X1] : (~sP5(X1,'T_0',X2) | ~p(s(bool,X1)) | p(s(bool,X2))) ) | $spl18),
  inference(cnf_transformation,[],[f2190_D])).
fof(f2190_D,plain,(
  ( ! [X2,X1] : (~sP5(X1,'T_0',X2) | ~p(s(bool,X1)) | p(s(bool,X2))) ) <=> ~$spl18),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl18])])).
fof(f2259,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X1)) | p(s(bool,X2)) | ~sP5(X1,'T_0',X2)) )),
  inference(condensation,[],[f2258])).
fof(f2258,plain,(
  ( ! [X39,X41,X38,X40] : (~p(s(bool,X39)) | p(s(bool,X40)) | ~sP5(X39,'T_0',X40) | s(bool,X38) = s(bool,X41) | s(bool,'T_0') = s(bool,X41)) )),
  inference(subsumption_resolution,[],[f1996,f735])).
fof(f1996,plain,(
  ( ! [X39,X41,X38,X40] : (~p(s(bool,X38)) | ~p(s(bool,X39)) | p(s(bool,X40)) | ~sP5(X39,'T_0',X40) | s(bool,X38) = s(bool,X41) | s(bool,'T_0') = s(bool,X41)) )),
  inference(superposition,[],[f431,f674])).
fof(f2187,plain,(
  ( ! [X1] : (p(s(bool,X1)) | sP1(X1,'T_0')) ) | $spl16),
  inference(cnf_transformation,[],[f2187_D])).
fof(f2187_D,plain,(
  ( ! [X1] : (p(s(bool,X1)) | sP1(X1,'T_0')) ) <=> ~$spl16),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl16])])).
fof(f2257,plain,(
  ( ! [X0,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,X1)) | sP1(X1,'T_0')) )),
  inference(condensation,[],[f2256])).
fof(f2256,plain,(
  ( ! [X37,X35,X36] : (p(s(bool,X36)) | sP1(X36,'T_0') | s(bool,X35) = s(bool,X37) | s(bool,'T_0') = s(bool,X37)) )),
  inference(subsumption_resolution,[],[f1995,f735])).
fof(f1995,plain,(
  ( ! [X37,X35,X36] : (~p(s(bool,X35)) | p(s(bool,X36)) | sP1(X36,'T_0') | s(bool,X35) = s(bool,X37) | s(bool,'T_0') = s(bool,X37)) )),
  inference(superposition,[],[f406,f674])).
fof(f2183,plain,(
  ( ! [X1] : (p(s(bool,X1)) | sP1('T_0',X1)) ) | $spl12),
  inference(cnf_transformation,[],[f2183_D])).
fof(f2183_D,plain,(
  ( ! [X1] : (p(s(bool,X1)) | sP1('T_0',X1)) ) <=> ~$spl12),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl12])])).
fof(f2255,plain,(
  ( ! [X0,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,X1)) | sP1('T_0',X1)) )),
  inference(condensation,[],[f2254])).
fof(f2254,plain,(
  ( ! [X33,X34,X32] : (p(s(bool,X33)) | sP1('T_0',X33) | s(bool,X32) = s(bool,X34) | s(bool,'T_0') = s(bool,X34)) )),
  inference(subsumption_resolution,[],[f1994,f735])).
fof(f1994,plain,(
  ( ! [X33,X34,X32] : (~p(s(bool,X32)) | p(s(bool,X33)) | sP1('T_0',X33) | s(bool,X32) = s(bool,X34) | s(bool,'T_0') = s(bool,X34)) )),
  inference(superposition,[],[f403,f674])).
fof(f2229,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | ~sP6('T_0',X1,X2) | sP7('T_0',X1,X2)) )),
  inference(condensation,[],[f2228])).
fof(f2228,plain,(
  ( ! [X92,X90,X93,X91] : (~sP6('T_0',X91,X92) | sP7('T_0',X91,X92) | s(bool,X90) = s(bool,X93) | s(bool,'T_0') = s(bool,X93)) )),
  inference(subsumption_resolution,[],[f1938,f735])).
fof(f1938,plain,(
  ( ! [X92,X90,X93,X91] : (~p(s(bool,X90)) | ~sP6('T_0',X91,X92) | sP7('T_0',X91,X92) | s(bool,X90) = s(bool,X93) | s(bool,'T_0') = s(bool,X93)) )),
  inference(superposition,[],[f486,f674])).
fof(f2226,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | ~sP8('T_0',X1,X2) | sP9('T_0',X1,X2)) )),
  inference(condensation,[],[f2225])).
fof(f2225,plain,(
  ( ! [X88,X87,X89,X86] : (~sP8('T_0',X87,X88) | sP9('T_0',X87,X88) | s(bool,X86) = s(bool,X89) | s(bool,'T_0') = s(bool,X89)) )),
  inference(subsumption_resolution,[],[f1937,f735])).
fof(f1937,plain,(
  ( ! [X88,X87,X89,X86] : (~p(s(bool,X86)) | ~sP8('T_0',X87,X88) | sP9('T_0',X87,X88) | s(bool,X86) = s(bool,X89) | s(bool,'T_0') = s(bool,X89)) )),
  inference(superposition,[],[f485,f674])).
fof(f2223,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X1)) | p(s(bool,X2)) | ~sP9('T_0',X2,X1)) )),
  inference(condensation,[],[f2222])).
fof(f2222,plain,(
  ( ! [X85,X83,X84,X82] : (~p(s(bool,X83)) | p(s(bool,X84)) | ~sP9('T_0',X84,X83) | s(bool,X82) = s(bool,X85) | s(bool,'T_0') = s(bool,X85)) )),
  inference(subsumption_resolution,[],[f1936,f735])).
fof(f1936,plain,(
  ( ! [X85,X83,X84,X82] : (~p(s(bool,X82)) | ~p(s(bool,X83)) | p(s(bool,X84)) | ~sP9('T_0',X84,X83) | s(bool,X82) = s(bool,X85) | s(bool,'T_0') = s(bool,X85)) )),
  inference(superposition,[],[f482,f674])).
fof(f2220,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X1)) | sP9('T_0',X1,X2)) )),
  inference(condensation,[],[f2219])).
fof(f2219,plain,(
  ( ! [X80,X78,X81,X79] : (~p(s(bool,X79)) | sP9('T_0',X79,X80) | s(bool,X78) = s(bool,X81) | s(bool,'T_0') = s(bool,X81)) )),
  inference(subsumption_resolution,[],[f1935,f735])).
fof(f1935,plain,(
  ( ! [X80,X78,X81,X79] : (~p(s(bool,X78)) | ~p(s(bool,X79)) | sP9('T_0',X79,X80) | s(bool,X78) = s(bool,X81) | s(bool,'T_0') = s(bool,X81)) )),
  inference(superposition,[],[f481,f674])).
fof(f2217,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,X1)) | sP9('T_0',X2,X1)) )),
  inference(condensation,[],[f2216])).
fof(f2216,plain,(
  ( ! [X76,X74,X77,X75] : (p(s(bool,X75)) | sP9('T_0',X76,X75) | s(bool,X74) = s(bool,X77) | s(bool,'T_0') = s(bool,X77)) )),
  inference(subsumption_resolution,[],[f1934,f735])).
fof(f1934,plain,(
  ( ! [X76,X74,X77,X75] : (~p(s(bool,X74)) | p(s(bool,X75)) | sP9('T_0',X76,X75) | s(bool,X74) = s(bool,X77) | s(bool,'T_0') = s(bool,X77)) )),
  inference(superposition,[],[f480,f674])).
fof(f2214,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,X1)) | ~p(s(bool,X2)) | ~sP8(X2,X1,'T_0')) )),
  inference(condensation,[],[f2213])).
fof(f2213,plain,(
  ( ! [X70,X72,X71,X73] : (p(s(bool,X71)) | ~p(s(bool,X72)) | ~sP8(X72,X71,'T_0') | s(bool,X70) = s(bool,X73) | s(bool,'T_0') = s(bool,X73)) )),
  inference(subsumption_resolution,[],[f1933,f735])).
fof(f1933,plain,(
  ( ! [X70,X72,X71,X73] : (~p(s(bool,X70)) | p(s(bool,X71)) | ~p(s(bool,X72)) | ~sP8(X72,X71,'T_0') | s(bool,X70) = s(bool,X73) | s(bool,'T_0') = s(bool,X73)) )),
  inference(superposition,[],[f475,f674])).
fof(f2211,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,X1)) | p(s(bool,X2)) | ~sP7('T_0',X2,X1)) )),
  inference(condensation,[],[f2210])).
fof(f2210,plain,(
  ( ! [X68,X66,X69,X67] : (p(s(bool,X67)) | p(s(bool,X68)) | ~sP7('T_0',X68,X67) | s(bool,X66) = s(bool,X69) | s(bool,'T_0') = s(bool,X69)) )),
  inference(subsumption_resolution,[],[f1932,f735])).
fof(f1932,plain,(
  ( ! [X68,X66,X69,X67] : (~p(s(bool,X66)) | p(s(bool,X67)) | p(s(bool,X68)) | ~sP7('T_0',X68,X67) | s(bool,X66) = s(bool,X69) | s(bool,'T_0') = s(bool,X69)) )),
  inference(superposition,[],[f465,f674])).
fof(f2208,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X1)) | sP7('T_0',X1,X2)) )),
  inference(condensation,[],[f2207])).
fof(f2207,plain,(
  ( ! [X64,X62,X65,X63] : (~p(s(bool,X63)) | sP7('T_0',X63,X64) | s(bool,X62) = s(bool,X65) | s(bool,'T_0') = s(bool,X65)) )),
  inference(subsumption_resolution,[],[f1931,f735])).
fof(f1931,plain,(
  ( ! [X64,X62,X65,X63] : (~p(s(bool,X62)) | ~p(s(bool,X63)) | sP7('T_0',X63,X64) | s(bool,X62) = s(bool,X65) | s(bool,'T_0') = s(bool,X65)) )),
  inference(superposition,[],[f464,f674])).
fof(f2205,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X1)) | sP7('T_0',X2,X1)) )),
  inference(condensation,[],[f2204])).
fof(f2204,plain,(
  ( ! [X61,X59,X60,X58] : (~p(s(bool,X59)) | sP7('T_0',X60,X59) | s(bool,X58) = s(bool,X61) | s(bool,'T_0') = s(bool,X61)) )),
  inference(subsumption_resolution,[],[f1930,f735])).
fof(f1930,plain,(
  ( ! [X61,X59,X60,X58] : (~p(s(bool,X58)) | ~p(s(bool,X59)) | sP7('T_0',X60,X59) | s(bool,X58) = s(bool,X61) | s(bool,'T_0') = s(bool,X61)) )),
  inference(superposition,[],[f463,f674])).
fof(f2202,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,X1)) | p(s(bool,X2)) | ~sP6('T_0',X1,X2)) )),
  inference(condensation,[],[f2201])).
fof(f2201,plain,(
  ( ! [X57,X54,X56,X55] : (p(s(bool,X55)) | p(s(bool,X56)) | ~sP6('T_0',X55,X56) | s(bool,X54) = s(bool,X57) | s(bool,'T_0') = s(bool,X57)) )),
  inference(subsumption_resolution,[],[f1929,f735])).
fof(f1929,plain,(
  ( ! [X57,X54,X56,X55] : (~p(s(bool,X54)) | p(s(bool,X55)) | p(s(bool,X56)) | ~sP6('T_0',X55,X56) | s(bool,X54) = s(bool,X57) | s(bool,'T_0') = s(bool,X57)) )),
  inference(superposition,[],[f458,f674])).
fof(f2199,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X1)) | p(s(bool,X2)) | ~sP3(X1,'T_0',X2)) )),
  inference(condensation,[],[f2198])).
fof(f2198,plain,(
  ( ! [X52,X50,X53,X51] : (~p(s(bool,X51)) | p(s(bool,X52)) | ~sP3(X51,'T_0',X52) | s(bool,X50) = s(bool,X53) | s(bool,'T_0') = s(bool,X53)) )),
  inference(subsumption_resolution,[],[f1928,f735])).
fof(f1928,plain,(
  ( ! [X52,X50,X53,X51] : (~p(s(bool,X50)) | ~p(s(bool,X51)) | p(s(bool,X52)) | ~sP3(X51,'T_0',X52) | s(bool,X50) = s(bool,X53) | s(bool,'T_0') = s(bool,X53)) )),
  inference(superposition,[],[f439,f674])).
fof(f2196,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X1)) | p(s(bool,X2)) | ~sP4(X1,'T_0',X2)) )),
  inference(condensation,[],[f2195])).
fof(f2195,plain,(
  ( ! [X47,X48,X46,X49] : (~p(s(bool,X47)) | p(s(bool,X48)) | ~sP4(X47,'T_0',X48) | s(bool,X46) = s(bool,X49) | s(bool,'T_0') = s(bool,X49)) )),
  inference(subsumption_resolution,[],[f1927,f735])).
fof(f1927,plain,(
  ( ! [X47,X48,X46,X49] : (~p(s(bool,X46)) | ~p(s(bool,X47)) | p(s(bool,X48)) | ~sP4(X47,'T_0',X48) | s(bool,X46) = s(bool,X49) | s(bool,'T_0') = s(bool,X49)) )),
  inference(superposition,[],[f435,f674])).
fof(f2193,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | sP5(X1,X2,'T_0') | ~sP4(X1,'T_0',X2) | ~sP3(X2,'T_0',X1)) )),
  inference(subsumption_resolution,[],[f2192,f514])).
fof(f2192,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | sP5(X1,X2,'T_0') | ~sP4(X1,'T_0',X2) | ~sP3(X2,'T_0',X1) | ~sP2('T_0',X2,X1)) )),
  inference(condensation,[],[f2191])).
fof(f2191,plain,(
  ( ! [X45,X43,X44,X42] : (sP5(X43,X44,'T_0') | ~sP4(X43,'T_0',X44) | ~sP3(X44,'T_0',X43) | ~sP2('T_0',X44,X43) | s(bool,X42) = s(bool,X45) | s(bool,'T_0') = s(bool,X45)) )),
  inference(subsumption_resolution,[],[f1926,f735])).
fof(f1926,plain,(
  ( ! [X45,X43,X44,X42] : (~p(s(bool,X42)) | sP5(X43,X44,'T_0') | ~sP4(X43,'T_0',X44) | ~sP3(X44,'T_0',X43) | ~sP2('T_0',X44,X43) | s(bool,X42) = s(bool,X45) | s(bool,'T_0') = s(bool,X45)) )),
  inference(superposition,[],[f432,f674])).
fof(f2189,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X1)) | p(s(bool,X2)) | ~sP5(X1,'T_0',X2)) )),
  inference(condensation,[],[f2188])).
fof(f2188,plain,(
  ( ! [X39,X41,X38,X40] : (~p(s(bool,X39)) | p(s(bool,X40)) | ~sP5(X39,'T_0',X40) | s(bool,X38) = s(bool,X41) | s(bool,'T_0') = s(bool,X41)) )),
  inference(subsumption_resolution,[],[f1925,f735])).
fof(f1925,plain,(
  ( ! [X39,X41,X38,X40] : (~p(s(bool,X38)) | ~p(s(bool,X39)) | p(s(bool,X40)) | ~sP5(X39,'T_0',X40) | s(bool,X38) = s(bool,X41) | s(bool,'T_0') = s(bool,X41)) )),
  inference(superposition,[],[f431,f674])).
fof(f2186,plain,(
  ( ! [X0,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,X1)) | sP1(X1,'T_0')) )),
  inference(condensation,[],[f2185])).
fof(f2185,plain,(
  ( ! [X37,X35,X36] : (p(s(bool,X36)) | sP1(X36,'T_0') | s(bool,X35) = s(bool,X37) | s(bool,'T_0') = s(bool,X37)) )),
  inference(subsumption_resolution,[],[f1924,f735])).
fof(f1924,plain,(
  ( ! [X37,X35,X36] : (~p(s(bool,X35)) | p(s(bool,X36)) | sP1(X36,'T_0') | s(bool,X35) = s(bool,X37) | s(bool,'T_0') = s(bool,X37)) )),
  inference(superposition,[],[f406,f674])).
fof(f2182,plain,(
  ( ! [X0,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,X1)) | sP1('T_0',X1)) )),
  inference(condensation,[],[f2181])).
fof(f2181,plain,(
  ( ! [X33,X34,X32] : (p(s(bool,X33)) | sP1('T_0',X33) | s(bool,X32) = s(bool,X34) | s(bool,'T_0') = s(bool,X34)) )),
  inference(subsumption_resolution,[],[f1923,f735])).
fof(f1923,plain,(
  ( ! [X33,X34,X32] : (~p(s(bool,X32)) | p(s(bool,X33)) | sP1('T_0',X33) | s(bool,X32) = s(bool,X34) | s(bool,'T_0') = s(bool,X34)) )),
  inference(superposition,[],[f403,f674])).
fof(f1502,plain,(
  ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | $spl9),
  inference(cnf_transformation,[],[f1502_D])).
fof(f1502_D,plain,(
  ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) <=> ~$spl9),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl9])])).
fof(f1503,plain,(
  ( ! [X17,X15,X16] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X16),s('type.rat.rat',X17))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X17),s('type.rat.rat',X15))),s('type.rat.rat',X15))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X16),s('type.rat.rat',X15))),s('type.rat.rat',X15))))) | s('type.rat.rat',X15) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl10),
  inference(cnf_transformation,[],[f1503_D])).
fof(f1503_D,plain,(
  ( ! [X17,X15,X16] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X16),s('type.rat.rat',X17))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X17),s('type.rat.rat',X15))),s('type.rat.rat',X15))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X16),s('type.rat.rat',X15))),s('type.rat.rat',X15))))) | s('type.rat.rat',X15) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) <=> ~$spl10),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl10])])).
fof(f1500,plain,(
  ( ! [X17,X15,X16] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X16),s('type.rat.rat',X17))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X17),s('type.rat.rat',X15))),s('type.rat.rat',X15))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X16),s('type.rat.rat',X15))),s('type.rat.rat',X15))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.rat.rat',X15) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(forward_demodulation,[],[f1499,f1409])).
fof(f1499,plain,(
  ( ! [X17,X15,X16] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X16),s('type.rat.rat',X17))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X17),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X15),s('type.rat.rat',X15))))),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X16),s('type.rat.rat',X15))),s('type.rat.rat',X15))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.rat.rat',X15) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(forward_demodulation,[],[f1498,f1409])).
fof(f1498,plain,(
  ( ! [X17,X15,X16] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X16),s('type.rat.rat',X17))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X17),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X15),s('type.rat.rat',X15))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X16),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',X15),s('type.rat.rat',X15))))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.rat.rat',X15) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(forward_demodulation,[],[f1492,f373])).
fof(f1492,plain,(
  ( ! [X17,X15,X16] : (~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X16),s('type.rat.rat',X17))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X17),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X15),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X15))))))),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X16),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X15),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X15))))))))) | s('type.rat.rat',X15) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f421,f308])).
fof(f1464,plain,(
  s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | $spl6),
  inference(cnf_transformation,[],[f1464_D])).
fof(f1464_D,plain,(
  s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) <=> ~$spl6),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl6])])).
fof(f1438,plain,(
  ( ! [X7] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X7),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X7))))) | s('type.rat.rat',X7) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f308,f308])).
fof(f800,plain,(
  s(bool,'T_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK10),s('type.rat.rat',sK12))))) | $spl0),
  inference(cnf_transformation,[],[f800_D])).
fof(f800_D,plain,(
  s(bool,'T_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK10),s('type.rat.rat',sK12))))) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f802,plain,(
  s(bool,'F_0') != s(bool,'const.rat.rat_les_2'(s('type.rat.rat',sK10),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12))))) | $spl3),
  inference(cnf_transformation,[],[f802_D])).
fof(f802_D,plain,(
  s(bool,'F_0') != s(bool,'const.rat.rat_les_2'(s('type.rat.rat',sK10),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12))))) <=> ~$spl3),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl3])])).
fof(f798,plain,(
  s(bool,'F_0') != s(bool,'const.rat.rat_les_2'(s('type.rat.rat',sK10),s('type.rat.rat','const.rat.rat_div_2'(s('type.rat.rat',sK11),s('type.rat.rat',sK12))))) | s(bool,'T_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',sK11),s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK10),s('type.rat.rat',sK12)))))),
  inference(superposition,[],[f287,f297])).
% SZS output end Proof for thm.rat
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 923
% Passive clauses: 4313
% Generated clauses: 31002
% Final active clauses: 262
% Final passive clauses: 641
% Input formulas: 61
% Initial clauses: 199
% 
% Duplicate literals: 237
% Trivial inequalities: 33
% Fw subsumption resolutions: 418
% Fw demodulations: 6178
% Bw demodulations: 2028
% Condensations: 233
% Global subsumptions: 272
% 
% Simple tautologies: 117
% Equational tautologies: 129
% Forward subsumptions: 18365
% Fw demodulations to eq. taut.: 146
% Bw demodulations to eq. taut.: 7
% 
% Unit resulting resolution: 3960
% Factoring: 1
% Forward superposition: 5747
% Backward superposition: 9421
% Self superposition: 236
% Equality factoring: 34
% Equality resolution: 1
% 
% Split clauses: 172
% Split components: 349
% SAT solver clauses: 5320
% SAT solver unit clauses: 520
% SAT solver binary clauses: 1014
% 
% Sat splits: 172
% Sat splitting refutations: 389
% 
% Memory used [KB]: 29167
% Time elapsed: 1.834 s
% ------------------------------
% ------------------------------
% Success in time 3.204 s
