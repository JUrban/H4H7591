Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.rat
% (100136)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 1247
% Passive clauses: 7508
% Generated clauses: 36372
% Final active clauses: 1202
% Final passive clauses: 5713
% Input formulas: 517
% Initial clauses: 829
% 
% Duplicate literals: 294
% Trivial inequalities: 67
% Fw subsumption resolutions: 2332
% Fw demodulations: 2702
% Bw demodulations: 37
% 
% Simple tautologies: 296
% Equational tautologies: 29
% Forward subsumptions: 22913
% Fw demodulations to eq. taut.: 8
% 
% Binary resolution: 7964
% Factoring: 1322
% Forward superposition: 11659
% Backward superposition: 8869
% Self superposition: 80
% Equality factoring: 2
% Equality resolution: 14
% 
% Split clauses: 426
% Split components: 854
% SAT solver clauses: 702
% SAT solver unit clauses: 29
% SAT solver binary clauses: 111
% 
% Sat splits: 426
% Sat splitting refutations: 3
% 
% TWLsolver clauses: 702
% TWLsolver calls for satisfiability: 530
% 
% Memory used [KB]: 18166
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 143 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.rat
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.rat
% SZS output start Proof for thm.rat
fof(f22038,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f22026,f1430,f2291,f3158,f3159,f3019,f3042,f1441,f2311,f1600,f2439,f3147,f3148,f1470,f2348,f1791,f2564,f2951,f2955,f1825,f2588,f1895,f2641])).
fof(f2641,plain,(
  ( ! [X0,X1] : (s('type.frac.frac','const.frac.frac_save_2'(s('type.integer.int',X0),s('type.num.num',X1))) = s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X1))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) ) | $spl586),
  inference(cnf_transformation,[],[f2641_D])).
fof(f2641_D,plain,(
  ( ! [X0,X1] : (s('type.frac.frac','const.frac.frac_save_2'(s('type.integer.int',X0),s('type.num.num',X1))) = s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X1))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) ) <=> ~$spl586),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl586])])).
fof(f1895,plain,(
  ( ! [X0,X1] : (s('type.frac.frac','const.frac.frac_save_2'(s('type.integer.int',X0),s('type.num.num',X1))) = s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X1))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) )),
  inference(cnf_transformation,[],[f909])).
fof(f909,plain,(
  ! [X0,X1] : s('type.frac.frac','const.frac.frac_save_2'(s('type.integer.int',X0),s('type.num.num',X1))) = s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X1))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))),
  inference(rectify,[],[f16])).
fof(f16,axiom,(
  ! [X14,X15] : s('type.frac.frac','const.frac.frac_save_2'(s('type.integer.int',X14),s('type.num.num',X15))) = s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X14),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X15))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))),
  file('thm.rat.RAT_SAVE_NUM','thm.frac.frac_save_def')).
fof(f2588,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X0))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X1)))))) ) | $spl480),
  inference(cnf_transformation,[],[f2588_D])).
fof(f2588_D,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X0))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X1)))))) ) <=> ~$spl480),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl480])])).
fof(f1825,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X0))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X1)))))) )),
  inference(cnf_transformation,[],[f839])).
fof(f839,plain,(
  ! [X0,X1] : s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X0))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X1)))))),
  inference(rectify,[],[f297])).
fof(f297,axiom,(
  ! [X31,X6] : s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X31),s('type.num.num',X6))))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X31))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X6)))))),
  file('thm.rat.RAT_SAVE_NUM','thm.integer.INT_ADD')).
fof(f2955,plain,(
  ( ! [X0,X1] : (s('type.frac.frac','const.frac.frac_save_2'(s('type.integer.int',X0),s('type.num.num',X1))) = s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) ) | $spl1118),
  inference(cnf_transformation,[],[f2955_D])).
fof(f2955_D,plain,(
  ( ! [X0,X1] : (s('type.frac.frac','const.frac.frac_save_2'(s('type.integer.int',X0),s('type.num.num',X1))) = s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) ) <=> ~$spl1118),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1118])])).
fof(f2951,plain,(
  ( ! [X0,X1] : (s('type.frac.frac','const.frac.frac_save_2'(s('type.integer.int',X0),s('type.num.num',X1))) = s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) ) | ($spl480 | $spl586)),
  inference(backward_demodulation,[],[f2588,f2641])).
fof(f2564,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X0)))))) ) | $spl432),
  inference(cnf_transformation,[],[f2564_D])).
fof(f2564_D,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X0)))))) ) <=> ~$spl432),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl432])])).
fof(f1791,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X0)))))) )),
  inference(cnf_transformation,[],[f805])).
fof(f805,plain,(
  ! [X0,X1] : s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X0)))))),
  inference(rectify,[],[f369])).
fof(f369,axiom,(
  ! [X6,X31] : s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X31),s('type.num.num','const.num.SUC_1'(s('type.num.num',X6))))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X31),s('type.num.num',X6)))))),
  file('thm.rat.RAT_SAVE_NUM','thm.arithmetic.ADD_CLAUSES|split|3')).
fof(f2348,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) ) | $spl62),
  inference(cnf_transformation,[],[f2348_D])).
fof(f2348_D,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) ) <=> ~$spl62),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl62])])).
fof(f1470,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) )),
  inference(cnf_transformation,[],[f532])).
fof(f532,plain,(
  ! [X0] : s('type.num.num',X0) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))),
  inference(rectify,[],[f328])).
fof(f328,axiom,(
  ! [X6] : s('type.num.num',X6) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num','const.num.|48|_0')))),
  file('thm.rat.RAT_SAVE_NUM','thm.numeral.numeral_distrib|split|1')).
fof(f3148,plain,(
  ( ! [X0,X1] : (s('type.frac.frac','const.frac.frac_save_2'(s('type.integer.int',X0),s('type.num.num',X1))) = s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1)))))))))) ) | $spl1282),
  inference(cnf_transformation,[],[f3148_D])).
fof(f3148_D,plain,(
  ( ! [X0,X1] : (s('type.frac.frac','const.frac.frac_save_2'(s('type.integer.int',X0),s('type.num.num',X1))) = s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1)))))))))) ) <=> ~$spl1282),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1282])])).
fof(f3147,plain,(
  ( ! [X0,X1] : (s('type.frac.frac','const.frac.frac_save_2'(s('type.integer.int',X0),s('type.num.num',X1))) = s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1)))))))))) ) | ($spl20 | $spl62 | $spl432 | $spl1118)),
  inference(forward_demodulation,[],[f3146,f2348])).
fof(f3146,plain,(
  ( ! [X0,X1] : (s('type.frac.frac','const.frac.frac_save_2'(s('type.integer.int',X0),s('type.num.num',X1))) = s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.num.|48|_0')))))))))))) ) | ($spl20 | $spl432 | $spl1118)),
  inference(forward_demodulation,[],[f3145,f2564])).
fof(f3145,plain,(
  ( ! [X0,X1] : (s('type.frac.frac','const.frac.frac_save_2'(s('type.integer.int',X0),s('type.num.num',X1))) = s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))))))) ) | ($spl20 | $spl1118)),
  inference(forward_demodulation,[],[f2955,f2311])).
fof(f2439,plain,(
  ( ! [X0] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num',X0))) = s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X0))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) ) | $spl244),
  inference(cnf_transformation,[],[f2439_D])).
fof(f2439_D,plain,(
  ( ! [X0] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num',X0))) = s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X0))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) ) <=> ~$spl244),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl244])])).
fof(f1600,plain,(
  ( ! [X0] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num',X0))) = s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X0))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) )),
  inference(cnf_transformation,[],[f662])).
fof(f662,plain,(
  ! [X0] : s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num',X0))) = s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X0))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))),
  inference(rectify,[],[f102])).
fof(f102,axiom,(
  ! [X32] : s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num',X32))) = s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X32))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))),
  file('thm.rat.RAT_SAVE_NUM','thm.rat.RAT_OF_NUM_CALCULATE')).
fof(f2311,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl20),
  inference(cnf_transformation,[],[f2311_D])).
fof(f2311_D,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) <=> ~$spl20),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl20])])).
fof(f1441,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  inference(cnf_transformation,[],[f291])).
fof(f291,axiom,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  file('thm.rat.RAT_SAVE_NUM','thm.numeral.numeral_distrib|split|13')).
fof(f3042,plain,(
  ( ! [X0] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num',X0))) = s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X0))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))))))) ) | $spl1188),
  inference(cnf_transformation,[],[f3042_D])).
fof(f3042_D,plain,(
  ( ! [X0] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num',X0))) = s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X0))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))))))) ) <=> ~$spl1188),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1188])])).
fof(f3019,plain,(
  ( ! [X0] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num',X0))) = s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X0))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))))))) ) | ($spl20 | $spl244)),
  inference(backward_demodulation,[],[f2311,f2439])).
fof(f3159,plain,(
  ( ! [X0] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num',X0))) = s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.frac.frac_save_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X0))),s('type.num.num','const.num.|48|_0')))))) ) | $spl1290),
  inference(cnf_transformation,[],[f3159_D])).
fof(f3159_D,plain,(
  ( ! [X0] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num',X0))) = s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.frac.frac_save_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X0))),s('type.num.num','const.num.|48|_0')))))) ) <=> ~$spl1290),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1290])])).
fof(f3158,plain,(
  ( ! [X0] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num',X0))) = s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.frac.frac_save_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X0))),s('type.num.num','const.num.|48|_0')))))) ) | ($spl1188 | $spl1282)),
  inference(backward_demodulation,[],[f3148,f3042])).
fof(f2291,plain,(
  s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num',sK13))) != s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.frac.frac_save_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK13))),s('type.num.num','const.num.|48|_0'))))) | $spl1),
  inference(cnf_transformation,[],[f2291_D])).
fof(f2291_D,plain,(
  s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num',sK13))) != s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.frac.frac_save_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK13))),s('type.num.num','const.num.|48|_0'))))) <=> ~$spl1),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1])])).
fof(f1430,plain,(
  s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num',sK13))) != s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.frac.frac_save_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK13))),s('type.num.num','const.num.|48|_0')))))),
  inference(cnf_transformation,[],[f1199])).
fof(f1199,plain,(
  s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num',sK13))) != s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.frac.frac_save_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK13))),s('type.num.num','const.num.|48|_0')))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK13])],[f1094])).
fof(f1094,plain,(
  ? [X0] : s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num',X0))) != s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.frac.frac_save_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X0))),s('type.num.num','const.num.|48|_0')))))),
  inference(ennf_transformation,[],[f519])).
fof(f519,plain,(
  ~! [X0] : s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num',X0))) = s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.frac.frac_save_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X0))),s('type.num.num','const.num.|48|_0')))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num',X6))) = s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.frac.frac_save_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X6))),s('type.num.num','const.num.|48|_0')))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num',X6))) = s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.frac.frac_save_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X6))),s('type.num.num','const.num.|48|_0')))))),
  file('thm.rat.RAT_SAVE_NUM','thm.rat.RAT_SAVE_NUM')).
fof(f22026,plain,(
  $false | ($spl1 | $spl1290)),
  inference(trivial_inequality_removal,[],[f21978])).
fof(f21978,plain,(
  s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num',sK13))) != s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num',sK13))) | ($spl1 | $spl1290)),
  inference(superposition,[],[f2291,f3159])).
% SZS output end Proof for thm.rat
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 611
% Passive clauses: 2428
% Generated clauses: 20496
% Final active clauses: 590
% Final passive clauses: 1641
% Input formulas: 517
% Initial clauses: 829
% 
% Duplicate literals: 113
% Trivial inequalities: 57
% Fw subsumption resolutions: 873
% Fw demodulations: 1996
% Bw demodulations: 196
% Condensations: 136
% Global subsumptions: 50
% 
% Simple tautologies: 256
% Equational tautologies: 18
% Forward subsumptions: 11481
% Fw demodulations to eq. taut.: 4
% 
% Binary resolution: 2313
% Factoring: 307
% Forward superposition: 6528
% Backward superposition: 4501
% Self superposition: 94
% Equality factoring: 2
% Equality resolution: 18
% 
% Split clauses: 9
% Split components: 18
% SAT solver clauses: 4041
% SAT solver unit clauses: 1222
% SAT solver binary clauses: 249
% SAT solver learnt clauses: 101
% SAT solver learnt literals: 16
% 
% Sat splits: 9
% Sat splitting refutations: 2
% 
% TWLsolver clauses: 3840
% TWLsolver calls for satisfiability: 4156
% 
% Memory used [KB]: 17142
% Time elapsed: 0.485 s
% ------------------------------
% ------------------------------
% Success in time 1.111 s
