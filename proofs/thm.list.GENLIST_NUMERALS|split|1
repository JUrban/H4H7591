Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 300 next slice time: 5
dis+11_7_3 on thm.list
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.list
% SZS output start Proof for thm.list
fof(f258,plain,(
  $false),
  inference(subsumption_resolution,[],[f50,f73])).
fof(f73,plain,(
  ( ! [X2,X0,X1] : (s('type.list.list'(X0),'const.list.GENLIST_2'(s(fun('type.num.num',X0),X1),s('type.num.num',X2))) = s('type.list.list'(X0),'const.list.GENLIST_AUX_3'(s(fun('type.num.num',X0),X1),s('type.num.num',X2),s('type.list.list'(X0),'const.list.NIL_0')))) )),
  inference(cnf_transformation,[],[f30])).
fof(f30,plain,(
  ! [X0,X1,X2] : s('type.list.list'(X0),'const.list.GENLIST_2'(s(fun('type.num.num',X0),X1),s('type.num.num',X2))) = s('type.list.list'(X0),'const.list.GENLIST_AUX_3'(s(fun('type.num.num',X0),X1),s('type.num.num',X2),s('type.list.list'(X0),'const.list.NIL_0')))),
  inference(flattening,[],[f29])).
fof(f29,plain,(
  ! [X0] : ! [X1,X2] : s('type.list.list'(X0),'const.list.GENLIST_2'(s(fun('type.num.num',X0),X1),s('type.num.num',X2))) = s('type.list.list'(X0),'const.list.GENLIST_AUX_3'(s(fun('type.num.num',X0),X1),s('type.num.num',X2),s('type.list.list'(X0),'const.list.NIL_0')))),
  inference(rectify,[],[f16])).
fof(f16,axiom,(
  ! [X6] : ! [X8,X7] : s('type.list.list'(X6),'const.list.GENLIST_2'(s(fun('type.num.num',X6),X8),s('type.num.num',X7))) = s('type.list.list'(X6),'const.list.GENLIST_AUX_3'(s(fun('type.num.num',X6),X8),s('type.num.num',X7),s('type.list.list'(X6),'const.list.NIL_0')))),
  file('thm.list.GENLIST_NUMERALS|split|1','thm.list.GENLIST_GENLIST_AUX')).
fof(f50,plain,(
  s('type.list.list'(sK0),'const.list.GENLIST_2'(s(fun('type.num.num',sK0),sK2),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',sK1))))) != s('type.list.list'(sK0),'const.list.GENLIST_AUX_3'(s(fun('type.num.num',sK0),sK2),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',sK1))),s('type.list.list'(sK0),'const.list.NIL_0')))),
  inference(cnf_transformation,[],[f37])).
fof(f37,plain,(
  s('type.list.list'(sK0),'const.list.GENLIST_2'(s(fun('type.num.num',sK0),sK2),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',sK1))))) != s('type.list.list'(sK0),'const.list.GENLIST_AUX_3'(s(fun('type.num.num',sK0),sK2),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',sK1))),s('type.list.list'(sK0),'const.list.NIL_0')))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2])],[f35])).
fof(f35,plain,(
  ? [X0,X1,X2] : s('type.list.list'(X0),'const.list.GENLIST_2'(s(fun('type.num.num',X0),X2),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))))) != s('type.list.list'(X0),'const.list.GENLIST_AUX_3'(s(fun('type.num.num',X0),X2),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))),s('type.list.list'(X0),'const.list.NIL_0')))),
  inference(ennf_transformation,[],[f18])).
fof(f18,plain,(
  ~! [X0,X1,X2] : s('type.list.list'(X0),'const.list.GENLIST_2'(s(fun('type.num.num',X0),X2),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))))) = s('type.list.list'(X0),'const.list.GENLIST_AUX_3'(s(fun('type.num.num',X0),X2),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))),s('type.list.list'(X0),'const.list.NIL_0')))),
  inference(flattening,[],[f17])).
fof(f17,plain,(
  ~! [X0] : ! [X1,X2] : s('type.list.list'(X0),'const.list.GENLIST_2'(s(fun('type.num.num',X0),X2),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))))) = s('type.list.list'(X0),'const.list.GENLIST_AUX_3'(s(fun('type.num.num',X0),X2),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))),s('type.list.list'(X0),'const.list.NIL_0')))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : ! [X7,X8] : s('type.list.list'(X6),'const.list.GENLIST_2'(s(fun('type.num.num',X6),X8),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X7))))) = s('type.list.list'(X6),'const.list.GENLIST_AUX_3'(s(fun('type.num.num',X6),X8),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X7))),s('type.list.list'(X6),'const.list.NIL_0')))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : ! [X7,X8] : s('type.list.list'(X6),'const.list.GENLIST_2'(s(fun('type.num.num',X6),X8),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X7))))) = s('type.list.list'(X6),'const.list.GENLIST_AUX_3'(s(fun('type.num.num',X6),X8),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X7))),s('type.list.list'(X6),'const.list.NIL_0')))),
  file('thm.list.GENLIST_NUMERALS|split|1','thm.list.GENLIST_NUMERALS|split|1')).
% SZS output end Proof for thm.list
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 12
% Passive clauses: 36
% Generated clauses: 192
% Final active clauses: 11
% Final passive clauses: 15
% Input formulas: 15
% Initial clauses: 26
% 
% Duplicate literals: 38
% Trivial inequalities: 3
% Fw subsumption resolutions: 1
% 
% Simple tautologies: 27
% Equational tautologies: 15
% Forward subsumptions: 67
% 
% Binary resolution: 3
% Forward superposition: 33
% Backward superposition: 33
% Self superposition: 25
% Equality factoring: 26
% 
% Split clauses: 5
% Split components: 10
% SAT solver clauses: 10
% SAT solver unit clauses: 4
% SAT solver binary clauses: 5
% 
% Sat splits: 5
% 
% TWLsolver clauses: 10
% TWLsolver calls for satisfiability: 6
% 
% Memory used [KB]: 639
% Time elapsed: 0.015 s
% ------------------------------
% ------------------------------
% Success in time 0.017 s
