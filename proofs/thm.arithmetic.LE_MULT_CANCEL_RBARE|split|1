Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 300 next slice time: 5
dis+11_7_3 on thm.arithmetic
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.arithmetic
% SZS output start Proof for thm.arithmetic
fof(f7616,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f7550,f39,f59,f470,f475,f553,f71,f74,f72,f83,f37,f58,f60,f56,f7173,f38,f61,f57,f7373,f7366,f579,f473,f581])).
fof(f581,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))) | $spl18),
  inference(cnf_transformation,[],[f581_D])).
fof(f581_D,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))) <=> ~$spl18),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl18])])).
fof(f473,plain,(
  ( ! [X9] : (s(bool,'T_0') = s(bool,X9)) ) | $spl10),
  inference(cnf_transformation,[],[f473_D])).
fof(f473_D,plain,(
  ( ! [X9] : (s(bool,'T_0') = s(bool,X9)) ) <=> ~$spl10),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl10])])).
fof(f579,plain,(
  ( ! [X1] : (s(bool,'T_0') = s(bool,X1) | s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')))) )),
  inference(subsumption_resolution,[],[f575,f68])).
fof(f68,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f41,f46])).
fof(f46,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f3])).
fof(f3,axiom,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) | s(bool,'F_0') = s(bool,X0))),
  file('thm.arithmetic.LE_MULT_CANCEL_RBARE|split|1',aHL_BOOL_CASES)).
fof(f41,plain,(
  ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f16])).
fof(f16,plain,(
  ~p(s(bool,'F_0'))),
  inference(flattening,[],[f2])).
fof(f2,axiom,(
  ~p(s(bool,'F_0'))),
  file('thm.arithmetic.LE_MULT_CANCEL_RBARE|split|1',aHL_FALSITY)).
fof(f575,plain,(
  ( ! [X1] : (p(s(bool,X1)) | s(bool,'T_0') = s(bool,X1) | s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f497,f66])).
fof(f66,plain,(
  ( ! [X0,X1] : (s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X1) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f46,f46])).
fof(f497,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))))),
  inference(forward_demodulation,[],[f496,f42])).
fof(f42,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f17])).
fof(f17,plain,(
  ! [X0] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))),
  inference(rectify,[],[f7])).
fof(f7,axiom,(
  ! [X7] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X7)))),
  file('thm.arithmetic.LE_MULT_CANCEL_RBARE|split|1','thm.arithmetic.MULT_CLAUSES|split|0')).
fof(f496,plain,(
  ( ! [X1] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X1))),s('type.num.num','const.num.|48|_0'))))) )),
  inference(forward_demodulation,[],[f495,f42])).
fof(f495,plain,(
  ( ! [X2,X1] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X1))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X2))))))) )),
  inference(forward_demodulation,[],[f494,f43])).
fof(f43,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) )),
  inference(cnf_transformation,[],[f18])).
fof(f18,plain,(
  ! [X0] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))),
  inference(rectify,[],[f8])).
fof(f8,axiom,(
  ! [X7] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X7),s('type.num.num','const.num.|48|_0')))),
  file('thm.arithmetic.LE_MULT_CANCEL_RBARE|split|1','thm.arithmetic.MULT_|48|')).
fof(f494,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0'))),s('type.num.num',X1))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0'))),s('type.num.num',X2))))))) )),
  inference(trivial_inequality_removal,[],[f479])).
fof(f479,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.num.|48|_0') | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0'))),s('type.num.num',X1))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0'))),s('type.num.num',X2))))))) )),
  inference(superposition,[],[f51,f43])).
fof(f51,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num','const.num.|48|_0') != s('type.num.num',X0) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X2))))))) )),
  inference(cnf_transformation,[],[f34])).
fof(f34,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X2)))))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X0) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X2))))) & ((s('type.num.num','const.num.|48|_0') != s('type.num.num',X0) & ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X2))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X2))))))))),
  inference(flattening,[],[f33])).
fof(f33,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X2)))))) | (s('type.num.num','const.num.|48|_0') = s('type.num.num',X0) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X2)))))) & ((s('type.num.num','const.num.|48|_0') != s('type.num.num',X0) & ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X2))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X2))))))))),
  inference(nnf_transformation,[],[f25])).
fof(f25,plain,(
  ! [X0,X1,X2] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X2)))))) <=> (s('type.num.num','const.num.|48|_0') = s('type.num.num',X0) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X2))))))),
  inference(rectify,[],[f13])).
fof(f13,axiom,(
  ! [X7,X6,X8] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X7),s('type.num.num',X6))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X7),s('type.num.num',X8)))))) <=> (s('type.num.num','const.num.|48|_0') = s('type.num.num',X7) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X6),s('type.num.num',X8))))))),
  file('thm.arithmetic.LE_MULT_CANCEL_RBARE|split|1','thm.arithmetic.LE_MULT_LCANCEL')).
fof(f7366,plain,(
  $false | ($spl1 | $spl4 | $spl18)),
  inference(subsumption_resolution,[],[f7365,f40])).
fof(f40,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f1])).
fof(f1,axiom,(
  p(s(bool,'T_0'))),
  file('thm.arithmetic.LE_MULT_CANCEL_RBARE|split|1',aHL_TRUTH)).
fof(f7365,plain,(
  ~p(s(bool,'T_0')) | ($spl1 | $spl4 | $spl18)),
  inference(forward_demodulation,[],[f7364,f581])).
fof(f7364,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')))) | ($spl1 | $spl4)),
  inference(forward_demodulation,[],[f7363,f43])).
fof(f7363,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK1),s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.num.|48|_0')))) | ($spl1 | $spl4)),
  inference(forward_demodulation,[],[f57,f60])).
fof(f7373,plain,(
  $false | ($spl2 | $spl12)),
  inference(subsumption_resolution,[],[f7372,f41])).
fof(f7372,plain,(
  p(s(bool,'F_0')) | ($spl2 | $spl12)),
  inference(forward_demodulation,[],[f58,f475])).
fof(f57,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK1),s('type.num.num',sK0))),s('type.num.num',sK0)))) | $spl1),
  inference(cnf_transformation,[],[f57_D])).
fof(f57_D,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK1),s('type.num.num',sK0))),s('type.num.num',sK0)))) <=> ~$spl1),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1])])).
fof(f61,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num',sK0) | $spl5),
  inference(cnf_transformation,[],[f61_D])).
fof(f61_D,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num',sK0) <=> ~$spl5),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl5])])).
fof(f38,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num',sK0) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK1),s('type.num.num',sK0))),s('type.num.num',sK0))))),
  inference(cnf_transformation,[],[f31])).
fof(f31,plain,(
  (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK1),s('type.num.num',sK0))),s('type.num.num',sK0)))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',sK0) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) & (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK1),s('type.num.num',sK0))),s('type.num.num',sK0)))) | (s('type.num.num','const.num.|48|_0') != s('type.num.num',sK0) & ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1])],[f30])).
fof(f30,plain,(
  ? [X0,X1] : ((p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X0))),s('type.num.num',X0)))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X0) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) & (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X0))),s('type.num.num',X0)))) | (s('type.num.num','const.num.|48|_0') != s('type.num.num',X0) & ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))),
  inference(flattening,[],[f29])).
fof(f29,plain,(
  ? [X0,X1] : ((p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X0))),s('type.num.num',X0)))) | (s('type.num.num','const.num.|48|_0') = s('type.num.num',X0) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) & (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X0))),s('type.num.num',X0)))) | (s('type.num.num','const.num.|48|_0') != s('type.num.num',X0) & ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))),
  inference(nnf_transformation,[],[f27])).
fof(f27,plain,(
  ? [X0,X1] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X0))),s('type.num.num',X0)))) <~> (s('type.num.num','const.num.|48|_0') = s('type.num.num',X0) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),
  inference(ennf_transformation,[],[f15])).
fof(f15,plain,(
  ~! [X0,X1] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X0))),s('type.num.num',X0)))) <=> (s('type.num.num','const.num.|48|_0') = s('type.num.num',X0) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X7),s('type.num.num',X6))),s('type.num.num',X6)))) <=> (s('type.num.num','const.num.|48|_0') = s('type.num.num',X6) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X7),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X7),s('type.num.num',X6))),s('type.num.num',X6)))) <=> (s('type.num.num','const.num.|48|_0') = s('type.num.num',X6) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X7),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),
  file('thm.arithmetic.LE_MULT_CANCEL_RBARE|split|1','thm.arithmetic.LE_MULT_CANCEL_RBARE|split|1')).
fof(f7173,plain,(
  $false | ($spl0 | $spl5 | $spl12)),
  inference(subsumption_resolution,[],[f7172,f41])).
fof(f7172,plain,(
  p(s(bool,'F_0')) | ($spl0 | $spl5 | $spl12)),
  inference(forward_demodulation,[],[f7171,f475])).
fof(f7171,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | ($spl0 | $spl5)),
  inference(subsumption_resolution,[],[f7170,f61])).
fof(f7170,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num',sK0) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | $spl0),
  inference(subsumption_resolution,[],[f7096,f40])).
fof(f7096,plain,(
  ~p(s(bool,'T_0')) | s('type.num.num','const.num.|48|_0') = s('type.num.num',sK0) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | $spl0),
  inference(superposition,[],[f1857,f91])).
fof(f91,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK1),s('type.num.num',sK0))),s('type.num.num',sK0))) | $spl0),
  inference(subsumption_resolution,[],[f90,f41])).
fof(f90,plain,(
  p(s(bool,'F_0')) | s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK1),s('type.num.num',sK0))),s('type.num.num',sK0))) | $spl0),
  inference(superposition,[],[f56,f46])).
fof(f1857,plain,(
  ( ! [X8,X9] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X9),s('type.num.num',X8))),s('type.num.num',X8)))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X8) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X9),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) )),
  inference(superposition,[],[f53,f45])).
fof(f45,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f20])).
fof(f20,plain,(
  ! [X0] : s('type.num.num',X0) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X0)))),
  inference(rectify,[],[f9])).
fof(f9,axiom,(
  ! [X7] : s('type.num.num',X7) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X7)))),
  file('thm.arithmetic.LE_MULT_CANCEL_RBARE|split|1','thm.arithmetic.MULT_LEFT_|49|')).
fof(f53,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X1)))))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X1) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X2))))) )),
  inference(cnf_transformation,[],[f36])).
fof(f36,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X1)))))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X1) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X2))))) & ((s('type.num.num','const.num.|48|_0') != s('type.num.num',X1) & ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X2))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X1))))))))),
  inference(flattening,[],[f35])).
fof(f35,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X1)))))) | (s('type.num.num','const.num.|48|_0') = s('type.num.num',X1) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X2)))))) & ((s('type.num.num','const.num.|48|_0') != s('type.num.num',X1) & ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X2))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X1))))))))),
  inference(nnf_transformation,[],[f26])).
fof(f26,plain,(
  ! [X0,X1,X2] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X1)))))) <=> (s('type.num.num','const.num.|48|_0') = s('type.num.num',X1) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X2))))))),
  inference(rectify,[],[f14])).
fof(f14,axiom,(
  ! [X7,X6,X8] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X7),s('type.num.num',X6))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X8),s('type.num.num',X6)))))) <=> (s('type.num.num','const.num.|48|_0') = s('type.num.num',X6) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X7),s('type.num.num',X8))))))),
  file('thm.arithmetic.LE_MULT_CANCEL_RBARE|split|1','thm.arithmetic.LE_MULT_RCANCEL')).
fof(f56,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK1),s('type.num.num',sK0))),s('type.num.num',sK0)))) | $spl0),
  inference(cnf_transformation,[],[f56_D])).
fof(f56_D,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK1),s('type.num.num',sK0))),s('type.num.num',sK0)))) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f60,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num',sK0) | $spl4),
  inference(cnf_transformation,[],[f60_D])).
fof(f60_D,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num',sK0) <=> ~$spl4),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl4])])).
fof(f58,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | $spl2),
  inference(cnf_transformation,[],[f58_D])).
fof(f58_D,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f37,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',sK0) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK1),s('type.num.num',sK0))),s('type.num.num',sK0))))),
  inference(cnf_transformation,[],[f31])).
fof(f83,plain,(
  $false | $spl6),
  inference(resolution,[],[f80,f40])).
fof(f80,plain,(
  ( ! [X2] : (~p(s(bool,X2))) ) | $spl6),
  inference(superposition,[],[f41,f72])).
fof(f72,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0)) ) | $spl6),
  inference(cnf_transformation,[],[f72_D])).
fof(f72_D,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0)) ) <=> ~$spl6),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl6])])).
fof(f74,plain,(
  s(bool,'T_0') != s(bool,'F_0') | $spl9),
  inference(cnf_transformation,[],[f74_D])).
fof(f74_D,plain,(
  s(bool,'T_0') != s(bool,'F_0') <=> ~$spl9),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl9])])).
fof(f71,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,'F_0') = s(bool,X0)) )),
  inference(equality_factoring,[],[f46])).
fof(f553,plain,(
  $false | ($spl9 | $spl10)),
  inference(trivial_inequality_removal,[],[f548])).
fof(f548,plain,(
  s(bool,'T_0') != s(bool,'T_0') | ($spl9 | $spl10)),
  inference(superposition,[],[f74,f473])).
fof(f475,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl12),
  inference(cnf_transformation,[],[f475_D])).
fof(f475_D,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> ~$spl12),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl12])])).
fof(f470,plain,(
  ( ! [X9] : (s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s(bool,'T_0') = s(bool,X9)) ) | $spl3),
  inference(duplicate_literal_removal,[],[f434])).
fof(f434,plain,(
  ( ! [X9] : (s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s(bool,'T_0') = s(bool,X9) | s(bool,'T_0') = s(bool,X9)) ) | $spl3),
  inference(superposition,[],[f250,f46])).
fof(f250,plain,(
  ( ! [X9] : (s(bool,X9) = s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s(bool,'T_0') = s(bool,X9)) ) | $spl3),
  inference(subsumption_resolution,[],[f176,f40])).
fof(f176,plain,(
  ( ! [X9] : (~p(s(bool,'T_0')) | s(bool,X9) = s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s(bool,'T_0') = s(bool,X9)) ) | $spl3),
  inference(superposition,[],[f59,f66])).
fof(f59,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | $spl3),
  inference(cnf_transformation,[],[f59_D])).
fof(f59_D,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) <=> ~$spl3),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl3])])).
fof(f39,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK1),s('type.num.num',sK0))),s('type.num.num',sK0))))),
  inference(cnf_transformation,[],[f31])).
fof(f7550,plain,(
  $false | ($spl1 | $spl2)),
  inference(resolution,[],[f7499,f57])).
fof(f7499,plain,(
  ( ! [X0] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK1),s('type.num.num',X0))),s('type.num.num',X0))))) ) | $spl2),
  inference(forward_demodulation,[],[f7485,f45])).
fof(f7485,plain,(
  ( ! [X0] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK1),s('type.num.num',X0))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X0))))))) ) | $spl2),
  inference(resolution,[],[f58,f55])).
fof(f55,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X2)))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X1))))))) )),
  inference(cnf_transformation,[],[f36])).
% SZS output end Proof for thm.arithmetic
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 128
% Passive clauses: 816
% Generated clauses: 7516
% Final active clauses: 83
% Final passive clauses: 506
% Input formulas: 13
% Initial clauses: 19
% 
% Duplicate literals: 405
% Trivial inequalities: 77
% Fw subsumption resolutions: 548
% Fw demodulations: 1421
% Bw demodulations: 28
% 
% Simple tautologies: 109
% Equational tautologies: 27
% Forward subsumptions: 3876
% Fw demodulations to eq. taut.: 4
% Bw demodulations to eq. taut.: 1
% 
% Binary resolution: 99
% Forward superposition: 3008
% Backward superposition: 1605
% Self superposition: 81
% Equality factoring: 45
% Equality resolution: 3
% 
% Split clauses: 212
% Split components: 426
% SAT solver clauses: 335
% SAT solver unit clauses: 5
% SAT solver binary clauses: 56
% SAT solver learnt clauses: 3
% SAT solver learnt literals: 3
% 
% Sat splits: 212
% Sat splitting refutations: 18
% 
% TWLsolver clauses: 324
% TWLsolver calls for satisfiability: 69
% 
% Memory used [KB]: 4349
% Time elapsed: 0.150 s
% ------------------------------
% ------------------------------
% Success in time 0.152 s
