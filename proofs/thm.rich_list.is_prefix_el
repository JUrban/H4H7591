Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.rich_list
% (23880)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 1215
% Passive clauses: 8614
% Generated clauses: 45249
% Final active clauses: 1152
% Final passive clauses: 6831
% Input formulas: 261
% Initial clauses: 540
% 
% Duplicate literals: 262
% Trivial inequalities: 59
% Fw subsumption resolutions: 2278
% Fw demodulations: 4715
% Bw demodulations: 56
% 
% Simple tautologies: 315
% Equational tautologies: 28
% Forward subsumptions: 28776
% Fw demodulations to eq. taut.: 28
% 
% Binary resolution: 7912
% Factoring: 1318
% Forward superposition: 13244
% Backward superposition: 15259
% Self superposition: 71
% Equality factoring: 2
% Equality resolution: 15
% 
% Split clauses: 438
% Split components: 878
% SAT solver clauses: 671
% SAT solver unit clauses: 19
% SAT solver binary clauses: 95
% 
% Sat splits: 438
% 
% TWLsolver clauses: 671
% TWLsolver calls for satisfiability: 509
% 
% Memory used [KB]: 27504
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 143 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.rich_list
% (23890)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 581
% Passive clauses: 3166
% Generated clauses: 25230
% Final active clauses: 521
% Final passive clauses: 2271
% Input formulas: 261
% Initial clauses: 540
% 
% Duplicate literals: 98
% Trivial inequalities: 38
% Fw subsumption resolutions: 976
% Fw demodulations: 3532
% Bw demodulations: 340
% Condensations: 95
% Global subsumptions: 24
% 
% Simple tautologies: 283
% Equational tautologies: 16
% Forward subsumptions: 13330
% Fw demodulations to eq. taut.: 23
% Bw demodulations to eq. taut.: 6
% 
% Binary resolution: 2219
% Factoring: 132
% Forward superposition: 8347
% Backward superposition: 5576
% Self superposition: 80
% Equality factoring: 2
% Equality resolution: 12
% 
% Split clauses: 40
% Split components: 80
% SAT solver clauses: 4136
% SAT solver unit clauses: 650
% SAT solver binary clauses: 147
% SAT solver learnt clauses: 48
% SAT solver learnt literals: 12
% 
% Sat splits: 40
% Sat splitting refutations: 20
% 
% TWLsolver clauses: 4040
% TWLsolver calls for satisfiability: 3195
% 
% Memory used [KB]: 22643
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 136 next slice time: 103
lrs+11_2_br=off:cond=on:fde=none:gs=on:gsaa=full_model:lwlo=on:nwc=2:sas=minisat:stl=30:ssfp=100000:ssfq=1.4:smm=sco:ssnc=none:sp=occurrence:urr=on_98 on thm.rich_list
% (23903)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 1115
% Passive clauses: 9638
% Generated clauses: 189432
% Final active clauses: 965
% Final passive clauses: 4632
% Input formulas: 261
% Initial clauses: 540
% 
% Duplicate literals: 8
% Trivial inequalities: 26
% Fw subsumption resolutions: 1757
% Fw demodulations: 90885
% Bw demodulations: 2411
% Condensations: 53
% Global subsumptions: 4
% 
% Simple tautologies: 144
% Equational tautologies: 59
% Forward subsumptions: 54463
% Fw demodulations to eq. taut.: 30770
% Bw demodulations to eq. taut.: 50
% 
% Unit resulting resolution: 60700
% Factoring: 1
% Forward superposition: 20917
% Backward superposition: 9718
% Self superposition: 140
% Equality factoring: 2
% Equality resolution: 14
% 
% Split clauses: 42
% Split components: 84
% SAT solver clauses: 11311
% SAT solver unit clauses: 4169
% SAT solver binary clauses: 5314
% 
% Sat splits: 42
% Sat splitting refutations: 1583
% 
% Memory used [KB]: 223749
% Time elapsed: 10.400 s
% ------------------------------
% ------------------------------
% remaining time: 32 next slice time: 32
dis+11_5_fde=none:nwc=1:sas=minisat:sd=1:ss=axioms:st=5.0:sos=all:sdd=large:sser=off:sfr=on:ssfp=100000:ssfq=2.0:ssnc=none_37 on thm.rich_list
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.rich_list
% SZS output start Proof for thm.rich_list
fof(f102953,plain,(
  $false),
  inference(subsumption_resolution,[],[f102802,f726])).
fof(f726,plain,(
  s(sK12,'const.list.EL_2'(s('type.num.num',sK13),s('type.list.list'(sK12),sK14))) != s(sK12,'const.list.EL_2'(s('type.num.num',sK13),s('type.list.list'(sK12),sK15)))),
  inference(cnf_transformation,[],[f541])).
fof(f541,plain,(
  p(s(bool,'const.list.isPREFIX_2'(s('type.list.list'(sK12),sK14),s('type.list.list'(sK12),sK15)))) & p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK13),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK14)))))) & p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK13),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK15)))))) & s(sK12,'const.list.EL_2'(s('type.num.num',sK13),s('type.list.list'(sK12),sK14))) != s(sK12,'const.list.EL_2'(s('type.num.num',sK13),s('type.list.list'(sK12),sK15)))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK12,sK13,sK14,sK15])],[f465])).
fof(f465,plain,(
  ? [X0,X1,X2,X3] : (p(s(bool,'const.list.isPREFIX_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),X3)))) & p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2)))))) & p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3)))))) & s(X0,'const.list.EL_2'(s('type.num.num',X1),s('type.list.list'(X0),X2))) != s(X0,'const.list.EL_2'(s('type.num.num',X1),s('type.list.list'(X0),X3))))),
  inference(flattening,[],[f464])).
fof(f464,plain,(
  ? [X0,X1,X2,X3] : ((p(s(bool,'const.list.isPREFIX_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),X3)))) & p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2)))))) & p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))))))) & s(X0,'const.list.EL_2'(s('type.num.num',X1),s('type.list.list'(X0),X2))) != s(X0,'const.list.EL_2'(s('type.num.num',X1),s('type.list.list'(X0),X3))))),
  inference(ennf_transformation,[],[f264])).
fof(f264,plain,(
  ~! [X0,X1,X2,X3] : ((p(s(bool,'const.list.isPREFIX_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),X3)))) & p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2)))))) & p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))))))) => s(X0,'const.list.EL_2'(s('type.num.num',X1),s('type.list.list'(X0),X2))) = s(X0,'const.list.EL_2'(s('type.num.num',X1),s('type.list.list'(X0),X3))))),
  inference(flattening,[],[f263])).
fof(f263,plain,(
  ~! [X0] : ! [X1,X2,X3] : ((p(s(bool,'const.list.isPREFIX_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),X3)))) & p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2)))))) & p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))))))) => s(X0,'const.list.EL_2'(s('type.num.num',X1),s('type.list.list'(X0),X2))) = s(X0,'const.list.EL_2'(s('type.num.num',X1),s('type.list.list'(X0),X3))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : ! [X7,X8,X9] : ((p(s(bool,'const.list.isPREFIX_2'(s('type.list.list'(X6),X8),s('type.list.list'(X6),X9)))) & p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X7),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X8)))))) & p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X7),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X9))))))) => s(X6,'const.list.EL_2'(s('type.num.num',X7),s('type.list.list'(X6),X8))) = s(X6,'const.list.EL_2'(s('type.num.num',X7),s('type.list.list'(X6),X9))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : ! [X7,X8,X9] : ((p(s(bool,'const.list.isPREFIX_2'(s('type.list.list'(X6),X8),s('type.list.list'(X6),X9)))) & p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X7),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X8)))))) & p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X7),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X9))))))) => s(X6,'const.list.EL_2'(s('type.num.num',X7),s('type.list.list'(X6),X8))) = s(X6,'const.list.EL_2'(s('type.num.num',X7),s('type.list.list'(X6),X9))))),
  file('thm.rich_list.is_prefix_el','thm.rich_list.is_prefix_el')).
fof(f102802,plain,(
  s(sK12,'const.list.EL_2'(s('type.num.num',sK13),s('type.list.list'(sK12),sK14))) = s(sK12,'const.list.EL_2'(s('type.num.num',sK13),s('type.list.list'(sK12),sK15)))),
  inference(superposition,[],[f1307,f1113])).
fof(f1113,plain,(
  s('type.list.list'(sK12),sK15) = s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK14),s('type.list.list'(sK12),sK50(sK14,sK15,sK12))))),
  inference(resolution,[],[f723,f1089])).
fof(f1089,plain,(
  ( ! [X2,X0,X1] : (s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),sK50(X2,X1,X0)))) | ~p(s(bool,'const.list.isPREFIX_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),X1))))) )),
  inference(cnf_transformation,[],[f719])).
fof(f719,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,'const.list.isPREFIX_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),X1)))) | s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),sK50(X2,X1,X0))))) & (! [X3] : s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),X3))) | p(s(bool,'const.list.isPREFIX_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),X1))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK50])],[f718])).
fof(f718,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,'const.list.isPREFIX_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),X1)))) | ? [X4] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),X4)))) & (! [X3] : s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),X3))) | p(s(bool,'const.list.isPREFIX_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),X1))))))),
  inference(rectify,[],[f717])).
fof(f717,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,'const.list.isPREFIX_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),X1)))) | ? [X3] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),X3)))) & (! [X3] : s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),X3))) | p(s(bool,'const.list.isPREFIX_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),X1))))))),
  inference(nnf_transformation,[],[f443])).
fof(f443,plain,(
  ! [X0,X1,X2] : (p(s(bool,'const.list.isPREFIX_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),X1)))) <=> ? [X3] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),X3))))),
  inference(flattening,[],[f442])).
fof(f442,plain,(
  ! [X0] : ! [X1,X2] : (p(s(bool,'const.list.isPREFIX_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),X1)))) <=> ? [X3] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),X3))))),
  inference(rectify,[],[f19])).
fof(f19,axiom,(
  ! [X6] : ! [X8,X9] : (p(s(bool,'const.list.isPREFIX_2'(s('type.list.list'(X6),X9),s('type.list.list'(X6),X8)))) <=> ? [X11] : s('type.list.list'(X6),X8) = s('type.list.list'(X6),'const.list.APPEND_2'(s('type.list.list'(X6),X9),s('type.list.list'(X6),X11))))),
  file('thm.rich_list.is_prefix_el','thm.rich_list.IS_PREFIX_APPEND')).
fof(f723,plain,(
  p(s(bool,'const.list.isPREFIX_2'(s('type.list.list'(sK12),sK14),s('type.list.list'(sK12),sK15))))),
  inference(cnf_transformation,[],[f541])).
fof(f1307,plain,(
  ( ! [X8] : (s(sK12,'const.list.EL_2'(s('type.num.num',sK13),s('type.list.list'(sK12),sK14))) = s(sK12,'const.list.EL_2'(s('type.num.num',sK13),s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK14),s('type.list.list'(sK12),X8)))))) )),
  inference(resolution,[],[f724,f771])).
fof(f771,plain,(
  ( ! [X2,X0,X3,X1] : (s(X0,'const.list.EL_2'(s('type.num.num',X1),s('type.list.list'(X0),X2))) = s(X0,'const.list.EL_2'(s('type.num.num',X1),s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),X3))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))))))) )),
  inference(cnf_transformation,[],[f474])).
fof(f474,plain,(
  ! [X0,X1,X2,X3] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2)))))) | s(X0,'const.list.EL_2'(s('type.num.num',X1),s('type.list.list'(X0),X2))) = s(X0,'const.list.EL_2'(s('type.num.num',X1),s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),X3))))))),
  inference(ennf_transformation,[],[f282])).
fof(f282,plain,(
  ! [X0,X1,X2,X3] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2)))))) => s(X0,'const.list.EL_2'(s('type.num.num',X1),s('type.list.list'(X0),X2))) = s(X0,'const.list.EL_2'(s('type.num.num',X1),s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),X3))))))),
  inference(flattening,[],[f281])).
fof(f281,plain,(
  ! [X0] : ! [X1,X2,X3] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2)))))) => s(X0,'const.list.EL_2'(s('type.num.num',X1),s('type.list.list'(X0),X2))) = s(X0,'const.list.EL_2'(s('type.num.num',X1),s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),X3))))))),
  inference(rectify,[],[f43])).
fof(f43,axiom,(
  ! [X6] : ! [X7,X8,X9] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X7),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X8)))))) => s(X6,'const.list.EL_2'(s('type.num.num',X7),s('type.list.list'(X6),X8))) = s(X6,'const.list.EL_2'(s('type.num.num',X7),s('type.list.list'(X6),'const.list.APPEND_2'(s('type.list.list'(X6),X8),s('type.list.list'(X6),X9))))))),
  file('thm.rich_list.is_prefix_el','thm.rich_list.EL_APPEND|49|')).
fof(f724,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK13),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK14))))))),
  inference(cnf_transformation,[],[f541])).
% SZS output end Proof for thm.rich_list
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 1166
% Passive clauses: 45303
% Generated clauses: 102656
% Final active clauses: 881
% Final passive clauses: 33870
% Input formulas: 261
% Initial clauses: 381
% 
% Selected by SInE selection: 130
% SInE iterations: 1
% 
% Duplicate literals: 988
% Trivial inequalities: 179
% Fw subsumption resolutions: 5337
% Fw demodulations: 18693
% Bw demodulations: 60
% 
% Simple tautologies: 2116
% Equational tautologies: 3
% Forward subsumptions: 29516
% Fw demodulations to eq. taut.: 2
% 
% Binary resolution: 12632
% Forward superposition: 48569
% Backward superposition: 14897
% Self superposition: 8
% Equality resolution: 18
% 
% Split clauses: 978
% Split components: 2010
% SAT solver clauses: 1049
% SAT solver unit clauses: 32
% SAT solver binary clauses: 380
% 
% Sat splits: 978
% Sat splitting refutations: 68
% 
% Memory used [KB]: 43368
% Time elapsed: 2.927 s
% ------------------------------
% ------------------------------
% Success in time 14.7 s
