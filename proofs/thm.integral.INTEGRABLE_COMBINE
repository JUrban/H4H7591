Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 299 next slice time: 5
dis+11_7_3 on thm.integral
% (55856)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 643
% Passive clauses: 11223
% Generated clauses: 19566
% Final active clauses: 639
% Final passive clauses: 10196
% Input formulas: 42
% Initial clauses: 187
% 
% Duplicate literals: 306
% Trivial inequalities: 13
% Fw subsumption resolutions: 1553
% Fw demodulations: 159
% Bw demodulations: 4
% 
% Simple tautologies: 233
% Equational tautologies: 58
% Forward subsumptions: 5641
% 
% Binary resolution: 13170
% Factoring: 1048
% Forward superposition: 1898
% Backward superposition: 1024
% Self superposition: 22
% Equality factoring: 26
% Equality resolution: 4
% 
% Split clauses: 333
% Split components: 672
% SAT solver clauses: 703
% SAT solver unit clauses: 20
% SAT solver binary clauses: 193
% 
% Sat splits: 333
% 
% TWLsolver clauses: 703
% TWLsolver calls for satisfiability: 438
% 
% Memory used [KB]: 9083
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 293 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.integral
% (55878)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 384
% Passive clauses: 2652
% Generated clauses: 11420
% Final active clauses: 373
% Final passive clauses: 2234
% Input formulas: 42
% Initial clauses: 187
% 
% Duplicate literals: 220
% Trivial inequalities: 23
% Fw subsumption resolutions: 899
% Fw demodulations: 445
% Bw demodulations: 41
% Condensations: 442
% Global subsumptions: 13
% 
% Simple tautologies: 254
% Equational tautologies: 19
% Forward subsumptions: 3366
% 
% Binary resolution: 3744
% Factoring: 207
% Forward superposition: 1585
% Backward superposition: 891
% Self superposition: 26
% Equality factoring: 30
% Equality resolution: 7
% 
% Split clauses: 36
% Split components: 72
% SAT solver clauses: 3211
% SAT solver unit clauses: 185
% SAT solver binary clauses: 97
% SAT solver learnt clauses: 26
% SAT solver learnt literals: 10
% 
% Sat splits: 36
% Sat splitting refutations: 3
% 
% TWLsolver clauses: 3159
% TWLsolver calls for satisfiability: 1724
% 
% Memory used [KB]: 12792
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 286 next slice time: 103
lrs+11_2_br=off:cond=on:fde=none:gs=on:gsaa=full_model:lwlo=on:nwc=2:sas=minisat:stl=30:ssfp=100000:ssfq=1.4:smm=sco:ssnc=none:sp=occurrence:urr=on_98 on thm.integral
% (55931)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 2636
% Passive clauses: 8056
% Generated clauses: 152072
% Final active clauses: 954
% Final passive clauses: 1405
% Input formulas: 42
% Initial clauses: 187
% 
% Duplicate literals: 7893
% Trivial inequalities: 331
% Fw subsumption resolutions: 7161
% Fw demodulations: 16860
% Bw demodulations: 2299
% Condensations: 14489
% Global subsumptions: 1594
% 
% Simple tautologies: 337
% Equational tautologies: 1751
% Forward subsumptions: 91112
% Bw demodulations to eq. taut.: 141
% 
% Unit resulting resolution: 30621
% Factoring: 1
% Forward superposition: 45898
% Backward superposition: 14669
% Self superposition: 213
% Equality factoring: 170
% Equality resolution: 15
% 
% Split clauses: 420
% Split components: 847
% SAT solver clauses: 12661
% SAT solver unit clauses: 1442
% SAT solver binary clauses: 3048
% 
% Sat splits: 420
% Sat splitting refutations: 2169
% 
% Memory used [KB]: 84945
% Time elapsed: 10.400 s
% ------------------------------
% ------------------------------
% remaining time: 182 next slice time: 39
dis+11_5_fde=none:nwc=1:sas=minisat:sd=1:ss=axioms:st=5.0:sos=all:sdd=large:sser=off:sfr=on:ssfp=100000:ssfq=2.0:ssnc=none_37 on thm.integral
% (56198)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 2702
% Passive clauses: 43137
% Generated clauses: 220648
% Final active clauses: 2644
% Final passive clauses: 38224
% Input formulas: 42
% Initial clauses: 186
% 
% Selected by SInE selection: 41
% SInE iterations: 1
% 
% Duplicate literals: 5980
% Trivial inequalities: 474
% Fw subsumption resolutions: 24932
% Fw demodulations: 7349
% Bw demodulations: 45
% 
% Simple tautologies: 6227
% Equational tautologies: 342
% Forward subsumptions: 118231
% 
% Binary resolution: 169003
% Factoring: 553
% Forward superposition: 7388
% Backward superposition: 3361
% Self superposition: 4
% Equality factoring: 2
% Equality resolution: 24
% 
% Split clauses: 15905
% Split components: 38260
% SAT solver clauses: 17129
% SAT solver unit clauses: 46
% SAT solver binary clauses: 343
% 
% Sat splits: 15905
% Sat splitting refutations: 59
% 
% Memory used [KB]: 62813
% Time elapsed: 4.0000 s
% ------------------------------
% ------------------------------
% remaining time: 142 next slice time: 6
lrs+1002_2:3_br=off:fde=unused:gs=on:gsaa=from_current:gsem=on:gsssp=full:nwc=1:sas=minisat:stl=30:sac=on:sser=off:sfr=on:ssfp=100000:ssfq=2.0:ssnc=none:sp=reverse_arity:urr=on_4 on thm.integral
% (56352)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 425
% Passive clauses: 2751
% Generated clauses: 17769
% Final active clauses: 418
% Final passive clauses: 2177
% Input formulas: 42
% Initial clauses: 187
% 
% Duplicate literals: 536
% Trivial inequalities: 219
% Fw subsumption resolutions: 2096
% Fw demodulations: 414
% Bw demodulations: 5
% Global subsumptions: 16
% 
% Simple tautologies: 584
% Equational tautologies: 45
% Forward subsumptions: 10343
% 
% Unit resulting resolution: 5393
% Factoring: 18
% Forward superposition: 4482
% Backward superposition: 4252
% Self superposition: 82
% Equality factoring: 6
% Equality resolution: 21
% 
% Split clauses: 19
% Split components: 38
% SAT solver clauses: 3323
% SAT solver unit clauses: 898
% SAT solver binary clauses: 235
% 
% Sat splits: 19
% Sat splitting refutations: 535
% 
% Memory used [KB]: 8187
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 135 next slice time: 15
lrs+1011_12_bs=on:bsr=unit_only:cond=on:gs=on:gsaa=from_current:gsssp=full:nwc=1.1:sas=minisat:stl=60:sos=all:sac=on:sdd=off:sser=off:sfr=on:ssfp=100000:ssfq=1.2:ssnc=none:sp=reverse_arity:updr=off_14 on thm.integral
% (56364)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 1092
% Passive clauses: 5906
% Generated clauses: 20637
% Final active clauses: 699
% Final passive clauses: 4223
% Input formulas: 42
% Initial clauses: 187
% 
% Duplicate literals: 1032
% Trivial inequalities: 62
% Fw subsumption resolutions: 1363
% Bw subsumption resolutions: 303
% Fw demodulations: 1206
% Bw demodulations: 45
% Condensations: 1776
% Global subsumptions: 6
% 
% Simple tautologies: 1592
% Equational tautologies: 41
% Forward subsumptions: 7388
% Backward subsumptions: 748
% 
% Binary resolution: 9503
% Factoring: 42
% Forward superposition: 1793
% Backward superposition: 2553
% Self superposition: 42
% Equality factoring: 4
% Equality resolution: 13
% 
% Split clauses: 1
% Split components: 2
% SAT solver clauses: 6024
% SAT solver unit clauses: 329
% SAT solver binary clauses: 825
% 
% Sat splits: 1
% Sat splitting refutations: 109
% 
% Memory used [KB]: 10106
% Time elapsed: 1.600 s
% ------------------------------
% ------------------------------
% remaining time: 119 next slice time: 9
lrs+10_8:1_bd=preordered:bs=on:ccuc=first:fsr=off:fde=unused:gs=on:gsaa=from_current:gsem=on:gsssp=full:nwc=1:nicw=on:sas=minisat:stl=120:sos=on:sscc=on:sser=off:sfr=on:ssfp=4000:ssfq=1.0:ssnc=none:sp=reverse_arity:urr=on_7 on thm.integral
% (56415)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 1004
% Passive clauses: 3332
% Generated clauses: 28348
% Final active clauses: 732
% Final passive clauses: 784
% Input formulas: 42
% Initial clauses: 187
% 
% Duplicate literals: 434
% Trivial inequalities: 212
% Fw demodulations: 3665
% Bw demodulations: 32
% Global subsumptions: 364
% 
% Simple tautologies: 828
% Equational tautologies: 672
% Forward subsumptions: 14787
% Backward subsumptions: 1910
% 
% Binary resolution: 7988
% Unit resulting resolution: 11337
% Factoring: 9
% Forward superposition: 356
% Backward superposition: 2200
% Self superposition: 24
% Equality factoring: 26
% Equality resolution: 18
% 
% Split clauses: 111
% Split components: 222
% SAT solver clauses: 7158
% SAT solver unit clauses: 36
% SAT solver binary clauses: 3289
% 
% Sat splits: 111
% Sat splitting refutations: 501
% 
% Memory used [KB]: 16247
% Time elapsed: 1.0000 s
% ------------------------------
% ------------------------------
% remaining time: 109 next slice time: 85
lrs+1_5:4_cond=on:fsr=off:fde=none:gs=on:gsem=on:lwlo=on:nm=64:nwc=1:stl=60:sos=all:spl=off_80 on thm.integral
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.integral
% SZS output start Proof for thm.integral
fof(f146703,plain,(
  $false),
  inference(trivial_inequality_removal,[],[f146553])).
fof(f146553,plain,(
  s(bool,'F_0') != s(bool,'F_0')),
  inference(resolution,[],[f146000,f226])).
fof(f226,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'F_0') != s(bool,X0)) )),
  inference(cnf_transformation,[],[f143])).
fof(f143,plain,(
  ! [X0] : ((s(bool,'F_0') != s(bool,X0) | ~p(s(bool,X0))) & (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f61])).
fof(f61,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(flattening,[],[f60])).
fof(f60,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(rectify,[],[f22])).
fof(f22,axiom,(
  ! [X12] : (s(bool,'F_0') = s(bool,X12) <=> ~p(s(bool,X12)))),
  file('thm.integral.INTEGRABLE_COMBINE','thm.bool.EQ_CLAUSES|split|2')).
fof(f146000,plain,(
  p(s(bool,'F_0'))),
  inference(resolution,[],[f145999,f204])).
fof(f204,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f7])).
fof(f7,axiom,(
  p(s(bool,'T_0'))),
  file('thm.integral.INTEGRABLE_COMBINE','thm.bool.TRUTH')).
fof(f145999,plain,(
  ~p(s(bool,'T_0')) | p(s(bool,'F_0'))),
  inference(duplicate_literal_removal,[],[f145998])).
fof(f145998,plain,(
  ~p(s(bool,'T_0')) | p(s(bool,'F_0')) | ~p(s(bool,'T_0'))),
  inference(forward_demodulation,[],[f145848,f907])).
fof(f907,plain,(
  s(bool,'T_0') = s(bool,'const.integral.integrable_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',sK2),s('type.realax.real',sK3))),s(fun('type.realax.real','type.realax.real'),sK1)))),
  inference(resolution,[],[f201,f221])).
fof(f221,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f140])).
fof(f140,plain,(
  ! [X0] : ((s(bool,'T_0') != s(bool,X0) | p(s(bool,X0))) & (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f56])).
fof(f56,plain,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) <=> p(s(bool,X0)))),
  inference(rectify,[],[f21])).
fof(f21,axiom,(
  ! [X12] : (s(bool,'T_0') = s(bool,X12) <=> p(s(bool,X12)))),
  file('thm.integral.INTEGRABLE_COMBINE','thm.bool.EQ_CLAUSES|split|1')).
fof(f201,plain,(
  p(s(bool,'const.integral.integrable_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',sK2),s('type.realax.real',sK3))),s(fun('type.realax.real','type.realax.real'),sK1))))),
  inference(cnf_transformation,[],[f137])).
fof(f137,plain,(
  p(s(bool,'const.real.real_lte_2'(s('type.realax.real',sK2),s('type.realax.real',sK3)))) & p(s(bool,'const.real.real_lte_2'(s('type.realax.real',sK3),s('type.realax.real',sK4)))) & p(s(bool,'const.integral.integrable_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',sK2),s('type.realax.real',sK3))),s(fun('type.realax.real','type.realax.real'),sK1)))) & p(s(bool,'const.integral.integrable_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',sK3),s('type.realax.real',sK4))),s(fun('type.realax.real','type.realax.real'),sK1)))) & ~p(s(bool,'const.integral.integrable_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',sK2),s('type.realax.real',sK4))),s(fun('type.realax.real','type.realax.real'),sK1))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK1,sK2,sK3,sK4])],[f108])).
fof(f108,plain,(
  ? [X0,X1,X2,X3] : (p(s(bool,'const.real.real_lte_2'(s('type.realax.real',X1),s('type.realax.real',X2)))) & p(s(bool,'const.real.real_lte_2'(s('type.realax.real',X2),s('type.realax.real',X3)))) & p(s(bool,'const.integral.integrable_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X1),s('type.realax.real',X2))),s(fun('type.realax.real','type.realax.real'),X0)))) & p(s(bool,'const.integral.integrable_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X2),s('type.realax.real',X3))),s(fun('type.realax.real','type.realax.real'),X0)))) & ~p(s(bool,'const.integral.integrable_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X1),s('type.realax.real',X3))),s(fun('type.realax.real','type.realax.real'),X0)))))),
  inference(flattening,[],[f107])).
fof(f107,plain,(
  ? [X0,X1,X2,X3] : ((p(s(bool,'const.real.real_lte_2'(s('type.realax.real',X1),s('type.realax.real',X2)))) & p(s(bool,'const.real.real_lte_2'(s('type.realax.real',X2),s('type.realax.real',X3)))) & p(s(bool,'const.integral.integrable_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X1),s('type.realax.real',X2))),s(fun('type.realax.real','type.realax.real'),X0)))) & p(s(bool,'const.integral.integrable_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X2),s('type.realax.real',X3))),s(fun('type.realax.real','type.realax.real'),X0))))) & ~p(s(bool,'const.integral.integrable_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X1),s('type.realax.real',X3))),s(fun('type.realax.real','type.realax.real'),X0)))))),
  inference(ennf_transformation,[],[f44])).
fof(f44,plain,(
  ~! [X0,X1,X2,X3] : ((p(s(bool,'const.real.real_lte_2'(s('type.realax.real',X1),s('type.realax.real',X2)))) & p(s(bool,'const.real.real_lte_2'(s('type.realax.real',X2),s('type.realax.real',X3)))) & p(s(bool,'const.integral.integrable_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X1),s('type.realax.real',X2))),s(fun('type.realax.real','type.realax.real'),X0)))) & p(s(bool,'const.integral.integrable_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X2),s('type.realax.real',X3))),s(fun('type.realax.real','type.realax.real'),X0))))) => p(s(bool,'const.integral.integrable_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X1),s('type.realax.real',X3))),s(fun('type.realax.real','type.realax.real'),X0)))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7,X8,X9] : ((p(s(bool,'const.real.real_lte_2'(s('type.realax.real',X7),s('type.realax.real',X8)))) & p(s(bool,'const.real.real_lte_2'(s('type.realax.real',X8),s('type.realax.real',X9)))) & p(s(bool,'const.integral.integrable_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X7),s('type.realax.real',X8))),s(fun('type.realax.real','type.realax.real'),X6)))) & p(s(bool,'const.integral.integrable_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X8),s('type.realax.real',X9))),s(fun('type.realax.real','type.realax.real'),X6))))) => p(s(bool,'const.integral.integrable_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X7),s('type.realax.real',X9))),s(fun('type.realax.real','type.realax.real'),X6)))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7,X8,X9] : ((p(s(bool,'const.real.real_lte_2'(s('type.realax.real',X7),s('type.realax.real',X8)))) & p(s(bool,'const.real.real_lte_2'(s('type.realax.real',X8),s('type.realax.real',X9)))) & p(s(bool,'const.integral.integrable_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X7),s('type.realax.real',X8))),s(fun('type.realax.real','type.realax.real'),X6)))) & p(s(bool,'const.integral.integrable_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X8),s('type.realax.real',X9))),s(fun('type.realax.real','type.realax.real'),X6))))) => p(s(bool,'const.integral.integrable_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X7),s('type.realax.real',X9))),s(fun('type.realax.real','type.realax.real'),X6)))))),
  file('thm.integral.INTEGRABLE_COMBINE','thm.integral.INTEGRABLE_COMBINE')).
fof(f145848,plain,(
  p(s(bool,'F_0')) | ~p(s(bool,'T_0')) | ~p(s(bool,'const.integral.integrable_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',sK2),s('type.realax.real',sK3))),s(fun('type.realax.real','type.realax.real'),sK1))))),
  inference(resolution,[],[f10406,f305])).
fof(f305,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,'const.transc.Dint_3'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X0),s('type.realax.real',X1))),s(fun('type.realax.real','type.realax.real'),X2),s('type.realax.real',sK14(X2,X1,X0))))) | ~p(s(bool,'const.integral.integrable_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X0),s('type.realax.real',X1))),s(fun('type.realax.real','type.realax.real'),X2))))) )),
  inference(cnf_transformation,[],[f186])).
fof(f186,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,'const.integral.integrable_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X0),s('type.realax.real',X1))),s(fun('type.realax.real','type.realax.real'),X2)))) | p(s(bool,'const.transc.Dint_3'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X0),s('type.realax.real',X1))),s(fun('type.realax.real','type.realax.real'),X2),s('type.realax.real',sK14(X2,X1,X0)))))) & (! [X3] : ~p(s(bool,'const.transc.Dint_3'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X0),s('type.realax.real',X1))),s(fun('type.realax.real','type.realax.real'),X2),s('type.realax.real',X3)))) | p(s(bool,'const.integral.integrable_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X0),s('type.realax.real',X1))),s(fun('type.realax.real','type.realax.real'),X2))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK14])],[f185])).
fof(f185,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,'const.integral.integrable_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X0),s('type.realax.real',X1))),s(fun('type.realax.real','type.realax.real'),X2)))) | ? [X4] : p(s(bool,'const.transc.Dint_3'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X0),s('type.realax.real',X1))),s(fun('type.realax.real','type.realax.real'),X2),s('type.realax.real',X4))))) & (! [X3] : ~p(s(bool,'const.transc.Dint_3'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X0),s('type.realax.real',X1))),s(fun('type.realax.real','type.realax.real'),X2),s('type.realax.real',X3)))) | p(s(bool,'const.integral.integrable_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X0),s('type.realax.real',X1))),s(fun('type.realax.real','type.realax.real'),X2))))))),
  inference(rectify,[],[f184])).
fof(f184,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,'const.integral.integrable_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X0),s('type.realax.real',X1))),s(fun('type.realax.real','type.realax.real'),X2)))) | ? [X3] : p(s(bool,'const.transc.Dint_3'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X0),s('type.realax.real',X1))),s(fun('type.realax.real','type.realax.real'),X2),s('type.realax.real',X3))))) & (! [X3] : ~p(s(bool,'const.transc.Dint_3'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X0),s('type.realax.real',X1))),s(fun('type.realax.real','type.realax.real'),X2),s('type.realax.real',X3)))) | p(s(bool,'const.integral.integrable_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X0),s('type.realax.real',X1))),s(fun('type.realax.real','type.realax.real'),X2))))))),
  inference(nnf_transformation,[],[f96])).
fof(f96,plain,(
  ! [X0,X1,X2] : (p(s(bool,'const.integral.integrable_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X0),s('type.realax.real',X1))),s(fun('type.realax.real','type.realax.real'),X2)))) <=> ? [X3] : p(s(bool,'const.transc.Dint_3'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X0),s('type.realax.real',X1))),s(fun('type.realax.real','type.realax.real'),X2),s('type.realax.real',X3)))))),
  inference(rectify,[],[f32])).
fof(f32,axiom,(
  ! [X7,X8,X6] : (p(s(bool,'const.integral.integrable_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X7),s('type.realax.real',X8))),s(fun('type.realax.real','type.realax.real'),X6)))) <=> ? [X20] : p(s(bool,'const.transc.Dint_3'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X7),s('type.realax.real',X8))),s(fun('type.realax.real','type.realax.real'),X6),s('type.realax.real',X20)))))),
  file('thm.integral.INTEGRABLE_COMBINE','thm.integral.integrable_def')).
fof(f10406,plain,(
  ( ! [X0] : (~p(s(bool,'const.transc.Dint_3'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',sK2),s('type.realax.real',sK3))),s(fun('type.realax.real','type.realax.real'),sK1),s('type.realax.real',X0)))) | p(s(bool,'F_0')) | ~p(s(bool,'T_0'))) )),
  inference(duplicate_literal_removal,[],[f10405])).
fof(f10405,plain,(
  ( ! [X0] : (~p(s(bool,'T_0')) | p(s(bool,'F_0')) | ~p(s(bool,'T_0')) | ~p(s(bool,'const.transc.Dint_3'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',sK2),s('type.realax.real',sK3))),s(fun('type.realax.real','type.realax.real'),sK1),s('type.realax.real',X0))))) )),
  inference(forward_demodulation,[],[f10404,f799])).
fof(f799,plain,(
  s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real',sK3),s('type.realax.real',sK4)))),
  inference(resolution,[],[f200,f221])).
fof(f200,plain,(
  p(s(bool,'const.real.real_lte_2'(s('type.realax.real',sK3),s('type.realax.real',sK4))))),
  inference(cnf_transformation,[],[f137])).
fof(f10404,plain,(
  ( ! [X0] : (p(s(bool,'F_0')) | ~p(s(bool,'T_0')) | ~p(s(bool,'const.transc.Dint_3'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',sK2),s('type.realax.real',sK3))),s(fun('type.realax.real','type.realax.real'),sK1),s('type.realax.real',X0)))) | ~p(s(bool,'const.real.real_lte_2'(s('type.realax.real',sK3),s('type.realax.real',sK4))))) )),
  inference(forward_demodulation,[],[f10189,f2833])).
fof(f2833,plain,(
  ( ! [X5] : (s(bool,'F_0') = s(bool,'const.transc.Dint_3'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',sK2),s('type.realax.real',sK4))),s(fun('type.realax.real','type.realax.real'),sK1),s('type.realax.real',X5)))) )),
  inference(resolution,[],[f1148,f225])).
fof(f225,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f142])).
fof(f142,plain,(
  ! [X0] : ((s(bool,'F_0') != s(bool,X0) | ~p(s(bool,X0))) & (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f59])).
fof(f59,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(flattening,[],[f58])).
fof(f58,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(rectify,[],[f23])).
fof(f23,axiom,(
  ! [X12] : (s(bool,'F_0') = s(bool,X12) <=> ~p(s(bool,X12)))),
  file('thm.integral.INTEGRABLE_COMBINE','thm.bool.EQ_CLAUSES|split|3')).
fof(f1148,plain,(
  ( ! [X0] : (~p(s(bool,'const.transc.Dint_3'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',sK2),s('type.realax.real',sK4))),s(fun('type.realax.real','type.realax.real'),sK1),s('type.realax.real',X0))))) )),
  inference(resolution,[],[f203,f306])).
fof(f306,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,'const.integral.integrable_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X0),s('type.realax.real',X1))),s(fun('type.realax.real','type.realax.real'),X2)))) | ~p(s(bool,'const.transc.Dint_3'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X0),s('type.realax.real',X1))),s(fun('type.realax.real','type.realax.real'),X2),s('type.realax.real',X3))))) )),
  inference(cnf_transformation,[],[f186])).
fof(f203,plain,(
  ~p(s(bool,'const.integral.integrable_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',sK2),s('type.realax.real',sK4))),s(fun('type.realax.real','type.realax.real'),sK1))))),
  inference(cnf_transformation,[],[f137])).
fof(f10189,plain,(
  ( ! [X0] : (~p(s(bool,'T_0')) | p(s(bool,'const.transc.Dint_3'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',sK2),s('type.realax.real',sK4))),s(fun('type.realax.real','type.realax.real'),sK1),s('type.realax.real','const.realax.real_add_2'(s('type.realax.real',X0),s('type.realax.real',sK14(sK1,sK4,sK3))))))) | ~p(s(bool,'const.transc.Dint_3'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',sK2),s('type.realax.real',sK3))),s(fun('type.realax.real','type.realax.real'),sK1),s('type.realax.real',X0)))) | ~p(s(bool,'const.real.real_lte_2'(s('type.realax.real',sK3),s('type.realax.real',sK4))))) )),
  inference(superposition,[],[f687,f3539])).
fof(f3539,plain,(
  s(bool,'T_0') = s(bool,'const.transc.Dint_3'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',sK3),s('type.realax.real',sK4))),s(fun('type.realax.real','type.realax.real'),sK1),s('type.realax.real',sK14(sK1,sK4,sK3))))),
  inference(resolution,[],[f1027,f221])).
fof(f1027,plain,(
  p(s(bool,'const.transc.Dint_3'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',sK3),s('type.realax.real',sK4))),s(fun('type.realax.real','type.realax.real'),sK1),s('type.realax.real',sK14(sK1,sK4,sK3)))))),
  inference(resolution,[],[f202,f305])).
fof(f202,plain,(
  p(s(bool,'const.integral.integrable_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',sK3),s('type.realax.real',sK4))),s(fun('type.realax.real','type.realax.real'),sK1))))),
  inference(cnf_transformation,[],[f137])).
fof(f687,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,'const.transc.Dint_3'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',sK3),s('type.realax.real',X0))),s(fun('type.realax.real','type.realax.real'),X1),s('type.realax.real',X3)))) | p(s(bool,'const.transc.Dint_3'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',sK2),s('type.realax.real',X0))),s(fun('type.realax.real','type.realax.real'),X1),s('type.realax.real','const.realax.real_add_2'(s('type.realax.real',X2),s('type.realax.real',X3)))))) | ~p(s(bool,'const.transc.Dint_3'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',sK2),s('type.realax.real',sK3))),s(fun('type.realax.real','type.realax.real'),X1),s('type.realax.real',X2)))) | ~p(s(bool,'const.real.real_lte_2'(s('type.realax.real',sK3),s('type.realax.real',X0))))) )),
  inference(resolution,[],[f199,f514])).
fof(f514,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (p(s(bool,'const.transc.Dint_3'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X1),s('type.realax.real',X3))),s(fun('type.realax.real','type.realax.real'),X0),s('type.realax.real','const.realax.real_add_2'(s('type.realax.real',X4),s('type.realax.real',X5)))))) | ~p(s(bool,'const.transc.Dint_3'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X2),s('type.realax.real',X3))),s(fun('type.realax.real','type.realax.real'),X0),s('type.realax.real',X5)))) | ~p(s(bool,'const.transc.Dint_3'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X1),s('type.realax.real',X2))),s(fun('type.realax.real','type.realax.real'),X0),s('type.realax.real',X4)))) | ~p(s(bool,'const.real.real_lte_2'(s('type.realax.real',X2),s('type.realax.real',X3)))) | ~p(s(bool,'const.real.real_lte_2'(s('type.realax.real',X1),s('type.realax.real',X2))))) )),
  inference(cnf_transformation,[],[f134])).
fof(f134,plain,(
  ! [X0,X1,X2,X3,X4,X5] : (~p(s(bool,'const.real.real_lte_2'(s('type.realax.real',X1),s('type.realax.real',X2)))) | ~p(s(bool,'const.real.real_lte_2'(s('type.realax.real',X2),s('type.realax.real',X3)))) | ~p(s(bool,'const.transc.Dint_3'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X1),s('type.realax.real',X2))),s(fun('type.realax.real','type.realax.real'),X0),s('type.realax.real',X4)))) | ~p(s(bool,'const.transc.Dint_3'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X2),s('type.realax.real',X3))),s(fun('type.realax.real','type.realax.real'),X0),s('type.realax.real',X5)))) | p(s(bool,'const.transc.Dint_3'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X1),s('type.realax.real',X3))),s(fun('type.realax.real','type.realax.real'),X0),s('type.realax.real','const.realax.real_add_2'(s('type.realax.real',X4),s('type.realax.real',X5)))))))),
  inference(flattening,[],[f133])).
fof(f133,plain,(
  ! [X0,X1,X2,X3,X4,X5] : ((~p(s(bool,'const.real.real_lte_2'(s('type.realax.real',X1),s('type.realax.real',X2)))) | ~p(s(bool,'const.real.real_lte_2'(s('type.realax.real',X2),s('type.realax.real',X3)))) | ~p(s(bool,'const.transc.Dint_3'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X1),s('type.realax.real',X2))),s(fun('type.realax.real','type.realax.real'),X0),s('type.realax.real',X4)))) | ~p(s(bool,'const.transc.Dint_3'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X2),s('type.realax.real',X3))),s(fun('type.realax.real','type.realax.real'),X0),s('type.realax.real',X5))))) | p(s(bool,'const.transc.Dint_3'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X1),s('type.realax.real',X3))),s(fun('type.realax.real','type.realax.real'),X0),s('type.realax.real','const.realax.real_add_2'(s('type.realax.real',X4),s('type.realax.real',X5)))))))),
  inference(ennf_transformation,[],[f106])).
fof(f106,plain,(
  ! [X0,X1,X2,X3,X4,X5] : ((p(s(bool,'const.real.real_lte_2'(s('type.realax.real',X1),s('type.realax.real',X2)))) & p(s(bool,'const.real.real_lte_2'(s('type.realax.real',X2),s('type.realax.real',X3)))) & p(s(bool,'const.transc.Dint_3'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X1),s('type.realax.real',X2))),s(fun('type.realax.real','type.realax.real'),X0),s('type.realax.real',X4)))) & p(s(bool,'const.transc.Dint_3'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X2),s('type.realax.real',X3))),s(fun('type.realax.real','type.realax.real'),X0),s('type.realax.real',X5))))) => p(s(bool,'const.transc.Dint_3'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X1),s('type.realax.real',X3))),s(fun('type.realax.real','type.realax.real'),X0),s('type.realax.real','const.realax.real_add_2'(s('type.realax.real',X4),s('type.realax.real',X5)))))))),
  inference(rectify,[],[f33])).
fof(f33,axiom,(
  ! [X6,X7,X8,X9,X20,X21] : ((p(s(bool,'const.real.real_lte_2'(s('type.realax.real',X7),s('type.realax.real',X8)))) & p(s(bool,'const.real.real_lte_2'(s('type.realax.real',X8),s('type.realax.real',X9)))) & p(s(bool,'const.transc.Dint_3'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X7),s('type.realax.real',X8))),s(fun('type.realax.real','type.realax.real'),X6),s('type.realax.real',X20)))) & p(s(bool,'const.transc.Dint_3'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X8),s('type.realax.real',X9))),s(fun('type.realax.real','type.realax.real'),X6),s('type.realax.real',X21))))) => p(s(bool,'const.transc.Dint_3'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X7),s('type.realax.real',X9))),s(fun('type.realax.real','type.realax.real'),X6),s('type.realax.real','const.realax.real_add_2'(s('type.realax.real',X20),s('type.realax.real',X21)))))))),
  file('thm.integral.INTEGRABLE_COMBINE','thm.integral.DINT_COMBINE')).
fof(f199,plain,(
  p(s(bool,'const.real.real_lte_2'(s('type.realax.real',sK2),s('type.realax.real',sK3))))),
  inference(cnf_transformation,[],[f137])).
% SZS output end Proof for thm.integral
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 716
% Passive clauses: 9048
% Generated clauses: 144130
% Final active clauses: 703
% Final passive clauses: 4670
% Input formulas: 42
% Initial clauses: 316
% Discarded non-redundant clauses: 8995
% 
% Duplicate literals: 9851
% Trivial inequalities: 1409
% Fw demodulations: 7268
% Bw demodulations: 8
% Condensations: 28127
% Global subsumptions: 120
% 
% Simple tautologies: 5583
% Equational tautologies: 119
% Forward subsumptions: 82540
% 
% Binary resolution: 44236
% Factoring: 49
% Forward superposition: 31321
% Backward superposition: 22054
% Self superposition: 144
% Equality factoring: 136
% Equality resolution: 129
% 
% SAT solver clauses: 9584
% SAT solver unit clauses: 228
% SAT solver binary clauses: 306
% SAT solver learnt clauses: 242
% SAT solver learnt literals: 786
% 
% TWLsolver clauses: 9168
% TWLsolver calls for satisfiability: 316856
% 
% Memory used [KB]: 50660
% Time elapsed: 8.434 s
% ------------------------------
% ------------------------------
% Success in time 27.474 s
