Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 299 next slice time: 5
dis+11_7_3 on thm.measure
% (63041)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 109
% Passive clauses: 2977
% Generated clauses: 14640
% Final active clauses: 101
% Final passive clauses: 2687
% Input formulas: 37
% Initial clauses: 101
% 
% Duplicate literals: 689
% Trivial inequalities: 231
% Fw subsumption resolutions: 2657
% Fw demodulations: 804
% Bw demodulations: 8
% 
% Simple tautologies: 368
% Equational tautologies: 82
% Forward subsumptions: 5385
% 
% Binary resolution: 541
% Factoring: 2
% Forward superposition: 4145
% Backward superposition: 4806
% Self superposition: 262
% Equality factoring: 208
% Equality resolution: 24
% 
% Split clauses: 641
% Split components: 1331
% SAT solver clauses: 1544
% SAT solver unit clauses: 38
% SAT solver binary clauses: 498
% 
% Sat splits: 641
% 
% TWLsolver clauses: 1543
% TWLsolver calls for satisfiability: 169
% 
% Memory used [KB]: 8187
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 293 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.measure
% (63062)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 132
% Passive clauses: 602
% Generated clauses: 14933
% Final active clauses: 120
% Final passive clauses: 444
% Input formulas: 37
% Initial clauses: 101
% 
% Duplicate literals: 620
% Trivial inequalities: 185
% Fw subsumption resolutions: 2145
% Fw demodulations: 1766
% Bw demodulations: 36
% Condensations: 1313
% Global subsumptions: 13
% 
% Simple tautologies: 277
% Equational tautologies: 39
% Forward subsumptions: 6773
% 
% Binary resolution: 302
% Factoring: 1
% Forward superposition: 3473
% Backward superposition: 4067
% Self superposition: 171
% Equality factoring: 102
% Equality resolution: 29
% 
% Split clauses: 147
% Split components: 297
% SAT solver clauses: 1284
% SAT solver unit clauses: 120
% SAT solver binary clauses: 47
% SAT solver learnt clauses: 26
% 
% Sat splits: 147
% Sat splitting refutations: 4
% 
% TWLsolver clauses: 1232
% TWLsolver calls for satisfiability: 586
% 
% Memory used [KB]: 10874
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 286 next slice time: 103
lrs+11_2_br=off:cond=on:fde=none:gs=on:gsaa=full_model:lwlo=on:nwc=2:sas=minisat:stl=30:ssfp=100000:ssfq=1.4:smm=sco:ssnc=none:sp=occurrence:urr=on_98 on thm.measure
% (63084)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 780
% Passive clauses: 6064
% Generated clauses: 176275
% Final active clauses: 123
% Final passive clauses: 911
% Input formulas: 37
% Initial clauses: 101
% 
% Duplicate literals: 7920
% Trivial inequalities: 1755
% Fw subsumption resolutions: 22557
% Fw demodulations: 23503
% Bw demodulations: 3758
% Condensations: 17779
% Global subsumptions: 629
% 
% Simple tautologies: 1576
% Equational tautologies: 969
% Forward subsumptions: 92399
% Fw demodulations to eq. taut.: 65
% Bw demodulations to eq. taut.: 246
% 
% Unit resulting resolution: 5596
% Factoring: 11
% Forward superposition: 46114
% Backward superposition: 36643
% Self superposition: 842
% Equality factoring: 425
% Equality resolution: 71
% 
% Split clauses: 305
% Split components: 618
% SAT solver clauses: 8172
% SAT solver unit clauses: 140
% SAT solver binary clauses: 935
% 
% Sat splits: 305
% Sat splitting refutations: 867
% 
% Memory used [KB]: 62301
% Time elapsed: 10.400 s
% ------------------------------
% ------------------------------
% remaining time: 182 next slice time: 39
dis+11_5_fde=none:nwc=1:sas=minisat:sd=1:ss=axioms:st=5.0:sos=all:sdd=large:sser=off:sfr=on:ssfp=100000:ssfq=2.0:ssnc=none_37 on thm.measure
% (63341)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 645
% Passive clauses: 16274
% Generated clauses: 109499
% Final active clauses: 269
% Final passive clauses: 13524
% Input formulas: 37
% Initial clauses: 100
% 
% Selected by SInE selection: 36
% SInE iterations: 1
% 
% Duplicate literals: 3409
% Trivial inequalities: 1743
% Fw subsumption resolutions: 19044
% Fw demodulations: 12288
% Bw demodulations: 272
% 
% Simple tautologies: 2954
% Equational tautologies: 73
% Forward subsumptions: 48605
% Bw demodulations to eq. taut.: 5
% 
% Binary resolution: 13037
% Factoring: 2
% Forward superposition: 31997
% Backward superposition: 25543
% Self superposition: 325
% Equality factoring: 204
% Equality resolution: 108
% 
% Split clauses: 5837
% Split components: 12481
% SAT solver clauses: 6112
% SAT solver unit clauses: 52
% SAT solver binary clauses: 2583
% 
% Sat splits: 5837
% Sat splitting refutations: 259
% 
% Memory used [KB]: 39146
% Time elapsed: 4.0000 s
% ------------------------------
% ------------------------------
% remaining time: 143 next slice time: 6
lrs+1002_2:3_br=off:fde=unused:gs=on:gsaa=from_current:gsem=on:gsssp=full:nwc=1:sas=minisat:stl=30:sac=on:sser=off:sfr=on:ssfp=100000:ssfq=2.0:ssnc=none:sp=reverse_arity:urr=on_4 on thm.measure
% (63474)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 94
% Passive clauses: 717
% Generated clauses: 12373
% Final active clauses: 71
% Final passive clauses: 422
% Input formulas: 37
% Initial clauses: 101
% 
% Duplicate literals: 582
% Trivial inequalities: 366
% Fw subsumption resolutions: 2337
% Fw demodulations: 511
% Bw demodulations: 187
% Global subsumptions: 2
% 
% Simple tautologies: 662
% Equational tautologies: 92
% Forward subsumptions: 6788
% 
% Unit resulting resolution: 623
% Forward superposition: 3671
% Backward superposition: 3618
% Self superposition: 105
% Equality factoring: 72
% Equality resolution: 10
% 
% Split clauses: 17
% Split components: 35
% SAT solver clauses: 874
% SAT solver unit clauses: 141
% SAT solver binary clauses: 109
% 
% Sat splits: 17
% Sat splitting refutations: 136
% 
% Memory used [KB]: 5500
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 136 next slice time: 15
lrs+1011_12_bs=on:bsr=unit_only:cond=on:gs=on:gsaa=from_current:gsssp=full:nwc=1.1:sas=minisat:stl=60:sos=all:sac=on:sdd=off:sser=off:sfr=on:ssfp=100000:ssfq=1.2:ssnc=none:sp=reverse_arity:updr=off_14 on thm.measure
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.measure
% SZS output start Proof for thm.measure
fof(f5342,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f360,f1085,f1083,f1077,f1327,f1325,f2170,f1326,f2179,f2962,f5323,f5326])).
fof(f5326,plain,(
  $false | $spl3),
  inference(subsumption_resolution,[],[f5325,f265])).
fof(f265,plain,(
  ~p(s(bool,'F_0'))),
  inference(condensation,[],[f210])).
fof(f210,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | ~p(s(bool,'F_0'))) )),
  inference(cnf_transformation,[],[f134])).
fof(f134,plain,(
  ! [X0] : (((p(s(bool,X0)) & ~p(s(bool,'F_0'))) | ~p(s(bool,X0))) & (p(s(bool,X0)) | ~p(s(bool,X0)) | p(s(bool,'F_0'))))),
  inference(flattening,[],[f133])).
fof(f133,plain,(
  ! [X0] : (((p(s(bool,X0)) & ~p(s(bool,'F_0'))) | ~p(s(bool,X0))) & (p(s(bool,X0)) | (~p(s(bool,X0)) | p(s(bool,'F_0')))))),
  inference(nnf_transformation,[],[f95])).
fof(f95,plain,(
  ! [X0] : ((~p(s(bool,X0)) | p(s(bool,'F_0'))) <=> ~p(s(bool,X0)))),
  inference(ennf_transformation,[],[f61])).
fof(f61,plain,(
  ! [X0] : ((p(s(bool,X0)) => p(s(bool,'F_0'))) <=> ~p(s(bool,X0)))),
  inference(flattening,[],[f60])).
fof(f60,plain,(
  ! [X0] : ((p(s(bool,X0)) => p(s(bool,'F_0'))) <=> ~p(s(bool,X0)))),
  inference(rectify,[],[f20])).
fof(f20,axiom,(
  ! [X11] : ((p(s(bool,X11)) => p(s(bool,'F_0'))) <=> ~p(s(bool,X11)))),
  file('thm.measure.MEASURE_DOWN','thm.bool.IMP_CLAUSES|split|4')).
fof(f5325,plain,(
  p(s(bool,'F_0')) | $spl3),
  inference(forward_demodulation,[],[f5324,f3044])).
fof(f3044,plain,(
  s(bool,'F_0') = s(bool,'const.measure.countably_additive_1'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK1))) | $spl3),
  inference(resolution,[],[f1085,f179])).
fof(f179,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f113])).
fof(f113,plain,(
  ! [X0] : ((s(bool,'F_0') != s(bool,X0) | ~p(s(bool,X0))) & (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f48])).
fof(f48,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(flattening,[],[f47])).
fof(f47,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(rectify,[],[f29])).
fof(f29,axiom,(
  ! [X11] : (s(bool,'F_0') = s(bool,X11) <=> ~p(s(bool,X11)))),
  file('thm.measure.MEASURE_DOWN','thm.bool.EQ_CLAUSES|split|3')).
fof(f5324,plain,(
  p(s(bool,'const.measure.countably_additive_1'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK1)))) | $spl3),
  inference(subsumption_resolution,[],[f5278,f5244])).
fof(f5244,plain,(
  s('type.num.num',sK4(sK6(sK1,sK0),sK2,sK0)) != s('type.num.num',sK5(sK6(sK1,sK0),sK2,sK0)) | $spl3),
  inference(subsumption_resolution,[],[f5243,f165])).
fof(f165,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f1])).
fof(f1,axiom,(
  p(s(bool,'T_0'))),
  file('thm.measure.MEASURE_DOWN',aHL_TRUTH)).
fof(f5243,plain,(
  ~p(s(bool,'T_0')) | s('type.num.num',sK4(sK6(sK1,sK0),sK2,sK0)) != s('type.num.num',sK5(sK6(sK1,sK0),sK2,sK0)) | $spl3),
  inference(forward_demodulation,[],[f5242,f447])).
fof(f447,plain,(
  s(bool,'T_0') = s(bool,'const.measure.countably_additive_1'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK2)))),
  inference(resolution,[],[f281,f175])).
fof(f175,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f111])).
fof(f111,plain,(
  ! [X0] : ((s(bool,'T_0') != s(bool,X0) | p(s(bool,X0))) & (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f45])).
fof(f45,plain,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) <=> p(s(bool,X0)))),
  inference(rectify,[],[f27])).
fof(f27,axiom,(
  ! [X11] : (s(bool,'T_0') = s(bool,X11) <=> p(s(bool,X11)))),
  file('thm.measure.MEASURE_DOWN','thm.bool.EQ_CLAUSES|split|1')).
fof(f281,plain,(
  p(s(bool,'const.measure.countably_additive_1'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK2))))),
  inference(resolution,[],[f163,f223])).
fof(f223,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.measure.countably_additive_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))) | ~p(s(bool,'const.measure.measure_space_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1))))) )),
  inference(cnf_transformation,[],[f142])).
fof(f142,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.measure.measure_space_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))) | (p(s(bool,'const.measure.sigma_algebra_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),'const.pair.,_2'(s(fun(X0,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1))),s(fun(fun(X0,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))))) & p(s(bool,'const.measure.positive_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))) & p(s(bool,'const.measure.countably_additive_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))) & (~p(s(bool,'const.measure.sigma_algebra_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),'const.pair.,_2'(s(fun(X0,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1))),s(fun(fun(X0,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))))) | ~p(s(bool,'const.measure.positive_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))) | ~p(s(bool,'const.measure.countably_additive_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))) | p(s(bool,'const.measure.measure_space_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1))))))),
  inference(flattening,[],[f141])).
fof(f141,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.measure.measure_space_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))) | (p(s(bool,'const.measure.sigma_algebra_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),'const.pair.,_2'(s(fun(X0,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1))),s(fun(fun(X0,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))))) & p(s(bool,'const.measure.positive_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))) & p(s(bool,'const.measure.countably_additive_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))) & ((~p(s(bool,'const.measure.sigma_algebra_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),'const.pair.,_2'(s(fun(X0,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1))),s(fun(fun(X0,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))))) | ~p(s(bool,'const.measure.positive_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))) | ~p(s(bool,'const.measure.countably_additive_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1))))) | p(s(bool,'const.measure.measure_space_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1))))))),
  inference(nnf_transformation,[],[f71])).
fof(f71,plain,(
  ! [X0,X1] : (p(s(bool,'const.measure.measure_space_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))) <=> (p(s(bool,'const.measure.sigma_algebra_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),'const.pair.,_2'(s(fun(X0,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1))),s(fun(fun(X0,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))))) & p(s(bool,'const.measure.positive_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))) & p(s(bool,'const.measure.countably_additive_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1))))))),
  inference(flattening,[],[f70])).
fof(f70,plain,(
  ! [X0] : ! [X1] : (p(s(bool,'const.measure.measure_space_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))) <=> (p(s(bool,'const.measure.sigma_algebra_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),'const.pair.,_2'(s(fun(X0,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1))),s(fun(fun(X0,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))))) & p(s(bool,'const.measure.positive_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))) & p(s(bool,'const.measure.countably_additive_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1))))))),
  inference(rectify,[],[f34])).
fof(f34,axiom,(
  ! [X6] : ! [X17] : (p(s(bool,'const.measure.measure_space_1'(s('type.pair.prod'(fun(X6,bool),'type.pair.prod'(fun(fun(X6,bool),bool),fun(fun(X6,bool),'type.realax.real'))),X17)))) <=> (p(s(bool,'const.measure.sigma_algebra_1'(s('type.pair.prod'(fun(X6,bool),fun(fun(X6,bool),bool)),'const.pair.,_2'(s(fun(X6,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(X6,bool),'type.pair.prod'(fun(fun(X6,bool),bool),fun(fun(X6,bool),'type.realax.real'))),X17))),s(fun(fun(X6,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X6,bool),'type.pair.prod'(fun(fun(X6,bool),bool),fun(fun(X6,bool),'type.realax.real'))),X17)))))))) & p(s(bool,'const.measure.positive_1'(s('type.pair.prod'(fun(X6,bool),'type.pair.prod'(fun(fun(X6,bool),bool),fun(fun(X6,bool),'type.realax.real'))),X17)))) & p(s(bool,'const.measure.countably_additive_1'(s('type.pair.prod'(fun(X6,bool),'type.pair.prod'(fun(fun(X6,bool),bool),fun(fun(X6,bool),'type.realax.real'))),X17))))))),
  file('thm.measure.MEASURE_DOWN','thm.measure.measure_space_def')).
fof(f163,plain,(
  p(s(bool,'const.measure.measure_space_1'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK2))))),
  inference(cnf_transformation,[],[f108])).
fof(f108,plain,(
  p(s(bool,'const.measure.sigma_algebra_1'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK1))),s(fun(fun(sK0,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK1)))))))) & p(s(bool,'const.pred_set.SUBSET_2'(s(fun(fun(sK0,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK1))),s(fun(fun(sK0,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK2)))))) & s(fun(fun(sK0,bool),'type.realax.real'),'const.measure.measure_1'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK1))) = s(fun(fun(sK0,bool),'type.realax.real'),'const.measure.measure_1'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK2))) & p(s(bool,'const.measure.measure_space_1'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK2)))) & ~p(s(bool,'const.measure.measure_space_1'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK1))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2])],[f89])).
fof(f89,plain,(
  ? [X0,X1,X2] : (p(s(bool,'const.measure.sigma_algebra_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),'const.pair.,_2'(s(fun(X0,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1))),s(fun(fun(X0,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))))) & p(s(bool,'const.pred_set.SUBSET_2'(s(fun(fun(X0,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1))),s(fun(fun(X0,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X2)))))) & s(fun(fun(X0,bool),'type.realax.real'),'const.measure.measure_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1))) = s(fun(fun(X0,bool),'type.realax.real'),'const.measure.measure_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X2))) & p(s(bool,'const.measure.measure_space_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X2)))) & ~p(s(bool,'const.measure.measure_space_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))),
  inference(flattening,[],[f88])).
fof(f88,plain,(
  ? [X0,X1,X2] : ((p(s(bool,'const.measure.sigma_algebra_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),'const.pair.,_2'(s(fun(X0,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1))),s(fun(fun(X0,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))))) & p(s(bool,'const.pred_set.SUBSET_2'(s(fun(fun(X0,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1))),s(fun(fun(X0,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X2)))))) & s(fun(fun(X0,bool),'type.realax.real'),'const.measure.measure_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1))) = s(fun(fun(X0,bool),'type.realax.real'),'const.measure.measure_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X2))) & p(s(bool,'const.measure.measure_space_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X2))))) & ~p(s(bool,'const.measure.measure_space_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))),
  inference(ennf_transformation,[],[f40])).
fof(f40,plain,(
  ~! [X0,X1,X2] : ((p(s(bool,'const.measure.sigma_algebra_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),'const.pair.,_2'(s(fun(X0,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1))),s(fun(fun(X0,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))))) & p(s(bool,'const.pred_set.SUBSET_2'(s(fun(fun(X0,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1))),s(fun(fun(X0,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X2)))))) & s(fun(fun(X0,bool),'type.realax.real'),'const.measure.measure_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1))) = s(fun(fun(X0,bool),'type.realax.real'),'const.measure.measure_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X2))) & p(s(bool,'const.measure.measure_space_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X2))))) => p(s(bool,'const.measure.measure_space_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))),
  inference(flattening,[],[f39])).
fof(f39,plain,(
  ~! [X0] : ! [X1,X2] : ((p(s(bool,'const.measure.sigma_algebra_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),'const.pair.,_2'(s(fun(X0,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1))),s(fun(fun(X0,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))))) & p(s(bool,'const.pred_set.SUBSET_2'(s(fun(fun(X0,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1))),s(fun(fun(X0,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X2)))))) & s(fun(fun(X0,bool),'type.realax.real'),'const.measure.measure_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1))) = s(fun(fun(X0,bool),'type.realax.real'),'const.measure.measure_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X2))) & p(s(bool,'const.measure.measure_space_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X2))))) => p(s(bool,'const.measure.measure_space_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : ! [X7,X8] : ((p(s(bool,'const.measure.sigma_algebra_1'(s('type.pair.prod'(fun(X6,bool),fun(fun(X6,bool),bool)),'const.pair.,_2'(s(fun(X6,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(X6,bool),'type.pair.prod'(fun(fun(X6,bool),bool),fun(fun(X6,bool),'type.realax.real'))),X7))),s(fun(fun(X6,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X6,bool),'type.pair.prod'(fun(fun(X6,bool),bool),fun(fun(X6,bool),'type.realax.real'))),X7)))))))) & p(s(bool,'const.pred_set.SUBSET_2'(s(fun(fun(X6,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X6,bool),'type.pair.prod'(fun(fun(X6,bool),bool),fun(fun(X6,bool),'type.realax.real'))),X7))),s(fun(fun(X6,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X6,bool),'type.pair.prod'(fun(fun(X6,bool),bool),fun(fun(X6,bool),'type.realax.real'))),X8)))))) & s(fun(fun(X6,bool),'type.realax.real'),'const.measure.measure_1'(s('type.pair.prod'(fun(X6,bool),'type.pair.prod'(fun(fun(X6,bool),bool),fun(fun(X6,bool),'type.realax.real'))),X7))) = s(fun(fun(X6,bool),'type.realax.real'),'const.measure.measure_1'(s('type.pair.prod'(fun(X6,bool),'type.pair.prod'(fun(fun(X6,bool),bool),fun(fun(X6,bool),'type.realax.real'))),X8))) & p(s(bool,'const.measure.measure_space_1'(s('type.pair.prod'(fun(X6,bool),'type.pair.prod'(fun(fun(X6,bool),bool),fun(fun(X6,bool),'type.realax.real'))),X8))))) => p(s(bool,'const.measure.measure_space_1'(s('type.pair.prod'(fun(X6,bool),'type.pair.prod'(fun(fun(X6,bool),bool),fun(fun(X6,bool),'type.realax.real'))),X7)))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : ! [X7,X8] : ((p(s(bool,'const.measure.sigma_algebra_1'(s('type.pair.prod'(fun(X6,bool),fun(fun(X6,bool),bool)),'const.pair.,_2'(s(fun(X6,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(X6,bool),'type.pair.prod'(fun(fun(X6,bool),bool),fun(fun(X6,bool),'type.realax.real'))),X7))),s(fun(fun(X6,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X6,bool),'type.pair.prod'(fun(fun(X6,bool),bool),fun(fun(X6,bool),'type.realax.real'))),X7)))))))) & p(s(bool,'const.pred_set.SUBSET_2'(s(fun(fun(X6,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X6,bool),'type.pair.prod'(fun(fun(X6,bool),bool),fun(fun(X6,bool),'type.realax.real'))),X7))),s(fun(fun(X6,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X6,bool),'type.pair.prod'(fun(fun(X6,bool),bool),fun(fun(X6,bool),'type.realax.real'))),X8)))))) & s(fun(fun(X6,bool),'type.realax.real'),'const.measure.measure_1'(s('type.pair.prod'(fun(X6,bool),'type.pair.prod'(fun(fun(X6,bool),bool),fun(fun(X6,bool),'type.realax.real'))),X7))) = s(fun(fun(X6,bool),'type.realax.real'),'const.measure.measure_1'(s('type.pair.prod'(fun(X6,bool),'type.pair.prod'(fun(fun(X6,bool),bool),fun(fun(X6,bool),'type.realax.real'))),X8))) & p(s(bool,'const.measure.measure_space_1'(s('type.pair.prod'(fun(X6,bool),'type.pair.prod'(fun(fun(X6,bool),bool),fun(fun(X6,bool),'type.realax.real'))),X8))))) => p(s(bool,'const.measure.measure_space_1'(s('type.pair.prod'(fun(X6,bool),'type.pair.prod'(fun(fun(X6,bool),bool),fun(fun(X6,bool),'type.realax.real'))),X7)))))),
  file('thm.measure.MEASURE_DOWN','thm.measure.MEASURE_DOWN')).
fof(f5242,plain,(
  s('type.num.num',sK4(sK6(sK1,sK0),sK2,sK0)) != s('type.num.num',sK5(sK6(sK1,sK0),sK2,sK0)) | ~p(s(bool,'const.measure.countably_additive_1'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK2)))) | $spl3),
  inference(subsumption_resolution,[],[f5241,f3071])).
fof(f3071,plain,(
  ~p(s(bool,'const.seq.sums_2'(s(fun('type.num.num','type.realax.real'),'const.combin.o_2'(s(fun(fun(sK0,bool),'type.realax.real'),'const.measure.measure_1'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK1))),s(fun('type.num.num',fun(sK0,bool)),sK6(sK1,sK0)))),s('type.realax.real','const.measure.measure_2'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK1),s(fun(sK0,bool),'const.pred_set.BIGUNION_1'(s(fun(fun(sK0,bool),bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',fun(sK0,bool)),sK6(sK1,sK0)),s(fun('type.num.num',bool),'const.pred_set.UNIV_0')))))))))) | $spl3),
  inference(forward_demodulation,[],[f3039,f233])).
fof(f233,plain,(
  ( ! [X2,X0,X1] : (s('type.realax.real','const.measure.measure_2'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),X2))) = s('type.realax.real',happ(s(fun(fun(X0,bool),'type.realax.real'),'const.measure.measure_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1))),s(fun(X0,bool),X2)))) )),
  inference(cnf_transformation,[],[f76])).
fof(f76,plain,(
  ! [X0,X1,X2] : s('type.realax.real','const.measure.measure_2'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),X2))) = s('type.realax.real',happ(s(fun(fun(X0,bool),'type.realax.real'),'const.measure.measure_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1))),s(fun(X0,bool),X2)))),
  inference(flattening,[],[f75])).
fof(f75,plain,(
  ! [X0] : ! [X1,X2] : s('type.realax.real','const.measure.measure_2'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),X2))) = s('type.realax.real',happ(s(fun(fun(X0,bool),'type.realax.real'),'const.measure.measure_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1))),s(fun(X0,bool),X2)))),
  inference(rectify,[],[f38])).
fof(f38,axiom,(
  ! [X6] : ! [X24,X25] : s('type.realax.real','const.measure.measure_2'(s('type.pair.prod'(fun(X6,bool),'type.pair.prod'(fun(fun(X6,bool),bool),fun(fun(X6,bool),'type.realax.real'))),X24),s(fun(X6,bool),X25))) = s('type.realax.real',happ(s(fun(fun(X6,bool),'type.realax.real'),'const.measure.measure_1'(s('type.pair.prod'(fun(X6,bool),'type.pair.prod'(fun(fun(X6,bool),bool),fun(fun(X6,bool),'type.realax.real'))),X24))),s(fun(X6,bool),X25)))),
  file('thm.measure.MEASURE_DOWN','ARITY_1_2_const.measure.measure')).
fof(f3039,plain,(
  ~p(s(bool,'const.seq.sums_2'(s(fun('type.num.num','type.realax.real'),'const.combin.o_2'(s(fun(fun(sK0,bool),'type.realax.real'),'const.measure.measure_1'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK1))),s(fun('type.num.num',fun(sK0,bool)),sK6(sK1,sK0)))),s('type.realax.real',happ(s(fun(fun(sK0,bool),'type.realax.real'),'const.measure.measure_1'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK1))),s(fun(sK0,bool),'const.pred_set.BIGUNION_1'(s(fun(fun(sK0,bool),bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',fun(sK0,bool)),sK6(sK1,sK0)),s(fun('type.num.num',bool),'const.pred_set.UNIV_0')))))))))) | $spl3),
  inference(resolution,[],[f1085,f230])).
fof(f230,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.measure.countably_additive_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))) | ~p(s(bool,'const.seq.sums_2'(s(fun('type.num.num','type.realax.real'),'const.combin.o_2'(s(fun(fun(X0,bool),'type.realax.real'),'const.measure.measure_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1))),s(fun('type.num.num',fun(X0,bool)),sK6(X1,X0)))),s('type.realax.real',happ(s(fun(fun(X0,bool),'type.realax.real'),'const.measure.measure_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1))),s(fun(X0,bool),'const.pred_set.BIGUNION_1'(s(fun(fun(X0,bool),bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',fun(X0,bool)),sK6(X1,X0)),s(fun('type.num.num',bool),'const.pred_set.UNIV_0'))))))))))) )),
  inference(cnf_transformation,[],[f145])).
fof(f145,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.measure.countably_additive_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))) | ! [X5] : (~p(s(bool,'const.bool.IN_2'(s(fun('type.num.num',fun(X0,bool)),X5),s(fun(fun('type.num.num',fun(X0,bool)),bool),'const.util_prob.FUNSET_2'(s(fun('type.num.num',bool),'const.pred_set.UNIV_0'),s(fun(fun(X0,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))))) | (s('type.num.num',sK4(X5,X1,X0)) != s('type.num.num',sK5(X5,X1,X0)) & ~p(s(bool,'const.pred_set.DISJOINT_2'(s(fun(X0,bool),happ(s(fun('type.num.num',fun(X0,bool)),X5),s('type.num.num',sK4(X5,X1,X0)))),s(fun(X0,bool),happ(s(fun('type.num.num',fun(X0,bool)),X5),s('type.num.num',sK5(X5,X1,X0)))))))) | ~p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),'const.pred_set.BIGUNION_1'(s(fun(fun(X0,bool),bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',fun(X0,bool)),X5),s(fun('type.num.num',bool),'const.pred_set.UNIV_0'))))),s(fun(fun(X0,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))) | p(s(bool,'const.seq.sums_2'(s(fun('type.num.num','type.realax.real'),'const.combin.o_2'(s(fun(fun(X0,bool),'type.realax.real'),'const.measure.measure_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1))),s(fun('type.num.num',fun(X0,bool)),X5))),s('type.realax.real',happ(s(fun(fun(X0,bool),'type.realax.real'),'const.measure.measure_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1))),s(fun(X0,bool),'const.pred_set.BIGUNION_1'(s(fun(fun(X0,bool),bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',fun(X0,bool)),X5),s(fun('type.num.num',bool),'const.pred_set.UNIV_0')))))))))))) & ((p(s(bool,'const.bool.IN_2'(s(fun('type.num.num',fun(X0,bool)),sK6(X1,X0)),s(fun(fun('type.num.num',fun(X0,bool)),bool),'const.util_prob.FUNSET_2'(s(fun('type.num.num',bool),'const.pred_set.UNIV_0'),s(fun(fun(X0,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))))) & ! [X3,X4] : (s('type.num.num',X3) = s('type.num.num',X4) | p(s(bool,'const.pred_set.DISJOINT_2'(s(fun(X0,bool),happ(s(fun('type.num.num',fun(X0,bool)),sK6(X1,X0)),s('type.num.num',X3))),s(fun(X0,bool),happ(s(fun('type.num.num',fun(X0,bool)),sK6(X1,X0)),s('type.num.num',X4))))))) & p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),'const.pred_set.BIGUNION_1'(s(fun(fun(X0,bool),bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',fun(X0,bool)),sK6(X1,X0)),s(fun('type.num.num',bool),'const.pred_set.UNIV_0'))))),s(fun(fun(X0,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))) & ~p(s(bool,'const.seq.sums_2'(s(fun('type.num.num','type.realax.real'),'const.combin.o_2'(s(fun(fun(X0,bool),'type.realax.real'),'const.measure.measure_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1))),s(fun('type.num.num',fun(X0,bool)),sK6(X1,X0)))),s('type.realax.real',happ(s(fun(fun(X0,bool),'type.realax.real'),'const.measure.measure_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1))),s(fun(X0,bool),'const.pred_set.BIGUNION_1'(s(fun(fun(X0,bool),bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',fun(X0,bool)),sK6(X1,X0)),s(fun('type.num.num',bool),'const.pred_set.UNIV_0'))))))))))) | p(s(bool,'const.measure.countably_additive_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK4,sK5,sK6])],[f144])).
fof(f144,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.measure.countably_additive_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))) | ! [X5] : (~p(s(bool,'const.bool.IN_2'(s(fun('type.num.num',fun(X0,bool)),X5),s(fun(fun('type.num.num',fun(X0,bool)),bool),'const.util_prob.FUNSET_2'(s(fun('type.num.num',bool),'const.pred_set.UNIV_0'),s(fun(fun(X0,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))))) | ? [X6,X7] : (s('type.num.num',X6) != s('type.num.num',X7) & ~p(s(bool,'const.pred_set.DISJOINT_2'(s(fun(X0,bool),happ(s(fun('type.num.num',fun(X0,bool)),X5),s('type.num.num',X6))),s(fun(X0,bool),happ(s(fun('type.num.num',fun(X0,bool)),X5),s('type.num.num',X7))))))) | ~p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),'const.pred_set.BIGUNION_1'(s(fun(fun(X0,bool),bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',fun(X0,bool)),X5),s(fun('type.num.num',bool),'const.pred_set.UNIV_0'))))),s(fun(fun(X0,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))) | p(s(bool,'const.seq.sums_2'(s(fun('type.num.num','type.realax.real'),'const.combin.o_2'(s(fun(fun(X0,bool),'type.realax.real'),'const.measure.measure_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1))),s(fun('type.num.num',fun(X0,bool)),X5))),s('type.realax.real',happ(s(fun(fun(X0,bool),'type.realax.real'),'const.measure.measure_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1))),s(fun(X0,bool),'const.pred_set.BIGUNION_1'(s(fun(fun(X0,bool),bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',fun(X0,bool)),X5),s(fun('type.num.num',bool),'const.pred_set.UNIV_0')))))))))))) & (? [X2] : (p(s(bool,'const.bool.IN_2'(s(fun('type.num.num',fun(X0,bool)),X2),s(fun(fun('type.num.num',fun(X0,bool)),bool),'const.util_prob.FUNSET_2'(s(fun('type.num.num',bool),'const.pred_set.UNIV_0'),s(fun(fun(X0,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))))) & ! [X3,X4] : (s('type.num.num',X3) = s('type.num.num',X4) | p(s(bool,'const.pred_set.DISJOINT_2'(s(fun(X0,bool),happ(s(fun('type.num.num',fun(X0,bool)),X2),s('type.num.num',X3))),s(fun(X0,bool),happ(s(fun('type.num.num',fun(X0,bool)),X2),s('type.num.num',X4))))))) & p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),'const.pred_set.BIGUNION_1'(s(fun(fun(X0,bool),bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',fun(X0,bool)),X2),s(fun('type.num.num',bool),'const.pred_set.UNIV_0'))))),s(fun(fun(X0,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))) & ~p(s(bool,'const.seq.sums_2'(s(fun('type.num.num','type.realax.real'),'const.combin.o_2'(s(fun(fun(X0,bool),'type.realax.real'),'const.measure.measure_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1))),s(fun('type.num.num',fun(X0,bool)),X2))),s('type.realax.real',happ(s(fun(fun(X0,bool),'type.realax.real'),'const.measure.measure_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1))),s(fun(X0,bool),'const.pred_set.BIGUNION_1'(s(fun(fun(X0,bool),bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',fun(X0,bool)),X2),s(fun('type.num.num',bool),'const.pred_set.UNIV_0'))))))))))) | p(s(bool,'const.measure.countably_additive_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1))))))),
  inference(rectify,[],[f143])).
fof(f143,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.measure.countably_additive_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))) | ! [X2] : (~p(s(bool,'const.bool.IN_2'(s(fun('type.num.num',fun(X0,bool)),X2),s(fun(fun('type.num.num',fun(X0,bool)),bool),'const.util_prob.FUNSET_2'(s(fun('type.num.num',bool),'const.pred_set.UNIV_0'),s(fun(fun(X0,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))))) | ? [X3,X4] : (s('type.num.num',X3) != s('type.num.num',X4) & ~p(s(bool,'const.pred_set.DISJOINT_2'(s(fun(X0,bool),happ(s(fun('type.num.num',fun(X0,bool)),X2),s('type.num.num',X3))),s(fun(X0,bool),happ(s(fun('type.num.num',fun(X0,bool)),X2),s('type.num.num',X4))))))) | ~p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),'const.pred_set.BIGUNION_1'(s(fun(fun(X0,bool),bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',fun(X0,bool)),X2),s(fun('type.num.num',bool),'const.pred_set.UNIV_0'))))),s(fun(fun(X0,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))) | p(s(bool,'const.seq.sums_2'(s(fun('type.num.num','type.realax.real'),'const.combin.o_2'(s(fun(fun(X0,bool),'type.realax.real'),'const.measure.measure_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1))),s(fun('type.num.num',fun(X0,bool)),X2))),s('type.realax.real',happ(s(fun(fun(X0,bool),'type.realax.real'),'const.measure.measure_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1))),s(fun(X0,bool),'const.pred_set.BIGUNION_1'(s(fun(fun(X0,bool),bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',fun(X0,bool)),X2),s(fun('type.num.num',bool),'const.pred_set.UNIV_0')))))))))))) & (? [X2] : (p(s(bool,'const.bool.IN_2'(s(fun('type.num.num',fun(X0,bool)),X2),s(fun(fun('type.num.num',fun(X0,bool)),bool),'const.util_prob.FUNSET_2'(s(fun('type.num.num',bool),'const.pred_set.UNIV_0'),s(fun(fun(X0,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))))) & ! [X3,X4] : (s('type.num.num',X3) = s('type.num.num',X4) | p(s(bool,'const.pred_set.DISJOINT_2'(s(fun(X0,bool),happ(s(fun('type.num.num',fun(X0,bool)),X2),s('type.num.num',X3))),s(fun(X0,bool),happ(s(fun('type.num.num',fun(X0,bool)),X2),s('type.num.num',X4))))))) & p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),'const.pred_set.BIGUNION_1'(s(fun(fun(X0,bool),bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',fun(X0,bool)),X2),s(fun('type.num.num',bool),'const.pred_set.UNIV_0'))))),s(fun(fun(X0,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))) & ~p(s(bool,'const.seq.sums_2'(s(fun('type.num.num','type.realax.real'),'const.combin.o_2'(s(fun(fun(X0,bool),'type.realax.real'),'const.measure.measure_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1))),s(fun('type.num.num',fun(X0,bool)),X2))),s('type.realax.real',happ(s(fun(fun(X0,bool),'type.realax.real'),'const.measure.measure_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1))),s(fun(X0,bool),'const.pred_set.BIGUNION_1'(s(fun(fun(X0,bool),bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',fun(X0,bool)),X2),s(fun('type.num.num',bool),'const.pred_set.UNIV_0'))))))))))) | p(s(bool,'const.measure.countably_additive_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1))))))),
  inference(nnf_transformation,[],[f98])).
fof(f98,plain,(
  ! [X0,X1] : (p(s(bool,'const.measure.countably_additive_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))) <=> ! [X2] : (~p(s(bool,'const.bool.IN_2'(s(fun('type.num.num',fun(X0,bool)),X2),s(fun(fun('type.num.num',fun(X0,bool)),bool),'const.util_prob.FUNSET_2'(s(fun('type.num.num',bool),'const.pred_set.UNIV_0'),s(fun(fun(X0,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))))) | ? [X3,X4] : (s('type.num.num',X3) != s('type.num.num',X4) & ~p(s(bool,'const.pred_set.DISJOINT_2'(s(fun(X0,bool),happ(s(fun('type.num.num',fun(X0,bool)),X2),s('type.num.num',X3))),s(fun(X0,bool),happ(s(fun('type.num.num',fun(X0,bool)),X2),s('type.num.num',X4))))))) | ~p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),'const.pred_set.BIGUNION_1'(s(fun(fun(X0,bool),bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',fun(X0,bool)),X2),s(fun('type.num.num',bool),'const.pred_set.UNIV_0'))))),s(fun(fun(X0,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))) | p(s(bool,'const.seq.sums_2'(s(fun('type.num.num','type.realax.real'),'const.combin.o_2'(s(fun(fun(X0,bool),'type.realax.real'),'const.measure.measure_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1))),s(fun('type.num.num',fun(X0,bool)),X2))),s('type.realax.real',happ(s(fun(fun(X0,bool),'type.realax.real'),'const.measure.measure_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1))),s(fun(X0,bool),'const.pred_set.BIGUNION_1'(s(fun(fun(X0,bool),bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',fun(X0,bool)),X2),s(fun('type.num.num',bool),'const.pred_set.UNIV_0'))))))))))))),
  inference(flattening,[],[f97])).
fof(f97,plain,(
  ! [X0,X1] : (p(s(bool,'const.measure.countably_additive_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))) <=> ! [X2] : ((~p(s(bool,'const.bool.IN_2'(s(fun('type.num.num',fun(X0,bool)),X2),s(fun(fun('type.num.num',fun(X0,bool)),bool),'const.util_prob.FUNSET_2'(s(fun('type.num.num',bool),'const.pred_set.UNIV_0'),s(fun(fun(X0,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))))) | ? [X3,X4] : (s('type.num.num',X3) != s('type.num.num',X4) & ~p(s(bool,'const.pred_set.DISJOINT_2'(s(fun(X0,bool),happ(s(fun('type.num.num',fun(X0,bool)),X2),s('type.num.num',X3))),s(fun(X0,bool),happ(s(fun('type.num.num',fun(X0,bool)),X2),s('type.num.num',X4))))))) | ~p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),'const.pred_set.BIGUNION_1'(s(fun(fun(X0,bool),bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',fun(X0,bool)),X2),s(fun('type.num.num',bool),'const.pred_set.UNIV_0'))))),s(fun(fun(X0,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1))))))) | p(s(bool,'const.seq.sums_2'(s(fun('type.num.num','type.realax.real'),'const.combin.o_2'(s(fun(fun(X0,bool),'type.realax.real'),'const.measure.measure_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1))),s(fun('type.num.num',fun(X0,bool)),X2))),s('type.realax.real',happ(s(fun(fun(X0,bool),'type.realax.real'),'const.measure.measure_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1))),s(fun(X0,bool),'const.pred_set.BIGUNION_1'(s(fun(fun(X0,bool),bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',fun(X0,bool)),X2),s(fun('type.num.num',bool),'const.pred_set.UNIV_0'))))))))))))),
  inference(ennf_transformation,[],[f73])).
fof(f73,plain,(
  ! [X0,X1] : (p(s(bool,'const.measure.countably_additive_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))) <=> ! [X2] : ((p(s(bool,'const.bool.IN_2'(s(fun('type.num.num',fun(X0,bool)),X2),s(fun(fun('type.num.num',fun(X0,bool)),bool),'const.util_prob.FUNSET_2'(s(fun('type.num.num',bool),'const.pred_set.UNIV_0'),s(fun(fun(X0,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))))) & ! [X3,X4] : (s('type.num.num',X3) != s('type.num.num',X4) => p(s(bool,'const.pred_set.DISJOINT_2'(s(fun(X0,bool),happ(s(fun('type.num.num',fun(X0,bool)),X2),s('type.num.num',X3))),s(fun(X0,bool),happ(s(fun('type.num.num',fun(X0,bool)),X2),s('type.num.num',X4))))))) & p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),'const.pred_set.BIGUNION_1'(s(fun(fun(X0,bool),bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',fun(X0,bool)),X2),s(fun('type.num.num',bool),'const.pred_set.UNIV_0'))))),s(fun(fun(X0,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1))))))) => p(s(bool,'const.seq.sums_2'(s(fun('type.num.num','type.realax.real'),'const.combin.o_2'(s(fun(fun(X0,bool),'type.realax.real'),'const.measure.measure_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1))),s(fun('type.num.num',fun(X0,bool)),X2))),s('type.realax.real',happ(s(fun(fun(X0,bool),'type.realax.real'),'const.measure.measure_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1))),s(fun(X0,bool),'const.pred_set.BIGUNION_1'(s(fun(fun(X0,bool),bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',fun(X0,bool)),X2),s(fun('type.num.num',bool),'const.pred_set.UNIV_0'))))))))))))),
  inference(flattening,[],[f72])).
fof(f72,plain,(
  ! [X0] : ! [X1] : (p(s(bool,'const.measure.countably_additive_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))) <=> ! [X2] : ((p(s(bool,'const.bool.IN_2'(s(fun('type.num.num',fun(X0,bool)),X2),s(fun(fun('type.num.num',fun(X0,bool)),bool),'const.util_prob.FUNSET_2'(s(fun('type.num.num',bool),'const.pred_set.UNIV_0'),s(fun(fun(X0,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))))) & ! [X3,X4] : (~s('type.num.num',X3) = s('type.num.num',X4) => p(s(bool,'const.pred_set.DISJOINT_2'(s(fun(X0,bool),happ(s(fun('type.num.num',fun(X0,bool)),X2),s('type.num.num',X3))),s(fun(X0,bool),happ(s(fun('type.num.num',fun(X0,bool)),X2),s('type.num.num',X4))))))) & p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),'const.pred_set.BIGUNION_1'(s(fun(fun(X0,bool),bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',fun(X0,bool)),X2),s(fun('type.num.num',bool),'const.pred_set.UNIV_0'))))),s(fun(fun(X0,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1))))))) => p(s(bool,'const.seq.sums_2'(s(fun('type.num.num','type.realax.real'),'const.combin.o_2'(s(fun(fun(X0,bool),'type.realax.real'),'const.measure.measure_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1))),s(fun('type.num.num',fun(X0,bool)),X2))),s('type.realax.real',happ(s(fun(fun(X0,bool),'type.realax.real'),'const.measure.measure_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1))),s(fun(X0,bool),'const.pred_set.BIGUNION_1'(s(fun(fun(X0,bool),bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',fun(X0,bool)),X2),s(fun('type.num.num',bool),'const.pred_set.UNIV_0'))))))))))))),
  inference(rectify,[],[f33])).
fof(f33,axiom,(
  ! [X6] : ! [X17] : (p(s(bool,'const.measure.countably_additive_1'(s('type.pair.prod'(fun(X6,bool),'type.pair.prod'(fun(fun(X6,bool),bool),fun(fun(X6,bool),'type.realax.real'))),X17)))) <=> ! [X19] : ((p(s(bool,'const.bool.IN_2'(s(fun('type.num.num',fun(X6,bool)),X19),s(fun(fun('type.num.num',fun(X6,bool)),bool),'const.util_prob.FUNSET_2'(s(fun('type.num.num',bool),'const.pred_set.UNIV_0'),s(fun(fun(X6,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X6,bool),'type.pair.prod'(fun(fun(X6,bool),bool),fun(fun(X6,bool),'type.realax.real'))),X17)))))))) & ! [X7,X20] : (~s('type.num.num',X7) = s('type.num.num',X20) => p(s(bool,'const.pred_set.DISJOINT_2'(s(fun(X6,bool),happ(s(fun('type.num.num',fun(X6,bool)),X19),s('type.num.num',X7))),s(fun(X6,bool),happ(s(fun('type.num.num',fun(X6,bool)),X19),s('type.num.num',X20))))))) & p(s(bool,'const.bool.IN_2'(s(fun(X6,bool),'const.pred_set.BIGUNION_1'(s(fun(fun(X6,bool),bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',fun(X6,bool)),X19),s(fun('type.num.num',bool),'const.pred_set.UNIV_0'))))),s(fun(fun(X6,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X6,bool),'type.pair.prod'(fun(fun(X6,bool),bool),fun(fun(X6,bool),'type.realax.real'))),X17))))))) => p(s(bool,'const.seq.sums_2'(s(fun('type.num.num','type.realax.real'),'const.combin.o_2'(s(fun(fun(X6,bool),'type.realax.real'),'const.measure.measure_1'(s('type.pair.prod'(fun(X6,bool),'type.pair.prod'(fun(fun(X6,bool),bool),fun(fun(X6,bool),'type.realax.real'))),X17))),s(fun('type.num.num',fun(X6,bool)),X19))),s('type.realax.real',happ(s(fun(fun(X6,bool),'type.realax.real'),'const.measure.measure_1'(s('type.pair.prod'(fun(X6,bool),'type.pair.prod'(fun(fun(X6,bool),bool),fun(fun(X6,bool),'type.realax.real'))),X17))),s(fun(X6,bool),'const.pred_set.BIGUNION_1'(s(fun(fun(X6,bool),bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',fun(X6,bool)),X19),s(fun('type.num.num',bool),'const.pred_set.UNIV_0'))))))))))))),
  file('thm.measure.MEASURE_DOWN','thm.measure.countably_additive_def')).
fof(f5241,plain,(
  p(s(bool,'const.seq.sums_2'(s(fun('type.num.num','type.realax.real'),'const.combin.o_2'(s(fun(fun(sK0,bool),'type.realax.real'),'const.measure.measure_1'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK1))),s(fun('type.num.num',fun(sK0,bool)),sK6(sK1,sK0)))),s('type.realax.real','const.measure.measure_2'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK1),s(fun(sK0,bool),'const.pred_set.BIGUNION_1'(s(fun(fun(sK0,bool),bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',fun(sK0,bool)),sK6(sK1,sK0)),s(fun('type.num.num',bool),'const.pred_set.UNIV_0')))))))))) | s('type.num.num',sK4(sK6(sK1,sK0),sK2,sK0)) != s('type.num.num',sK5(sK6(sK1,sK0),sK2,sK0)) | ~p(s(bool,'const.measure.countably_additive_1'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK2)))) | $spl3),
  inference(forward_demodulation,[],[f5240,f162])).
fof(f162,plain,(
  s(fun(fun(sK0,bool),'type.realax.real'),'const.measure.measure_1'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK1))) = s(fun(fun(sK0,bool),'type.realax.real'),'const.measure.measure_1'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK2)))),
  inference(cnf_transformation,[],[f108])).
fof(f5240,plain,(
  p(s(bool,'const.seq.sums_2'(s(fun('type.num.num','type.realax.real'),'const.combin.o_2'(s(fun(fun(sK0,bool),'type.realax.real'),'const.measure.measure_1'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK2))),s(fun('type.num.num',fun(sK0,bool)),sK6(sK1,sK0)))),s('type.realax.real','const.measure.measure_2'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK1),s(fun(sK0,bool),'const.pred_set.BIGUNION_1'(s(fun(fun(sK0,bool),bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',fun(sK0,bool)),sK6(sK1,sK0)),s(fun('type.num.num',bool),'const.pred_set.UNIV_0')))))))))) | s('type.num.num',sK4(sK6(sK1,sK0),sK2,sK0)) != s('type.num.num',sK5(sK6(sK1,sK0),sK2,sK0)) | ~p(s(bool,'const.measure.countably_additive_1'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK2)))) | $spl3),
  inference(forward_demodulation,[],[f5239,f1172])).
fof(f1172,plain,(
  ( ! [X0] : (s('type.realax.real','const.measure.measure_2'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK1),s(fun(sK0,bool),X0))) = s('type.realax.real','const.measure.measure_2'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK2),s(fun(sK0,bool),X0)))) )),
  inference(forward_demodulation,[],[f1156,f233])).
fof(f1156,plain,(
  ( ! [X0] : (s('type.realax.real','const.measure.measure_2'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK2),s(fun(sK0,bool),X0))) = s('type.realax.real',happ(s(fun(fun(sK0,bool),'type.realax.real'),'const.measure.measure_1'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK1))),s(fun(sK0,bool),X0)))) )),
  inference(superposition,[],[f233,f162])).
fof(f5239,plain,(
  p(s(bool,'const.seq.sums_2'(s(fun('type.num.num','type.realax.real'),'const.combin.o_2'(s(fun(fun(sK0,bool),'type.realax.real'),'const.measure.measure_1'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK2))),s(fun('type.num.num',fun(sK0,bool)),sK6(sK1,sK0)))),s('type.realax.real','const.measure.measure_2'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK2),s(fun(sK0,bool),'const.pred_set.BIGUNION_1'(s(fun(fun(sK0,bool),bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',fun(sK0,bool)),sK6(sK1,sK0)),s(fun('type.num.num',bool),'const.pred_set.UNIV_0')))))))))) | s('type.num.num',sK4(sK6(sK1,sK0),sK2,sK0)) != s('type.num.num',sK5(sK6(sK1,sK0),sK2,sK0)) | ~p(s(bool,'const.measure.countably_additive_1'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK2)))) | $spl3),
  inference(forward_demodulation,[],[f5238,f233])).
fof(f5238,plain,(
  p(s(bool,'const.seq.sums_2'(s(fun('type.num.num','type.realax.real'),'const.combin.o_2'(s(fun(fun(sK0,bool),'type.realax.real'),'const.measure.measure_1'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK2))),s(fun('type.num.num',fun(sK0,bool)),sK6(sK1,sK0)))),s('type.realax.real',happ(s(fun(fun(sK0,bool),'type.realax.real'),'const.measure.measure_1'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK2))),s(fun(sK0,bool),'const.pred_set.BIGUNION_1'(s(fun(fun(sK0,bool),bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',fun(sK0,bool)),sK6(sK1,sK0)),s(fun('type.num.num',bool),'const.pred_set.UNIV_0')))))))))) | s('type.num.num',sK4(sK6(sK1,sK0),sK2,sK0)) != s('type.num.num',sK5(sK6(sK1,sK0),sK2,sK0)) | ~p(s(bool,'const.measure.countably_additive_1'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK2)))) | $spl3),
  inference(subsumption_resolution,[],[f5194,f4935])).
fof(f4935,plain,(
  p(s(bool,'const.bool.IN_2'(s(fun(sK0,bool),'const.pred_set.BIGUNION_1'(s(fun(fun(sK0,bool),bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',fun(sK0,bool)),sK6(sK1,sK0)),s(fun('type.num.num',bool),'const.pred_set.UNIV_0'))))),s(fun(fun(sK0,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK2)))))) | $spl3),
  inference(subsumption_resolution,[],[f4934,f171])).
fof(f171,plain,(
  ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f43])).
fof(f43,plain,(
  ~p(s(bool,'F_0'))),
  inference(flattening,[],[f2])).
fof(f2,axiom,(
  ~p(s(bool,'F_0'))),
  file('thm.measure.MEASURE_DOWN',aHL_FALSITY)).
fof(f4934,plain,(
  p(s(bool,'F_0')) | p(s(bool,'const.bool.IN_2'(s(fun(sK0,bool),'const.pred_set.BIGUNION_1'(s(fun(fun(sK0,bool),bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',fun(sK0,bool)),sK6(sK1,sK0)),s(fun('type.num.num',bool),'const.pred_set.UNIV_0'))))),s(fun(fun(sK0,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK2)))))) | $spl3),
  inference(forward_demodulation,[],[f4890,f3044])).
fof(f4890,plain,(
  p(s(bool,'const.bool.IN_2'(s(fun(sK0,bool),'const.pred_set.BIGUNION_1'(s(fun(fun(sK0,bool),bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',fun(sK0,bool)),sK6(sK1,sK0)),s(fun('type.num.num',bool),'const.pred_set.UNIV_0'))))),s(fun(fun(sK0,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK2)))))) | p(s(bool,'const.measure.countably_additive_1'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK1))))),
  inference(resolution,[],[f1983,f229])).
fof(f229,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.measure.countably_additive_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))) | p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),'const.pred_set.BIGUNION_1'(s(fun(fun(X0,bool),bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',fun(X0,bool)),sK6(X1,X0)),s(fun('type.num.num',bool),'const.pred_set.UNIV_0'))))),s(fun(fun(X0,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1))))))) )),
  inference(cnf_transformation,[],[f145])).
fof(f1983,plain,(
  ( ! [X0] : (~p(s(bool,'const.bool.IN_2'(s(fun(sK0,bool),X0),s(fun(fun(sK0,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK1)))))) | p(s(bool,'const.bool.IN_2'(s(fun(sK0,bool),X0),s(fun(fun(sK0,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK2))))))) )),
  inference(resolution,[],[f161,f236])).
fof(f236,plain,(
  ( ! [X4,X2,X0,X1] : (p(s(bool,'const.bool.IN_2'(s(X0,X4),s(fun(X0,bool),X2)))) | ~p(s(bool,'const.bool.IN_2'(s(X0,X4),s(fun(X0,bool),X1)))) | ~p(s(bool,'const.pred_set.SUBSET_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2))))) )),
  inference(cnf_transformation,[],[f151])).
fof(f151,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,'const.pred_set.SUBSET_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2)))) | ! [X4] : (~p(s(bool,'const.bool.IN_2'(s(X0,X4),s(fun(X0,bool),X1)))) | p(s(bool,'const.bool.IN_2'(s(X0,X4),s(fun(X0,bool),X2)))))) & ((p(s(bool,'const.bool.IN_2'(s(X0,sK7(X2,X1,X0)),s(fun(X0,bool),X1)))) & ~p(s(bool,'const.bool.IN_2'(s(X0,sK7(X2,X1,X0)),s(fun(X0,bool),X2))))) | p(s(bool,'const.pred_set.SUBSET_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK7])],[f150])).
fof(f150,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,'const.pred_set.SUBSET_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2)))) | ! [X4] : (~p(s(bool,'const.bool.IN_2'(s(X0,X4),s(fun(X0,bool),X1)))) | p(s(bool,'const.bool.IN_2'(s(X0,X4),s(fun(X0,bool),X2)))))) & (? [X3] : (p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X1)))) & ~p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X2))))) | p(s(bool,'const.pred_set.SUBSET_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2))))))),
  inference(rectify,[],[f149])).
fof(f149,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,'const.pred_set.SUBSET_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2)))) | ! [X3] : (~p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X1)))) | p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X2)))))) & (? [X3] : (p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X1)))) & ~p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X2))))) | p(s(bool,'const.pred_set.SUBSET_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2))))))),
  inference(nnf_transformation,[],[f99])).
fof(f99,plain,(
  ! [X0,X1,X2] : (p(s(bool,'const.pred_set.SUBSET_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2)))) <=> ! [X3] : (~p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X1)))) | p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X2))))))),
  inference(ennf_transformation,[],[f80])).
fof(f80,plain,(
  ! [X0,X1,X2] : (p(s(bool,'const.pred_set.SUBSET_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2)))) <=> ! [X3] : (p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X1)))) => p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X2))))))),
  inference(flattening,[],[f79])).
fof(f79,plain,(
  ! [X0] : ! [X1,X2] : (p(s(bool,'const.pred_set.SUBSET_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2)))) <=> ! [X3] : (p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X1)))) => p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X2))))))),
  inference(rectify,[],[f36])).
fof(f36,axiom,(
  ! [X6] : ! [X18,X11] : (p(s(bool,'const.pred_set.SUBSET_2'(s(fun(X6,bool),X18),s(fun(X6,bool),X11)))) <=> ! [X12] : (p(s(bool,'const.bool.IN_2'(s(X6,X12),s(fun(X6,bool),X18)))) => p(s(bool,'const.bool.IN_2'(s(X6,X12),s(fun(X6,bool),X11))))))),
  file('thm.measure.MEASURE_DOWN','thm.pred_set.SUBSET_DEF')).
fof(f161,plain,(
  p(s(bool,'const.pred_set.SUBSET_2'(s(fun(fun(sK0,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK1))),s(fun(fun(sK0,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK2))))))),
  inference(cnf_transformation,[],[f108])).
fof(f5194,plain,(
  p(s(bool,'const.seq.sums_2'(s(fun('type.num.num','type.realax.real'),'const.combin.o_2'(s(fun(fun(sK0,bool),'type.realax.real'),'const.measure.measure_1'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK2))),s(fun('type.num.num',fun(sK0,bool)),sK6(sK1,sK0)))),s('type.realax.real',happ(s(fun(fun(sK0,bool),'type.realax.real'),'const.measure.measure_1'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK2))),s(fun(sK0,bool),'const.pred_set.BIGUNION_1'(s(fun(fun(sK0,bool),bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',fun(sK0,bool)),sK6(sK1,sK0)),s(fun('type.num.num',bool),'const.pred_set.UNIV_0')))))))))) | ~p(s(bool,'const.bool.IN_2'(s(fun(sK0,bool),'const.pred_set.BIGUNION_1'(s(fun(fun(sK0,bool),bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',fun(sK0,bool)),sK6(sK1,sK0)),s(fun('type.num.num',bool),'const.pred_set.UNIV_0'))))),s(fun(fun(sK0,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK2)))))) | s('type.num.num',sK4(sK6(sK1,sK0),sK2,sK0)) != s('type.num.num',sK5(sK6(sK1,sK0),sK2,sK0)) | ~p(s(bool,'const.measure.countably_additive_1'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK2)))) | $spl3),
  inference(resolution,[],[f4940,f225])).
fof(f225,plain,(
  ( ! [X0,X5,X1] : (p(s(bool,'const.seq.sums_2'(s(fun('type.num.num','type.realax.real'),'const.combin.o_2'(s(fun(fun(X0,bool),'type.realax.real'),'const.measure.measure_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1))),s(fun('type.num.num',fun(X0,bool)),X5))),s('type.realax.real',happ(s(fun(fun(X0,bool),'type.realax.real'),'const.measure.measure_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1))),s(fun(X0,bool),'const.pred_set.BIGUNION_1'(s(fun(fun(X0,bool),bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',fun(X0,bool)),X5),s(fun('type.num.num',bool),'const.pred_set.UNIV_0')))))))))) | ~p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),'const.pred_set.BIGUNION_1'(s(fun(fun(X0,bool),bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',fun(X0,bool)),X5),s(fun('type.num.num',bool),'const.pred_set.UNIV_0'))))),s(fun(fun(X0,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))) | s('type.num.num',sK4(X5,X1,X0)) != s('type.num.num',sK5(X5,X1,X0)) | ~p(s(bool,'const.bool.IN_2'(s(fun('type.num.num',fun(X0,bool)),X5),s(fun(fun('type.num.num',fun(X0,bool)),bool),'const.util_prob.FUNSET_2'(s(fun('type.num.num',bool),'const.pred_set.UNIV_0'),s(fun(fun(X0,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))))) | ~p(s(bool,'const.measure.countably_additive_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1))))) )),
  inference(cnf_transformation,[],[f145])).
fof(f4940,plain,(
  ( ! [X1] : (p(s(bool,'const.bool.IN_2'(s(fun('type.num.num',fun(sK0,bool)),sK6(sK1,sK0)),s(fun(fun('type.num.num',fun(sK0,bool)),bool),'const.util_prob.FUNSET_2'(s(fun('type.num.num',bool),X1),s(fun(fun(sK0,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK2))))))))) ) | $spl3),
  inference(resolution,[],[f4938,f246])).
fof(f246,plain,(
  ( ! [X4,X2,X0,X3,X1] : (p(s(bool,'const.bool.IN_2'(s(fun(X0,X1),X2),s(fun(fun(X0,X1),bool),'const.util_prob.FUNSET_2'(s(fun(X0,bool),X3),s(fun(X1,bool),X4)))))) | ~p(s(bool,'const.bool.IN_2'(s(X1,happ(s(fun(X0,X1),X2),s(X0,sK9(X4,X3,X2,X1,X0)))),s(fun(X1,bool),X4))))) )),
  inference(cnf_transformation,[],[f155])).
fof(f155,plain,(
  ! [X0,X1,X2,X3,X4] : ((~p(s(bool,'const.bool.IN_2'(s(fun(X0,X1),X2),s(fun(fun(X0,X1),bool),'const.util_prob.FUNSET_2'(s(fun(X0,bool),X3),s(fun(X1,bool),X4)))))) | ! [X6] : (~p(s(bool,'const.bool.IN_2'(s(X0,X6),s(fun(X0,bool),X3)))) | p(s(bool,'const.bool.IN_2'(s(X1,happ(s(fun(X0,X1),X2),s(X0,X6))),s(fun(X1,bool),X4)))))) & ((p(s(bool,'const.bool.IN_2'(s(X0,sK9(X4,X3,X2,X1,X0)),s(fun(X0,bool),X3)))) & ~p(s(bool,'const.bool.IN_2'(s(X1,happ(s(fun(X0,X1),X2),s(X0,sK9(X4,X3,X2,X1,X0)))),s(fun(X1,bool),X4))))) | p(s(bool,'const.bool.IN_2'(s(fun(X0,X1),X2),s(fun(fun(X0,X1),bool),'const.util_prob.FUNSET_2'(s(fun(X0,bool),X3),s(fun(X1,bool),X4))))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK9])],[f154])).
fof(f154,plain,(
  ! [X0,X1,X2,X3,X4] : ((~p(s(bool,'const.bool.IN_2'(s(fun(X0,X1),X2),s(fun(fun(X0,X1),bool),'const.util_prob.FUNSET_2'(s(fun(X0,bool),X3),s(fun(X1,bool),X4)))))) | ! [X6] : (~p(s(bool,'const.bool.IN_2'(s(X0,X6),s(fun(X0,bool),X3)))) | p(s(bool,'const.bool.IN_2'(s(X1,happ(s(fun(X0,X1),X2),s(X0,X6))),s(fun(X1,bool),X4)))))) & (? [X5] : (p(s(bool,'const.bool.IN_2'(s(X0,X5),s(fun(X0,bool),X3)))) & ~p(s(bool,'const.bool.IN_2'(s(X1,happ(s(fun(X0,X1),X2),s(X0,X5))),s(fun(X1,bool),X4))))) | p(s(bool,'const.bool.IN_2'(s(fun(X0,X1),X2),s(fun(fun(X0,X1),bool),'const.util_prob.FUNSET_2'(s(fun(X0,bool),X3),s(fun(X1,bool),X4))))))))),
  inference(rectify,[],[f153])).
fof(f153,plain,(
  ! [X0,X1,X2,X3,X4] : ((~p(s(bool,'const.bool.IN_2'(s(fun(X0,X1),X2),s(fun(fun(X0,X1),bool),'const.util_prob.FUNSET_2'(s(fun(X0,bool),X3),s(fun(X1,bool),X4)))))) | ! [X5] : (~p(s(bool,'const.bool.IN_2'(s(X0,X5),s(fun(X0,bool),X3)))) | p(s(bool,'const.bool.IN_2'(s(X1,happ(s(fun(X0,X1),X2),s(X0,X5))),s(fun(X1,bool),X4)))))) & (? [X5] : (p(s(bool,'const.bool.IN_2'(s(X0,X5),s(fun(X0,bool),X3)))) & ~p(s(bool,'const.bool.IN_2'(s(X1,happ(s(fun(X0,X1),X2),s(X0,X5))),s(fun(X1,bool),X4))))) | p(s(bool,'const.bool.IN_2'(s(fun(X0,X1),X2),s(fun(fun(X0,X1),bool),'const.util_prob.FUNSET_2'(s(fun(X0,bool),X3),s(fun(X1,bool),X4))))))))),
  inference(nnf_transformation,[],[f103])).
fof(f103,plain,(
  ! [X0,X1,X2,X3,X4] : (p(s(bool,'const.bool.IN_2'(s(fun(X0,X1),X2),s(fun(fun(X0,X1),bool),'const.util_prob.FUNSET_2'(s(fun(X0,bool),X3),s(fun(X1,bool),X4)))))) <=> ! [X5] : (~p(s(bool,'const.bool.IN_2'(s(X0,X5),s(fun(X0,bool),X3)))) | p(s(bool,'const.bool.IN_2'(s(X1,happ(s(fun(X0,X1),X2),s(X0,X5))),s(fun(X1,bool),X4))))))),
  inference(ennf_transformation,[],[f85])).
fof(f85,plain,(
  ! [X0,X1,X2,X3,X4] : (p(s(bool,'const.bool.IN_2'(s(fun(X0,X1),X2),s(fun(fun(X0,X1),bool),'const.util_prob.FUNSET_2'(s(fun(X0,bool),X3),s(fun(X1,bool),X4)))))) <=> ! [X5] : (p(s(bool,'const.bool.IN_2'(s(X0,X5),s(fun(X0,bool),X3)))) => p(s(bool,'const.bool.IN_2'(s(X1,happ(s(fun(X0,X1),X2),s(X0,X5))),s(fun(X1,bool),X4))))))),
  inference(flattening,[],[f84])).
fof(f84,plain,(
  ! [X0,X1] : ! [X2,X3,X4] : (p(s(bool,'const.bool.IN_2'(s(fun(X0,X1),X2),s(fun(fun(X0,X1),bool),'const.util_prob.FUNSET_2'(s(fun(X0,bool),X3),s(fun(X1,bool),X4)))))) <=> ! [X5] : (p(s(bool,'const.bool.IN_2'(s(X0,X5),s(fun(X0,bool),X3)))) => p(s(bool,'const.bool.IN_2'(s(X1,happ(s(fun(X0,X1),X2),s(X0,X5))),s(fun(X1,bool),X4))))))),
  inference(rectify,[],[f37])).
fof(f37,axiom,(
  ! [X6,X21] : ! [X19,X22,X23] : (p(s(bool,'const.bool.IN_2'(s(fun(X6,X21),X19),s(fun(fun(X6,X21),bool),'const.util_prob.FUNSET_2'(s(fun(X6,bool),X22),s(fun(X21,bool),X23)))))) <=> ! [X12] : (p(s(bool,'const.bool.IN_2'(s(X6,X12),s(fun(X6,bool),X22)))) => p(s(bool,'const.bool.IN_2'(s(X21,happ(s(fun(X6,X21),X19),s(X6,X12))),s(fun(X21,bool),X23))))))),
  file('thm.measure.MEASURE_DOWN','thm.util_prob.IN_FUNSET')).
fof(f4938,plain,(
  ( ! [X0] : (p(s(bool,'const.bool.IN_2'(s(fun(sK0,bool),happ(s(fun('type.num.num',fun(sK0,bool)),sK6(sK1,sK0)),s('type.num.num',X0))),s(fun(fun(sK0,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK2))))))) ) | $spl3),
  inference(subsumption_resolution,[],[f4917,f165])).
fof(f4917,plain,(
  ( ! [X0] : (~p(s(bool,'T_0')) | p(s(bool,'const.bool.IN_2'(s(fun(sK0,bool),happ(s(fun('type.num.num',fun(sK0,bool)),sK6(sK1,sK0)),s('type.num.num',X0))),s(fun(fun(sK0,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK2))))))) ) | $spl3),
  inference(superposition,[],[f1983,f3800])).
fof(f3800,plain,(
  ( ! [X8] : (s(bool,'T_0') = s(bool,'const.bool.IN_2'(s(fun(sK0,bool),happ(s(fun('type.num.num',fun(sK0,bool)),sK6(sK1,sK0)),s('type.num.num',X8))),s(fun(fun(sK0,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK1)))))) ) | $spl3),
  inference(resolution,[],[f3778,f175])).
fof(f3778,plain,(
  ( ! [X0] : (p(s(bool,'const.bool.IN_2'(s(fun(sK0,bool),happ(s(fun('type.num.num',fun(sK0,bool)),sK6(sK1,sK0)),s('type.num.num',X0))),s(fun(fun(sK0,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK1))))))) ) | $spl3),
  inference(subsumption_resolution,[],[f3729,f214])).
fof(f214,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.UNIV_0'))))) )),
  inference(cnf_transformation,[],[f65])).
fof(f65,plain,(
  ! [X0,X1] : p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.UNIV_0'))))),
  inference(flattening,[],[f64])).
fof(f64,plain,(
  ! [X0] : ! [X1] : p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.UNIV_0'))))),
  inference(rectify,[],[f35])).
fof(f35,axiom,(
  ! [X6] : ! [X12] : p(s(bool,'const.bool.IN_2'(s(X6,X12),s(fun(X6,bool),'const.pred_set.UNIV_0'))))),
  file('thm.measure.MEASURE_DOWN','thm.pred_set.IN_UNIV')).
fof(f3729,plain,(
  ( ! [X0] : (p(s(bool,'const.bool.IN_2'(s(fun(sK0,bool),happ(s(fun('type.num.num',fun(sK0,bool)),sK6(sK1,sK0)),s('type.num.num',X0))),s(fun(fun(sK0,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK1)))))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',X0),s(fun('type.num.num',bool),'const.pred_set.UNIV_0'))))) ) | $spl3),
  inference(resolution,[],[f3036,f244])).
fof(f244,plain,(
  ( ! [X6,X4,X2,X0,X3,X1] : (p(s(bool,'const.bool.IN_2'(s(X1,happ(s(fun(X0,X1),X2),s(X0,X6))),s(fun(X1,bool),X4)))) | ~p(s(bool,'const.bool.IN_2'(s(X0,X6),s(fun(X0,bool),X3)))) | ~p(s(bool,'const.bool.IN_2'(s(fun(X0,X1),X2),s(fun(fun(X0,X1),bool),'const.util_prob.FUNSET_2'(s(fun(X0,bool),X3),s(fun(X1,bool),X4))))))) )),
  inference(cnf_transformation,[],[f155])).
fof(f3036,plain,(
  p(s(bool,'const.bool.IN_2'(s(fun('type.num.num',fun(sK0,bool)),sK6(sK1,sK0)),s(fun(fun('type.num.num',fun(sK0,bool)),bool),'const.util_prob.FUNSET_2'(s(fun('type.num.num',bool),'const.pred_set.UNIV_0'),s(fun(fun(sK0,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK1)))))))) | $spl3),
  inference(resolution,[],[f1085,f227])).
fof(f227,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.measure.countably_additive_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))) | p(s(bool,'const.bool.IN_2'(s(fun('type.num.num',fun(X0,bool)),sK6(X1,X0)),s(fun(fun('type.num.num',fun(X0,bool)),bool),'const.util_prob.FUNSET_2'(s(fun('type.num.num',bool),'const.pred_set.UNIV_0'),s(fun(fun(X0,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1))))))))) )),
  inference(cnf_transformation,[],[f145])).
fof(f5278,plain,(
  p(s(bool,'const.measure.countably_additive_1'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK1)))) | s('type.num.num',sK4(sK6(sK1,sK0),sK2,sK0)) = s('type.num.num',sK5(sK6(sK1,sK0),sK2,sK0)) | $spl3),
  inference(resolution,[],[f5251,f228])).
fof(f228,plain,(
  ( ! [X4,X0,X3,X1] : (p(s(bool,'const.measure.countably_additive_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))) | p(s(bool,'const.pred_set.DISJOINT_2'(s(fun(X0,bool),happ(s(fun('type.num.num',fun(X0,bool)),sK6(X1,X0)),s('type.num.num',X3))),s(fun(X0,bool),happ(s(fun('type.num.num',fun(X0,bool)),sK6(X1,X0)),s('type.num.num',X4)))))) | s('type.num.num',X3) = s('type.num.num',X4)) )),
  inference(cnf_transformation,[],[f145])).
fof(f5251,plain,(
  ~p(s(bool,'const.pred_set.DISJOINT_2'(s(fun(sK0,bool),happ(s(fun('type.num.num',fun(sK0,bool)),sK6(sK1,sK0)),s('type.num.num',sK4(sK6(sK1,sK0),sK2,sK0)))),s(fun(sK0,bool),happ(s(fun('type.num.num',fun(sK0,bool)),sK6(sK1,sK0)),s('type.num.num',sK5(sK6(sK1,sK0),sK2,sK0))))))) | $spl3),
  inference(subsumption_resolution,[],[f5250,f165])).
fof(f5250,plain,(
  ~p(s(bool,'T_0')) | ~p(s(bool,'const.pred_set.DISJOINT_2'(s(fun(sK0,bool),happ(s(fun('type.num.num',fun(sK0,bool)),sK6(sK1,sK0)),s('type.num.num',sK4(sK6(sK1,sK0),sK2,sK0)))),s(fun(sK0,bool),happ(s(fun('type.num.num',fun(sK0,bool)),sK6(sK1,sK0)),s('type.num.num',sK5(sK6(sK1,sK0),sK2,sK0))))))) | $spl3),
  inference(forward_demodulation,[],[f5249,f447])).
fof(f5249,plain,(
  ~p(s(bool,'const.pred_set.DISJOINT_2'(s(fun(sK0,bool),happ(s(fun('type.num.num',fun(sK0,bool)),sK6(sK1,sK0)),s('type.num.num',sK4(sK6(sK1,sK0),sK2,sK0)))),s(fun(sK0,bool),happ(s(fun('type.num.num',fun(sK0,bool)),sK6(sK1,sK0)),s('type.num.num',sK5(sK6(sK1,sK0),sK2,sK0))))))) | ~p(s(bool,'const.measure.countably_additive_1'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK2)))) | $spl3),
  inference(subsumption_resolution,[],[f5248,f3071])).
fof(f5248,plain,(
  p(s(bool,'const.seq.sums_2'(s(fun('type.num.num','type.realax.real'),'const.combin.o_2'(s(fun(fun(sK0,bool),'type.realax.real'),'const.measure.measure_1'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK1))),s(fun('type.num.num',fun(sK0,bool)),sK6(sK1,sK0)))),s('type.realax.real','const.measure.measure_2'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK1),s(fun(sK0,bool),'const.pred_set.BIGUNION_1'(s(fun(fun(sK0,bool),bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',fun(sK0,bool)),sK6(sK1,sK0)),s(fun('type.num.num',bool),'const.pred_set.UNIV_0')))))))))) | ~p(s(bool,'const.pred_set.DISJOINT_2'(s(fun(sK0,bool),happ(s(fun('type.num.num',fun(sK0,bool)),sK6(sK1,sK0)),s('type.num.num',sK4(sK6(sK1,sK0),sK2,sK0)))),s(fun(sK0,bool),happ(s(fun('type.num.num',fun(sK0,bool)),sK6(sK1,sK0)),s('type.num.num',sK5(sK6(sK1,sK0),sK2,sK0))))))) | ~p(s(bool,'const.measure.countably_additive_1'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK2)))) | $spl3),
  inference(forward_demodulation,[],[f5247,f162])).
fof(f5247,plain,(
  p(s(bool,'const.seq.sums_2'(s(fun('type.num.num','type.realax.real'),'const.combin.o_2'(s(fun(fun(sK0,bool),'type.realax.real'),'const.measure.measure_1'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK2))),s(fun('type.num.num',fun(sK0,bool)),sK6(sK1,sK0)))),s('type.realax.real','const.measure.measure_2'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK1),s(fun(sK0,bool),'const.pred_set.BIGUNION_1'(s(fun(fun(sK0,bool),bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',fun(sK0,bool)),sK6(sK1,sK0)),s(fun('type.num.num',bool),'const.pred_set.UNIV_0')))))))))) | ~p(s(bool,'const.pred_set.DISJOINT_2'(s(fun(sK0,bool),happ(s(fun('type.num.num',fun(sK0,bool)),sK6(sK1,sK0)),s('type.num.num',sK4(sK6(sK1,sK0),sK2,sK0)))),s(fun(sK0,bool),happ(s(fun('type.num.num',fun(sK0,bool)),sK6(sK1,sK0)),s('type.num.num',sK5(sK6(sK1,sK0),sK2,sK0))))))) | ~p(s(bool,'const.measure.countably_additive_1'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK2)))) | $spl3),
  inference(forward_demodulation,[],[f5246,f1172])).
fof(f5246,plain,(
  p(s(bool,'const.seq.sums_2'(s(fun('type.num.num','type.realax.real'),'const.combin.o_2'(s(fun(fun(sK0,bool),'type.realax.real'),'const.measure.measure_1'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK2))),s(fun('type.num.num',fun(sK0,bool)),sK6(sK1,sK0)))),s('type.realax.real','const.measure.measure_2'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK2),s(fun(sK0,bool),'const.pred_set.BIGUNION_1'(s(fun(fun(sK0,bool),bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',fun(sK0,bool)),sK6(sK1,sK0)),s(fun('type.num.num',bool),'const.pred_set.UNIV_0')))))))))) | ~p(s(bool,'const.pred_set.DISJOINT_2'(s(fun(sK0,bool),happ(s(fun('type.num.num',fun(sK0,bool)),sK6(sK1,sK0)),s('type.num.num',sK4(sK6(sK1,sK0),sK2,sK0)))),s(fun(sK0,bool),happ(s(fun('type.num.num',fun(sK0,bool)),sK6(sK1,sK0)),s('type.num.num',sK5(sK6(sK1,sK0),sK2,sK0))))))) | ~p(s(bool,'const.measure.countably_additive_1'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK2)))) | $spl3),
  inference(forward_demodulation,[],[f5245,f233])).
fof(f5245,plain,(
  p(s(bool,'const.seq.sums_2'(s(fun('type.num.num','type.realax.real'),'const.combin.o_2'(s(fun(fun(sK0,bool),'type.realax.real'),'const.measure.measure_1'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK2))),s(fun('type.num.num',fun(sK0,bool)),sK6(sK1,sK0)))),s('type.realax.real',happ(s(fun(fun(sK0,bool),'type.realax.real'),'const.measure.measure_1'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK2))),s(fun(sK0,bool),'const.pred_set.BIGUNION_1'(s(fun(fun(sK0,bool),bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',fun(sK0,bool)),sK6(sK1,sK0)),s(fun('type.num.num',bool),'const.pred_set.UNIV_0')))))))))) | ~p(s(bool,'const.pred_set.DISJOINT_2'(s(fun(sK0,bool),happ(s(fun('type.num.num',fun(sK0,bool)),sK6(sK1,sK0)),s('type.num.num',sK4(sK6(sK1,sK0),sK2,sK0)))),s(fun(sK0,bool),happ(s(fun('type.num.num',fun(sK0,bool)),sK6(sK1,sK0)),s('type.num.num',sK5(sK6(sK1,sK0),sK2,sK0))))))) | ~p(s(bool,'const.measure.countably_additive_1'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK2)))) | $spl3),
  inference(subsumption_resolution,[],[f5195,f4935])).
fof(f5195,plain,(
  p(s(bool,'const.seq.sums_2'(s(fun('type.num.num','type.realax.real'),'const.combin.o_2'(s(fun(fun(sK0,bool),'type.realax.real'),'const.measure.measure_1'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK2))),s(fun('type.num.num',fun(sK0,bool)),sK6(sK1,sK0)))),s('type.realax.real',happ(s(fun(fun(sK0,bool),'type.realax.real'),'const.measure.measure_1'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK2))),s(fun(sK0,bool),'const.pred_set.BIGUNION_1'(s(fun(fun(sK0,bool),bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',fun(sK0,bool)),sK6(sK1,sK0)),s(fun('type.num.num',bool),'const.pred_set.UNIV_0')))))))))) | ~p(s(bool,'const.bool.IN_2'(s(fun(sK0,bool),'const.pred_set.BIGUNION_1'(s(fun(fun(sK0,bool),bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',fun(sK0,bool)),sK6(sK1,sK0)),s(fun('type.num.num',bool),'const.pred_set.UNIV_0'))))),s(fun(fun(sK0,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK2)))))) | ~p(s(bool,'const.pred_set.DISJOINT_2'(s(fun(sK0,bool),happ(s(fun('type.num.num',fun(sK0,bool)),sK6(sK1,sK0)),s('type.num.num',sK4(sK6(sK1,sK0),sK2,sK0)))),s(fun(sK0,bool),happ(s(fun('type.num.num',fun(sK0,bool)),sK6(sK1,sK0)),s('type.num.num',sK5(sK6(sK1,sK0),sK2,sK0))))))) | ~p(s(bool,'const.measure.countably_additive_1'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK2)))) | $spl3),
  inference(resolution,[],[f4940,f226])).
fof(f226,plain,(
  ( ! [X0,X5,X1] : (p(s(bool,'const.seq.sums_2'(s(fun('type.num.num','type.realax.real'),'const.combin.o_2'(s(fun(fun(X0,bool),'type.realax.real'),'const.measure.measure_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1))),s(fun('type.num.num',fun(X0,bool)),X5))),s('type.realax.real',happ(s(fun(fun(X0,bool),'type.realax.real'),'const.measure.measure_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1))),s(fun(X0,bool),'const.pred_set.BIGUNION_1'(s(fun(fun(X0,bool),bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',fun(X0,bool)),X5),s(fun('type.num.num',bool),'const.pred_set.UNIV_0')))))))))) | ~p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),'const.pred_set.BIGUNION_1'(s(fun(fun(X0,bool),bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',fun(X0,bool)),X5),s(fun('type.num.num',bool),'const.pred_set.UNIV_0'))))),s(fun(fun(X0,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))) | ~p(s(bool,'const.pred_set.DISJOINT_2'(s(fun(X0,bool),happ(s(fun('type.num.num',fun(X0,bool)),X5),s('type.num.num',sK4(X5,X1,X0)))),s(fun(X0,bool),happ(s(fun('type.num.num',fun(X0,bool)),X5),s('type.num.num',sK5(X5,X1,X0))))))) | ~p(s(bool,'const.bool.IN_2'(s(fun('type.num.num',fun(X0,bool)),X5),s(fun(fun('type.num.num',fun(X0,bool)),bool),'const.util_prob.FUNSET_2'(s(fun('type.num.num',bool),'const.pred_set.UNIV_0'),s(fun(fun(X0,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))))) | ~p(s(bool,'const.measure.countably_additive_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1))))) )),
  inference(cnf_transformation,[],[f145])).
fof(f5323,plain,(
  $false | $spl3),
  inference(subsumption_resolution,[],[f5277,f5244])).
fof(f5277,plain,(
  s('type.num.num',sK4(sK6(sK1,sK0),sK2,sK0)) = s('type.num.num',sK5(sK6(sK1,sK0),sK2,sK0)) | $spl3),
  inference(resolution,[],[f5251,f3037])).
fof(f3037,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.pred_set.DISJOINT_2'(s(fun(sK0,bool),happ(s(fun('type.num.num',fun(sK0,bool)),sK6(sK1,sK0)),s('type.num.num',X0))),s(fun(sK0,bool),happ(s(fun('type.num.num',fun(sK0,bool)),sK6(sK1,sK0)),s('type.num.num',X1)))))) | s('type.num.num',X0) = s('type.num.num',X1)) ) | $spl3),
  inference(resolution,[],[f1085,f228])).
fof(f2962,plain,(
  $false | $spl1),
  inference(subsumption_resolution,[],[f2961,f266])).
fof(f266,plain,(
  p(s(bool,'T_0'))),
  inference(trivial_inequality_removal,[],[f215])).
fof(f215,plain,(
  ( ! [X0,X1] : (p(s(bool,'T_0')) | s(X0,X1) != s(X0,X1)) )),
  inference(cnf_transformation,[],[f136])).
fof(f136,plain,(
  ! [X0,X1] : ((s(X0,X1) != s(X0,X1) | p(s(bool,'T_0'))) & (~p(s(bool,'T_0')) | s(X0,X1) = s(X0,X1)))),
  inference(nnf_transformation,[],[f67])).
fof(f67,plain,(
  ! [X0,X1] : (s(X0,X1) = s(X0,X1) <=> p(s(bool,'T_0')))),
  inference(flattening,[],[f66])).
fof(f66,plain,(
  ! [X0] : ! [X1] : (s(X0,X1) = s(X0,X1) <=> p(s(bool,'T_0')))),
  inference(rectify,[],[f24])).
fof(f24,axiom,(
  ! [X6] : ! [X12] : (s(X6,X12) = s(X6,X12) <=> p(s(bool,'T_0')))),
  file('thm.measure.MEASURE_DOWN','thm.bool.REFL_CLAUSE')).
fof(f2961,plain,(
  ~p(s(bool,'T_0')) | $spl1),
  inference(forward_demodulation,[],[f2960,f394])).
fof(f394,plain,(
  s(bool,'T_0') = s(bool,'const.measure.positive_1'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK2)))),
  inference(resolution,[],[f280,f175])).
fof(f280,plain,(
  p(s(bool,'const.measure.positive_1'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK2))))),
  inference(resolution,[],[f163,f222])).
fof(f222,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.measure.positive_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))) | ~p(s(bool,'const.measure.measure_space_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1))))) )),
  inference(cnf_transformation,[],[f142])).
fof(f2960,plain,(
  ~p(s(bool,'const.measure.positive_1'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK2)))) | $spl1),
  inference(subsumption_resolution,[],[f2959,f171])).
fof(f2959,plain,(
  p(s(bool,'F_0')) | ~p(s(bool,'const.measure.positive_1'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK2)))) | $spl1),
  inference(forward_demodulation,[],[f2958,f1637])).
fof(f1637,plain,(
  s(bool,'F_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.realax.real','const.measure.measure_2'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK1),s(fun(sK0,bool),sK3(sK1,sK0)))))) | $spl1),
  inference(resolution,[],[f1548,f179])).
fof(f1548,plain,(
  ~p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.realax.real','const.measure.measure_2'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK1),s(fun(sK0,bool),sK3(sK1,sK0))))))) | $spl1),
  inference(subsumption_resolution,[],[f1088,f1535])).
fof(f1535,plain,(
  s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.realax.real','const.measure.measure_2'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK1),s(fun(sK0,bool),'const.pred_set.EMPTY_0')))),
  inference(superposition,[],[f1172,f392])).
fof(f392,plain,(
  s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.realax.real','const.measure.measure_2'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK2),s(fun(sK0,bool),'const.pred_set.EMPTY_0')))),
  inference(resolution,[],[f280,f217])).
fof(f217,plain,(
  ( ! [X0,X1] : (s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.realax.real','const.measure.measure_2'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),'const.pred_set.EMPTY_0'))) | ~p(s(bool,'const.measure.positive_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1))))) )),
  inference(cnf_transformation,[],[f140])).
fof(f140,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.measure.positive_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))) | (s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.realax.real','const.measure.measure_2'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),'const.pred_set.EMPTY_0'))) & ! [X3] : (~p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X3),s(fun(fun(X0,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))) | p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.realax.real','const.measure.measure_2'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),X3))))))))) & (s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.realax.real','const.measure.measure_2'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),'const.pred_set.EMPTY_0'))) | (p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),sK3(X1,X0)),s(fun(fun(X0,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))) & ~p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.realax.real','const.measure.measure_2'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),sK3(X1,X0)))))))) | p(s(bool,'const.measure.positive_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK3])],[f139])).
fof(f139,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.measure.positive_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))) | (s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.realax.real','const.measure.measure_2'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),'const.pred_set.EMPTY_0'))) & ! [X3] : (~p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X3),s(fun(fun(X0,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))) | p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.realax.real','const.measure.measure_2'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),X3))))))))) & (s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.realax.real','const.measure.measure_2'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),'const.pred_set.EMPTY_0'))) | ? [X2] : (p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X2),s(fun(fun(X0,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))) & ~p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.realax.real','const.measure.measure_2'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),X2))))))) | p(s(bool,'const.measure.positive_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1))))))),
  inference(rectify,[],[f138])).
fof(f138,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.measure.positive_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))) | (s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.realax.real','const.measure.measure_2'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),'const.pred_set.EMPTY_0'))) & ! [X2] : (~p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X2),s(fun(fun(X0,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))) | p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.realax.real','const.measure.measure_2'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),X2))))))))) & (s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.realax.real','const.measure.measure_2'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),'const.pred_set.EMPTY_0'))) | ? [X2] : (p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X2),s(fun(fun(X0,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))) & ~p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.realax.real','const.measure.measure_2'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),X2))))))) | p(s(bool,'const.measure.positive_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1))))))),
  inference(flattening,[],[f137])).
fof(f137,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.measure.positive_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))) | (s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.realax.real','const.measure.measure_2'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),'const.pred_set.EMPTY_0'))) & ! [X2] : (~p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X2),s(fun(fun(X0,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))) | p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.realax.real','const.measure.measure_2'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),X2))))))))) & ((s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.realax.real','const.measure.measure_2'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),'const.pred_set.EMPTY_0'))) | ? [X2] : (p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X2),s(fun(fun(X0,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))) & ~p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.realax.real','const.measure.measure_2'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),X2)))))))) | p(s(bool,'const.measure.positive_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1))))))),
  inference(nnf_transformation,[],[f96])).
fof(f96,plain,(
  ! [X0,X1] : (p(s(bool,'const.measure.positive_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))) <=> (s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.realax.real','const.measure.measure_2'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),'const.pred_set.EMPTY_0'))) & ! [X2] : (~p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X2),s(fun(fun(X0,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))) | p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.realax.real','const.measure.measure_2'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),X2)))))))))),
  inference(ennf_transformation,[],[f69])).
fof(f69,plain,(
  ! [X0,X1] : (p(s(bool,'const.measure.positive_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))) <=> (s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.realax.real','const.measure.measure_2'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),'const.pred_set.EMPTY_0'))) & ! [X2] : (p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X2),s(fun(fun(X0,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))) => p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.realax.real','const.measure.measure_2'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),X2)))))))))),
  inference(flattening,[],[f68])).
fof(f68,plain,(
  ! [X0] : ! [X1] : (p(s(bool,'const.measure.positive_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))) <=> (s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.realax.real','const.measure.measure_2'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),'const.pred_set.EMPTY_0'))) & ! [X2] : (p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X2),s(fun(fun(X0,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))) => p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.realax.real','const.measure.measure_2'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),X2)))))))))),
  inference(rectify,[],[f32])).
fof(f32,axiom,(
  ! [X6] : ! [X17] : (p(s(bool,'const.measure.positive_1'(s('type.pair.prod'(fun(X6,bool),'type.pair.prod'(fun(fun(X6,bool),bool),fun(fun(X6,bool),'type.realax.real'))),X17)))) <=> (s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.realax.real','const.measure.measure_2'(s('type.pair.prod'(fun(X6,bool),'type.pair.prod'(fun(fun(X6,bool),bool),fun(fun(X6,bool),'type.realax.real'))),X17),s(fun(X6,bool),'const.pred_set.EMPTY_0'))) & ! [X18] : (p(s(bool,'const.bool.IN_2'(s(fun(X6,bool),X18),s(fun(fun(X6,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X6,bool),'type.pair.prod'(fun(fun(X6,bool),bool),fun(fun(X6,bool),'type.realax.real'))),X17)))))) => p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.realax.real','const.measure.measure_2'(s('type.pair.prod'(fun(X6,bool),'type.pair.prod'(fun(fun(X6,bool),bool),fun(fun(X6,bool),'type.realax.real'))),X17),s(fun(X6,bool),X18)))))))))),
  file('thm.measure.MEASURE_DOWN','thm.measure.positive_def')).
fof(f1088,plain,(
  ~p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.realax.real','const.measure.measure_2'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK1),s(fun(sK0,bool),sK3(sK1,sK0))))))) | s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.realax.real','const.measure.measure_2'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK1),s(fun(sK0,bool),'const.pred_set.EMPTY_0'))) | $spl1),
  inference(resolution,[],[f1083,f220])).
fof(f220,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.measure.positive_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))) | ~p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.realax.real','const.measure.measure_2'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),sK3(X1,X0))))))) | s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.realax.real','const.measure.measure_2'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')))) )),
  inference(cnf_transformation,[],[f140])).
fof(f2958,plain,(
  p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.realax.real','const.measure.measure_2'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK1),s(fun(sK0,bool),sK3(sK1,sK0))))))) | ~p(s(bool,'const.measure.positive_1'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK2)))) | $spl1),
  inference(forward_demodulation,[],[f2921,f1172])).
fof(f2921,plain,(
  p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.realax.real','const.measure.measure_2'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK2),s(fun(sK0,bool),sK3(sK1,sK0))))))) | ~p(s(bool,'const.measure.positive_1'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK2)))) | $spl1),
  inference(resolution,[],[f2822,f218])).
fof(f218,plain,(
  ( ! [X0,X3,X1] : (p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.realax.real','const.measure.measure_2'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),X3)))))) | ~p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X3),s(fun(fun(X0,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))) | ~p(s(bool,'const.measure.positive_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1))))) )),
  inference(cnf_transformation,[],[f140])).
fof(f2822,plain,(
  p(s(bool,'const.bool.IN_2'(s(fun(sK0,bool),sK3(sK1,sK0)),s(fun(fun(sK0,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK2)))))) | $spl1),
  inference(subsumption_resolution,[],[f2743,f165])).
fof(f2743,plain,(
  ~p(s(bool,'T_0')) | p(s(bool,'const.bool.IN_2'(s(fun(sK0,bool),sK3(sK1,sK0)),s(fun(fun(sK0,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK2)))))) | $spl1),
  inference(superposition,[],[f1579,f1984])).
fof(f1984,plain,(
  s(bool,'T_0') = s(bool,'const.pred_set.SUBSET_2'(s(fun(fun(sK0,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK1))),s(fun(fun(sK0,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK2)))))),
  inference(resolution,[],[f161,f175])).
fof(f1579,plain,(
  ( ! [X3] : (~p(s(bool,'const.pred_set.SUBSET_2'(s(fun(fun(sK0,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK1))),s(fun(fun(sK0,bool),bool),X3)))) | p(s(bool,'const.bool.IN_2'(s(fun(sK0,bool),sK3(sK1,sK0)),s(fun(fun(sK0,bool),bool),X3))))) ) | $spl1),
  inference(resolution,[],[f1549,f236])).
fof(f1549,plain,(
  p(s(bool,'const.bool.IN_2'(s(fun(sK0,bool),sK3(sK1,sK0)),s(fun(fun(sK0,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK1)))))) | $spl1),
  inference(subsumption_resolution,[],[f1087,f1535])).
fof(f1087,plain,(
  p(s(bool,'const.bool.IN_2'(s(fun(sK0,bool),sK3(sK1,sK0)),s(fun(fun(sK0,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK1)))))) | s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.realax.real','const.measure.measure_2'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK1),s(fun(sK0,bool),'const.pred_set.EMPTY_0'))) | $spl1),
  inference(resolution,[],[f1083,f219])).
fof(f219,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.measure.positive_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))) | p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),sK3(X1,X0)),s(fun(fun(X0,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))) | s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.realax.real','const.measure.measure_2'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')))) )),
  inference(cnf_transformation,[],[f140])).
fof(f2179,plain,(
  s(bool,f(s(sK0,sK8('const.pred_set.EMPTY_0',sK3(sK1,sK0),bool,sK0)))) != s(bool,g(s(sK0,sK8('const.pred_set.EMPTY_0',sK3(sK1,sK0),bool,sK0)))) | $spl9),
  inference(cnf_transformation,[],[f2179_D])).
fof(f2179_D,plain,(
  s(bool,f(s(sK0,sK8('const.pred_set.EMPTY_0',sK3(sK1,sK0),bool,sK0)))) != s(bool,g(s(sK0,sK8('const.pred_set.EMPTY_0',sK3(sK1,sK0),bool,sK0)))) <=> ~$spl9),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl9])])).
fof(f1326,plain,(
  ~p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | $spl7),
  inference(cnf_transformation,[],[f1326_D])).
fof(f1326_D,plain,(
  ~p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0')))))) <=> ~$spl7),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl7])])).
fof(f2170,plain,(
  ~p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s(bool,f(s(sK0,sK8('const.pred_set.EMPTY_0',sK3(sK1,sK0),bool,sK0)))) != s(bool,g(s(sK0,sK8('const.pred_set.EMPTY_0',sK3(sK1,sK0),bool,sK0)))) | $spl1),
  inference(subsumption_resolution,[],[f2169,f171])).
fof(f2169,plain,(
  p(s(bool,'F_0')) | ~p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s(bool,f(s(sK0,sK8('const.pred_set.EMPTY_0',sK3(sK1,sK0),bool,sK0)))) != s(bool,g(s(sK0,sK8('const.pred_set.EMPTY_0',sK3(sK1,sK0),bool,sK0)))) | $spl1),
  inference(forward_demodulation,[],[f2168,f1092])).
fof(f1092,plain,(
  s(bool,'F_0') = s(bool,'const.measure.positive_1'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK1))) | $spl1),
  inference(resolution,[],[f1083,f179])).
fof(f2168,plain,(
  ~p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | p(s(bool,'const.measure.positive_1'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK1)))) | s(bool,f(s(sK0,sK8('const.pred_set.EMPTY_0',sK3(sK1,sK0),bool,sK0)))) != s(bool,g(s(sK0,sK8('const.pred_set.EMPTY_0',sK3(sK1,sK0),bool,sK0))))),
  inference(subsumption_resolution,[],[f2157,f1535])).
fof(f2157,plain,(
  ~p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | p(s(bool,'const.measure.positive_1'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK1)))) | s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.realax.real','const.measure.measure_2'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK1),s(fun(sK0,bool),'const.pred_set.EMPTY_0'))) | s(bool,f(s(sK0,sK8('const.pred_set.EMPTY_0',sK3(sK1,sK0),bool,sK0)))) != s(bool,g(s(sK0,sK8('const.pred_set.EMPTY_0',sK3(sK1,sK0),bool,sK0))))),
  inference(superposition,[],[f220,f1560])).
fof(f1560,plain,(
  ( ! [X0] : (s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.realax.real','const.measure.measure_2'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK1),s(fun(sK0,bool),X0))) | s(bool,f(s(sK0,sK8('const.pred_set.EMPTY_0',X0,bool,sK0)))) != s(bool,g(s(sK0,sK8('const.pred_set.EMPTY_0',X0,bool,sK0))))) )),
  inference(superposition,[],[f1535,f243])).
fof(f243,plain,(
  ( ! [X2,X0,X3,X1] : (s(fun(X0,X1),X2) = s(fun(X0,X1),X3) | s(X1,f(s(X0,sK8(X3,X2,X1,X0)))) != s(X1,g(s(X0,sK8(X3,X2,X1,X0))))) )),
  inference(cnf_transformation,[],[f152])).
fof(f152,plain,(
  ! [X0,X1,X2,X3] : (s(X1,f(s(X0,sK8(X3,X2,X1,X0)))) != s(X1,g(s(X0,sK8(X3,X2,X1,X0)))) | s(fun(X0,X1),X2) = s(fun(X0,X1),X3))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK8])],[f102])).
fof(f102,plain,(
  ! [X0,X1,X2,X3] : (? [X4] : s(X1,f(s(X0,X4))) != s(X1,g(s(X0,X4))) | s(fun(X0,X1),X2) = s(fun(X0,X1),X3))),
  inference(ennf_transformation,[],[f83])).
fof(f83,plain,(
  ! [X0,X1,X2,X3] : (! [X4] : s(X1,f(s(X0,X4))) = s(X1,g(s(X0,X4))) => s(fun(X0,X1),X2) = s(fun(X0,X1),X3))),
  inference(flattening,[],[f82])).
fof(f82,plain,(
  ! [X0,X1] : ! [X2,X3] : (! [X4] : s(X1,f(s(X0,X4))) = s(X1,g(s(X0,X4))) => s(fun(X0,X1),X2) = s(fun(X0,X1),X3))),
  inference(rectify,[],[f4])).
fof(f4,axiom,(
  ! [X1,X2] : ! [X3,X4] : (! [X5] : s(X2,f(s(X1,X5))) = s(X2,g(s(X1,X5))) => s(fun(X1,X2),X3) = s(fun(X1,X2),X4))),
  file('thm.measure.MEASURE_DOWN',aHL_EXT)).
fof(f1325,plain,(
  ~p(s(bool,'const.bool.IN_2'(s(fun(sK0,bool),'const.pred_set.EMPTY_0'),s(fun(fun(sK0,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK2)))))) | $spl5),
  inference(cnf_transformation,[],[f1325_D])).
fof(f1325_D,plain,(
  ~p(s(bool,'const.bool.IN_2'(s(fun(sK0,bool),'const.pred_set.EMPTY_0'),s(fun(fun(sK0,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK2)))))) <=> ~$spl5),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl5])])).
fof(f1327,plain,(
  p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | $spl6),
  inference(cnf_transformation,[],[f1327_D])).
fof(f1327_D,plain,(
  p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0')))))) <=> ~$spl6),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl6])])).
fof(f1077,plain,(
  p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | ~p(s(bool,'const.bool.IN_2'(s(fun(sK0,bool),'const.pred_set.EMPTY_0'),s(fun(fun(sK0,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK2))))))),
  inference(subsumption_resolution,[],[f1076,f165])).
fof(f1076,plain,(
  ~p(s(bool,'T_0')) | p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | ~p(s(bool,'const.bool.IN_2'(s(fun(sK0,bool),'const.pred_set.EMPTY_0'),s(fun(fun(sK0,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK2))))))),
  inference(forward_demodulation,[],[f1066,f394])).
fof(f1066,plain,(
  p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | ~p(s(bool,'const.bool.IN_2'(s(fun(sK0,bool),'const.pred_set.EMPTY_0'),s(fun(fun(sK0,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK2)))))) | ~p(s(bool,'const.measure.positive_1'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK2))))),
  inference(superposition,[],[f218,f392])).
fof(f1083,plain,(
  ~p(s(bool,'const.measure.positive_1'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK1)))) | $spl1),
  inference(cnf_transformation,[],[f1083_D])).
fof(f1083_D,plain,(
  ~p(s(bool,'const.measure.positive_1'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK1)))) <=> ~$spl1),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1])])).
fof(f1085,plain,(
  ~p(s(bool,'const.measure.countably_additive_1'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK1)))) | $spl3),
  inference(cnf_transformation,[],[f1085_D])).
fof(f1085_D,plain,(
  ~p(s(bool,'const.measure.countably_additive_1'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK1)))) <=> ~$spl3),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl3])])).
fof(f360,plain,(
  ~p(s(bool,'const.measure.countably_additive_1'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK1)))) | ~p(s(bool,'const.measure.positive_1'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK1))))),
  inference(subsumption_resolution,[],[f329,f160])).
fof(f160,plain,(
  p(s(bool,'const.measure.sigma_algebra_1'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK1))),s(fun(fun(sK0,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK1))))))))),
  inference(cnf_transformation,[],[f108])).
fof(f329,plain,(
  ~p(s(bool,'const.measure.countably_additive_1'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK1)))) | ~p(s(bool,'const.measure.positive_1'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK1)))) | ~p(s(bool,'const.measure.sigma_algebra_1'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK1))),s(fun(fun(sK0,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK1))))))))),
  inference(resolution,[],[f164,f224])).
fof(f224,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.measure.measure_space_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))) | ~p(s(bool,'const.measure.countably_additive_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))) | ~p(s(bool,'const.measure.positive_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))) | ~p(s(bool,'const.measure.sigma_algebra_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),'const.pair.,_2'(s(fun(X0,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1))),s(fun(fun(X0,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1))))))))) )),
  inference(cnf_transformation,[],[f142])).
fof(f164,plain,(
  ~p(s(bool,'const.measure.measure_space_1'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK1))))),
  inference(cnf_transformation,[],[f108])).
% SZS output end Proof for thm.measure
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 144
% Passive clauses: 580
% Generated clauses: 5073
% Final active clauses: 115
% Final passive clauses: 433
% Input formulas: 37
% Initial clauses: 101
% 
% Duplicate literals: 82
% Trivial inequalities: 88
% Fw subsumption resolutions: 580
% Bw subsumption resolutions: 2
% Fw demodulations: 1038
% Bw demodulations: 26
% Condensations: 154
% Global subsumptions: 2
% 
% Simple tautologies: 198
% Equational tautologies: 1
% Forward subsumptions: 2400
% Backward subsumptions: 28
% 
% Binary resolution: 725
% Forward superposition: 1058
% Backward superposition: 1310
% Self superposition: 4
% Equality resolution: 1
% 
% Split clauses: 3
% Split components: 6
% SAT solver clauses: 590
% SAT solver unit clauses: 23
% SAT solver binary clauses: 88
% 
% Sat splits: 3
% Sat splitting refutations: 3
% 
% Memory used [KB]: 5245
% Time elapsed: 0.189 s
% ------------------------------
% ------------------------------
% Success in time 16.552 s
