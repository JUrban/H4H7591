Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 299 next slice time: 5
dis+11_7_3 on thm.integral
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.integral
% SZS output start Proof for thm.integral
fof(f7771,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f7770,f246,f434,f432,f7710])).
fof(f7710,plain,(
  $false | $spl3),
  inference(resolution,[],[f5593,f434])).
fof(f5593,plain,(
  ( ! [X0] : (p(s(bool,'const.real.real_lte_2'(s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),sK12),s('type.num.num',X0))),s('type.realax.real',sK14))))) )),
  inference(resolution,[],[f351,f245])).
fof(f245,plain,(
  p(s(bool,'const.transc.division_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s(fun('type.num.num','type.realax.real'),sK12))))),
  inference(cnf_transformation,[],[f155])).
fof(f155,plain,(
  p(s(bool,'const.transc.division_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s(fun('type.num.num','type.realax.real'),sK12)))) & (~p(s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),sK12),s('type.num.num',sK15)))))) | ~p(s(bool,'const.real.real_lte_2'(s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),sK12),s('type.num.num',sK15))),s('type.realax.real',sK14)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK12,sK13,sK14,sK15])],[f113])).
fof(f113,plain,(
  ? [X0,X1,X2] : (p(s(bool,'const.transc.division_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X1),s('type.realax.real',X2))),s(fun('type.num.num','type.realax.real'),X0)))) & ? [X3] : (~p(s(bool,'const.real.real_lte_2'(s('type.realax.real',X1),s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X0),s('type.num.num',X3)))))) | ~p(s(bool,'const.real.real_lte_2'(s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X0),s('type.num.num',X3))),s('type.realax.real',X2))))))),
  inference(ennf_transformation,[],[f46])).
fof(f46,plain,(
  ~! [X0,X1,X2] : (p(s(bool,'const.transc.division_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X1),s('type.realax.real',X2))),s(fun('type.num.num','type.realax.real'),X0)))) => ! [X3] : (p(s(bool,'const.real.real_lte_2'(s('type.realax.real',X1),s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X0),s('type.num.num',X3)))))) & p(s(bool,'const.real.real_lte_2'(s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X0),s('type.num.num',X3))),s('type.realax.real',X2))))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7,X8] : (p(s(bool,'const.transc.division_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X7),s('type.realax.real',X8))),s(fun('type.num.num','type.realax.real'),X6)))) => ! [X9] : (p(s(bool,'const.real.real_lte_2'(s('type.realax.real',X7),s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X6),s('type.num.num',X9)))))) & p(s(bool,'const.real.real_lte_2'(s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X6),s('type.num.num',X9))),s('type.realax.real',X8))))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7,X8] : (p(s(bool,'const.transc.division_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X7),s('type.realax.real',X8))),s(fun('type.num.num','type.realax.real'),X6)))) => ! [X9] : (p(s(bool,'const.real.real_lte_2'(s('type.realax.real',X7),s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X6),s('type.num.num',X9)))))) & p(s(bool,'const.real.real_lte_2'(s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X6),s('type.num.num',X9))),s('type.realax.real',X8))))))),
  file('thm.integral.DIVISION_BOUNDS','thm.integral.DIVISION_BOUNDS')).
fof(f351,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,'const.transc.division_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X1),s('type.realax.real',X2))),s(fun('type.num.num','type.realax.real'),X0)))) | p(s(bool,'const.real.real_lte_2'(s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X0),s('type.num.num',X3))),s('type.realax.real',X2))))) )),
  inference(cnf_transformation,[],[f135])).
fof(f135,plain,(
  ! [X0,X1,X2] : (~p(s(bool,'const.transc.division_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X1),s('type.realax.real',X2))),s(fun('type.num.num','type.realax.real'),X0)))) | ! [X3] : p(s(bool,'const.real.real_lte_2'(s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X0),s('type.num.num',X3))),s('type.realax.real',X2)))))),
  inference(ennf_transformation,[],[f104])).
fof(f104,plain,(
  ! [X0,X1,X2] : (p(s(bool,'const.transc.division_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X1),s('type.realax.real',X2))),s(fun('type.num.num','type.realax.real'),X0)))) => ! [X3] : p(s(bool,'const.real.real_lte_2'(s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X0),s('type.num.num',X3))),s('type.realax.real',X2)))))),
  inference(rectify,[],[f44])).
fof(f44,axiom,(
  ! [X22,X7,X8] : (p(s(bool,'const.transc.division_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X7),s('type.realax.real',X8))),s(fun('type.num.num','type.realax.real'),X22)))) => ! [X19] : p(s(bool,'const.real.real_lte_2'(s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X22),s('type.num.num',X19))),s('type.realax.real',X8)))))),
  file('thm.integral.DIVISION_BOUNDS','thm.transc.DIVISION_UBOUND')).
fof(f432,plain,(
  ~p(s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),sK12),s('type.num.num',sK15)))))) | $spl1),
  inference(cnf_transformation,[],[f432_D])).
fof(f432_D,plain,(
  ~p(s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),sK12),s('type.num.num',sK15)))))) <=> ~$spl1),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1])])).
fof(f434,plain,(
  ~p(s(bool,'const.real.real_lte_2'(s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),sK12),s('type.num.num',sK15))),s('type.realax.real',sK14)))) | $spl3),
  inference(cnf_transformation,[],[f434_D])).
fof(f434_D,plain,(
  ~p(s(bool,'const.real.real_lte_2'(s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),sK12),s('type.num.num',sK15))),s('type.realax.real',sK14)))) <=> ~$spl3),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl3])])).
fof(f246,plain,(
  ~p(s(bool,'const.real.real_lte_2'(s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),sK12),s('type.num.num',sK15))),s('type.realax.real',sK14)))) | ~p(s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),sK12),s('type.num.num',sK15))))))),
  inference(cnf_transformation,[],[f155])).
fof(f7770,plain,(
  $false | $spl1),
  inference(subsumption_resolution,[],[f432,f5558])).
fof(f5558,plain,(
  ( ! [X0] : (p(s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),sK12),s('type.num.num',X0))))))) )),
  inference(resolution,[],[f350,f245])).
fof(f350,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,'const.transc.division_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X1),s('type.realax.real',X2))),s(fun('type.num.num','type.realax.real'),X0)))) | p(s(bool,'const.real.real_lte_2'(s('type.realax.real',X1),s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X0),s('type.num.num',X3))))))) )),
  inference(cnf_transformation,[],[f134])).
fof(f134,plain,(
  ! [X0,X1,X2] : (~p(s(bool,'const.transc.division_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X1),s('type.realax.real',X2))),s(fun('type.num.num','type.realax.real'),X0)))) | ! [X3] : p(s(bool,'const.real.real_lte_2'(s('type.realax.real',X1),s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X0),s('type.num.num',X3)))))))),
  inference(ennf_transformation,[],[f103])).
fof(f103,plain,(
  ! [X0,X1,X2] : (p(s(bool,'const.transc.division_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X1),s('type.realax.real',X2))),s(fun('type.num.num','type.realax.real'),X0)))) => ! [X3] : p(s(bool,'const.real.real_lte_2'(s('type.realax.real',X1),s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X0),s('type.num.num',X3)))))))),
  inference(rectify,[],[f43])).
fof(f43,axiom,(
  ! [X22,X7,X8] : (p(s(bool,'const.transc.division_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X7),s('type.realax.real',X8))),s(fun('type.num.num','type.realax.real'),X22)))) => ! [X19] : p(s(bool,'const.real.real_lte_2'(s('type.realax.real',X7),s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X22),s('type.num.num',X19)))))))),
  file('thm.integral.DIVISION_BOUNDS','thm.transc.DIVISION_LBOUND')).
% SZS output end Proof for thm.integral
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 494
% Passive clauses: 2631
% Generated clauses: 7491
% Final active clauses: 490
% Final passive clauses: 1949
% Input formulas: 44
% Initial clauses: 181
% 
% Duplicate literals: 149
% Trivial inequalities: 35
% Fw subsumption resolutions: 597
% Fw demodulations: 411
% Bw demodulations: 2
% 
% Simple tautologies: 178
% Equational tautologies: 21
% Forward subsumptions: 3299
% 
% Binary resolution: 3611
% Factoring: 648
% Forward superposition: 557
% Backward superposition: 1183
% Self superposition: 5
% Equality factoring: 2
% Equality resolution: 6
% 
% Split clauses: 247
% Split components: 495
% SAT solver clauses: 341
% SAT solver unit clauses: 9
% SAT solver binary clauses: 42
% SAT solver learnt clauses: 1
% 
% Sat splits: 247
% Sat splitting refutations: 2
% 
% TWLsolver clauses: 340
% TWLsolver calls for satisfiability: 199
% 
% Memory used [KB]: 3709
% Time elapsed: 0.160 s
% ------------------------------
% ------------------------------
% Success in time 0.163 s
