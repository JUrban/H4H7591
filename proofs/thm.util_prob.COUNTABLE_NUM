Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 300 next slice time: 5
dis+11_7_3 on thm.util_prob
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.util_prob
% SZS output start Proof for thm.util_prob
fof(f455,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f454,f92,f146])).
fof(f146,plain,(
  ~p(s(bool,'F_0')) | $spl7),
  inference(cnf_transformation,[],[f146_D])).
fof(f146_D,plain,(
  ~p(s(bool,'F_0')) <=> ~$spl7),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl7])])).
fof(f92,plain,(
  ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f25])).
fof(f25,plain,(
  ~p(s(bool,'F_0'))),
  inference(flattening,[],[f2])).
fof(f2,axiom,(
  ~p(s(bool,'F_0'))),
  file('thm.util_prob.COUNTABLE_NUM',aHL_FALSITY)).
fof(f454,plain,(
  $false | $spl7),
  inference(equality_resolution,[],[f450])).
fof(f450,plain,(
  ( ! [X0] : (s('type.num.num',X0) != s('type.num.num',sK3('const.combin.I_0',sK0,'type.num.num'))) ) | $spl7),
  inference(superposition,[],[f442,f270])).
fof(f270,plain,(
  ( ! [X0,X1] : (s(X0,X1) = s(X0,happ(s(fun(X0,X0),'const.combin.I_0'),s(X0,X1)))) )),
  inference(forward_demodulation,[],[f118,f117])).
fof(f117,plain,(
  ( ! [X0,X1] : (s(X0,X1) = s(X0,'const.combin.I_1'(s(X0,X1)))) )),
  inference(cnf_transformation,[],[f39])).
fof(f39,plain,(
  ! [X0,X1] : s(X0,X1) = s(X0,'const.combin.I_1'(s(X0,X1)))),
  inference(flattening,[],[f38])).
fof(f38,plain,(
  ! [X0] : ! [X1] : s(X0,X1) = s(X0,'const.combin.I_1'(s(X0,X1)))),
  inference(rectify,[],[f21])).
fof(f21,axiom,(
  ! [X8] : ! [X9] : s(X8,X9) = s(X8,'const.combin.I_1'(s(X8,X9)))),
  file('thm.util_prob.COUNTABLE_NUM','thm.combin.I_THM')).
fof(f118,plain,(
  ( ! [X0,X1] : (s(X0,'const.combin.I_1'(s(X0,X1))) = s(X0,happ(s(fun(X0,X0),'const.combin.I_0'),s(X0,X1)))) )),
  inference(cnf_transformation,[],[f41])).
fof(f41,plain,(
  ! [X0,X1] : s(X0,'const.combin.I_1'(s(X0,X1))) = s(X0,happ(s(fun(X0,X0),'const.combin.I_0'),s(X0,X1)))),
  inference(flattening,[],[f40])).
fof(f40,plain,(
  ! [X0] : ! [X1] : s(X0,'const.combin.I_1'(s(X0,X1))) = s(X0,happ(s(fun(X0,X0),'const.combin.I_0'),s(X0,X1)))),
  inference(rectify,[],[f23])).
fof(f23,axiom,(
  ! [X8] : ! [X19] : s(X8,'const.combin.I_1'(s(X8,X19))) = s(X8,happ(s(fun(X8,X8),'const.combin.I_0'),s(X8,X19)))),
  file('thm.util_prob.COUNTABLE_NUM','ARITY_0_1_const.combin.I')).
fof(f442,plain,(
  ( ! [X0,X1] : (s('type.num.num',sK3(X0,sK0,'type.num.num')) != s('type.num.num',happ(s(fun('type.num.num','type.num.num'),X0),s('type.num.num',X1)))) ) | $spl7),
  inference(subsumption_resolution,[],[f440,f146])).
fof(f440,plain,(
  ( ! [X0,X1] : (p(s(bool,'F_0')) | s('type.num.num',sK3(X0,sK0,'type.num.num')) != s('type.num.num',happ(s(fun('type.num.num','type.num.num'),X0),s('type.num.num',X1)))) )),
  inference(superposition,[],[f121,f173])).
fof(f173,plain,(
  s(bool,'F_0') = s(bool,'const.util_prob.countable_1'(s(fun('type.num.num',bool),sK0)))),
  inference(resolution,[],[f99,f89])).
fof(f89,plain,(
  ~p(s(bool,'const.util_prob.countable_1'(s(fun('type.num.num',bool),sK0))))),
  inference(cnf_transformation,[],[f64])).
fof(f64,plain,(
  ~p(s(bool,'const.util_prob.countable_1'(s(fun('type.num.num',bool),sK0))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0])],[f52])).
fof(f52,plain,(
  ? [X0] : ~p(s(bool,'const.util_prob.countable_1'(s(fun('type.num.num',bool),X0))))),
  inference(ennf_transformation,[],[f24])).
fof(f24,plain,(
  ~! [X0] : p(s(bool,'const.util_prob.countable_1'(s(fun('type.num.num',bool),X0))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : p(s(bool,'const.util_prob.countable_1'(s(fun('type.num.num',bool),X6))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : p(s(bool,'const.util_prob.countable_1'(s(fun('type.num.num',bool),X6))))),
  file('thm.util_prob.COUNTABLE_NUM','thm.util_prob.COUNTABLE_NUM')).
fof(f99,plain,(
  ( ! [X0] : (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f67])).
fof(f67,plain,(
  ! [X0] : ((s(bool,'F_0') != s(bool,X0) | ~p(s(bool,X0))) & (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f29])).
fof(f29,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(flattening,[],[f28])).
fof(f28,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(rectify,[],[f16])).
fof(f16,axiom,(
  ! [X7] : (s(bool,'F_0') = s(bool,X7) <=> ~p(s(bool,X7)))),
  file('thm.util_prob.COUNTABLE_NUM','thm.bool.EQ_CLAUSES|split|2')).
fof(f121,plain,(
  ( ! [X4,X2,X0,X1] : (p(s(bool,'const.util_prob.countable_1'(s(fun(X0,bool),X1)))) | s(X0,sK3(X2,X1,X0)) != s(X0,happ(s(fun('type.num.num',X0),X2),s('type.num.num',X4)))) )),
  inference(cnf_transformation,[],[f81])).
fof(f81,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.util_prob.countable_1'(s(fun(X0,bool),X1)))) | ! [X6] : (~p(s(bool,'const.bool.IN_2'(s(X0,X6),s(fun(X0,bool),X1)))) | s(X0,X6) = s(X0,happ(s(fun('type.num.num',X0),sK1(X1,X0)),s('type.num.num',sK2(X6,X1,X0)))))) & (! [X2] : (p(s(bool,'const.bool.IN_2'(s(X0,sK3(X2,X1,X0)),s(fun(X0,bool),X1)))) & ! [X4] : s(X0,sK3(X2,X1,X0)) != s(X0,happ(s(fun('type.num.num',X0),X2),s('type.num.num',X4)))) | p(s(bool,'const.util_prob.countable_1'(s(fun(X0,bool),X1))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK1,sK2,sK3])],[f80])).
fof(f80,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.util_prob.countable_1'(s(fun(X0,bool),X1)))) | ? [X5] : ! [X6] : (~p(s(bool,'const.bool.IN_2'(s(X0,X6),s(fun(X0,bool),X1)))) | ? [X7] : s(X0,X6) = s(X0,happ(s(fun('type.num.num',X0),X5),s('type.num.num',X7))))) & (! [X2] : ? [X3] : (p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X1)))) & ! [X4] : s(X0,X3) != s(X0,happ(s(fun('type.num.num',X0),X2),s('type.num.num',X4)))) | p(s(bool,'const.util_prob.countable_1'(s(fun(X0,bool),X1))))))),
  inference(rectify,[],[f79])).
fof(f79,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.util_prob.countable_1'(s(fun(X0,bool),X1)))) | ? [X2] : ! [X3] : (~p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X1)))) | ? [X4] : s(X0,X3) = s(X0,happ(s(fun('type.num.num',X0),X2),s('type.num.num',X4))))) & (! [X2] : ? [X3] : (p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X1)))) & ! [X4] : s(X0,X3) != s(X0,happ(s(fun('type.num.num',X0),X2),s('type.num.num',X4)))) | p(s(bool,'const.util_prob.countable_1'(s(fun(X0,bool),X1))))))),
  inference(nnf_transformation,[],[f58])).
fof(f58,plain,(
  ! [X0,X1] : (p(s(bool,'const.util_prob.countable_1'(s(fun(X0,bool),X1)))) <=> ? [X2] : ! [X3] : (~p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X1)))) | ? [X4] : s(X0,X3) = s(X0,happ(s(fun('type.num.num',X0),X2),s('type.num.num',X4)))))),
  inference(ennf_transformation,[],[f43])).
fof(f43,plain,(
  ! [X0,X1] : (p(s(bool,'const.util_prob.countable_1'(s(fun(X0,bool),X1)))) <=> ? [X2] : ! [X3] : (p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X1)))) => ? [X4] : s(X0,X3) = s(X0,happ(s(fun('type.num.num',X0),X2),s('type.num.num',X4)))))),
  inference(flattening,[],[f42])).
fof(f42,plain,(
  ! [X0] : ! [X1] : (p(s(bool,'const.util_prob.countable_1'(s(fun(X0,bool),X1)))) <=> ? [X2] : ! [X3] : (p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X1)))) => ? [X4] : s(X0,X3) = s(X0,happ(s(fun('type.num.num',X0),X2),s('type.num.num',X4)))))),
  inference(rectify,[],[f22])).
fof(f22,axiom,(
  ! [X8] : ! [X6] : (p(s(bool,'const.util_prob.countable_1'(s(fun(X8,bool),X6)))) <=> ? [X17] : ! [X9] : (p(s(bool,'const.bool.IN_2'(s(X8,X9),s(fun(X8,bool),X6)))) => ? [X18] : s(X8,X9) = s(X8,happ(s(fun('type.num.num',X8),X17),s('type.num.num',X18)))))),
  file('thm.util_prob.COUNTABLE_NUM','thm.util_prob.countable_def')).
% SZS output end Proof for thm.util_prob
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 35
% Passive clauses: 100
% Generated clauses: 363
% Final active clauses: 29
% Final passive clauses: 42
% Input formulas: 22
% Initial clauses: 51
% 
% Duplicate literals: 4
% Trivial inequalities: 11
% Fw subsumption resolutions: 19
% Fw demodulations: 46
% Bw demodulations: 1
% 
% Simple tautologies: 31
% Equational tautologies: 3
% Forward subsumptions: 144
% 
% Binary resolution: 34
% Forward superposition: 124
% Backward superposition: 51
% Self superposition: 5
% Equality factoring: 2
% Equality resolution: 6
% 
% Split clauses: 14
% Split components: 30
% SAT solver clauses: 23
% SAT solver unit clauses: 4
% SAT solver binary clauses: 16
% SAT solver learnt clauses: 1
% 
% Sat splits: 14
% Sat splitting refutations: 5
% 
% TWLsolver clauses: 22
% TWLsolver calls for satisfiability: 8
% 
% Memory used [KB]: 767
% Time elapsed: 0.019 s
% ------------------------------
% ------------------------------
% Success in time 0.02 s
