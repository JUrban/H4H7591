Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.rich_list
% (51500)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 1211
% Passive clauses: 7801
% Generated clauses: 36879
% Final active clauses: 1065
% Final passive clauses: 6152
% Input formulas: 260
% Initial clauses: 593
% 
% Duplicate literals: 218
% Trivial inequalities: 63
% Fw subsumption resolutions: 2342
% Fw demodulations: 4071
% Bw demodulations: 90
% 
% Simple tautologies: 367
% Equational tautologies: 25
% Forward subsumptions: 21604
% 
% Binary resolution: 7220
% Factoring: 891
% Forward superposition: 8753
% Backward superposition: 12366
% Self superposition: 50
% Equality factoring: 2
% Equality resolution: 10
% 
% Split clauses: 350
% Split components: 702
% SAT solver clauses: 625
% SAT solver unit clauses: 15
% SAT solver binary clauses: 90
% 
% Sat splits: 350
% Sat splitting refutations: 6
% 
% TWLsolver clauses: 620
% TWLsolver calls for satisfiability: 426
% 
% Memory used [KB]: 18293
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 143 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.rich_list
% (51520)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 677
% Passive clauses: 4616
% Generated clauses: 28367
% Final active clauses: 650
% Final passive clauses: 3822
% Input formulas: 260
% Initial clauses: 593
% 
% Duplicate literals: 97
% Trivial inequalities: 19
% Fw subsumption resolutions: 943
% Fw demodulations: 4644
% Bw demodulations: 132
% Condensations: 91
% Global subsumptions: 26
% 
% Simple tautologies: 349
% Equational tautologies: 17
% Forward subsumptions: 12276
% Fw demodulations to eq. taut.: 2
% Bw demodulations to eq. taut.: 1
% 
% Binary resolution: 3201
% Factoring: 123
% Forward superposition: 8553
% Backward superposition: 5248
% Self superposition: 66
% Equality factoring: 2
% Equality resolution: 12
% 
% Split clauses: 52
% Split components: 104
% SAT solver clauses: 5857
% SAT solver unit clauses: 674
% SAT solver binary clauses: 181
% SAT solver learnt clauses: 52
% SAT solver learnt literals: 16
% 
% Sat splits: 52
% Sat splitting refutations: 10
% 
% TWLsolver clauses: 5753
% TWLsolver calls for satisfiability: 3825
% 
% Memory used [KB]: 33133
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 136 next slice time: 103
lrs+11_2_br=off:cond=on:fde=none:gs=on:gsaa=full_model:lwlo=on:nwc=2:sas=minisat:stl=30:ssfp=100000:ssfq=1.4:smm=sco:ssnc=none:sp=occurrence:urr=on_98 on thm.rich_list
% (51539)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 1193
% Passive clauses: 10795
% Generated clauses: 179060
% Final active clauses: 1058
% Final passive clauses: 5403
% Input formulas: 260
% Initial clauses: 593
% Discarded non-redundant clauses: 4892
% 
% Duplicate literals: 12
% Trivial inequalities: 45
% Fw subsumption resolutions: 1782
% Fw demodulations: 74696
% Bw demodulations: 2296
% Condensations: 70
% Global subsumptions: 2
% 
% Simple tautologies: 182
% Equational tautologies: 77
% Forward subsumptions: 46689
% Fw demodulations to eq. taut.: 40097
% Bw demodulations to eq. taut.: 12
% 
% Unit resulting resolution: 66671
% Factoring: 2
% Forward superposition: 17612
% Backward superposition: 12983
% Self superposition: 134
% Equality factoring: 2
% Equality resolution: 22
% 
% Split clauses: 63
% Split components: 126
% SAT solver clauses: 12566
% SAT solver unit clauses: 3235
% SAT solver binary clauses: 7223
% 
% Sat splits: 63
% Sat splitting refutations: 1641
% 
% Memory used [KB]: 208525
% Time elapsed: 10.400 s
% ------------------------------
% ------------------------------
% remaining time: 32 next slice time: 32
dis+11_5_fde=none:nwc=1:sas=minisat:sd=1:ss=axioms:st=5.0:sos=all:sdd=large:sser=off:sfr=on:ssfp=100000:ssfq=2.0:ssnc=none_37 on thm.rich_list
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.rich_list
% SZS output start Proof for thm.rich_list
fof(f4974,plain,(
  $false),
  inference(subsumption_resolution,[],[f4792,f937])).
fof(f937,plain,(
  ~p(s(bool,happ(s(fun(sK15,bool),sK16),s(sK15,sK24('const.list.FILTER_2'(s(fun(sK15,bool),sK16),s('type.list.list'(sK15),sK17)),sK16,sK15)))))),
  inference(trivial_inequality_removal,[],[f925])).
fof(f925,plain,(
  s('type.list.list'(sK15),'const.list.FILTER_2'(s(fun(sK15,bool),sK16),s('type.list.list'(sK15),sK17))) != s('type.list.list'(sK15),'const.list.FILTER_2'(s(fun(sK15,bool),sK16),s('type.list.list'(sK15),sK17))) | ~p(s(bool,happ(s(fun(sK15,bool),sK16),s(sK15,sK24('const.list.FILTER_2'(s(fun(sK15,bool),sK16),s('type.list.list'(sK15),sK17)),sK16,sK15)))))),
  inference(superposition,[],[f592,f665])).
fof(f665,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,sK24(X2,X1,X0))))) | s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.FILTER_2'(s(fun(X0,bool),X1),s('type.list.list'(X0),X2)))) )),
  inference(cnf_transformation,[],[f477])).
fof(f477,plain,(
  ! [X0,X1,X2] : ((s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.FILTER_2'(s(fun(X0,bool),X1),s('type.list.list'(X0),X2))) | (p(s(bool,'const.bool.IN_2'(s(X0,sK24(X2,X1,X0)),s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),X2)))))) & ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,sK24(X2,X1,X0))))))) & (! [X3] : (~p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),X2)))))) | p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3))))) | s('type.list.list'(X0),X2) != s('type.list.list'(X0),'const.list.FILTER_2'(s(fun(X0,bool),X1),s('type.list.list'(X0),X2)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK24])],[f476])).
fof(f476,plain,(
  ! [X0,X1,X2] : ((s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.FILTER_2'(s(fun(X0,bool),X1),s('type.list.list'(X0),X2))) | ? [X4] : (p(s(bool,'const.bool.IN_2'(s(X0,X4),s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),X2)))))) & ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X4)))))) & (! [X3] : (~p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),X2)))))) | p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3))))) | s('type.list.list'(X0),X2) != s('type.list.list'(X0),'const.list.FILTER_2'(s(fun(X0,bool),X1),s('type.list.list'(X0),X2)))))),
  inference(rectify,[],[f475])).
fof(f475,plain,(
  ! [X0,X1,X2] : ((s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.FILTER_2'(s(fun(X0,bool),X1),s('type.list.list'(X0),X2))) | ? [X3] : (p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),X2)))))) & ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3)))))) & (! [X3] : (~p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),X2)))))) | p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3))))) | s('type.list.list'(X0),X2) != s('type.list.list'(X0),'const.list.FILTER_2'(s(fun(X0,bool),X1),s('type.list.list'(X0),X2)))))),
  inference(nnf_transformation,[],[f302])).
fof(f302,plain,(
  ! [X0,X1,X2] : (s('type.list.list'(X0),X2) != s('type.list.list'(X0),'const.list.FILTER_2'(s(fun(X0,bool),X1),s('type.list.list'(X0),X2))) <=> ? [X3] : (p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),X2)))))) & ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3))))))),
  inference(flattening,[],[f301])).
fof(f301,plain,(
  ! [X0] : ! [X1,X2] : (~s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.FILTER_2'(s(fun(X0,bool),X1),s('type.list.list'(X0),X2))) <=> ? [X3] : (p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),X2)))))) & ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3))))))),
  inference(rectify,[],[f40])).
fof(f40,axiom,(
  ! [X6] : ! [X11,X8] : (~s('type.list.list'(X6),X8) = s('type.list.list'(X6),'const.list.FILTER_2'(s(fun(X6,bool),X11),s('type.list.list'(X6),X8))) <=> ? [X14] : (p(s(bool,'const.bool.IN_2'(s(X6,X14),s(fun(X6,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X6),X8)))))) & ~p(s(bool,happ(s(fun(X6,bool),X11),s(X6,X14))))))),
  file('thm.rich_list.FILTER_IDEM','thm.list.FILTER_NEQ_ID')).
fof(f592,plain,(
  s('type.list.list'(sK15),'const.list.FILTER_2'(s(fun(sK15,bool),sK16),s('type.list.list'(sK15),sK17))) != s('type.list.list'(sK15),'const.list.FILTER_2'(s(fun(sK15,bool),sK16),s('type.list.list'(sK15),'const.list.FILTER_2'(s(fun(sK15,bool),sK16),s('type.list.list'(sK15),sK17)))))),
  inference(cnf_transformation,[],[f443])).
fof(f443,plain,(
  s('type.list.list'(sK15),'const.list.FILTER_2'(s(fun(sK15,bool),sK16),s('type.list.list'(sK15),sK17))) != s('type.list.list'(sK15),'const.list.FILTER_2'(s(fun(sK15,bool),sK16),s('type.list.list'(sK15),'const.list.FILTER_2'(s(fun(sK15,bool),sK16),s('type.list.list'(sK15),sK17)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK15,sK16,sK17])],[f382])).
fof(f382,plain,(
  ? [X0,X1,X2] : s('type.list.list'(X0),'const.list.FILTER_2'(s(fun(X0,bool),X1),s('type.list.list'(X0),X2))) != s('type.list.list'(X0),'const.list.FILTER_2'(s(fun(X0,bool),X1),s('type.list.list'(X0),'const.list.FILTER_2'(s(fun(X0,bool),X1),s('type.list.list'(X0),X2)))))),
  inference(ennf_transformation,[],[f263])).
fof(f263,plain,(
  ~! [X0,X1,X2] : s('type.list.list'(X0),'const.list.FILTER_2'(s(fun(X0,bool),X1),s('type.list.list'(X0),X2))) = s('type.list.list'(X0),'const.list.FILTER_2'(s(fun(X0,bool),X1),s('type.list.list'(X0),'const.list.FILTER_2'(s(fun(X0,bool),X1),s('type.list.list'(X0),X2)))))),
  inference(flattening,[],[f262])).
fof(f262,plain,(
  ~! [X0] : ! [X1,X2] : s('type.list.list'(X0),'const.list.FILTER_2'(s(fun(X0,bool),X1),s('type.list.list'(X0),X2))) = s('type.list.list'(X0),'const.list.FILTER_2'(s(fun(X0,bool),X1),s('type.list.list'(X0),'const.list.FILTER_2'(s(fun(X0,bool),X1),s('type.list.list'(X0),X2)))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : ! [X7,X8] : s('type.list.list'(X6),'const.list.FILTER_2'(s(fun(X6,bool),X7),s('type.list.list'(X6),X8))) = s('type.list.list'(X6),'const.list.FILTER_2'(s(fun(X6,bool),X7),s('type.list.list'(X6),'const.list.FILTER_2'(s(fun(X6,bool),X7),s('type.list.list'(X6),X8)))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : ! [X7,X8] : s('type.list.list'(X6),'const.list.FILTER_2'(s(fun(X6,bool),X7),s('type.list.list'(X6),X8))) = s('type.list.list'(X6),'const.list.FILTER_2'(s(fun(X6,bool),X7),s('type.list.list'(X6),'const.list.FILTER_2'(s(fun(X6,bool),X7),s('type.list.list'(X6),X8)))))),
  file('thm.rich_list.FILTER_IDEM','thm.rich_list.FILTER_IDEM')).
fof(f4792,plain,(
  p(s(bool,happ(s(fun(sK15,bool),sK16),s(sK15,sK24('const.list.FILTER_2'(s(fun(sK15,bool),sK16),s('type.list.list'(sK15),sK17)),sK16,sK15)))))),
  inference(resolution,[],[f938,f654])).
fof(f654,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3)))) | ~p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),'const.list.FILTER_2'(s(fun(X0,bool),X1),s('type.list.list'(X0),X2))))))))) )),
  inference(cnf_transformation,[],[f474])).
fof(f474,plain,(
  ! [X0,X1,X2,X3] : ((~p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),'const.list.FILTER_2'(s(fun(X0,bool),X1),s('type.list.list'(X0),X2)))))))) | (p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3)))) & p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),X2)))))))) & (~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3)))) | ~p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),X2)))))) | p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),'const.list.FILTER_2'(s(fun(X0,bool),X1),s('type.list.list'(X0),X2))))))))))),
  inference(flattening,[],[f473])).
fof(f473,plain,(
  ! [X0,X1,X2,X3] : ((~p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),'const.list.FILTER_2'(s(fun(X0,bool),X1),s('type.list.list'(X0),X2)))))))) | (p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3)))) & p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),X2)))))))) & ((~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3)))) | ~p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),X2))))))) | p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),'const.list.FILTER_2'(s(fun(X0,bool),X1),s('type.list.list'(X0),X2))))))))))),
  inference(nnf_transformation,[],[f286])).
fof(f286,plain,(
  ! [X0,X1,X2,X3] : (p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),'const.list.FILTER_2'(s(fun(X0,bool),X1),s('type.list.list'(X0),X2)))))))) <=> (p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3)))) & p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),X2))))))))),
  inference(flattening,[],[f285])).
fof(f285,plain,(
  ! [X0] : ! [X1,X2,X3] : (p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),'const.list.FILTER_2'(s(fun(X0,bool),X1),s('type.list.list'(X0),X2)))))))) <=> (p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3)))) & p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),X2))))))))),
  inference(rectify,[],[f95])).
fof(f95,axiom,(
  ! [X6] : ! [X11,X25,X14] : (p(s(bool,'const.bool.IN_2'(s(X6,X14),s(fun(X6,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X6),'const.list.FILTER_2'(s(fun(X6,bool),X11),s('type.list.list'(X6),X25)))))))) <=> (p(s(bool,happ(s(fun(X6,bool),X11),s(X6,X14)))) & p(s(bool,'const.bool.IN_2'(s(X6,X14),s(fun(X6,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X6),X25))))))))),
  file('thm.rich_list.FILTER_IDEM','thm.list.MEM_FILTER')).
fof(f938,plain,(
  p(s(bool,'const.bool.IN_2'(s(sK15,sK24('const.list.FILTER_2'(s(fun(sK15,bool),sK16),s('type.list.list'(sK15),sK17)),sK16,sK15)),s(fun(sK15,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(sK15),'const.list.FILTER_2'(s(fun(sK15,bool),sK16),s('type.list.list'(sK15),sK17))))))))),
  inference(trivial_inequality_removal,[],[f924])).
fof(f924,plain,(
  s('type.list.list'(sK15),'const.list.FILTER_2'(s(fun(sK15,bool),sK16),s('type.list.list'(sK15),sK17))) != s('type.list.list'(sK15),'const.list.FILTER_2'(s(fun(sK15,bool),sK16),s('type.list.list'(sK15),sK17))) | p(s(bool,'const.bool.IN_2'(s(sK15,sK24('const.list.FILTER_2'(s(fun(sK15,bool),sK16),s('type.list.list'(sK15),sK17)),sK16,sK15)),s(fun(sK15,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(sK15),'const.list.FILTER_2'(s(fun(sK15,bool),sK16),s('type.list.list'(sK15),sK17))))))))),
  inference(superposition,[],[f592,f664])).
fof(f664,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,'const.bool.IN_2'(s(X0,sK24(X2,X1,X0)),s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),X2)))))) | s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.FILTER_2'(s(fun(X0,bool),X1),s('type.list.list'(X0),X2)))) )),
  inference(cnf_transformation,[],[f477])).
% SZS output end Proof for thm.rich_list
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 256
% Passive clauses: 2184
% Generated clauses: 4067
% Final active clauses: 251
% Final passive clauses: 2024
% Input formulas: 260
% Initial clauses: 294
% 
% Selected by SInE selection: 69
% SInE iterations: 1
% 
% Duplicate literals: 83
% Trivial inequalities: 6
% Fw subsumption resolutions: 218
% Fw demodulations: 203
% 
% Simple tautologies: 165
% Equational tautologies: 3
% Forward subsumptions: 922
% 
% Binary resolution: 2407
% Forward superposition: 880
% Backward superposition: 258
% Equality resolution: 2
% 
% Split clauses: 77
% Split components: 166
% SAT solver clauses: 83
% SAT solver unit clauses: 5
% SAT solver binary clauses: 64
% 
% Sat splits: 77
% Sat splitting refutations: 5
% 
% Memory used [KB]: 3326
% Time elapsed: 0.078 s
% ------------------------------
% ------------------------------
% Success in time 11.81 s
