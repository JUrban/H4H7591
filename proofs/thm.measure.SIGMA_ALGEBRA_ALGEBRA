Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 299 next slice time: 5
dis+11_7_3 on thm.measure
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.measure
% SZS output start Proof for thm.measure
fof(f4153,plain,(
  $false),
  inference(subsumption_resolution,[],[f4128,f250])).
fof(f250,plain,(
  ~p(s(bool,'const.measure.algebra_1'(s('type.pair.prod'(fun(sK12,bool),fun(fun(sK12,bool),bool)),sK13))))),
  inference(cnf_transformation,[],[f151])).
fof(f151,plain,(
  p(s(bool,'const.measure.sigma_algebra_1'(s('type.pair.prod'(fun(sK12,bool),fun(fun(sK12,bool),bool)),sK13)))) & ~p(s(bool,'const.measure.algebra_1'(s('type.pair.prod'(fun(sK12,bool),fun(fun(sK12,bool),bool)),sK13))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK12,sK13])],[f109])).
fof(f109,plain,(
  ? [X0,X1] : (p(s(bool,'const.measure.sigma_algebra_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))) & ~p(s(bool,'const.measure.algebra_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))),
  inference(ennf_transformation,[],[f45])).
fof(f45,plain,(
  ~! [X0,X1] : (p(s(bool,'const.measure.sigma_algebra_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))) => p(s(bool,'const.measure.algebra_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))),
  inference(flattening,[],[f44])).
fof(f44,plain,(
  ~! [X0] : ! [X1] : (p(s(bool,'const.measure.sigma_algebra_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))) => p(s(bool,'const.measure.algebra_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : ! [X7] : (p(s(bool,'const.measure.sigma_algebra_1'(s('type.pair.prod'(fun(X6,bool),fun(fun(X6,bool),bool)),X7)))) => p(s(bool,'const.measure.algebra_1'(s('type.pair.prod'(fun(X6,bool),fun(fun(X6,bool),bool)),X7)))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : ! [X7] : (p(s(bool,'const.measure.sigma_algebra_1'(s('type.pair.prod'(fun(X6,bool),fun(fun(X6,bool),bool)),X7)))) => p(s(bool,'const.measure.algebra_1'(s('type.pair.prod'(fun(X6,bool),fun(fun(X6,bool),bool)),X7)))))),
  file('thm.measure.SIGMA_ALGEBRA_ALGEBRA','thm.measure.SIGMA_ALGEBRA_ALGEBRA')).
fof(f4128,plain,(
  p(s(bool,'const.measure.algebra_1'(s('type.pair.prod'(fun(sK12,bool),fun(fun(sK12,bool),bool)),sK13))))),
  inference(resolution,[],[f294,f249])).
fof(f249,plain,(
  p(s(bool,'const.measure.sigma_algebra_1'(s('type.pair.prod'(fun(sK12,bool),fun(fun(sK12,bool),bool)),sK13))))),
  inference(cnf_transformation,[],[f151])).
fof(f294,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.measure.sigma_algebra_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))) | p(s(bool,'const.measure.algebra_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))))) )),
  inference(cnf_transformation,[],[f173])).
fof(f173,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.measure.sigma_algebra_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))) | (p(s(bool,'const.measure.algebra_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))) & ! [X3] : (~p(s(bool,'const.util_prob.countable_1'(s(fun(fun(X0,bool),bool),X3)))) | ~p(s(bool,'const.pred_set.SUBSET_2'(s(fun(fun(X0,bool),bool),X3),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) | p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),'const.pred_set.BIGUNION_1'(s(fun(fun(X0,bool),bool),X3))),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))))))))) & (~p(s(bool,'const.measure.algebra_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))) | (p(s(bool,'const.util_prob.countable_1'(s(fun(fun(X0,bool),bool),sK14(X1,X0))))) & p(s(bool,'const.pred_set.SUBSET_2'(s(fun(fun(X0,bool),bool),sK14(X1,X0)),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) & ~p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),'const.pred_set.BIGUNION_1'(s(fun(fun(X0,bool),bool),sK14(X1,X0)))),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))))))) | p(s(bool,'const.measure.sigma_algebra_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK14])],[f172])).
fof(f172,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.measure.sigma_algebra_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))) | (p(s(bool,'const.measure.algebra_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))) & ! [X3] : (~p(s(bool,'const.util_prob.countable_1'(s(fun(fun(X0,bool),bool),X3)))) | ~p(s(bool,'const.pred_set.SUBSET_2'(s(fun(fun(X0,bool),bool),X3),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) | p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),'const.pred_set.BIGUNION_1'(s(fun(fun(X0,bool),bool),X3))),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))))))))) & (~p(s(bool,'const.measure.algebra_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))) | ? [X2] : (p(s(bool,'const.util_prob.countable_1'(s(fun(fun(X0,bool),bool),X2)))) & p(s(bool,'const.pred_set.SUBSET_2'(s(fun(fun(X0,bool),bool),X2),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) & ~p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),'const.pred_set.BIGUNION_1'(s(fun(fun(X0,bool),bool),X2))),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))))))) | p(s(bool,'const.measure.sigma_algebra_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))))))),
  inference(rectify,[],[f171])).
fof(f171,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.measure.sigma_algebra_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))) | (p(s(bool,'const.measure.algebra_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))) & ! [X2] : (~p(s(bool,'const.util_prob.countable_1'(s(fun(fun(X0,bool),bool),X2)))) | ~p(s(bool,'const.pred_set.SUBSET_2'(s(fun(fun(X0,bool),bool),X2),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) | p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),'const.pred_set.BIGUNION_1'(s(fun(fun(X0,bool),bool),X2))),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))))))))) & (~p(s(bool,'const.measure.algebra_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))) | ? [X2] : (p(s(bool,'const.util_prob.countable_1'(s(fun(fun(X0,bool),bool),X2)))) & p(s(bool,'const.pred_set.SUBSET_2'(s(fun(fun(X0,bool),bool),X2),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) & ~p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),'const.pred_set.BIGUNION_1'(s(fun(fun(X0,bool),bool),X2))),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))))))) | p(s(bool,'const.measure.sigma_algebra_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))))))),
  inference(flattening,[],[f170])).
fof(f170,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.measure.sigma_algebra_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))) | (p(s(bool,'const.measure.algebra_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))) & ! [X2] : (~p(s(bool,'const.util_prob.countable_1'(s(fun(fun(X0,bool),bool),X2)))) | ~p(s(bool,'const.pred_set.SUBSET_2'(s(fun(fun(X0,bool),bool),X2),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) | p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),'const.pred_set.BIGUNION_1'(s(fun(fun(X0,bool),bool),X2))),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))))))))) & ((~p(s(bool,'const.measure.algebra_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))) | ? [X2] : (p(s(bool,'const.util_prob.countable_1'(s(fun(fun(X0,bool),bool),X2)))) & p(s(bool,'const.pred_set.SUBSET_2'(s(fun(fun(X0,bool),bool),X2),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) & ~p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),'const.pred_set.BIGUNION_1'(s(fun(fun(X0,bool),bool),X2))),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))))) | p(s(bool,'const.measure.sigma_algebra_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))))))),
  inference(nnf_transformation,[],[f123])).
fof(f123,plain,(
  ! [X0,X1] : (p(s(bool,'const.measure.sigma_algebra_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))) <=> (p(s(bool,'const.measure.algebra_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))) & ! [X2] : (~p(s(bool,'const.util_prob.countable_1'(s(fun(fun(X0,bool),bool),X2)))) | ~p(s(bool,'const.pred_set.SUBSET_2'(s(fun(fun(X0,bool),bool),X2),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) | p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),'const.pred_set.BIGUNION_1'(s(fun(fun(X0,bool),bool),X2))),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))))))),
  inference(flattening,[],[f122])).
fof(f122,plain,(
  ! [X0,X1] : (p(s(bool,'const.measure.sigma_algebra_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))) <=> (p(s(bool,'const.measure.algebra_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))) & ! [X2] : ((~p(s(bool,'const.util_prob.countable_1'(s(fun(fun(X0,bool),bool),X2)))) | ~p(s(bool,'const.pred_set.SUBSET_2'(s(fun(fun(X0,bool),bool),X2),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))))))) | p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),'const.pred_set.BIGUNION_1'(s(fun(fun(X0,bool),bool),X2))),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))))))),
  inference(ennf_transformation,[],[f74])).
fof(f74,plain,(
  ! [X0,X1] : (p(s(bool,'const.measure.sigma_algebra_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))) <=> (p(s(bool,'const.measure.algebra_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))) & ! [X2] : ((p(s(bool,'const.util_prob.countable_1'(s(fun(fun(X0,bool),bool),X2)))) & p(s(bool,'const.pred_set.SUBSET_2'(s(fun(fun(X0,bool),bool),X2),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))))))) => p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),'const.pred_set.BIGUNION_1'(s(fun(fun(X0,bool),bool),X2))),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))))))),
  inference(flattening,[],[f73])).
fof(f73,plain,(
  ! [X0] : ! [X1] : (p(s(bool,'const.measure.sigma_algebra_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))) <=> (p(s(bool,'const.measure.algebra_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))) & ! [X2] : ((p(s(bool,'const.util_prob.countable_1'(s(fun(fun(X0,bool),bool),X2)))) & p(s(bool,'const.pred_set.SUBSET_2'(s(fun(fun(X0,bool),bool),X2),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))))))) => p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),'const.pred_set.BIGUNION_1'(s(fun(fun(X0,bool),bool),X2))),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))))))),
  inference(rectify,[],[f33])).
fof(f33,axiom,(
  ! [X6] : ! [X7] : (p(s(bool,'const.measure.sigma_algebra_1'(s('type.pair.prod'(fun(X6,bool),fun(fun(X6,bool),bool)),X7)))) <=> (p(s(bool,'const.measure.algebra_1'(s('type.pair.prod'(fun(X6,bool),fun(fun(X6,bool),bool)),X7)))) & ! [X19] : ((p(s(bool,'const.util_prob.countable_1'(s(fun(fun(X6,bool),bool),X19)))) & p(s(bool,'const.pred_set.SUBSET_2'(s(fun(fun(X6,bool),bool),X19),s(fun(fun(X6,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X6,bool),fun(fun(X6,bool),bool)),X7))))))) => p(s(bool,'const.bool.IN_2'(s(fun(X6,bool),'const.pred_set.BIGUNION_1'(s(fun(fun(X6,bool),bool),X19))),s(fun(fun(X6,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X6,bool),fun(fun(X6,bool),bool)),X7)))))))))),
  file('thm.measure.SIGMA_ALGEBRA_ALGEBRA','thm.measure.sigma_algebra_def')).
% SZS output end Proof for thm.measure
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 310
% Passive clauses: 1278
% Generated clauses: 3899
% Final active clauses: 310
% Final passive clauses: 828
% Input formulas: 42
% Initial clauses: 192
% 
% Duplicate literals: 139
% Trivial inequalities: 13
% Fw subsumption resolutions: 248
% 
% Simple tautologies: 145
% Equational tautologies: 20
% Forward subsumptions: 2027
% 
% Binary resolution: 2393
% Factoring: 706
% Forward superposition: 109
% Backward superposition: 59
% Self superposition: 2
% Equality factoring: 2
% Equality resolution: 8
% 
% Split clauses: 77
% Split components: 155
% SAT solver clauses: 150
% SAT solver unit clauses: 6
% SAT solver binary clauses: 29
% 
% Sat splits: 77
% 
% TWLsolver clauses: 150
% TWLsolver calls for satisfiability: 132
% 
% Memory used [KB]: 2046
% Time elapsed: 0.091 s
% ------------------------------
% ------------------------------
% Success in time 0.097 s
