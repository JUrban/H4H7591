Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 300 next slice time: 5
dis+11_7_3 on thm.integer
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.integer
% SZS output start Proof for thm.integer
fof(f239,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f232,f231,f27,f42,f40,f26,f41,f39])).
fof(f39,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK0),s('type.integer.int',sK1))) | $spl0),
  inference(cnf_transformation,[],[f39_D])).
fof(f39_D,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK0),s('type.integer.int',sK1))) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f41,plain,(
  s('type.integer.int',sK0) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK1))) | $spl2),
  inference(cnf_transformation,[],[f41_D])).
fof(f41_D,plain,(
  s('type.integer.int',sK0) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK1))) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f26,plain,(
  s('type.integer.int',sK0) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK1))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK0),s('type.integer.int',sK1)))),
  inference(cnf_transformation,[],[f22])).
fof(f22,plain,(
  (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK0),s('type.integer.int',sK1))) | s('type.integer.int',sK0) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK1)))) & (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK0),s('type.integer.int',sK1))) | s('type.integer.int',sK0) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK1))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1])],[f21])).
fof(f21,plain,(
  ? [X0,X1] : ((s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int',X1))) | s('type.integer.int',X0) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X1)))) & (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int',X1))) | s('type.integer.int',X0) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X1)))))),
  inference(nnf_transformation,[],[f19])).
fof(f19,plain,(
  ? [X0,X1] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int',X1))) <~> s('type.integer.int',X0) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X1))))),
  inference(ennf_transformation,[],[f11])).
fof(f11,plain,(
  ~! [X0,X1] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int',X1))) <=> s('type.integer.int',X0) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X1))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X6),s('type.integer.int',X7))) <=> s('type.integer.int',X6) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X7))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X6),s('type.integer.int',X7))) <=> s('type.integer.int',X6) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X7))))),
  file('thm.integer.INT_LNEG_UNIQ','thm.integer.INT_LNEG_UNIQ')).
fof(f40,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK0),s('type.integer.int',sK1))) | $spl1),
  inference(cnf_transformation,[],[f40_D])).
fof(f40_D,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK0),s('type.integer.int',sK1))) <=> ~$spl1),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1])])).
fof(f42,plain,(
  s('type.integer.int',sK0) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK1))) | $spl3),
  inference(cnf_transformation,[],[f42_D])).
fof(f42_D,plain,(
  s('type.integer.int',sK0) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK1))) <=> ~$spl3),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl3])])).
fof(f27,plain,(
  s('type.integer.int',sK0) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK1))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK0),s('type.integer.int',sK1)))),
  inference(cnf_transformation,[],[f22])).
fof(f231,plain,(
  $false | ($spl0 | $spl3)),
  inference(subsumption_resolution,[],[f226,f42])).
fof(f226,plain,(
  s('type.integer.int',sK0) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK1))) | $spl0),
  inference(trivial_inequality_removal,[],[f225])).
fof(f225,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int',sK0) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK1))) | $spl0),
  inference(superposition,[],[f211,f31])).
fof(f31,plain,(
  ( ! [X0] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X0))),s('type.integer.int',X0)))) )),
  inference(cnf_transformation,[],[f13])).
fof(f13,plain,(
  ! [X0] : s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X0))),s('type.integer.int',X0)))),
  inference(rectify,[],[f9])).
fof(f9,axiom,(
  ! [X6] : s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X6))),s('type.integer.int',X6)))),
  file('thm.integer.INT_LNEG_UNIQ','thm.integer.INT_ADD_LINV')).
fof(f211,plain,(
  ( ! [X0] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int',sK1))) | s('type.integer.int',sK0) = s('type.integer.int',X0)) ) | $spl0),
  inference(superposition,[],[f36,f39])).
fof(f36,plain,(
  ( ! [X2,X0,X1] : (s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int',X2))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X1),s('type.integer.int',X2))) | s('type.integer.int',X0) = s('type.integer.int',X1)) )),
  inference(cnf_transformation,[],[f25])).
fof(f25,plain,(
  ! [X0,X1,X2] : ((s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int',X2))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X1),s('type.integer.int',X2))) | s('type.integer.int',X0) = s('type.integer.int',X1)) & (s('type.integer.int',X0) != s('type.integer.int',X1) | s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int',X2))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X1),s('type.integer.int',X2)))))),
  inference(nnf_transformation,[],[f18])).
fof(f18,plain,(
  ! [X0,X1,X2] : (s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int',X2))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X1),s('type.integer.int',X2))) <=> s('type.integer.int',X0) = s('type.integer.int',X1))),
  inference(rectify,[],[f10])).
fof(f10,axiom,(
  ! [X6,X7,X9] : (s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X6),s('type.integer.int',X9))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X7),s('type.integer.int',X9))) <=> s('type.integer.int',X6) = s('type.integer.int',X7))),
  file('thm.integer.INT_LNEG_UNIQ','thm.integer.INT_EQ_RADD')).
fof(f232,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK0),s('type.integer.int',sK1))) | $spl2),
  inference(superposition,[],[f31,f41])).
% SZS output end Proof for thm.integer
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 15
% Passive clauses: 33
% Generated clauses: 196
% Final active clauses: 10
% Final passive clauses: 11
% Input formulas: 9
% Initial clauses: 12
% 
% Duplicate literals: 37
% Trivial inequalities: 4
% Fw subsumption resolutions: 1
% Fw demodulations: 5
% 
% Simple tautologies: 16
% Equational tautologies: 16
% Forward subsumptions: 80
% 
% Binary resolution: 4
% Forward superposition: 40
% Backward superposition: 35
% Self superposition: 25
% Equality factoring: 26
% Equality resolution: 1
% 
% Split clauses: 4
% Split components: 8
% SAT solver clauses: 9
% SAT solver unit clauses: 2
% SAT solver binary clauses: 5
% SAT solver learnt clauses: 2
% SAT solver learnt literals: 1
% 
% Sat splits: 4
% Sat splitting refutations: 2
% 
% TWLsolver clauses: 7
% TWLsolver calls for satisfiability: 4
% 
% Memory used [KB]: 639
% Time elapsed: 0.015 s
% ------------------------------
% ------------------------------
% Success in time 0.016 s
