Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 300 next slice time: 5
dis+11_7_3 on thm.probability
% (48838)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 143
% Passive clauses: 1871
% Generated clauses: 25619
% Final active clauses: 97
% Final passive clauses: 1557
% Input formulas: 13
% Initial clauses: 20
% 
% Duplicate literals: 1319
% Trivial inequalities: 416
% Fw subsumption resolutions: 4134
% Fw demodulations: 3305
% Bw demodulations: 45
% 
% Simple tautologies: 494
% Equational tautologies: 59
% Forward subsumptions: 12008
% 
% Binary resolution: 253
% Forward superposition: 8150
% Backward superposition: 7348
% Self superposition: 236
% Equality factoring: 169
% Equality resolution: 24
% 
% Split clauses: 1337
% Split components: 2763
% SAT solver clauses: 2129
% SAT solver unit clauses: 56
% SAT solver binary clauses: 295
% 
% Sat splits: 1337
% Sat splitting refutations: 2
% 
% TWLsolver clauses: 2128
% TWLsolver calls for satisfiability: 175
% 
% Memory used [KB]: 10490
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 293 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.probability
% (48843)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 79
% Passive clauses: 272
% Generated clauses: 10011
% Final active clauses: 70
% Final passive clauses: 160
% Input formulas: 13
% Initial clauses: 20
% 
% Duplicate literals: 1234
% Trivial inequalities: 143
% Fw subsumption resolutions: 932
% Fw demodulations: 392
% Bw demodulations: 32
% Condensations: 1772
% 
% Simple tautologies: 232
% Equational tautologies: 40
% Forward subsumptions: 4028
% Bw demodulations to eq. taut.: 8
% 
% Binary resolution: 42
% Forward superposition: 2642
% Backward superposition: 2269
% Self superposition: 167
% Equality factoring: 132
% Equality resolution: 20
% 
% Split clauses: 159
% Split components: 324
% SAT solver clauses: 823
% SAT solver unit clauses: 28
% SAT solver binary clauses: 63
% 
% Sat splits: 159
% 
% TWLsolver clauses: 823
% TWLsolver calls for satisfiability: 146
% 
% Memory used [KB]: 6140
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 286 next slice time: 103
lrs+11_2_br=off:cond=on:fde=none:gs=on:gsaa=full_model:lwlo=on:nwc=2:sas=minisat:stl=30:ssfp=100000:ssfq=1.4:smm=sco:ssnc=none:sp=occurrence:urr=on_98 on thm.probability
% (48847)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 400
% Passive clauses: 3589
% Generated clauses: 131068
% Final active clauses: 77
% Final passive clauses: 412
% Input formulas: 13
% Initial clauses: 20
% 
% Duplicate literals: 9246
% Trivial inequalities: 1409
% Fw subsumption resolutions: 12383
% Fw demodulations: 12657
% Bw demodulations: 2431
% Condensations: 18284
% Global subsumptions: 1326
% 
% Simple tautologies: 1486
% Equational tautologies: 2558
% Forward subsumptions: 66808
% Fw demodulations to eq. taut.: 2
% Bw demodulations to eq. taut.: 56
% 
% Unit resulting resolution: 8083
% Forward superposition: 31506
% Backward superposition: 20664
% Self superposition: 662
% Equality factoring: 475
% Equality resolution: 73
% 
% Split clauses: 364
% Split components: 770
% SAT solver clauses: 7145
% SAT solver unit clauses: 63
% SAT solver binary clauses: 655
% 
% Sat splits: 364
% Sat splitting refutations: 1499
% 
% Memory used [KB]: 44007
% Time elapsed: 10.400 s
% ------------------------------
% ------------------------------
% remaining time: 182 next slice time: 39
dis+11_5_fde=none:nwc=1:sas=minisat:sd=1:ss=axioms:st=5.0:sos=all:sdd=large:sser=off:sfr=on:ssfp=100000:ssfq=2.0:ssnc=none_37 on thm.probability
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.probability
% SZS output start Proof for thm.probability
fof(f686,plain,(
  $false),
  inference(subsumption_resolution,[],[f685,f58])).
fof(f58,plain,(
  ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f27])).
fof(f27,plain,(
  ~p(s(bool,'F_0'))),
  inference(flattening,[],[f2])).
fof(f2,axiom,(
  ~p(s(bool,'F_0'))),
  file('thm.probability.EVENTS_COUNTABLE_UNION',aHL_FALSITY)).
fof(f685,plain,(
  p(s(bool,'F_0'))),
  inference(forward_demodulation,[],[f684,f195])).
fof(f195,plain,(
  s(bool,'F_0') = s(bool,'const.bool.IN_2'(s(fun(sK0,bool),'const.pred_set.BIGUNION_1'(s(fun(fun(sK0,bool),bool),sK2))),s(fun(fun(sK0,bool),bool),'const.probability.events_1'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK1)))))),
  inference(resolution,[],[f47,f53])).
fof(f53,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f40])).
fof(f40,plain,(
  ! [X0] : ((s(bool,'F_0') != s(bool,X0) | ~p(s(bool,X0))) & (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f24])).
fof(f24,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(flattening,[],[f23])).
fof(f23,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(rectify,[],[f10])).
fof(f10,axiom,(
  ! [X9] : (s(bool,'F_0') = s(bool,X9) <=> ~p(s(bool,X9)))),
  file('thm.probability.EVENTS_COUNTABLE_UNION','thm.bool.EQ_CLAUSES|split|2')).
fof(f47,plain,(
  ~p(s(bool,'const.bool.IN_2'(s(fun(sK0,bool),'const.pred_set.BIGUNION_1'(s(fun(fun(sK0,bool),bool),sK2))),s(fun(fun(sK0,bool),bool),'const.probability.events_1'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK1))))))),
  inference(cnf_transformation,[],[f38])).
fof(f38,plain,(
  p(s(bool,'const.probability.prob_space_1'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK1)))) & p(s(bool,'const.pred_set.SUBSET_2'(s(fun(fun(sK0,bool),bool),sK2),s(fun(fun(sK0,bool),bool),'const.probability.events_1'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK1)))))) & p(s(bool,'const.util_prob.countable_1'(s(fun(fun(sK0,bool),bool),sK2)))) & ~p(s(bool,'const.bool.IN_2'(s(fun(sK0,bool),'const.pred_set.BIGUNION_1'(s(fun(fun(sK0,bool),bool),sK2))),s(fun(fun(sK0,bool),bool),'const.probability.events_1'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK1))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2])],[f33])).
fof(f33,plain,(
  ? [X0,X1,X2] : (p(s(bool,'const.probability.prob_space_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))) & p(s(bool,'const.pred_set.SUBSET_2'(s(fun(fun(X0,bool),bool),X2),s(fun(fun(X0,bool),bool),'const.probability.events_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))) & p(s(bool,'const.util_prob.countable_1'(s(fun(fun(X0,bool),bool),X2)))) & ~p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),'const.pred_set.BIGUNION_1'(s(fun(fun(X0,bool),bool),X2))),s(fun(fun(X0,bool),bool),'const.probability.events_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))))),
  inference(flattening,[],[f32])).
fof(f32,plain,(
  ? [X0,X1,X2] : ((p(s(bool,'const.probability.prob_space_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))) & p(s(bool,'const.pred_set.SUBSET_2'(s(fun(fun(X0,bool),bool),X2),s(fun(fun(X0,bool),bool),'const.probability.events_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))) & p(s(bool,'const.util_prob.countable_1'(s(fun(fun(X0,bool),bool),X2))))) & ~p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),'const.pred_set.BIGUNION_1'(s(fun(fun(X0,bool),bool),X2))),s(fun(fun(X0,bool),bool),'const.probability.events_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))))),
  inference(ennf_transformation,[],[f16])).
fof(f16,plain,(
  ~! [X0,X1,X2] : ((p(s(bool,'const.probability.prob_space_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))) & p(s(bool,'const.pred_set.SUBSET_2'(s(fun(fun(X0,bool),bool),X2),s(fun(fun(X0,bool),bool),'const.probability.events_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))) & p(s(bool,'const.util_prob.countable_1'(s(fun(fun(X0,bool),bool),X2))))) => p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),'const.pred_set.BIGUNION_1'(s(fun(fun(X0,bool),bool),X2))),s(fun(fun(X0,bool),bool),'const.probability.events_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))))),
  inference(flattening,[],[f15])).
fof(f15,plain,(
  ~! [X0] : ! [X1,X2] : ((p(s(bool,'const.probability.prob_space_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))) & p(s(bool,'const.pred_set.SUBSET_2'(s(fun(fun(X0,bool),bool),X2),s(fun(fun(X0,bool),bool),'const.probability.events_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))) & p(s(bool,'const.util_prob.countable_1'(s(fun(fun(X0,bool),bool),X2))))) => p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),'const.pred_set.BIGUNION_1'(s(fun(fun(X0,bool),bool),X2))),s(fun(fun(X0,bool),bool),'const.probability.events_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : ! [X7,X8] : ((p(s(bool,'const.probability.prob_space_1'(s('type.pair.prod'(fun(X6,bool),'type.pair.prod'(fun(fun(X6,bool),bool),fun(fun(X6,bool),'type.realax.real'))),X7)))) & p(s(bool,'const.pred_set.SUBSET_2'(s(fun(fun(X6,bool),bool),X8),s(fun(fun(X6,bool),bool),'const.probability.events_1'(s('type.pair.prod'(fun(X6,bool),'type.pair.prod'(fun(fun(X6,bool),bool),fun(fun(X6,bool),'type.realax.real'))),X7)))))) & p(s(bool,'const.util_prob.countable_1'(s(fun(fun(X6,bool),bool),X8))))) => p(s(bool,'const.bool.IN_2'(s(fun(X6,bool),'const.pred_set.BIGUNION_1'(s(fun(fun(X6,bool),bool),X8))),s(fun(fun(X6,bool),bool),'const.probability.events_1'(s('type.pair.prod'(fun(X6,bool),'type.pair.prod'(fun(fun(X6,bool),bool),fun(fun(X6,bool),'type.realax.real'))),X7)))))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : ! [X7,X8] : ((p(s(bool,'const.probability.prob_space_1'(s('type.pair.prod'(fun(X6,bool),'type.pair.prod'(fun(fun(X6,bool),bool),fun(fun(X6,bool),'type.realax.real'))),X7)))) & p(s(bool,'const.pred_set.SUBSET_2'(s(fun(fun(X6,bool),bool),X8),s(fun(fun(X6,bool),bool),'const.probability.events_1'(s('type.pair.prod'(fun(X6,bool),'type.pair.prod'(fun(fun(X6,bool),bool),fun(fun(X6,bool),'type.realax.real'))),X7)))))) & p(s(bool,'const.util_prob.countable_1'(s(fun(fun(X6,bool),bool),X8))))) => p(s(bool,'const.bool.IN_2'(s(fun(X6,bool),'const.pred_set.BIGUNION_1'(s(fun(fun(X6,bool),bool),X8))),s(fun(fun(X6,bool),bool),'const.probability.events_1'(s('type.pair.prod'(fun(X6,bool),'type.pair.prod'(fun(fun(X6,bool),bool),fun(fun(X6,bool),'type.realax.real'))),X7)))))))),
  file('thm.probability.EVENTS_COUNTABLE_UNION','thm.probability.EVENTS_COUNTABLE_UNION')).
fof(f684,plain,(
  p(s(bool,'const.bool.IN_2'(s(fun(sK0,bool),'const.pred_set.BIGUNION_1'(s(fun(fun(sK0,bool),bool),sK2))),s(fun(fun(sK0,bool),bool),'const.probability.events_1'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK1))))))),
  inference(forward_demodulation,[],[f683,f62])).
fof(f62,plain,(
  ( ! [X2,X0,X1] : (s(fun(fun(X0,bool),bool),X2) = s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),'const.pair.,_2'(s(fun(X0,bool),X1),s(fun(fun(X0,bool),bool),X2)))))) )),
  inference(cnf_transformation,[],[f29])).
fof(f29,plain,(
  ! [X0,X1,X2] : s(fun(fun(X0,bool),bool),X2) = s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),'const.pair.,_2'(s(fun(X0,bool),X1),s(fun(fun(X0,bool),bool),X2)))))),
  inference(flattening,[],[f28])).
fof(f28,plain,(
  ! [X0] : ! [X1,X2] : s(fun(fun(X0,bool),bool),X2) = s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),'const.pair.,_2'(s(fun(X0,bool),X1),s(fun(fun(X0,bool),bool),X2)))))),
  inference(rectify,[],[f12])).
fof(f12,axiom,(
  ! [X6] : ! [X10,X11] : s(fun(fun(X6,bool),bool),X11) = s(fun(fun(X6,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X6,bool),fun(fun(X6,bool),bool)),'const.pair.,_2'(s(fun(X6,bool),X10),s(fun(fun(X6,bool),bool),X11)))))),
  file('thm.probability.EVENTS_COUNTABLE_UNION','thm.measure.subsets_def')).
fof(f683,plain,(
  p(s(bool,'const.bool.IN_2'(s(fun(sK0,bool),'const.pred_set.BIGUNION_1'(s(fun(fun(sK0,bool),bool),sK2))),s(fun(fun(sK0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),'const.probability.p_space_1'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK1))),s(fun(fun(sK0,bool),bool),'const.probability.events_1'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK1))))))))))),
  inference(subsumption_resolution,[],[f682,f59])).
fof(f59,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f1])).
fof(f1,axiom,(
  p(s(bool,'T_0'))),
  file('thm.probability.EVENTS_COUNTABLE_UNION',aHL_TRUTH)).
fof(f682,plain,(
  ~p(s(bool,'T_0')) | p(s(bool,'const.bool.IN_2'(s(fun(sK0,bool),'const.pred_set.BIGUNION_1'(s(fun(fun(sK0,bool),bool),sK2))),s(fun(fun(sK0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),'const.probability.p_space_1'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK1))),s(fun(fun(sK0,bool),bool),'const.probability.events_1'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK1))))))))))),
  inference(forward_demodulation,[],[f681,f139])).
fof(f139,plain,(
  s(bool,'T_0') = s(bool,'const.pred_set.SUBSET_2'(s(fun(fun(sK0,bool),bool),sK2),s(fun(fun(sK0,bool),bool),'const.probability.events_1'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK1)))))),
  inference(resolution,[],[f45,f57])).
fof(f57,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f42])).
fof(f42,plain,(
  ! [X0] : ((s(bool,'T_0') != s(bool,X0) | p(s(bool,X0))) & (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f26])).
fof(f26,plain,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) <=> p(s(bool,X0)))),
  inference(rectify,[],[f9])).
fof(f9,axiom,(
  ! [X9] : (s(bool,'T_0') = s(bool,X9) <=> p(s(bool,X9)))),
  file('thm.probability.EVENTS_COUNTABLE_UNION','thm.bool.EQ_CLAUSES|split|1')).
fof(f45,plain,(
  p(s(bool,'const.pred_set.SUBSET_2'(s(fun(fun(sK0,bool),bool),sK2),s(fun(fun(sK0,bool),bool),'const.probability.events_1'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK1))))))),
  inference(cnf_transformation,[],[f38])).
fof(f681,plain,(
  ~p(s(bool,'const.pred_set.SUBSET_2'(s(fun(fun(sK0,bool),bool),sK2),s(fun(fun(sK0,bool),bool),'const.probability.events_1'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK1)))))) | p(s(bool,'const.bool.IN_2'(s(fun(sK0,bool),'const.pred_set.BIGUNION_1'(s(fun(fun(sK0,bool),bool),sK2))),s(fun(fun(sK0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),'const.probability.p_space_1'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK1))),s(fun(fun(sK0,bool),bool),'const.probability.events_1'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK1))))))))))),
  inference(forward_demodulation,[],[f669,f62])).
fof(f669,plain,(
  ~p(s(bool,'const.pred_set.SUBSET_2'(s(fun(fun(sK0,bool),bool),sK2),s(fun(fun(sK0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),'const.probability.p_space_1'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK1))),s(fun(fun(sK0,bool),bool),'const.probability.events_1'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK1)))))))))) | p(s(bool,'const.bool.IN_2'(s(fun(sK0,bool),'const.pred_set.BIGUNION_1'(s(fun(fun(sK0,bool),bool),sK2))),s(fun(fun(sK0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),'const.probability.p_space_1'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK1))),s(fun(fun(sK0,bool),bool),'const.probability.events_1'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK1))))))))))),
  inference(resolution,[],[f64,f78])).
fof(f78,plain,(
  p(s(bool,'const.measure.sigma_algebra_1'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),'const.probability.p_space_1'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK1))),s(fun(fun(sK0,bool),bool),'const.probability.events_1'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK1))))))))),
  inference(resolution,[],[f44,f49])).
fof(f49,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.measure.sigma_algebra_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),'const.pair.,_2'(s(fun(X0,bool),'const.probability.p_space_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1))),s(fun(fun(X0,bool),bool),'const.probability.events_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))))) | ~p(s(bool,'const.probability.prob_space_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1))))) )),
  inference(cnf_transformation,[],[f36])).
fof(f36,plain,(
  ! [X0,X1] : (~p(s(bool,'const.probability.prob_space_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))) | p(s(bool,'const.measure.sigma_algebra_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),'const.pair.,_2'(s(fun(X0,bool),'const.probability.p_space_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1))),s(fun(fun(X0,bool),bool),'const.probability.events_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))))))),
  inference(ennf_transformation,[],[f20])).
fof(f20,plain,(
  ! [X0,X1] : (p(s(bool,'const.probability.prob_space_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))) => p(s(bool,'const.measure.sigma_algebra_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),'const.pair.,_2'(s(fun(X0,bool),'const.probability.p_space_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1))),s(fun(fun(X0,bool),bool),'const.probability.events_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))))))),
  inference(flattening,[],[f19])).
fof(f19,plain,(
  ! [X0] : ! [X1] : (p(s(bool,'const.probability.prob_space_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))) => p(s(bool,'const.measure.sigma_algebra_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),'const.pair.,_2'(s(fun(X0,bool),'const.probability.p_space_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1))),s(fun(fun(X0,bool),bool),'const.probability.events_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))))))),
  inference(rectify,[],[f14])).
fof(f14,axiom,(
  ! [X6] : ! [X7] : (p(s(bool,'const.probability.prob_space_1'(s('type.pair.prod'(fun(X6,bool),'type.pair.prod'(fun(fun(X6,bool),bool),fun(fun(X6,bool),'type.realax.real'))),X7)))) => p(s(bool,'const.measure.sigma_algebra_1'(s('type.pair.prod'(fun(X6,bool),fun(fun(X6,bool),bool)),'const.pair.,_2'(s(fun(X6,bool),'const.probability.p_space_1'(s('type.pair.prod'(fun(X6,bool),'type.pair.prod'(fun(fun(X6,bool),bool),fun(fun(X6,bool),'type.realax.real'))),X7))),s(fun(fun(X6,bool),bool),'const.probability.events_1'(s('type.pair.prod'(fun(X6,bool),'type.pair.prod'(fun(fun(X6,bool),bool),fun(fun(X6,bool),'type.realax.real'))),X7)))))))))),
  file('thm.probability.EVENTS_COUNTABLE_UNION','thm.probability.EVENTS_SIGMA_ALGEBRA')).
fof(f44,plain,(
  p(s(bool,'const.probability.prob_space_1'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK1))))),
  inference(cnf_transformation,[],[f38])).
fof(f64,plain,(
  ( ! [X0] : (~p(s(bool,'const.measure.sigma_algebra_1'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),X0)))) | ~p(s(bool,'const.pred_set.SUBSET_2'(s(fun(fun(sK0,bool),bool),sK2),s(fun(fun(sK0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),X0)))))) | p(s(bool,'const.bool.IN_2'(s(fun(sK0,bool),'const.pred_set.BIGUNION_1'(s(fun(fun(sK0,bool),bool),sK2))),s(fun(fun(sK0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),X0))))))) )),
  inference(resolution,[],[f46,f48])).
fof(f48,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),'const.pred_set.BIGUNION_1'(s(fun(fun(X0,bool),bool),X2))),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) | ~p(s(bool,'const.pred_set.SUBSET_2'(s(fun(fun(X0,bool),bool),X2),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) | ~p(s(bool,'const.util_prob.countable_1'(s(fun(fun(X0,bool),bool),X2)))) | ~p(s(bool,'const.measure.sigma_algebra_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))))) )),
  inference(cnf_transformation,[],[f35])).
fof(f35,plain,(
  ! [X0,X1,X2] : (~p(s(bool,'const.measure.sigma_algebra_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))) | ~p(s(bool,'const.util_prob.countable_1'(s(fun(fun(X0,bool),bool),X2)))) | ~p(s(bool,'const.pred_set.SUBSET_2'(s(fun(fun(X0,bool),bool),X2),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) | p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),'const.pred_set.BIGUNION_1'(s(fun(fun(X0,bool),bool),X2))),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))))),
  inference(flattening,[],[f34])).
fof(f34,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,'const.measure.sigma_algebra_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))) | ~p(s(bool,'const.util_prob.countable_1'(s(fun(fun(X0,bool),bool),X2)))) | ~p(s(bool,'const.pred_set.SUBSET_2'(s(fun(fun(X0,bool),bool),X2),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))))))) | p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),'const.pred_set.BIGUNION_1'(s(fun(fun(X0,bool),bool),X2))),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))))),
  inference(ennf_transformation,[],[f18])).
fof(f18,plain,(
  ! [X0,X1,X2] : ((p(s(bool,'const.measure.sigma_algebra_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))) & p(s(bool,'const.util_prob.countable_1'(s(fun(fun(X0,bool),bool),X2)))) & p(s(bool,'const.pred_set.SUBSET_2'(s(fun(fun(X0,bool),bool),X2),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))))))) => p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),'const.pred_set.BIGUNION_1'(s(fun(fun(X0,bool),bool),X2))),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))))),
  inference(flattening,[],[f17])).
fof(f17,plain,(
  ! [X0] : ! [X1,X2] : ((p(s(bool,'const.measure.sigma_algebra_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))) & p(s(bool,'const.util_prob.countable_1'(s(fun(fun(X0,bool),bool),X2)))) & p(s(bool,'const.pred_set.SUBSET_2'(s(fun(fun(X0,bool),bool),X2),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))))))) => p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),'const.pred_set.BIGUNION_1'(s(fun(fun(X0,bool),bool),X2))),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))))),
  inference(rectify,[],[f13])).
fof(f13,axiom,(
  ! [X6] : ! [X12,X8] : ((p(s(bool,'const.measure.sigma_algebra_1'(s('type.pair.prod'(fun(X6,bool),fun(fun(X6,bool),bool)),X12)))) & p(s(bool,'const.util_prob.countable_1'(s(fun(fun(X6,bool),bool),X8)))) & p(s(bool,'const.pred_set.SUBSET_2'(s(fun(fun(X6,bool),bool),X8),s(fun(fun(X6,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X6,bool),fun(fun(X6,bool),bool)),X12))))))) => p(s(bool,'const.bool.IN_2'(s(fun(X6,bool),'const.pred_set.BIGUNION_1'(s(fun(fun(X6,bool),bool),X8))),s(fun(fun(X6,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X6,bool),fun(fun(X6,bool),bool)),X12)))))))),
  file('thm.probability.EVENTS_COUNTABLE_UNION','thm.measure.SIGMA_ALGEBRA_COUNTABLE_UNION')).
fof(f46,plain,(
  p(s(bool,'const.util_prob.countable_1'(s(fun(fun(sK0,bool),bool),sK2))))),
  inference(cnf_transformation,[],[f38])).
% SZS output end Proof for thm.probability
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 54
% Passive clauses: 287
% Generated clauses: 626
% Final active clauses: 50
% Final passive clauses: 213
% Input formulas: 13
% Initial clauses: 20
% 
% Selected by SInE selection: 13
% SInE iterations: 1
% 
% Duplicate literals: 8
% Trivial inequalities: 13
% Fw subsumption resolutions: 51
% Fw demodulations: 46
% Bw demodulations: 4
% 
% Simple tautologies: 2
% Forward subsumptions: 243
% 
% Binary resolution: 117
% Forward superposition: 320
% Backward superposition: 63
% 
% SAT solver clauses: 1
% 
% Memory used [KB]: 1151
% Time elapsed: 0.020 s
% ------------------------------
% ------------------------------
% Success in time 11.738 s
