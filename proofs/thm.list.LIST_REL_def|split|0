Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.list
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.list
% SZS output start Proof for thm.list
fof(f1418,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f1396,f664,f295,f665,f300,f172,f294])).
fof(f294,plain,(
  ~p(s(bool,'F_0')) | $spl5),
  inference(cnf_transformation,[],[f294_D])).
fof(f294_D,plain,(
  ~p(s(bool,'F_0')) <=> ~$spl5),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl5])])).
fof(f172,plain,(
  ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f41])).
fof(f41,plain,(
  ~p(s(bool,'F_0'))),
  inference(flattening,[],[f2])).
fof(f2,axiom,(
  ~p(s(bool,'F_0'))),
  file('thm.list.LIST_REL_def|split|0',aHL_FALSITY)).
fof(f300,plain,(
  $false | ($spl5 | $spl6)),
  inference(resolution,[],[f295,f294])).
fof(f665,plain,(
  ( ! [X59,X57,X58] : (s(bool,'T_0') = s(bool,'const.list.LIST_REL_3'(s(fun(X57,fun(X58,bool)),X59),s('type.list.list'(X57),'const.list.NIL_0'),s('type.list.list'(X58),'const.list.NIL_0')))) ) | $spl16),
  inference(cnf_transformation,[],[f665_D])).
fof(f665_D,plain,(
  ( ! [X59,X57,X58] : (s(bool,'T_0') = s(bool,'const.list.LIST_REL_3'(s(fun(X57,fun(X58,bool)),X59),s('type.list.list'(X57),'const.list.NIL_0'),s('type.list.list'(X58),'const.list.NIL_0')))) ) <=> ~$spl16),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl16])])).
fof(f295,plain,(
  ( ! [X0] : (p(s(bool,X0))) ) | $spl6),
  inference(cnf_transformation,[],[f295_D])).
fof(f295_D,plain,(
  ( ! [X0] : (p(s(bool,X0))) ) <=> ~$spl6),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl6])])).
fof(f664,plain,(
  ( ! [X59,X57,X60,X58] : (p(s(bool,X60)) | s(bool,'T_0') = s(bool,'const.list.LIST_REL_3'(s(fun(X57,fun(X58,bool)),X59),s('type.list.list'(X57),'const.list.NIL_0'),s('type.list.list'(X58),'const.list.NIL_0')))) )),
  inference(subsumption_resolution,[],[f469,f174])).
fof(f174,plain,(
  ( ! [X0] : (p(s(bool,X0)) | s(bool,'T_0') != s(bool,X0)) )),
  inference(cnf_transformation,[],[f118])).
fof(f118,plain,(
  ! [X0] : ((s(bool,'T_0') != s(bool,X0) | p(s(bool,X0))) & (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f42])).
fof(f42,plain,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) <=> p(s(bool,X0)))),
  inference(rectify,[],[f33])).
fof(f33,axiom,(
  ! [X9] : (s(bool,'T_0') = s(bool,X9) <=> p(s(bool,X9)))),
  file('thm.list.LIST_REL_def|split|0','thm.bool.EQ_CLAUSES|split|1')).
fof(f469,plain,(
  ( ! [X59,X57,X60,X58] : (p(s(bool,X60)) | s(bool,'T_0') = s(bool,X60) | s(bool,'T_0') = s(bool,'const.list.LIST_REL_3'(s(fun(X57,fun(X58,bool)),X59),s('type.list.list'(X57),'const.list.NIL_0'),s('type.list.list'(X58),'const.list.NIL_0')))) )),
  inference(superposition,[],[f232,f309])).
fof(f309,plain,(
  ( ! [X0,X1] : (s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X1) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f173,f173])).
fof(f173,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f3])).
fof(f3,axiom,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) | s(bool,'F_0') = s(bool,X0))),
  file('thm.list.LIST_REL_def|split|0',aHL_BOOL_CASES)).
fof(f232,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,'const.list.LIST_REL_3'(s(fun(X0,fun(X1,bool)),X2),s('type.list.list'(X0),'const.list.NIL_0'),s('type.list.list'(X1),'const.list.NIL_0'))))) )),
  inference(cnf_transformation,[],[f72])).
fof(f72,plain,(
  ! [X0,X1,X2] : p(s(bool,'const.list.LIST_REL_3'(s(fun(X0,fun(X1,bool)),X2),s('type.list.list'(X0),'const.list.NIL_0'),s('type.list.list'(X1),'const.list.NIL_0'))))),
  inference(flattening,[],[f71])).
fof(f71,plain,(
  ! [X0,X1] : ! [X2] : p(s(bool,'const.list.LIST_REL_3'(s(fun(X0,fun(X1,bool)),X2),s('type.list.list'(X0),'const.list.NIL_0'),s('type.list.list'(X1),'const.list.NIL_0'))))),
  inference(rectify,[],[f7])).
fof(f7,axiom,(
  ! [X6,X7] : ! [X8] : p(s(bool,'const.list.LIST_REL_3'(s(fun(X6,fun(X7,bool)),X8),s('type.list.list'(X6),'const.list.NIL_0'),s('type.list.list'(X7),'const.list.NIL_0'))))),
  file('thm.list.LIST_REL_def|split|0','thm.list.LIST_REL_rules|split|0')).
fof(f1396,plain,(
  $false | $spl16),
  inference(trivial_inequality_removal,[],[f1358])).
fof(f1358,plain,(
  s(bool,'T_0') != s(bool,'T_0') | $spl16),
  inference(superposition,[],[f169,f665])).
fof(f169,plain,(
  s(bool,'T_0') != s(bool,'const.list.LIST_REL_3'(s(fun(sK1,fun(sK2,bool)),sK3),s('type.list.list'(sK1),'const.list.NIL_0'),s('type.list.list'(sK2),'const.list.NIL_0')))),
  inference(cnf_transformation,[],[f117])).
fof(f117,plain,(
  s(bool,'T_0') != s(bool,'const.list.LIST_REL_3'(s(fun(sK1,fun(sK2,bool)),sK3),s('type.list.list'(sK1),'const.list.NIL_0'),s('type.list.list'(sK2),'const.list.NIL_0')))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK1,sK2,sK3])],[f89])).
fof(f89,plain,(
  ? [X0,X1,X2] : s(bool,'T_0') != s(bool,'const.list.LIST_REL_3'(s(fun(X0,fun(X1,bool)),X2),s('type.list.list'(X0),'const.list.NIL_0'),s('type.list.list'(X1),'const.list.NIL_0')))),
  inference(ennf_transformation,[],[f40])).
fof(f40,plain,(
  ~! [X0,X1,X2] : s(bool,'T_0') = s(bool,'const.list.LIST_REL_3'(s(fun(X0,fun(X1,bool)),X2),s('type.list.list'(X0),'const.list.NIL_0'),s('type.list.list'(X1),'const.list.NIL_0')))),
  inference(flattening,[],[f39])).
fof(f39,plain,(
  ~! [X0,X1] : ! [X2] : s(bool,'T_0') = s(bool,'const.list.LIST_REL_3'(s(fun(X0,fun(X1,bool)),X2),s('type.list.list'(X0),'const.list.NIL_0'),s('type.list.list'(X1),'const.list.NIL_0')))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7] : ! [X8] : s(bool,'T_0') = s(bool,'const.list.LIST_REL_3'(s(fun(X6,fun(X7,bool)),X8),s('type.list.list'(X6),'const.list.NIL_0'),s('type.list.list'(X7),'const.list.NIL_0')))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7] : ! [X8] : s(bool,'T_0') = s(bool,'const.list.LIST_REL_3'(s(fun(X6,fun(X7,bool)),X8),s('type.list.list'(X6),'const.list.NIL_0'),s('type.list.list'(X7),'const.list.NIL_0')))),
  file('thm.list.LIST_REL_def|split|0','thm.list.LIST_REL_def|split|0')).
% SZS output end Proof for thm.list
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 39
% Passive clauses: 262
% Generated clauses: 1195
% Final active clauses: 34
% Final passive clauses: 192
% Input formulas: 37
% Initial clauses: 119
% 
% Duplicate literals: 102
% Trivial inequalities: 37
% Fw subsumption resolutions: 179
% Fw demodulations: 7
% Bw demodulations: 1
% 
% Simple tautologies: 115
% Equational tautologies: 31
% Forward subsumptions: 419
% 
% Binary resolution: 67
% Factoring: 1
% Forward superposition: 232
% Backward superposition: 325
% Self superposition: 42
% Equality factoring: 50
% Equality resolution: 13
% 
% Split clauses: 50
% Split components: 104
% SAT solver clauses: 74
% SAT solver unit clauses: 10
% SAT solver binary clauses: 44
% SAT solver learnt clauses: 1
% 
% Sat splits: 50
% Sat splitting refutations: 3
% 
% TWLsolver clauses: 73
% TWLsolver calls for satisfiability: 27
% 
% Memory used [KB]: 1151
% Time elapsed: 0.033 s
% ------------------------------
% ------------------------------
% Success in time 0.035 s
