Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 300 next slice time: 5
dis+11_7_3 on thm.transc
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.transc
% SZS output start Proof for thm.transc
fof(f18363,plain,(
  $false),
  inference(trivial_inequality_removal,[],[f18351])).
fof(f18351,plain,(
  s('type.realax.real','const.transc.sin_1'(s('type.realax.real','const.realax.real_add_2'(s('type.realax.real',sK0),s('type.realax.real',sK0))))) != s('type.realax.real','const.transc.sin_1'(s('type.realax.real','const.realax.real_add_2'(s('type.realax.real',sK0),s('type.realax.real',sK0)))))),
  inference(superposition,[],[f1875,f3261])).
fof(f3261,plain,(
  ( ! [X3] : (s('type.realax.real','const.transc.sin_1'(s('type.realax.real','const.realax.real_add_2'(s('type.realax.real',X3),s('type.realax.real',X3))))) = s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real','const.transc.sin_1'(s('type.realax.real',X3))),s('type.realax.real','const.transc.cos_1'(s('type.realax.real',X3)))))))) )),
  inference(forward_demodulation,[],[f3251,f32])).
fof(f32,plain,(
  ( ! [X0,X1] : (s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real',X0),s('type.realax.real',X1))) = s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real',X1),s('type.realax.real',X0)))) )),
  inference(cnf_transformation,[],[f16])).
fof(f16,plain,(
  ! [X0,X1] : s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real',X0),s('type.realax.real',X1))) = s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real',X1),s('type.realax.real',X0)))),
  inference(rectify,[],[f8])).
fof(f8,axiom,(
  ! [X6,X8] : s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real',X6),s('type.realax.real',X8))) = s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real',X8),s('type.realax.real',X6)))),
  file('thm.transc.SIN_DOUBLE','thm.realax.REAL_MUL_SYM')).
fof(f3251,plain,(
  ( ! [X3] : (s('type.realax.real','const.transc.sin_1'(s('type.realax.real','const.realax.real_add_2'(s('type.realax.real',X3),s('type.realax.real',X3))))) = s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real','const.transc.cos_1'(s('type.realax.real',X3))),s('type.realax.real','const.transc.sin_1'(s('type.realax.real',X3)))))))) )),
  inference(superposition,[],[f243,f28])).
fof(f28,plain,(
  ( ! [X0] : (s('type.realax.real','const.realax.real_add_2'(s('type.realax.real',X0),s('type.realax.real',X0))) = s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.realax.real',X0)))) )),
  inference(cnf_transformation,[],[f13])).
fof(f13,plain,(
  ! [X0] : s('type.realax.real','const.realax.real_add_2'(s('type.realax.real',X0),s('type.realax.real',X0))) = s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.realax.real',X0)))),
  inference(rectify,[],[f9])).
fof(f9,axiom,(
  ! [X6] : s('type.realax.real','const.realax.real_add_2'(s('type.realax.real',X6),s('type.realax.real',X6))) = s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.realax.real',X6)))),
  file('thm.transc.SIN_DOUBLE','thm.real.REAL_DOUBLE')).
fof(f243,plain,(
  ( ! [X0,X1] : (s('type.realax.real','const.transc.sin_1'(s('type.realax.real','const.realax.real_add_2'(s('type.realax.real',X0),s('type.realax.real',X1))))) = s('type.realax.real','const.realax.real_add_2'(s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real','const.transc.cos_1'(s('type.realax.real',X1))),s('type.realax.real','const.transc.sin_1'(s('type.realax.real',X0))))),s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real','const.transc.cos_1'(s('type.realax.real',X0))),s('type.realax.real','const.transc.sin_1'(s('type.realax.real',X1)))))))) )),
  inference(superposition,[],[f33,f32])).
fof(f33,plain,(
  ( ! [X0,X1] : (s('type.realax.real','const.transc.sin_1'(s('type.realax.real','const.realax.real_add_2'(s('type.realax.real',X0),s('type.realax.real',X1))))) = s('type.realax.real','const.realax.real_add_2'(s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real','const.transc.sin_1'(s('type.realax.real',X0))),s('type.realax.real','const.transc.cos_1'(s('type.realax.real',X1))))),s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real','const.transc.cos_1'(s('type.realax.real',X0))),s('type.realax.real','const.transc.sin_1'(s('type.realax.real',X1)))))))) )),
  inference(cnf_transformation,[],[f17])).
fof(f17,plain,(
  ! [X0,X1] : s('type.realax.real','const.transc.sin_1'(s('type.realax.real','const.realax.real_add_2'(s('type.realax.real',X0),s('type.realax.real',X1))))) = s('type.realax.real','const.realax.real_add_2'(s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real','const.transc.sin_1'(s('type.realax.real',X0))),s('type.realax.real','const.transc.cos_1'(s('type.realax.real',X1))))),s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real','const.transc.cos_1'(s('type.realax.real',X0))),s('type.realax.real','const.transc.sin_1'(s('type.realax.real',X1)))))))),
  inference(rectify,[],[f10])).
fof(f10,axiom,(
  ! [X6,X8] : s('type.realax.real','const.transc.sin_1'(s('type.realax.real','const.realax.real_add_2'(s('type.realax.real',X6),s('type.realax.real',X8))))) = s('type.realax.real','const.realax.real_add_2'(s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real','const.transc.sin_1'(s('type.realax.real',X6))),s('type.realax.real','const.transc.cos_1'(s('type.realax.real',X8))))),s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real','const.transc.cos_1'(s('type.realax.real',X6))),s('type.realax.real','const.transc.sin_1'(s('type.realax.real',X8)))))))),
  file('thm.transc.SIN_DOUBLE','thm.transc.SIN_ADD')).
fof(f1875,plain,(
  s('type.realax.real','const.transc.sin_1'(s('type.realax.real','const.realax.real_add_2'(s('type.realax.real',sK0),s('type.realax.real',sK0))))) != s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real','const.transc.sin_1'(s('type.realax.real',sK0))),s('type.realax.real','const.transc.cos_1'(s('type.realax.real',sK0)))))))),
  inference(forward_demodulation,[],[f1874,f195])).
fof(f195,plain,(
  ( ! [X1] : (s('type.realax.real','const.realax.real_add_2'(s('type.realax.real',X1),s('type.realax.real',X1))) = s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real',X1),s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) )),
  inference(superposition,[],[f28,f32])).
fof(f1874,plain,(
  s('type.realax.real','const.transc.sin_1'(s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real',sK0),s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) != s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real','const.transc.sin_1'(s('type.realax.real',sK0))),s('type.realax.real','const.transc.cos_1'(s('type.realax.real',sK0)))))))),
  inference(forward_demodulation,[],[f25,f32])).
fof(f25,plain,(
  s('type.realax.real','const.transc.sin_1'(s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.realax.real',sK0))))) != s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real','const.transc.sin_1'(s('type.realax.real',sK0))),s('type.realax.real','const.transc.cos_1'(s('type.realax.real',sK0)))))))),
  inference(cnf_transformation,[],[f22])).
fof(f22,plain,(
  s('type.realax.real','const.transc.sin_1'(s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.realax.real',sK0))))) != s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real','const.transc.sin_1'(s('type.realax.real',sK0))),s('type.realax.real','const.transc.cos_1'(s('type.realax.real',sK0)))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0])],[f20])).
fof(f20,plain,(
  ? [X0] : s('type.realax.real','const.transc.sin_1'(s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.realax.real',X0))))) != s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real','const.transc.sin_1'(s('type.realax.real',X0))),s('type.realax.real','const.transc.cos_1'(s('type.realax.real',X0)))))))),
  inference(ennf_transformation,[],[f11])).
fof(f11,plain,(
  ~! [X0] : s('type.realax.real','const.transc.sin_1'(s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.realax.real',X0))))) = s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real','const.transc.sin_1'(s('type.realax.real',X0))),s('type.realax.real','const.transc.cos_1'(s('type.realax.real',X0)))))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : s('type.realax.real','const.transc.sin_1'(s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.realax.real',X6))))) = s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real','const.transc.sin_1'(s('type.realax.real',X6))),s('type.realax.real','const.transc.cos_1'(s('type.realax.real',X6)))))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : s('type.realax.real','const.transc.sin_1'(s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.realax.real',X6))))) = s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real','const.transc.sin_1'(s('type.realax.real',X6))),s('type.realax.real','const.transc.cos_1'(s('type.realax.real',X6)))))))),
  file('thm.transc.SIN_DOUBLE','thm.transc.SIN_DOUBLE')).
% SZS output end Proof for thm.transc
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 89
% Passive clauses: 2614
% Generated clauses: 17761
% Final active clauses: 81
% Final passive clauses: 2441
% Input formulas: 9
% Initial clauses: 10
% 
% Duplicate literals: 1036
% Trivial inequalities: 260
% Fw subsumption resolutions: 2312
% Fw demodulations: 1489
% Bw demodulations: 5
% 
% Simple tautologies: 342
% Equational tautologies: 88
% Forward subsumptions: 7581
% Bw demodulations to eq. taut.: 1
% 
% Binary resolution: 28
% Forward superposition: 7789
% Backward superposition: 4129
% Self superposition: 328
% Equality factoring: 234
% Equality resolution: 16
% 
% Split clauses: 833
% Split components: 1683
% SAT solver clauses: 2112
% SAT solver unit clauses: 259
% SAT solver binary clauses: 540
% 
% Sat splits: 833
% Sat splitting refutations: 1
% 
% TWLsolver clauses: 2108
% TWLsolver calls for satisfiability: 91
% 
% Memory used [KB]: 6652
% Time elapsed: 0.534 s
% ------------------------------
% ------------------------------
% Success in time 0.543 s
