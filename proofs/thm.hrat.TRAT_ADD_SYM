Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 300 next slice time: 5
dis+11_7_3 on thm.hrat
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.hrat
% SZS output start Proof for thm.hrat
fof(f239,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f238,f202,f200])).
fof(f200,plain,(
  ( ! [X4] : (s(bool,'T_0') = s(bool,'const.hrat.trat_eq_2'(s('type.pair.prod'('type.num.num','type.num.num'),X4),s('type.pair.prod'('type.num.num','type.num.num'),X4)))) ) | $spl6),
  inference(cnf_transformation,[],[f200_D])).
fof(f200_D,plain,(
  ( ! [X4] : (s(bool,'T_0') = s(bool,'const.hrat.trat_eq_2'(s('type.pair.prod'('type.num.num','type.num.num'),X4),s('type.pair.prod'('type.num.num','type.num.num'),X4)))) ) <=> ~$spl6),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl6])])).
fof(f202,plain,(
  ( ! [X8] : (s(bool,'T_0') = s(bool,'const.hrat.trat_eq_2'(s('type.pair.prod'('type.num.num','type.num.num'),X8),s('type.pair.prod'('type.num.num','type.num.num'),X8)))) )),
  inference(subsumption_resolution,[],[f197,f22])).
fof(f22,plain,(
  ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f10])).
fof(f10,plain,(
  ~p(s(bool,'F_0'))),
  inference(flattening,[],[f2])).
fof(f2,axiom,(
  ~p(s(bool,'F_0'))),
  file('thm.hrat.TRAT_ADD_SYM',aHL_FALSITY)).
fof(f197,plain,(
  ( ! [X8] : (p(s(bool,'F_0')) | s(bool,'T_0') = s(bool,'const.hrat.trat_eq_2'(s('type.pair.prod'('type.num.num','type.num.num'),X8),s('type.pair.prod'('type.num.num','type.num.num'),X8)))) )),
  inference(superposition,[],[f191,f23])).
fof(f23,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f3])).
fof(f3,axiom,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) | s(bool,'F_0') = s(bool,X0))),
  file('thm.hrat.TRAT_ADD_SYM',aHL_BOOL_CASES)).
fof(f191,plain,(
  ( ! [X0] : (p(s(bool,'const.hrat.trat_eq_2'(s('type.pair.prod'('type.num.num','type.num.num'),X0),s('type.pair.prod'('type.num.num','type.num.num'),X0))))) )),
  inference(equality_resolution,[],[f25])).
fof(f25,plain,(
  ( ! [X0,X1] : (s('type.pair.prod'('type.num.num','type.num.num'),X0) != s('type.pair.prod'('type.num.num','type.num.num'),X1) | p(s(bool,'const.hrat.trat_eq_2'(s('type.pair.prod'('type.num.num','type.num.num'),X0),s('type.pair.prod'('type.num.num','type.num.num'),X1))))) )),
  inference(cnf_transformation,[],[f16])).
fof(f16,plain,(
  ! [X0,X1] : (s('type.pair.prod'('type.num.num','type.num.num'),X0) != s('type.pair.prod'('type.num.num','type.num.num'),X1) | p(s(bool,'const.hrat.trat_eq_2'(s('type.pair.prod'('type.num.num','type.num.num'),X0),s('type.pair.prod'('type.num.num','type.num.num'),X1)))))),
  inference(ennf_transformation,[],[f12])).
fof(f12,plain,(
  ! [X0,X1] : (s('type.pair.prod'('type.num.num','type.num.num'),X0) = s('type.pair.prod'('type.num.num','type.num.num'),X1) => p(s(bool,'const.hrat.trat_eq_2'(s('type.pair.prod'('type.num.num','type.num.num'),X0),s('type.pair.prod'('type.num.num','type.num.num'),X1)))))),
  inference(rectify,[],[f7])).
fof(f7,axiom,(
  ! [X8,X9] : (s('type.pair.prod'('type.num.num','type.num.num'),X8) = s('type.pair.prod'('type.num.num','type.num.num'),X9) => p(s(bool,'const.hrat.trat_eq_2'(s('type.pair.prod'('type.num.num','type.num.num'),X8),s('type.pair.prod'('type.num.num','type.num.num'),X9)))))),
  file('thm.hrat.TRAT_ADD_SYM','thm.hrat.TRAT_EQ_AP')).
fof(f238,plain,(
  $false | $spl6),
  inference(subsumption_resolution,[],[f237,f21])).
fof(f21,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f1])).
fof(f1,axiom,(
  p(s(bool,'T_0'))),
  file('thm.hrat.TRAT_ADD_SYM',aHL_TRUTH)).
fof(f237,plain,(
  ~p(s(bool,'T_0')) | $spl6),
  inference(forward_demodulation,[],[f236,f200])).
fof(f236,plain,(
  ~p(s(bool,'const.hrat.trat_eq_2'(s('type.pair.prod'('type.num.num','type.num.num'),'const.hrat.trat_add_2'(s('type.pair.prod'('type.num.num','type.num.num'),sK0),s('type.pair.prod'('type.num.num','type.num.num'),sK1))),s('type.pair.prod'('type.num.num','type.num.num'),'const.hrat.trat_add_2'(s('type.pair.prod'('type.num.num','type.num.num'),sK0),s('type.pair.prod'('type.num.num','type.num.num'),sK1))))))),
  inference(forward_demodulation,[],[f20,f24])).
fof(f24,plain,(
  ( ! [X0,X1] : (s('type.pair.prod'('type.num.num','type.num.num'),'const.hrat.trat_add_2'(s('type.pair.prod'('type.num.num','type.num.num'),X0),s('type.pair.prod'('type.num.num','type.num.num'),X1))) = s('type.pair.prod'('type.num.num','type.num.num'),'const.hrat.trat_add_2'(s('type.pair.prod'('type.num.num','type.num.num'),X1),s('type.pair.prod'('type.num.num','type.num.num'),X0)))) )),
  inference(cnf_transformation,[],[f11])).
fof(f11,plain,(
  ! [X0,X1] : s('type.pair.prod'('type.num.num','type.num.num'),'const.hrat.trat_add_2'(s('type.pair.prod'('type.num.num','type.num.num'),X0),s('type.pair.prod'('type.num.num','type.num.num'),X1))) = s('type.pair.prod'('type.num.num','type.num.num'),'const.hrat.trat_add_2'(s('type.pair.prod'('type.num.num','type.num.num'),X1),s('type.pair.prod'('type.num.num','type.num.num'),X0)))),
  inference(rectify,[],[f8])).
fof(f8,axiom,(
  ! [X6,X7] : s('type.pair.prod'('type.num.num','type.num.num'),'const.hrat.trat_add_2'(s('type.pair.prod'('type.num.num','type.num.num'),X6),s('type.pair.prod'('type.num.num','type.num.num'),X7))) = s('type.pair.prod'('type.num.num','type.num.num'),'const.hrat.trat_add_2'(s('type.pair.prod'('type.num.num','type.num.num'),X7),s('type.pair.prod'('type.num.num','type.num.num'),X6)))),
  file('thm.hrat.TRAT_ADD_SYM','thm.hrat.TRAT_ADD_SYM_EQ')).
fof(f20,plain,(
  ~p(s(bool,'const.hrat.trat_eq_2'(s('type.pair.prod'('type.num.num','type.num.num'),'const.hrat.trat_add_2'(s('type.pair.prod'('type.num.num','type.num.num'),sK0),s('type.pair.prod'('type.num.num','type.num.num'),sK1))),s('type.pair.prod'('type.num.num','type.num.num'),'const.hrat.trat_add_2'(s('type.pair.prod'('type.num.num','type.num.num'),sK1),s('type.pair.prod'('type.num.num','type.num.num'),sK0))))))),
  inference(cnf_transformation,[],[f18])).
fof(f18,plain,(
  ~p(s(bool,'const.hrat.trat_eq_2'(s('type.pair.prod'('type.num.num','type.num.num'),'const.hrat.trat_add_2'(s('type.pair.prod'('type.num.num','type.num.num'),sK0),s('type.pair.prod'('type.num.num','type.num.num'),sK1))),s('type.pair.prod'('type.num.num','type.num.num'),'const.hrat.trat_add_2'(s('type.pair.prod'('type.num.num','type.num.num'),sK1),s('type.pair.prod'('type.num.num','type.num.num'),sK0))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1])],[f15])).
fof(f15,plain,(
  ? [X0,X1] : ~p(s(bool,'const.hrat.trat_eq_2'(s('type.pair.prod'('type.num.num','type.num.num'),'const.hrat.trat_add_2'(s('type.pair.prod'('type.num.num','type.num.num'),X0),s('type.pair.prod'('type.num.num','type.num.num'),X1))),s('type.pair.prod'('type.num.num','type.num.num'),'const.hrat.trat_add_2'(s('type.pair.prod'('type.num.num','type.num.num'),X1),s('type.pair.prod'('type.num.num','type.num.num'),X0))))))),
  inference(ennf_transformation,[],[f9])).
fof(f9,plain,(
  ~! [X0,X1] : p(s(bool,'const.hrat.trat_eq_2'(s('type.pair.prod'('type.num.num','type.num.num'),'const.hrat.trat_add_2'(s('type.pair.prod'('type.num.num','type.num.num'),X0),s('type.pair.prod'('type.num.num','type.num.num'),X1))),s('type.pair.prod'('type.num.num','type.num.num'),'const.hrat.trat_add_2'(s('type.pair.prod'('type.num.num','type.num.num'),X1),s('type.pair.prod'('type.num.num','type.num.num'),X0))))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7] : p(s(bool,'const.hrat.trat_eq_2'(s('type.pair.prod'('type.num.num','type.num.num'),'const.hrat.trat_add_2'(s('type.pair.prod'('type.num.num','type.num.num'),X6),s('type.pair.prod'('type.num.num','type.num.num'),X7))),s('type.pair.prod'('type.num.num','type.num.num'),'const.hrat.trat_add_2'(s('type.pair.prod'('type.num.num','type.num.num'),X7),s('type.pair.prod'('type.num.num','type.num.num'),X6))))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7] : p(s(bool,'const.hrat.trat_eq_2'(s('type.pair.prod'('type.num.num','type.num.num'),'const.hrat.trat_add_2'(s('type.pair.prod'('type.num.num','type.num.num'),X6),s('type.pair.prod'('type.num.num','type.num.num'),X7))),s('type.pair.prod'('type.num.num','type.num.num'),'const.hrat.trat_add_2'(s('type.pair.prod'('type.num.num','type.num.num'),X7),s('type.pair.prod'('type.num.num','type.num.num'),X6))))))),
  file('thm.hrat.TRAT_ADD_SYM','thm.hrat.TRAT_ADD_SYM')).
% SZS output end Proof for thm.hrat
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 14
% Passive clauses: 38
% Generated clauses: 205
% Final active clauses: 11
% Final passive clauses: 18
% Input formulas: 7
% Initial clauses: 7
% 
% Duplicate literals: 41
% Trivial inequalities: 2
% Fw subsumption resolutions: 4
% Fw demodulations: 2
% Bw demodulations: 1
% 
% Simple tautologies: 16
% Equational tautologies: 14
% Forward subsumptions: 84
% 
% Binary resolution: 5
% Forward superposition: 44
% Backward superposition: 41
% Self superposition: 28
% Equality factoring: 26
% Equality resolution: 1
% 
% Split clauses: 3
% Split components: 6
% SAT solver clauses: 8
% SAT solver unit clauses: 4
% SAT solver binary clauses: 3
% SAT solver learnt clauses: 1
% 
% Sat splits: 3
% Sat splitting refutations: 2
% 
% TWLsolver clauses: 7
% TWLsolver calls for satisfiability: 4
% 
% Memory used [KB]: 639
% Time elapsed: 0.015 s
% ------------------------------
% ------------------------------
% Success in time 0.017 s
