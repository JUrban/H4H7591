Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 299 next slice time: 5
dis+11_7_3 on thm.ind_type
% (54915)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 126
% Passive clauses: 2154
% Generated clauses: 22227
% Final active clauses: 104
% Final passive clauses: 1827
% Input formulas: 18
% Initial clauses: 55
% 
% Duplicate literals: 883
% Trivial inequalities: 263
% Fw subsumption resolutions: 3459
% Fw demodulations: 3064
% Bw demodulations: 15
% 
% Simple tautologies: 346
% Equational tautologies: 54
% Forward subsumptions: 10249
% Bw demodulations to eq. taut.: 3
% 
% Binary resolution: 460
% Factoring: 9
% Forward superposition: 7617
% Backward superposition: 5788
% Self superposition: 230
% Equality factoring: 141
% Equality resolution: 22
% 
% Split clauses: 800
% Split components: 1604
% SAT solver clauses: 1849
% SAT solver unit clauses: 3
% SAT solver binary clauses: 84
% 
% Sat splits: 800
% Sat splitting refutations: 5
% 
% TWLsolver clauses: 1849
% TWLsolver calls for satisfiability: 233
% 
% Memory used [KB]: 12153
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 293 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.ind_type
% (54948)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 83
% Passive clauses: 464
% Generated clauses: 9908
% Final active clauses: 77
% Final passive clauses: 361
% Input formulas: 18
% Initial clauses: 55
% 
% Duplicate literals: 918
% Trivial inequalities: 106
% Fw subsumption resolutions: 1031
% Fw demodulations: 518
% Bw demodulations: 23
% Condensations: 1550
% Global subsumptions: 4
% 
% Simple tautologies: 214
% Equational tautologies: 50
% Forward subsumptions: 4086
% 
% Binary resolution: 295
% Factoring: 7
% Forward superposition: 2910
% Backward superposition: 1797
% Self superposition: 133
% Equality factoring: 124
% Equality resolution: 15
% 
% Split clauses: 149
% Split components: 336
% SAT solver clauses: 1007
% SAT solver unit clauses: 51
% SAT solver binary clauses: 31
% SAT solver learnt clauses: 8
% 
% Sat splits: 149
% Sat splitting refutations: 2
% 
% TWLsolver clauses: 991
% TWLsolver calls for satisfiability: 299
% 
% Memory used [KB]: 8059
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 286 next slice time: 103
lrs+11_2_br=off:cond=on:fde=none:gs=on:gsaa=full_model:lwlo=on:nwc=2:sas=minisat:stl=30:ssfp=100000:ssfq=1.4:smm=sco:ssnc=none:sp=occurrence:urr=on_98 on thm.ind_type
% (54983)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 320
% Passive clauses: 3778
% Generated clauses: 131613
% Final active clauses: 62
% Final passive clauses: 163
% Input formulas: 18
% Initial clauses: 55
% Discarded non-redundant clauses: 420
% 
% Duplicate literals: 9323
% Trivial inequalities: 1088
% Fw subsumption resolutions: 13852
% Fw demodulations: 10429
% Bw demodulations: 2505
% Condensations: 19929
% Global subsumptions: 73
% 
% Simple tautologies: 1458
% Equational tautologies: 925
% Forward subsumptions: 66788
% Fw demodulations to eq. taut.: 3
% Bw demodulations to eq. taut.: 24
% 
% Unit resulting resolution: 2469
% Factoring: 2
% Forward superposition: 33537
% Backward superposition: 29672
% Self superposition: 744
% Equality factoring: 535
% Equality resolution: 61
% 
% Split clauses: 392
% Split components: 819
% SAT solver clauses: 4792
% SAT solver unit clauses: 39
% SAT solver binary clauses: 295
% 
% Sat splits: 392
% Sat splitting refutations: 155
% 
% Memory used [KB]: 54753
% Time elapsed: 10.400 s
% ------------------------------
% ------------------------------
% remaining time: 182 next slice time: 39
dis+11_5_fde=none:nwc=1:sas=minisat:sd=1:ss=axioms:st=5.0:sos=all:sdd=large:sser=off:sfr=on:ssfp=100000:ssfq=2.0:ssnc=none_37 on thm.ind_type
% (55322)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 478
% Passive clauses: 20164
% Generated clauses: 93925
% Final active clauses: 184
% Final passive clauses: 16887
% Input formulas: 18
% Initial clauses: 54
% 
% Selected by SInE selection: 17
% SInE iterations: 1
% 
% Duplicate literals: 2519
% Trivial inequalities: 1285
% Fw subsumption resolutions: 17130
% Fw demodulations: 13094
% Bw demodulations: 218
% 
% Simple tautologies: 1964
% Equational tautologies: 84
% Forward subsumptions: 34137
% Bw demodulations to eq. taut.: 8
% 
% Binary resolution: 9864
% Factoring: 20
% Forward superposition: 28924
% Backward superposition: 19097
% Self superposition: 254
% Equality factoring: 202
% Equality resolution: 88
% 
% Split clauses: 3322
% Split components: 6684
% SAT solver clauses: 3411
% SAT solver unit clauses: 19
% SAT solver binary clauses: 872
% 
% Sat splits: 3322
% Sat splitting refutations: 65
% 
% Memory used [KB]: 36715
% Time elapsed: 4.0000 s
% ------------------------------
% ------------------------------
% remaining time: 142 next slice time: 6
lrs+1002_2:3_br=off:fde=unused:gs=on:gsaa=from_current:gsem=on:gsssp=full:nwc=1:sas=minisat:stl=30:sac=on:sser=off:sfr=on:ssfp=100000:ssfq=2.0:ssnc=none:sp=reverse_arity:urr=on_4 on thm.ind_type
% (55474)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 103
% Passive clauses: 1537
% Generated clauses: 11464
% Final active clauses: 73
% Final passive clauses: 1079
% Input formulas: 18
% Initial clauses: 55
% 
% Duplicate literals: 551
% Trivial inequalities: 314
% Fw subsumption resolutions: 1901
% Fw demodulations: 357
% Bw demodulations: 265
% Global subsumptions: 11
% 
% Simple tautologies: 637
% Equational tautologies: 83
% Forward subsumptions: 6013
% 
% Unit resulting resolution: 366
% Factoring: 3
% Forward superposition: 3791
% Backward superposition: 3237
% Self superposition: 90
% Equality factoring: 50
% Equality resolution: 17
% 
% Split clauses: 22
% Split components: 44
% SAT solver clauses: 1622
% SAT solver unit clauses: 17
% SAT solver binary clauses: 75
% 
% Sat splits: 22
% Sat splitting refutations: 50
% 
% Memory used [KB]: 8571
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 135 next slice time: 15
lrs+1011_12_bs=on:bsr=unit_only:cond=on:gs=on:gsaa=from_current:gsssp=full:nwc=1.1:sas=minisat:stl=60:sos=all:sac=on:sdd=off:sser=off:sfr=on:ssfp=100000:ssfq=1.2:ssnc=none:sp=reverse_arity:updr=off_14 on thm.ind_type
% (55491)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 193
% Passive clauses: 2201
% Generated clauses: 16401
% Final active clauses: 115
% Final passive clauses: 1144
% Input formulas: 18
% Initial clauses: 55
% 
% Duplicate literals: 836
% Trivial inequalities: 323
% Fw subsumption resolutions: 1703
% Bw subsumption resolutions: 33
% Fw demodulations: 1284
% Bw demodulations: 349
% Condensations: 1709
% Global subsumptions: 10
% 
% Simple tautologies: 603
% Equational tautologies: 77
% Forward subsumptions: 7629
% Backward subsumptions: 318
% 
% Binary resolution: 1445
% Factoring: 7
% Forward superposition: 3641
% Backward superposition: 3110
% Self superposition: 64
% Equality factoring: 98
% Equality resolution: 55
% 
% Split clauses: 5
% Split components: 10
% SAT solver clauses: 2250
% SAT solver unit clauses: 39
% SAT solver binary clauses: 173
% 
% Sat splits: 5
% Sat splitting refutations: 32
% 
% Memory used [KB]: 11257
% Time elapsed: 1.600 s
% ------------------------------
% ------------------------------
% remaining time: 119 next slice time: 9
lrs+10_8:1_bd=preordered:bs=on:ccuc=first:fsr=off:fde=unused:gs=on:gsaa=from_current:gsem=on:gsssp=full:nwc=1:nicw=on:sas=minisat:stl=120:sos=on:sscc=on:sser=off:sfr=on:ssfp=4000:ssfq=1.0:ssnc=none:sp=reverse_arity:urr=on_7 on thm.ind_type
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.ind_type
% SZS output start Proof for thm.ind_type
fof(f606,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f84,f137,f83,f139,f81,f141,f146,f145,f143,f142,f157,f156,f180,f178,f194,f195,f202,f210,f209,f207,f206,f205,f216,f223,f222,f312,f315,f313,f318,f314,f320,f330,f328,f326,f321,f341,f331,f339,f355,f358,f356,f378,f385,f389,f199,f392,f397,f394,f399,f395,f401,f403,f405,f402,f407,f425,f387,f197,f439,f438,f436,f435,f434,f444,f451,f450,f522,f528,f590,f588,f587,f585,f584,f602,f201,f391,f594,f603,f600,f604,f605])).
fof(f605,plain,(
  s(fun('type.num.num',fun(sK0,bool)),'const.ind_type.ZBOT_0') != s(fun('type.num.num',fun(sK0,bool)),sK4(sK1,sK3,sK0)) | ~p(s(bool,happ(s(fun(fun('type.num.num',fun(sK0,bool)),bool),sK1),s(fun('type.num.num',fun(sK0,bool)),'const.ind_type.ZBOT_0')))) | p(s(bool,happ(s(fun(fun('type.num.num',fun(sK0,bool)),bool),sK1),s(fun('type.num.num',fun(sK0,bool)),sK4(sK1,sK3,sK0)))))),
  introduced(theory_axiom,[])).
fof(f604,plain,(
  s(bool,'F_0') != s(bool,happ(s(fun(fun('type.num.num',fun(sK0,bool)),bool),sK1),s(fun('type.num.num',fun(sK0,bool)),sK3))) | ~p(s(bool,'F_0')) | p(s(bool,happ(s(fun(fun('type.num.num',fun(sK0,bool)),bool),sK1),s(fun('type.num.num',fun(sK0,bool)),sK3))))),
  introduced(theory_axiom,[])).
fof(f600,plain,(
  s(bool,'T_0') = s(bool,happ(s(fun(fun('type.num.num',fun(sK0,bool)),bool),sK1),s(fun('type.num.num',fun(sK0,bool)),sK4(sK1,sK3,sK0)))) | $spl50),
  inference(cnf_transformation,[],[f600_D])).
fof(f600_D,plain,(
  s(bool,'T_0') = s(bool,happ(s(fun(fun('type.num.num',fun(sK0,bool)),bool),sK1),s(fun('type.num.num',fun(sK0,bool)),sK4(sK1,sK3,sK0)))) <=> ~$spl50),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl50])])).
fof(f603,plain,(
  s(bool,'T_0') = s(bool,happ(s(fun(fun('type.num.num',fun(sK0,bool)),bool),sK1),s(fun('type.num.num',fun(sK0,bool)),sK4(sK1,sK3,sK0)))) | $spl34),
  inference(global_subsumption,[],[f84,f83,f81,f226,f227,f228,f361,f365,f371,f372,f373,f374,f375,f376,f377,f419,f387,f429,f432,f82,f579,f588,f587,f585,f584,f595,f598])).
fof(f598,plain,(
  p(s(bool,'F_0')) | s(bool,'T_0') = s(bool,happ(s(fun(fun('type.num.num',fun(sK0,bool)),bool),sK1),s(fun('type.num.num',fun(sK0,bool)),sK4(sK1,sK3,sK0)))) | $spl34),
  inference(superposition,[],[f387,f88])).
fof(f88,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f3])).
fof(f3,axiom,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) | s(bool,'F_0') = s(bool,X0))),
  file('thm.ind_type.ZRECSPACE_ind',aHL_BOOL_CASES)).
fof(f595,plain,(
  ( ! [X2] : (~p(s(bool,X2)) | s(bool,X2) = s(bool,happ(s(fun(fun('type.num.num',fun(sK0,bool)),bool),sK1),s(fun('type.num.num',fun(sK0,bool)),sK4(sK1,sK3,sK0))))) ) | $spl34),
  inference(resolution,[],[f387,f117])).
fof(f117,plain,(
  ( ! [X0,X1] : (~p(s(bool,X1)) | ~p(s(bool,X0)) | s(bool,X0) = s(bool,X1)) )),
  inference(cnf_transformation,[],[f55])).
fof(f55,plain,(
  ! [X0,X1] : ((p(s(bool,X0)) & ~p(s(bool,X1))) | (p(s(bool,X1)) & ~p(s(bool,X0))) | s(bool,X0) = s(bool,X1))),
  inference(flattening,[],[f54])).
fof(f54,plain,(
  ! [X0,X1] : ((p(s(bool,X0)) & ~p(s(bool,X1))) | ((p(s(bool,X1)) & ~p(s(bool,X0))) | s(bool,X0) = s(bool,X1)))),
  inference(ennf_transformation,[],[f35])).
fof(f35,plain,(
  ! [X0,X1] : ((p(s(bool,X0)) => p(s(bool,X1))) => ((p(s(bool,X1)) => p(s(bool,X0))) => s(bool,X0) = s(bool,X1)))),
  inference(rectify,[],[f9])).
fof(f9,axiom,(
  ! [X15,X16] : ((p(s(bool,X15)) => p(s(bool,X16))) => ((p(s(bool,X16)) => p(s(bool,X15))) => s(bool,X15) = s(bool,X16)))),
  file('thm.ind_type.ZRECSPACE_ind','thm.bool.IMP_ANTISYM_AX')).
fof(f579,plain,(
  ( ! [X30,X35,X33,X31,X34,X32] : (p(s(bool,happ(s(fun(fun('type.num.num',fun(sK0,bool)),bool),sK1),s(fun('type.num.num',fun(sK0,bool)),'const.ind_type.ZCONSTR_3'(s('type.num.num',X30),s(sK0,X31),s(fun('type.num.num',fun('type.num.num',fun(sK0,bool))),X32)))))) | p(s(bool,happ(s(fun(fun('type.num.num',fun(sK0,bool)),bool),sK1),s(fun('type.num.num',fun(sK0,bool)),'const.ind_type.ZCONSTR_3'(s('type.num.num',X33),s(sK0,X34),s(fun('type.num.num',fun('type.num.num',fun(sK0,bool))),X35)))))) | s(bool,happ(s(fun(fun('type.num.num',fun(sK0,bool)),bool),sK1),s(fun('type.num.num',fun(sK0,bool)),happ(s(fun('type.num.num',fun('type.num.num',fun(sK0,bool))),X32),s('type.num.num',sK2(X32,X31,X30)))))) = s(bool,happ(s(fun(fun('type.num.num',fun(sK0,bool)),bool),sK1),s(fun('type.num.num',fun(sK0,bool)),happ(s(fun('type.num.num',fun('type.num.num',fun(sK0,bool))),X35),s('type.num.num',sK2(X35,X34,X33))))))) )),
  inference(resolution,[],[f82,f228])).
fof(f82,plain,(
  ( ! [X4,X5,X3] : (~p(s(bool,happ(s(fun(fun('type.num.num',fun(sK0,bool)),bool),sK1),s(fun('type.num.num',fun(sK0,bool)),happ(s(fun('type.num.num',fun('type.num.num',fun(sK0,bool))),X5),s('type.num.num',sK2(X5,X4,X3))))))) | p(s(bool,happ(s(fun(fun('type.num.num',fun(sK0,bool)),bool),sK1),s(fun('type.num.num',fun(sK0,bool)),'const.ind_type.ZCONSTR_3'(s('type.num.num',X3),s(sK0,X4),s(fun('type.num.num',fun('type.num.num',fun(sK0,bool))),X5))))))) )),
  inference(cnf_transformation,[],[f62])).
fof(f62,plain,(
  p(s(bool,happ(s(fun(fun('type.num.num',fun(sK0,bool)),bool),sK1),s(fun('type.num.num',fun(sK0,bool)),'const.ind_type.ZBOT_0')))) & ! [X3,X4,X5] : (~p(s(bool,happ(s(fun(fun('type.num.num',fun(sK0,bool)),bool),sK1),s(fun('type.num.num',fun(sK0,bool)),happ(s(fun('type.num.num',fun('type.num.num',fun(sK0,bool))),X5),s('type.num.num',sK2(X5,X4,X3))))))) | p(s(bool,happ(s(fun(fun('type.num.num',fun(sK0,bool)),bool),sK1),s(fun('type.num.num',fun(sK0,bool)),'const.ind_type.ZCONSTR_3'(s('type.num.num',X3),s(sK0,X4),s(fun('type.num.num',fun('type.num.num',fun(sK0,bool))),X5))))))) & (p(s(bool,'const.ind_type.ZRECSPACE_1'(s(fun('type.num.num',fun(sK0,bool)),sK3)))) & ~p(s(bool,happ(s(fun(fun('type.num.num',fun(sK0,bool)),bool),sK1),s(fun('type.num.num',fun(sK0,bool)),sK3)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2,sK3])],[f61])).
fof(f61,plain,(
  ? [X0,X1] : (p(s(bool,happ(s(fun(fun('type.num.num',fun(X0,bool)),bool),X1),s(fun('type.num.num',fun(X0,bool)),'const.ind_type.ZBOT_0')))) & ! [X3,X4,X5] : (? [X6] : ~p(s(bool,happ(s(fun(fun('type.num.num',fun(X0,bool)),bool),X1),s(fun('type.num.num',fun(X0,bool)),happ(s(fun('type.num.num',fun('type.num.num',fun(X0,bool))),X5),s('type.num.num',X6)))))) | p(s(bool,happ(s(fun(fun('type.num.num',fun(X0,bool)),bool),X1),s(fun('type.num.num',fun(X0,bool)),'const.ind_type.ZCONSTR_3'(s('type.num.num',X3),s(X0,X4),s(fun('type.num.num',fun('type.num.num',fun(X0,bool))),X5))))))) & ? [X2] : (p(s(bool,'const.ind_type.ZRECSPACE_1'(s(fun('type.num.num',fun(X0,bool)),X2)))) & ~p(s(bool,happ(s(fun(fun('type.num.num',fun(X0,bool)),bool),X1),s(fun('type.num.num',fun(X0,bool)),X2))))))),
  inference(rectify,[],[f43])).
fof(f43,plain,(
  ? [X0,X1] : (p(s(bool,happ(s(fun(fun('type.num.num',fun(X0,bool)),bool),X1),s(fun('type.num.num',fun(X0,bool)),'const.ind_type.ZBOT_0')))) & ! [X2,X3,X4] : (? [X5] : ~p(s(bool,happ(s(fun(fun('type.num.num',fun(X0,bool)),bool),X1),s(fun('type.num.num',fun(X0,bool)),happ(s(fun('type.num.num',fun('type.num.num',fun(X0,bool))),X4),s('type.num.num',X5)))))) | p(s(bool,happ(s(fun(fun('type.num.num',fun(X0,bool)),bool),X1),s(fun('type.num.num',fun(X0,bool)),'const.ind_type.ZCONSTR_3'(s('type.num.num',X2),s(X0,X3),s(fun('type.num.num',fun('type.num.num',fun(X0,bool))),X4))))))) & ? [X6] : (p(s(bool,'const.ind_type.ZRECSPACE_1'(s(fun('type.num.num',fun(X0,bool)),X6)))) & ~p(s(bool,happ(s(fun(fun('type.num.num',fun(X0,bool)),bool),X1),s(fun('type.num.num',fun(X0,bool)),X6))))))),
  inference(flattening,[],[f42])).
fof(f42,plain,(
  ? [X0,X1] : ((p(s(bool,happ(s(fun(fun('type.num.num',fun(X0,bool)),bool),X1),s(fun('type.num.num',fun(X0,bool)),'const.ind_type.ZBOT_0')))) & ! [X2,X3,X4] : (? [X5] : ~p(s(bool,happ(s(fun(fun('type.num.num',fun(X0,bool)),bool),X1),s(fun('type.num.num',fun(X0,bool)),happ(s(fun('type.num.num',fun('type.num.num',fun(X0,bool))),X4),s('type.num.num',X5)))))) | p(s(bool,happ(s(fun(fun('type.num.num',fun(X0,bool)),bool),X1),s(fun('type.num.num',fun(X0,bool)),'const.ind_type.ZCONSTR_3'(s('type.num.num',X2),s(X0,X3),s(fun('type.num.num',fun('type.num.num',fun(X0,bool))),X4)))))))) & ? [X6] : (p(s(bool,'const.ind_type.ZRECSPACE_1'(s(fun('type.num.num',fun(X0,bool)),X6)))) & ~p(s(bool,happ(s(fun(fun('type.num.num',fun(X0,bool)),bool),X1),s(fun('type.num.num',fun(X0,bool)),X6))))))),
  inference(ennf_transformation,[],[f21])).
fof(f21,plain,(
  ~! [X0,X1] : ((p(s(bool,happ(s(fun(fun('type.num.num',fun(X0,bool)),bool),X1),s(fun('type.num.num',fun(X0,bool)),'const.ind_type.ZBOT_0')))) & ! [X2,X3,X4] : (! [X5] : p(s(bool,happ(s(fun(fun('type.num.num',fun(X0,bool)),bool),X1),s(fun('type.num.num',fun(X0,bool)),happ(s(fun('type.num.num',fun('type.num.num',fun(X0,bool))),X4),s('type.num.num',X5)))))) => p(s(bool,happ(s(fun(fun('type.num.num',fun(X0,bool)),bool),X1),s(fun('type.num.num',fun(X0,bool)),'const.ind_type.ZCONSTR_3'(s('type.num.num',X2),s(X0,X3),s(fun('type.num.num',fun('type.num.num',fun(X0,bool))),X4)))))))) => ! [X6] : (p(s(bool,'const.ind_type.ZRECSPACE_1'(s(fun('type.num.num',fun(X0,bool)),X6)))) => p(s(bool,happ(s(fun(fun('type.num.num',fun(X0,bool)),bool),X1),s(fun('type.num.num',fun(X0,bool)),X6))))))),
  inference(flattening,[],[f20])).
fof(f20,plain,(
  ~! [X0] : ! [X1] : ((p(s(bool,happ(s(fun(fun('type.num.num',fun(X0,bool)),bool),X1),s(fun('type.num.num',fun(X0,bool)),'const.ind_type.ZBOT_0')))) & ! [X2,X3,X4] : (! [X5] : p(s(bool,happ(s(fun(fun('type.num.num',fun(X0,bool)),bool),X1),s(fun('type.num.num',fun(X0,bool)),happ(s(fun('type.num.num',fun('type.num.num',fun(X0,bool))),X4),s('type.num.num',X5)))))) => p(s(bool,happ(s(fun(fun('type.num.num',fun(X0,bool)),bool),X1),s(fun('type.num.num',fun(X0,bool)),'const.ind_type.ZCONSTR_3'(s('type.num.num',X2),s(X0,X3),s(fun('type.num.num',fun('type.num.num',fun(X0,bool))),X4)))))))) => ! [X6] : (p(s(bool,'const.ind_type.ZRECSPACE_1'(s(fun('type.num.num',fun(X0,bool)),X6)))) => p(s(bool,happ(s(fun(fun('type.num.num',fun(X0,bool)),bool),X1),s(fun('type.num.num',fun(X0,bool)),X6))))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : ! [X7] : ((p(s(bool,happ(s(fun(fun('type.num.num',fun(X6,bool)),bool),X7),s(fun('type.num.num',fun(X6,bool)),'const.ind_type.ZBOT_0')))) & ! [X8,X9,X10] : (! [X11] : p(s(bool,happ(s(fun(fun('type.num.num',fun(X6,bool)),bool),X7),s(fun('type.num.num',fun(X6,bool)),happ(s(fun('type.num.num',fun('type.num.num',fun(X6,bool))),X10),s('type.num.num',X11)))))) => p(s(bool,happ(s(fun(fun('type.num.num',fun(X6,bool)),bool),X7),s(fun('type.num.num',fun(X6,bool)),'const.ind_type.ZCONSTR_3'(s('type.num.num',X8),s(X6,X9),s(fun('type.num.num',fun('type.num.num',fun(X6,bool))),X10)))))))) => ! [X12] : (p(s(bool,'const.ind_type.ZRECSPACE_1'(s(fun('type.num.num',fun(X6,bool)),X12)))) => p(s(bool,happ(s(fun(fun('type.num.num',fun(X6,bool)),bool),X7),s(fun('type.num.num',fun(X6,bool)),X12))))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : ! [X7] : ((p(s(bool,happ(s(fun(fun('type.num.num',fun(X6,bool)),bool),X7),s(fun('type.num.num',fun(X6,bool)),'const.ind_type.ZBOT_0')))) & ! [X8,X9,X10] : (! [X11] : p(s(bool,happ(s(fun(fun('type.num.num',fun(X6,bool)),bool),X7),s(fun('type.num.num',fun(X6,bool)),happ(s(fun('type.num.num',fun('type.num.num',fun(X6,bool))),X10),s('type.num.num',X11)))))) => p(s(bool,happ(s(fun(fun('type.num.num',fun(X6,bool)),bool),X7),s(fun('type.num.num',fun(X6,bool)),'const.ind_type.ZCONSTR_3'(s('type.num.num',X8),s(X6,X9),s(fun('type.num.num',fun('type.num.num',fun(X6,bool))),X10)))))))) => ! [X12] : (p(s(bool,'const.ind_type.ZRECSPACE_1'(s(fun('type.num.num',fun(X6,bool)),X12)))) => p(s(bool,happ(s(fun(fun('type.num.num',fun(X6,bool)),bool),X7),s(fun('type.num.num',fun(X6,bool)),X12))))))),
  file('thm.ind_type.ZRECSPACE_ind','thm.ind_type.ZRECSPACE_ind')).
fof(f432,plain,(
  ( ! [X24,X23,X21,X25,X22,X20] : (s(fun('type.num.num',fun(sK0,bool)),sK4(sK1,happ(s(fun('type.num.num',fun('type.num.num',fun(sK0,bool))),X20),s('type.num.num',sK2(X20,X21,X22))),sK0)) = s(fun('type.num.num',fun(sK0,bool)),'const.ind_type.ZCONSTR_3'(s('type.num.num',sK5(sK1,happ(s(fun('type.num.num',fun('type.num.num',fun(sK0,bool))),X20),s('type.num.num',sK2(X20,X21,X22))),sK0)),s(sK0,sK6(sK1,happ(s(fun('type.num.num',fun('type.num.num',fun(sK0,bool))),X20),s('type.num.num',sK2(X20,X21,X22))),sK0)),s(fun('type.num.num',fun('type.num.num',fun(sK0,bool))),sK7(sK1,happ(s(fun('type.num.num',fun('type.num.num',fun(sK0,bool))),X20),s('type.num.num',sK2(X20,X21,X22))),sK0)))) | s(fun('type.num.num',fun(sK0,bool)),'const.ind_type.ZBOT_0') = s(fun('type.num.num',fun(sK0,bool)),sK4(sK1,happ(s(fun('type.num.num',fun('type.num.num',fun(sK0,bool))),X20),s('type.num.num',sK2(X20,X21,X22))),sK0)) | p(s(bool,happ(s(fun(fun('type.num.num',fun(sK0,bool)),bool),sK1),s(fun('type.num.num',fun(sK0,bool)),'const.ind_type.ZCONSTR_3'(s('type.num.num',X22),s(sK0,X21),s(fun('type.num.num',fun('type.num.num',fun(sK0,bool))),X20)))))) | p(s(bool,happ(s(fun(fun('type.num.num',fun(sK0,bool)),bool),sK1),s(fun('type.num.num',fun(sK0,bool)),'const.ind_type.ZCONSTR_3'(s('type.num.num',X23),s(sK0,X24),s(fun('type.num.num',fun('type.num.num',fun(sK0,bool))),X25)))))) | s(bool,'const.ind_type.ZRECSPACE_1'(s(fun('type.num.num',fun(sK0,bool)),happ(s(fun('type.num.num',fun('type.num.num',fun(sK0,bool))),X20),s('type.num.num',sK2(X20,X21,X22)))))) = s(bool,happ(s(fun(fun('type.num.num',fun(sK0,bool)),bool),sK1),s(fun('type.num.num',fun(sK0,bool)),happ(s(fun('type.num.num',fun('type.num.num',fun(sK0,bool))),X25),s('type.num.num',sK2(X25,X24,X23))))))) )),
  inference(resolution,[],[f227,f228])).
fof(f429,plain,(
  ( ! [X12,X10,X11,X9] : (s(fun('type.num.num',fun(sK0,bool)),sK4(sK1,happ(s(fun('type.num.num',fun('type.num.num',fun(sK0,bool))),X9),s('type.num.num',sK2(X9,X10,X11))),sK0)) = s(fun('type.num.num',fun(sK0,bool)),'const.ind_type.ZCONSTR_3'(s('type.num.num',sK5(sK1,happ(s(fun('type.num.num',fun('type.num.num',fun(sK0,bool))),X9),s('type.num.num',sK2(X9,X10,X11))),sK0)),s(sK0,sK6(sK1,happ(s(fun('type.num.num',fun('type.num.num',fun(sK0,bool))),X9),s('type.num.num',sK2(X9,X10,X11))),sK0)),s(fun('type.num.num',fun('type.num.num',fun(sK0,bool))),sK7(sK1,happ(s(fun('type.num.num',fun('type.num.num',fun(sK0,bool))),X9),s('type.num.num',sK2(X9,X10,X11))),sK0)))) | s(fun('type.num.num',fun(sK0,bool)),'const.ind_type.ZBOT_0') = s(fun('type.num.num',fun(sK0,bool)),sK4(sK1,happ(s(fun('type.num.num',fun('type.num.num',fun(sK0,bool))),X9),s('type.num.num',sK2(X9,X10,X11))),sK0)) | p(s(bool,happ(s(fun(fun('type.num.num',fun(sK0,bool)),bool),sK1),s(fun('type.num.num',fun(sK0,bool)),'const.ind_type.ZCONSTR_3'(s('type.num.num',X11),s(sK0,X10),s(fun('type.num.num',fun('type.num.num',fun(sK0,bool))),X9)))))) | p(s(bool,X12)) | s(bool,X12) = s(bool,'const.ind_type.ZRECSPACE_1'(s(fun('type.num.num',fun(sK0,bool)),happ(s(fun('type.num.num',fun('type.num.num',fun(sK0,bool))),X9),s('type.num.num',sK2(X9,X10,X11))))))) )),
  inference(resolution,[],[f227,f114])).
fof(f114,plain,(
  ( ! [X0,X1] : (p(s(bool,X1)) | p(s(bool,X0)) | s(bool,X0) = s(bool,X1)) )),
  inference(cnf_transformation,[],[f55])).
fof(f419,plain,(
  ( ! [X6,X8,X7,X5] : (p(s(bool,happ(s(fun(fun('type.num.num',fun(sK0,bool)),bool),sK1),s(fun('type.num.num',fun(sK0,bool)),X5)))) | s(fun('type.num.num',fun(sK0,bool)),'const.ind_type.ZBOT_0') = s(fun('type.num.num',fun(sK0,bool)),sK4(sK1,X5,sK0)) | ~p(s(bool,'const.ind_type.ZRECSPACE_1'(s(fun('type.num.num',fun(sK0,bool)),X5)))) | ~p(s(bool,X6)) | s(bool,X6) = s(bool,happ(s(fun(fun('type.num.num',fun(sK0,bool)),bool),sK1),s(fun('type.num.num',fun(sK0,bool)),'const.ind_type.ZCONSTR_3'(s('type.num.num',X7),s(sK0,X8),s(fun('type.num.num',fun('type.num.num',fun(sK0,bool))),sK7(sK1,X5,sK0))))))) )),
  inference(resolution,[],[f226,f117])).
fof(f377,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,happ(s(fun(fun('type.num.num',fun(sK0,bool)),bool),sK1),s(fun('type.num.num',fun(sK0,bool)),'const.ind_type.ZCONSTR_3'(s('type.num.num',X0),s(sK0,X1),s(fun('type.num.num',fun('type.num.num',fun(sK0,bool))),X2)))))) | s(bool,happ(s(fun(fun('type.num.num',fun(sK0,bool)),bool),sK1),s(fun('type.num.num',fun(sK0,bool)),'const.ind_type.ZCONSTR_3'(s('type.num.num',X0),s(sK0,X1),s(fun('type.num.num',fun('type.num.num',fun(sK0,bool))),X2))))) = s(bool,happ(s(fun(fun('type.num.num',fun(sK0,bool)),bool),sK1),s(fun('type.num.num',fun(sK0,bool)),happ(s(fun('type.num.num',fun('type.num.num',fun(sK0,bool))),X2),s('type.num.num',sK2(X2,X1,X0))))))) )),
  inference(factoring,[],[f228])).
fof(f376,plain,(
  ( ! [X61,X66,X64,X62,X60,X65,X63] : (p(s(bool,happ(s(fun(fun('type.num.num',fun(sK0,bool)),bool),sK1),s(fun('type.num.num',fun(sK0,bool)),'const.ind_type.ZCONSTR_3'(s('type.num.num',X60),s(sK0,X61),s(fun('type.num.num',fun('type.num.num',fun(sK0,bool))),X62)))))) | s(bool,happ(s(fun(X63,bool),X64),s(X63,X65))) = s(bool,happ(s(fun(fun('type.num.num',fun(sK0,bool)),bool),sK1),s(fun('type.num.num',fun(sK0,bool)),happ(s(fun('type.num.num',fun('type.num.num',fun(sK0,bool))),X62),s('type.num.num',sK2(X62,X61,X60)))))) | p(s(bool,happ(s(fun(X63,bool),X66),s(X63,sK13(X64,X66,X63))))) | p(s(bool,happ(s(fun(X63,bool),X64),s(X63,sK12(X64,X66,X63)))))) )),
  inference(resolution,[],[f228,f112])).
fof(f112,plain,(
  ( ! [X4,X2,X0,X1] : (~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X4)))) | p(s(bool,happ(s(fun(X0,bool),X1),s(X0,sK13(X2,X1,X0))))) | p(s(bool,happ(s(fun(X0,bool),X2),s(X0,sK12(X2,X1,X0)))))) )),
  inference(cnf_transformation,[],[f79])).
fof(f79,plain,(
  ! [X0,X1,X2] : ((p(s(bool,happ(s(fun(X0,bool),X2),s(X0,sK12(X2,X1,X0))))) & ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,sK12(X2,X1,X0)))))) | ! [X4] : ~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X4)))) | p(s(bool,happ(s(fun(X0,bool),X1),s(X0,sK13(X2,X1,X0))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK12,sK13])],[f78])).
fof(f78,plain,(
  ! [X0,X1,X2] : (? [X5] : (p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X5)))) & ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X5))))) | ! [X4] : ~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X4)))) | ? [X3] : p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3)))))),
  inference(rectify,[],[f53])).
fof(f53,plain,(
  ! [X0,X1,X2] : (? [X3] : (p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X3)))) & ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3))))) | ! [X4] : ~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X4)))) | ? [X5] : p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X5)))))),
  inference(flattening,[],[f52])).
fof(f52,plain,(
  ! [X0,X1,X2] : (? [X3] : (p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X3)))) & ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3))))) | (! [X4] : ~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X4)))) | ? [X5] : p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X5))))))),
  inference(ennf_transformation,[],[f34])).
fof(f34,plain,(
  ! [X0,X1,X2] : (! [X3] : (p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X3)))) => p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3))))) => (? [X4] : p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X4)))) => ? [X5] : p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X5))))))),
  inference(flattening,[],[f33])).
fof(f33,plain,(
  ! [X0] : ! [X1,X2] : (! [X3] : (p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X3)))) => p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3))))) => (? [X4] : p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X4)))) => ? [X5] : p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X5))))))),
  inference(rectify,[],[f18])).
fof(f18,axiom,(
  ! [X6] : ! [X21,X22] : (! [X19] : (p(s(bool,happ(s(fun(X6,bool),X22),s(X6,X19)))) => p(s(bool,happ(s(fun(X6,bool),X21),s(X6,X19))))) => (? [X19] : p(s(bool,happ(s(fun(X6,bool),X22),s(X6,X19)))) => ? [X19] : p(s(bool,happ(s(fun(X6,bool),X21),s(X6,X19))))))),
  file('thm.ind_type.ZRECSPACE_ind','thm.bool.MONO_EXISTS')).
fof(f375,plain,(
  ( ! [X59,X57,X54,X58,X56,X55,X53] : (p(s(bool,happ(s(fun(fun('type.num.num',fun(sK0,bool)),bool),sK1),s(fun('type.num.num',fun(sK0,bool)),'const.ind_type.ZCONSTR_3'(s('type.num.num',X53),s(sK0,X54),s(fun('type.num.num',fun('type.num.num',fun(sK0,bool))),X55)))))) | s(bool,happ(s(fun(X56,bool),X57),s(X56,sK12(X58,X57,X56)))) = s(bool,happ(s(fun(fun('type.num.num',fun(sK0,bool)),bool),sK1),s(fun('type.num.num',fun(sK0,bool)),happ(s(fun('type.num.num',fun('type.num.num',fun(sK0,bool))),X55),s('type.num.num',sK2(X55,X54,X53)))))) | ~p(s(bool,happ(s(fun(X56,bool),X58),s(X56,X59)))) | p(s(bool,happ(s(fun(X56,bool),X57),s(X56,sK13(X58,X57,X56)))))) )),
  inference(resolution,[],[f228,f113])).
fof(f113,plain,(
  ( ! [X4,X2,X0,X1] : (~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,sK12(X2,X1,X0))))) | ~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X4)))) | p(s(bool,happ(s(fun(X0,bool),X1),s(X0,sK13(X2,X1,X0)))))) )),
  inference(cnf_transformation,[],[f79])).
fof(f374,plain,(
  ( ! [X47,X52,X50,X48,X46,X51,X49] : (p(s(bool,happ(s(fun(fun('type.num.num',fun(sK0,bool)),bool),sK1),s(fun('type.num.num',fun(sK0,bool)),'const.ind_type.ZCONSTR_3'(s('type.num.num',X46),s(sK0,X47),s(fun('type.num.num',fun('type.num.num',fun(sK0,bool))),X48)))))) | s(bool,happ(s(fun(X49,bool),X50),s(X49,sK11(X50,X51,X49)))) = s(bool,happ(s(fun(fun('type.num.num',fun(sK0,bool)),bool),sK1),s(fun('type.num.num',fun(sK0,bool)),happ(s(fun('type.num.num',fun('type.num.num',fun(sK0,bool))),X48),s('type.num.num',sK2(X48,X47,X46)))))) | p(s(bool,happ(s(fun(X49,bool),X51),s(X49,X52)))) | ~p(s(bool,happ(s(fun(X49,bool),X51),s(X49,sK10(X50,X51,X49)))))) )),
  inference(resolution,[],[f228,f111])).
fof(f111,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,sK11(X2,X1,X0))))) | p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3)))) | ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,sK10(X2,X1,X0)))))) )),
  inference(cnf_transformation,[],[f77])).
fof(f77,plain,(
  ! [X0,X1,X2] : ((p(s(bool,happ(s(fun(X0,bool),X2),s(X0,sK10(X2,X1,X0))))) & ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,sK10(X2,X1,X0)))))) | ~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,sK11(X2,X1,X0))))) | ! [X3] : p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK10,sK11])],[f76])).
fof(f76,plain,(
  ! [X0,X1,X2] : (? [X5] : (p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X5)))) & ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X5))))) | ? [X4] : ~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X4)))) | ! [X3] : p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3)))))),
  inference(rectify,[],[f51])).
fof(f51,plain,(
  ! [X0,X1,X2] : (? [X3] : (p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X3)))) & ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3))))) | ? [X4] : ~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X4)))) | ! [X5] : p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X5)))))),
  inference(flattening,[],[f50])).
fof(f50,plain,(
  ! [X0,X1,X2] : (? [X3] : (p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X3)))) & ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3))))) | (? [X4] : ~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X4)))) | ! [X5] : p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X5))))))),
  inference(ennf_transformation,[],[f32])).
fof(f32,plain,(
  ! [X0,X1,X2] : (! [X3] : (p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X3)))) => p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3))))) => (! [X4] : p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X4)))) => ! [X5] : p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X5))))))),
  inference(flattening,[],[f31])).
fof(f31,plain,(
  ! [X0] : ! [X1,X2] : (! [X3] : (p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X3)))) => p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3))))) => (! [X4] : p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X4)))) => ! [X5] : p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X5))))))),
  inference(rectify,[],[f17])).
fof(f17,axiom,(
  ! [X6] : ! [X21,X22] : (! [X19] : (p(s(bool,happ(s(fun(X6,bool),X22),s(X6,X19)))) => p(s(bool,happ(s(fun(X6,bool),X21),s(X6,X19))))) => (! [X19] : p(s(bool,happ(s(fun(X6,bool),X22),s(X6,X19)))) => ! [X19] : p(s(bool,happ(s(fun(X6,bool),X21),s(X6,X19))))))),
  file('thm.ind_type.ZRECSPACE_ind','thm.bool.MONO_ALL')).
fof(f373,plain,(
  ( ! [X39,X45,X43,X41,X44,X42,X40] : (p(s(bool,happ(s(fun(fun('type.num.num',fun(sK0,bool)),bool),sK1),s(fun('type.num.num',fun(sK0,bool)),'const.ind_type.ZCONSTR_3'(s('type.num.num',X39),s(sK0,X40),s(fun('type.num.num',fun('type.num.num',fun(sK0,bool))),X41)))))) | s(bool,happ(s(fun(X42,bool),X43),s(X42,sK11(X43,X44,X42)))) = s(bool,happ(s(fun(fun('type.num.num',fun(sK0,bool)),bool),sK1),s(fun('type.num.num',fun(sK0,bool)),happ(s(fun('type.num.num',fun('type.num.num',fun(sK0,bool))),X41),s('type.num.num',sK2(X41,X40,X39)))))) | p(s(bool,happ(s(fun(X42,bool),X44),s(X42,X45)))) | p(s(bool,happ(s(fun(X42,bool),X43),s(X42,sK10(X43,X44,X42)))))) )),
  inference(resolution,[],[f228,f110])).
fof(f110,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,sK11(X2,X1,X0))))) | p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3)))) | p(s(bool,happ(s(fun(X0,bool),X2),s(X0,sK10(X2,X1,X0)))))) )),
  inference(cnf_transformation,[],[f77])).
fof(f372,plain,(
  ( ! [X37,X35,X33,X38,X36,X34] : (p(s(bool,happ(s(fun(fun('type.num.num',fun(sK0,bool)),bool),sK1),s(fun('type.num.num',fun(sK0,bool)),'const.ind_type.ZCONSTR_3'(s('type.num.num',X33),s(sK0,X34),s(fun('type.num.num',fun('type.num.num',fun(sK0,bool))),X35)))))) | s(bool,happ(s(fun(fun('type.num.num',fun(X36,bool)),bool),X37),s(fun('type.num.num',fun(X36,bool)),sK4(X37,X38,X36)))) = s(bool,happ(s(fun(fun('type.num.num',fun(sK0,bool)),bool),sK1),s(fun('type.num.num',fun(sK0,bool)),happ(s(fun('type.num.num',fun('type.num.num',fun(sK0,bool))),X35),s('type.num.num',sK2(X35,X34,X33)))))) | p(s(bool,happ(s(fun(fun('type.num.num',fun(X36,bool)),bool),X37),s(fun('type.num.num',fun(X36,bool)),X38)))) | ~p(s(bool,'const.ind_type.ZRECSPACE_1'(s(fun('type.num.num',fun(X36,bool)),X38))))) )),
  inference(resolution,[],[f228,f106])).
fof(f106,plain,(
  ( ! [X0,X8,X1] : (~p(s(bool,happ(s(fun(fun('type.num.num',fun(X0,bool)),bool),X8),s(fun('type.num.num',fun(X0,bool)),sK4(X8,X1,X0))))) | p(s(bool,happ(s(fun(fun('type.num.num',fun(X0,bool)),bool),X8),s(fun('type.num.num',fun(X0,bool)),X1)))) | ~p(s(bool,'const.ind_type.ZRECSPACE_1'(s(fun('type.num.num',fun(X0,bool)),X1))))) )),
  inference(cnf_transformation,[],[f75])).
fof(f75,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.ind_type.ZRECSPACE_1'(s(fun('type.num.num',fun(X0,bool)),X1)))) | ! [X8] : (((s(fun('type.num.num',fun(X0,bool)),'const.ind_type.ZBOT_0') = s(fun('type.num.num',fun(X0,bool)),sK4(X8,X1,X0)) | (s(fun('type.num.num',fun(X0,bool)),sK4(X8,X1,X0)) = s(fun('type.num.num',fun(X0,bool)),'const.ind_type.ZCONSTR_3'(s('type.num.num',sK5(X8,X1,X0)),s(X0,sK6(X8,X1,X0)),s(fun('type.num.num',fun('type.num.num',fun(X0,bool))),sK7(X8,X1,X0)))) & ! [X13] : p(s(bool,happ(s(fun(fun('type.num.num',fun(X0,bool)),bool),X8),s(fun('type.num.num',fun(X0,bool)),happ(s(fun('type.num.num',fun('type.num.num',fun(X0,bool))),sK7(X8,X1,X0)),s('type.num.num',X13)))))))) & ~p(s(bool,happ(s(fun(fun('type.num.num',fun(X0,bool)),bool),X8),s(fun('type.num.num',fun(X0,bool)),sK4(X8,X1,X0)))))) | p(s(bool,happ(s(fun(fun('type.num.num',fun(X0,bool)),bool),X8),s(fun('type.num.num',fun(X0,bool)),X1)))))) & ((! [X3] : ((s(fun('type.num.num',fun(X0,bool)),'const.ind_type.ZBOT_0') != s(fun('type.num.num',fun(X0,bool)),X3) & ! [X4,X5,X6] : (s(fun('type.num.num',fun(X0,bool)),X3) != s(fun('type.num.num',fun(X0,bool)),'const.ind_type.ZCONSTR_3'(s('type.num.num',X4),s(X0,X5),s(fun('type.num.num',fun('type.num.num',fun(X0,bool))),X6))) | ~p(s(bool,happ(s(fun(fun('type.num.num',fun(X0,bool)),bool),sK8(X1,X0)),s(fun('type.num.num',fun(X0,bool)),happ(s(fun('type.num.num',fun('type.num.num',fun(X0,bool))),X6),s('type.num.num',sK9(X6,X5,X4,X3,X1,X0))))))))) | p(s(bool,happ(s(fun(fun('type.num.num',fun(X0,bool)),bool),sK8(X1,X0)),s(fun('type.num.num',fun(X0,bool)),X3))))) & ~p(s(bool,happ(s(fun(fun('type.num.num',fun(X0,bool)),bool),sK8(X1,X0)),s(fun('type.num.num',fun(X0,bool)),X1))))) | p(s(bool,'const.ind_type.ZRECSPACE_1'(s(fun('type.num.num',fun(X0,bool)),X1))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK4,sK5,sK6,sK7,sK8,sK9])],[f74])).
fof(f74,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.ind_type.ZRECSPACE_1'(s(fun('type.num.num',fun(X0,bool)),X1)))) | ! [X8] : (? [X9] : ((s(fun('type.num.num',fun(X0,bool)),'const.ind_type.ZBOT_0') = s(fun('type.num.num',fun(X0,bool)),X9) | ? [X10,X11,X12] : (s(fun('type.num.num',fun(X0,bool)),X9) = s(fun('type.num.num',fun(X0,bool)),'const.ind_type.ZCONSTR_3'(s('type.num.num',X10),s(X0,X11),s(fun('type.num.num',fun('type.num.num',fun(X0,bool))),X12))) & ! [X13] : p(s(bool,happ(s(fun(fun('type.num.num',fun(X0,bool)),bool),X8),s(fun('type.num.num',fun(X0,bool)),happ(s(fun('type.num.num',fun('type.num.num',fun(X0,bool))),X12),s('type.num.num',X13)))))))) & ~p(s(bool,happ(s(fun(fun('type.num.num',fun(X0,bool)),bool),X8),s(fun('type.num.num',fun(X0,bool)),X9))))) | p(s(bool,happ(s(fun(fun('type.num.num',fun(X0,bool)),bool),X8),s(fun('type.num.num',fun(X0,bool)),X1)))))) & (? [X2] : (! [X3] : ((s(fun('type.num.num',fun(X0,bool)),'const.ind_type.ZBOT_0') != s(fun('type.num.num',fun(X0,bool)),X3) & ! [X4,X5,X6] : (s(fun('type.num.num',fun(X0,bool)),X3) != s(fun('type.num.num',fun(X0,bool)),'const.ind_type.ZCONSTR_3'(s('type.num.num',X4),s(X0,X5),s(fun('type.num.num',fun('type.num.num',fun(X0,bool))),X6))) | ? [X7] : ~p(s(bool,happ(s(fun(fun('type.num.num',fun(X0,bool)),bool),X2),s(fun('type.num.num',fun(X0,bool)),happ(s(fun('type.num.num',fun('type.num.num',fun(X0,bool))),X6),s('type.num.num',X7)))))))) | p(s(bool,happ(s(fun(fun('type.num.num',fun(X0,bool)),bool),X2),s(fun('type.num.num',fun(X0,bool)),X3))))) & ~p(s(bool,happ(s(fun(fun('type.num.num',fun(X0,bool)),bool),X2),s(fun('type.num.num',fun(X0,bool)),X1))))) | p(s(bool,'const.ind_type.ZRECSPACE_1'(s(fun('type.num.num',fun(X0,bool)),X1))))))),
  inference(rectify,[],[f73])).
fof(f73,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.ind_type.ZRECSPACE_1'(s(fun('type.num.num',fun(X0,bool)),X1)))) | ! [X2] : (? [X3] : ((s(fun('type.num.num',fun(X0,bool)),'const.ind_type.ZBOT_0') = s(fun('type.num.num',fun(X0,bool)),X3) | ? [X4,X5,X6] : (s(fun('type.num.num',fun(X0,bool)),X3) = s(fun('type.num.num',fun(X0,bool)),'const.ind_type.ZCONSTR_3'(s('type.num.num',X4),s(X0,X5),s(fun('type.num.num',fun('type.num.num',fun(X0,bool))),X6))) & ! [X7] : p(s(bool,happ(s(fun(fun('type.num.num',fun(X0,bool)),bool),X2),s(fun('type.num.num',fun(X0,bool)),happ(s(fun('type.num.num',fun('type.num.num',fun(X0,bool))),X6),s('type.num.num',X7)))))))) & ~p(s(bool,happ(s(fun(fun('type.num.num',fun(X0,bool)),bool),X2),s(fun('type.num.num',fun(X0,bool)),X3))))) | p(s(bool,happ(s(fun(fun('type.num.num',fun(X0,bool)),bool),X2),s(fun('type.num.num',fun(X0,bool)),X1)))))) & (? [X2] : (! [X3] : ((s(fun('type.num.num',fun(X0,bool)),'const.ind_type.ZBOT_0') != s(fun('type.num.num',fun(X0,bool)),X3) & ! [X4,X5,X6] : (s(fun('type.num.num',fun(X0,bool)),X3) != s(fun('type.num.num',fun(X0,bool)),'const.ind_type.ZCONSTR_3'(s('type.num.num',X4),s(X0,X5),s(fun('type.num.num',fun('type.num.num',fun(X0,bool))),X6))) | ? [X7] : ~p(s(bool,happ(s(fun(fun('type.num.num',fun(X0,bool)),bool),X2),s(fun('type.num.num',fun(X0,bool)),happ(s(fun('type.num.num',fun('type.num.num',fun(X0,bool))),X6),s('type.num.num',X7)))))))) | p(s(bool,happ(s(fun(fun('type.num.num',fun(X0,bool)),bool),X2),s(fun('type.num.num',fun(X0,bool)),X3))))) & ~p(s(bool,happ(s(fun(fun('type.num.num',fun(X0,bool)),bool),X2),s(fun('type.num.num',fun(X0,bool)),X1))))) | p(s(bool,'const.ind_type.ZRECSPACE_1'(s(fun('type.num.num',fun(X0,bool)),X1))))))),
  inference(nnf_transformation,[],[f49])).
fof(f49,plain,(
  ! [X0,X1] : (p(s(bool,'const.ind_type.ZRECSPACE_1'(s(fun('type.num.num',fun(X0,bool)),X1)))) <=> ! [X2] : (? [X3] : ((s(fun('type.num.num',fun(X0,bool)),'const.ind_type.ZBOT_0') = s(fun('type.num.num',fun(X0,bool)),X3) | ? [X4,X5,X6] : (s(fun('type.num.num',fun(X0,bool)),X3) = s(fun('type.num.num',fun(X0,bool)),'const.ind_type.ZCONSTR_3'(s('type.num.num',X4),s(X0,X5),s(fun('type.num.num',fun('type.num.num',fun(X0,bool))),X6))) & ! [X7] : p(s(bool,happ(s(fun(fun('type.num.num',fun(X0,bool)),bool),X2),s(fun('type.num.num',fun(X0,bool)),happ(s(fun('type.num.num',fun('type.num.num',fun(X0,bool))),X6),s('type.num.num',X7)))))))) & ~p(s(bool,happ(s(fun(fun('type.num.num',fun(X0,bool)),bool),X2),s(fun('type.num.num',fun(X0,bool)),X3))))) | p(s(bool,happ(s(fun(fun('type.num.num',fun(X0,bool)),bool),X2),s(fun('type.num.num',fun(X0,bool)),X1))))))),
  inference(ennf_transformation,[],[f30])).
fof(f30,plain,(
  ! [X0,X1] : (p(s(bool,'const.ind_type.ZRECSPACE_1'(s(fun('type.num.num',fun(X0,bool)),X1)))) <=> ! [X2] : (! [X3] : ((s(fun('type.num.num',fun(X0,bool)),'const.ind_type.ZBOT_0') = s(fun('type.num.num',fun(X0,bool)),X3) | ? [X4,X5,X6] : (s(fun('type.num.num',fun(X0,bool)),X3) = s(fun('type.num.num',fun(X0,bool)),'const.ind_type.ZCONSTR_3'(s('type.num.num',X4),s(X0,X5),s(fun('type.num.num',fun('type.num.num',fun(X0,bool))),X6))) & ! [X7] : p(s(bool,happ(s(fun(fun('type.num.num',fun(X0,bool)),bool),X2),s(fun('type.num.num',fun(X0,bool)),happ(s(fun('type.num.num',fun('type.num.num',fun(X0,bool))),X6),s('type.num.num',X7)))))))) => p(s(bool,happ(s(fun(fun('type.num.num',fun(X0,bool)),bool),X2),s(fun('type.num.num',fun(X0,bool)),X3))))) => p(s(bool,happ(s(fun(fun('type.num.num',fun(X0,bool)),bool),X2),s(fun('type.num.num',fun(X0,bool)),X1))))))),
  inference(flattening,[],[f29])).
fof(f29,plain,(
  ! [X0] : ! [X1] : (p(s(bool,'const.ind_type.ZRECSPACE_1'(s(fun('type.num.num',fun(X0,bool)),X1)))) <=> ! [X2] : (! [X3] : ((s(fun('type.num.num',fun(X0,bool)),'const.ind_type.ZBOT_0') = s(fun('type.num.num',fun(X0,bool)),X3) | ? [X4,X5,X6] : (s(fun('type.num.num',fun(X0,bool)),X3) = s(fun('type.num.num',fun(X0,bool)),'const.ind_type.ZCONSTR_3'(s('type.num.num',X4),s(X0,X5),s(fun('type.num.num',fun('type.num.num',fun(X0,bool))),X6))) & ! [X7] : p(s(bool,happ(s(fun(fun('type.num.num',fun(X0,bool)),bool),X2),s(fun('type.num.num',fun(X0,bool)),happ(s(fun('type.num.num',fun('type.num.num',fun(X0,bool))),X6),s('type.num.num',X7)))))))) => p(s(bool,happ(s(fun(fun('type.num.num',fun(X0,bool)),bool),X2),s(fun('type.num.num',fun(X0,bool)),X3))))) => p(s(bool,happ(s(fun(fun('type.num.num',fun(X0,bool)),bool),X2),s(fun('type.num.num',fun(X0,bool)),X1))))))),
  inference(rectify,[],[f19])).
fof(f19,axiom,(
  ! [X6] : ! [X5] : (p(s(bool,'const.ind_type.ZRECSPACE_1'(s(fun('type.num.num',fun(X6,bool)),X5)))) <=> ! [X7] : (! [X23] : ((s(fun('type.num.num',fun(X6,bool)),'const.ind_type.ZBOT_0') = s(fun('type.num.num',fun(X6,bool)),X23) | ? [X8,X9,X10] : (s(fun('type.num.num',fun(X6,bool)),X23) = s(fun('type.num.num',fun(X6,bool)),'const.ind_type.ZCONSTR_3'(s('type.num.num',X8),s(X6,X9),s(fun('type.num.num',fun('type.num.num',fun(X6,bool))),X10))) & ! [X11] : p(s(bool,happ(s(fun(fun('type.num.num',fun(X6,bool)),bool),X7),s(fun('type.num.num',fun(X6,bool)),happ(s(fun('type.num.num',fun('type.num.num',fun(X6,bool))),X10),s('type.num.num',X11)))))))) => p(s(bool,happ(s(fun(fun('type.num.num',fun(X6,bool)),bool),X7),s(fun('type.num.num',fun(X6,bool)),X23))))) => p(s(bool,happ(s(fun(fun('type.num.num',fun(X6,bool)),bool),X7),s(fun('type.num.num',fun(X6,bool)),X5))))))),
  file('thm.ind_type.ZRECSPACE_ind','thm.ind_type.ZRECSPACE_def')).
fof(f371,plain,(
  ( ! [X30,X28,X31,X29,X32] : (p(s(bool,happ(s(fun(fun('type.num.num',fun(sK0,bool)),bool),sK1),s(fun('type.num.num',fun(sK0,bool)),'const.ind_type.ZCONSTR_3'(s('type.num.num',X28),s(sK0,X29),s(fun('type.num.num',fun('type.num.num',fun(sK0,bool))),X30)))))) | s(bool,happ(s(fun(fun('type.num.num',fun(X31,bool)),bool),sK8(X32,X31)),s(fun('type.num.num',fun(X31,bool)),X32))) = s(bool,happ(s(fun(fun('type.num.num',fun(sK0,bool)),bool),sK1),s(fun('type.num.num',fun(sK0,bool)),happ(s(fun('type.num.num',fun('type.num.num',fun(sK0,bool))),X30),s('type.num.num',sK2(X30,X29,X28)))))) | p(s(bool,'const.ind_type.ZRECSPACE_1'(s(fun('type.num.num',fun(X31,bool)),X32))))) )),
  inference(resolution,[],[f228,f109])).
fof(f109,plain,(
  ( ! [X0,X1] : (~p(s(bool,happ(s(fun(fun('type.num.num',fun(X0,bool)),bool),sK8(X1,X0)),s(fun('type.num.num',fun(X0,bool)),X1)))) | p(s(bool,'const.ind_type.ZRECSPACE_1'(s(fun('type.num.num',fun(X0,bool)),X1))))) )),
  inference(cnf_transformation,[],[f75])).
fof(f365,plain,(
  ( ! [X6,X4,X8,X7,X5] : (p(s(bool,happ(s(fun(fun('type.num.num',fun(sK0,bool)),bool),sK1),s(fun('type.num.num',fun(sK0,bool)),'const.ind_type.ZCONSTR_3'(s('type.num.num',X4),s(sK0,X5),s(fun('type.num.num',fun('type.num.num',fun(sK0,bool))),X6)))))) | s(bool,X7) = s(bool,happ(s(fun(fun('type.num.num',fun(sK0,bool)),bool),sK1),s(fun('type.num.num',fun(sK0,bool)),happ(s(fun('type.num.num',fun('type.num.num',fun(sK0,bool))),X6),s('type.num.num',sK2(X6,X5,X4)))))) | ~p(s(bool,X8)) | s(bool,X7) = s(bool,X8)) )),
  inference(resolution,[],[f228,f117])).
fof(f361,plain,(
  ( ! [X12,X10,X13,X11,X9] : (p(s(bool,X9)) | s(bool,X9) = s(bool,happ(s(fun(fun('type.num.num',fun(sK0,bool)),bool),sK1),s(fun('type.num.num',fun(sK0,bool)),happ(s(fun('type.num.num',fun('type.num.num',fun(sK0,bool))),X10),s('type.num.num',sK2(X10,X11,X12)))))) | ~p(s(bool,X13)) | s(bool,X13) = s(bool,happ(s(fun(fun('type.num.num',fun(sK0,bool)),bool),sK1),s(fun('type.num.num',fun(sK0,bool)),'const.ind_type.ZCONSTR_3'(s('type.num.num',X12),s(sK0,X11),s(fun('type.num.num',fun('type.num.num',fun(sK0,bool))),X10)))))) )),
  inference(resolution,[],[f228,f117])).
fof(f228,plain,(
  ( ! [X6,X8,X7,X9] : (p(s(bool,happ(s(fun(fun('type.num.num',fun(sK0,bool)),bool),sK1),s(fun('type.num.num',fun(sK0,bool)),'const.ind_type.ZCONSTR_3'(s('type.num.num',X6),s(sK0,X7),s(fun('type.num.num',fun('type.num.num',fun(sK0,bool))),X8)))))) | p(s(bool,X9)) | s(bool,X9) = s(bool,happ(s(fun(fun('type.num.num',fun(sK0,bool)),bool),sK1),s(fun('type.num.num',fun(sK0,bool)),happ(s(fun('type.num.num',fun('type.num.num',fun(sK0,bool))),X8),s('type.num.num',sK2(X8,X7,X6))))))) )),
  inference(resolution,[],[f82,f114])).
fof(f227,plain,(
  ( ! [X4,X5,X3] : (~p(s(bool,'const.ind_type.ZRECSPACE_1'(s(fun('type.num.num',fun(sK0,bool)),happ(s(fun('type.num.num',fun('type.num.num',fun(sK0,bool))),X5),s('type.num.num',sK2(X5,X4,X3))))))) | s(fun('type.num.num',fun(sK0,bool)),sK4(sK1,happ(s(fun('type.num.num',fun('type.num.num',fun(sK0,bool))),X5),s('type.num.num',sK2(X5,X4,X3))),sK0)) = s(fun('type.num.num',fun(sK0,bool)),'const.ind_type.ZCONSTR_3'(s('type.num.num',sK5(sK1,happ(s(fun('type.num.num',fun('type.num.num',fun(sK0,bool))),X5),s('type.num.num',sK2(X5,X4,X3))),sK0)),s(sK0,sK6(sK1,happ(s(fun('type.num.num',fun('type.num.num',fun(sK0,bool))),X5),s('type.num.num',sK2(X5,X4,X3))),sK0)),s(fun('type.num.num',fun('type.num.num',fun(sK0,bool))),sK7(sK1,happ(s(fun('type.num.num',fun('type.num.num',fun(sK0,bool))),X5),s('type.num.num',sK2(X5,X4,X3))),sK0)))) | s(fun('type.num.num',fun(sK0,bool)),'const.ind_type.ZBOT_0') = s(fun('type.num.num',fun(sK0,bool)),sK4(sK1,happ(s(fun('type.num.num',fun('type.num.num',fun(sK0,bool))),X5),s('type.num.num',sK2(X5,X4,X3))),sK0)) | p(s(bool,happ(s(fun(fun('type.num.num',fun(sK0,bool)),bool),sK1),s(fun('type.num.num',fun(sK0,bool)),'const.ind_type.ZCONSTR_3'(s('type.num.num',X3),s(sK0,X4),s(fun('type.num.num',fun('type.num.num',fun(sK0,bool))),X5))))))) )),
  inference(resolution,[],[f82,f104])).
fof(f104,plain,(
  ( ! [X0,X8,X1] : (p(s(bool,happ(s(fun(fun('type.num.num',fun(X0,bool)),bool),X8),s(fun('type.num.num',fun(X0,bool)),X1)))) | s(fun('type.num.num',fun(X0,bool)),sK4(X8,X1,X0)) = s(fun('type.num.num',fun(X0,bool)),'const.ind_type.ZCONSTR_3'(s('type.num.num',sK5(X8,X1,X0)),s(X0,sK6(X8,X1,X0)),s(fun('type.num.num',fun('type.num.num',fun(X0,bool))),sK7(X8,X1,X0)))) | s(fun('type.num.num',fun(X0,bool)),'const.ind_type.ZBOT_0') = s(fun('type.num.num',fun(X0,bool)),sK4(X8,X1,X0)) | ~p(s(bool,'const.ind_type.ZRECSPACE_1'(s(fun('type.num.num',fun(X0,bool)),X1))))) )),
  inference(cnf_transformation,[],[f75])).
fof(f226,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,happ(s(fun(fun('type.num.num',fun(sK0,bool)),bool),sK1),s(fun('type.num.num',fun(sK0,bool)),'const.ind_type.ZCONSTR_3'(s('type.num.num',X0),s(sK0,X1),s(fun('type.num.num',fun('type.num.num',fun(sK0,bool))),sK7(sK1,X2,sK0))))))) | p(s(bool,happ(s(fun(fun('type.num.num',fun(sK0,bool)),bool),sK1),s(fun('type.num.num',fun(sK0,bool)),X2)))) | s(fun('type.num.num',fun(sK0,bool)),'const.ind_type.ZBOT_0') = s(fun('type.num.num',fun(sK0,bool)),sK4(sK1,X2,sK0)) | ~p(s(bool,'const.ind_type.ZRECSPACE_1'(s(fun('type.num.num',fun(sK0,bool)),X2))))) )),
  inference(resolution,[],[f82,f105])).
fof(f105,plain,(
  ( ! [X0,X8,X1,X13] : (p(s(bool,happ(s(fun(fun('type.num.num',fun(X0,bool)),bool),X8),s(fun('type.num.num',fun(X0,bool)),happ(s(fun('type.num.num',fun('type.num.num',fun(X0,bool))),sK7(X8,X1,X0)),s('type.num.num',X13)))))) | p(s(bool,happ(s(fun(fun('type.num.num',fun(X0,bool)),bool),X8),s(fun('type.num.num',fun(X0,bool)),X1)))) | s(fun('type.num.num',fun(X0,bool)),'const.ind_type.ZBOT_0') = s(fun('type.num.num',fun(X0,bool)),sK4(X8,X1,X0)) | ~p(s(bool,'const.ind_type.ZRECSPACE_1'(s(fun('type.num.num',fun(X0,bool)),X1))))) )),
  inference(cnf_transformation,[],[f75])).
fof(f594,plain,(
  s(bool,'T_0') = s(bool,happ(s(fun(fun('type.num.num',fun(sK0,bool)),bool),sK1),s(fun('type.num.num',fun(sK0,bool)),sK4(sK1,sK3,sK0)))) | ($spl2 | $spl6 | $spl34)),
  inference(resolution,[],[f387,f158])).
fof(f158,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)) ) | ($spl2 | $spl6)),
  inference(backward_demodulation,[],[f156,f151])).
fof(f151,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,X0) = s(bool,'const.ind_type.ZRECSPACE_1'(s(fun('type.num.num',fun(sK0,bool)),sK3)))) ) | $spl2),
  inference(resolution,[],[f139,f117])).
fof(f391,plain,(
  p(s(bool,'F_0')) | $spl36),
  inference(cnf_transformation,[],[f391_D])).
fof(f391_D,plain,(
  p(s(bool,'F_0')) <=> ~$spl36),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl36])])).
fof(f201,plain,(
  ~p(s(bool,'T_0')) | $spl15),
  inference(cnf_transformation,[],[f201_D])).
fof(f201_D,plain,(
  ~p(s(bool,'T_0')) <=> ~$spl15),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl15])])).
fof(f602,plain,(
  ~p(s(bool,'T_0')) | p(s(bool,'F_0')) | ($spl6 | $spl8 | $spl34)),
  inference(forward_demodulation,[],[f601,f156])).
fof(f601,plain,(
  p(s(bool,'F_0')) | ~p(s(bool,'const.ind_type.ZRECSPACE_1'(s(fun('type.num.num',fun(sK0,bool)),sK3)))) | ($spl8 | $spl34)),
  inference(forward_demodulation,[],[f591,f194])).
fof(f591,plain,(
  p(s(bool,happ(s(fun(fun('type.num.num',fun(sK0,bool)),bool),sK1),s(fun('type.num.num',fun(sK0,bool)),sK3)))) | ~p(s(bool,'const.ind_type.ZRECSPACE_1'(s(fun('type.num.num',fun(sK0,bool)),sK3)))) | $spl34),
  inference(resolution,[],[f387,f106])).
fof(f584,plain,(
  s(bool,'T_0') = s(bool,happ(s(fun(fun('type.num.num',fun(sK0,bool)),bool),sK1),s(fun('type.num.num',fun(sK0,bool)),sK4(sK1,sK3,sK0)))) | $spl34),
  inference(unit_resulting_resolution,[],[f86,f387,f117])).
fof(f86,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f8])).
fof(f8,axiom,(
  p(s(bool,'T_0'))),
  file('thm.ind_type.ZRECSPACE_ind','thm.bool.TRUTH')).
fof(f585,plain,(
  s(bool,'T_0') = s(bool,happ(s(fun(fun('type.num.num',fun(sK0,bool)),bool),sK1),s(fun('type.num.num',fun(sK0,bool)),sK4(sK1,sK3,sK0)))) | $spl34),
  inference(unit_resulting_resolution,[],[f85,f387,f117])).
fof(f85,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f1])).
fof(f1,axiom,(
  p(s(bool,'T_0'))),
  file('thm.ind_type.ZRECSPACE_ind',aHL_TRUTH)).
fof(f587,plain,(
  s(bool,'T_0') = s(bool,happ(s(fun(fun('type.num.num',fun(sK0,bool)),bool),sK1),s(fun('type.num.num',fun(sK0,bool)),sK4(sK1,sK3,sK0)))) | $spl34),
  inference(unit_resulting_resolution,[],[f86,f387,f117])).
fof(f588,plain,(
  s(bool,'T_0') = s(bool,happ(s(fun(fun('type.num.num',fun(sK0,bool)),bool),sK1),s(fun('type.num.num',fun(sK0,bool)),sK4(sK1,sK3,sK0)))) | $spl34),
  inference(unit_resulting_resolution,[],[f85,f387,f117])).
fof(f590,plain,(
  s(bool,'T_0') = s(bool,happ(s(fun(fun('type.num.num',fun(sK0,bool)),bool),sK1),s(fun('type.num.num',fun(sK0,bool)),sK4(sK1,sK3,sK0)))) | ($spl2 | $spl6 | $spl34)),
  inference(unit_resulting_resolution,[],[f387,f158])).
fof(f528,plain,(
  $false | ($spl4 | $spl28)),
  inference(unit_resulting_resolution,[],[f356,f356,f215])).
fof(f215,plain,(
  ( ! [X0] : (p(s(bool,happ(s(fun(fun('type.num.num',fun(sK0,bool)),bool),X0),s(fun('type.num.num',fun(sK0,bool)),sK13(sK1,X0,fun('type.num.num',fun(sK0,bool))))))) | p(s(bool,happ(s(fun(fun('type.num.num',fun(sK0,bool)),bool),sK1),s(fun('type.num.num',fun(sK0,bool)),sK12(sK1,X0,fun('type.num.num',fun(sK0,bool)))))))) ) | $spl4),
  inference(resolution,[],[f141,f112])).
fof(f522,plain,(
  $false | ($spl4 | $spl28)),
  inference(unit_resulting_resolution,[],[f356,f356,f215])).
fof(f450,plain,(
  s(bool,'T_0') = s(bool,'const.ind_type.ZRECSPACE_1'(s(fun('type.num.num',fun(sK0,bool)),sK4(sK1,sK3,sK0)))) | $spl48),
  inference(cnf_transformation,[],[f450_D])).
fof(f450_D,plain,(
  s(bool,'T_0') = s(bool,'const.ind_type.ZRECSPACE_1'(s(fun('type.num.num',fun(sK0,bool)),sK4(sK1,sK3,sK0)))) <=> ~$spl48),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl48])])).
fof(f451,plain,(
  s(bool,'T_0') = s(bool,'const.ind_type.ZRECSPACE_1'(s(fun('type.num.num',fun(sK0,bool)),sK4(sK1,sK3,sK0)))) | $spl20),
  inference(global_subsumption,[],[f84,f83,f82,f81,f226,f227,f228,f361,f365,f371,f372,f373,f374,f375,f376,f377,f314,f419,f429,f432,f439,f438,f436,f435,f445,f448])).
fof(f448,plain,(
  p(s(bool,'F_0')) | s(bool,'T_0') = s(bool,'const.ind_type.ZRECSPACE_1'(s(fun('type.num.num',fun(sK0,bool)),sK4(sK1,sK3,sK0)))) | $spl20),
  inference(superposition,[],[f314,f88])).
fof(f445,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,X0) = s(bool,'const.ind_type.ZRECSPACE_1'(s(fun('type.num.num',fun(sK0,bool)),sK4(sK1,sK3,sK0))))) ) | $spl20),
  inference(resolution,[],[f314,f117])).
fof(f444,plain,(
  s(bool,'T_0') = s(bool,'const.ind_type.ZRECSPACE_1'(s(fun('type.num.num',fun(sK0,bool)),sK4(sK1,sK3,sK0)))) | ($spl2 | $spl6 | $spl20)),
  inference(resolution,[],[f314,f158])).
fof(f434,plain,(
  s(bool,'T_0') = s(bool,'const.ind_type.ZRECSPACE_1'(s(fun('type.num.num',fun(sK0,bool)),sK4(sK1,sK3,sK0)))) | ($spl2 | $spl6 | $spl20)),
  inference(unit_resulting_resolution,[],[f314,f158])).
fof(f435,plain,(
  s(bool,'T_0') = s(bool,'const.ind_type.ZRECSPACE_1'(s(fun('type.num.num',fun(sK0,bool)),sK4(sK1,sK3,sK0)))) | $spl20),
  inference(unit_resulting_resolution,[],[f86,f314,f117])).
fof(f436,plain,(
  s(bool,'T_0') = s(bool,'const.ind_type.ZRECSPACE_1'(s(fun('type.num.num',fun(sK0,bool)),sK4(sK1,sK3,sK0)))) | $spl20),
  inference(unit_resulting_resolution,[],[f85,f314,f117])).
fof(f438,plain,(
  s(bool,'T_0') = s(bool,'const.ind_type.ZRECSPACE_1'(s(fun('type.num.num',fun(sK0,bool)),sK4(sK1,sK3,sK0)))) | $spl20),
  inference(unit_resulting_resolution,[],[f86,f314,f117])).
fof(f439,plain,(
  s(bool,'T_0') = s(bool,'const.ind_type.ZRECSPACE_1'(s(fun('type.num.num',fun(sK0,bool)),sK4(sK1,sK3,sK0)))) | $spl20),
  inference(unit_resulting_resolution,[],[f85,f314,f117])).
fof(f197,plain,(
  s(fun('type.num.num',fun(sK0,bool)),'const.ind_type.ZBOT_0') = s(fun('type.num.num',fun(sK0,bool)),sK4(sK1,sK3,sK0)) | $spl10),
  inference(cnf_transformation,[],[f197_D])).
fof(f197_D,plain,(
  s(fun('type.num.num',fun(sK0,bool)),'const.ind_type.ZBOT_0') = s(fun('type.num.num',fun(sK0,bool)),sK4(sK1,sK3,sK0)) <=> ~$spl10),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl10])])).
fof(f387,plain,(
  p(s(bool,happ(s(fun(fun('type.num.num',fun(sK0,bool)),bool),sK1),s(fun('type.num.num',fun(sK0,bool)),sK4(sK1,sK3,sK0))))) | $spl34),
  inference(cnf_transformation,[],[f387_D])).
fof(f387_D,plain,(
  p(s(bool,happ(s(fun(fun('type.num.num',fun(sK0,bool)),bool),sK1),s(fun('type.num.num',fun(sK0,bool)),sK4(sK1,sK3,sK0))))) <=> ~$spl34),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl34])])).
fof(f425,plain,(
  ~p(s(bool,'T_0')) | p(s(bool,'F_0')) | p(s(bool,happ(s(fun(fun('type.num.num',fun(sK0,bool)),bool),sK1),s(fun('type.num.num',fun(sK0,bool)),sK4(sK1,sK3,sK0))))) | s(fun('type.num.num',fun(sK0,bool)),'const.ind_type.ZBOT_0') = s(fun('type.num.num',fun(sK0,bool)),sK4(sK1,sK3,sK0)) | ($spl6 | $spl8 | $spl12)),
  inference(forward_demodulation,[],[f424,f156])).
fof(f424,plain,(
  p(s(bool,'F_0')) | p(s(bool,happ(s(fun(fun('type.num.num',fun(sK0,bool)),bool),sK1),s(fun('type.num.num',fun(sK0,bool)),sK4(sK1,sK3,sK0))))) | s(fun('type.num.num',fun(sK0,bool)),'const.ind_type.ZBOT_0') = s(fun('type.num.num',fun(sK0,bool)),sK4(sK1,sK3,sK0)) | ~p(s(bool,'const.ind_type.ZRECSPACE_1'(s(fun('type.num.num',fun(sK0,bool)),sK3)))) | ($spl8 | $spl12)),
  inference(forward_demodulation,[],[f422,f194])).
fof(f422,plain,(
  p(s(bool,happ(s(fun(fun('type.num.num',fun(sK0,bool)),bool),sK1),s(fun('type.num.num',fun(sK0,bool)),sK4(sK1,sK3,sK0))))) | p(s(bool,happ(s(fun(fun('type.num.num',fun(sK0,bool)),bool),sK1),s(fun('type.num.num',fun(sK0,bool)),sK3)))) | s(fun('type.num.num',fun(sK0,bool)),'const.ind_type.ZBOT_0') = s(fun('type.num.num',fun(sK0,bool)),sK4(sK1,sK3,sK0)) | ~p(s(bool,'const.ind_type.ZRECSPACE_1'(s(fun('type.num.num',fun(sK0,bool)),sK3)))) | $spl12),
  inference(superposition,[],[f226,f199])).
fof(f407,plain,(
  s(fun(sK0,bool),f(s('type.num.num',sK14(sK4(sK1,sK3,sK0),'const.ind_type.ZBOT_0',fun(sK0,bool),'type.num.num')))) != s(fun(sK0,bool),g(s('type.num.num',sK14(sK4(sK1,sK3,sK0),'const.ind_type.ZBOT_0',fun(sK0,bool),'type.num.num')))) | $spl47),
  inference(cnf_transformation,[],[f407_D])).
fof(f407_D,plain,(
  s(fun(sK0,bool),f(s('type.num.num',sK14(sK4(sK1,sK3,sK0),'const.ind_type.ZBOT_0',fun(sK0,bool),'type.num.num')))) != s(fun(sK0,bool),g(s('type.num.num',sK14(sK4(sK1,sK3,sK0),'const.ind_type.ZBOT_0',fun(sK0,bool),'type.num.num')))) <=> ~$spl47),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl47])])).
fof(f402,plain,(
  s(fun(sK0,bool),f(s('type.num.num',sK14(sK4(sK1,sK3,sK0),'const.ind_type.ZBOT_0',fun(sK0,bool),'type.num.num')))) != s(fun(sK0,bool),g(s('type.num.num',sK14(sK4(sK1,sK3,sK0),'const.ind_type.ZBOT_0',fun(sK0,bool),'type.num.num')))) | $spl11),
  inference(unit_resulting_resolution,[],[f196,f119])).
fof(f119,plain,(
  ( ! [X2,X0,X3,X1] : (s(X1,f(s(X0,sK14(X3,X2,X1,X0)))) != s(X1,g(s(X0,sK14(X3,X2,X1,X0)))) | s(fun(X0,X1),X2) = s(fun(X0,X1),X3)) )),
  inference(cnf_transformation,[],[f80])).
fof(f80,plain,(
  ! [X0,X1,X2,X3] : (s(X1,f(s(X0,sK14(X3,X2,X1,X0)))) != s(X1,g(s(X0,sK14(X3,X2,X1,X0)))) | s(fun(X0,X1),X2) = s(fun(X0,X1),X3))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK14])],[f56])).
fof(f56,plain,(
  ! [X0,X1,X2,X3] : (? [X4] : s(X1,f(s(X0,X4))) != s(X1,g(s(X0,X4))) | s(fun(X0,X1),X2) = s(fun(X0,X1),X3))),
  inference(ennf_transformation,[],[f39])).
fof(f39,plain,(
  ! [X0,X1,X2,X3] : (! [X4] : s(X1,f(s(X0,X4))) = s(X1,g(s(X0,X4))) => s(fun(X0,X1),X2) = s(fun(X0,X1),X3))),
  inference(flattening,[],[f38])).
fof(f38,plain,(
  ! [X0,X1] : ! [X2,X3] : (! [X4] : s(X1,f(s(X0,X4))) = s(X1,g(s(X0,X4))) => s(fun(X0,X1),X2) = s(fun(X0,X1),X3))),
  inference(rectify,[],[f4])).
fof(f4,axiom,(
  ! [X1,X2] : ! [X3,X4] : (! [X5] : s(X2,f(s(X1,X5))) = s(X2,g(s(X1,X5))) => s(fun(X1,X2),X3) = s(fun(X1,X2),X4))),
  file('thm.ind_type.ZRECSPACE_ind',aHL_EXT)).
fof(f196,plain,(
  s(fun('type.num.num',fun(sK0,bool)),'const.ind_type.ZBOT_0') != s(fun('type.num.num',fun(sK0,bool)),sK4(sK1,sK3,sK0)) | $spl11),
  inference(cnf_transformation,[],[f196_D])).
fof(f196_D,plain,(
  s(fun('type.num.num',fun(sK0,bool)),'const.ind_type.ZBOT_0') != s(fun('type.num.num',fun(sK0,bool)),sK4(sK1,sK3,sK0)) <=> ~$spl11),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl11])])).
fof(f405,plain,(
  s(fun(sK0,bool),f(s('type.num.num',sK14('const.ind_type.ZBOT_0',sK4(sK1,sK3,sK0),fun(sK0,bool),'type.num.num')))) != s(fun(sK0,bool),g(s('type.num.num',sK14('const.ind_type.ZBOT_0',sK4(sK1,sK3,sK0),fun(sK0,bool),'type.num.num')))) | $spl45),
  inference(cnf_transformation,[],[f405_D])).
fof(f405_D,plain,(
  s(fun(sK0,bool),f(s('type.num.num',sK14('const.ind_type.ZBOT_0',sK4(sK1,sK3,sK0),fun(sK0,bool),'type.num.num')))) != s(fun(sK0,bool),g(s('type.num.num',sK14('const.ind_type.ZBOT_0',sK4(sK1,sK3,sK0),fun(sK0,bool),'type.num.num')))) <=> ~$spl45),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl45])])).
fof(f403,plain,(
  s(fun(sK0,bool),f(s('type.num.num',sK14('const.ind_type.ZBOT_0',sK4(sK1,sK3,sK0),fun(sK0,bool),'type.num.num')))) != s(fun(sK0,bool),g(s('type.num.num',sK14('const.ind_type.ZBOT_0',sK4(sK1,sK3,sK0),fun(sK0,bool),'type.num.num')))) | $spl11),
  inference(unit_resulting_resolution,[],[f196,f119])).
fof(f401,plain,(
  ~p(s(bool,happ(s(fun(fun('type.num.num',fun(sK0,bool)),bool),sK8('const.ind_type.ZCONSTR_3'(s('type.num.num',sK5(sK1,sK3,sK0)),s(sK0,sK6(sK1,sK3,sK0)),s(fun('type.num.num',fun('type.num.num',fun(sK0,bool))),sK7(sK1,sK3,sK0))),sK0)),s(fun('type.num.num',fun(sK0,bool)),'const.ind_type.ZBOT_0')))) | $spl43),
  inference(cnf_transformation,[],[f401_D])).
fof(f401_D,plain,(
  ~p(s(bool,happ(s(fun(fun('type.num.num',fun(sK0,bool)),bool),sK8('const.ind_type.ZCONSTR_3'(s('type.num.num',sK5(sK1,sK3,sK0)),s(sK0,sK6(sK1,sK3,sK0)),s(fun('type.num.num',fun('type.num.num',fun(sK0,bool))),sK7(sK1,sK3,sK0))),sK0)),s(fun('type.num.num',fun(sK0,bool)),'const.ind_type.ZBOT_0')))) <=> ~$spl43),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl43])])).
fof(f395,plain,(
  ~p(s(bool,happ(s(fun(fun('type.num.num',fun(sK0,bool)),bool),sK8('const.ind_type.ZCONSTR_3'(s('type.num.num',sK5(sK1,sK3,sK0)),s(sK0,sK6(sK1,sK3,sK0)),s(fun('type.num.num',fun('type.num.num',fun(sK0,bool))),sK7(sK1,sK3,sK0))),sK0)),s(fun('type.num.num',fun(sK0,bool)),'const.ind_type.ZBOT_0')))) | ($spl10 | $spl23)),
  inference(backward_demodulation,[],[f197,f320])).
fof(f399,plain,(
  p(s(bool,'const.ind_type.ZRECSPACE_1'(s(fun('type.num.num',fun(sK0,bool)),'const.ind_type.ZBOT_0')))) | $spl40),
  inference(cnf_transformation,[],[f399_D])).
fof(f399_D,plain,(
  p(s(bool,'const.ind_type.ZRECSPACE_1'(s(fun('type.num.num',fun(sK0,bool)),'const.ind_type.ZBOT_0')))) <=> ~$spl40),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl40])])).
fof(f394,plain,(
  p(s(bool,'const.ind_type.ZRECSPACE_1'(s(fun('type.num.num',fun(sK0,bool)),'const.ind_type.ZBOT_0')))) | ($spl10 | $spl20)),
  inference(backward_demodulation,[],[f197,f314])).
fof(f397,plain,(
  s(fun('type.num.num',fun(sK0,bool)),'const.ind_type.ZBOT_0') != s(fun('type.num.num',fun(sK0,bool)),'const.ind_type.ZCONSTR_3'(s('type.num.num',sK5(sK1,sK3,sK0)),s(sK0,sK6(sK1,sK3,sK0)),s(fun('type.num.num',fun('type.num.num',fun(sK0,bool))),sK7(sK1,sK3,sK0)))) | $spl39),
  inference(cnf_transformation,[],[f397_D])).
fof(f397_D,plain,(
  s(fun('type.num.num',fun(sK0,bool)),'const.ind_type.ZBOT_0') != s(fun('type.num.num',fun(sK0,bool)),'const.ind_type.ZCONSTR_3'(s('type.num.num',sK5(sK1,sK3,sK0)),s(sK0,sK6(sK1,sK3,sK0)),s(fun('type.num.num',fun('type.num.num',fun(sK0,bool))),sK7(sK1,sK3,sK0)))) <=> ~$spl39),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl39])])).
fof(f392,plain,(
  s(fun('type.num.num',fun(sK0,bool)),'const.ind_type.ZBOT_0') != s(fun('type.num.num',fun(sK0,bool)),'const.ind_type.ZCONSTR_3'(s('type.num.num',sK5(sK1,sK3,sK0)),s(sK0,sK6(sK1,sK3,sK0)),s(fun('type.num.num',fun('type.num.num',fun(sK0,bool))),sK7(sK1,sK3,sK0)))) | ($spl10 | $spl13)),
  inference(backward_demodulation,[],[f197,f198])).
fof(f198,plain,(
  s(fun('type.num.num',fun(sK0,bool)),sK4(sK1,sK3,sK0)) != s(fun('type.num.num',fun(sK0,bool)),'const.ind_type.ZCONSTR_3'(s('type.num.num',sK5(sK1,sK3,sK0)),s(sK0,sK6(sK1,sK3,sK0)),s(fun('type.num.num',fun('type.num.num',fun(sK0,bool))),sK7(sK1,sK3,sK0)))) | $spl13),
  inference(cnf_transformation,[],[f198_D])).
fof(f198_D,plain,(
  s(fun('type.num.num',fun(sK0,bool)),sK4(sK1,sK3,sK0)) != s(fun('type.num.num',fun(sK0,bool)),'const.ind_type.ZCONSTR_3'(s('type.num.num',sK5(sK1,sK3,sK0)),s(sK0,sK6(sK1,sK3,sK0)),s(fun('type.num.num',fun('type.num.num',fun(sK0,bool))),sK7(sK1,sK3,sK0)))) <=> ~$spl13),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl13])])).
fof(f199,plain,(
  s(fun('type.num.num',fun(sK0,bool)),sK4(sK1,sK3,sK0)) = s(fun('type.num.num',fun(sK0,bool)),'const.ind_type.ZCONSTR_3'(s('type.num.num',sK5(sK1,sK3,sK0)),s(sK0,sK6(sK1,sK3,sK0)),s(fun('type.num.num',fun('type.num.num',fun(sK0,bool))),sK7(sK1,sK3,sK0)))) | $spl12),
  inference(cnf_transformation,[],[f199_D])).
fof(f199_D,plain,(
  s(fun('type.num.num',fun(sK0,bool)),sK4(sK1,sK3,sK0)) = s(fun('type.num.num',fun(sK0,bool)),'const.ind_type.ZCONSTR_3'(s('type.num.num',sK5(sK1,sK3,sK0)),s(sK0,sK6(sK1,sK3,sK0)),s(fun('type.num.num',fun('type.num.num',fun(sK0,bool))),sK7(sK1,sK3,sK0)))) <=> ~$spl12),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl12])])).
fof(f389,plain,(
  ~p(s(bool,'T_0')) | p(s(bool,'F_0')) | s(fun('type.num.num',fun(sK0,bool)),sK4(sK1,sK3,sK0)) = s(fun('type.num.num',fun(sK0,bool)),'const.ind_type.ZCONSTR_3'(s('type.num.num',sK5(sK1,sK3,sK0)),s(sK0,sK6(sK1,sK3,sK0)),s(fun('type.num.num',fun('type.num.num',fun(sK0,bool))),sK7(sK1,sK3,sK0)))) | s(fun('type.num.num',fun(sK0,bool)),'const.ind_type.ZBOT_0') = s(fun('type.num.num',fun(sK0,bool)),sK4(sK1,sK3,sK0)) | ($spl6 | $spl8)),
  inference(forward_demodulation,[],[f269,f156])).
fof(f269,plain,(
  p(s(bool,'F_0')) | s(fun('type.num.num',fun(sK0,bool)),sK4(sK1,sK3,sK0)) = s(fun('type.num.num',fun(sK0,bool)),'const.ind_type.ZCONSTR_3'(s('type.num.num',sK5(sK1,sK3,sK0)),s(sK0,sK6(sK1,sK3,sK0)),s(fun('type.num.num',fun('type.num.num',fun(sK0,bool))),sK7(sK1,sK3,sK0)))) | s(fun('type.num.num',fun(sK0,bool)),'const.ind_type.ZBOT_0') = s(fun('type.num.num',fun(sK0,bool)),sK4(sK1,sK3,sK0)) | ~p(s(bool,'const.ind_type.ZRECSPACE_1'(s(fun('type.num.num',fun(sK0,bool)),sK3)))) | $spl8),
  inference(superposition,[],[f104,f194])).
fof(f385,plain,(
  ( ! [X0] : (p(s(bool,X0)) | s(bool,X0) = s(bool,happ(s(fun(fun('type.num.num',fun(sK0,bool)),bool),sK1),s(fun('type.num.num',fun(sK0,bool)),happ(s(fun('type.num.num',fun('type.num.num',fun(sK0,bool))),sK7(sK1,sK3,sK0)),s('type.num.num',sK2(sK7(sK1,sK3,sK0),sK6(sK1,sK3,sK0),sK5(sK1,sK3,sK0)))))))) ) | $spl32),
  inference(cnf_transformation,[],[f385_D])).
fof(f385_D,plain,(
  ( ! [X0] : (p(s(bool,X0)) | s(bool,X0) = s(bool,happ(s(fun(fun('type.num.num',fun(sK0,bool)),bool),sK1),s(fun('type.num.num',fun(sK0,bool)),happ(s(fun('type.num.num',fun('type.num.num',fun(sK0,bool))),sK7(sK1,sK3,sK0)),s('type.num.num',sK2(sK7(sK1,sK3,sK0),sK6(sK1,sK3,sK0),sK5(sK1,sK3,sK0)))))))) ) <=> ~$spl32),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl32])])).
fof(f378,plain,(
  ( ! [X0] : (p(s(bool,happ(s(fun(fun('type.num.num',fun(sK0,bool)),bool),sK1),s(fun('type.num.num',fun(sK0,bool)),sK4(sK1,sK3,sK0))))) | p(s(bool,X0)) | s(bool,X0) = s(bool,happ(s(fun(fun('type.num.num',fun(sK0,bool)),bool),sK1),s(fun('type.num.num',fun(sK0,bool)),happ(s(fun('type.num.num',fun('type.num.num',fun(sK0,bool))),sK7(sK1,sK3,sK0)),s('type.num.num',sK2(sK7(sK1,sK3,sK0),sK6(sK1,sK3,sK0),sK5(sK1,sK3,sK0)))))))) ) | $spl12),
  inference(superposition,[],[f228,f199])).
fof(f356,plain,(
  ( ! [X0] : (~p(s(bool,happ(s(fun(fun('type.num.num',fun(sK0,bool)),bool),sK1),s(fun('type.num.num',fun(sK0,bool)),X0))))) ) | $spl28),
  inference(cnf_transformation,[],[f356_D])).
fof(f356_D,plain,(
  ( ! [X0] : (~p(s(bool,happ(s(fun(fun('type.num.num',fun(sK0,bool)),bool),sK1),s(fun('type.num.num',fun(sK0,bool)),X0))))) ) <=> ~$spl28),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl28])])).
fof(f358,plain,(
  p(s(bool,happ(s(fun(fun('type.num.num',fun(sK0,bool)),bool),sK1),s(fun('type.num.num',fun(sK0,bool)),sK13(sK1,sK1,fun('type.num.num',fun(sK0,bool))))))) | $spl30),
  inference(cnf_transformation,[],[f358_D])).
fof(f358_D,plain,(
  p(s(bool,happ(s(fun(fun('type.num.num',fun(sK0,bool)),bool),sK1),s(fun('type.num.num',fun(sK0,bool)),sK13(sK1,sK1,fun('type.num.num',fun(sK0,bool))))))) <=> ~$spl30),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl30])])).
fof(f355,plain,(
  ( ! [X0] : (p(s(bool,happ(s(fun(fun('type.num.num',fun(sK0,bool)),bool),sK1),s(fun('type.num.num',fun(sK0,bool)),sK13(sK1,sK1,fun('type.num.num',fun(sK0,bool))))))) | ~p(s(bool,happ(s(fun(fun('type.num.num',fun(sK0,bool)),bool),sK1),s(fun('type.num.num',fun(sK0,bool)),X0))))) ) | $spl4),
  inference(duplicate_literal_removal,[],[f347])).
fof(f347,plain,(
  ( ! [X0] : (p(s(bool,happ(s(fun(fun('type.num.num',fun(sK0,bool)),bool),sK1),s(fun('type.num.num',fun(sK0,bool)),sK13(sK1,sK1,fun('type.num.num',fun(sK0,bool))))))) | ~p(s(bool,happ(s(fun(fun('type.num.num',fun(sK0,bool)),bool),sK1),s(fun('type.num.num',fun(sK0,bool)),X0)))) | p(s(bool,happ(s(fun(fun('type.num.num',fun(sK0,bool)),bool),sK1),s(fun('type.num.num',fun(sK0,bool)),sK13(sK1,sK1,fun('type.num.num',fun(sK0,bool)))))))) ) | $spl4),
  inference(resolution,[],[f215,f113])).
fof(f339,plain,(
  s(bool,'F_0') = s(bool,'const.ind_type.ZRECSPACE_1'(s(fun('type.num.num',fun(sK0,bool)),sK4(sK1,sK3,sK0)))) | $spl24),
  inference(cnf_transformation,[],[f339_D])).
fof(f339_D,plain,(
  s(bool,'F_0') = s(bool,'const.ind_type.ZRECSPACE_1'(s(fun('type.num.num',fun(sK0,bool)),sK4(sK1,sK3,sK0)))) <=> ~$spl24),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl24])])).
fof(f331,plain,(
  s(bool,'F_0') = s(bool,'const.ind_type.ZRECSPACE_1'(s(fun('type.num.num',fun(sK0,bool)),sK4(sK1,sK3,sK0)))) | ($spl1 | $spl8 | $spl21)),
  inference(resolution,[],[f315,f203])).
fof(f203,plain,(
  ( ! [X0] : (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)) ) | ($spl1 | $spl8)),
  inference(backward_demodulation,[],[f194,f187])).
fof(f187,plain,(
  ( ! [X0] : (p(s(bool,X0)) | s(bool,X0) = s(bool,happ(s(fun(fun('type.num.num',fun(sK0,bool)),bool),sK1),s(fun('type.num.num',fun(sK0,bool)),sK3)))) ) | $spl1),
  inference(resolution,[],[f137,f114])).
fof(f341,plain,(
  ~p(s(bool,happ(s(fun(fun('type.num.num',fun(sK0,bool)),bool),sK8(sK4(sK1,sK3,sK0),sK0)),s(fun('type.num.num',fun(sK0,bool)),sK4(sK1,sK3,sK0))))) | $spl27),
  inference(cnf_transformation,[],[f341_D])).
fof(f341_D,plain,(
  ~p(s(bool,happ(s(fun(fun('type.num.num',fun(sK0,bool)),bool),sK8(sK4(sK1,sK3,sK0),sK0)),s(fun('type.num.num',fun(sK0,bool)),sK4(sK1,sK3,sK0))))) <=> ~$spl27),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl27])])).
fof(f321,plain,(
  ~p(s(bool,happ(s(fun(fun('type.num.num',fun(sK0,bool)),bool),sK8(sK4(sK1,sK3,sK0),sK0)),s(fun('type.num.num',fun(sK0,bool)),sK4(sK1,sK3,sK0))))) | $spl21),
  inference(unit_resulting_resolution,[],[f315,f109])).
fof(f326,plain,(
  s(bool,'F_0') = s(bool,'const.ind_type.ZRECSPACE_1'(s(fun('type.num.num',fun(sK0,bool)),sK4(sK1,sK3,sK0)))) | $spl21),
  inference(unit_resulting_resolution,[],[f87,f315,f114])).
fof(f87,plain,(
  ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f22])).
fof(f22,plain,(
  ~p(s(bool,'F_0'))),
  inference(flattening,[],[f2])).
fof(f2,axiom,(
  ~p(s(bool,'F_0'))),
  file('thm.ind_type.ZRECSPACE_ind',aHL_FALSITY)).
fof(f328,plain,(
  s(bool,'F_0') = s(bool,'const.ind_type.ZRECSPACE_1'(s(fun('type.num.num',fun(sK0,bool)),sK4(sK1,sK3,sK0)))) | $spl21),
  inference(unit_resulting_resolution,[],[f87,f315,f114])).
fof(f330,plain,(
  s(bool,'F_0') = s(bool,'const.ind_type.ZRECSPACE_1'(s(fun('type.num.num',fun(sK0,bool)),sK4(sK1,sK3,sK0)))) | ($spl1 | $spl8 | $spl21)),
  inference(unit_resulting_resolution,[],[f315,f203])).
fof(f320,plain,(
  ~p(s(bool,happ(s(fun(fun('type.num.num',fun(sK0,bool)),bool),sK8('const.ind_type.ZCONSTR_3'(s('type.num.num',sK5(sK1,sK3,sK0)),s(sK0,sK6(sK1,sK3,sK0)),s(fun('type.num.num',fun('type.num.num',fun(sK0,bool))),sK7(sK1,sK3,sK0))),sK0)),s(fun('type.num.num',fun(sK0,bool)),sK4(sK1,sK3,sK0))))) | $spl23),
  inference(cnf_transformation,[],[f320_D])).
fof(f320_D,plain,(
  ~p(s(bool,happ(s(fun(fun('type.num.num',fun(sK0,bool)),bool),sK8('const.ind_type.ZCONSTR_3'(s('type.num.num',sK5(sK1,sK3,sK0)),s(sK0,sK6(sK1,sK3,sK0)),s(fun('type.num.num',fun('type.num.num',fun(sK0,bool))),sK7(sK1,sK3,sK0))),sK0)),s(fun('type.num.num',fun(sK0,bool)),sK4(sK1,sK3,sK0))))) <=> ~$spl23),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl23])])).
fof(f314,plain,(
  p(s(bool,'const.ind_type.ZRECSPACE_1'(s(fun('type.num.num',fun(sK0,bool)),sK4(sK1,sK3,sK0))))) | $spl20),
  inference(cnf_transformation,[],[f314_D])).
fof(f314_D,plain,(
  p(s(bool,'const.ind_type.ZRECSPACE_1'(s(fun('type.num.num',fun(sK0,bool)),sK4(sK1,sK3,sK0))))) <=> ~$spl20),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl20])])).
fof(f318,plain,(
  p(s(bool,'const.ind_type.ZRECSPACE_1'(s(fun('type.num.num',fun(sK0,bool)),sK4(sK1,sK3,sK0))))) | ~p(s(bool,happ(s(fun(fun('type.num.num',fun(sK0,bool)),bool),sK8('const.ind_type.ZCONSTR_3'(s('type.num.num',sK5(sK1,sK3,sK0)),s(sK0,sK6(sK1,sK3,sK0)),s(fun('type.num.num',fun('type.num.num',fun(sK0,bool))),sK7(sK1,sK3,sK0))),sK0)),s(fun('type.num.num',fun(sK0,bool)),sK4(sK1,sK3,sK0))))) | $spl12),
  inference(forward_demodulation,[],[f309,f199])).
fof(f309,plain,(
  ~p(s(bool,happ(s(fun(fun('type.num.num',fun(sK0,bool)),bool),sK8('const.ind_type.ZCONSTR_3'(s('type.num.num',sK5(sK1,sK3,sK0)),s(sK0,sK6(sK1,sK3,sK0)),s(fun('type.num.num',fun('type.num.num',fun(sK0,bool))),sK7(sK1,sK3,sK0))),sK0)),s(fun('type.num.num',fun(sK0,bool)),sK4(sK1,sK3,sK0))))) | p(s(bool,'const.ind_type.ZRECSPACE_1'(s(fun('type.num.num',fun(sK0,bool)),'const.ind_type.ZCONSTR_3'(s('type.num.num',sK5(sK1,sK3,sK0)),s(sK0,sK6(sK1,sK3,sK0)),s(fun('type.num.num',fun('type.num.num',fun(sK0,bool))),sK7(sK1,sK3,sK0))))))) | $spl12),
  inference(superposition,[],[f109,f199])).
fof(f313,plain,(
  ( ! [X2] : (p(s(bool,happ(s(fun(fun('type.num.num',fun(sK0,bool)),bool),X2),s(fun('type.num.num',fun(sK0,bool)),sK4(sK1,sK3,sK0))))) | s(fun('type.num.num',fun(sK0,bool)),'const.ind_type.ZBOT_0') = s(fun('type.num.num',fun(sK0,bool)),sK4(X2,'const.ind_type.ZCONSTR_3'(s('type.num.num',sK5(sK1,sK3,sK0)),s(sK0,sK6(sK1,sK3,sK0)),s(fun('type.num.num',fun('type.num.num',fun(sK0,bool))),sK7(sK1,sK3,sK0))),sK0)) | s(fun('type.num.num',fun(sK0,bool)),sK4(X2,'const.ind_type.ZCONSTR_3'(s('type.num.num',sK5(sK1,sK3,sK0)),s(sK0,sK6(sK1,sK3,sK0)),s(fun('type.num.num',fun('type.num.num',fun(sK0,bool))),sK7(sK1,sK3,sK0))),sK0)) = s(fun('type.num.num',fun(sK0,bool)),'const.ind_type.ZCONSTR_3'(s('type.num.num',sK5(X2,'const.ind_type.ZCONSTR_3'(s('type.num.num',sK5(sK1,sK3,sK0)),s(sK0,sK6(sK1,sK3,sK0)),s(fun('type.num.num',fun('type.num.num',fun(sK0,bool))),sK7(sK1,sK3,sK0))),sK0)),s(sK0,sK6(X2,'const.ind_type.ZCONSTR_3'(s('type.num.num',sK5(sK1,sK3,sK0)),s(sK0,sK6(sK1,sK3,sK0)),s(fun('type.num.num',fun('type.num.num',fun(sK0,bool))),sK7(sK1,sK3,sK0))),sK0)),s(fun('type.num.num',fun('type.num.num',fun(sK0,bool))),sK7(X2,'const.ind_type.ZCONSTR_3'(s('type.num.num',sK5(sK1,sK3,sK0)),s(sK0,sK6(sK1,sK3,sK0)),s(fun('type.num.num',fun('type.num.num',fun(sK0,bool))),sK7(sK1,sK3,sK0))),sK0))))) ) | $spl18),
  inference(cnf_transformation,[],[f313_D])).
fof(f313_D,plain,(
  ( ! [X2] : (p(s(bool,happ(s(fun(fun('type.num.num',fun(sK0,bool)),bool),X2),s(fun('type.num.num',fun(sK0,bool)),sK4(sK1,sK3,sK0))))) | s(fun('type.num.num',fun(sK0,bool)),'const.ind_type.ZBOT_0') = s(fun('type.num.num',fun(sK0,bool)),sK4(X2,'const.ind_type.ZCONSTR_3'(s('type.num.num',sK5(sK1,sK3,sK0)),s(sK0,sK6(sK1,sK3,sK0)),s(fun('type.num.num',fun('type.num.num',fun(sK0,bool))),sK7(sK1,sK3,sK0))),sK0)) | s(fun('type.num.num',fun(sK0,bool)),sK4(X2,'const.ind_type.ZCONSTR_3'(s('type.num.num',sK5(sK1,sK3,sK0)),s(sK0,sK6(sK1,sK3,sK0)),s(fun('type.num.num',fun('type.num.num',fun(sK0,bool))),sK7(sK1,sK3,sK0))),sK0)) = s(fun('type.num.num',fun(sK0,bool)),'const.ind_type.ZCONSTR_3'(s('type.num.num',sK5(X2,'const.ind_type.ZCONSTR_3'(s('type.num.num',sK5(sK1,sK3,sK0)),s(sK0,sK6(sK1,sK3,sK0)),s(fun('type.num.num',fun('type.num.num',fun(sK0,bool))),sK7(sK1,sK3,sK0))),sK0)),s(sK0,sK6(X2,'const.ind_type.ZCONSTR_3'(s('type.num.num',sK5(sK1,sK3,sK0)),s(sK0,sK6(sK1,sK3,sK0)),s(fun('type.num.num',fun('type.num.num',fun(sK0,bool))),sK7(sK1,sK3,sK0))),sK0)),s(fun('type.num.num',fun('type.num.num',fun(sK0,bool))),sK7(X2,'const.ind_type.ZCONSTR_3'(s('type.num.num',sK5(sK1,sK3,sK0)),s(sK0,sK6(sK1,sK3,sK0)),s(fun('type.num.num',fun('type.num.num',fun(sK0,bool))),sK7(sK1,sK3,sK0))),sK0))))) ) <=> ~$spl18),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl18])])).
fof(f315,plain,(
  ~p(s(bool,'const.ind_type.ZRECSPACE_1'(s(fun('type.num.num',fun(sK0,bool)),sK4(sK1,sK3,sK0))))) | $spl21),
  inference(cnf_transformation,[],[f315_D])).
fof(f315_D,plain,(
  ~p(s(bool,'const.ind_type.ZRECSPACE_1'(s(fun('type.num.num',fun(sK0,bool)),sK4(sK1,sK3,sK0))))) <=> ~$spl21),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl21])])).
fof(f312,plain,(
  ( ! [X2] : (~p(s(bool,'const.ind_type.ZRECSPACE_1'(s(fun('type.num.num',fun(sK0,bool)),sK4(sK1,sK3,sK0))))) | p(s(bool,happ(s(fun(fun('type.num.num',fun(sK0,bool)),bool),X2),s(fun('type.num.num',fun(sK0,bool)),sK4(sK1,sK3,sK0))))) | s(fun('type.num.num',fun(sK0,bool)),sK4(X2,'const.ind_type.ZCONSTR_3'(s('type.num.num',sK5(sK1,sK3,sK0)),s(sK0,sK6(sK1,sK3,sK0)),s(fun('type.num.num',fun('type.num.num',fun(sK0,bool))),sK7(sK1,sK3,sK0))),sK0)) = s(fun('type.num.num',fun(sK0,bool)),'const.ind_type.ZCONSTR_3'(s('type.num.num',sK5(X2,'const.ind_type.ZCONSTR_3'(s('type.num.num',sK5(sK1,sK3,sK0)),s(sK0,sK6(sK1,sK3,sK0)),s(fun('type.num.num',fun('type.num.num',fun(sK0,bool))),sK7(sK1,sK3,sK0))),sK0)),s(sK0,sK6(X2,'const.ind_type.ZCONSTR_3'(s('type.num.num',sK5(sK1,sK3,sK0)),s(sK0,sK6(sK1,sK3,sK0)),s(fun('type.num.num',fun('type.num.num',fun(sK0,bool))),sK7(sK1,sK3,sK0))),sK0)),s(fun('type.num.num',fun('type.num.num',fun(sK0,bool))),sK7(X2,'const.ind_type.ZCONSTR_3'(s('type.num.num',sK5(sK1,sK3,sK0)),s(sK0,sK6(sK1,sK3,sK0)),s(fun('type.num.num',fun('type.num.num',fun(sK0,bool))),sK7(sK1,sK3,sK0))),sK0)))) | s(fun('type.num.num',fun(sK0,bool)),'const.ind_type.ZBOT_0') = s(fun('type.num.num',fun(sK0,bool)),sK4(X2,'const.ind_type.ZCONSTR_3'(s('type.num.num',sK5(sK1,sK3,sK0)),s(sK0,sK6(sK1,sK3,sK0)),s(fun('type.num.num',fun('type.num.num',fun(sK0,bool))),sK7(sK1,sK3,sK0))),sK0))) ) | $spl12),
  inference(forward_demodulation,[],[f306,f199])).
fof(f306,plain,(
  ( ! [X2] : (p(s(bool,happ(s(fun(fun('type.num.num',fun(sK0,bool)),bool),X2),s(fun('type.num.num',fun(sK0,bool)),sK4(sK1,sK3,sK0))))) | s(fun('type.num.num',fun(sK0,bool)),sK4(X2,'const.ind_type.ZCONSTR_3'(s('type.num.num',sK5(sK1,sK3,sK0)),s(sK0,sK6(sK1,sK3,sK0)),s(fun('type.num.num',fun('type.num.num',fun(sK0,bool))),sK7(sK1,sK3,sK0))),sK0)) = s(fun('type.num.num',fun(sK0,bool)),'const.ind_type.ZCONSTR_3'(s('type.num.num',sK5(X2,'const.ind_type.ZCONSTR_3'(s('type.num.num',sK5(sK1,sK3,sK0)),s(sK0,sK6(sK1,sK3,sK0)),s(fun('type.num.num',fun('type.num.num',fun(sK0,bool))),sK7(sK1,sK3,sK0))),sK0)),s(sK0,sK6(X2,'const.ind_type.ZCONSTR_3'(s('type.num.num',sK5(sK1,sK3,sK0)),s(sK0,sK6(sK1,sK3,sK0)),s(fun('type.num.num',fun('type.num.num',fun(sK0,bool))),sK7(sK1,sK3,sK0))),sK0)),s(fun('type.num.num',fun('type.num.num',fun(sK0,bool))),sK7(X2,'const.ind_type.ZCONSTR_3'(s('type.num.num',sK5(sK1,sK3,sK0)),s(sK0,sK6(sK1,sK3,sK0)),s(fun('type.num.num',fun('type.num.num',fun(sK0,bool))),sK7(sK1,sK3,sK0))),sK0)))) | s(fun('type.num.num',fun(sK0,bool)),'const.ind_type.ZBOT_0') = s(fun('type.num.num',fun(sK0,bool)),sK4(X2,'const.ind_type.ZCONSTR_3'(s('type.num.num',sK5(sK1,sK3,sK0)),s(sK0,sK6(sK1,sK3,sK0)),s(fun('type.num.num',fun('type.num.num',fun(sK0,bool))),sK7(sK1,sK3,sK0))),sK0)) | ~p(s(bool,'const.ind_type.ZRECSPACE_1'(s(fun('type.num.num',fun(sK0,bool)),'const.ind_type.ZCONSTR_3'(s('type.num.num',sK5(sK1,sK3,sK0)),s(sK0,sK6(sK1,sK3,sK0)),s(fun('type.num.num',fun('type.num.num',fun(sK0,bool))),sK7(sK1,sK3,sK0)))))))) ) | $spl12),
  inference(superposition,[],[f104,f199])).
fof(f222,plain,(
  s(bool,'T_0') = s(bool,happ(s(fun(fun('type.num.num',fun(sK0,bool)),bool),sK1),s(fun('type.num.num',fun(sK0,bool)),'const.ind_type.ZBOT_0'))) | $spl16),
  inference(cnf_transformation,[],[f222_D])).
fof(f222_D,plain,(
  s(bool,'T_0') = s(bool,happ(s(fun(fun('type.num.num',fun(sK0,bool)),bool),sK1),s(fun('type.num.num',fun(sK0,bool)),'const.ind_type.ZBOT_0'))) <=> ~$spl16),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl16])])).
fof(f223,plain,(
  s(bool,'T_0') = s(bool,happ(s(fun(fun('type.num.num',fun(sK0,bool)),bool),sK1),s(fun('type.num.num',fun(sK0,bool)),'const.ind_type.ZBOT_0'))) | $spl4),
  inference(global_subsumption,[],[f84,f83,f82,f81,f141,f210,f209,f207,f206,f215,f217,f220])).
fof(f220,plain,(
  p(s(bool,'F_0')) | s(bool,'T_0') = s(bool,happ(s(fun(fun('type.num.num',fun(sK0,bool)),bool),sK1),s(fun('type.num.num',fun(sK0,bool)),'const.ind_type.ZBOT_0'))) | $spl4),
  inference(superposition,[],[f141,f88])).
fof(f217,plain,(
  ( ! [X1] : (~p(s(bool,X1)) | s(bool,X1) = s(bool,happ(s(fun(fun('type.num.num',fun(sK0,bool)),bool),sK1),s(fun('type.num.num',fun(sK0,bool)),'const.ind_type.ZBOT_0')))) ) | $spl4),
  inference(resolution,[],[f141,f117])).
fof(f216,plain,(
  s(bool,'T_0') = s(bool,happ(s(fun(fun('type.num.num',fun(sK0,bool)),bool),sK1),s(fun('type.num.num',fun(sK0,bool)),'const.ind_type.ZBOT_0'))) | ($spl2 | $spl4 | $spl6)),
  inference(resolution,[],[f141,f158])).
fof(f205,plain,(
  s(bool,'T_0') = s(bool,happ(s(fun(fun('type.num.num',fun(sK0,bool)),bool),sK1),s(fun('type.num.num',fun(sK0,bool)),'const.ind_type.ZBOT_0'))) | ($spl2 | $spl4 | $spl6)),
  inference(unit_resulting_resolution,[],[f141,f158])).
fof(f206,plain,(
  s(bool,'T_0') = s(bool,happ(s(fun(fun('type.num.num',fun(sK0,bool)),bool),sK1),s(fun('type.num.num',fun(sK0,bool)),'const.ind_type.ZBOT_0'))) | $spl4),
  inference(unit_resulting_resolution,[],[f86,f141,f117])).
fof(f207,plain,(
  s(bool,'T_0') = s(bool,happ(s(fun(fun('type.num.num',fun(sK0,bool)),bool),sK1),s(fun('type.num.num',fun(sK0,bool)),'const.ind_type.ZBOT_0'))) | $spl4),
  inference(unit_resulting_resolution,[],[f85,f141,f117])).
fof(f209,plain,(
  s(bool,'T_0') = s(bool,happ(s(fun(fun('type.num.num',fun(sK0,bool)),bool),sK1),s(fun('type.num.num',fun(sK0,bool)),'const.ind_type.ZBOT_0'))) | $spl4),
  inference(unit_resulting_resolution,[],[f86,f141,f117])).
fof(f210,plain,(
  s(bool,'T_0') = s(bool,happ(s(fun(fun('type.num.num',fun(sK0,bool)),bool),sK1),s(fun('type.num.num',fun(sK0,bool)),'const.ind_type.ZBOT_0'))) | $spl4),
  inference(unit_resulting_resolution,[],[f85,f141,f117])).
fof(f202,plain,(
  s(bool,'T_0') != s(bool,'const.ind_type.ZRECSPACE_1'(s(fun('type.num.num',fun(sK0,bool)),sK3))) | p(s(bool,'T_0')) | ~p(s(bool,'const.ind_type.ZRECSPACE_1'(s(fun('type.num.num',fun(sK0,bool)),sK3))))),
  introduced(theory_axiom,[])).
fof(f195,plain,(
  ~p(s(bool,'T_0')) | s(fun('type.num.num',fun(sK0,bool)),sK4(sK1,sK3,sK0)) = s(fun('type.num.num',fun(sK0,bool)),'const.ind_type.ZCONSTR_3'(s('type.num.num',sK5(sK1,sK3,sK0)),s(sK0,sK6(sK1,sK3,sK0)),s(fun('type.num.num',fun('type.num.num',fun(sK0,bool))),sK7(sK1,sK3,sK0)))) | s(fun('type.num.num',fun(sK0,bool)),'const.ind_type.ZBOT_0') = s(fun('type.num.num',fun(sK0,bool)),sK4(sK1,sK3,sK0)) | ($spl1 | $spl6)),
  inference(forward_demodulation,[],[f186,f156])).
fof(f186,plain,(
  s(fun('type.num.num',fun(sK0,bool)),sK4(sK1,sK3,sK0)) = s(fun('type.num.num',fun(sK0,bool)),'const.ind_type.ZCONSTR_3'(s('type.num.num',sK5(sK1,sK3,sK0)),s(sK0,sK6(sK1,sK3,sK0)),s(fun('type.num.num',fun('type.num.num',fun(sK0,bool))),sK7(sK1,sK3,sK0)))) | s(fun('type.num.num',fun(sK0,bool)),'const.ind_type.ZBOT_0') = s(fun('type.num.num',fun(sK0,bool)),sK4(sK1,sK3,sK0)) | ~p(s(bool,'const.ind_type.ZRECSPACE_1'(s(fun('type.num.num',fun(sK0,bool)),sK3)))) | $spl1),
  inference(resolution,[],[f137,f104])).
fof(f194,plain,(
  s(bool,'F_0') = s(bool,happ(s(fun(fun('type.num.num',fun(sK0,bool)),bool),sK1),s(fun('type.num.num',fun(sK0,bool)),sK3))) | $spl8),
  inference(cnf_transformation,[],[f194_D])).
fof(f194_D,plain,(
  s(bool,'F_0') = s(bool,happ(s(fun(fun('type.num.num',fun(sK0,bool)),bool),sK1),s(fun('type.num.num',fun(sK0,bool)),sK3))) <=> ~$spl8),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl8])])).
fof(f178,plain,(
  s(bool,'F_0') = s(bool,happ(s(fun(fun('type.num.num',fun(sK0,bool)),bool),sK1),s(fun('type.num.num',fun(sK0,bool)),sK3))) | $spl1),
  inference(unit_resulting_resolution,[],[f87,f137,f114])).
fof(f180,plain,(
  s(bool,'F_0') = s(bool,happ(s(fun(fun('type.num.num',fun(sK0,bool)),bool),sK1),s(fun('type.num.num',fun(sK0,bool)),sK3))) | $spl1),
  inference(unit_resulting_resolution,[],[f87,f137,f114])).
fof(f156,plain,(
  s(bool,'T_0') = s(bool,'const.ind_type.ZRECSPACE_1'(s(fun('type.num.num',fun(sK0,bool)),sK3))) | $spl6),
  inference(cnf_transformation,[],[f156_D])).
fof(f156_D,plain,(
  s(bool,'T_0') = s(bool,'const.ind_type.ZRECSPACE_1'(s(fun('type.num.num',fun(sK0,bool)),sK3))) <=> ~$spl6),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl6])])).
fof(f157,plain,(
  s(bool,'T_0') = s(bool,'const.ind_type.ZRECSPACE_1'(s(fun('type.num.num',fun(sK0,bool)),sK3))) | $spl2),
  inference(global_subsumption,[],[f84,f83,f82,f81,f139,f146,f145,f143,f142,f151,f154])).
fof(f154,plain,(
  p(s(bool,'F_0')) | s(bool,'T_0') = s(bool,'const.ind_type.ZRECSPACE_1'(s(fun('type.num.num',fun(sK0,bool)),sK3))) | $spl2),
  inference(superposition,[],[f139,f88])).
fof(f142,plain,(
  s(bool,'T_0') = s(bool,'const.ind_type.ZRECSPACE_1'(s(fun('type.num.num',fun(sK0,bool)),sK3))) | $spl2),
  inference(unit_resulting_resolution,[],[f86,f139,f117])).
fof(f143,plain,(
  s(bool,'T_0') = s(bool,'const.ind_type.ZRECSPACE_1'(s(fun('type.num.num',fun(sK0,bool)),sK3))) | $spl2),
  inference(unit_resulting_resolution,[],[f85,f139,f117])).
fof(f145,plain,(
  s(bool,'T_0') = s(bool,'const.ind_type.ZRECSPACE_1'(s(fun('type.num.num',fun(sK0,bool)),sK3))) | $spl2),
  inference(unit_resulting_resolution,[],[f86,f139,f117])).
fof(f146,plain,(
  s(bool,'T_0') = s(bool,'const.ind_type.ZRECSPACE_1'(s(fun('type.num.num',fun(sK0,bool)),sK3))) | $spl2),
  inference(unit_resulting_resolution,[],[f85,f139,f117])).
fof(f141,plain,(
  p(s(bool,happ(s(fun(fun('type.num.num',fun(sK0,bool)),bool),sK1),s(fun('type.num.num',fun(sK0,bool)),'const.ind_type.ZBOT_0')))) | $spl4),
  inference(cnf_transformation,[],[f141_D])).
fof(f141_D,plain,(
  p(s(bool,happ(s(fun(fun('type.num.num',fun(sK0,bool)),bool),sK1),s(fun('type.num.num',fun(sK0,bool)),'const.ind_type.ZBOT_0')))) <=> ~$spl4),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl4])])).
fof(f81,plain,(
  p(s(bool,happ(s(fun(fun('type.num.num',fun(sK0,bool)),bool),sK1),s(fun('type.num.num',fun(sK0,bool)),'const.ind_type.ZBOT_0'))))),
  inference(cnf_transformation,[],[f62])).
fof(f139,plain,(
  p(s(bool,'const.ind_type.ZRECSPACE_1'(s(fun('type.num.num',fun(sK0,bool)),sK3)))) | $spl2),
  inference(cnf_transformation,[],[f139_D])).
fof(f139_D,plain,(
  p(s(bool,'const.ind_type.ZRECSPACE_1'(s(fun('type.num.num',fun(sK0,bool)),sK3)))) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f83,plain,(
  p(s(bool,'const.ind_type.ZRECSPACE_1'(s(fun('type.num.num',fun(sK0,bool)),sK3))))),
  inference(cnf_transformation,[],[f62])).
fof(f137,plain,(
  ~p(s(bool,happ(s(fun(fun('type.num.num',fun(sK0,bool)),bool),sK1),s(fun('type.num.num',fun(sK0,bool)),sK3)))) | $spl1),
  inference(cnf_transformation,[],[f137_D])).
fof(f137_D,plain,(
  ~p(s(bool,happ(s(fun(fun('type.num.num',fun(sK0,bool)),bool),sK1),s(fun('type.num.num',fun(sK0,bool)),sK3)))) <=> ~$spl1),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1])])).
fof(f84,plain,(
  ~p(s(bool,happ(s(fun(fun('type.num.num',fun(sK0,bool)),bool),sK1),s(fun('type.num.num',fun(sK0,bool)),sK3))))),
  inference(cnf_transformation,[],[f62])).
% SZS output end Proof for thm.ind_type
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 49
% Passive clauses: 104
% Generated clauses: 451
% Final active clauses: 41
% Final passive clauses: 66
% Input formulas: 18
% Initial clauses: 55
% 
% Duplicate literals: 10
% Fw demodulations: 28
% Bw demodulations: 10
% Global subsumptions: 7
% 
% Simple tautologies: 29
% Equational tautologies: 24
% Forward subsumptions: 198
% Backward subsumptions: 1
% 
% Binary resolution: 164
% Unit resulting resolution: 86
% Factoring: 1
% Forward superposition: 40
% Backward superposition: 71
% 
% Split clauses: 8
% Split components: 21
% SAT solver clauses: 242
% SAT solver unit clauses: 6
% SAT solver binary clauses: 89
% 
% Sat splits: 8
% Sat splitting refutations: 2
% 
% Memory used [KB]: 2046
% Time elapsed: 0.030 s
% ------------------------------
% ------------------------------
% Success in time 18.046 s
