Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 300 next slice time: 5
dis+11_7_3 on thm.integer
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.integer
% SZS output start Proof for thm.integer
fof(f244,plain,(
  $false),
  inference(trivial_inequality_removal,[],[f236])).
fof(f236,plain,(
  s('type.integer.int',sK1) != s('type.integer.int',sK1)),
  inference(superposition,[],[f30,f226])).
fof(f226,plain,(
  ( ! [X0,X1] : (s('type.integer.int',X1) = s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X0),s('type.integer.int',X1)))))) )),
  inference(forward_demodulation,[],[f222,f34])).
fof(f34,plain,(
  ( ! [X0] : (s('type.integer.int',X0) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X0)))))) )),
  inference(cnf_transformation,[],[f15])).
fof(f15,plain,(
  ! [X0] : s('type.integer.int',X0) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X0)))))),
  inference(rectify,[],[f10])).
fof(f10,axiom,(
  ! [X6] : s('type.integer.int',X6) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X6)))))),
  file('thm.integer.INT_SUB_SUB2','thm.integer.INT_NEGNEG')).
fof(f222,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X1))))) = s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X0),s('type.integer.int',X1)))))) )),
  inference(superposition,[],[f40,f41])).
fof(f41,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X1))) = s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X0),s('type.integer.int',X1))),s('type.integer.int',X0)))) )),
  inference(cnf_transformation,[],[f21])).
fof(f21,plain,(
  ! [X0,X1] : s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X1))) = s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X0),s('type.integer.int',X1))),s('type.integer.int',X0)))),
  inference(rectify,[],[f12])).
fof(f12,axiom,(
  ! [X6,X7] : s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X7))) = s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X6),s('type.integer.int',X7))),s('type.integer.int',X6)))),
  file('thm.integer.INT_SUB_SUB2','thm.integer.INT_SUB_SUB')).
fof(f40,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X1),s('type.integer.int',X0))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X0),s('type.integer.int',X1)))))) )),
  inference(cnf_transformation,[],[f20])).
fof(f20,plain,(
  ! [X0,X1] : s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X1),s('type.integer.int',X0))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X0),s('type.integer.int',X1)))))),
  inference(rectify,[],[f11])).
fof(f11,axiom,(
  ! [X6,X7] : s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X7),s('type.integer.int',X6))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X6),s('type.integer.int',X7)))))),
  file('thm.integer.INT_SUB_SUB2','thm.integer.INT_NEG_SUB')).
fof(f30,plain,(
  s('type.integer.int',sK1) != s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK0),s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK0),s('type.integer.int',sK1)))))),
  inference(cnf_transformation,[],[f26])).
fof(f26,plain,(
  s('type.integer.int',sK1) != s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK0),s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK0),s('type.integer.int',sK1)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1])],[f24])).
fof(f24,plain,(
  ? [X0,X1] : s('type.integer.int',X1) != s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X0),s('type.integer.int',X1)))))),
  inference(ennf_transformation,[],[f13])).
fof(f13,plain,(
  ~! [X0,X1] : s('type.integer.int',X1) = s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X0),s('type.integer.int',X1)))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7] : s('type.integer.int',X7) = s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X6),s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X6),s('type.integer.int',X7)))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7] : s('type.integer.int',X7) = s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X6),s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X6),s('type.integer.int',X7)))))),
  file('thm.integer.INT_SUB_SUB2','thm.integer.INT_SUB_SUB2')).
% SZS output end Proof for thm.integer
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 14
% Passive clauses: 26
% Generated clauses: 193
% Final active clauses: 12
% Final passive clauses: 6
% Input formulas: 11
% Initial clauses: 13
% 
% Duplicate literals: 37
% Trivial inequalities: 4
% Fw demodulations: 1
% 
% Simple tautologies: 18
% Equational tautologies: 15
% Forward subsumptions: 85
% 
% Binary resolution: 4
% Forward superposition: 39
% Backward superposition: 44
% Self superposition: 32
% Equality factoring: 26
% 
% Split clauses: 1
% Split components: 2
% SAT solver clauses: 2
% SAT solver unit clauses: 1
% SAT solver binary clauses: 1
% 
% Sat splits: 1
% Sat splitting refutations: 1
% 
% TWLsolver clauses: 2
% TWLsolver calls for satisfiability: 2
% 
% Memory used [KB]: 639
% Time elapsed: 0.014 s
% ------------------------------
% ------------------------------
% Success in time 0.016 s
