Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 300 next slice time: 5
dis+11_7_3 on thm.option
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.option
% SZS output start Proof for thm.option
fof(f1102,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f1097,f174,f74,f113,f111,f1085,f73,f112,f110,f1057,f1073,f1071])).
fof(f1071,plain,(
  s('type.option.option'('type.option.option'(sK0)),'const.option.NONE_0') = s('type.option.option'('type.option.option'(sK0)),sK1) | $spl22),
  inference(cnf_transformation,[],[f1071_D])).
fof(f1071_D,plain,(
  s('type.option.option'('type.option.option'(sK0)),'const.option.NONE_0') = s('type.option.option'('type.option.option'(sK0)),sK1) <=> ~$spl22),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl22])])).
fof(f1073,plain,(
  s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))) = s('type.option.option'(sK0),sK3(sK1,'type.option.option'(sK0))) | $spl24),
  inference(cnf_transformation,[],[f1073_D])).
fof(f1073_D,plain,(
  s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))) = s('type.option.option'(sK0),sK3(sK1,'type.option.option'(sK0))) <=> ~$spl24),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl24])])).
fof(f1057,plain,(
  s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))) = s('type.option.option'(sK0),sK3(sK1,'type.option.option'(sK0))) | s('type.option.option'('type.option.option'(sK0)),'const.option.NONE_0') = s('type.option.option'('type.option.option'(sK0)),sK1) | $spl0),
  inference(superposition,[],[f910,f110])).
fof(f910,plain,(
  ( ! [X10,X11] : (s('type.option.option'(X10),sK3(X11,'type.option.option'(X10))) = s('type.option.option'(X10),'const.option.OPTION_JOIN_1'(s('type.option.option'('type.option.option'(X10)),X11))) | s('type.option.option'('type.option.option'(X10)),'const.option.NONE_0') = s('type.option.option'('type.option.option'(X10)),X11)) )),
  inference(superposition,[],[f95,f96])).
fof(f96,plain,(
  ( ! [X0,X1] : (s('type.option.option'(X0),X1) = s('type.option.option'(X0),'const.option.SOME_1'(s(X0,sK3(X1,X0)))) | s('type.option.option'(X0),'const.option.NONE_0') = s('type.option.option'(X0),X1)) )),
  inference(cnf_transformation,[],[f67])).
fof(f67,plain,(
  ! [X0,X1] : (s('type.option.option'(X0),'const.option.NONE_0') = s('type.option.option'(X0),X1) | s('type.option.option'(X0),X1) = s('type.option.option'(X0),'const.option.SOME_1'(s(X0,sK3(X1,X0)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK3])],[f42])).
fof(f42,plain,(
  ! [X0,X1] : (s('type.option.option'(X0),'const.option.NONE_0') = s('type.option.option'(X0),X1) | ? [X2] : s('type.option.option'(X0),X1) = s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X2))))),
  inference(flattening,[],[f41])).
fof(f41,plain,(
  ! [X0] : ! [X1] : (s('type.option.option'(X0),'const.option.NONE_0') = s('type.option.option'(X0),X1) | ? [X2] : s('type.option.option'(X0),X1) = s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X2))))),
  inference(rectify,[],[f19])).
fof(f19,axiom,(
  ! [X6] : ! [X12] : (s('type.option.option'(X6),'const.option.NONE_0') = s('type.option.option'(X6),X12) | ? [X7] : s('type.option.option'(X6),X12) = s('type.option.option'(X6),'const.option.SOME_1'(s(X6,X7))))),
  file('thm.option.OPTION_JOIN_EQ_SOME','thm.option.option_nchotomy')).
fof(f95,plain,(
  ( ! [X0,X1] : (s('type.option.option'(X0),X1) = s('type.option.option'(X0),'const.option.OPTION_JOIN_1'(s('type.option.option'('type.option.option'(X0)),'const.option.SOME_1'(s('type.option.option'(X0),X1)))))) )),
  inference(cnf_transformation,[],[f40])).
fof(f40,plain,(
  ! [X0,X1] : s('type.option.option'(X0),X1) = s('type.option.option'(X0),'const.option.OPTION_JOIN_1'(s('type.option.option'('type.option.option'(X0)),'const.option.SOME_1'(s('type.option.option'(X0),X1)))))),
  inference(flattening,[],[f39])).
fof(f39,plain,(
  ! [X0] : ! [X1] : s('type.option.option'(X0),X1) = s('type.option.option'(X0),'const.option.OPTION_JOIN_1'(s('type.option.option'('type.option.option'(X0)),'const.option.SOME_1'(s('type.option.option'(X0),X1)))))),
  inference(rectify,[],[f23])).
fof(f23,axiom,(
  ! [X6] : ! [X7] : s('type.option.option'(X6),X7) = s('type.option.option'(X6),'const.option.OPTION_JOIN_1'(s('type.option.option'('type.option.option'(X6)),'const.option.SOME_1'(s('type.option.option'(X6),X7)))))),
  file('thm.option.OPTION_JOIN_EQ_SOME','thm.option.OPTION_JOIN_DEF|split|1')).
fof(f110,plain,(
  s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))) = s('type.option.option'(sK0),'const.option.OPTION_JOIN_1'(s('type.option.option'('type.option.option'(sK0)),sK1))) | $spl0),
  inference(cnf_transformation,[],[f110_D])).
fof(f110_D,plain,(
  s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))) = s('type.option.option'(sK0),'const.option.OPTION_JOIN_1'(s('type.option.option'('type.option.option'(sK0)),sK1))) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f112,plain,(
  s('type.option.option'('type.option.option'(sK0)),sK1) = s('type.option.option'('type.option.option'(sK0)),'const.option.SOME_1'(s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))))) | $spl2),
  inference(cnf_transformation,[],[f112_D])).
fof(f112_D,plain,(
  s('type.option.option'('type.option.option'(sK0)),sK1) = s('type.option.option'('type.option.option'(sK0)),'const.option.SOME_1'(s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))))) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f73,plain,(
  s('type.option.option'('type.option.option'(sK0)),sK1) = s('type.option.option'('type.option.option'(sK0)),'const.option.SOME_1'(s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))))) | s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))) = s('type.option.option'(sK0),'const.option.OPTION_JOIN_1'(s('type.option.option'('type.option.option'(sK0)),sK1)))),
  inference(cnf_transformation,[],[f59])).
fof(f59,plain,(
  (s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))) = s('type.option.option'(sK0),'const.option.OPTION_JOIN_1'(s('type.option.option'('type.option.option'(sK0)),sK1))) | s('type.option.option'('type.option.option'(sK0)),sK1) = s('type.option.option'('type.option.option'(sK0)),'const.option.SOME_1'(s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2)))))) & (s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))) != s('type.option.option'(sK0),'const.option.OPTION_JOIN_1'(s('type.option.option'('type.option.option'(sK0)),sK1))) | s('type.option.option'('type.option.option'(sK0)),sK1) != s('type.option.option'('type.option.option'(sK0)),'const.option.SOME_1'(s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2])],[f58])).
fof(f58,plain,(
  ? [X0,X1,X2] : ((s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X2))) = s('type.option.option'(X0),'const.option.OPTION_JOIN_1'(s('type.option.option'('type.option.option'(X0)),X1))) | s('type.option.option'('type.option.option'(X0)),X1) = s('type.option.option'('type.option.option'(X0)),'const.option.SOME_1'(s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X2)))))) & (s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X2))) != s('type.option.option'(X0),'const.option.OPTION_JOIN_1'(s('type.option.option'('type.option.option'(X0)),X1))) | s('type.option.option'('type.option.option'(X0)),X1) != s('type.option.option'('type.option.option'(X0)),'const.option.SOME_1'(s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X2)))))))),
  inference(nnf_transformation,[],[f53])).
fof(f53,plain,(
  ? [X0,X1,X2] : (s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X2))) = s('type.option.option'(X0),'const.option.OPTION_JOIN_1'(s('type.option.option'('type.option.option'(X0)),X1))) <~> s('type.option.option'('type.option.option'(X0)),X1) = s('type.option.option'('type.option.option'(X0)),'const.option.SOME_1'(s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X2))))))),
  inference(ennf_transformation,[],[f25])).
fof(f25,plain,(
  ~! [X0,X1,X2] : (s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X2))) = s('type.option.option'(X0),'const.option.OPTION_JOIN_1'(s('type.option.option'('type.option.option'(X0)),X1))) <=> s('type.option.option'('type.option.option'(X0)),X1) = s('type.option.option'('type.option.option'(X0)),'const.option.SOME_1'(s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X2))))))),
  inference(flattening,[],[f24])).
fof(f24,plain,(
  ~! [X0] : ! [X1,X2] : (s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X2))) = s('type.option.option'(X0),'const.option.OPTION_JOIN_1'(s('type.option.option'('type.option.option'(X0)),X1))) <=> s('type.option.option'('type.option.option'(X0)),X1) = s('type.option.option'('type.option.option'(X0)),'const.option.SOME_1'(s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X2))))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : ! [X7,X8] : (s('type.option.option'(X6),'const.option.SOME_1'(s(X6,X8))) = s('type.option.option'(X6),'const.option.OPTION_JOIN_1'(s('type.option.option'('type.option.option'(X6)),X7))) <=> s('type.option.option'('type.option.option'(X6)),X7) = s('type.option.option'('type.option.option'(X6)),'const.option.SOME_1'(s('type.option.option'(X6),'const.option.SOME_1'(s(X6,X8))))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : ! [X7,X8] : (s('type.option.option'(X6),'const.option.SOME_1'(s(X6,X8))) = s('type.option.option'(X6),'const.option.OPTION_JOIN_1'(s('type.option.option'('type.option.option'(X6)),X7))) <=> s('type.option.option'('type.option.option'(X6)),X7) = s('type.option.option'('type.option.option'(X6)),'const.option.SOME_1'(s('type.option.option'(X6),'const.option.SOME_1'(s(X6,X8))))))),
  file('thm.option.OPTION_JOIN_EQ_SOME','thm.option.OPTION_JOIN_EQ_SOME')).
fof(f1085,plain,(
  $false | ($spl0 | $spl22)),
  inference(subsumption_resolution,[],[f1084,f101])).
fof(f101,plain,(
  ( ! [X0,X1] : (s('type.option.option'(X0),'const.option.NONE_0') != s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X1)))) )),
  inference(cnf_transformation,[],[f47])).
fof(f47,plain,(
  ! [X0,X1] : s('type.option.option'(X0),'const.option.NONE_0') != s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X1)))),
  inference(flattening,[],[f46])).
fof(f46,plain,(
  ! [X0] : ! [X1] : ~s('type.option.option'(X0),'const.option.NONE_0') = s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X1)))),
  inference(rectify,[],[f21])).
fof(f21,axiom,(
  ! [X6] : ! [X7] : ~s('type.option.option'(X6),'const.option.NONE_0') = s('type.option.option'(X6),'const.option.SOME_1'(s(X6,X7)))),
  file('thm.option.OPTION_JOIN_EQ_SOME','thm.option.NOT_NONE_SOME')).
fof(f1084,plain,(
  s('type.option.option'(sK0),'const.option.NONE_0') = s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))) | ($spl0 | $spl22)),
  inference(forward_demodulation,[],[f1076,f82])).
fof(f82,plain,(
  ( ! [X0] : (s('type.option.option'(X0),'const.option.NONE_0') = s('type.option.option'(X0),'const.option.OPTION_JOIN_1'(s('type.option.option'('type.option.option'(X0)),'const.option.NONE_0')))) )),
  inference(cnf_transformation,[],[f29])).
fof(f29,plain,(
  ! [X0] : s('type.option.option'(X0),'const.option.NONE_0') = s('type.option.option'(X0),'const.option.OPTION_JOIN_1'(s('type.option.option'('type.option.option'(X0)),'const.option.NONE_0')))),
  inference(rectify,[],[f22])).
fof(f22,axiom,(
  ! [X6] : s('type.option.option'(X6),'const.option.NONE_0') = s('type.option.option'(X6),'const.option.OPTION_JOIN_1'(s('type.option.option'('type.option.option'(X6)),'const.option.NONE_0')))),
  file('thm.option.OPTION_JOIN_EQ_SOME','thm.option.OPTION_JOIN_DEF|split|0')).
fof(f1076,plain,(
  s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))) = s('type.option.option'(sK0),'const.option.OPTION_JOIN_1'(s('type.option.option'('type.option.option'(sK0)),'const.option.NONE_0'))) | ($spl0 | $spl22)),
  inference(backward_demodulation,[],[f1071,f110])).
fof(f111,plain,(
  s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))) != s('type.option.option'(sK0),'const.option.OPTION_JOIN_1'(s('type.option.option'('type.option.option'(sK0)),sK1))) | $spl1),
  inference(cnf_transformation,[],[f111_D])).
fof(f111_D,plain,(
  s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))) != s('type.option.option'(sK0),'const.option.OPTION_JOIN_1'(s('type.option.option'('type.option.option'(sK0)),sK1))) <=> ~$spl1),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1])])).
fof(f113,plain,(
  s('type.option.option'('type.option.option'(sK0)),sK1) != s('type.option.option'('type.option.option'(sK0)),'const.option.SOME_1'(s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))))) | $spl3),
  inference(cnf_transformation,[],[f113_D])).
fof(f113_D,plain,(
  s('type.option.option'('type.option.option'(sK0)),sK1) != s('type.option.option'('type.option.option'(sK0)),'const.option.SOME_1'(s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))))) <=> ~$spl3),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl3])])).
fof(f74,plain,(
  s('type.option.option'('type.option.option'(sK0)),sK1) != s('type.option.option'('type.option.option'(sK0)),'const.option.SOME_1'(s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))))) | s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))) != s('type.option.option'(sK0),'const.option.OPTION_JOIN_1'(s('type.option.option'('type.option.option'(sK0)),sK1)))),
  inference(cnf_transformation,[],[f59])).
fof(f174,plain,(
  $false | ($spl1 | $spl2)),
  inference(subsumption_resolution,[],[f172,f111])).
fof(f172,plain,(
  s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))) = s('type.option.option'(sK0),'const.option.OPTION_JOIN_1'(s('type.option.option'('type.option.option'(sK0)),sK1))) | $spl2),
  inference(superposition,[],[f95,f112])).
fof(f1097,plain,(
  s('type.option.option'('type.option.option'(sK0)),sK1) = s('type.option.option'('type.option.option'(sK0)),'const.option.SOME_1'(s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))))) | ($spl23 | $spl24)),
  inference(subsumption_resolution,[],[f1091,f1070])).
fof(f1070,plain,(
  s('type.option.option'('type.option.option'(sK0)),'const.option.NONE_0') != s('type.option.option'('type.option.option'(sK0)),sK1) | $spl23),
  inference(cnf_transformation,[],[f1070_D])).
fof(f1070_D,plain,(
  s('type.option.option'('type.option.option'(sK0)),'const.option.NONE_0') != s('type.option.option'('type.option.option'(sK0)),sK1) <=> ~$spl23),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl23])])).
fof(f1091,plain,(
  s('type.option.option'('type.option.option'(sK0)),sK1) = s('type.option.option'('type.option.option'(sK0)),'const.option.SOME_1'(s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))))) | s('type.option.option'('type.option.option'(sK0)),'const.option.NONE_0') = s('type.option.option'('type.option.option'(sK0)),sK1) | $spl24),
  inference(superposition,[],[f96,f1073])).
% SZS output end Proof for thm.option
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 38
% Passive clauses: 258
% Generated clauses: 979
% Final active clauses: 32
% Final passive clauses: 197
% Input formulas: 22
% Initial clauses: 36
% 
% Duplicate literals: 90
% Trivial inequalities: 21
% Fw subsumption resolutions: 112
% Fw demodulations: 20
% Bw demodulations: 2
% 
% Simple tautologies: 61
% Equational tautologies: 31
% Forward subsumptions: 375
% 
% Binary resolution: 48
% Factoring: 1
% Forward superposition: 198
% Backward superposition: 335
% Self superposition: 44
% Equality factoring: 50
% Equality resolution: 7
% 
% Split clauses: 19
% Split components: 38
% SAT solver clauses: 36
% SAT solver unit clauses: 9
% SAT solver binary clauses: 23
% SAT solver learnt clauses: 2
% SAT solver learnt literals: 1
% 
% Sat splits: 19
% Sat splitting refutations: 2
% 
% TWLsolver clauses: 34
% TWLsolver calls for satisfiability: 15
% 
% Memory used [KB]: 1023
% Time elapsed: 0.030 s
% ------------------------------
% ------------------------------
% Success in time 0.031 s
