Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 299 next slice time: 5
dis+11_7_3 on thm.arithmetic
% (105663)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 226
% Passive clauses: 2612
% Generated clauses: 25783
% Final active clauses: 166
% Final passive clauses: 1780
% Input formulas: 36
% Initial clauses: 72
% 
% Duplicate literals: 990
% Trivial inequalities: 558
% Fw subsumption resolutions: 2881
% Fw demodulations: 4102
% Bw demodulations: 26
% 
% Simple tautologies: 569
% Equational tautologies: 51
% Forward subsumptions: 13187
% Fw demodulations to eq. taut.: 13
% Bw demodulations to eq. taut.: 2
% 
% Binary resolution: 548
% Factoring: 2
% Forward superposition: 7967
% Backward superposition: 8184
% Self superposition: 132
% Equality factoring: 84
% Equality resolution: 44
% 
% Split clauses: 379
% Split components: 788
% SAT solver clauses: 1043
% SAT solver unit clauses: 17
% SAT solver binary clauses: 122
% SAT solver learnt clauses: 2
% SAT solver learnt literals: 4
% 
% Sat splits: 379
% Sat splitting refutations: 53
% 
% TWLsolver clauses: 1037
% TWLsolver calls for satisfiability: 206
% 
% Memory used [KB]: 12920
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 293 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.arithmetic
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.arithmetic
% SZS output start Proof for thm.arithmetic
fof(f9656,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f9569,f9634,f8366,f8370,f8368,f130,f225,f173,f248,f8254,f8252,f127,f221,f265,f268,f141,f233,f125,f217,f1055,f124,f219,f218,f260,f261,f129,f223,f719,f325,f327,f316,f276,f280,f262,f264,f126,f215,f213,f145,f235,f706,f414,f420,f301,f306,f256,f258,f134,f229,f296,f299,f133,f228,f359,f368,f369,f137,f231,f385,f178,f252,f1149,f1168,f180,f253,f8408,f8430,f884,f902,f179,f251,f8852,f8854,f131,f226,f163,f241,f171,f246,f172,f247,f9492,f1086,f707,f1045,f9563,f9635,f8716,f8718,f164,f242,f8363,f8365,f977,f995])).
fof(f995,plain,(
  ( ! [X12,X11] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X11),s('type.num.num',X12)))) | s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',X12),s('type.num.num',X11)))) ) | $spl178),
  inference(cnf_transformation,[],[f995_D])).
fof(f995_D,plain,(
  ( ! [X12,X11] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X11),s('type.num.num',X12)))) | s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',X12),s('type.num.num',X11)))) ) <=> ~$spl178),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl178])])).
fof(f977,plain,(
  ( ! [X12,X11] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X11),s('type.num.num',X12)))) | s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',X12),s('type.num.num',X11)))) ) | ($spl28 | $spl58)),
  inference(resolution,[],[f252,f233])).
fof(f8365,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num',sK2))) | $spl1058),
  inference(cnf_transformation,[],[f8365_D])).
fof(f8365_D,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num',sK2))) <=> ~$spl1058),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1058])])).
fof(f8363,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num',sK2))) | ($spl15 | $spl178 | $spl1054)),
  inference(subsumption_resolution,[],[f8277,f225])).
fof(f8277,plain,(
  p(s(bool,'F_0')) | s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num',sK2))) | ($spl178 | $spl1054)),
  inference(superposition,[],[f995,f8252])).
fof(f242,plain,(
  ( ! [X2,X0,X1] : (s(X0,X1) = s(X0,'const.bool.COND_3'(s(bool,'T_0'),s(X0,X1),s(X0,X2)))) ) | $spl38),
  inference(cnf_transformation,[],[f242_D])).
fof(f242_D,plain,(
  ( ! [X2,X0,X1] : (s(X0,X1) = s(X0,'const.bool.COND_3'(s(bool,'T_0'),s(X0,X1),s(X0,X2)))) ) <=> ~$spl38),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl38])])).
fof(f164,plain,(
  ( ! [X2,X0,X1] : (s(X0,X1) = s(X0,'const.bool.COND_3'(s(bool,'T_0'),s(X0,X1),s(X0,X2)))) )),
  inference(cnf_transformation,[],[f65])).
fof(f65,plain,(
  ! [X0,X1,X2] : s(X0,X1) = s(X0,'const.bool.COND_3'(s(bool,'T_0'),s(X0,X1),s(X0,X2)))),
  inference(flattening,[],[f64])).
fof(f64,plain,(
  ! [X0] : ! [X1,X2] : s(X0,X1) = s(X0,'const.bool.COND_3'(s(bool,'T_0'),s(X0,X1),s(X0,X2)))),
  inference(rectify,[],[f32])).
fof(f32,axiom,(
  ! [X12] : ! [X9,X10] : s(X12,X9) = s(X12,'const.bool.COND_3'(s(bool,'T_0'),s(X12,X9),s(X12,X10)))),
  file('thm.arithmetic.SUC_ELIM_THM','thm.bool.COND_CLAUSES|split|0')).
fof(f8718,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num',sK2))))) | $spl1094),
  inference(cnf_transformation,[],[f8718_D])).
fof(f8718_D,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num',sK2))))) <=> ~$spl1094),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1094])])).
fof(f8716,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num',sK2))))) | ($spl38 | $spl48 | $spl1058)),
  inference(forward_demodulation,[],[f8617,f242])).
fof(f8617,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num',sK2))))) = s('type.num.num','const.bool.COND_3'(s(bool,'T_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))),s('type.num.num',sK2))))) | ($spl48 | $spl1058)),
  inference(superposition,[],[f247,f8365])).
fof(f9635,plain,(
  s('type.num.num',sK2) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',sK2),s('type.num.num',sK2))))) | $spl1276),
  inference(cnf_transformation,[],[f9635_D])).
fof(f9635_D,plain,(
  s('type.num.num',sK2) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',sK2),s('type.num.num',sK2))))) <=> ~$spl1276),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1276])])).
fof(f9563,plain,(
  s('type.num.num',sK2) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',sK2),s('type.num.num',sK2))))) | ($spl1060 | $spl1094)),
  inference(backward_demodulation,[],[f8368,f8718])).
fof(f1045,plain,(
  $false | ($spl76 | $spl99 | $spl180)),
  inference(subsumption_resolution,[],[f1044,f368])).
fof(f1044,plain,(
  s(bool,'T_0') = s(bool,'F_0') | ($spl76 | $spl180)),
  inference(backward_demodulation,[],[f1041,f280])).
fof(f1041,plain,(
  s(bool,'T_0') = s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.num.num',fun('type.num.num',bool)),sK0),s('type.num.num',sK2))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',sK2),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl180),
  inference(cnf_transformation,[],[f1041_D])).
fof(f1041_D,plain,(
  s(bool,'T_0') = s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.num.num',fun('type.num.num',bool)),sK0),s('type.num.num',sK2))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',sK2),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) <=> ~$spl180),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl180])])).
fof(f707,plain,(
  ( ! [X1] : (s(bool,'T_0') = s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.num.num',fun('type.num.num',bool)),sK0),s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))))),s('type.num.num',X1)))) ) | $spl138),
  inference(cnf_transformation,[],[f707_D])).
fof(f707_D,plain,(
  ( ! [X1] : (s(bool,'T_0') = s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.num.num',fun('type.num.num',bool)),sK0),s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))))),s('type.num.num',X1)))) ) <=> ~$spl138),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl138])])).
fof(f1086,plain,(
  ( ! [X4] : (s(bool,'T_0') = s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.num.num',fun('type.num.num',bool)),sK0),s('type.num.num','const.num.SUC_1'(s('type.num.num',X4))))),s('type.num.num',X4)))) ) | ($spl6 | $spl28)),
  inference(resolution,[],[f218,f233])).
fof(f9492,plain,(
  $false | ($spl138 | $spl181 | $spl1106)),
  inference(subsumption_resolution,[],[f9440,f1040])).
fof(f1040,plain,(
  s(bool,'T_0') != s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.num.num',fun('type.num.num',bool)),sK0),s('type.num.num',sK2))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',sK2),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl181),
  inference(cnf_transformation,[],[f1040_D])).
fof(f1040_D,plain,(
  s(bool,'T_0') != s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.num.num',fun('type.num.num',bool)),sK0),s('type.num.num',sK2))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',sK2),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) <=> ~$spl181),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl181])])).
fof(f9440,plain,(
  s(bool,'T_0') = s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.num.num',fun('type.num.num',bool)),sK0),s('type.num.num',sK2))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',sK2),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl138 | $spl1106)),
  inference(superposition,[],[f707,f8854])).
fof(f247,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X0),s('type.num.num',X1))))) = s('type.num.num','const.bool.COND_3'(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num',X1)))))) ) | $spl48),
  inference(cnf_transformation,[],[f247_D])).
fof(f247_D,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X0),s('type.num.num',X1))))) = s('type.num.num','const.bool.COND_3'(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num',X1)))))) ) <=> ~$spl48),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl48])])).
fof(f172,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X0),s('type.num.num',X1))))) = s('type.num.num','const.bool.COND_3'(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num',X1)))))) )),
  inference(cnf_transformation,[],[f71])).
fof(f71,plain,(
  ! [X0,X1] : s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X0),s('type.num.num',X1))))) = s('type.num.num','const.bool.COND_3'(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num',X1)))))),
  inference(rectify,[],[f16])).
fof(f16,axiom,(
  ! [X8,X7] : s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X8),s('type.num.num',X7))))) = s('type.num.num','const.bool.COND_3'(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X8),s('type.num.num',X7))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X8))),s('type.num.num',X7)))))),
  file('thm.arithmetic.SUC_ELIM_THM','thm.arithmetic.SUB_LEFT_SUC')).
fof(f246,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X0),s('type.num.num',X1))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X1)))))) ) | $spl46),
  inference(cnf_transformation,[],[f246_D])).
fof(f246_D,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X0),s('type.num.num',X1))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X1)))))) ) <=> ~$spl46),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl46])])).
fof(f171,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X0),s('type.num.num',X1))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X1)))))) )),
  inference(cnf_transformation,[],[f70])).
fof(f70,plain,(
  ! [X0,X1] : s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X0),s('type.num.num',X1))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X1)))))),
  inference(rectify,[],[f12])).
fof(f12,axiom,(
  ! [X7,X8] : s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X7),s('type.num.num',X8))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X7))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X8)))))),
  file('thm.arithmetic.SUC_ELIM_THM','thm.arithmetic.SUB_MONO_EQ')).
fof(f241,plain,(
  ( ! [X2,X0,X1] : (s(X0,X2) = s(X0,'const.bool.COND_3'(s(bool,'F_0'),s(X0,X1),s(X0,X2)))) ) | $spl36),
  inference(cnf_transformation,[],[f241_D])).
fof(f241_D,plain,(
  ( ! [X2,X0,X1] : (s(X0,X2) = s(X0,'const.bool.COND_3'(s(bool,'F_0'),s(X0,X1),s(X0,X2)))) ) <=> ~$spl36),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl36])])).
fof(f163,plain,(
  ( ! [X2,X0,X1] : (s(X0,X2) = s(X0,'const.bool.COND_3'(s(bool,'F_0'),s(X0,X1),s(X0,X2)))) )),
  inference(cnf_transformation,[],[f63])).
fof(f63,plain,(
  ! [X0,X1,X2] : s(X0,X2) = s(X0,'const.bool.COND_3'(s(bool,'F_0'),s(X0,X1),s(X0,X2)))),
  inference(flattening,[],[f62])).
fof(f62,plain,(
  ! [X0] : ! [X1,X2] : s(X0,X2) = s(X0,'const.bool.COND_3'(s(bool,'F_0'),s(X0,X1),s(X0,X2)))),
  inference(rectify,[],[f33])).
fof(f33,axiom,(
  ! [X12] : ! [X9,X10] : s(X12,X10) = s(X12,'const.bool.COND_3'(s(bool,'F_0'),s(X12,X9),s(X12,X10)))),
  file('thm.arithmetic.SUC_ELIM_THM','thm.bool.COND_CLAUSES|split|1')).
fof(f226,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) ) | $spl16),
  inference(cnf_transformation,[],[f226_D])).
fof(f226_D,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) ) <=> ~$spl16),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl16])])).
fof(f131,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) )),
  inference(cnf_transformation,[],[f40])).
fof(f40,plain,(
  ! [X0] : s('type.num.num',X0) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))),
  inference(rectify,[],[f11])).
fof(f11,axiom,(
  ! [X8] : s('type.num.num',X8) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X8),s('type.num.num','const.num.|48|_0')))),
  file('thm.arithmetic.SUC_ELIM_THM','thm.arithmetic.SUB_|48||split|1')).
fof(f8854,plain,(
  s('type.num.num',sK2) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',sK2),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl1106),
  inference(cnf_transformation,[],[f8854_D])).
fof(f8854_D,plain,(
  s('type.num.num',sK2) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',sK2),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) <=> ~$spl1106),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1106])])).
fof(f8852,plain,(
  s('type.num.num',sK2) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',sK2),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl16 | $spl36 | $spl46 | $spl48 | $spl1068)),
  inference(forward_demodulation,[],[f8851,f226])).
fof(f8851,plain,(
  s('type.num.num','const.arithmetic.-_2'(s('type.num.num',sK2),s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',sK2),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl36 | $spl46 | $spl48 | $spl1068)),
  inference(forward_demodulation,[],[f8850,f241])).
fof(f8850,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',sK2),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.bool.COND_3'(s(bool,'F_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',sK2),s('type.num.num','const.num.|48|_0'))))) | ($spl46 | $spl48 | $spl1068)),
  inference(forward_demodulation,[],[f8763,f246])).
fof(f8763,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',sK2),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.bool.COND_3'(s(bool,'F_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',sK2))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl48 | $spl1068)),
  inference(superposition,[],[f247,f8430])).
fof(f251,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0)))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1))))) ) | $spl56),
  inference(cnf_transformation,[],[f251_D])).
fof(f251_D,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0)))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1))))) ) <=> ~$spl56),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl56])])).
fof(f179,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0))))) )),
  inference(cnf_transformation,[],[f118])).
fof(f118,plain,(
  ! [X0,X1] : ((p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1)))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0))))) & (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0)))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1))))))),
  inference(nnf_transformation,[],[f75])).
fof(f75,plain,(
  ! [X0,X1] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1)))) <=> p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0)))))),
  inference(flattening,[],[f74])).
fof(f74,plain,(
  ! [X0,X1] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1)))) <=> p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0)))))),
  inference(rectify,[],[f9])).
fof(f9,axiom,(
  ! [X8,X7] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X8),s('type.num.num',X7)))) <=> p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X7),s('type.num.num',X8)))))),
  file('thm.arithmetic.SUC_ELIM_THM','thm.arithmetic.NOT_LESS')).
fof(f902,plain,(
  ( ! [X6,X7] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X6),s('type.num.num',X7)))) | s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',X7),s('type.num.num',X6)))) ) | $spl158),
  inference(cnf_transformation,[],[f902_D])).
fof(f902_D,plain,(
  ( ! [X6,X7] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X6),s('type.num.num',X7)))) | s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',X7),s('type.num.num',X6)))) ) <=> ~$spl158),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl158])])).
fof(f884,plain,(
  ( ! [X6,X7] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X6),s('type.num.num',X7)))) | s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',X7),s('type.num.num',X6)))) ) | ($spl32 | $spl56)),
  inference(resolution,[],[f251,f235])).
fof(f8430,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK2),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | $spl1068),
  inference(cnf_transformation,[],[f8430_D])).
fof(f8430_D,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK2),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) <=> ~$spl1068),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1068])])).
fof(f8408,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK2),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | ($spl158 | $spl1062)),
  inference(resolution,[],[f8370,f902])).
fof(f253,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1))))) ) | $spl60),
  inference(cnf_transformation,[],[f253_D])).
fof(f253_D,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1))))) ) <=> ~$spl60),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl60])])).
fof(f180,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1))))) )),
  inference(cnf_transformation,[],[f94])).
fof(f94,plain,(
  ! [X0,X1] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1)))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))))))),
  inference(ennf_transformation,[],[f76])).
fof(f76,plain,(
  ! [X0,X1] : ~(p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1)))) & p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))))))),
  inference(rectify,[],[f8])).
fof(f8,axiom,(
  ! [X8,X7] : ~(p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X8),s('type.num.num',X7)))) & p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X7),s('type.num.num','const.num.SUC_1'(s('type.num.num',X8)))))))),
  file('thm.arithmetic.SUC_ELIM_THM','thm.arithmetic.LESS_LESS_SUC')).
fof(f1168,plain,(
  ( ! [X6,X7] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X6),s('type.num.num',X7)))) | s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',X7),s('type.num.num','const.num.SUC_1'(s('type.num.num',X6)))))) ) | $spl194),
  inference(cnf_transformation,[],[f1168_D])).
fof(f1168_D,plain,(
  ( ! [X6,X7] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X6),s('type.num.num',X7)))) | s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',X7),s('type.num.num','const.num.SUC_1'(s('type.num.num',X6)))))) ) <=> ~$spl194),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl194])])).
fof(f1149,plain,(
  ( ! [X6,X7] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X6),s('type.num.num',X7)))) | s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',X7),s('type.num.num','const.num.SUC_1'(s('type.num.num',X6)))))) ) | ($spl32 | $spl60)),
  inference(resolution,[],[f253,f235])).
fof(f252,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0)))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1))))) ) | $spl58),
  inference(cnf_transformation,[],[f252_D])).
fof(f252_D,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0)))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1))))) ) <=> ~$spl58),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl58])])).
fof(f178,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0)))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1))))) )),
  inference(cnf_transformation,[],[f118])).
fof(f385,plain,(
  $false | ($spl15 | $spl58 | $spl100)),
  inference(subsumption_resolution,[],[f384,f225])).
fof(f384,plain,(
  p(s(bool,'F_0')) | ($spl15 | $spl58 | $spl100)),
  inference(forward_demodulation,[],[f383,f369])).
fof(f383,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0))))) ) | ($spl15 | $spl58 | $spl100)),
  inference(subsumption_resolution,[],[f375,f225])).
fof(f375,plain,(
  ( ! [X0,X1] : (p(s(bool,'F_0')) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0))))) ) | ($spl58 | $spl100)),
  inference(backward_demodulation,[],[f369,f252])).
fof(f231,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) ) | $spl26),
  inference(cnf_transformation,[],[f231_D])).
fof(f231_D,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) ) <=> ~$spl26),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl26])])).
fof(f137,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f3])).
fof(f3,axiom,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) | s(bool,'F_0') = s(bool,X0))),
  file('thm.arithmetic.SUC_ELIM_THM',aHL_BOOL_CASES)).
fof(f369,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0)) ) | $spl100),
  inference(cnf_transformation,[],[f369_D])).
fof(f369_D,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0)) ) <=> ~$spl100),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl100])])).
fof(f368,plain,(
  s(bool,'T_0') != s(bool,'F_0') | $spl99),
  inference(cnf_transformation,[],[f368_D])).
fof(f368_D,plain,(
  s(bool,'T_0') != s(bool,'F_0') <=> ~$spl99),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl99])])).
fof(f359,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,'F_0') = s(bool,X0)) ) | $spl26),
  inference(equality_factoring,[],[f231])).
fof(f228,plain,(
  ( ! [X0] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))))))) ) | $spl20),
  inference(cnf_transformation,[],[f228_D])).
fof(f228_D,plain,(
  ( ! [X0] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))))))) ) <=> ~$spl20),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl20])])).
fof(f133,plain,(
  ( ! [X0] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))))))) )),
  inference(cnf_transformation,[],[f42])).
fof(f42,plain,(
  ! [X0] : p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))))))),
  inference(rectify,[],[f37])).
fof(f37,axiom,(
  ! [X7] : p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num',X7))))))),
  file('thm.arithmetic.SUC_ELIM_THM','thm.prim_rec.LESS_|48|')).
fof(f299,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))))) ) | $spl78),
  inference(cnf_transformation,[],[f299_D])).
fof(f299_D,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))))) ) <=> ~$spl78),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl78])])).
fof(f296,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))))) ) | ($spl20 | $spl28)),
  inference(resolution,[],[f228,f233])).
fof(f229,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl22),
  inference(cnf_transformation,[],[f229_D])).
fof(f229_D,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) <=> ~$spl22),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl22])])).
fof(f134,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) )),
  inference(cnf_transformation,[],[f43])).
fof(f43,plain,(
  ! [X0] : s('type.num.num',X0) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),
  inference(rectify,[],[f14])).
fof(f14,axiom,(
  ! [X8] : s('type.num.num',X8) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X8))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),
  file('thm.arithmetic.SUC_ELIM_THM','thm.arithmetic.SUC_SUB|49|')).
fof(f258,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))) ) | $spl66),
  inference(cnf_transformation,[],[f258_D])).
fof(f258_D,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))) ) <=> ~$spl66),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl66])])).
fof(f256,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))) ) | ($spl12 | $spl22)),
  inference(backward_demodulation,[],[f223,f229])).
fof(f306,plain,(
  ( ! [X0] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) | s(bool,'T_0') = s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.num.num',fun('type.num.num',bool)),sK0),s('type.num.num',X0))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X0),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))) ) | $spl80),
  inference(cnf_transformation,[],[f306_D])).
fof(f306_D,plain,(
  ( ! [X0] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) | s(bool,'T_0') = s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.num.num',fun('type.num.num',bool)),sK0),s('type.num.num',X0))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X0),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))) ) <=> ~$spl80),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl80])])).
fof(f301,plain,(
  ( ! [X0] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) | s(bool,'T_0') = s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.num.num',fun('type.num.num',bool)),sK0),s('type.num.num',X0))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X0),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))) ) | ($spl28 | $spl70)),
  inference(resolution,[],[f261,f233])).
fof(f420,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.num.num',fun('type.num.num',bool)),sK0),s('type.num.num',X0))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X0),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) ) | $spl104),
  inference(cnf_transformation,[],[f420_D])).
fof(f420_D,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.num.num',fun('type.num.num',bool)),sK0),s('type.num.num',X0))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X0),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) ) <=> ~$spl104),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl104])])).
fof(f414,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.num.num',fun('type.num.num',bool)),sK0),s('type.num.num',X0))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X0),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) ) | ($spl32 | $spl80)),
  inference(resolution,[],[f306,f235])).
fof(f706,plain,(
  ( ! [X1] : (s(bool,'T_0') = s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.num.num',fun('type.num.num',bool)),sK0),s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))))),s('type.num.num',X1)))) ) | ($spl66 | $spl78 | $spl99 | $spl104)),
  inference(subsumption_resolution,[],[f705,f368])).
fof(f705,plain,(
  ( ! [X1] : (s(bool,'T_0') = s(bool,'F_0') | s(bool,'T_0') = s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.num.num',fun('type.num.num',bool)),sK0),s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))))),s('type.num.num',X1)))) ) | ($spl66 | $spl78 | $spl104)),
  inference(forward_demodulation,[],[f691,f299])).
fof(f691,plain,(
  ( ! [X1] : (s(bool,'T_0') = s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.num.num',fun('type.num.num',bool)),sK0),s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))))),s('type.num.num',X1))) | s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num',X1)))))) ) | ($spl66 | $spl104)),
  inference(superposition,[],[f420,f258])).
fof(f235,plain,(
  ( ! [X0] : (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)) ) | $spl32),
  inference(cnf_transformation,[],[f235_D])).
fof(f235_D,plain,(
  ( ! [X0] : (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)) ) <=> ~$spl32),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl32])])).
fof(f145,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f105])).
fof(f105,plain,(
  ! [X0] : ((s(bool,'F_0') != s(bool,X0) | ~p(s(bool,X0))) & (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f53])).
fof(f53,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(flattening,[],[f52])).
fof(f52,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(rectify,[],[f31])).
fof(f31,axiom,(
  ! [X11] : (s(bool,'F_0') = s(bool,X11) <=> ~p(s(bool,X11)))),
  file('thm.arithmetic.SUC_ELIM_THM','thm.bool.EQ_CLAUSES|split|3')).
fof(f213,plain,(
  ~p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.num.num',fun('type.num.num',bool)),sK0),s('type.num.num','const.num.SUC_1'(s('type.num.num',sK1))))),s('type.num.num',sK1)))) | $spl1),
  inference(cnf_transformation,[],[f213_D])).
fof(f213_D,plain,(
  ~p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.num.num',fun('type.num.num',bool)),sK0),s('type.num.num','const.num.SUC_1'(s('type.num.num',sK1))))),s('type.num.num',sK1)))) <=> ~$spl1),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1])])).
fof(f215,plain,(
  ~p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.num.num',fun('type.num.num',bool)),sK0),s('type.num.num',sK2))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',sK2),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | $spl3),
  inference(cnf_transformation,[],[f215_D])).
fof(f215_D,plain,(
  ~p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.num.num',fun('type.num.num',bool)),sK0),s('type.num.num',sK2))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',sK2),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) <=> ~$spl3),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl3])])).
fof(f126,plain,(
  ~p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.num.num',fun('type.num.num',bool)),sK0),s('type.num.num',sK2))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',sK2),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | ~p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.num.num',fun('type.num.num',bool)),sK0),s('type.num.num','const.num.SUC_1'(s('type.num.num',sK1))))),s('type.num.num',sK1))))),
  inference(cnf_transformation,[],[f102])).
fof(f102,plain,(
  (! [X4] : p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.num.num',fun('type.num.num',bool)),sK0),s('type.num.num','const.num.SUC_1'(s('type.num.num',X4))))),s('type.num.num',X4)))) | ! [X3] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X3)))) | p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.num.num',fun('type.num.num',bool)),sK0),s('type.num.num',X3))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X3),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) & (~p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.num.num',fun('type.num.num',bool)),sK0),s('type.num.num','const.num.SUC_1'(s('type.num.num',sK1))))),s('type.num.num',sK1)))) | (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK2)))) & ~p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.num.num',fun('type.num.num',bool)),sK0),s('type.num.num',sK2))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',sK2),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2])],[f101])).
fof(f101,plain,(
  ? [X0] : ((! [X4] : p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.num.num',fun('type.num.num',bool)),X0),s('type.num.num','const.num.SUC_1'(s('type.num.num',X4))))),s('type.num.num',X4)))) | ! [X3] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X3)))) | p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.num.num',fun('type.num.num',bool)),X0),s('type.num.num',X3))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X3),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) & (? [X2] : ~p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.num.num',fun('type.num.num',bool)),X0),s('type.num.num','const.num.SUC_1'(s('type.num.num',X2))))),s('type.num.num',X2)))) | ? [X1] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X1)))) & ~p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.num.num',fun('type.num.num',bool)),X0),s('type.num.num',X1))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))),
  inference(rectify,[],[f100])).
fof(f100,plain,(
  ? [X0] : ((! [X1] : p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.num.num',fun('type.num.num',bool)),X0),s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))))),s('type.num.num',X1)))) | ! [X2] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X2)))) | p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.num.num',fun('type.num.num',bool)),X0),s('type.num.num',X2))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) & (? [X1] : ~p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.num.num',fun('type.num.num',bool)),X0),s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))))),s('type.num.num',X1)))) | ? [X2] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X2)))) & ~p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.num.num',fun('type.num.num',bool)),X0),s('type.num.num',X2))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))),
  inference(nnf_transformation,[],[f81])).
fof(f81,plain,(
  ? [X0] : (! [X1] : p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.num.num',fun('type.num.num',bool)),X0),s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))))),s('type.num.num',X1)))) <~> ! [X2] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X2)))) | p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.num.num',fun('type.num.num',bool)),X0),s('type.num.num',X2))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),
  inference(ennf_transformation,[],[f38])).
fof(f38,plain,(
  ~! [X0] : (! [X1] : p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.num.num',fun('type.num.num',bool)),X0),s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))))),s('type.num.num',X1)))) <=> ! [X2] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X2)))) => p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.num.num',fun('type.num.num',bool)),X0),s('type.num.num',X2))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : (! [X7] : p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.num.num',fun('type.num.num',bool)),X6),s('type.num.num','const.num.SUC_1'(s('type.num.num',X7))))),s('type.num.num',X7)))) <=> ! [X7] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X7)))) => p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.num.num',fun('type.num.num',bool)),X6),s('type.num.num',X7))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X7),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : (! [X7] : p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.num.num',fun('type.num.num',bool)),X6),s('type.num.num','const.num.SUC_1'(s('type.num.num',X7))))),s('type.num.num',X7)))) <=> ! [X7] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X7)))) => p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.num.num',fun('type.num.num',bool)),X6),s('type.num.num',X7))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X7),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),
  file('thm.arithmetic.SUC_ELIM_THM','thm.arithmetic.SUC_ELIM_THM')).
fof(f264,plain,(
  ~p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.num.num',fun('type.num.num',bool)),sK0),s('type.num.num',sK2))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',sK2),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))) | $spl73),
  inference(cnf_transformation,[],[f264_D])).
fof(f264_D,plain,(
  ~p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.num.num',fun('type.num.num',bool)),sK0),s('type.num.num',sK2))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',sK2),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))) <=> ~$spl73),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl73])])).
fof(f262,plain,(
  ~p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.num.num',fun('type.num.num',bool)),sK0),s('type.num.num',sK2))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',sK2),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))) | ($spl3 | $spl12)),
  inference(forward_demodulation,[],[f215,f223])).
fof(f280,plain,(
  s(bool,'F_0') = s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.num.num',fun('type.num.num',bool)),sK0),s('type.num.num',sK2))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',sK2),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl76),
  inference(cnf_transformation,[],[f280_D])).
fof(f280_D,plain,(
  s(bool,'F_0') = s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.num.num',fun('type.num.num',bool)),sK0),s('type.num.num',sK2))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',sK2),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) <=> ~$spl76),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl76])])).
fof(f276,plain,(
  s(bool,'F_0') = s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.num.num',fun('type.num.num',bool)),sK0),s('type.num.num',sK2))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',sK2),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl32 | $spl73)),
  inference(resolution,[],[f235,f264])).
fof(f316,plain,(
  $false | ($spl10 | $spl15 | $spl70 | $spl74 | $spl76)),
  inference(subsumption_resolution,[],[f315,f221])).
fof(f315,plain,(
  ~p(s(bool,'T_0')) | ($spl15 | $spl70 | $spl74 | $spl76)),
  inference(forward_demodulation,[],[f314,f268])).
fof(f314,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK2)))) | ($spl15 | $spl70 | $spl76)),
  inference(subsumption_resolution,[],[f305,f225])).
fof(f305,plain,(
  p(s(bool,'F_0')) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK2)))) | ($spl70 | $spl76)),
  inference(superposition,[],[f261,f280])).
fof(f327,plain,(
  s(bool,'F_0') = s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.num.num',fun('type.num.num',bool)),sK0),s('type.num.num','const.num.SUC_1'(s('type.num.num',sK1))))),s('type.num.num',sK1))) | $spl90),
  inference(cnf_transformation,[],[f327_D])).
fof(f327_D,plain,(
  s(bool,'F_0') = s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.num.num',fun('type.num.num',bool)),sK0),s('type.num.num','const.num.SUC_1'(s('type.num.num',sK1))))),s('type.num.num',sK1))) <=> ~$spl90),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl90])])).
fof(f325,plain,(
  s(bool,'F_0') = s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.num.num',fun('type.num.num',bool)),sK0),s('type.num.num','const.num.SUC_1'(s('type.num.num',sK1))))),s('type.num.num',sK1))) | ($spl1 | $spl32)),
  inference(resolution,[],[f213,f235])).
fof(f719,plain,(
  $false | ($spl90 | $spl99 | $spl138)),
  inference(subsumption_resolution,[],[f718,f368])).
fof(f718,plain,(
  s(bool,'T_0') = s(bool,'F_0') | ($spl90 | $spl138)),
  inference(backward_demodulation,[],[f707,f327])).
fof(f223,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl12),
  inference(cnf_transformation,[],[f223_D])).
fof(f223_D,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) <=> ~$spl12),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl12])])).
fof(f129,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  inference(cnf_transformation,[],[f7])).
fof(f7,axiom,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  file('thm.arithmetic.SUC_ELIM_THM','thm.arithmetic.ONE')).
fof(f261,plain,(
  ( ! [X3] : (p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.num.num',fun('type.num.num',bool)),sK0),s('type.num.num',X3))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X3),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X3))))) ) | $spl70),
  inference(cnf_transformation,[],[f261_D])).
fof(f261_D,plain,(
  ( ! [X3] : (p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.num.num',fun('type.num.num',bool)),sK0),s('type.num.num',X3))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X3),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X3))))) ) <=> ~$spl70),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl70])])).
fof(f260,plain,(
  ( ! [X3] : (p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.num.num',fun('type.num.num',bool)),sK0),s('type.num.num',X3))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X3),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X3))))) ) | ($spl8 | $spl12)),
  inference(forward_demodulation,[],[f219,f223])).
fof(f218,plain,(
  ( ! [X4] : (p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.num.num',fun('type.num.num',bool)),sK0),s('type.num.num','const.num.SUC_1'(s('type.num.num',X4))))),s('type.num.num',X4))))) ) | $spl6),
  inference(cnf_transformation,[],[f218_D])).
fof(f218_D,plain,(
  ( ! [X4] : (p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.num.num',fun('type.num.num',bool)),sK0),s('type.num.num','const.num.SUC_1'(s('type.num.num',X4))))),s('type.num.num',X4))))) ) <=> ~$spl6),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl6])])).
fof(f219,plain,(
  ( ! [X3] : (p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.num.num',fun('type.num.num',bool)),sK0),s('type.num.num',X3))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X3),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X3))))) ) | $spl8),
  inference(cnf_transformation,[],[f219_D])).
fof(f219_D,plain,(
  ( ! [X3] : (p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.num.num',fun('type.num.num',bool)),sK0),s('type.num.num',X3))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X3),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X3))))) ) <=> ~$spl8),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl8])])).
fof(f124,plain,(
  ( ! [X4,X3] : (p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.num.num',fun('type.num.num',bool)),sK0),s('type.num.num',X3))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X3),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X3)))) | p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.num.num',fun('type.num.num',bool)),sK0),s('type.num.num','const.num.SUC_1'(s('type.num.num',X4))))),s('type.num.num',X4))))) )),
  inference(cnf_transformation,[],[f102])).
fof(f1055,plain,(
  $false | ($spl1 | $spl6)),
  inference(subsumption_resolution,[],[f213,f218])).
fof(f217,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK2)))) | $spl4),
  inference(cnf_transformation,[],[f217_D])).
fof(f217_D,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK2)))) <=> ~$spl4),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl4])])).
fof(f125,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK2)))) | ~p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.num.num',fun('type.num.num',bool)),sK0),s('type.num.num','const.num.SUC_1'(s('type.num.num',sK1))))),s('type.num.num',sK1))))),
  inference(cnf_transformation,[],[f102])).
fof(f233,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)) ) | $spl28),
  inference(cnf_transformation,[],[f233_D])).
fof(f233_D,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)) ) <=> ~$spl28),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl28])])).
fof(f141,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f103])).
fof(f103,plain,(
  ! [X0] : ((s(bool,'T_0') != s(bool,X0) | p(s(bool,X0))) & (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f50])).
fof(f50,plain,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) <=> p(s(bool,X0)))),
  inference(rectify,[],[f28])).
fof(f28,axiom,(
  ! [X11] : (s(bool,'T_0') = s(bool,X11) <=> p(s(bool,X11)))),
  file('thm.arithmetic.SUC_ELIM_THM','thm.bool.EQ_CLAUSES|split|0')).
fof(f268,plain,(
  s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK2))) | $spl74),
  inference(cnf_transformation,[],[f268_D])).
fof(f268_D,plain,(
  s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK2))) <=> ~$spl74),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl74])])).
fof(f265,plain,(
  s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK2))) | ($spl4 | $spl28)),
  inference(resolution,[],[f233,f217])).
fof(f221,plain,(
  p(s(bool,'T_0')) | $spl10),
  inference(cnf_transformation,[],[f221_D])).
fof(f221_D,plain,(
  p(s(bool,'T_0')) <=> ~$spl10),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl10])])).
fof(f127,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f1])).
fof(f1,axiom,(
  p(s(bool,'T_0'))),
  file('thm.arithmetic.SUC_ELIM_THM',aHL_TRUTH)).
fof(f8252,plain,(
  s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',sK2),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | $spl1054),
  inference(cnf_transformation,[],[f8252_D])).
fof(f8252_D,plain,(
  s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',sK2),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) <=> ~$spl1054),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1054])])).
fof(f8254,plain,(
  s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',sK2),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | ($spl10 | $spl74 | $spl194)),
  inference(subsumption_resolution,[],[f8200,f221])).
fof(f8200,plain,(
  ~p(s(bool,'T_0')) | s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',sK2),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | ($spl74 | $spl194)),
  inference(superposition,[],[f1168,f268])).
fof(f248,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1)))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X0)))) | s('type.num.num',X0) = s('type.num.num',X1)) ) | $spl50),
  inference(cnf_transformation,[],[f248_D])).
fof(f248_D,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1)))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X0)))) | s('type.num.num',X0) = s('type.num.num',X1)) ) <=> ~$spl50),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl50])])).
fof(f173,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X0)))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1)))) | s('type.num.num',X0) = s('type.num.num',X1)) )),
  inference(cnf_transformation,[],[f72])).
fof(f72,plain,(
  ! [X0,X1] : (s('type.num.num',X0) = s('type.num.num',X1) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1)))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X0)))))),
  inference(rectify,[],[f15])).
fof(f15,axiom,(
  ! [X8,X7] : (s('type.num.num',X7) = s('type.num.num',X8) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X8),s('type.num.num',X7)))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X7),s('type.num.num',X8)))))),
  file('thm.arithmetic.SUC_ELIM_THM','thm.arithmetic.LESS_LESS_CASES')).
fof(f225,plain,(
  ~p(s(bool,'F_0')) | $spl15),
  inference(cnf_transformation,[],[f225_D])).
fof(f225_D,plain,(
  ~p(s(bool,'F_0')) <=> ~$spl15),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl15])])).
fof(f130,plain,(
  ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f39])).
fof(f39,plain,(
  ~p(s(bool,'F_0'))),
  inference(flattening,[],[f2])).
fof(f2,axiom,(
  ~p(s(bool,'F_0'))),
  file('thm.arithmetic.SUC_ELIM_THM',aHL_FALSITY)).
fof(f8368,plain,(
  s('type.num.num',sK2) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | $spl1060),
  inference(cnf_transformation,[],[f8368_D])).
fof(f8368_D,plain,(
  s('type.num.num',sK2) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) <=> ~$spl1060),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1060])])).
fof(f8370,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num',sK2)))) | $spl1062),
  inference(cnf_transformation,[],[f8370_D])).
fof(f8370_D,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num',sK2)))) <=> ~$spl1062),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1062])])).
fof(f8366,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num',sK2)))) | s('type.num.num',sK2) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | ($spl15 | $spl50 | $spl1054)),
  inference(subsumption_resolution,[],[f8279,f225])).
fof(f8279,plain,(
  p(s(bool,'F_0')) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num',sK2)))) | s('type.num.num',sK2) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | ($spl50 | $spl1054)),
  inference(superposition,[],[f248,f8252])).
fof(f9634,plain,(
  s('type.num.num',sK2) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',sK2),s('type.num.num',sK2))))) | $spl1277),
  inference(cnf_transformation,[],[f9634_D])).
fof(f9634_D,plain,(
  s('type.num.num',sK2) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',sK2),s('type.num.num',sK2))))) <=> ~$spl1277),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1277])])).
fof(f9569,plain,(
  s('type.num.num',sK2) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',sK2),s('type.num.num',sK2))))) | ($spl1060 | $spl1107)),
  inference(backward_demodulation,[],[f8368,f8853])).
fof(f8853,plain,(
  s('type.num.num',sK2) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',sK2),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl1107),
  inference(cnf_transformation,[],[f8853_D])).
fof(f8853_D,plain,(
  s('type.num.num',sK2) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',sK2),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) <=> ~$spl1107),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1107])])).
% SZS output end Proof for thm.arithmetic
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 118
% Passive clauses: 569
% Generated clauses: 9350
% Final active clauses: 77
% Final passive clauses: 384
% Input formulas: 36
% Initial clauses: 72
% 
% Duplicate literals: 373
% Trivial inequalities: 120
% Fw subsumption resolutions: 759
% Fw demodulations: 1322
% Bw demodulations: 88
% Condensations: 696
% Global subsumptions: 5
% 
% Simple tautologies: 124
% Equational tautologies: 23
% Forward subsumptions: 4416
% Fw demodulations to eq. taut.: 2
% 
% Binary resolution: 284
% Factoring: 2
% Forward superposition: 2243
% Backward superposition: 2572
% Self superposition: 84
% Equality factoring: 50
% Equality resolution: 17
% 
% Split clauses: 54
% Split components: 110
% SAT solver clauses: 1013
% SAT solver unit clauses: 81
% SAT solver binary clauses: 35
% SAT solver learnt clauses: 14
% SAT solver learnt literals: 4
% 
% Sat splits: 54
% Sat splitting refutations: 11
% 
% TWLsolver clauses: 978
% TWLsolver calls for satisfiability: 423
% 
% Memory used [KB]: 7419
% Time elapsed: 0.404 s
% ------------------------------
% ------------------------------
% Success in time 1.024 s
