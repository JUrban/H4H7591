Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.intExtension
% (5067)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 1428
% Passive clauses: 11618
% Generated clauses: 38290
% Final active clauses: 1028
% Final passive clauses: 7815
% Input formulas: 133
% Initial clauses: 271
% 
% Duplicate literals: 271
% Trivial inequalities: 230
% Fw subsumption resolutions: 3869
% Fw demodulations: 3347
% Bw demodulations: 267
% 
% Simple tautologies: 221
% Equational tautologies: 42
% Forward subsumptions: 18802
% Fw demodulations to eq. taut.: 1
% 
% Binary resolution: 9267
% Factoring: 1152
% Forward superposition: 9041
% Backward superposition: 10025
% Self superposition: 54
% Equality factoring: 4
% Equality resolution: 33
% 
% Split clauses: 525
% Split components: 1061
% SAT solver clauses: 889
% SAT solver unit clauses: 11
% SAT solver binary clauses: 103
% SAT solver learnt clauses: 1
% SAT solver learnt literals: 3
% 
% Sat splits: 525
% Sat splitting refutations: 30
% 
% TWLsolver clauses: 878
% TWLsolver calls for satisfiability: 623
% 
% Memory used [KB]: 19829
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 143 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.intExtension
% (5093)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 505
% Passive clauses: 4795
% Generated clauses: 22077
% Final active clauses: 309
% Final passive clauses: 1517
% Input formulas: 133
% Initial clauses: 271
% 
% Duplicate literals: 167
% Trivial inequalities: 82
% Fw subsumption resolutions: 1169
% Fw demodulations: 2558
% Bw demodulations: 2899
% Condensations: 74
% Global subsumptions: 30
% 
% Simple tautologies: 160
% Equational tautologies: 20
% Forward subsumptions: 7678
% Fw demodulations to eq. taut.: 8
% Bw demodulations to eq. taut.: 6
% 
% Binary resolution: 1726
% Factoring: 162
% Forward superposition: 3104
% Backward superposition: 3804
% Self superposition: 45
% Equality factoring: 6
% Equality resolution: 23
% 
% Split clauses: 59
% Split components: 120
% SAT solver clauses: 3718
% SAT solver unit clauses: 382
% SAT solver binary clauses: 117
% SAT solver learnt clauses: 60
% SAT solver learnt literals: 10
% 
% Sat splits: 59
% Sat splitting refutations: 64
% 
% TWLsolver clauses: 3598
% TWLsolver calls for satisfiability: 1607
% 
% Memory used [KB]: 16247
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 136 next slice time: 103
lrs+11_2_br=off:cond=on:fde=none:gs=on:gsaa=full_model:lwlo=on:nwc=2:sas=minisat:stl=30:ssfp=100000:ssfq=1.4:smm=sco:ssnc=none:sp=occurrence:urr=on_98 on thm.intExtension
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.intExtension
% SZS output start Proof for thm.intExtension
fof(f17891,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f418,f712,f710,f417,f711,f709,f2062,f2074,f2064,f2078,f2067,f2081,f2079,f2068,f2082,f2069,f2083,f5660,f2758,f5673,f2531,f2076,f5674,f11318,f11342,f11340,f12841,f12842,f12759,f12849,f12848,f12846,f12839,f12845,f12792,f12843,f12869,f12874,f12876,f12878,f12844,f12868,f16031,f16588,f16596,f17415,f17435,f17882,f17890])).
fof(f17890,plain,(
  $false | ($spl0 | $spl16 | $spl24)),
  inference(subsumption_resolution,[],[f17889,f17471])).
fof(f17471,plain,(
  s('type.integer.int',sK8) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | ($spl16 | $spl24)),
  inference(backward_demodulation,[],[f11341,f5944])).
fof(f5944,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl16),
  inference(backward_demodulation,[],[f5675,f3923])).
fof(f3923,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))),
  inference(unit_resulting_resolution,[],[f2084,f591])).
fof(f591,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X0))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X1))) | s('type.num.num',X0) = s('type.num.num',X1)) )),
  inference(cnf_transformation,[],[f373])).
fof(f373,plain,(
  ! [X0,X1] : ((s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X0))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X1))) | s('type.num.num',X0) = s('type.num.num',X1)) & (s('type.num.num',X0) != s('type.num.num',X1) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X0))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X1)))))),
  inference(nnf_transformation,[],[f263])).
fof(f263,plain,(
  ! [X0,X1] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X0))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X1))) <=> s('type.num.num',X0) = s('type.num.num',X1))),
  inference(rectify,[],[f31])).
fof(f31,axiom,(
  ! [X11,X8] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X8))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X11))) <=> s('type.num.num',X8) = s('type.num.num',X11))),
  file('thm.intExtension.INT_SGN_CLAUSES|split|2','thm.integer.INT_INJ')).
fof(f2084,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))),
  inference(subsumption_resolution,[],[f2072,f719])).
fof(f719,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))) )),
  inference(subsumption_resolution,[],[f494,f713])).
fof(f713,plain,(
  ~p(s(bool,'F_0'))),
  inference(subsumption_resolution,[],[f428,f419])).
fof(f419,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f1])).
fof(f1,axiom,(
  p(s(bool,'T_0'))),
  file('thm.intExtension.INT_SGN_CLAUSES|split|2',aHL_TRUTH)).
fof(f428,plain,(
  ~p(s(bool,'F_0')) | ~p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f326])).
fof(f326,plain,(
  (p(s(bool,'F_0')) | p(s(bool,'T_0'))) & (~p(s(bool,'T_0')) | ~p(s(bool,'F_0')))),
  inference(nnf_transformation,[],[f136])).
fof(f136,plain,(
  ~p(s(bool,'F_0')) <=> p(s(bool,'T_0'))),
  inference(flattening,[],[f56])).
fof(f56,axiom,(
  ~p(s(bool,'F_0')) <=> p(s(bool,'T_0'))),
  file('thm.intExtension.INT_SGN_CLAUSES|split|2','thm.bool.NOT_CLAUSES|split|2')).
fof(f494,plain,(
  ( ! [X0] : (p(s(bool,'F_0')) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f334])).
fof(f334,plain,(
  ! [X0] : ((s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))) | p(s(bool,'F_0'))) & (~p(s(bool,'F_0')) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))),
  inference(nnf_transformation,[],[f199])).
fof(f199,plain,(
  ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))) <=> p(s(bool,'F_0')))),
  inference(rectify,[],[f69])).
fof(f69,axiom,(
  ! [X8] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X8))) <=> p(s(bool,'F_0')))),
  file('thm.intExtension.INT_SGN_CLAUSES|split|2','thm.numeral.numeral_eq|split|1')).
fof(f2072,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),
  inference(superposition,[],[f498,f424])).
fof(f424,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  inference(cnf_transformation,[],[f83])).
fof(f83,axiom,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  file('thm.intExtension.INT_SGN_CLAUSES|split|2','thm.numeral.numeral_distrib|split|13')).
fof(f498,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X0)) )),
  inference(cnf_transformation,[],[f336])).
fof(f336,plain,(
  ! [X0] : ((s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X0)) & (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X0) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))),
  inference(nnf_transformation,[],[f201])).
fof(f201,plain,(
  ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) <=> s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X0))),
  inference(rectify,[],[f82])).
fof(f82,axiom,(
  ! [X8] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X8))) <=> s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X8))),
  file('thm.intExtension.INT_SGN_CLAUSES|split|2','thm.numeral.numeral_distrib|split|18')).
fof(f5675,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.num.|48|_0') | $spl16),
  inference(backward_demodulation,[],[f2083,f438])).
fof(f438,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f145])).
fof(f145,plain,(
  ! [X0] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))),
  inference(rectify,[],[f91])).
fof(f91,axiom,(
  ! [X8] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X8)))),
  file('thm.intExtension.INT_SGN_CLAUSES|split|2','thm.arithmetic.MULT|split|0')).
fof(f11341,plain,(
  s('type.integer.int',sK8) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | $spl24),
  inference(cnf_transformation,[],[f11341_D])).
fof(f11341_D,plain,(
  s('type.integer.int',sK8) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))) <=> ~$spl24),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl24])])).
fof(f17889,plain,(
  s('type.integer.int',sK8) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | ($spl0 | $spl16 | $spl24)),
  inference(forward_demodulation,[],[f17888,f17483])).
fof(f17483,plain,(
  s('type.integer.int',sK8) = s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',sK8))) | ($spl16 | $spl24)),
  inference(backward_demodulation,[],[f11341,f6177])).
fof(f6177,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl16),
  inference(backward_demodulation,[],[f5675,f5046])).
fof(f5046,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))),
  inference(forward_demodulation,[],[f5036,f544])).
fof(f544,plain,(
  ( ! [X2,X0,X1] : (s(X0,X1) = s(X0,'const.bool.COND_3'(s(bool,'T_0'),s(X0,X1),s(X0,X2)))) )),
  inference(cnf_transformation,[],[f226])).
fof(f226,plain,(
  ! [X0,X1,X2] : s(X0,X1) = s(X0,'const.bool.COND_3'(s(bool,'T_0'),s(X0,X1),s(X0,X2)))),
  inference(flattening,[],[f225])).
fof(f225,plain,(
  ! [X0] : ! [X1,X2] : s(X0,X1) = s(X0,'const.bool.COND_3'(s(bool,'T_0'),s(X0,X1),s(X0,X2)))),
  inference(rectify,[],[f42])).
fof(f42,axiom,(
  ! [X9] : ! [X13,X14] : s(X9,X13) = s(X9,'const.bool.COND_3'(s(bool,'T_0'),s(X9,X13),s(X9,X14)))),
  file('thm.intExtension.INT_SGN_CLAUSES|split|2','thm.bool.COND_CLAUSES|split|0')).
fof(f5036,plain,(
  ( ! [X0] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int','const.bool.COND_3'(s(bool,'T_0'),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X0)))))) )),
  inference(unit_resulting_resolution,[],[f544,f505])).
fof(f505,plain,(
  ( ! [X0] : (s('type.integer.int',X0) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X0)))) )),
  inference(cnf_transformation,[],[f339])).
fof(f339,plain,(
  ! [X0] : ((s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X0))) | s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) & (s('type.integer.int',X0) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X0)))))),
  inference(nnf_transformation,[],[f204])).
fof(f204,plain,(
  ! [X0] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X0))) <=> s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),
  inference(rectify,[],[f10])).
fof(f10,axiom,(
  ! [X6] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X6))) <=> s('type.integer.int',X6) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),
  file('thm.intExtension.INT_SGN_CLAUSES|split|2','thm.intExtension.INT_SGN_CLAUSES|split|1')).
fof(f17888,plain,(
  s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',sK8))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | ($spl0 | $spl16)),
  inference(forward_demodulation,[],[f709,f5678])).
fof(f5678,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl16),
  inference(backward_demodulation,[],[f5675,f424])).
fof(f17882,plain,(
  $false | ($spl2 | $spl16 | $spl24)),
  inference(subsumption_resolution,[],[f17881,f713])).
fof(f17881,plain,(
  p(s(bool,'F_0')) | ($spl2 | $spl16 | $spl24)),
  inference(forward_demodulation,[],[f17880,f17440])).
fof(f17440,plain,(
  s(bool,'F_0') = s(bool,'const.integer.int_gt_2'(s('type.integer.int',sK8),s('type.integer.int',sK8))) | ($spl16 | $spl24)),
  inference(backward_demodulation,[],[f11341,f5680])).
fof(f5680,plain,(
  s(bool,'F_0') = s(bool,'const.integer.int_gt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl16),
  inference(backward_demodulation,[],[f5675,f426])).
fof(f426,plain,(
  s(bool,'F_0') = s(bool,'const.integer.int_gt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))),
  inference(cnf_transformation,[],[f15])).
fof(f15,axiom,(
  s(bool,'F_0') = s(bool,'const.integer.int_gt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))),
  file('thm.intExtension.INT_SGN_CLAUSES|split|2','thm.integer.INT_GT_REDUCE|split|2')).
fof(f17880,plain,(
  p(s(bool,'const.integer.int_gt_2'(s('type.integer.int',sK8),s('type.integer.int',sK8)))) | ($spl2 | $spl16 | $spl24)),
  inference(forward_demodulation,[],[f17879,f11341])).
fof(f17879,plain,(
  p(s(bool,'const.integer.int_gt_2'(s('type.integer.int',sK8),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | ($spl2 | $spl16)),
  inference(forward_demodulation,[],[f711,f5675])).
fof(f17435,plain,(
  $false | ($spl0 | $spl3 | $spl16 | $spl25 | $spl32)),
  inference(subsumption_resolution,[],[f17412,f17394])).
fof(f17394,plain,(
  s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',sK8))) = s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',sK8))))) | ($spl0 | $spl3 | $spl16 | $spl25 | $spl32)),
  inference(backward_demodulation,[],[f17377,f16636])).
fof(f16636,plain,(
  s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',sK8))) = s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',sK8))))))) | ($spl0 | $spl16 | $spl32)),
  inference(backward_demodulation,[],[f16599,f12848])).
fof(f16599,plain,(
  s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',sK8))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | ($spl0 | $spl16)),
  inference(forward_demodulation,[],[f709,f5678])).
fof(f17377,plain,(
  s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',sK8))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',sK8))))) | ($spl0 | $spl3 | $spl16 | $spl25)),
  inference(forward_demodulation,[],[f17376,f17088])).
fof(f17088,plain,(
  s('type.integer.int',sK8) = s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK8))) | ($spl0 | $spl16)),
  inference(superposition,[],[f16600,f451])).
fof(f451,plain,(
  ( ! [X0] : (s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',X0))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X0)))))) )),
  inference(cnf_transformation,[],[f158])).
fof(f158,plain,(
  ! [X0] : s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',X0))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X0)))))),
  inference(rectify,[],[f17])).
fof(f17,axiom,(
  ! [X6] : s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',X6))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X6),s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X6)))))),
  file('thm.intExtension.INT_SGN_CLAUSES|split|2','thm.intExtension.ABS_EQ_MUL_SGN')).
fof(f16600,plain,(
  ( ! [X0] : (s('type.integer.int',X0) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',sK8)))))) ) | ($spl0 | $spl16)),
  inference(backward_demodulation,[],[f16599,f5720])).
fof(f5720,plain,(
  ( ! [X0] : (s('type.integer.int',X0) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl16),
  inference(backward_demodulation,[],[f5675,f715])).
fof(f715,plain,(
  ( ! [X0] : (s('type.integer.int',X0) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))) )),
  inference(forward_demodulation,[],[f456,f424])).
fof(f456,plain,(
  ( ! [X0] : (s('type.integer.int',X0) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) )),
  inference(cnf_transformation,[],[f163])).
fof(f163,plain,(
  ! [X0] : s('type.integer.int',X0) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))),
  inference(rectify,[],[f107])).
fof(f107,axiom,(
  ! [X6] : s('type.integer.int',X6) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X6),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))),
  file('thm.intExtension.INT_SGN_CLAUSES|split|2','thm.integer.INT_MUL_RID')).
fof(f17376,plain,(
  s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK8))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',sK8))))) | ($spl0 | $spl3 | $spl16 | $spl25)),
  inference(subsumption_resolution,[],[f17359,f16660])).
fof(f16660,plain,(
  p(s(bool,'const.integer.int_gt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.integer.int',sK8)))) | ($spl3 | $spl16 | $spl25)),
  inference(unit_resulting_resolution,[],[f11342,f16598,f729])).
fof(f729,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.integer.int_gt_2'(s('type.integer.int',X1),s('type.integer.int',X0)))) | p(s(bool,'const.integer.int_gt_2'(s('type.integer.int',X0),s('type.integer.int',X1)))) | s('type.integer.int',X0) = s('type.integer.int',X1)) )),
  inference(forward_demodulation,[],[f728,f550])).
fof(f550,plain,(
  ( ! [X0,X1] : (s(bool,'const.integer.int_gt_2'(s('type.integer.int',X0),s('type.integer.int',X1))) = s(bool,'const.integer.int_lt_2'(s('type.integer.int',X1),s('type.integer.int',X0)))) )),
  inference(cnf_transformation,[],[f230])).
fof(f230,plain,(
  ! [X0,X1] : s(bool,'const.integer.int_gt_2'(s('type.integer.int',X0),s('type.integer.int',X1))) = s(bool,'const.integer.int_lt_2'(s('type.integer.int',X1),s('type.integer.int',X0)))),
  inference(rectify,[],[f18])).
fof(f18,axiom,(
  ! [X6,X10] : s(bool,'const.integer.int_gt_2'(s('type.integer.int',X6),s('type.integer.int',X10))) = s(bool,'const.integer.int_lt_2'(s('type.integer.int',X10),s('type.integer.int',X6)))),
  file('thm.intExtension.INT_SGN_CLAUSES|split|2','thm.integer.int_gt')).
fof(f728,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.integer.int_gt_2'(s('type.integer.int',X0),s('type.integer.int',X1)))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int',X1)))) | s('type.integer.int',X0) = s('type.integer.int',X1)) )),
  inference(forward_demodulation,[],[f573,f550])).
fof(f573,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X1),s('type.integer.int',X0)))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int',X1)))) | s('type.integer.int',X0) = s('type.integer.int',X1)) )),
  inference(cnf_transformation,[],[f253])).
fof(f253,plain,(
  ! [X0,X1] : (s('type.integer.int',X0) = s('type.integer.int',X1) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int',X1)))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X1),s('type.integer.int',X0)))))),
  inference(rectify,[],[f124])).
fof(f124,axiom,(
  ! [X6,X10] : (s('type.integer.int',X6) = s('type.integer.int',X10) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X6),s('type.integer.int',X10)))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X10),s('type.integer.int',X6)))))),
  file('thm.intExtension.INT_SGN_CLAUSES|split|2','thm.integer.INT_LT_TOTAL')).
fof(f16598,plain,(
  ~p(s(bool,'const.integer.int_gt_2'(s('type.integer.int',sK8),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | ($spl3 | $spl16)),
  inference(forward_demodulation,[],[f712,f5675])).
fof(f17359,plain,(
  ~p(s(bool,'const.integer.int_gt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.integer.int',sK8)))) | s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK8))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',sK8))))) | ($spl0 | $spl16)),
  inference(superposition,[],[f16612,f17088])).
fof(f16612,plain,(
  ( ! [X0] : (~p(s(bool,'const.integer.int_gt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.integer.int',X0)))) | s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X0))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',sK8)))))) ) | ($spl0 | $spl16)),
  inference(backward_demodulation,[],[f16599,f6264])).
fof(f6264,plain,(
  ( ! [X0] : (~p(s(bool,'const.integer.int_gt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.integer.int',X0)))) | s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X0))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl16),
  inference(forward_demodulation,[],[f5724,f5675])).
fof(f5724,plain,(
  ( ! [X0] : (s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X0))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | ~p(s(bool,'const.integer.int_gt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X0))))) ) | $spl16),
  inference(backward_demodulation,[],[f5675,f726])).
fof(f726,plain,(
  ( ! [X0] : (~p(s(bool,'const.integer.int_gt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X0)))) | s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X0))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))) )),
  inference(backward_demodulation,[],[f550,f720])).
fof(f720,plain,(
  ( ! [X0] : (s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X0))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) )),
  inference(forward_demodulation,[],[f507,f424])).
fof(f507,plain,(
  ( ! [X0] : (s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X0))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) )),
  inference(cnf_transformation,[],[f340])).
fof(f340,plain,(
  ! [X0] : ((s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X0))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) & (~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X0))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))),
  inference(nnf_transformation,[],[f205])).
fof(f205,plain,(
  ! [X0] : (s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X0))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) <=> p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))))),
  inference(rectify,[],[f9])).
fof(f9,axiom,(
  ! [X6] : (s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X6))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) <=> p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X6),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))))),
  file('thm.intExtension.INT_SGN_CLAUSES|split|2','thm.intExtension.INT_SGN_CLAUSES|split|0')).
fof(f17412,plain,(
  s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',sK8))) != s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',sK8))))) | ($spl0 | $spl3 | $spl16 | $spl25)),
  inference(backward_demodulation,[],[f17377,f17150])).
fof(f17150,plain,(
  s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',sK8))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',sK8))))) | ($spl0 | $spl16)),
  inference(subsumption_resolution,[],[f17149,f713])).
fof(f17149,plain,(
  p(s(bool,'F_0')) | s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',sK8))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',sK8))))) | ($spl0 | $spl16)),
  inference(forward_demodulation,[],[f17148,f5682])).
fof(f5682,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl16),
  inference(backward_demodulation,[],[f5675,f434])).
fof(f434,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) )),
  inference(cnf_transformation,[],[f141])).
fof(f141,plain,(
  ! [X0] : s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))),
  inference(rectify,[],[f61])).
fof(f61,axiom,(
  ! [X8] : s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',X8),s('type.num.num','const.num.|48|_0')))),
  file('thm.intExtension.INT_SGN_CLAUSES|split|2','thm.numeral.numeral_distrib|split|20')).
fof(f17148,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',sK8))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',sK8))))) | ($spl0 | $spl16)),
  inference(forward_demodulation,[],[f17139,f8267])).
fof(f8267,plain,(
  ( ! [X4,X3] : (s(bool,'const.prim_rec.<_2'(s('type.num.num',X3),s('type.num.num',X4))) = s(bool,'const.integer.int_gt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X4))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X3)))))) )),
  inference(superposition,[],[f553,f550])).
fof(f553,plain,(
  ( ! [X0,X1] : (s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1))) = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X0))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X1)))))) )),
  inference(cnf_transformation,[],[f233])).
fof(f233,plain,(
  ! [X0,X1] : s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1))) = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X0))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X1)))))),
  inference(rectify,[],[f122])).
fof(f122,axiom,(
  ! [X8,X11] : s(bool,'const.prim_rec.<_2'(s('type.num.num',X8),s('type.num.num',X11))) = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X8))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X11)))))),
  file('thm.intExtension.INT_SGN_CLAUSES|split|2','thm.integer.INT_LT_CALCULATE|split|0')).
fof(f17139,plain,(
  s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',sK8))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',sK8))))) | p(s(bool,'const.integer.int_gt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | ($spl0 | $spl16)),
  inference(superposition,[],[f16611,f16599])).
fof(f16611,plain,(
  ( ! [X0] : (s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X0))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',sK8))))) | p(s(bool,'const.integer.int_gt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.integer.int',X0))))) ) | ($spl0 | $spl16)),
  inference(backward_demodulation,[],[f16599,f6263])).
fof(f6263,plain,(
  ( ! [X0] : (s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X0))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | p(s(bool,'const.integer.int_gt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.integer.int',X0))))) ) | $spl16),
  inference(forward_demodulation,[],[f5723,f5675])).
fof(f5723,plain,(
  ( ! [X0] : (s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X0))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | p(s(bool,'const.integer.int_gt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X0))))) ) | $spl16),
  inference(backward_demodulation,[],[f5675,f725])).
fof(f725,plain,(
  ( ! [X0] : (p(s(bool,'const.integer.int_gt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X0)))) | s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X0))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))) )),
  inference(backward_demodulation,[],[f550,f721])).
fof(f721,plain,(
  ( ! [X0] : (s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X0))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) )),
  inference(forward_demodulation,[],[f506,f424])).
fof(f506,plain,(
  ( ! [X0] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X0))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) )),
  inference(cnf_transformation,[],[f340])).
fof(f17415,plain,(
  $false | ($spl0 | $spl3 | $spl16 | $spl25)),
  inference(subsumption_resolution,[],[f17414,f777])).
fof(f777,plain,(
  s(bool,'T_0') != s(bool,'F_0')),
  inference(unit_resulting_resolution,[],[f713,f482])).
fof(f482,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,X0) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f328])).
fof(f328,plain,(
  ! [X0] : ((s(bool,'T_0') != s(bool,X0) | p(s(bool,X0))) & (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f191])).
fof(f191,plain,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) <=> p(s(bool,X0)))),
  inference(rectify,[],[f45])).
fof(f45,axiom,(
  ! [X12] : (s(bool,'T_0') = s(bool,X12) <=> p(s(bool,X12)))),
  file('thm.intExtension.INT_SGN_CLAUSES|split|2','thm.bool.EQ_CLAUSES|split|0')).
fof(f17414,plain,(
  s(bool,'T_0') = s(bool,'F_0') | ($spl0 | $spl3 | $spl16 | $spl25)),
  inference(backward_demodulation,[],[f17384,f16606])).
fof(f16606,plain,(
  s(bool,'F_0') = s(bool,'const.integer.int_gt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',sK8))))) | ($spl0 | $spl16)),
  inference(backward_demodulation,[],[f16599,f6111])).
fof(f6111,plain,(
  s(bool,'F_0') = s(bool,'const.integer.int_gt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl16),
  inference(backward_demodulation,[],[f5675,f4628])).
fof(f4628,plain,(
  s(bool,'F_0') = s(bool,'const.integer.int_gt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))),
  inference(superposition,[],[f452,f424])).
fof(f452,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,'const.integer.int_gt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))))) )),
  inference(cnf_transformation,[],[f159])).
fof(f159,plain,(
  ! [X0] : s(bool,'F_0') = s(bool,'const.integer.int_gt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))))),
  inference(rectify,[],[f118])).
fof(f118,axiom,(
  ! [X8] : s(bool,'F_0') = s(bool,'const.integer.int_gt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X8)))))))),
  file('thm.intExtension.INT_SGN_CLAUSES|split|2','thm.integer.INT_GT_REDUCE|split|4')).
fof(f17384,plain,(
  s(bool,'T_0') = s(bool,'const.integer.int_gt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',sK8))))) | ($spl0 | $spl3 | $spl16 | $spl25)),
  inference(backward_demodulation,[],[f17377,f16618])).
fof(f16618,plain,(
  s(bool,'T_0') = s(bool,'const.integer.int_gt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',sK8))))))) | ($spl0 | $spl16)),
  inference(backward_demodulation,[],[f16599,f9708])).
fof(f9708,plain,(
  s(bool,'T_0') = s(bool,'const.integer.int_gt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl16),
  inference(superposition,[],[f5705,f5678])).
fof(f5705,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,'const.integer.int_gt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))))))))) ) | $spl16),
  inference(backward_demodulation,[],[f5675,f465])).
fof(f465,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,'const.integer.int_gt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))))))))) )),
  inference(cnf_transformation,[],[f172])).
fof(f172,plain,(
  ! [X0] : s(bool,'T_0') = s(bool,'const.integer.int_gt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))))))))),
  inference(rectify,[],[f115])).
fof(f115,axiom,(
  ! [X8] : s(bool,'T_0') = s(bool,'const.integer.int_gt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X8)))))))))))),
  file('thm.intExtension.INT_SGN_CLAUSES|split|2','thm.integer.INT_GT_REDUCE|split|5')).
fof(f16596,plain,(
  $false | ($spl1 | $spl2 | $spl16 | $spl25)),
  inference(subsumption_resolution,[],[f16595,f713])).
fof(f16595,plain,(
  p(s(bool,'F_0')) | ($spl1 | $spl2 | $spl16 | $spl25)),
  inference(forward_demodulation,[],[f16582,f6008])).
fof(f6008,plain,(
  s(bool,'F_0') = s(bool,'const.integer.int_gt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.integer.int',sK8))) | ($spl2 | $spl16)),
  inference(backward_demodulation,[],[f5675,f4313])).
fof(f4313,plain,(
  s(bool,'F_0') = s(bool,'const.integer.int_gt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK8))) | $spl2),
  inference(unit_resulting_resolution,[],[f713,f4308,f575])).
fof(f575,plain,(
  ( ! [X0,X1] : (p(s(bool,X1)) | p(s(bool,X0)) | s(bool,X0) = s(bool,X1)) )),
  inference(cnf_transformation,[],[f302])).
fof(f302,plain,(
  ! [X0,X1] : ((p(s(bool,X0)) & ~p(s(bool,X1))) | (p(s(bool,X1)) & ~p(s(bool,X0))) | s(bool,X0) = s(bool,X1))),
  inference(flattening,[],[f301])).
fof(f301,plain,(
  ! [X0,X1] : ((p(s(bool,X0)) & ~p(s(bool,X1))) | ((p(s(bool,X1)) & ~p(s(bool,X0))) | s(bool,X0) = s(bool,X1)))),
  inference(ennf_transformation,[],[f256])).
fof(f256,plain,(
  ! [X0,X1] : ((p(s(bool,X0)) => p(s(bool,X1))) => ((p(s(bool,X1)) => p(s(bool,X0))) => s(bool,X0) = s(bool,X1)))),
  inference(rectify,[],[f39])).
fof(f39,axiom,(
  ! [X13,X14] : ((p(s(bool,X13)) => p(s(bool,X14))) => ((p(s(bool,X14)) => p(s(bool,X13))) => s(bool,X13) = s(bool,X14)))),
  file('thm.intExtension.INT_SGN_CLAUSES|split|2','thm.bool.IMP_ANTISYM_AX')).
fof(f4308,plain,(
  ~p(s(bool,'const.integer.int_gt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK8)))) | $spl2),
  inference(subsumption_resolution,[],[f4293,f419])).
fof(f4293,plain,(
  ~p(s(bool,'T_0')) | ~p(s(bool,'const.integer.int_gt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK8)))) | $spl2),
  inference(superposition,[],[f731,f781])).
fof(f781,plain,(
  s(bool,'T_0') = s(bool,'const.integer.int_gt_2'(s('type.integer.int',sK8),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | $spl2),
  inference(unit_resulting_resolution,[],[f711,f483])).
fof(f483,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f328])).
fof(f731,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.integer.int_gt_2'(s('type.integer.int',X0),s('type.integer.int',X1)))) | ~p(s(bool,'const.integer.int_gt_2'(s('type.integer.int',X1),s('type.integer.int',X0))))) )),
  inference(forward_demodulation,[],[f730,f550])).
fof(f730,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.integer.int_gt_2'(s('type.integer.int',X0),s('type.integer.int',X1)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int',X1))))) )),
  inference(forward_demodulation,[],[f574,f550])).
fof(f574,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X1),s('type.integer.int',X0)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int',X1))))) )),
  inference(cnf_transformation,[],[f300])).
fof(f300,plain,(
  ! [X0,X1] : (~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int',X1)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X1),s('type.integer.int',X0)))))),
  inference(ennf_transformation,[],[f255])).
fof(f255,plain,(
  ! [X0,X1] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int',X1)))) => ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X1),s('type.integer.int',X0)))))),
  inference(flattening,[],[f254])).
fof(f254,plain,(
  ! [X0,X1] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int',X1)))) => ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X1),s('type.integer.int',X0)))))),
  inference(rectify,[],[f123])).
fof(f123,axiom,(
  ! [X6,X10] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X6),s('type.integer.int',X10)))) => ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X10),s('type.integer.int',X6)))))),
  file('thm.intExtension.INT_SGN_CLAUSES|split|2','thm.integer.INT_LT_GT')).
fof(f16582,plain,(
  p(s(bool,'const.integer.int_gt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.integer.int',sK8)))) | ($spl1 | $spl16 | $spl25)),
  inference(equality_resolution,[],[f15992])).
fof(f15992,plain,(
  ( ! [X0] : (s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',sK8))) != s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X0))) | p(s(bool,'const.integer.int_gt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.integer.int',X0))))) ) | ($spl1 | $spl16 | $spl25)),
  inference(backward_demodulation,[],[f15985,f6263])).
fof(f15985,plain,(
  s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',sK8))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | ($spl1 | $spl16 | $spl25)),
  inference(unit_resulting_resolution,[],[f5729,f11345,f6262])).
fof(f6262,plain,(
  ( ! [X0] : (s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X0))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X0))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X0)))) ) | $spl16),
  inference(forward_demodulation,[],[f6261,f5675])).
fof(f6261,plain,(
  ( ! [X0] : (s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X0))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X0))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X0)))) ) | $spl16),
  inference(forward_demodulation,[],[f5721,f5675])).
fof(f5721,plain,(
  ( ! [X0] : (s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X0))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X0))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X0)))) ) | $spl16),
  inference(backward_demodulation,[],[f5675,f717])).
fof(f717,plain,(
  ( ! [X0] : (s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X0))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X0))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X0)))) )),
  inference(forward_demodulation,[],[f716,f424])).
fof(f716,plain,(
  ( ! [X0] : (s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X0))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X0))) | s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X0))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) )),
  inference(forward_demodulation,[],[f481,f424])).
fof(f481,plain,(
  ( ! [X0] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X0))) | s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X0))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X0))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) )),
  inference(cnf_transformation,[],[f294])).
fof(f294,plain,(
  ! [X0] : (s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X0))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X0))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X0))))),
  inference(flattening,[],[f293])).
fof(f293,plain,(
  ! [X0] : (s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X0))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | (s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X0))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X0)))))),
  inference(ennf_transformation,[],[f190])).
fof(f190,plain,(
  ! [X0] : (s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X0))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) => (s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X0))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) => s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X0)))))),
  inference(flattening,[],[f189])).
fof(f189,plain,(
  ! [X0] : (~s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X0))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) => (~s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X0))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) => s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X0)))))),
  inference(rectify,[],[f7])).
fof(f7,axiom,(
  ! [X6] : (~s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X6))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) => (~s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X6))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) => s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X6)))))),
  file('thm.intExtension.INT_SGN_CLAUSES|split|2','thm.intExtension.INT_SGN_NOTPOSNEG')).
fof(f11345,plain,(
  s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',sK8))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | ($spl16 | $spl25)),
  inference(unit_resulting_resolution,[],[f11342,f6256])).
fof(f6256,plain,(
  ( ! [X0] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X0))) | s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl16),
  inference(forward_demodulation,[],[f5708,f5675])).
fof(f5708,plain,(
  ( ! [X0] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X0))) | s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl16),
  inference(backward_demodulation,[],[f5675,f480])).
fof(f480,plain,(
  ( ! [X0] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X0))) | s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(cnf_transformation,[],[f292])).
fof(f292,plain,(
  ! [X0] : (s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X0))))),
  inference(ennf_transformation,[],[f188])).
fof(f188,plain,(
  ! [X0] : (s('type.integer.int',X0) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) => s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X0))))),
  inference(flattening,[],[f187])).
fof(f187,plain,(
  ! [X0] : (~s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) => ~s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X0))))),
  inference(rectify,[],[f11])).
fof(f11,axiom,(
  ! [X6] : (~s('type.integer.int',X6) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) => ~s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X6))))),
  file('thm.intExtension.INT_SGN_CLAUSES|split|2','thm.intExtension.INT_NOT|48|_SGNNOT|48|')).
fof(f5729,plain,(
  s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',sK8))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | ($spl1 | $spl16)),
  inference(backward_demodulation,[],[f5675,f737])).
fof(f737,plain,(
  s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',sK8))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | $spl1),
  inference(forward_demodulation,[],[f710,f424])).
fof(f16588,plain,(
  $false | ($spl1 | $spl2 | $spl16 | $spl25)),
  inference(subsumption_resolution,[],[f16587,f713])).
fof(f16587,plain,(
  p(s(bool,'F_0')) | ($spl1 | $spl2 | $spl16 | $spl25)),
  inference(forward_demodulation,[],[f16586,f6008])).
fof(f16586,plain,(
  p(s(bool,'const.integer.int_gt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.integer.int',sK8)))) | ($spl1 | $spl2 | $spl16 | $spl25)),
  inference(forward_demodulation,[],[f16583,f11283])).
fof(f11283,plain,(
  s('type.integer.int',sK8) = s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK8))) | ($spl2 | $spl16)),
  inference(forward_demodulation,[],[f11244,f543])).
fof(f543,plain,(
  ( ! [X2,X0,X1] : (s(X0,X2) = s(X0,'const.bool.COND_3'(s(bool,'F_0'),s(X0,X1),s(X0,X2)))) )),
  inference(cnf_transformation,[],[f224])).
fof(f224,plain,(
  ! [X0,X1,X2] : s(X0,X2) = s(X0,'const.bool.COND_3'(s(bool,'F_0'),s(X0,X1),s(X0,X2)))),
  inference(flattening,[],[f223])).
fof(f223,plain,(
  ! [X0] : ! [X1,X2] : s(X0,X2) = s(X0,'const.bool.COND_3'(s(bool,'F_0'),s(X0,X1),s(X0,X2)))),
  inference(rectify,[],[f43])).
fof(f43,axiom,(
  ! [X9] : ! [X13,X14] : s(X9,X14) = s(X9,'const.bool.COND_3'(s(bool,'F_0'),s(X9,X13),s(X9,X14)))),
  file('thm.intExtension.INT_SGN_CLAUSES|split|2','thm.bool.COND_CLAUSES|split|1')).
fof(f11244,plain,(
  s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK8))) = s('type.integer.int','const.bool.COND_3'(s(bool,'F_0'),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK8))),s('type.integer.int',sK8))) | ($spl2 | $spl16)),
  inference(superposition,[],[f5725,f6008])).
fof(f5725,plain,(
  ( ! [X0] : (s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',X0))) = s('type.integer.int','const.bool.COND_3'(s(bool,'const.integer.int_gt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.integer.int',X0))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X0))),s('type.integer.int',X0)))) ) | $spl16),
  inference(backward_demodulation,[],[f5675,f727])).
fof(f727,plain,(
  ( ! [X0] : (s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',X0))) = s('type.integer.int','const.bool.COND_3'(s(bool,'const.integer.int_gt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X0))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X0))),s('type.integer.int',X0)))) )),
  inference(backward_demodulation,[],[f550,f468])).
fof(f468,plain,(
  ( ! [X0] : (s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',X0))) = s('type.integer.int','const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X0))),s('type.integer.int',X0)))) )),
  inference(cnf_transformation,[],[f175])).
fof(f175,plain,(
  ! [X0] : s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',X0))) = s('type.integer.int','const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X0))),s('type.integer.int',X0)))),
  inference(rectify,[],[f104])).
fof(f104,axiom,(
  ! [X8] : s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',X8))) = s('type.integer.int','const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X8),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X8))),s('type.integer.int',X8)))),
  file('thm.intExtension.INT_SGN_CLAUSES|split|2','thm.integer.INT_ABS')).
fof(f16583,plain,(
  p(s(bool,'const.integer.int_gt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK8)))))) | ($spl1 | $spl2 | $spl16 | $spl25)),
  inference(trivial_inequality_removal,[],[f16575])).
fof(f16575,plain,(
  s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',sK8))) != s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',sK8))) | p(s(bool,'const.integer.int_gt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK8)))))) | ($spl1 | $spl2 | $spl16 | $spl25)),
  inference(superposition,[],[f15992,f11283])).
fof(f16031,plain,(
  $false | ($spl1 | $spl16 | $spl25 | $spl30)),
  inference(subsumption_resolution,[],[f15982,f16014])).
fof(f16014,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',sK8))))) | ($spl1 | $spl16 | $spl25 | $spl30)),
  inference(backward_demodulation,[],[f15985,f12846])).
fof(f15982,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',sK8))))) | ($spl16 | $spl25)),
  inference(unit_resulting_resolution,[],[f11345,f6256])).
fof(f12868,plain,(
  ( ! [X36] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X36))) | s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X36))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl36),
  inference(cnf_transformation,[],[f12868_D])).
fof(f12868_D,plain,(
  ( ! [X36] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X36))) | s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X36))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) <=> ~$spl36),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl36])])).
fof(f12844,plain,(
  s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl28),
  inference(cnf_transformation,[],[f12844_D])).
fof(f12844_D,plain,(
  s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) <=> ~$spl28),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl28])])).
fof(f12878,plain,(
  ( ! [X59] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X59))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X59)))) ) | $spl16),
  inference(subsumption_resolution,[],[f12832,f12872])).
fof(f12872,plain,(
  ( ! [X14,X15] : (p(s(bool,'const.integer.int_gt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X15))),s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X14)))))) | s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X14))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X14)))) ) | $spl16),
  inference(subsumption_resolution,[],[f12805,f5879])).
fof(f5879,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | $spl16),
  inference(backward_demodulation,[],[f5675,f2084])).
fof(f12805,plain,(
  ( ! [X14,X15] : (p(s(bool,'const.integer.int_gt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X15))),s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X14)))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X14))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X14)))) ) | $spl16),
  inference(superposition,[],[f5727,f6262])).
fof(f5727,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.integer.int_gt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X1))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X0)))))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X0)) ) | $spl16),
  inference(backward_demodulation,[],[f5675,f734])).
fof(f734,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.integer.int_gt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X1))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X0)))))))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X0)) )),
  inference(forward_demodulation,[],[f600,f550])).
fof(f600,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X0))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X1)))))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X0)) )),
  inference(cnf_transformation,[],[f379])).
fof(f379,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X0))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X1)))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X0) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X1)) & ((s('type.num.num','const.num.|48|_0') = s('type.num.num',X0) & s('type.num.num','const.num.|48|_0') = s('type.num.num',X1)) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X0))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X1))))))))),
  inference(flattening,[],[f378])).
fof(f378,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X0))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X1)))))) | (s('type.num.num','const.num.|48|_0') != s('type.num.num',X0) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X1))) & ((s('type.num.num','const.num.|48|_0') = s('type.num.num',X0) & s('type.num.num','const.num.|48|_0') = s('type.num.num',X1)) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X0))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X1))))))))),
  inference(nnf_transformation,[],[f267])).
fof(f267,plain,(
  ! [X0,X1] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X0))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X1)))))) <=> (s('type.num.num','const.num.|48|_0') != s('type.num.num',X0) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X1)))),
  inference(flattening,[],[f266])).
fof(f266,plain,(
  ! [X0,X1] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X0))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X1)))))) <=> (~s('type.num.num','const.num.|48|_0') = s('type.num.num',X0) | ~s('type.num.num','const.num.|48|_0') = s('type.num.num',X1)))),
  inference(rectify,[],[f119])).
fof(f119,axiom,(
  ! [X8,X11] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X8))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X11)))))) <=> (~s('type.num.num','const.num.|48|_0') = s('type.num.num',X8) | ~s('type.num.num','const.num.|48|_0') = s('type.num.num',X11)))),
  file('thm.intExtension.INT_SGN_CLAUSES|split|2','thm.integer.INT_LT_CALCULATE|split|2')).
fof(f12832,plain,(
  ( ! [X59] : (~p(s(bool,'const.integer.int_gt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X59)))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X59))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X59)))) ) | $spl16),
  inference(superposition,[],[f6264,f6262])).
fof(f12876,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.integer.int','const.integer.ABS_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl40),
  inference(cnf_transformation,[],[f12876_D])).
fof(f12876_D,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.integer.int','const.integer.ABS_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> ~$spl40),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl40])])).
fof(f12874,plain,(
  ( ! [X16] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.integer.int','const.integer.ABS_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X16))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X16)))) ) | $spl16),
  inference(forward_demodulation,[],[f12873,f543])).
fof(f12873,plain,(
  ( ! [X16] : (s('type.integer.int','const.integer.ABS_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.bool.COND_3'(s(bool,'F_0'),s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X16))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X16))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X16)))) ) | $spl16),
  inference(forward_demodulation,[],[f12806,f6111])).
fof(f12806,plain,(
  ( ! [X16] : (s('type.integer.int','const.integer.ABS_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.bool.COND_3'(s(bool,'const.integer.int_gt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X16))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X16))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X16)))) ) | $spl16),
  inference(superposition,[],[f5725,f6262])).
fof(f12869,plain,(
  ( ! [X38] : (p(s(bool,'const.integer.int_gt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X38)))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X38))) | s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X38))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl38),
  inference(cnf_transformation,[],[f12869_D])).
fof(f12869_D,plain,(
  ( ! [X38] : (p(s(bool,'const.integer.int_gt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X38)))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X38))) | s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X38))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) <=> ~$spl38),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl38])])).
fof(f12843,plain,(
  s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) != s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl29),
  inference(cnf_transformation,[],[f12843_D])).
fof(f12843_D,plain,(
  s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) != s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) <=> ~$spl29),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl29])])).
fof(f12792,plain,(
  ( ! [X38] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) != s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | p(s(bool,'const.integer.int_gt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X38)))))) | s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X38))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X38)))) ) | $spl16),
  inference(superposition,[],[f6263,f6262])).
fof(f12845,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl31),
  inference(cnf_transformation,[],[f12845_D])).
fof(f12845_D,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) <=> ~$spl31),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl31])])).
fof(f12839,plain,(
  ( ! [X36] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X36))) | s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X36))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl16),
  inference(duplicate_literal_removal,[],[f12790])).
fof(f12790,plain,(
  ( ! [X36] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X36))) | s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X36))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X36)))) ) | $spl16),
  inference(superposition,[],[f6256,f6262])).
fof(f12846,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl30),
  inference(cnf_transformation,[],[f12846_D])).
fof(f12846_D,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) <=> ~$spl30),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl30])])).
fof(f12848,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl32),
  inference(cnf_transformation,[],[f12848_D])).
fof(f12848_D,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) <=> ~$spl32),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl32])])).
fof(f12849,plain,(
  ( ! [X1] : (s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X1))) = s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X1))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X1))) | s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X1))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl34),
  inference(cnf_transformation,[],[f12849_D])).
fof(f12849_D,plain,(
  ( ! [X1] : (s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X1))) = s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X1))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X1))) | s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X1))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) <=> ~$spl34),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl34])])).
fof(f12759,plain,(
  ( ! [X1] : (s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X1))) = s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X1))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X1))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X1)))) ) | $spl16),
  inference(superposition,[],[f6262,f6262])).
fof(f12842,plain,(
  ( ! [X0] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X0))))) | s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X0))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X0)))))) ) | $spl26),
  inference(cnf_transformation,[],[f12842_D])).
fof(f12842_D,plain,(
  ( ! [X0] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X0))))) | s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X0))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X0)))))) ) <=> ~$spl26),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl26])])).
fof(f12841,plain,(
  ( ! [X0] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X0))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X0))))) | s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X0))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl16),
  inference(subsumption_resolution,[],[f12758,f6259])).
fof(f6259,plain,(
  ( ! [X0] : (s('type.integer.int',X0) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X0)))) ) | $spl16),
  inference(forward_demodulation,[],[f5713,f5675])).
fof(f5713,plain,(
  ( ! [X0] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X0))) | s('type.integer.int',X0) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl16),
  inference(backward_demodulation,[],[f5675,f505])).
fof(f12758,plain,(
  ( ! [X0] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X0))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X0))))) | s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X0))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X0)))) ) | $spl16),
  inference(superposition,[],[f6262,f6262])).
fof(f11340,plain,(
  p(s(bool,sK9('const.integer.ABS_1'(s('type.integer.int',sK8))))) | $spl22),
  inference(cnf_transformation,[],[f11340_D])).
fof(f11340_D,plain,(
  p(s(bool,sK9('const.integer.ABS_1'(s('type.integer.int',sK8))))) <=> ~$spl22),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl22])])).
fof(f11342,plain,(
  s('type.integer.int',sK8) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | $spl25),
  inference(cnf_transformation,[],[f11342_D])).
fof(f11342_D,plain,(
  s('type.integer.int',sK8) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))) <=> ~$spl25),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl25])])).
fof(f11318,plain,(
  s('type.integer.int',sK8) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | p(s(bool,sK9('const.integer.ABS_1'(s('type.integer.int',sK8))))) | ($spl2 | $spl16)),
  inference(superposition,[],[f5715,f11283])).
fof(f5715,plain,(
  ( ! [X0] : (s('type.integer.int',X0) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | p(s(bool,sK9(X0)))) ) | $spl16),
  inference(backward_demodulation,[],[f5675,f548])).
fof(f548,plain,(
  ( ! [X0] : (s('type.integer.int',X0) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | p(s(bool,sK9(X0)))) )),
  inference(cnf_transformation,[],[f366])).
fof(f366,plain,(
  ! [X0] : ((~p(s(bool,sK9(X0))) | s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) & (s('type.integer.int',X0) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | p(s(bool,sK9(X0)))) & s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X0))) = s('type.integer.int','const.bool.COND_3'(s(bool,sK9(X0)),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK9])],[f365])).
fof(f365,plain,(
  ! [X0] : ? [X1] : ((~p(s(bool,X1)) | s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) & (s('type.integer.int',X0) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | p(s(bool,X1))) & s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X0))) = s('type.integer.int','const.bool.COND_3'(s(bool,X1),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),
  inference(flattening,[],[f364])).
fof(f364,plain,(
  ! [X0] : ? [X1] : (((~p(s(bool,X1)) | s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) & (s('type.integer.int',X0) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | p(s(bool,X1)))) & s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X0))) = s('type.integer.int','const.bool.COND_3'(s(bool,X1),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),
  inference(nnf_transformation,[],[f229])).
fof(f229,plain,(
  ! [X0] : ? [X1] : ((p(s(bool,X1)) <=> s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) & s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X0))) = s('type.integer.int','const.bool.COND_3'(s(bool,X1),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),
  inference(rectify,[],[f8])).
fof(f8,axiom,(
  ! [X6] : ? [X7] : ((p(s(bool,X7)) <=> s('type.integer.int',X6) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) & s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X6))) = s('type.integer.int','const.bool.COND_3'(s(bool,X7),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X6),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),
  file('thm.intExtension.INT_SGN_CLAUSES|split|2','thm.intExtension.SGN_def')).
fof(f5674,plain,(
  ( ! [X13] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X13)))))))) ) | $spl20),
  inference(cnf_transformation,[],[f5674_D])).
fof(f5674_D,plain,(
  ( ! [X13] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X13)))))))) ) <=> ~$spl20),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl20])])).
fof(f2076,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) | $spl7),
  inference(cnf_transformation,[],[f2076_D])).
fof(f2076_D,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) <=> ~$spl7),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl7])])).
fof(f2531,plain,(
  ( ! [X13] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X13)))))))) )),
  inference(superposition,[],[f498,f446])).
fof(f446,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))))) )),
  inference(cnf_transformation,[],[f153])).
fof(f153,plain,(
  ! [X0] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))))),
  inference(rectify,[],[f57])).
fof(f57,axiom,(
  ! [X8] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X8)))))))),
  file('thm.intExtension.INT_SGN_CLAUSES|split|2','thm.numeral.numeral_distrib|split|9')).
fof(f5673,plain,(
  ( ! [X15] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X15)))))))) ) | $spl18),
  inference(cnf_transformation,[],[f5673_D])).
fof(f5673_D,plain,(
  ( ! [X15] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X15)))))))) ) <=> ~$spl18),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl18])])).
fof(f2758,plain,(
  ( ! [X15] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X15)))))))) )),
  inference(superposition,[],[f498,f450])).
fof(f450,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))) )),
  inference(cnf_transformation,[],[f157])).
fof(f157,plain,(
  ! [X0] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))),
  inference(rectify,[],[f93])).
fof(f93,axiom,(
  ! [X8] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X8)))))))),
  file('thm.intExtension.INT_SGN_CLAUSES|split|2','thm.numeral.numeral_distrib|split|10')).
fof(f5660,plain,(
  $false | $spl7),
  inference(subsumption_resolution,[],[f5659,f419])).
fof(f5659,plain,(
  ~p(s(bool,'T_0')) | $spl7),
  inference(forward_demodulation,[],[f5658,f433])).
fof(f433,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f140])).
fof(f140,plain,(
  ! [X0] : s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))),
  inference(rectify,[],[f81])).
fof(f81,axiom,(
  ! [X8] : s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X8)))),
  file('thm.intExtension.INT_SGN_CLAUSES|split|2','thm.numeral.numeral_distrib|split|26')).
fof(f5658,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.ZERO_0')))) | $spl7),
  inference(backward_demodulation,[],[f5617,f2726])).
fof(f2726,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')))))) | $spl7),
  inference(unit_resulting_resolution,[],[f2076,f502])).
fof(f502,plain,(
  ( ! [X0] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X0)) )),
  inference(cnf_transformation,[],[f338])).
fof(f338,plain,(
  ! [X0] : ((~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X0)) & (s('type.num.num','const.num.|48|_0') != s('type.num.num',X0) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0))))))),
  inference(nnf_transformation,[],[f203])).
fof(f203,plain,(
  ! [X0] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) <=> s('type.num.num','const.num.|48|_0') = s('type.num.num',X0))),
  inference(rectify,[],[f73])).
fof(f73,axiom,(
  ! [X8] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X8)))) <=> s('type.num.num','const.num.|48|_0') = s('type.num.num',X8))),
  file('thm.intExtension.INT_SGN_CLAUSES|split|2','thm.numeral.numeral_distrib|split|30')).
fof(f5617,plain,(
  ( ! [X1] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.ZERO_0'))) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))) )),
  inference(superposition,[],[f552,f2108])).
fof(f2108,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')))),
  inference(forward_demodulation,[],[f2095,f544])).
fof(f2095,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.bool.COND_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X0)))))) )),
  inference(unit_resulting_resolution,[],[f544,f499])).
fof(f499,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X0) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f336])).
fof(f552,plain,(
  ( ! [X0,X1] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0))) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))) )),
  inference(cnf_transformation,[],[f232])).
fof(f232,plain,(
  ! [X0,X1] : s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0))) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))),
  inference(rectify,[],[f62])).
fof(f62,axiom,(
  ! [X8,X11] : s(bool,'const.arithmetic.<=_2'(s('type.num.num',X11),s('type.num.num',X8))) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X8))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X11)))))),
  file('thm.intExtension.INT_SGN_CLAUSES|split|2','thm.numeral.numeral_distrib|split|31')).
fof(f2083,plain,(
  ( ! [X6] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X6)))) ) | $spl16),
  inference(cnf_transformation,[],[f2083_D])).
fof(f2083_D,plain,(
  ( ! [X6] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X6)))) ) <=> ~$spl16),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl16])])).
fof(f2069,plain,(
  ( ! [X6] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X6)))) )),
  inference(superposition,[],[f498,f438])).
fof(f2082,plain,(
  ( ! [X5] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X5),s('type.num.num','const.num.|48|_0')))) ) | $spl14),
  inference(cnf_transformation,[],[f2082_D])).
fof(f2082_D,plain,(
  ( ! [X5] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X5),s('type.num.num','const.num.|48|_0')))) ) <=> ~$spl14),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl14])])).
fof(f2068,plain,(
  ( ! [X5] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X5),s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f498,f437])).
fof(f437,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) )),
  inference(cnf_transformation,[],[f144])).
fof(f144,plain,(
  ! [X0] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))),
  inference(rectify,[],[f86])).
fof(f86,axiom,(
  ! [X8] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X8),s('type.num.num','const.num.|48|_0')))),
  file('thm.intExtension.INT_SGN_CLAUSES|split|2','thm.numeral.numeral_distrib|split|4')).
fof(f2079,plain,(
  ( ! [X4] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X4),s('type.num.num','const.num.|48|_0')))) ) | $spl10),
  inference(cnf_transformation,[],[f2079_D])).
fof(f2079_D,plain,(
  ( ! [X4] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X4),s('type.num.num','const.num.|48|_0')))) ) <=> ~$spl10),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl10])])).
fof(f2081,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | $spl13),
  inference(cnf_transformation,[],[f2081_D])).
fof(f2081_D,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) <=> ~$spl13),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl13])])).
fof(f2067,plain,(
  ( ! [X4] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X4),s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f498,f714])).
fof(f714,plain,(
  ( ! [X0] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) )),
  inference(forward_demodulation,[],[f448,f424])).
fof(f448,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) )),
  inference(cnf_transformation,[],[f155])).
fof(f155,plain,(
  ! [X0] : s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))),
  inference(rectify,[],[f84])).
fof(f84,axiom,(
  ! [X8] : s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X8),s('type.num.num','const.num.|48|_0')))),
  file('thm.intExtension.INT_SGN_CLAUSES|split|2','thm.numeral.numeral_distrib|split|11')).
fof(f2078,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0'))) | $spl8),
  inference(cnf_transformation,[],[f2078_D])).
fof(f2078_D,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0'))) <=> ~$spl8),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl8])])).
fof(f2064,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))),
  inference(superposition,[],[f498,f422])).
fof(f422,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))),
  inference(cnf_transformation,[],[f90])).
fof(f90,axiom,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))),
  file('thm.intExtension.INT_SGN_CLAUSES|split|2','thm.prim_rec.PRE|split|0')).
fof(f2074,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) ) | $spl4),
  inference(cnf_transformation,[],[f2074_D])).
fof(f2074_D,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) ) <=> ~$spl4),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl4])])).
fof(f2062,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) )),
  inference(superposition,[],[f498,f435])).
fof(f435,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f142])).
fof(f142,plain,(
  ! [X0] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))),
  inference(rectify,[],[f48])).
fof(f48,axiom,(
  ! [X8] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X8)))),
  file('thm.intExtension.INT_SGN_CLAUSES|split|2','thm.numeral.numeral_distrib|split|6')).
fof(f709,plain,(
  s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',sK8))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl0),
  inference(cnf_transformation,[],[f709_D])).
fof(f709_D,plain,(
  s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',sK8))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f711,plain,(
  p(s(bool,'const.integer.int_gt_2'(s('type.integer.int',sK8),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | $spl2),
  inference(cnf_transformation,[],[f711_D])).
fof(f711_D,plain,(
  p(s(bool,'const.integer.int_gt_2'(s('type.integer.int',sK8),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f417,plain,(
  p(s(bool,'const.integer.int_gt_2'(s('type.integer.int',sK8),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',sK8))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),
  inference(cnf_transformation,[],[f325])).
fof(f325,plain,(
  (s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',sK8))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | p(s(bool,'const.integer.int_gt_2'(s('type.integer.int',sK8),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) & (s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',sK8))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | ~p(s(bool,'const.integer.int_gt_2'(s('type.integer.int',sK8),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK8])],[f324])).
fof(f324,plain,(
  ? [X0] : ((s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X0))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | p(s(bool,'const.integer.int_gt_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) & (s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X0))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | ~p(s(bool,'const.integer.int_gt_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))))))),
  inference(nnf_transformation,[],[f283])).
fof(f283,plain,(
  ? [X0] : (s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X0))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <~> p(s(bool,'const.integer.int_gt_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))))),
  inference(ennf_transformation,[],[f135])).
fof(f135,plain,(
  ~! [X0] : (s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X0))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> p(s(bool,'const.integer.int_gt_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : (s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X6))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> p(s(bool,'const.integer.int_gt_2'(s('type.integer.int',X6),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : (s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X6))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> p(s(bool,'const.integer.int_gt_2'(s('type.integer.int',X6),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))))),
  file('thm.intExtension.INT_SGN_CLAUSES|split|2','thm.intExtension.INT_SGN_CLAUSES|split|2')).
fof(f710,plain,(
  s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',sK8))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl1),
  inference(cnf_transformation,[],[f710_D])).
fof(f710_D,plain,(
  s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',sK8))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> ~$spl1),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1])])).
fof(f712,plain,(
  ~p(s(bool,'const.integer.int_gt_2'(s('type.integer.int',sK8),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | $spl3),
  inference(cnf_transformation,[],[f712_D])).
fof(f712_D,plain,(
  ~p(s(bool,'const.integer.int_gt_2'(s('type.integer.int',sK8),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) <=> ~$spl3),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl3])])).
fof(f418,plain,(
  ~p(s(bool,'const.integer.int_gt_2'(s('type.integer.int',sK8),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',sK8))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),
  inference(cnf_transformation,[],[f325])).
% SZS output end Proof for thm.intExtension
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 710
% Passive clauses: 3693
% Generated clauses: 17599
% Final active clauses: 269
% Final passive clauses: 1211
% Input formulas: 133
% Initial clauses: 271
% 
% Duplicate literals: 6
% Trivial inequalities: 70
% Fw subsumption resolutions: 290
% Fw demodulations: 3385
% Bw demodulations: 1222
% Condensations: 17
% Global subsumptions: 1
% 
% Simple tautologies: 61
% Equational tautologies: 44
% Forward subsumptions: 9677
% Fw demodulations to eq. taut.: 331
% 
% Unit resulting resolution: 4793
% Factoring: 2
% Forward superposition: 4174
% Backward superposition: 3123
% Self superposition: 50
% Equality factoring: 4
% Equality resolution: 22
% 
% Split clauses: 16
% Split components: 33
% SAT solver clauses: 3736
% SAT solver unit clauses: 628
% SAT solver binary clauses: 1273
% 
% Sat splits: 16
% Sat splitting refutations: 8
% 
% Memory used [KB]: 12792
% Time elapsed: 0.649 s
% ------------------------------
% ------------------------------
% Success in time 1.953 s
