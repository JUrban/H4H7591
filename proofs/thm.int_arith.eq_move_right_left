Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 299 next slice time: 5
dis+11_7_3 on thm.int_arith
% (46856)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 755
% Passive clauses: 8572
% Generated clauses: 23170
% Final active clauses: 700
% Final passive clauses: 7110
% Input formulas: 52
% Initial clauses: 207
% 
% Duplicate literals: 920
% Trivial inequalities: 248
% Fw subsumption resolutions: 2193
% Fw demodulations: 476
% Bw demodulations: 50
% 
% Simple tautologies: 322
% Equational tautologies: 76
% Forward subsumptions: 8005
% 
% Binary resolution: 10101
% Factoring: 1384
% Forward superposition: 3234
% Backward superposition: 3932
% Self superposition: 55
% Equality factoring: 52
% Equality resolution: 54
% 
% Split clauses: 664
% Split components: 1335
% SAT solver clauses: 1140
% SAT solver unit clauses: 27
% SAT solver binary clauses: 239
% 
% Sat splits: 664
% Sat splitting refutations: 2
% 
% TWLsolver clauses: 1138
% TWLsolver calls for satisfiability: 410
% 
% Memory used [KB]: 9466
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 293 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.int_arith
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.int_arith
% SZS output start Proof for thm.int_arith
fof(f10262,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f10261,f268,f489,f487,f2228,f2232,f2212,f2222,f267,f488,f486,f2244,f349,f518,f393,f534,f7508,f6309,f2288,f2298,f392,f535])).
fof(f535,plain,(
  ( ! [X2,X0,X1] : (s('type.integer.int',X0) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X1),s('type.integer.int',X2))) | s('type.integer.int',X2) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X1)))))) ) | $spl46),
  inference(cnf_transformation,[],[f535_D])).
fof(f535_D,plain,(
  ( ! [X2,X0,X1] : (s('type.integer.int',X0) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X1),s('type.integer.int',X2))) | s('type.integer.int',X2) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X1)))))) ) <=> ~$spl46),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl46])])).
fof(f392,plain,(
  ( ! [X2,X0,X1] : (s('type.integer.int',X2) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X1))))) | s('type.integer.int',X0) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X1),s('type.integer.int',X2)))) )),
  inference(cnf_transformation,[],[f229])).
fof(f229,plain,(
  ! [X0,X1,X2] : ((s('type.integer.int',X0) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X1),s('type.integer.int',X2))) | s('type.integer.int',X2) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X1)))))) & (s('type.integer.int',X2) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X1))))) | s('type.integer.int',X0) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X1),s('type.integer.int',X2)))))),
  inference(nnf_transformation,[],[f115])).
fof(f115,plain,(
  ! [X0,X1,X2] : (s('type.integer.int',X0) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X1),s('type.integer.int',X2))) <=> s('type.integer.int',X2) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X1))))))),
  inference(rectify,[],[f42])).
fof(f42,axiom,(
  ! [X6,X7,X8] : (s('type.integer.int',X6) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X7),s('type.integer.int',X8))) <=> s('type.integer.int',X8) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X6),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X7))))))),
  file('thm.int_arith.eq_move_right_left','thm.int_arith.eq_move_left_left')).
fof(f2298,plain,(
  ( ! [X2,X0,X1] : (s('type.integer.int',X2) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X1),s('type.integer.int',X0))) | s('type.integer.int',X1) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X2),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X0)))))) ) | $spl852),
  inference(cnf_transformation,[],[f2298_D])).
fof(f2298_D,plain,(
  ( ! [X2,X0,X1] : (s('type.integer.int',X2) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X1),s('type.integer.int',X0))) | s('type.integer.int',X1) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X2),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X0)))))) ) <=> ~$spl852),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl852])])).
fof(f2288,plain,(
  ( ! [X2,X0,X1] : (s('type.integer.int',X2) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X1),s('type.integer.int',X0))) | s('type.integer.int',X1) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X2),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X0)))))) ) | ($spl22 | $spl46)),
  inference(superposition,[],[f535,f518])).
fof(f6309,plain,(
  ( ! [X17] : (s('type.integer.int',sK12) != s('type.integer.int',X17) | s('type.integer.int',sK13) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X17),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK14)))))) ) | $spl1976),
  inference(cnf_transformation,[],[f6309_D])).
fof(f6309_D,plain,(
  ( ! [X17] : (s('type.integer.int',sK12) != s('type.integer.int',X17) | s('type.integer.int',sK13) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X17),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK14)))))) ) <=> ~$spl1976),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1976])])).
fof(f7508,plain,(
  ( ! [X23] : (s('type.integer.int',sK12) != s('type.integer.int',X23) | s('type.integer.int',sK13) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X23),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK14)))))) ) | ($spl0 | $spl852)),
  inference(superposition,[],[f2298,f486])).
fof(f534,plain,(
  ( ! [X2,X0,X1] : (s('type.integer.int',X2) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X1))))) | s('type.integer.int',X0) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X1),s('type.integer.int',X2)))) ) | $spl44),
  inference(cnf_transformation,[],[f534_D])).
fof(f534_D,plain,(
  ( ! [X2,X0,X1] : (s('type.integer.int',X2) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X1))))) | s('type.integer.int',X0) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X1),s('type.integer.int',X2)))) ) <=> ~$spl44),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl44])])).
fof(f393,plain,(
  ( ! [X2,X0,X1] : (s('type.integer.int',X0) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X1),s('type.integer.int',X2))) | s('type.integer.int',X2) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X1)))))) )),
  inference(cnf_transformation,[],[f229])).
fof(f518,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int',X1))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X1),s('type.integer.int',X0)))) ) | $spl22),
  inference(cnf_transformation,[],[f518_D])).
fof(f518_D,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int',X1))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X1),s('type.integer.int',X0)))) ) <=> ~$spl22),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl22])])).
fof(f349,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int',X1))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X1),s('type.integer.int',X0)))) )),
  inference(cnf_transformation,[],[f100])).
fof(f100,plain,(
  ! [X0,X1] : s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int',X1))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X1),s('type.integer.int',X0)))),
  inference(rectify,[],[f43])).
fof(f43,axiom,(
  ! [X7,X6] : s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X6),s('type.integer.int',X7))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X7),s('type.integer.int',X6)))),
  file('thm.int_arith.eq_move_right_left','thm.integer.INT_ADD_SYM')).
fof(f2244,plain,(
  $false | ($spl1 | $spl22 | $spl834)),
  inference(subsumption_resolution,[],[f2233,f487])).
fof(f2233,plain,(
  s('type.integer.int',sK12) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))) | ($spl22 | $spl834)),
  inference(superposition,[],[f2232,f518])).
fof(f486,plain,(
  s('type.integer.int',sK12) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))) | $spl0),
  inference(cnf_transformation,[],[f486_D])).
fof(f486_D,plain,(
  s('type.integer.int',sK12) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f488,plain,(
  s('type.integer.int',sK13) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK12),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK14))))) | $spl2),
  inference(cnf_transformation,[],[f488_D])).
fof(f488_D,plain,(
  s('type.integer.int',sK13) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK12),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK14))))) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f267,plain,(
  s('type.integer.int',sK13) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK12),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK14))))) | s('type.integer.int',sK12) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK13),s('type.integer.int',sK14)))),
  inference(cnf_transformation,[],[f169])).
fof(f169,plain,(
  (s('type.integer.int',sK12) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))) | s('type.integer.int',sK13) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK12),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK14)))))) & (s('type.integer.int',sK12) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))) | s('type.integer.int',sK13) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK12),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK14))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK12,sK13,sK14])],[f168])).
fof(f168,plain,(
  ? [X0,X1,X2] : ((s('type.integer.int',X0) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X1),s('type.integer.int',X2))) | s('type.integer.int',X1) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X2)))))) & (s('type.integer.int',X0) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X1),s('type.integer.int',X2))) | s('type.integer.int',X1) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X2)))))))),
  inference(nnf_transformation,[],[f125])).
fof(f125,plain,(
  ? [X0,X1,X2] : (s('type.integer.int',X0) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X1),s('type.integer.int',X2))) <~> s('type.integer.int',X1) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X2))))))),
  inference(ennf_transformation,[],[f54])).
fof(f54,plain,(
  ~! [X0,X1,X2] : (s('type.integer.int',X0) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X1),s('type.integer.int',X2))) <=> s('type.integer.int',X1) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X2))))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7,X8] : (s('type.integer.int',X6) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X7),s('type.integer.int',X8))) <=> s('type.integer.int',X7) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X6),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X8))))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7,X8] : (s('type.integer.int',X6) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X7),s('type.integer.int',X8))) <=> s('type.integer.int',X7) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X6),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X8))))))),
  file('thm.int_arith.eq_move_right_left','thm.int_arith.eq_move_right_left')).
fof(f2222,plain,(
  ( ! [X0] : (s('type.integer.int',sK13) != s('type.integer.int',X0) | s('type.integer.int',sK12) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK14),s('type.integer.int',X0)))) ) | $spl826),
  inference(cnf_transformation,[],[f2222_D])).
fof(f2222_D,plain,(
  ( ! [X0] : (s('type.integer.int',sK13) != s('type.integer.int',X0) | s('type.integer.int',sK12) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK14),s('type.integer.int',X0)))) ) <=> ~$spl826),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl826])])).
fof(f2212,plain,(
  ( ! [X0] : (s('type.integer.int',sK13) != s('type.integer.int',X0) | s('type.integer.int',sK12) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK14),s('type.integer.int',X0)))) ) | ($spl2 | $spl44)),
  inference(superposition,[],[f534,f488])).
fof(f2232,plain,(
  s('type.integer.int',sK12) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK14),s('type.integer.int',sK13))) | $spl834),
  inference(cnf_transformation,[],[f2232_D])).
fof(f2232_D,plain,(
  s('type.integer.int',sK12) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK14),s('type.integer.int',sK13))) <=> ~$spl834),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl834])])).
fof(f2228,plain,(
  s('type.integer.int',sK12) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK14),s('type.integer.int',sK13))) | $spl826),
  inference(equality_resolution,[],[f2222])).
fof(f487,plain,(
  s('type.integer.int',sK12) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))) | $spl1),
  inference(cnf_transformation,[],[f487_D])).
fof(f487_D,plain,(
  s('type.integer.int',sK12) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))) <=> ~$spl1),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1])])).
fof(f489,plain,(
  s('type.integer.int',sK13) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK12),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK14))))) | $spl3),
  inference(cnf_transformation,[],[f489_D])).
fof(f489_D,plain,(
  s('type.integer.int',sK13) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK12),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK14))))) <=> ~$spl3),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl3])])).
fof(f268,plain,(
  s('type.integer.int',sK13) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK12),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK14))))) | s('type.integer.int',sK12) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK13),s('type.integer.int',sK14)))),
  inference(cnf_transformation,[],[f169])).
fof(f10261,plain,(
  $false | ($spl3 | $spl1976)),
  inference(subsumption_resolution,[],[f10227,f489])).
fof(f10227,plain,(
  s('type.integer.int',sK13) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK12),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK14))))) | $spl1976),
  inference(equality_resolution,[],[f6309])).
% SZS output end Proof for thm.int_arith
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 360
% Passive clauses: 1539
% Generated clauses: 10203
% Final active clauses: 274
% Final passive clauses: 1012
% Input formulas: 52
% Initial clauses: 207
% 
% Duplicate literals: 137
% Trivial inequalities: 199
% Fw subsumption resolutions: 360
% Fw demodulations: 1930
% Bw demodulations: 195
% Condensations: 124
% Global subsumptions: 22
% 
% Simple tautologies: 228
% Equational tautologies: 18
% Forward subsumptions: 3649
% Fw demodulations to eq. taut.: 2
% 
% Binary resolution: 1559
% Factoring: 64
% Forward superposition: 1761
% Backward superposition: 1770
% Self superposition: 40
% Equality factoring: 26
% Equality resolution: 53
% 
% Split clauses: 21
% Split components: 47
% SAT solver clauses: 2124
% SAT solver unit clauses: 210
% SAT solver binary clauses: 115
% SAT solver learnt clauses: 47
% SAT solver learnt literals: 13
% 
% Sat splits: 21
% Sat splitting refutations: 87
% 
% TWLsolver clauses: 2033
% TWLsolver calls for satisfiability: 1748
% 
% Memory used [KB]: 9210
% Time elapsed: 0.393 s
% ------------------------------
% ------------------------------
% Success in time 0.994 s
