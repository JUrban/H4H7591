Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 300 next slice time: 5
dis+11_7_3 on thm.numeral
% (100194)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 186
% Passive clauses: 2908
% Generated clauses: 24428
% Final active clauses: 125
% Final passive clauses: 2210
% Input formulas: 28
% Initial clauses: 44
% 
% Duplicate literals: 43
% Trivial inequalities: 24
% Fw subsumption resolutions: 17
% Fw demodulations: 7478
% Bw demodulations: 41
% 
% Simple tautologies: 57
% Equational tautologies: 18
% Forward subsumptions: 13865
% Fw demodulations to eq. taut.: 212
% 
% Binary resolution: 11
% Forward superposition: 8794
% Backward superposition: 7717
% Self superposition: 182
% Equality factoring: 26
% Equality resolution: 16
% 
% Split clauses: 7
% Split components: 14
% SAT solver clauses: 14
% SAT solver unit clauses: 4
% SAT solver binary clauses: 7
% 
% Sat splits: 7
% Sat splitting refutations: 1
% 
% TWLsolver clauses: 14
% TWLsolver calls for satisfiability: 10
% 
% Memory used [KB]: 20212
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 294 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.numeral
% (100225)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 143
% Passive clauses: 1932
% Generated clauses: 19898
% Final active clauses: 62
% Final passive clauses: 845
% Input formulas: 28
% Initial clauses: 44
% 
% Duplicate literals: 46
% Trivial inequalities: 27
% Fw subsumption resolutions: 85
% Fw demodulations: 5261
% Bw demodulations: 908
% Condensations: 41
% Global subsumptions: 4
% 
% Simple tautologies: 71
% Equational tautologies: 19
% Forward subsumptions: 6207
% Fw demodulations to eq. taut.: 138
% Bw demodulations to eq. taut.: 7
% 
% Binary resolution: 12
% Forward superposition: 2963
% Backward superposition: 3000
% Self superposition: 124
% Equality factoring: 26
% Equality resolution: 15
% 
% Split clauses: 10
% Split components: 20
% SAT solver clauses: 2488
% SAT solver unit clauses: 61
% SAT solver binary clauses: 46
% SAT solver learnt clauses: 20
% SAT solver learnt literals: 28
% 
% Sat splits: 10
% Sat splitting refutations: 75
% 
% TWLsolver clauses: 2460
% TWLsolver calls for satisfiability: 263
% 
% Memory used [KB]: 14583
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 286 next slice time: 103
lrs+11_2_br=off:cond=on:fde=none:gs=on:gsaa=full_model:lwlo=on:nwc=2:sas=minisat:stl=30:ssfp=100000:ssfq=1.4:smm=sco:ssnc=none:sp=occurrence:urr=on_98 on thm.numeral
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.numeral
% SZS output start Proof for thm.numeral
fof(f5398,plain,(
  $false),
  inference(trivial_inequality_removal,[],[f5397])).
fof(f5397,plain,(
  s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK0))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num',sK1))))))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK0))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num',sK1)))))))),
  inference(forward_demodulation,[],[f5396,f509])).
fof(f509,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))) )),
  inference(backward_demodulation,[],[f508,f408])).
fof(f408,plain,(
  ( ! [X0] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num',X0)))))) )),
  inference(forward_demodulation,[],[f393,f86])).
fof(f86,plain,(
  ( ! [X0] : (s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num',X0))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))))) )),
  inference(cnf_transformation,[],[f35])).
fof(f35,plain,(
  ! [X0] : s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num',X0))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))))),
  inference(rectify,[],[f28])).
fof(f28,axiom,(
  ! [X6] : s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num',X6))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X6)))))),
  file('thm.numeral.numeral_add|split|5','thm.numeral.iiSUC')).
fof(f393,plain,(
  ( ! [X0] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))))))) )),
  inference(superposition,[],[f116,f368])).
fof(f368,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))))) )),
  inference(backward_demodulation,[],[f346,f126])).
fof(f126,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) )),
  inference(forward_demodulation,[],[f87,f81])).
fof(f81,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.num.|48|_0')),
  inference(cnf_transformation,[],[f7])).
fof(f7,axiom,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.num.|48|_0')),
  file('thm.numeral.numeral_add|split|5','thm.arithmetic.ALT_ZERO')).
fof(f87,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))) )),
  inference(cnf_transformation,[],[f36])).
fof(f36,plain,(
  ! [X0] : s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))),
  inference(rectify,[],[f8])).
fof(f8,axiom,(
  ! [X6] : s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X6))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))),
  file('thm.numeral.numeral_add|split|5','thm.arithmetic.BIT|49|')).
fof(f346,plain,(
  ( ! [X0] : (s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(superposition,[],[f116,f124])).
fof(f124,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(forward_demodulation,[],[f84,f81])).
fof(f84,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) )),
  inference(cnf_transformation,[],[f33])).
fof(f33,plain,(
  ! [X0] : s('type.num.num',X0) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))),
  inference(rectify,[],[f11])).
fof(f11,axiom,(
  ! [X7] : s('type.num.num',X7) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X7),s('type.num.num','const.num.|48|_0')))),
  file('thm.numeral.numeral_add|split|5','thm.arithmetic.ADD_|48|')).
fof(f116,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X0)))))) )),
  inference(cnf_transformation,[],[f52])).
fof(f52,plain,(
  ! [X0,X1] : s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X0)))))),
  inference(rectify,[],[f13])).
fof(f13,axiom,(
  ! [X6,X7] : s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X7),s('type.num.num','const.num.SUC_1'(s('type.num.num',X6))))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X7),s('type.num.num',X6)))))),
  file('thm.numeral.numeral_add|split|5','thm.arithmetic.ADD_CLAUSES|split|3')).
fof(f508,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num',X0)))))) )),
  inference(backward_demodulation,[],[f506,f128])).
fof(f128,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) )),
  inference(forward_demodulation,[],[f127,f81])).
fof(f127,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num','const.num.|48|_0')))))))) )),
  inference(forward_demodulation,[],[f88,f86])).
fof(f88,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))))) )),
  inference(cnf_transformation,[],[f37])).
fof(f37,plain,(
  ! [X0] : s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))))),
  inference(rectify,[],[f9])).
fof(f9,axiom,(
  ! [X6] : s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X6))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))))),
  file('thm.numeral.numeral_add|split|5','thm.arithmetic.BIT2')).
fof(f506,plain,(
  ( ! [X0] : (s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(forward_demodulation,[],[f505,f86])).
fof(f505,plain,(
  ( ! [X0] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(forward_demodulation,[],[f487,f86])).
fof(f487,plain,(
  ( ! [X0] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) )),
  inference(superposition,[],[f116,f346])).
fof(f5396,plain,(
  s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK0))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num',sK1))))))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK0))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num',sK1)))))))))),
  inference(forward_demodulation,[],[f5395,f1817])).
fof(f1817,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num',X0))))) = s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))))))) )),
  inference(forward_demodulation,[],[f1764,f509])).
fof(f1764,plain,(
  ( ! [X0] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num',X0))))))) = s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))))))) )),
  inference(superposition,[],[f86,f777])).
fof(f777,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num',X0))))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))))))) )),
  inference(superposition,[],[f696,f86])).
fof(f696,plain,(
  ( ! [X6] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X6))))) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X6)))))) )),
  inference(forward_demodulation,[],[f695,f533])).
fof(f533,plain,(
  ( ! [X0] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num',X0)))))))) )),
  inference(superposition,[],[f116,f508])).
fof(f695,plain,(
  ( ! [X6] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X6))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num',X6)))))))) )),
  inference(forward_demodulation,[],[f694,f178])).
fof(f178,plain,(
  ( ! [X0] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num',X0))))) = s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))))) )),
  inference(superposition,[],[f86,f86])).
fof(f694,plain,(
  ( ! [X6] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X6))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X6)))))))) )),
  inference(forward_demodulation,[],[f660,f86])).
fof(f660,plain,(
  ( ! [X6] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X6))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X6)))))))))) )),
  inference(superposition,[],[f130,f368])).
fof(f130,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))),s('type.num.num',X0)))) )),
  inference(forward_demodulation,[],[f117,f116])).
fof(f117,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))),s('type.num.num',X0))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X0)))))) )),
  inference(cnf_transformation,[],[f53])).
fof(f53,plain,(
  ! [X0,X1] : s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))),s('type.num.num',X0))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X0)))))),
  inference(rectify,[],[f12])).
fof(f12,axiom,(
  ! [X6,X7] : s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X7))),s('type.num.num',X6))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X7),s('type.num.num',X6)))))),
  file('thm.numeral.numeral_add|split|5','thm.arithmetic.ADD_CLAUSES|split|2')).
fof(f5395,plain,(
  s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK0))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num',sK1))))))))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK0))),s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',sK1)))))))))),
  inference(forward_demodulation,[],[f5394,f116])).
fof(f5394,plain,(
  s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK0))),s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',sK1))))))))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK0))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num',sK1)))))))))),
  inference(forward_demodulation,[],[f5393,f1070])).
fof(f1070,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num',X1))))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.num.SUC_1'(s('type.num.num',X1)))))))) )),
  inference(backward_demodulation,[],[f1067,f366])).
fof(f366,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.num.SUC_1'(s('type.num.num',X1)))))))) )),
  inference(forward_demodulation,[],[f327,f86])).
fof(f327,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))))))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1)))))))) )),
  inference(unit_resulting_resolution,[],[f116,f119])).
fof(f119,plain,(
  ( ! [X0,X1] : (s('type.num.num',X0) != s('type.num.num',X1) | s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',X1)))) )),
  inference(cnf_transformation,[],[f76])).
fof(f76,plain,(
  ! [X0,X1] : ((s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))) != s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))) | s('type.num.num',X0) = s('type.num.num',X1)) & (s('type.num.num',X0) != s('type.num.num',X1) | s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',X1)))))),
  inference(nnf_transformation,[],[f54])).
fof(f54,plain,(
  ! [X0,X1] : (s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))) <=> s('type.num.num',X0) = s('type.num.num',X1))),
  inference(rectify,[],[f29])).
fof(f29,axiom,(
  ! [X7,X6] : (s('type.num.num','const.num.SUC_1'(s('type.num.num',X6))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',X7))) <=> s('type.num.num',X6) = s('type.num.num',X7))),
  file('thm.numeral.numeral_add|split|5','thm.prim_rec.INV_SUC_EQ')).
fof(f1067,plain,(
  ( ! [X4,X3] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X3),s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num',X4))))) = s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X3),s('type.num.num',X4)))))) )),
  inference(forward_demodulation,[],[f1031,f550])).
fof(f550,plain,(
  ( ! [X0] : (s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(backward_demodulation,[],[f532,f506])).
fof(f532,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))),
  inference(superposition,[],[f508,f125])).
fof(f125,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X0)))) )),
  inference(forward_demodulation,[],[f85,f81])).
fof(f85,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f34])).
fof(f34,plain,(
  ! [X0] : s('type.num.num',X0) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))),
  inference(rectify,[],[f10])).
fof(f10,axiom,(
  ! [X7] : s('type.num.num',X7) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X7)))),
  file('thm.numeral.numeral_add|split|5','thm.arithmetic.ADD_CLAUSES|split|0')).
fof(f1031,plain,(
  ( ! [X4,X3] : (s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X3),s('type.num.num',X4))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X3),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X4),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) )),
  inference(superposition,[],[f550,f121])).
fof(f121,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X2))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num',X2)))) )),
  inference(cnf_transformation,[],[f57])).
fof(f57,plain,(
  ! [X0,X1,X2] : s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X2))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num',X2)))),
  inference(rectify,[],[f15])).
fof(f15,axiom,(
  ! [X7,X6,X8] : s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X7),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num',X8))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X7),s('type.num.num',X6))),s('type.num.num',X8)))),
  file('thm.numeral.numeral_add|split|5','thm.arithmetic.ADD_ASSOC')).
fof(f5393,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK0))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num',sK1))))))))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK0))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',sK1)))))))))))),
  inference(forward_demodulation,[],[f5390,f116])).
fof(f5390,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK0))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num',sK1))))))))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK0))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',sK1)))))))))))),
  inference(unit_resulting_resolution,[],[f4916,f118])).
fof(f118,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))) != s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))) | s('type.num.num',X0) = s('type.num.num',X1)) )),
  inference(cnf_transformation,[],[f76])).
fof(f4916,plain,(
  s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK0))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num',sK1))))))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK0))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',sK1)))))))))),
  inference(forward_demodulation,[],[f4914,f115])).
fof(f115,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f51])).
fof(f51,plain,(
  ! [X0,X1] : s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X0)))),
  inference(rectify,[],[f14])).
fof(f14,axiom,(
  ! [X7,X6] : s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num',X7))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X7),s('type.num.num',X6)))),
  file('thm.numeral.numeral_add|split|5','thm.arithmetic.ADD_SYM')).
fof(f4914,plain,(
  s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num',sK1))))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK0))))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK0))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',sK1)))))))))),
  inference(backward_demodulation,[],[f4907,f3932])).
fof(f3932,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK0),s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num',sK1))))))))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK0))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',sK1)))))))))),
  inference(backward_demodulation,[],[f3800,f1955])).
fof(f1955,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK0),s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num',sK1))))))))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK0))),s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK1)))))))))),
  inference(unit_resulting_resolution,[],[f1829,f118])).
fof(f1829,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK0),s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num',sK1))))))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK0))),s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK1)))))))),
  inference(forward_demodulation,[],[f1828,f509])).
fof(f1828,plain,(
  s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK0))),s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK1))))))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK0),s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num',sK1)))))))))),
  inference(forward_demodulation,[],[f1827,f1070])).
fof(f1827,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK0),s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num',sK1))))))))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK0))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK1)))))))))),
  inference(unit_resulting_resolution,[],[f1810,f118])).
fof(f1810,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK0),s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num',sK1))))))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK0))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK1)))))))),
  inference(forward_demodulation,[],[f1809,f1713])).
fof(f1713,plain,(
  ( ! [X14,X13] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X13),s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num',X14))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X14),s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num',X13)))))) )),
  inference(forward_demodulation,[],[f1712,f86])).
fof(f1712,plain,(
  ( ! [X14,X13] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X13),s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num',X14))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X14),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X13)))))))) )),
  inference(forward_demodulation,[],[f1664,f1070])).
fof(f1664,plain,(
  ( ! [X14,X13] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X14),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X13))))))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X13),s('type.num.num','const.num.SUC_1'(s('type.num.num',X14)))))))) )),
  inference(superposition,[],[f300,f130])).
fof(f300,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1)))))) )),
  inference(forward_demodulation,[],[f279,f116])).
fof(f279,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X0)))))) )),
  inference(unit_resulting_resolution,[],[f115,f119])).
fof(f1809,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num',sK0))))))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK0))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK1)))))))),
  inference(backward_demodulation,[],[f1808,f255])).
fof(f255,plain,(
  s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK0))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK1))))))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK0),s('type.num.num','const.num.SUC_1'(s('type.num.num',sK1)))))))))),
  inference(forward_demodulation,[],[f235,f116])).
fof(f235,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK0),s('type.num.num','const.num.SUC_1'(s('type.num.num',sK1))))))))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK0))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK1)))))))),
  inference(unit_resulting_resolution,[],[f182,f118])).
fof(f182,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK0),s('type.num.num','const.num.SUC_1'(s('type.num.num',sK1))))))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK0))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK1)))))),
  inference(superposition,[],[f129,f83])).
fof(f83,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f32])).
fof(f32,plain,(
  ! [X0] : s('type.num.num',X0) = s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X0)))),
  inference(rectify,[],[f27])).
fof(f27,axiom,(
  ! [X11] : s('type.num.num',X11) = s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X11)))),
  file('thm.numeral.numeral_add|split|5','thm.numeral.iZ')).
fof(f129,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK0),s('type.num.num','const.num.SUC_1'(s('type.num.num',sK1))))))) != s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK0))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK1)))))))),
  inference(backward_demodulation,[],[f116,f78])).
fof(f78,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK0),s('type.num.num',sK1))))))) != s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK0))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK1)))))))),
  inference(cnf_transformation,[],[f60])).
fof(f60,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK0),s('type.num.num',sK1))))))) != s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK0))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK1)))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1])],[f58])).
fof(f58,plain,(
  ? [X0,X1] : s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))))))) != s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1)))))))),
  inference(ennf_transformation,[],[f30])).
fof(f30,plain,(
  ~! [X0,X1] : s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))))))) = s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1)))))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7] : s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num',X7))))))) = s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X6))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X7)))))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7] : s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num',X7))))))) = s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X6))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X7)))))))),
  file('thm.numeral.numeral_add|split|5','thm.numeral.numeral_add|split|5')).
fof(f1808,plain,(
  ( ! [X2,X1] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num',X2))))))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num','const.num.SUC_1'(s('type.num.num',X1)))))))))) )),
  inference(forward_demodulation,[],[f1759,f1067])).
fof(f1759,plain,(
  ( ! [X2,X1] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X2))))))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num','const.num.SUC_1'(s('type.num.num',X1)))))))))) )),
  inference(superposition,[],[f777,f300])).
fof(f3800,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))))) = s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1)))))) )),
  inference(superposition,[],[f801,f86])).
fof(f801,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))) )),
  inference(forward_demodulation,[],[f758,f509])).
fof(f758,plain,(
  ( ! [X0] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))))))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))))))) )),
  inference(unit_resulting_resolution,[],[f696,f119])).
fof(f4907,plain,(
  ( ! [X24,X25] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X25))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X24))))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X24),s('type.num.num',X25)))))))) )),
  inference(backward_demodulation,[],[f4811,f4259])).
fof(f4259,plain,(
  ( ! [X24,X25] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X24),s('type.num.num',X25))))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X25),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X24))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X25)))))))) )),
  inference(forward_demodulation,[],[f4258,f3209])).
fof(f3209,plain,(
  ( ! [X14,X15] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X14))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X15))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X14))),s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num',X15)))))) )),
  inference(superposition,[],[f1078,f509])).
fof(f1078,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num',X1))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X1)))))) )),
  inference(backward_demodulation,[],[f1076,f639])).
fof(f639,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num',X0))),s('type.num.num',X1))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X1)))))) )),
  inference(superposition,[],[f130,f86])).
fof(f1076,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num',X1))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num',X0))),s('type.num.num',X1)))) )),
  inference(forward_demodulation,[],[f1035,f748])).
fof(f748,plain,(
  ( ! [X0] : (s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X0)))) )),
  inference(forward_demodulation,[],[f747,f86])).
fof(f747,plain,(
  ( ! [X0] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X0)))) )),
  inference(forward_demodulation,[],[f720,f484])).
fof(f484,plain,(
  ( ! [X1] : (s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X1)))) )),
  inference(superposition,[],[f346,f115])).
fof(f720,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X0))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))))) )),
  inference(superposition,[],[f130,f596])).
fof(f596,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  inference(superposition,[],[f509,f392])).
fof(f392,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),
  inference(superposition,[],[f368,f125])).
fof(f1035,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num',X0))),s('type.num.num',X1))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X1)))))) )),
  inference(superposition,[],[f121,f550])).
fof(f4258,plain,(
  ( ! [X24,X25] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X24),s('type.num.num',X25))))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X25),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X24))),s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num',X25)))))))) )),
  inference(forward_demodulation,[],[f4257,f914])).
fof(f914,plain,(
  ( ! [X6,X7] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X6))),s('type.num.num',X7))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num','const.num.SUC_1'(s('type.num.num',X7)))))))) )),
  inference(forward_demodulation,[],[f849,f130])).
fof(f849,plain,(
  ( ! [X6,X7] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X6))),s('type.num.num',X7))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X6))),s('type.num.num',X7)))))) )),
  inference(superposition,[],[f121,f368])).
fof(f4257,plain,(
  ( ! [X24,X25] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X24),s('type.num.num',X25))))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X25),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X24),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X24),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num',X25)))))))))))) )),
  inference(forward_demodulation,[],[f4256,f116])).
fof(f4256,plain,(
  ( ! [X24,X25] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X24),s('type.num.num',X25))))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X25),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X24),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X24),s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num',X25)))))))))))) )),
  inference(forward_demodulation,[],[f4154,f1067])).
fof(f4154,plain,(
  ( ! [X24,X25] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X24),s('type.num.num',X25))))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X25),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X24),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X24),s('type.num.num',X25)))))))))))) )),
  inference(superposition,[],[f847,f533])).
fof(f847,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X2))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X0))),s('type.num.num',X2)))) )),
  inference(superposition,[],[f121,f115])).
fof(f4811,plain,(
  ( ! [X2,X1] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1))),s('type.num.num',X2))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num','const.num.SUC_1'(s('type.num.num',X1)))))))) )),
  inference(superposition,[],[f914,f658])).
fof(f658,plain,(
  ( ! [X2,X3] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num','const.num.SUC_1'(s('type.num.num',X3))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X3),s('type.num.num','const.num.SUC_1'(s('type.num.num',X2)))))) )),
  inference(superposition,[],[f130,f115])).
% SZS output end Proof for thm.numeral
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 87
% Passive clauses: 545
% Generated clauses: 5308
% Final active clauses: 66
% Final passive clauses: 393
% Input formulas: 28
% Initial clauses: 44
% 
% Duplicate literals: 40
% Trivial inequalities: 8
% Fw subsumption resolutions: 8
% Fw demodulations: 1523
% Bw demodulations: 85
% Condensations: 32
% 
% Simple tautologies: 32
% Equational tautologies: 26
% Forward subsumptions: 2965
% Fw demodulations to eq. taut.: 124
% Bw demodulations to eq. taut.: 1
% 
% Unit resulting resolution: 173
% Forward superposition: 1813
% Backward superposition: 1462
% Self superposition: 89
% Equality factoring: 26
% Equality resolution: 5
% 
% SAT solver clauses: 547
% SAT solver unit clauses: 307
% SAT solver binary clauses: 227
% 
% Memory used [KB]: 6396
% Time elapsed: 0.231 s
% ------------------------------
% ------------------------------
% Success in time 1.538 s
