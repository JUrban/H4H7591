Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 300 next slice time: 5
dis+11_7_3 on thm.transc
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.transc
% SZS output start Proof for thm.transc
fof(f592,plain,(
  $false),
  inference(trivial_inequality_removal,[],[f563])).
fof(f563,plain,(
  s('type.realax.real','const.transc.exp_1'(s('type.realax.real','const.realax.real_add_2'(s('type.realax.real',sK0),s('type.realax.real',sK1))))) != s('type.realax.real','const.transc.exp_1'(s('type.realax.real','const.realax.real_add_2'(s('type.realax.real',sK0),s('type.realax.real',sK1)))))),
  inference(superposition,[],[f29,f390])).
fof(f390,plain,(
  ( ! [X6,X5] : (s('type.realax.real','const.transc.exp_1'(s('type.realax.real','const.realax.real_add_2'(s('type.realax.real',X5),s('type.realax.real',X6))))) = s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real','const.transc.exp_1'(s('type.realax.real',X5))),s('type.realax.real','const.transc.exp_1'(s('type.realax.real',X6)))))) )),
  inference(superposition,[],[f321,f38])).
fof(f38,plain,(
  ( ! [X0,X1] : (s('type.realax.real','const.transc.exp_1'(s('type.realax.real',X1))) = s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real','const.transc.exp_1'(s('type.realax.real','const.realax.real_add_2'(s('type.realax.real',X0),s('type.realax.real',X1))))),s('type.realax.real','const.transc.exp_1'(s('type.realax.real','const.realax.real_neg_1'(s('type.realax.real',X0)))))))) )),
  inference(cnf_transformation,[],[f20])).
fof(f20,plain,(
  ! [X0,X1] : s('type.realax.real','const.transc.exp_1'(s('type.realax.real',X1))) = s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real','const.transc.exp_1'(s('type.realax.real','const.realax.real_add_2'(s('type.realax.real',X0),s('type.realax.real',X1))))),s('type.realax.real','const.transc.exp_1'(s('type.realax.real','const.realax.real_neg_1'(s('type.realax.real',X0)))))))),
  inference(rectify,[],[f11])).
fof(f11,axiom,(
  ! [X6,X7] : s('type.realax.real','const.transc.exp_1'(s('type.realax.real',X7))) = s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real','const.transc.exp_1'(s('type.realax.real','const.realax.real_add_2'(s('type.realax.real',X6),s('type.realax.real',X7))))),s('type.realax.real','const.transc.exp_1'(s('type.realax.real','const.realax.real_neg_1'(s('type.realax.real',X6)))))))),
  file('thm.transc.EXP_ADD','thm.transc.EXP_ADD_MUL')).
fof(f321,plain,(
  ( ! [X4,X3] : (s('type.realax.real',X4) = s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real','const.transc.exp_1'(s('type.realax.real',X3))),s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real',X4),s('type.realax.real','const.transc.exp_1'(s('type.realax.real','const.realax.real_neg_1'(s('type.realax.real',X3)))))))))) )),
  inference(superposition,[],[f300,f37])).
fof(f37,plain,(
  ( ! [X0,X1] : (s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real',X0),s('type.realax.real',X1))) = s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real',X1),s('type.realax.real',X0)))) )),
  inference(cnf_transformation,[],[f19])).
fof(f19,plain,(
  ! [X0,X1] : s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real',X0),s('type.realax.real',X1))) = s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real',X1),s('type.realax.real',X0)))),
  inference(rectify,[],[f8])).
fof(f8,axiom,(
  ! [X6,X7] : s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real',X6),s('type.realax.real',X7))) = s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real',X7),s('type.realax.real',X6)))),
  file('thm.transc.EXP_ADD','thm.realax.REAL_MUL_SYM')).
fof(f300,plain,(
  ( ! [X8,X9] : (s('type.realax.real',X9) = s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real','const.transc.exp_1'(s('type.realax.real',X8))),s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real','const.transc.exp_1'(s('type.realax.real','const.realax.real_neg_1'(s('type.realax.real',X8))))),s('type.realax.real',X9)))))) )),
  inference(forward_demodulation,[],[f276,f200])).
fof(f200,plain,(
  ( ! [X1] : (s('type.realax.real',X1) = s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.realax.real',X1)))) )),
  inference(superposition,[],[f32,f37])).
fof(f32,plain,(
  ( ! [X0] : (s('type.realax.real',X0) = s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real',X0),s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) )),
  inference(cnf_transformation,[],[f15])).
fof(f15,plain,(
  ! [X0] : s('type.realax.real',X0) = s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real',X0),s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))),
  inference(rectify,[],[f10])).
fof(f10,axiom,(
  ! [X6] : s('type.realax.real',X6) = s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real',X6),s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))),
  file('thm.transc.EXP_ADD','thm.real.REAL_MUL_RID')).
fof(f276,plain,(
  ( ! [X8,X9] : (s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.realax.real',X9))) = s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real','const.transc.exp_1'(s('type.realax.real',X8))),s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real','const.transc.exp_1'(s('type.realax.real','const.realax.real_neg_1'(s('type.realax.real',X8))))),s('type.realax.real',X9)))))) )),
  inference(superposition,[],[f40,f33])).
fof(f33,plain,(
  ( ! [X0] : (s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real','const.transc.exp_1'(s('type.realax.real',X0))),s('type.realax.real','const.transc.exp_1'(s('type.realax.real','const.realax.real_neg_1'(s('type.realax.real',X0)))))))) )),
  inference(cnf_transformation,[],[f16])).
fof(f16,plain,(
  ! [X0] : s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real','const.transc.exp_1'(s('type.realax.real',X0))),s('type.realax.real','const.transc.exp_1'(s('type.realax.real','const.realax.real_neg_1'(s('type.realax.real',X0)))))))),
  inference(rectify,[],[f12])).
fof(f12,axiom,(
  ! [X6] : s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real','const.transc.exp_1'(s('type.realax.real',X6))),s('type.realax.real','const.transc.exp_1'(s('type.realax.real','const.realax.real_neg_1'(s('type.realax.real',X6)))))))),
  file('thm.transc.EXP_ADD','thm.transc.EXP_NEG_MUL')).
fof(f40,plain,(
  ( ! [X2,X0,X1] : (s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real',X0),s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real',X1),s('type.realax.real',X2))))) = s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real',X0),s('type.realax.real',X1))),s('type.realax.real',X2)))) )),
  inference(cnf_transformation,[],[f23])).
fof(f23,plain,(
  ! [X0,X1,X2] : s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real',X0),s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real',X1),s('type.realax.real',X2))))) = s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real',X0),s('type.realax.real',X1))),s('type.realax.real',X2)))),
  inference(rectify,[],[f9])).
fof(f9,axiom,(
  ! [X6,X7,X9] : s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real',X6),s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real',X7),s('type.realax.real',X9))))) = s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real',X6),s('type.realax.real',X7))),s('type.realax.real',X9)))),
  file('thm.transc.EXP_ADD','thm.realax.REAL_MUL_ASSOC')).
fof(f29,plain,(
  s('type.realax.real','const.transc.exp_1'(s('type.realax.real','const.realax.real_add_2'(s('type.realax.real',sK0),s('type.realax.real',sK1))))) != s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real','const.transc.exp_1'(s('type.realax.real',sK0))),s('type.realax.real','const.transc.exp_1'(s('type.realax.real',sK1)))))),
  inference(cnf_transformation,[],[f26])).
fof(f26,plain,(
  s('type.realax.real','const.transc.exp_1'(s('type.realax.real','const.realax.real_add_2'(s('type.realax.real',sK0),s('type.realax.real',sK1))))) != s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real','const.transc.exp_1'(s('type.realax.real',sK0))),s('type.realax.real','const.transc.exp_1'(s('type.realax.real',sK1)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1])],[f24])).
fof(f24,plain,(
  ? [X0,X1] : s('type.realax.real','const.transc.exp_1'(s('type.realax.real','const.realax.real_add_2'(s('type.realax.real',X0),s('type.realax.real',X1))))) != s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real','const.transc.exp_1'(s('type.realax.real',X0))),s('type.realax.real','const.transc.exp_1'(s('type.realax.real',X1)))))),
  inference(ennf_transformation,[],[f13])).
fof(f13,plain,(
  ~! [X0,X1] : s('type.realax.real','const.transc.exp_1'(s('type.realax.real','const.realax.real_add_2'(s('type.realax.real',X0),s('type.realax.real',X1))))) = s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real','const.transc.exp_1'(s('type.realax.real',X0))),s('type.realax.real','const.transc.exp_1'(s('type.realax.real',X1)))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7] : s('type.realax.real','const.transc.exp_1'(s('type.realax.real','const.realax.real_add_2'(s('type.realax.real',X6),s('type.realax.real',X7))))) = s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real','const.transc.exp_1'(s('type.realax.real',X6))),s('type.realax.real','const.transc.exp_1'(s('type.realax.real',X7)))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7] : s('type.realax.real','const.transc.exp_1'(s('type.realax.real','const.realax.real_add_2'(s('type.realax.real',X6),s('type.realax.real',X7))))) = s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real','const.transc.exp_1'(s('type.realax.real',X6))),s('type.realax.real','const.transc.exp_1'(s('type.realax.real',X7)))))),
  file('thm.transc.EXP_ADD','thm.transc.EXP_ADD')).
% SZS output end Proof for thm.transc
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 23
% Passive clauses: 69
% Generated clauses: 519
% Final active clauses: 21
% Final passive clauses: 38
% Input formulas: 11
% Initial clauses: 12
% 
% Duplicate literals: 37
% Trivial inequalities: 3
% Fw demodulations: 17
% 
% Simple tautologies: 18
% Equational tautologies: 14
% Forward subsumptions: 330
% Fw demodulations to eq. taut.: 5
% 
% Binary resolution: 4
% Forward superposition: 230
% Backward superposition: 170
% Self superposition: 50
% Equality factoring: 26
% 
% Split clauses: 1
% Split components: 2
% SAT solver clauses: 2
% SAT solver unit clauses: 1
% SAT solver binary clauses: 1
% 
% Sat splits: 1
% Sat splitting refutations: 1
% 
% TWLsolver clauses: 2
% TWLsolver calls for satisfiability: 2
% 
% Memory used [KB]: 1279
% Time elapsed: 0.026 s
% ------------------------------
% ------------------------------
% Success in time 0.028 s
