Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 300 next slice time: 5
dis+11_7_3 on thm.option
% (74690)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 152
% Passive clauses: 2409
% Generated clauses: 20948
% Final active clauses: 138
% Final passive clauses: 1959
% Input formulas: 20
% Initial clauses: 33
% 
% Duplicate literals: 1105
% Trivial inequalities: 221
% Fw subsumption resolutions: 2223
% Fw demodulations: 1640
% Bw demodulations: 8
% 
% Simple tautologies: 336
% Equational tautologies: 77
% Forward subsumptions: 11955
% 
% Binary resolution: 27
% Forward superposition: 8037
% Backward superposition: 7136
% Self superposition: 369
% Equality factoring: 200
% Equality resolution: 21
% 
% Split clauses: 928
% Split components: 1888
% SAT solver clauses: 1280
% SAT solver unit clauses: 17
% SAT solver binary clauses: 132
% 
% Sat splits: 928
% Sat splitting refutations: 5
% 
% TWLsolver clauses: 1257
% TWLsolver calls for satisfiability: 115
% 
% Memory used [KB]: 13688
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 294 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.option
% (74700)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 95
% Passive clauses: 453
% Generated clauses: 11233
% Final active clauses: 87
% Final passive clauses: 272
% Input formulas: 20
% Initial clauses: 33
% 
% Duplicate literals: 1354
% Trivial inequalities: 62
% Fw subsumption resolutions: 530
% Fw demodulations: 465
% Bw demodulations: 80
% Condensations: 1804
% Global subsumptions: 4
% 
% Simple tautologies: 157
% Equational tautologies: 61
% Forward subsumptions: 5318
% Bw demodulations to eq. taut.: 6
% 
% Binary resolution: 7
% Forward superposition: 3448
% Backward superposition: 2931
% Self superposition: 220
% Equality factoring: 153
% Equality resolution: 5
% 
% Split clauses: 115
% Split components: 235
% SAT solver clauses: 1100
% SAT solver unit clauses: 41
% SAT solver binary clauses: 75
% SAT solver learnt clauses: 8
% 
% Sat splits: 115
% Sat splitting refutations: 5
% 
% TWLsolver clauses: 1084
% TWLsolver calls for satisfiability: 138
% 
% Memory used [KB]: 9722
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 286 next slice time: 103
lrs+11_2_br=off:cond=on:fde=none:gs=on:gsaa=full_model:lwlo=on:nwc=2:sas=minisat:stl=30:ssfp=100000:ssfq=1.4:smm=sco:ssnc=none:sp=occurrence:urr=on_98 on thm.option
% (74809)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 670
% Passive clauses: 11793
% Generated clauses: 128782
% Final active clauses: 75
% Final passive clauses: 234
% Input formulas: 20
% Initial clauses: 33
% 
% Duplicate literals: 8586
% Trivial inequalities: 751
% Fw subsumption resolutions: 5559
% Fw demodulations: 16574
% Bw demodulations: 7037
% Condensations: 10948
% Global subsumptions: 871
% 
% Simple tautologies: 789
% Equational tautologies: 5025
% Forward subsumptions: 66068
% Fw demodulations to eq. taut.: 230
% Bw demodulations to eq. taut.: 1879
% 
% Unit resulting resolution: 16434
% Forward superposition: 24638
% Backward superposition: 18017
% Self superposition: 396
% Equality factoring: 239
% Equality resolution: 30
% 
% Split clauses: 580
% Split components: 1206
% SAT solver clauses: 15034
% SAT solver unit clauses: 22
% SAT solver binary clauses: 484
% 
% Sat splits: 580
% Sat splitting refutations: 1208
% 
% Memory used [KB]: 71128
% Time elapsed: 10.400 s
% ------------------------------
% ------------------------------
% remaining time: 182 next slice time: 39
dis+11_5_fde=none:nwc=1:sas=minisat:sd=1:ss=axioms:st=5.0:sos=all:sdd=large:sser=off:sfr=on:ssfp=100000:ssfq=2.0:ssnc=none_37 on thm.option
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.option
% SZS output start Proof for thm.option
fof(f576,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f165,f169,f237,f241,f239,f525,f528,f320,f167,f531,f573])).
fof(f573,plain,(
  $false | $spl0),
  inference(trivial_inequality_removal,[],[f567])).
fof(f567,plain,(
  s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),'const.option.NONE_0') | $spl0),
  inference(superposition,[],[f532,f550])).
fof(f550,plain,(
  ( ! [X0,X1] : (s('type.option.option'(X0),'const.option.NONE_0') = s('type.option.option'(X0),'const.option.OPTION_MCOMP_3'(s(fun(sK1,'type.option.option'(X0)),X1),s(fun(sK0,'type.option.option'(sK1)),sK2),s(sK0,sK3('const.option.OPTION_MCOMP_2'(s(fun(sK1,'type.option.option'(sK1)),'const.option.SOME_0'),s(fun(sK0,'type.option.option'(sK1)),sK2)),sK2,sK0,'type.option.option'(sK1)))))) ) | $spl0),
  inference(forward_demodulation,[],[f540,f96])).
fof(f96,plain,(
  ( ! [X2,X0,X1] : (s('type.option.option'(X1),'const.option.NONE_0') = s('type.option.option'(X1),'const.option.OPTION_BIND_2'(s('type.option.option'(X0),'const.option.NONE_0'),s(fun(X0,'type.option.option'(X1)),X2)))) )),
  inference(cnf_transformation,[],[f44])).
fof(f44,plain,(
  ! [X0,X1,X2] : s('type.option.option'(X1),'const.option.NONE_0') = s('type.option.option'(X1),'const.option.OPTION_BIND_2'(s('type.option.option'(X0),'const.option.NONE_0'),s(fun(X0,'type.option.option'(X1)),X2)))),
  inference(flattening,[],[f43])).
fof(f43,plain,(
  ! [X0,X1] : ! [X2] : s('type.option.option'(X1),'const.option.NONE_0') = s('type.option.option'(X1),'const.option.OPTION_BIND_2'(s('type.option.option'(X0),'const.option.NONE_0'),s(fun(X0,'type.option.option'(X1)),X2)))),
  inference(rectify,[],[f17])).
fof(f17,axiom,(
  ! [X7,X6] : ! [X8] : s('type.option.option'(X6),'const.option.NONE_0') = s('type.option.option'(X6),'const.option.OPTION_BIND_2'(s('type.option.option'(X7),'const.option.NONE_0'),s(fun(X7,'type.option.option'(X6)),X8)))),
  file('thm.option.OPTION_MCOMP_ID|split|1','thm.option.OPTION_BIND_def|split|0')).
fof(f540,plain,(
  ( ! [X0,X1] : (s('type.option.option'(X0),'const.option.OPTION_BIND_2'(s('type.option.option'(sK1),'const.option.NONE_0'),s(fun(sK1,'type.option.option'(X0)),X1))) = s('type.option.option'(X0),'const.option.OPTION_MCOMP_3'(s(fun(sK1,'type.option.option'(X0)),X1),s(fun(sK0,'type.option.option'(sK1)),sK2),s(sK0,sK3('const.option.OPTION_MCOMP_2'(s(fun(sK1,'type.option.option'(sK1)),'const.option.SOME_0'),s(fun(sK0,'type.option.option'(sK1)),sK2)),sK2,sK0,'type.option.option'(sK1)))))) ) | $spl0),
  inference(superposition,[],[f95,f166])).
fof(f166,plain,(
  s('type.option.option'(sK1),'const.option.NONE_0') = s('type.option.option'(sK1),happ(s(fun(sK0,'type.option.option'(sK1)),sK2),s(sK0,sK3('const.option.OPTION_MCOMP_2'(s(fun(sK1,'type.option.option'(sK1)),'const.option.SOME_0'),s(fun(sK0,'type.option.option'(sK1)),sK2)),sK2,sK0,'type.option.option'(sK1))))) | $spl0),
  inference(cnf_transformation,[],[f166_D])).
fof(f166_D,plain,(
  s('type.option.option'(sK1),'const.option.NONE_0') = s('type.option.option'(sK1),happ(s(fun(sK0,'type.option.option'(sK1)),sK2),s(sK0,sK3('const.option.OPTION_MCOMP_2'(s(fun(sK1,'type.option.option'(sK1)),'const.option.SOME_0'),s(fun(sK0,'type.option.option'(sK1)),sK2)),sK2,sK0,'type.option.option'(sK1))))) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f95,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.option.option'(X2),'const.option.OPTION_MCOMP_3'(s(fun(X1,'type.option.option'(X2)),X3),s(fun(X0,'type.option.option'(X1)),X4),s(X0,X5))) = s('type.option.option'(X2),'const.option.OPTION_BIND_2'(s('type.option.option'(X1),happ(s(fun(X0,'type.option.option'(X1)),X4),s(X0,X5))),s(fun(X1,'type.option.option'(X2)),X3)))) )),
  inference(cnf_transformation,[],[f42])).
fof(f42,plain,(
  ! [X0,X1,X2,X3,X4,X5] : s('type.option.option'(X2),'const.option.OPTION_MCOMP_3'(s(fun(X1,'type.option.option'(X2)),X3),s(fun(X0,'type.option.option'(X1)),X4),s(X0,X5))) = s('type.option.option'(X2),'const.option.OPTION_BIND_2'(s('type.option.option'(X1),happ(s(fun(X0,'type.option.option'(X1)),X4),s(X0,X5))),s(fun(X1,'type.option.option'(X2)),X3)))),
  inference(flattening,[],[f41])).
fof(f41,plain,(
  ! [X0,X1,X2] : ! [X3,X4,X5] : s('type.option.option'(X2),'const.option.OPTION_MCOMP_3'(s(fun(X1,'type.option.option'(X2)),X3),s(fun(X0,'type.option.option'(X1)),X4),s(X0,X5))) = s('type.option.option'(X2),'const.option.OPTION_BIND_2'(s('type.option.option'(X1),happ(s(fun(X0,'type.option.option'(X1)),X4),s(X0,X5))),s(fun(X1,'type.option.option'(X2)),X3)))),
  inference(rectify,[],[f19])).
fof(f19,axiom,(
  ! [X13,X7,X6] : ! [X11,X8,X14] : s('type.option.option'(X6),'const.option.OPTION_MCOMP_3'(s(fun(X7,'type.option.option'(X6)),X11),s(fun(X13,'type.option.option'(X7)),X8),s(X13,X14))) = s('type.option.option'(X6),'const.option.OPTION_BIND_2'(s('type.option.option'(X7),happ(s(fun(X13,'type.option.option'(X7)),X8),s(X13,X14))),s(fun(X7,'type.option.option'(X6)),X11)))),
  file('thm.option.OPTION_MCOMP_ID|split|1','thm.option.OPTION_MCOMP_def')).
fof(f532,plain,(
  s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),'const.option.OPTION_MCOMP_3'(s(fun(sK1,'type.option.option'(sK1)),'const.option.SOME_0'),s(fun(sK0,'type.option.option'(sK1)),sK2),s(sK0,sK3('const.option.OPTION_MCOMP_2'(s(fun(sK1,'type.option.option'(sK1)),'const.option.SOME_0'),s(fun(sK0,'type.option.option'(sK1)),sK2)),sK2,sK0,'type.option.option'(sK1))))) | $spl0),
  inference(backward_demodulation,[],[f166,f159])).
fof(f159,plain,(
  s('type.option.option'(sK1),happ(s(fun(sK0,'type.option.option'(sK1)),sK2),s(sK0,sK3('const.option.OPTION_MCOMP_2'(s(fun(sK1,'type.option.option'(sK1)),'const.option.SOME_0'),s(fun(sK0,'type.option.option'(sK1)),sK2)),sK2,sK0,'type.option.option'(sK1))))) != s('type.option.option'(sK1),'const.option.OPTION_MCOMP_3'(s(fun(sK1,'type.option.option'(sK1)),'const.option.SOME_0'),s(fun(sK0,'type.option.option'(sK1)),sK2),s(sK0,sK3('const.option.OPTION_MCOMP_2'(s(fun(sK1,'type.option.option'(sK1)),'const.option.SOME_0'),s(fun(sK0,'type.option.option'(sK1)),sK2)),sK2,sK0,'type.option.option'(sK1)))))),
  inference(superposition,[],[f150,f73])).
fof(f73,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.option.option'(X0),'const.option.OPTION_MCOMP_3'(s(fun(X1,'type.option.option'(X0)),X3),s(fun(X2,'type.option.option'(X1)),X4),s(X2,X5))) = s('type.option.option'(X0),happ(s(fun(X2,'type.option.option'(X0)),'const.option.OPTION_MCOMP_2'(s(fun(X1,'type.option.option'(X0)),X3),s(fun(X2,'type.option.option'(X1)),X4))),s(X2,X5)))) )),
  inference(cnf_transformation,[],[f31])).
fof(f31,plain,(
  ! [X0,X1,X2,X3,X4,X5] : s('type.option.option'(X0),'const.option.OPTION_MCOMP_3'(s(fun(X1,'type.option.option'(X0)),X3),s(fun(X2,'type.option.option'(X1)),X4),s(X2,X5))) = s('type.option.option'(X0),happ(s(fun(X2,'type.option.option'(X0)),'const.option.OPTION_MCOMP_2'(s(fun(X1,'type.option.option'(X0)),X3),s(fun(X2,'type.option.option'(X1)),X4))),s(X2,X5)))),
  inference(flattening,[],[f30])).
fof(f30,plain,(
  ! [X0,X1,X2] : ! [X3,X4,X5] : s('type.option.option'(X0),'const.option.OPTION_MCOMP_3'(s(fun(X1,'type.option.option'(X0)),X3),s(fun(X2,'type.option.option'(X1)),X4),s(X2,X5))) = s('type.option.option'(X0),happ(s(fun(X2,'type.option.option'(X0)),'const.option.OPTION_MCOMP_2'(s(fun(X1,'type.option.option'(X0)),X3),s(fun(X2,'type.option.option'(X1)),X4))),s(X2,X5)))),
  inference(rectify,[],[f21])).
fof(f21,axiom,(
  ! [X6,X7,X13] : ! [X15,X16,X17] : s('type.option.option'(X6),'const.option.OPTION_MCOMP_3'(s(fun(X7,'type.option.option'(X6)),X15),s(fun(X13,'type.option.option'(X7)),X16),s(X13,X17))) = s('type.option.option'(X6),happ(s(fun(X13,'type.option.option'(X6)),'const.option.OPTION_MCOMP_2'(s(fun(X7,'type.option.option'(X6)),X15),s(fun(X13,'type.option.option'(X7)),X16))),s(X13,X17)))),
  file('thm.option.OPTION_MCOMP_ID|split|1','ARITY_2_3_const.option.OPTION_MCOMP')).
fof(f150,plain,(
  s('type.option.option'(sK1),happ(s(fun(sK0,'type.option.option'(sK1)),sK2),s(sK0,sK3('const.option.OPTION_MCOMP_2'(s(fun(sK1,'type.option.option'(sK1)),'const.option.SOME_0'),s(fun(sK0,'type.option.option'(sK1)),sK2)),sK2,sK0,'type.option.option'(sK1))))) != s('type.option.option'(sK1),happ(s(fun(sK0,'type.option.option'(sK1)),'const.option.OPTION_MCOMP_2'(s(fun(sK1,'type.option.option'(sK1)),'const.option.SOME_0'),s(fun(sK0,'type.option.option'(sK1)),sK2))),s(sK0,sK3('const.option.OPTION_MCOMP_2'(s(fun(sK1,'type.option.option'(sK1)),'const.option.SOME_0'),s(fun(sK0,'type.option.option'(sK1)),sK2)),sK2,sK0,'type.option.option'(sK1)))))),
  inference(equality_resolution,[],[f104])).
fof(f104,plain,(
  ( ! [X0] : (s(fun(sK0,'type.option.option'(sK1)),sK2) != s(fun(sK0,'type.option.option'(sK1)),X0) | s('type.option.option'(sK1),happ(s(fun(sK0,'type.option.option'(sK1)),X0),s(sK0,sK3('const.option.OPTION_MCOMP_2'(s(fun(sK1,'type.option.option'(sK1)),'const.option.SOME_0'),s(fun(sK0,'type.option.option'(sK1)),sK2)),X0,sK0,'type.option.option'(sK1))))) != s('type.option.option'(sK1),happ(s(fun(sK0,'type.option.option'(sK1)),'const.option.OPTION_MCOMP_2'(s(fun(sK1,'type.option.option'(sK1)),'const.option.SOME_0'),s(fun(sK0,'type.option.option'(sK1)),sK2))),s(sK0,sK3('const.option.OPTION_MCOMP_2'(s(fun(sK1,'type.option.option'(sK1)),'const.option.SOME_0'),s(fun(sK0,'type.option.option'(sK1)),sK2)),X0,sK0,'type.option.option'(sK1)))))) )),
  inference(superposition,[],[f66,f68])).
fof(f68,plain,(
  ( ! [X2,X0,X3,X1] : (s(fun(X1,X0),X2) = s(fun(X1,X0),X3) | s(X0,happ(s(fun(X1,X0),X2),s(X1,sK3(X3,X2,X1,X0)))) != s(X0,happ(s(fun(X1,X0),X3),s(X1,sK3(X3,X2,X1,X0))))) )),
  inference(cnf_transformation,[],[f51])).
fof(f51,plain,(
  ! [X0,X1,X2,X3] : ((s(fun(X1,X0),X2) != s(fun(X1,X0),X3) | ! [X5] : s(X0,happ(s(fun(X1,X0),X2),s(X1,X5))) = s(X0,happ(s(fun(X1,X0),X3),s(X1,X5)))) & (s(X0,happ(s(fun(X1,X0),X2),s(X1,sK3(X3,X2,X1,X0)))) != s(X0,happ(s(fun(X1,X0),X3),s(X1,sK3(X3,X2,X1,X0)))) | s(fun(X1,X0),X2) = s(fun(X1,X0),X3)))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK3])],[f50])).
fof(f50,plain,(
  ! [X0,X1,X2,X3] : ((s(fun(X1,X0),X2) != s(fun(X1,X0),X3) | ! [X5] : s(X0,happ(s(fun(X1,X0),X2),s(X1,X5))) = s(X0,happ(s(fun(X1,X0),X3),s(X1,X5)))) & (? [X4] : s(X0,happ(s(fun(X1,X0),X2),s(X1,X4))) != s(X0,happ(s(fun(X1,X0),X3),s(X1,X4))) | s(fun(X1,X0),X2) = s(fun(X1,X0),X3)))),
  inference(rectify,[],[f49])).
fof(f49,plain,(
  ! [X0,X1,X2,X3] : ((s(fun(X1,X0),X2) != s(fun(X1,X0),X3) | ! [X4] : s(X0,happ(s(fun(X1,X0),X2),s(X1,X4))) = s(X0,happ(s(fun(X1,X0),X3),s(X1,X4)))) & (? [X4] : s(X0,happ(s(fun(X1,X0),X2),s(X1,X4))) != s(X0,happ(s(fun(X1,X0),X3),s(X1,X4))) | s(fun(X1,X0),X2) = s(fun(X1,X0),X3)))),
  inference(nnf_transformation,[],[f25])).
fof(f25,plain,(
  ! [X0,X1,X2,X3] : (s(fun(X1,X0),X2) = s(fun(X1,X0),X3) <=> ! [X4] : s(X0,happ(s(fun(X1,X0),X2),s(X1,X4))) = s(X0,happ(s(fun(X1,X0),X3),s(X1,X4))))),
  inference(flattening,[],[f24])).
fof(f24,plain,(
  ! [X0,X1] : ! [X2,X3] : (s(fun(X1,X0),X2) = s(fun(X1,X0),X3) <=> ! [X4] : s(X0,happ(s(fun(X1,X0),X2),s(X1,X4))) = s(X0,happ(s(fun(X1,X0),X3),s(X1,X4))))),
  inference(rectify,[],[f15])).
fof(f15,axiom,(
  ! [X7,X6] : ! [X8,X11] : (s(fun(X6,X7),X8) = s(fun(X6,X7),X11) <=> ! [X10] : s(X7,happ(s(fun(X6,X7),X8),s(X6,X10))) = s(X7,happ(s(fun(X6,X7),X11),s(X6,X10))))),
  file('thm.option.OPTION_MCOMP_ID|split|1','thm.bool.FUN_EQ_THM')).
fof(f66,plain,(
  s(fun(sK0,'type.option.option'(sK1)),sK2) != s(fun(sK0,'type.option.option'(sK1)),'const.option.OPTION_MCOMP_2'(s(fun(sK1,'type.option.option'(sK1)),'const.option.SOME_0'),s(fun(sK0,'type.option.option'(sK1)),sK2)))),
  inference(cnf_transformation,[],[f48])).
fof(f48,plain,(
  s(fun(sK0,'type.option.option'(sK1)),sK2) != s(fun(sK0,'type.option.option'(sK1)),'const.option.OPTION_MCOMP_2'(s(fun(sK1,'type.option.option'(sK1)),'const.option.SOME_0'),s(fun(sK0,'type.option.option'(sK1)),sK2)))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2])],[f47])).
fof(f47,plain,(
  ? [X0,X1,X2] : s(fun(X0,'type.option.option'(X1)),X2) != s(fun(X0,'type.option.option'(X1)),'const.option.OPTION_MCOMP_2'(s(fun(X1,'type.option.option'(X1)),'const.option.SOME_0'),s(fun(X0,'type.option.option'(X1)),X2)))),
  inference(ennf_transformation,[],[f23])).
fof(f23,plain,(
  ~! [X0,X1,X2] : s(fun(X0,'type.option.option'(X1)),X2) = s(fun(X0,'type.option.option'(X1)),'const.option.OPTION_MCOMP_2'(s(fun(X1,'type.option.option'(X1)),'const.option.SOME_0'),s(fun(X0,'type.option.option'(X1)),X2)))),
  inference(flattening,[],[f22])).
fof(f22,plain,(
  ~! [X0,X1] : ! [X2] : s(fun(X0,'type.option.option'(X1)),X2) = s(fun(X0,'type.option.option'(X1)),'const.option.OPTION_MCOMP_2'(s(fun(X1,'type.option.option'(X1)),'const.option.SOME_0'),s(fun(X0,'type.option.option'(X1)),X2)))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7] : ! [X8] : s(fun(X6,'type.option.option'(X7)),X8) = s(fun(X6,'type.option.option'(X7)),'const.option.OPTION_MCOMP_2'(s(fun(X7,'type.option.option'(X7)),'const.option.SOME_0'),s(fun(X6,'type.option.option'(X7)),X8)))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7] : ! [X8] : s(fun(X6,'type.option.option'(X7)),X8) = s(fun(X6,'type.option.option'(X7)),'const.option.OPTION_MCOMP_2'(s(fun(X7,'type.option.option'(X7)),'const.option.SOME_0'),s(fun(X6,'type.option.option'(X7)),X8)))),
  file('thm.option.OPTION_MCOMP_ID|split|1','thm.option.OPTION_MCOMP_ID|split|1')).
fof(f531,plain,(
  s('type.option.option'(sK1),'const.option.OPTION_MCOMP_3'(s(fun(sK1,'type.option.option'(sK1)),'const.option.SOME_0'),s(fun(sK0,'type.option.option'(sK1)),sK2),s(sK0,sK3('const.option.OPTION_MCOMP_2'(s(fun(sK1,'type.option.option'(sK1)),'const.option.SOME_0'),s(fun(sK0,'type.option.option'(sK1)),sK2)),sK2,sK0,'type.option.option'(sK1))))) = s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,sK4('const.option.OPTION_MCOMP_3'(s(fun(sK1,'type.option.option'(sK1)),'const.option.SOME_0'),s(fun(sK0,'type.option.option'(sK1)),sK2),s(sK0,sK3('const.option.OPTION_MCOMP_2'(s(fun(sK1,'type.option.option'(sK1)),'const.option.SOME_0'),s(fun(sK0,'type.option.option'(sK1)),sK2)),sK2,sK0,'type.option.option'(sK1)))),sK1)))) | $spl8),
  inference(cnf_transformation,[],[f531_D])).
fof(f531_D,plain,(
  s('type.option.option'(sK1),'const.option.OPTION_MCOMP_3'(s(fun(sK1,'type.option.option'(sK1)),'const.option.SOME_0'),s(fun(sK0,'type.option.option'(sK1)),sK2),s(sK0,sK3('const.option.OPTION_MCOMP_2'(s(fun(sK1,'type.option.option'(sK1)),'const.option.SOME_0'),s(fun(sK0,'type.option.option'(sK1)),sK2)),sK2,sK0,'type.option.option'(sK1))))) = s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,sK4('const.option.OPTION_MCOMP_3'(s(fun(sK1,'type.option.option'(sK1)),'const.option.SOME_0'),s(fun(sK0,'type.option.option'(sK1)),sK2),s(sK0,sK3('const.option.OPTION_MCOMP_2'(s(fun(sK1,'type.option.option'(sK1)),'const.option.SOME_0'),s(fun(sK0,'type.option.option'(sK1)),sK2)),sK2,sK0,'type.option.option'(sK1)))),sK1)))) <=> ~$spl8),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl8])])).
fof(f167,plain,(
  s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),happ(s(fun(sK0,'type.option.option'(sK1)),sK2),s(sK0,sK3('const.option.OPTION_MCOMP_2'(s(fun(sK1,'type.option.option'(sK1)),'const.option.SOME_0'),s(fun(sK0,'type.option.option'(sK1)),sK2)),sK2,sK0,'type.option.option'(sK1))))) | $spl1),
  inference(cnf_transformation,[],[f167_D])).
fof(f167_D,plain,(
  s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),happ(s(fun(sK0,'type.option.option'(sK1)),sK2),s(sK0,sK3('const.option.OPTION_MCOMP_2'(s(fun(sK1,'type.option.option'(sK1)),'const.option.SOME_0'),s(fun(sK0,'type.option.option'(sK1)),sK2)),sK2,sK0,'type.option.option'(sK1))))) <=> ~$spl1),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1])])).
fof(f320,plain,(
  s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),happ(s(fun(sK0,'type.option.option'(sK1)),sK2),s(sK0,sK3('const.option.OPTION_MCOMP_2'(s(fun(sK1,'type.option.option'(sK1)),'const.option.SOME_0'),s(fun(sK0,'type.option.option'(sK1)),sK2)),sK2,sK0,'type.option.option'(sK1))))) | s('type.option.option'(sK1),'const.option.OPTION_MCOMP_3'(s(fun(sK1,'type.option.option'(sK1)),'const.option.SOME_0'),s(fun(sK0,'type.option.option'(sK1)),sK2),s(sK0,sK3('const.option.OPTION_MCOMP_2'(s(fun(sK1,'type.option.option'(sK1)),'const.option.SOME_0'),s(fun(sK0,'type.option.option'(sK1)),sK2)),sK2,sK0,'type.option.option'(sK1))))) = s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,sK4('const.option.OPTION_MCOMP_3'(s(fun(sK1,'type.option.option'(sK1)),'const.option.SOME_0'),s(fun(sK0,'type.option.option'(sK1)),sK2),s(sK0,sK3('const.option.OPTION_MCOMP_2'(s(fun(sK1,'type.option.option'(sK1)),'const.option.SOME_0'),s(fun(sK0,'type.option.option'(sK1)),sK2)),sK2,sK0,'type.option.option'(sK1)))),sK1))))),
  inference(superposition,[],[f159,f97])).
fof(f97,plain,(
  ( ! [X0,X1] : (s('type.option.option'(X0),X1) = s('type.option.option'(X0),'const.option.SOME_1'(s(X0,sK4(X1,X0)))) | s('type.option.option'(X0),'const.option.NONE_0') = s('type.option.option'(X0),X1)) )),
  inference(cnf_transformation,[],[f65])).
fof(f65,plain,(
  ! [X0,X1] : (s('type.option.option'(X0),'const.option.NONE_0') = s('type.option.option'(X0),X1) | s('type.option.option'(X0),X1) = s('type.option.option'(X0),'const.option.SOME_1'(s(X0,sK4(X1,X0)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK4])],[f46])).
fof(f46,plain,(
  ! [X0,X1] : (s('type.option.option'(X0),'const.option.NONE_0') = s('type.option.option'(X0),X1) | ? [X2] : s('type.option.option'(X0),X1) = s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X2))))),
  inference(flattening,[],[f45])).
fof(f45,plain,(
  ! [X0] : ! [X1] : (s('type.option.option'(X0),'const.option.NONE_0') = s('type.option.option'(X0),X1) | ? [X2] : s('type.option.option'(X0),X1) = s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X2))))),
  inference(rectify,[],[f16])).
fof(f16,axiom,(
  ! [X6] : ! [X12] : (s('type.option.option'(X6),'const.option.NONE_0') = s('type.option.option'(X6),X12) | ? [X10] : s('type.option.option'(X6),X12) = s('type.option.option'(X6),'const.option.SOME_1'(s(X6,X10))))),
  file('thm.option.OPTION_MCOMP_ID|split|1','thm.option.option_nchotomy')).
fof(f528,plain,(
  $false | $spl1),
  inference(subsumption_resolution,[],[f527,f159])).
fof(f527,plain,(
  s('type.option.option'(sK1),happ(s(fun(sK0,'type.option.option'(sK1)),sK2),s(sK0,sK3('const.option.OPTION_MCOMP_2'(s(fun(sK1,'type.option.option'(sK1)),'const.option.SOME_0'),s(fun(sK0,'type.option.option'(sK1)),sK2)),sK2,sK0,'type.option.option'(sK1))))) = s('type.option.option'(sK1),'const.option.OPTION_MCOMP_3'(s(fun(sK1,'type.option.option'(sK1)),'const.option.SOME_0'),s(fun(sK0,'type.option.option'(sK1)),sK2),s(sK0,sK3('const.option.OPTION_MCOMP_2'(s(fun(sK1,'type.option.option'(sK1)),'const.option.SOME_0'),s(fun(sK0,'type.option.option'(sK1)),sK2)),sK2,sK0,'type.option.option'(sK1))))) | $spl1),
  inference(forward_demodulation,[],[f513,f186])).
fof(f186,plain,(
  s('type.option.option'(sK1),happ(s(fun(sK0,'type.option.option'(sK1)),sK2),s(sK0,sK3('const.option.OPTION_MCOMP_2'(s(fun(sK1,'type.option.option'(sK1)),'const.option.SOME_0'),s(fun(sK0,'type.option.option'(sK1)),sK2)),sK2,sK0,'type.option.option'(sK1))))) = s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,sK4(happ(s(fun(sK0,'type.option.option'(sK1)),sK2),s(sK0,sK3('const.option.OPTION_MCOMP_2'(s(fun(sK1,'type.option.option'(sK1)),'const.option.SOME_0'),s(fun(sK0,'type.option.option'(sK1)),sK2)),sK2,sK0,'type.option.option'(sK1)))),sK1)))) | $spl1),
  inference(trivial_inequality_removal,[],[f183])).
fof(f183,plain,(
  s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),'const.option.NONE_0') | s('type.option.option'(sK1),happ(s(fun(sK0,'type.option.option'(sK1)),sK2),s(sK0,sK3('const.option.OPTION_MCOMP_2'(s(fun(sK1,'type.option.option'(sK1)),'const.option.SOME_0'),s(fun(sK0,'type.option.option'(sK1)),sK2)),sK2,sK0,'type.option.option'(sK1))))) = s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,sK4(happ(s(fun(sK0,'type.option.option'(sK1)),sK2),s(sK0,sK3('const.option.OPTION_MCOMP_2'(s(fun(sK1,'type.option.option'(sK1)),'const.option.SOME_0'),s(fun(sK0,'type.option.option'(sK1)),sK2)),sK2,sK0,'type.option.option'(sK1)))),sK1)))) | $spl1),
  inference(superposition,[],[f167,f97])).
fof(f513,plain,(
  s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,sK4(happ(s(fun(sK0,'type.option.option'(sK1)),sK2),s(sK0,sK3('const.option.OPTION_MCOMP_2'(s(fun(sK1,'type.option.option'(sK1)),'const.option.SOME_0'),s(fun(sK0,'type.option.option'(sK1)),sK2)),sK2,sK0,'type.option.option'(sK1)))),sK1)))) = s('type.option.option'(sK1),'const.option.OPTION_MCOMP_3'(s(fun(sK1,'type.option.option'(sK1)),'const.option.SOME_0'),s(fun(sK0,'type.option.option'(sK1)),sK2),s(sK0,sK3('const.option.OPTION_MCOMP_2'(s(fun(sK1,'type.option.option'(sK1)),'const.option.SOME_0'),s(fun(sK0,'type.option.option'(sK1)),sK2)),sK2,sK0,'type.option.option'(sK1))))) | $spl1),
  inference(superposition,[],[f74,f212])).
fof(f212,plain,(
  ( ! [X0,X1] : (s('type.option.option'(X0),'const.option.OPTION_MCOMP_3'(s(fun(sK1,'type.option.option'(X0)),X1),s(fun(sK0,'type.option.option'(sK1)),sK2),s(sK0,sK3('const.option.OPTION_MCOMP_2'(s(fun(sK1,'type.option.option'(sK1)),'const.option.SOME_0'),s(fun(sK0,'type.option.option'(sK1)),sK2)),sK2,sK0,'type.option.option'(sK1))))) = s('type.option.option'(X0),happ(s(fun(sK1,'type.option.option'(X0)),X1),s(sK1,sK4(happ(s(fun(sK0,'type.option.option'(sK1)),sK2),s(sK0,sK3('const.option.OPTION_MCOMP_2'(s(fun(sK1,'type.option.option'(sK1)),'const.option.SOME_0'),s(fun(sK0,'type.option.option'(sK1)),sK2)),sK2,sK0,'type.option.option'(sK1)))),sK1))))) ) | $spl1),
  inference(forward_demodulation,[],[f201,f95])).
fof(f201,plain,(
  ( ! [X0,X1] : (s('type.option.option'(X0),'const.option.OPTION_BIND_2'(s('type.option.option'(sK1),happ(s(fun(sK0,'type.option.option'(sK1)),sK2),s(sK0,sK3('const.option.OPTION_MCOMP_2'(s(fun(sK1,'type.option.option'(sK1)),'const.option.SOME_0'),s(fun(sK0,'type.option.option'(sK1)),sK2)),sK2,sK0,'type.option.option'(sK1))))),s(fun(sK1,'type.option.option'(X0)),X1))) = s('type.option.option'(X0),happ(s(fun(sK1,'type.option.option'(X0)),X1),s(sK1,sK4(happ(s(fun(sK0,'type.option.option'(sK1)),sK2),s(sK0,sK3('const.option.OPTION_MCOMP_2'(s(fun(sK1,'type.option.option'(sK1)),'const.option.SOME_0'),s(fun(sK0,'type.option.option'(sK1)),sK2)),sK2,sK0,'type.option.option'(sK1)))),sK1))))) ) | $spl1),
  inference(superposition,[],[f69,f186])).
fof(f69,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.option.option'(X0),happ(s(fun(X1,'type.option.option'(X0)),X3),s(X1,X2))) = s('type.option.option'(X0),'const.option.OPTION_BIND_2'(s('type.option.option'(X1),'const.option.SOME_1'(s(X1,X2))),s(fun(X1,'type.option.option'(X0)),X3)))) )),
  inference(cnf_transformation,[],[f27])).
fof(f27,plain,(
  ! [X0,X1,X2,X3] : s('type.option.option'(X0),happ(s(fun(X1,'type.option.option'(X0)),X3),s(X1,X2))) = s('type.option.option'(X0),'const.option.OPTION_BIND_2'(s('type.option.option'(X1),'const.option.SOME_1'(s(X1,X2))),s(fun(X1,'type.option.option'(X0)),X3)))),
  inference(flattening,[],[f26])).
fof(f26,plain,(
  ! [X0,X1] : ! [X2,X3] : s('type.option.option'(X0),happ(s(fun(X1,'type.option.option'(X0)),X3),s(X1,X2))) = s('type.option.option'(X0),'const.option.OPTION_BIND_2'(s('type.option.option'(X1),'const.option.SOME_1'(s(X1,X2))),s(fun(X1,'type.option.option'(X0)),X3)))),
  inference(rectify,[],[f18])).
fof(f18,axiom,(
  ! [X6,X7] : ! [X10,X8] : s('type.option.option'(X6),happ(s(fun(X7,'type.option.option'(X6)),X8),s(X7,X10))) = s('type.option.option'(X6),'const.option.OPTION_BIND_2'(s('type.option.option'(X7),'const.option.SOME_1'(s(X7,X10))),s(fun(X7,'type.option.option'(X6)),X8)))),
  file('thm.option.OPTION_MCOMP_ID|split|1','thm.option.OPTION_BIND_def|split|1')).
fof(f74,plain,(
  ( ! [X0,X1] : (s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X1))) = s('type.option.option'(X0),happ(s(fun(X0,'type.option.option'(X0)),'const.option.SOME_0'),s(X0,X1)))) )),
  inference(cnf_transformation,[],[f33])).
fof(f33,plain,(
  ! [X0,X1] : s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X1))) = s('type.option.option'(X0),happ(s(fun(X0,'type.option.option'(X0)),'const.option.SOME_0'),s(X0,X1)))),
  inference(flattening,[],[f32])).
fof(f32,plain,(
  ! [X0] : ! [X1] : s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X1))) = s('type.option.option'(X0),happ(s(fun(X0,'type.option.option'(X0)),'const.option.SOME_0'),s(X0,X1)))),
  inference(rectify,[],[f20])).
fof(f20,axiom,(
  ! [X6] : ! [X15] : s('type.option.option'(X6),'const.option.SOME_1'(s(X6,X15))) = s('type.option.option'(X6),happ(s(fun(X6,'type.option.option'(X6)),'const.option.SOME_0'),s(X6,X15)))),
  file('thm.option.OPTION_MCOMP_ID|split|1','ARITY_0_1_const.option.SOME')).
fof(f525,plain,(
  $false | $spl1),
  inference(subsumption_resolution,[],[f524,f159])).
fof(f524,plain,(
  s('type.option.option'(sK1),happ(s(fun(sK0,'type.option.option'(sK1)),sK2),s(sK0,sK3('const.option.OPTION_MCOMP_2'(s(fun(sK1,'type.option.option'(sK1)),'const.option.SOME_0'),s(fun(sK0,'type.option.option'(sK1)),sK2)),sK2,sK0,'type.option.option'(sK1))))) = s('type.option.option'(sK1),'const.option.OPTION_MCOMP_3'(s(fun(sK1,'type.option.option'(sK1)),'const.option.SOME_0'),s(fun(sK0,'type.option.option'(sK1)),sK2),s(sK0,sK3('const.option.OPTION_MCOMP_2'(s(fun(sK1,'type.option.option'(sK1)),'const.option.SOME_0'),s(fun(sK0,'type.option.option'(sK1)),sK2)),sK2,sK0,'type.option.option'(sK1))))) | $spl1),
  inference(forward_demodulation,[],[f507,f186])).
fof(f507,plain,(
  s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,sK4(happ(s(fun(sK0,'type.option.option'(sK1)),sK2),s(sK0,sK3('const.option.OPTION_MCOMP_2'(s(fun(sK1,'type.option.option'(sK1)),'const.option.SOME_0'),s(fun(sK0,'type.option.option'(sK1)),sK2)),sK2,sK0,'type.option.option'(sK1)))),sK1)))) = s('type.option.option'(sK1),'const.option.OPTION_MCOMP_3'(s(fun(sK1,'type.option.option'(sK1)),'const.option.SOME_0'),s(fun(sK0,'type.option.option'(sK1)),sK2),s(sK0,sK3('const.option.OPTION_MCOMP_2'(s(fun(sK1,'type.option.option'(sK1)),'const.option.SOME_0'),s(fun(sK0,'type.option.option'(sK1)),sK2)),sK2,sK0,'type.option.option'(sK1))))) | $spl1),
  inference(superposition,[],[f212,f74])).
fof(f239,plain,(
  s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),happ(s(fun(sK0,'type.option.option'(sK1)),sK2),s(sK0,sK3(sK2,'const.option.OPTION_MCOMP_2'(s(fun(sK1,'type.option.option'(sK1)),'const.option.SOME_0'),s(fun(sK0,'type.option.option'(sK1)),sK2)),sK0,'type.option.option'(sK1))))) | $spl5),
  inference(cnf_transformation,[],[f239_D])).
fof(f239_D,plain,(
  s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),happ(s(fun(sK0,'type.option.option'(sK1)),sK2),s(sK0,sK3(sK2,'const.option.OPTION_MCOMP_2'(s(fun(sK1,'type.option.option'(sK1)),'const.option.SOME_0'),s(fun(sK0,'type.option.option'(sK1)),sK2)),sK0,'type.option.option'(sK1))))) <=> ~$spl5),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl5])])).
fof(f241,plain,(
  s('type.option.option'(sK1),'const.option.OPTION_MCOMP_3'(s(fun(sK1,'type.option.option'(sK1)),'const.option.SOME_0'),s(fun(sK0,'type.option.option'(sK1)),sK2),s(sK0,sK3(sK2,'const.option.OPTION_MCOMP_2'(s(fun(sK1,'type.option.option'(sK1)),'const.option.SOME_0'),s(fun(sK0,'type.option.option'(sK1)),sK2)),sK0,'type.option.option'(sK1))))) = s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,sK4(happ(s(fun(sK0,'type.option.option'(sK1)),'const.option.OPTION_MCOMP_2'(s(fun(sK1,'type.option.option'(sK1)),'const.option.SOME_0'),s(fun(sK0,'type.option.option'(sK1)),sK2))),s(sK0,sK3(sK2,'const.option.OPTION_MCOMP_2'(s(fun(sK1,'type.option.option'(sK1)),'const.option.SOME_0'),s(fun(sK0,'type.option.option'(sK1)),sK2)),sK0,'type.option.option'(sK1)))),sK1)))) | $spl6),
  inference(cnf_transformation,[],[f241_D])).
fof(f241_D,plain,(
  s('type.option.option'(sK1),'const.option.OPTION_MCOMP_3'(s(fun(sK1,'type.option.option'(sK1)),'const.option.SOME_0'),s(fun(sK0,'type.option.option'(sK1)),sK2),s(sK0,sK3(sK2,'const.option.OPTION_MCOMP_2'(s(fun(sK1,'type.option.option'(sK1)),'const.option.SOME_0'),s(fun(sK0,'type.option.option'(sK1)),sK2)),sK0,'type.option.option'(sK1))))) = s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,sK4(happ(s(fun(sK0,'type.option.option'(sK1)),'const.option.OPTION_MCOMP_2'(s(fun(sK1,'type.option.option'(sK1)),'const.option.SOME_0'),s(fun(sK0,'type.option.option'(sK1)),sK2))),s(sK0,sK3(sK2,'const.option.OPTION_MCOMP_2'(s(fun(sK1,'type.option.option'(sK1)),'const.option.SOME_0'),s(fun(sK0,'type.option.option'(sK1)),sK2)),sK0,'type.option.option'(sK1)))),sK1)))) <=> ~$spl6),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl6])])).
fof(f237,plain,(
  s('type.option.option'(sK1),'const.option.OPTION_MCOMP_3'(s(fun(sK1,'type.option.option'(sK1)),'const.option.SOME_0'),s(fun(sK0,'type.option.option'(sK1)),sK2),s(sK0,sK3(sK2,'const.option.OPTION_MCOMP_2'(s(fun(sK1,'type.option.option'(sK1)),'const.option.SOME_0'),s(fun(sK0,'type.option.option'(sK1)),sK2)),sK0,'type.option.option'(sK1))))) = s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,sK4(happ(s(fun(sK0,'type.option.option'(sK1)),'const.option.OPTION_MCOMP_2'(s(fun(sK1,'type.option.option'(sK1)),'const.option.SOME_0'),s(fun(sK0,'type.option.option'(sK1)),sK2))),s(sK0,sK3(sK2,'const.option.OPTION_MCOMP_2'(s(fun(sK1,'type.option.option'(sK1)),'const.option.SOME_0'),s(fun(sK0,'type.option.option'(sK1)),sK2)),sK0,'type.option.option'(sK1)))),sK1)))) | s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),happ(s(fun(sK0,'type.option.option'(sK1)),sK2),s(sK0,sK3(sK2,'const.option.OPTION_MCOMP_2'(s(fun(sK1,'type.option.option'(sK1)),'const.option.SOME_0'),s(fun(sK0,'type.option.option'(sK1)),sK2)),sK0,'type.option.option'(sK1)))))),
  inference(forward_demodulation,[],[f232,f73])).
fof(f232,plain,(
  s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),happ(s(fun(sK0,'type.option.option'(sK1)),sK2),s(sK0,sK3(sK2,'const.option.OPTION_MCOMP_2'(s(fun(sK1,'type.option.option'(sK1)),'const.option.SOME_0'),s(fun(sK0,'type.option.option'(sK1)),sK2)),sK0,'type.option.option'(sK1))))) | s('type.option.option'(sK1),happ(s(fun(sK0,'type.option.option'(sK1)),'const.option.OPTION_MCOMP_2'(s(fun(sK1,'type.option.option'(sK1)),'const.option.SOME_0'),s(fun(sK0,'type.option.option'(sK1)),sK2))),s(sK0,sK3(sK2,'const.option.OPTION_MCOMP_2'(s(fun(sK1,'type.option.option'(sK1)),'const.option.SOME_0'),s(fun(sK0,'type.option.option'(sK1)),sK2)),sK0,'type.option.option'(sK1))))) = s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,sK4(happ(s(fun(sK0,'type.option.option'(sK1)),'const.option.OPTION_MCOMP_2'(s(fun(sK1,'type.option.option'(sK1)),'const.option.SOME_0'),s(fun(sK0,'type.option.option'(sK1)),sK2))),s(sK0,sK3(sK2,'const.option.OPTION_MCOMP_2'(s(fun(sK1,'type.option.option'(sK1)),'const.option.SOME_0'),s(fun(sK0,'type.option.option'(sK1)),sK2)),sK0,'type.option.option'(sK1)))),sK1))))),
  inference(superposition,[],[f176,f97])).
fof(f176,plain,(
  s('type.option.option'(sK1),happ(s(fun(sK0,'type.option.option'(sK1)),sK2),s(sK0,sK3(sK2,'const.option.OPTION_MCOMP_2'(s(fun(sK1,'type.option.option'(sK1)),'const.option.SOME_0'),s(fun(sK0,'type.option.option'(sK1)),sK2)),sK0,'type.option.option'(sK1))))) != s('type.option.option'(sK1),happ(s(fun(sK0,'type.option.option'(sK1)),'const.option.OPTION_MCOMP_2'(s(fun(sK1,'type.option.option'(sK1)),'const.option.SOME_0'),s(fun(sK0,'type.option.option'(sK1)),sK2))),s(sK0,sK3(sK2,'const.option.OPTION_MCOMP_2'(s(fun(sK1,'type.option.option'(sK1)),'const.option.SOME_0'),s(fun(sK0,'type.option.option'(sK1)),sK2)),sK0,'type.option.option'(sK1)))))),
  inference(equality_resolution,[],[f105])).
fof(f105,plain,(
  ( ! [X1] : (s(fun(sK0,'type.option.option'(sK1)),sK2) != s(fun(sK0,'type.option.option'(sK1)),X1) | s('type.option.option'(sK1),happ(s(fun(sK0,'type.option.option'(sK1)),X1),s(sK0,sK3(X1,'const.option.OPTION_MCOMP_2'(s(fun(sK1,'type.option.option'(sK1)),'const.option.SOME_0'),s(fun(sK0,'type.option.option'(sK1)),sK2)),sK0,'type.option.option'(sK1))))) != s('type.option.option'(sK1),happ(s(fun(sK0,'type.option.option'(sK1)),'const.option.OPTION_MCOMP_2'(s(fun(sK1,'type.option.option'(sK1)),'const.option.SOME_0'),s(fun(sK0,'type.option.option'(sK1)),sK2))),s(sK0,sK3(X1,'const.option.OPTION_MCOMP_2'(s(fun(sK1,'type.option.option'(sK1)),'const.option.SOME_0'),s(fun(sK0,'type.option.option'(sK1)),sK2)),sK0,'type.option.option'(sK1)))))) )),
  inference(superposition,[],[f66,f68])).
fof(f169,plain,(
  s('type.option.option'(sK1),'const.option.OPTION_MCOMP_3'(s(fun(sK1,'type.option.option'(sK1)),'const.option.SOME_0'),s(fun(sK0,'type.option.option'(sK1)),sK2),s(sK0,sK3('const.option.OPTION_MCOMP_2'(s(fun(sK1,'type.option.option'(sK1)),'const.option.SOME_0'),s(fun(sK0,'type.option.option'(sK1)),sK2)),sK2,sK0,'type.option.option'(sK1))))) = s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,sK4(happ(s(fun(sK0,'type.option.option'(sK1)),'const.option.OPTION_MCOMP_2'(s(fun(sK1,'type.option.option'(sK1)),'const.option.SOME_0'),s(fun(sK0,'type.option.option'(sK1)),sK2))),s(sK0,sK3('const.option.OPTION_MCOMP_2'(s(fun(sK1,'type.option.option'(sK1)),'const.option.SOME_0'),s(fun(sK0,'type.option.option'(sK1)),sK2)),sK2,sK0,'type.option.option'(sK1)))),sK1)))) | $spl2),
  inference(cnf_transformation,[],[f169_D])).
fof(f169_D,plain,(
  s('type.option.option'(sK1),'const.option.OPTION_MCOMP_3'(s(fun(sK1,'type.option.option'(sK1)),'const.option.SOME_0'),s(fun(sK0,'type.option.option'(sK1)),sK2),s(sK0,sK3('const.option.OPTION_MCOMP_2'(s(fun(sK1,'type.option.option'(sK1)),'const.option.SOME_0'),s(fun(sK0,'type.option.option'(sK1)),sK2)),sK2,sK0,'type.option.option'(sK1))))) = s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,sK4(happ(s(fun(sK0,'type.option.option'(sK1)),'const.option.OPTION_MCOMP_2'(s(fun(sK1,'type.option.option'(sK1)),'const.option.SOME_0'),s(fun(sK0,'type.option.option'(sK1)),sK2))),s(sK0,sK3('const.option.OPTION_MCOMP_2'(s(fun(sK1,'type.option.option'(sK1)),'const.option.SOME_0'),s(fun(sK0,'type.option.option'(sK1)),sK2)),sK2,sK0,'type.option.option'(sK1)))),sK1)))) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f165,plain,(
  s('type.option.option'(sK1),'const.option.OPTION_MCOMP_3'(s(fun(sK1,'type.option.option'(sK1)),'const.option.SOME_0'),s(fun(sK0,'type.option.option'(sK1)),sK2),s(sK0,sK3('const.option.OPTION_MCOMP_2'(s(fun(sK1,'type.option.option'(sK1)),'const.option.SOME_0'),s(fun(sK0,'type.option.option'(sK1)),sK2)),sK2,sK0,'type.option.option'(sK1))))) = s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,sK4(happ(s(fun(sK0,'type.option.option'(sK1)),'const.option.OPTION_MCOMP_2'(s(fun(sK1,'type.option.option'(sK1)),'const.option.SOME_0'),s(fun(sK0,'type.option.option'(sK1)),sK2))),s(sK0,sK3('const.option.OPTION_MCOMP_2'(s(fun(sK1,'type.option.option'(sK1)),'const.option.SOME_0'),s(fun(sK0,'type.option.option'(sK1)),sK2)),sK2,sK0,'type.option.option'(sK1)))),sK1)))) | s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),happ(s(fun(sK0,'type.option.option'(sK1)),sK2),s(sK0,sK3('const.option.OPTION_MCOMP_2'(s(fun(sK1,'type.option.option'(sK1)),'const.option.SOME_0'),s(fun(sK0,'type.option.option'(sK1)),sK2)),sK2,sK0,'type.option.option'(sK1)))))),
  inference(forward_demodulation,[],[f160,f73])).
fof(f160,plain,(
  s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),happ(s(fun(sK0,'type.option.option'(sK1)),sK2),s(sK0,sK3('const.option.OPTION_MCOMP_2'(s(fun(sK1,'type.option.option'(sK1)),'const.option.SOME_0'),s(fun(sK0,'type.option.option'(sK1)),sK2)),sK2,sK0,'type.option.option'(sK1))))) | s('type.option.option'(sK1),happ(s(fun(sK0,'type.option.option'(sK1)),'const.option.OPTION_MCOMP_2'(s(fun(sK1,'type.option.option'(sK1)),'const.option.SOME_0'),s(fun(sK0,'type.option.option'(sK1)),sK2))),s(sK0,sK3('const.option.OPTION_MCOMP_2'(s(fun(sK1,'type.option.option'(sK1)),'const.option.SOME_0'),s(fun(sK0,'type.option.option'(sK1)),sK2)),sK2,sK0,'type.option.option'(sK1))))) = s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,sK4(happ(s(fun(sK0,'type.option.option'(sK1)),'const.option.OPTION_MCOMP_2'(s(fun(sK1,'type.option.option'(sK1)),'const.option.SOME_0'),s(fun(sK0,'type.option.option'(sK1)),sK2))),s(sK0,sK3('const.option.OPTION_MCOMP_2'(s(fun(sK1,'type.option.option'(sK1)),'const.option.SOME_0'),s(fun(sK0,'type.option.option'(sK1)),sK2)),sK2,sK0,'type.option.option'(sK1)))),sK1))))),
  inference(superposition,[],[f150,f97])).
% SZS output end Proof for thm.option
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 54
% Passive clauses: 277
% Generated clauses: 473
% Final active clauses: 42
% Final passive clauses: 171
% Input formulas: 20
% Initial clauses: 32
% 
% Selected by SInE selection: 19
% SInE iterations: 1
% 
% Duplicate literals: 1
% Trivial inequalities: 15
% Fw subsumption resolutions: 14
% Fw demodulations: 79
% Bw demodulations: 2
% 
% Simple tautologies: 13
% Equational tautologies: 1
% Forward subsumptions: 77
% 
% Forward superposition: 282
% Backward superposition: 71
% Equality resolution: 4
% 
% Split clauses: 3
% Split components: 6
% SAT solver clauses: 7
% SAT solver unit clauses: 3
% SAT solver binary clauses: 3
% 
% Sat splits: 3
% Sat splitting refutations: 3
% 
% Memory used [KB]: 1791
% Time elapsed: 0.020 s
% ------------------------------
% ------------------------------
% Success in time 11.74 s
