Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.integer
% (85763)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 704
% Passive clauses: 9634
% Generated clauses: 24054
% Final active clauses: 687
% Final passive clauses: 8411
% Input formulas: 69
% Initial clauses: 246
% 
% Duplicate literals: 352
% Trivial inequalities: 88
% Fw subsumption resolutions: 1752
% Fw demodulations: 1596
% Bw demodulations: 5
% 
% Simple tautologies: 254
% Equational tautologies: 74
% Forward subsumptions: 9333
% Fw demodulations to eq. taut.: 5
% 
% Binary resolution: 11630
% Factoring: 1055
% Forward superposition: 2995
% Backward superposition: 3987
% Self superposition: 53
% Equality factoring: 26
% Equality resolution: 28
% 
% Split clauses: 809
% Split components: 1620
% SAT solver clauses: 1339
% SAT solver unit clauses: 22
% SAT solver binary clauses: 170
% SAT solver learnt clauses: 1
% SAT solver learnt literals: 1
% 
% Sat splits: 809
% Sat splitting refutations: 7
% 
% TWLsolver clauses: 1338
% TWLsolver calls for satisfiability: 395
% 
% Memory used [KB]: 11641
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 143 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.integer
% (85789)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 376
% Passive clauses: 2896
% Generated clauses: 18134
% Final active clauses: 305
% Final passive clauses: 2275
% Input formulas: 69
% Initial clauses: 246
% 
% Duplicate literals: 89
% Trivial inequalities: 118
% Fw subsumption resolutions: 546
% Fw demodulations: 4085
% Bw demodulations: 250
% Condensations: 28
% Global subsumptions: 18
% 
% Simple tautologies: 273
% Equational tautologies: 10
% Forward subsumptions: 6554
% Fw demodulations to eq. taut.: 32
% 
% Binary resolution: 905
% Factoring: 10
% Forward superposition: 3655
% Backward superposition: 4314
% Self superposition: 45
% Equality factoring: 2
% Equality resolution: 22
% 
% Split clauses: 117
% Split components: 234
% SAT solver clauses: 3632
% SAT solver unit clauses: 240
% SAT solver binary clauses: 113
% SAT solver learnt clauses: 37
% SAT solver learnt literals: 11
% 
% Sat splits: 117
% Sat splitting refutations: 40
% 
% TWLsolver clauses: 3559
% TWLsolver calls for satisfiability: 2037
% 
% Memory used [KB]: 20724
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 136 next slice time: 103
lrs+11_2_br=off:cond=on:fde=none:gs=on:gsaa=full_model:lwlo=on:nwc=2:sas=minisat:stl=30:ssfp=100000:ssfq=1.4:smm=sco:ssnc=none:sp=occurrence:urr=on_98 on thm.integer
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.integer
% SZS output start Proof for thm.integer
fof(f10393,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f329,f601,f599,f328,f600,f598,f642,f648,f649,f651,f654,f656,f3863,f3866,f3906,f3904,f6113,f6117,f6120,f6123,f6126,f6129,f6132,f6135,f6138,f6141,f6144,f6147,f6150,f6153,f6156,f6159,f6162,f6165,f6209,f6114,f6211,f6118,f6213,f6121,f6215,f6124,f6217,f6127,f6219,f6130,f6221,f6133,f6223,f6136,f6225,f6139,f6227,f6142,f6229,f6145,f6231,f6148,f6233,f6151,f6235,f6154,f6237,f6157,f6239,f6160,f6241,f6163,f6243,f6115,f6166,f6503,f6504,f6515,f6523,f6527,f6531,f6538,f6540,f6542,f6544,f6546,f6548,f6550,f6552,f6554,f6556,f6558,f6560,f6562,f6564,f6566,f6568,f6570,f6572,f6574,f6576,f6578,f6585,f6591,f6597,f6603,f6609,f6615,f6621,f6627,f6633,f6638,f6640,f6642,f6644,f6646,f6648,f6650,f6652,f6654,f6656,f6658,f6660,f6662,f6664,f6666,f6668,f6670,f6672,f6674,f6676,f6678,f6680,f6695,f6699,f6705,f6711,f6713,f6719,f6723,f6725,f6727,f6735,f6739,f6743,f6747,f6751,f6755,f6759,f6763,f6767,f6771,f6775,f6779,f6783,f6787,f9143,f9270,f9271,f9273,f9274,f9299,f9265,f9267,f9900,f9989,f9987,f10363])).
fof(f10363,plain,(
  $false | ($spl0 | $spl3)),
  inference(subsumption_resolution,[],[f10362,f602])).
fof(f602,plain,(
  ~p(s(bool,'F_0'))),
  inference(subsumption_resolution,[],[f333,f330])).
fof(f330,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f11])).
fof(f11,axiom,(
  p(s(bool,'T_0'))),
  file('thm.integer.INT_NEG_SAME_EQ','thm.bool.TRUTH')).
fof(f333,plain,(
  ~p(s(bool,'T_0')) | ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f217])).
fof(f217,plain,(
  (p(s(bool,'T_0')) | p(s(bool,'F_0'))) & (~p(s(bool,'F_0')) | ~p(s(bool,'T_0')))),
  inference(nnf_transformation,[],[f72])).
fof(f72,plain,(
  ~p(s(bool,'T_0')) <=> p(s(bool,'F_0'))),
  inference(flattening,[],[f17])).
fof(f17,axiom,(
  ~p(s(bool,'T_0')) <=> p(s(bool,'F_0'))),
  file('thm.integer.INT_NEG_SAME_EQ','thm.bool.NOT_CLAUSES|split|1')).
fof(f10362,plain,(
  p(s(bool,'F_0')) | ($spl0 | $spl3)),
  inference(forward_demodulation,[],[f10361,f3910])).
fof(f3910,plain,(
  s(bool,'F_0') = s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK12))) | ($spl0 | $spl3)),
  inference(subsumption_resolution,[],[f3870,f3908])).
fof(f3908,plain,(
  ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',sK12),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | ($spl0 | $spl3)),
  inference(subsumption_resolution,[],[f3907,f601])).
fof(f3907,plain,(
  ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',sK12),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.integer.int',sK12) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | $spl0),
  inference(subsumption_resolution,[],[f3864,f464])).
fof(f464,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X0),s('type.integer.int',X1)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X1),s('type.integer.int',X0))))) )),
  inference(cnf_transformation,[],[f277])).
fof(f277,plain,(
  ! [X0,X1] : ((p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X0),s('type.integer.int',X1)))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X1),s('type.integer.int',X0))))) & (~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X1),s('type.integer.int',X0)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X0),s('type.integer.int',X1))))))),
  inference(nnf_transformation,[],[f146])).
fof(f146,plain,(
  ! [X0,X1] : (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X0),s('type.integer.int',X1)))) <=> p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X1),s('type.integer.int',X0)))))),
  inference(flattening,[],[f145])).
fof(f145,plain,(
  ! [X0,X1] : (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X0),s('type.integer.int',X1)))) <=> p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X1),s('type.integer.int',X0)))))),
  inference(rectify,[],[f36])).
fof(f36,axiom,(
  ! [X8,X9] : (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X8),s('type.integer.int',X9)))) <=> p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X9),s('type.integer.int',X8)))))),
  file('thm.integer.INT_NEG_SAME_EQ','thm.integer.INT_NOT_LE')).
fof(f3864,plain,(
  ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',sK12),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK12)))) | s('type.integer.int',sK12) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | $spl0),
  inference(superposition,[],[f427,f2115])).
fof(f2115,plain,(
  s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK12))) = s(bool,'const.integer.int_le_2'(s('type.integer.int',sK12),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | $spl0),
  inference(superposition,[],[f339,f598])).
fof(f339,plain,(
  ( ! [X0] : (s(bool,'const.integer.int_le_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) = s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X0)))))) )),
  inference(cnf_transformation,[],[f77])).
fof(f77,plain,(
  ! [X0] : s(bool,'const.integer.int_le_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) = s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X0)))))),
  inference(rectify,[],[f38])).
fof(f38,axiom,(
  ! [X8] : s(bool,'const.integer.int_le_2'(s('type.integer.int',X8),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) = s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X8)))))),
  file('thm.integer.INT_NEG_SAME_EQ','thm.integer.INT_NEG_GE|48|')).
fof(f427,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X0),s('type.integer.int',X1)))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int',X1)))) | s('type.integer.int',X0) = s('type.integer.int',X1)) )),
  inference(cnf_transformation,[],[f262])).
fof(f262,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X0),s('type.integer.int',X1)))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int',X1)))) | s('type.integer.int',X0) = s('type.integer.int',X1)) & ((~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int',X1)))) & s('type.integer.int',X0) != s('type.integer.int',X1)) | p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X0),s('type.integer.int',X1))))))),
  inference(flattening,[],[f261])).
fof(f261,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X0),s('type.integer.int',X1)))) | (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int',X1)))) | s('type.integer.int',X0) = s('type.integer.int',X1))) & ((~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int',X1)))) & s('type.integer.int',X0) != s('type.integer.int',X1)) | p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X0),s('type.integer.int',X1))))))),
  inference(nnf_transformation,[],[f135])).
fof(f135,plain,(
  ! [X0,X1] : (p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X0),s('type.integer.int',X1)))) <=> (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int',X1)))) | s('type.integer.int',X0) = s('type.integer.int',X1)))),
  inference(rectify,[],[f35])).
fof(f35,axiom,(
  ! [X8,X9] : (p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X8),s('type.integer.int',X9)))) <=> (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X8),s('type.integer.int',X9)))) | s('type.integer.int',X8) = s('type.integer.int',X9)))),
  file('thm.integer.INT_NEG_SAME_EQ','thm.integer.INT_LE_LT')).
fof(f3870,plain,(
  p(s(bool,'const.integer.int_le_2'(s('type.integer.int',sK12),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s(bool,'F_0') = s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK12))) | $spl0),
  inference(superposition,[],[f361,f2115])).
fof(f361,plain,(
  ( ! [X0] : (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f222])).
fof(f222,plain,(
  ! [X0] : ((s(bool,'F_0') != s(bool,X0) | ~p(s(bool,X0))) & (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f95])).
fof(f95,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(flattening,[],[f94])).
fof(f94,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(rectify,[],[f56])).
fof(f56,axiom,(
  ! [X13] : (s(bool,'F_0') = s(bool,X13) <=> ~p(s(bool,X13)))),
  file('thm.integer.INT_NEG_SAME_EQ','thm.bool.EQ_CLAUSES|split|3')).
fof(f10361,plain,(
  p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK12)))) | ($spl0 | $spl3)),
  inference(subsumption_resolution,[],[f10306,f330])).
fof(f10306,plain,(
  ~p(s(bool,'T_0')) | p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK12)))) | ($spl0 | $spl3)),
  inference(superposition,[],[f428,f10156])).
fof(f10156,plain,(
  s(bool,'T_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK12))) | ($spl0 | $spl3)),
  inference(condensation,[],[f10155])).
fof(f10155,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK12))) | s(bool,'T_0') = s(bool,X0)) ) | ($spl0 | $spl3)),
  inference(subsumption_resolution,[],[f10100,f357])).
fof(f357,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f220])).
fof(f220,plain,(
  ! [X0] : ((s(bool,'T_0') != s(bool,X0) | p(s(bool,X0))) & (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f92])).
fof(f92,plain,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) <=> p(s(bool,X0)))),
  inference(rectify,[],[f57])).
fof(f57,axiom,(
  ! [X13] : (s(bool,'T_0') = s(bool,X13) <=> p(s(bool,X13)))),
  file('thm.integer.INT_NEG_SAME_EQ','thm.bool.EQ_CLAUSES|split|1')).
fof(f10100,plain,(
  ( ! [X0] : (p(s(bool,X0)) | s(bool,'T_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK12))) | s(bool,'T_0') = s(bool,X0)) ) | ($spl0 | $spl3)),
  inference(superposition,[],[f1368,f5282])).
fof(f5282,plain,(
  ( ! [X10] : (s(bool,X10) = s(bool,'const.integer.int_le_2'(s('type.integer.int',sK12),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X10)) ) | ($spl0 | $spl3)),
  inference(subsumption_resolution,[],[f5277,f602])).
fof(f5277,plain,(
  ( ! [X10] : (p(s(bool,'F_0')) | s(bool,X10) = s(bool,'const.integer.int_le_2'(s('type.integer.int',sK12),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X10)) ) | ($spl0 | $spl3)),
  inference(superposition,[],[f792,f3911])).
fof(f3911,plain,(
  s(bool,'F_0') = s(bool,'const.integer.int_le_2'(s('type.integer.int',sK12),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | ($spl0 | $spl3)),
  inference(backward_demodulation,[],[f3910,f2115])).
fof(f792,plain,(
  ( ! [X2,X3] : (p(s(bool,X3)) | s(bool,X2) = s(bool,X3) | s(bool,'T_0') = s(bool,X2)) )),
  inference(subsumption_resolution,[],[f789,f602])).
fof(f789,plain,(
  ( ! [X2,X3] : (p(s(bool,'F_0')) | p(s(bool,X3)) | s(bool,X2) = s(bool,X3) | s(bool,'T_0') = s(bool,X2)) )),
  inference(superposition,[],[f420,f341])).
fof(f341,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f3])).
fof(f3,axiom,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) | s(bool,'F_0') = s(bool,X0))),
  file('thm.integer.INT_NEG_SAME_EQ',aHL_BOOL_CASES)).
fof(f420,plain,(
  ( ! [X0,X1] : (p(s(bool,X1)) | p(s(bool,X0)) | s(bool,X0) = s(bool,X1)) )),
  inference(cnf_transformation,[],[f182])).
fof(f182,plain,(
  ! [X0,X1] : ((p(s(bool,X0)) & ~p(s(bool,X1))) | (p(s(bool,X1)) & ~p(s(bool,X0))) | s(bool,X0) = s(bool,X1))),
  inference(flattening,[],[f181])).
fof(f181,plain,(
  ! [X0,X1] : ((p(s(bool,X0)) & ~p(s(bool,X1))) | ((p(s(bool,X1)) & ~p(s(bool,X0))) | s(bool,X0) = s(bool,X1)))),
  inference(ennf_transformation,[],[f128])).
fof(f128,plain,(
  ! [X0,X1] : ((p(s(bool,X0)) => p(s(bool,X1))) => ((p(s(bool,X1)) => p(s(bool,X0))) => s(bool,X0) = s(bool,X1)))),
  inference(rectify,[],[f16])).
fof(f16,axiom,(
  ! [X14,X15] : ((p(s(bool,X14)) => p(s(bool,X15))) => ((p(s(bool,X15)) => p(s(bool,X14))) => s(bool,X14) = s(bool,X15)))),
  file('thm.integer.INT_NEG_SAME_EQ','thm.bool.IMP_ANTISYM_AX')).
fof(f1368,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X1),s('type.integer.int',X0)))) | s(bool,'T_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int',X1)))) )),
  inference(subsumption_resolution,[],[f1359,f602])).
fof(f1359,plain,(
  ( ! [X0,X1] : (p(s(bool,'F_0')) | p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X1),s('type.integer.int',X0)))) | s(bool,'T_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int',X1)))) )),
  inference(superposition,[],[f463,f341])).
fof(f463,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X1),s('type.integer.int',X0)))) | p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X0),s('type.integer.int',X1))))) )),
  inference(cnf_transformation,[],[f277])).
fof(f428,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int',X1)))) | p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X0),s('type.integer.int',X1))))) )),
  inference(cnf_transformation,[],[f262])).
fof(f9987,plain,(
  ( ! [X0] : (s(bool,X0) = s(bool,'const.integer.int_le_2'(s('type.integer.int',sK12),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) ) | $spl54),
  inference(cnf_transformation,[],[f9987_D])).
fof(f9987_D,plain,(
  ( ! [X0] : (s(bool,X0) = s(bool,'const.integer.int_le_2'(s('type.integer.int',sK12),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) ) <=> ~$spl54),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl54])])).
fof(f9989,plain,(
  s(bool,'T_0') != s(bool,'const.integer.int_le_2'(s('type.integer.int',sK12),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | $spl57),
  inference(cnf_transformation,[],[f9989_D])).
fof(f9989_D,plain,(
  s(bool,'T_0') != s(bool,'const.integer.int_le_2'(s('type.integer.int',sK12),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) <=> ~$spl57),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl57])])).
fof(f9900,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,'const.integer.int_le_2'(s('type.integer.int',sK12),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,X0) = s(bool,'const.integer.int_le_2'(s('type.integer.int',sK12),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) ) | ($spl0 | $spl3)),
  inference(equality_factoring,[],[f5282])).
fof(f9267,plain,(
  s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',sK12),s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',sK12),s('type.integer.int',sK12))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',sK12),s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',sK12),s('type.integer.int',sK12))))))) | $spl48),
  inference(cnf_transformation,[],[f9267_D])).
fof(f9267_D,plain,(
  s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',sK12),s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',sK12),s('type.integer.int',sK12))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',sK12),s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',sK12),s('type.integer.int',sK12))))))) <=> ~$spl48),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl48])])).
fof(f9265,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',sK12),s('type.integer.int',sK12))) | $spl46),
  inference(cnf_transformation,[],[f9265_D])).
fof(f9265_D,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',sK12),s('type.integer.int',sK12))) <=> ~$spl46),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl46])])).
fof(f9299,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',sK12),s('type.integer.int',sK12))) | s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',sK12),s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',sK12),s('type.integer.int',sK12))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',sK12),s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',sK12),s('type.integer.int',sK12))))))) | ($spl0 | $spl3)),
  inference(forward_demodulation,[],[f9298,f4206])).
fof(f4206,plain,(
  s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',sK12),s('type.integer.int',sK12))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',sK12),s('type.integer.int',sK12))))) | ($spl0 | $spl3)),
  inference(superposition,[],[f2823,f598])).
fof(f2823,plain,(
  ( ! [X0] : (s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X0),s('type.integer.int',sK12))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X0))),s('type.integer.int',sK12)))))) ) | ($spl0 | $spl3)),
  inference(forward_demodulation,[],[f2728,f598])).
fof(f2728,plain,(
  ( ! [X0] : (s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK12))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X0))),s('type.integer.int',sK12)))))) ) | $spl3),
  inference(unit_resulting_resolution,[],[f601,f425])).
fof(f425,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X1))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X0))),s('type.integer.int',X1))))) | s('type.integer.int',X1) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(cnf_transformation,[],[f184])).
fof(f184,plain,(
  ! [X0,X1] : (s('type.integer.int',X1) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X1))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X0))),s('type.integer.int',X1))))))),
  inference(ennf_transformation,[],[f132])).
fof(f132,plain,(
  ! [X0,X1] : (s('type.integer.int',X1) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) => s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X1))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X0))),s('type.integer.int',X1))))))),
  inference(flattening,[],[f131])).
fof(f131,plain,(
  ! [X0,X1] : (~s('type.integer.int',X1) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) => s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X1))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X0))),s('type.integer.int',X1))))))),
  inference(rectify,[],[f9])).
fof(f9,axiom,(
  ! [X6,X10] : (~s('type.integer.int',X10) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) => s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X6),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X10))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X6))),s('type.integer.int',X10))))))),
  file('thm.integer.INT_NEG_SAME_EQ','thm.integer.INT_MOD_NEG')).
fof(f9298,plain,(
  s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',sK12),s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',sK12),s('type.integer.int',sK12))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',sK12),s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',sK12),s('type.integer.int',sK12))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',sK12),s('type.integer.int',sK12))))) | ($spl0 | $spl3)),
  inference(forward_demodulation,[],[f9247,f4206])).
fof(f9247,plain,(
  s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',sK12),s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',sK12),s('type.integer.int',sK12))))))) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',sK12),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',sK12),s('type.integer.int',sK12))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',sK12),s('type.integer.int',sK12))))) | ($spl0 | $spl3)),
  inference(superposition,[],[f2743,f4206])).
fof(f2743,plain,(
  ( ! [X7] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',sK12),s('type.integer.int',X7))))) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',sK12),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X7))))) | s('type.integer.int',X7) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl0),
  inference(superposition,[],[f425,f598])).
fof(f9274,plain,(
  ( ! [X16] : (s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X16),s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',sK12),s('type.integer.int',sK12))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X16))),s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',sK12),s('type.integer.int',sK12)))))))) ) | $spl52),
  inference(cnf_transformation,[],[f9274_D])).
fof(f9274_D,plain,(
  ( ! [X16] : (s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X16),s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',sK12),s('type.integer.int',sK12))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X16))),s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',sK12),s('type.integer.int',sK12)))))))) ) <=> ~$spl52),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl52])])).
fof(f9273,plain,(
  ( ! [X16] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',sK12),s('type.integer.int',sK12))) | s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X16),s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',sK12),s('type.integer.int',sK12))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X16))),s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',sK12),s('type.integer.int',sK12)))))))) ) | ($spl0 | $spl3)),
  inference(forward_demodulation,[],[f9272,f4206])).
fof(f9272,plain,(
  ( ! [X16] : (s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X16),s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',sK12),s('type.integer.int',sK12))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X16))),s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',sK12),s('type.integer.int',sK12))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',sK12),s('type.integer.int',sK12)))))) ) | ($spl0 | $spl3)),
  inference(forward_demodulation,[],[f9158,f4206])).
fof(f9158,plain,(
  ( ! [X16] : (s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X16),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',sK12),s('type.integer.int',sK12))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X16))),s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',sK12),s('type.integer.int',sK12))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',sK12),s('type.integer.int',sK12)))))) ) | ($spl0 | $spl3)),
  inference(superposition,[],[f425,f4206])).
fof(f9271,plain,(
  ( ! [X14] : (s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X14),s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',sK12),s('type.integer.int',sK12))))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X14))),s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',sK12),s('type.integer.int',sK12)))))) ) | $spl50),
  inference(cnf_transformation,[],[f9271_D])).
fof(f9271_D,plain,(
  ( ! [X14] : (s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X14),s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',sK12),s('type.integer.int',sK12))))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X14))),s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',sK12),s('type.integer.int',sK12)))))) ) <=> ~$spl50),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl50])])).
fof(f9270,plain,(
  ( ! [X14] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',sK12),s('type.integer.int',sK12))) | s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X14),s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',sK12),s('type.integer.int',sK12))))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X14))),s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',sK12),s('type.integer.int',sK12)))))) ) | ($spl0 | $spl3)),
  inference(forward_demodulation,[],[f9269,f4206])).
fof(f9269,plain,(
  ( ! [X14] : (s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X14),s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',sK12),s('type.integer.int',sK12))))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X14))),s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',sK12),s('type.integer.int',sK12))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',sK12),s('type.integer.int',sK12)))))) ) | ($spl0 | $spl3)),
  inference(forward_demodulation,[],[f9156,f4206])).
fof(f9156,plain,(
  ( ! [X14] : (s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X14),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',sK12),s('type.integer.int',sK12))))))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X14))),s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',sK12),s('type.integer.int',sK12))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',sK12),s('type.integer.int',sK12)))))) ) | ($spl0 | $spl3)),
  inference(superposition,[],[f424,f4206])).
fof(f424,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X1))))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X0))),s('type.integer.int',X1))) | s('type.integer.int',X1) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(cnf_transformation,[],[f183])).
fof(f183,plain,(
  ! [X0,X1] : (s('type.integer.int',X1) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X1))))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X0))),s('type.integer.int',X1))))),
  inference(ennf_transformation,[],[f130])).
fof(f130,plain,(
  ! [X0,X1] : (s('type.integer.int',X1) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) => s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X1))))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X0))),s('type.integer.int',X1))))),
  inference(flattening,[],[f129])).
fof(f129,plain,(
  ! [X0,X1] : (~s('type.integer.int',X1) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) => s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X1))))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X0))),s('type.integer.int',X1))))),
  inference(rectify,[],[f34])).
fof(f34,axiom,(
  ! [X6,X10] : (~s('type.integer.int',X10) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) => s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X6),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X10))))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X6))),s('type.integer.int',X10))))),
  file('thm.integer.INT_NEG_SAME_EQ','thm.integer.INT_DIV_NEG')).
fof(f9143,plain,(
  s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',sK12),s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',sK12),s('type.integer.int',sK12))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',sK12),s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',sK12),s('type.integer.int',sK12))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',sK12),s('type.integer.int',sK12))) | ($spl0 | $spl3)),
  inference(superposition,[],[f2743,f4206])).
fof(f6787,plain,(
  $false | ($spl0 | $spl10)),
  inference(global_subsumption,[],[f6786,f329,f328,f330,f602,f337,f341,f346,f357,f356,f361,f360,f365,f364,f406,f405,f412,f410,f415,f414,f413,f416,f417,f418,f419,f423,f420,f429,f428,f427,f431,f430,f440,f439,f603,f458,f455,f454,f453,f464,f463,f470,f469,f471,f473,f472,f498,f497,f496,f495,f494,f493,f492,f502,f501,f500,f499,f506,f505,f504,f503,f510,f509,f508,f507,f514,f513,f512,f511,f588,f518,f517,f516,f515,f525,f524,f523,f522,f531,f528,f527,f526,f538,f537,f536,f587,f534,f533,f532,f542,f541,f540,f539,f546,f545,f544,f543,f555,f554,f553,f586,f551,f550,f549,f559,f558,f557,f556,f563,f562,f561,f560,f585,f616,f617,f620,f621,f622,f623,f624,f625,f626,f627,f628,f629,f630,f631,f632,f633,f634,f635,f636,f637,f433,f432,f426,f425,f424,f367,f366,f345,f344,f343,f339,f338,f657,f664,f665,f668,f673,f676,f681,f682,f684,f691,f695,f696,f699,f705,f706,f710,f713,f716,f746,f792,f801,f800,f811,f809,f827,f833,f843,f846,f851,f855,f863,f869,f892,f899,f905,f928,f935,f941,f961,f1101,f1100,f1099,f1098,f1097,f1096,f1095,f1092,f1091,f1087,f1084,f1083,f1080,f1079,f1075,f1063,f1062,f1061,f1057,f1056,f1052,f1051,f1050,f1047,f1043,f1041,f1039,f1038,f1035,f1034,f1033,f1032,f1031,f1027,f1026,f1021,f1020,f1017,f1016,f1012,f1005,f1004,f1003,f1002,f1001,f1000,f999,f998,f995,f994,f990,f989,f986,f985,f981,f980,f979,f976,f975,f974,f973,f971,f970,f969,f967,f1117,f1132,f1315,f1314,f1313,f1312,f1311,f1310,f1309,f1306,f1305,f1301,f1298,f1297,f1294,f1293,f1289,f1277,f1276,f1275,f1271,f1270,f1266,f1265,f1264,f1261,f1257,f1255,f1253,f1252,f1249,f1248,f1247,f1246,f1245,f1241,f1240,f1235,f1234,f1231,f1230,f1226,f1219,f1218,f1217,f1216,f1215,f1214,f1213,f1212,f1209,f1208,f1204,f1203,f1200,f1199,f1195,f1194,f1193,f1190,f1189,f1188,f1187,f1185,f1184,f1183,f1182,f1181,f1368,f1410,f1430,f1443,f1459,f1467,f1469,f1470,f1477,f1478,f1483,f1487,f1486,f1503,f1527,f1537,f1580,f1586,f1591,f1598,f1608,f1643,f1642,f1641,f1640,f1644,f1645,f1654,f1655,f1656,f1657,f1658,f1659,f1660,f1661,f1662,f1663,f1664,f1665,f1666,f1667,f1668,f1669,f1670,f1671,f1673,f1674,f1684,f1754,f1817,f1846,f1895,f1900,f1880,f1921,f1928,f2023,f2024,f2026,f2027,f2029,f2030,f2032,f2060,f2107,f2106,f2105,f2104,f2116,f2117,f2118,f2119,f2128,f2129,f2130,f2131,f2132,f2133,f2134,f2135,f2136,f2137,f2138,f2139,f2140,f2141,f2142,f2143,f2144,f2145,f2147,f2148,f2149,f2161,f2247,f2248,f2196,f2199,f2252,f2253,f2237,f2276,f2362,f2363,f2388,f2405,f2403,f2423,f2436,f2446,f2447,f2452,f2451,f2449,f2465,f2479,f2480,f2540,f2483,f2484,f2541,f2542,f2487,f2499,f2500,f2501,f2502,f2503,f2504,f2505,f2506,f2507,f2508,f2509,f2510,f2511,f2512,f2513,f2516,f2537,f2538,f2539,f2545,f2573,f2597,f2598,f2667,f2670,f2608,f2612,f2613,f2620,f2621,f2622,f2623,f2624,f2625,f2626,f2627,f2628,f2629,f2630,f2631,f2632,f2633,f2634,f2637,f2660,f2661,f2662,f2740,f2741,f2742,f2746,f2827,f2830,f2754,f2755,f2756,f2757,f2758,f2759,f2760,f2832,f2762,f2763,f2764,f2768,f2769,f2777,f2778,f2779,f2780,f2781,f2782,f2783,f2784,f2833,f2786,f2787,f2788,f2789,f2790,f2791,f2792,f2795,f2820,f2821,f2822,f2963,f2890,f2966,f2969,f2898,f2899,f2900,f2904,f2905,f2913,f2915,f2916,f2917,f2918,f2919,f2920,f2921,f2922,f2923,f2924,f2925,f2926,f2927,f2928,f2929,f2930,f2933,f2960,f2961,f2962,f3005,f3060,f3061,f4802,f4810,f4900,f4870,f4912,f4921,f4922,f5030,f4924,f4925,f4926,f5045,f5057,f5021,f5363,f5366,f5372,f5401,f5409,f5538,f5475,f5574,f5575,f5590,f5600,f5601,f5677,f5678,f5679,f5681,f5682,f5683,f5684,f5685,f5754,f6113,f6117,f6120,f6123,f6126,f6129,f6132,f6135,f6138,f6141,f6144,f6147,f6150,f6153,f6156,f6159,f6162,f6165,f5789,f5790,f5791,f6167,f6168,f6169,f6170,f6171,f6172,f6173,f6174,f6175,f6176,f6177,f6178,f6179,f6180,f6181,f6182,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6193,f6194,f6195,f6196,f6197,f6198,f6199,f6200,f6201,f5852,f5853,f5854,f5856,f5857,f5858,f5859,f5860,f6209,f6211,f6213,f6215,f6217,f6219,f6221,f6223,f6225,f6227,f6229,f6231,f6233,f6235,f6237,f6239,f6241,f6243,f6115,f6502,f6522,f6526,f6539,f6541,f6543,f6545,f6547,f6549,f6551,f6553,f6555,f6557,f6559,f6561,f6563,f6565,f6567,f6569,f6571,f6573,f6575,f6577,f6584,f6590,f6596,f6614,f6620,f6626,f6639,f6641,f6643,f6645,f6647,f6649,f6651,f6653,f6655,f6657,f6659,f6661,f6663,f6665,f6667,f6669,f6671,f6673,f6675,f6677,f6679,f6694,f6698,f6704,f6710,f6712,f6724,f6734,f6738,f6742,f6750,f6754,f6766,f6774])).
fof(f6774,plain,(
  ( ! [X156,X154,X155] : (s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X154))),s('type.integer.int',X155))) = s('type.integer.int',sK19('const.integer.int_div_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X154))),s('type.integer.int',X155)),X156,'type.integer.int')) | s('type.integer.int',X155) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl10),
  inference(subsumption_resolution,[],[f6470,f330])).
fof(f6470,plain,(
  ( ! [X156,X154,X155] : (~p(s(bool,'T_0')) | s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X154))),s('type.integer.int',X155))) = s('type.integer.int',sK19('const.integer.int_div_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X154))),s('type.integer.int',X155)),X156,'type.integer.int')) | s('type.integer.int',X155) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl10),
  inference(backward_demodulation,[],[f6115,f2661])).
fof(f6766,plain,(
  ( ! [X45,X43,X44] : (s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X43),s('type.integer.int',X44))) = s('type.integer.int',sK19('const.integer.int_add_2'(s('type.integer.int',X43),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X44)))),X45,'type.integer.int'))) ) | $spl10),
  inference(subsumption_resolution,[],[f6466,f330])).
fof(f6466,plain,(
  ( ! [X45,X43,X44] : (~p(s(bool,'T_0')) | s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X43),s('type.integer.int',X44))) = s('type.integer.int',sK19('const.integer.int_add_2'(s('type.integer.int',X43),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X44)))),X45,'type.integer.int'))) ) | $spl10),
  inference(backward_demodulation,[],[f6115,f1537])).
fof(f6754,plain,(
  ( ! [X177,X178,X176] : (s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X176),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X176),s('type.integer.int',X177))),s('type.integer.int',X177))))) = s('type.integer.int',sK19('const.integer.int_sub_2'(s('type.integer.int',X176),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X176),s('type.integer.int',X177))),s('type.integer.int',X177)))),X178,'type.integer.int')) | s('type.integer.int',X177) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl10),
  inference(subsumption_resolution,[],[f6460,f330])).
fof(f6460,plain,(
  ( ! [X177,X178,X176] : (~p(s(bool,'T_0')) | s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X176),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X176),s('type.integer.int',X177))),s('type.integer.int',X177))))) = s('type.integer.int',sK19('const.integer.int_sub_2'(s('type.integer.int',X176),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X176),s('type.integer.int',X177))),s('type.integer.int',X177)))),X178,'type.integer.int')) | s('type.integer.int',X177) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl10),
  inference(backward_demodulation,[],[f6115,f2961])).
fof(f6750,plain,(
  ( ! [X191,X192,X190] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X190))),s('type.integer.int',X191))))) = s('type.integer.int',sK19('const.integer.int_neg_1'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X190))),s('type.integer.int',X191)))),X192,'type.integer.int')) | s('type.integer.int',X191) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl10),
  inference(subsumption_resolution,[],[f6458,f330])).
fof(f6458,plain,(
  ( ! [X191,X192,X190] : (~p(s(bool,'T_0')) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X190))),s('type.integer.int',X191))))) = s('type.integer.int',sK19('const.integer.int_neg_1'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X190))),s('type.integer.int',X191)))),X192,'type.integer.int')) | s('type.integer.int',X191) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl10),
  inference(backward_demodulation,[],[f6115,f2821])).
fof(f6742,plain,(
  ( ! [X175,X176] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int',sK19('const.integer.int_add_2'(s('type.integer.int',X175),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X175)))),X176,'type.integer.int'))) ) | $spl10),
  inference(subsumption_resolution,[],[f6454,f330])).
fof(f6454,plain,(
  ( ! [X175,X176] : (~p(s(bool,'T_0')) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int',sK19('const.integer.int_add_2'(s('type.integer.int',X175),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X175)))),X176,'type.integer.int'))) ) | $spl10),
  inference(backward_demodulation,[],[f6115,f5538])).
fof(f6738,plain,(
  ( ! [X76] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int',sK19('const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))),X76,'type.integer.int'))) ) | $spl10),
  inference(subsumption_resolution,[],[f6452,f330])).
fof(f6452,plain,(
  ( ! [X76] : (~p(s(bool,'T_0')) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int',sK19('const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))),X76,'type.integer.int'))) ) | $spl10),
  inference(backward_demodulation,[],[f6115,f5057])).
fof(f6734,plain,(
  ( ! [X159,X160] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int',sK19('const.integer.int_sub_2'(s('type.integer.int',X159),s('type.integer.int',X159)),X160,'type.integer.int'))) ) | $spl10),
  inference(subsumption_resolution,[],[f6450,f330])).
fof(f6450,plain,(
  ( ! [X159,X160] : (~p(s(bool,'T_0')) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int',sK19('const.integer.int_sub_2'(s('type.integer.int',X159),s('type.integer.int',X159)),X160,'type.integer.int'))) ) | $spl10),
  inference(backward_demodulation,[],[f6115,f4900])).
fof(f6724,plain,(
  ( ! [X8,X7] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int',sK19('const.integer.int_add_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X7))),s('type.integer.int',X7)),X8,'type.integer.int'))) ) | $spl10),
  inference(subsumption_resolution,[],[f6445,f330])).
fof(f6445,plain,(
  ( ! [X8,X7] : (~p(s(bool,'T_0')) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int',sK19('const.integer.int_add_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X7))),s('type.integer.int',X7)),X8,'type.integer.int'))) ) | $spl10),
  inference(backward_demodulation,[],[f6115,f1478])).
fof(f6712,plain,(
  ( ! [X121,X122,X120] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X120),s('type.integer.int',X121))))) = s('type.integer.int',sK19('const.integer.int_add_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X120))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X121)))),X122,'type.integer.int'))) ) | $spl10),
  inference(subsumption_resolution,[],[f6439,f330])).
fof(f6439,plain,(
  ( ! [X121,X122,X120] : (~p(s(bool,'T_0')) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X120),s('type.integer.int',X121))))) = s('type.integer.int',sK19('const.integer.int_add_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X120))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X121)))),X122,'type.integer.int'))) ) | $spl10),
  inference(backward_demodulation,[],[f6115,f2276])).
fof(f6710,plain,(
  ( ! [X54,X56,X55] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X54),s('type.integer.int',X55))))) = s('type.integer.int',sK19('const.integer.int_mul_2'(s('type.integer.int',X54),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X55)))),X56,'type.integer.int'))) ) | $spl10),
  inference(subsumption_resolution,[],[f6438,f330])).
fof(f6438,plain,(
  ( ! [X54,X56,X55] : (~p(s(bool,'T_0')) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X54),s('type.integer.int',X55))))) = s('type.integer.int',sK19('const.integer.int_mul_2'(s('type.integer.int',X54),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X55)))),X56,'type.integer.int'))) ) | $spl10),
  inference(backward_demodulation,[],[f6115,f1754])).
fof(f6704,plain,(
  ( ! [X111,X110] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK14(X110)))))) = s('type.integer.int',sK19('const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK14(X110))))),X111,'type.integer.int')) | s('type.integer.int',X110) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int',X110) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK13(X110))))) ) | $spl10),
  inference(subsumption_resolution,[],[f6430,f330])).
fof(f6430,plain,(
  ( ! [X111,X110] : (~p(s(bool,'T_0')) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK14(X110)))))) = s('type.integer.int',sK19('const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK14(X110))))),X111,'type.integer.int')) | s('type.integer.int',X110) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int',X110) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK13(X110))))) ) | $spl10),
  inference(backward_demodulation,[],[f6115,f2538])).
fof(f6698,plain,(
  ( ! [X6,X5] : (s('type.integer.int',X5) = s('type.integer.int',sK19('const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X5)))),X6,'type.integer.int'))) ) | $spl10),
  inference(subsumption_resolution,[],[f6427,f330])).
fof(f6427,plain,(
  ( ! [X6,X5] : (~p(s(bool,'T_0')) | s('type.integer.int',X5) = s('type.integer.int',sK19('const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X5)))),X6,'type.integer.int'))) ) | $spl10),
  inference(backward_demodulation,[],[f6115,f1477])).
fof(f6694,plain,(
  ( ! [X2,X0,X1] : (s(X0,X2) = s(X0,sK19(X2,X1,X0))) ) | $spl10),
  inference(subsumption_resolution,[],[f6400,f330])).
fof(f6400,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'T_0')) | s(X0,X2) = s(X0,sK19(X2,X1,X0))) ) | $spl10),
  inference(backward_demodulation,[],[f6115,f414])).
fof(f6679,plain,(
  ( ! [X99,X97,X98,X96] : (~sP8('const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X96))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X97)))),X98,X99) | sP9('const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X96))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X97)))),X98,X99)) ) | $spl10),
  inference(subsumption_resolution,[],[f6391,f330])).
fof(f6391,plain,(
  ( ! [X99,X97,X98,X96] : (~p(s(bool,'T_0')) | ~sP8('const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X96))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X97)))),X98,X99) | sP9('const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X96))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X97)))),X98,X99)) ) | $spl10),
  inference(backward_demodulation,[],[f6115,f1674])).
fof(f6677,plain,(
  ( ! [X94,X92,X95,X93] : (~sP10('const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X92))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X93)))),X94,X95) | sP11('const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X92))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X93)))),X94,X95)) ) | $spl10),
  inference(subsumption_resolution,[],[f6390,f330])).
fof(f6390,plain,(
  ( ! [X94,X92,X95,X93] : (~p(s(bool,'T_0')) | ~sP10('const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X92))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X93)))),X94,X95) | sP11('const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X92))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X93)))),X94,X95)) ) | $spl10),
  inference(backward_demodulation,[],[f6115,f1673])).
fof(f6675,plain,(
  ( ! [X88,X87,X85,X86] : (~p(s(bool,X87)) | p(s(bool,X88)) | ~sP11('const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X85))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X86)))),X88,X87)) ) | $spl10),
  inference(subsumption_resolution,[],[f6389,f330])).
fof(f6389,plain,(
  ( ! [X88,X87,X85,X86] : (~p(s(bool,'T_0')) | ~p(s(bool,X87)) | p(s(bool,X88)) | ~sP11('const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X85))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X86)))),X88,X87)) ) | $spl10),
  inference(backward_demodulation,[],[f6115,f1671])).
fof(f6673,plain,(
  ( ! [X83,X81,X84,X82] : (~p(s(bool,X83)) | sP11('const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X81))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X82)))),X83,X84)) ) | $spl10),
  inference(subsumption_resolution,[],[f6388,f330])).
fof(f6388,plain,(
  ( ! [X83,X81,X84,X82] : (~p(s(bool,'T_0')) | ~p(s(bool,X83)) | sP11('const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X81))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X82)))),X83,X84)) ) | $spl10),
  inference(backward_demodulation,[],[f6115,f1670])).
fof(f6671,plain,(
  ( ! [X80,X78,X79,X77] : (p(s(bool,X79)) | sP11('const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X77))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X78)))),X80,X79)) ) | $spl10),
  inference(subsumption_resolution,[],[f6387,f330])).
fof(f6387,plain,(
  ( ! [X80,X78,X79,X77] : (~p(s(bool,'T_0')) | p(s(bool,X79)) | sP11('const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X77))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X78)))),X80,X79)) ) | $spl10),
  inference(backward_demodulation,[],[f6115,f1669])).
fof(f6669,plain,(
  ( ! [X76,X74,X75,X73] : (p(s(bool,X75)) | sP11(X76,X75,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X73))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X74))))) | p(s(bool,X76))) ) | $spl10),
  inference(subsumption_resolution,[],[f6386,f330])).
fof(f6386,plain,(
  ( ! [X76,X74,X75,X73] : (~p(s(bool,'T_0')) | p(s(bool,X75)) | sP11(X76,X75,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X73))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X74))))) | p(s(bool,X76))) ) | $spl10),
  inference(backward_demodulation,[],[f6115,f1668])).
fof(f6667,plain,(
  ( ! [X70,X72,X71,X69] : (p(s(bool,X71)) | ~p(s(bool,X72)) | ~sP10(X72,X71,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X69))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X70)))))) ) | $spl10),
  inference(subsumption_resolution,[],[f6385,f330])).
fof(f6385,plain,(
  ( ! [X70,X72,X71,X69] : (~p(s(bool,'T_0')) | p(s(bool,X71)) | ~p(s(bool,X72)) | ~sP10(X72,X71,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X69))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X70)))))) ) | $spl10),
  inference(backward_demodulation,[],[f6115,f1667])).
fof(f6665,plain,(
  ( ! [X68,X66,X67,X65] : (p(s(bool,X67)) | p(s(bool,X68)) | ~sP9('const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X65))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X66)))),X68,X67)) ) | $spl10),
  inference(subsumption_resolution,[],[f6384,f330])).
fof(f6384,plain,(
  ( ! [X68,X66,X67,X65] : (~p(s(bool,'T_0')) | p(s(bool,X67)) | p(s(bool,X68)) | ~sP9('const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X65))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X66)))),X68,X67)) ) | $spl10),
  inference(backward_demodulation,[],[f6115,f1666])).
fof(f6663,plain,(
  ( ! [X61,X64,X62,X63] : (~p(s(bool,X63)) | sP9('const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X61))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X62)))),X63,X64)) ) | $spl10),
  inference(subsumption_resolution,[],[f6383,f330])).
fof(f6383,plain,(
  ( ! [X61,X64,X62,X63] : (~p(s(bool,'T_0')) | ~p(s(bool,X63)) | sP9('const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X61))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X62)))),X63,X64)) ) | $spl10),
  inference(backward_demodulation,[],[f6115,f1665])).
fof(f6661,plain,(
  ( ! [X59,X57,X60,X58] : (~p(s(bool,X59)) | sP9('const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X57))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X58)))),X60,X59)) ) | $spl10),
  inference(subsumption_resolution,[],[f6382,f330])).
fof(f6382,plain,(
  ( ! [X59,X57,X60,X58] : (~p(s(bool,'T_0')) | ~p(s(bool,X59)) | sP9('const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X57))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X58)))),X60,X59)) ) | $spl10),
  inference(backward_demodulation,[],[f6115,f1664])).
fof(f6659,plain,(
  ( ! [X54,X56,X55,X53] : (p(s(bool,X55)) | p(s(bool,X56)) | ~sP8('const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X53))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X54)))),X55,X56)) ) | $spl10),
  inference(subsumption_resolution,[],[f6381,f330])).
fof(f6381,plain,(
  ( ! [X54,X56,X55,X53] : (~p(s(bool,'T_0')) | p(s(bool,X55)) | p(s(bool,X56)) | ~sP8('const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X53))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X54)))),X55,X56)) ) | $spl10),
  inference(backward_demodulation,[],[f6115,f1663])).
fof(f6657,plain,(
  ( ! [X52,X50,X51,X49] : (~p(s(bool,X51)) | p(s(bool,X52)) | ~sP7(X52,X51,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X49))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X50)))))) ) | $spl10),
  inference(subsumption_resolution,[],[f6380,f330])).
fof(f6380,plain,(
  ( ! [X52,X50,X51,X49] : (~p(s(bool,'T_0')) | ~p(s(bool,X51)) | p(s(bool,X52)) | ~sP7(X52,X51,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X49))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X50)))))) ) | $spl10),
  inference(backward_demodulation,[],[f6115,f1662])).
fof(f6655,plain,(
  ( ! [X47,X45,X48,X46] : (~p(s(bool,X47)) | ~p(s(bool,X48)) | sP7('const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X45))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X46)))),X47,X48)) ) | $spl10),
  inference(subsumption_resolution,[],[f6379,f330])).
fof(f6379,plain,(
  ( ! [X47,X45,X48,X46] : (~p(s(bool,'T_0')) | ~p(s(bool,X47)) | ~p(s(bool,X48)) | sP7('const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X45))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X46)))),X47,X48)) ) | $spl10),
  inference(backward_demodulation,[],[f6115,f1661])).
fof(f6653,plain,(
  ( ! [X43,X41,X44,X42] : (~p(s(bool,X43)) | p(s(bool,X44)) | ~sP6(X43,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X41))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X42)))),X44)) ) | $spl10),
  inference(subsumption_resolution,[],[f6378,f330])).
fof(f6378,plain,(
  ( ! [X43,X41,X44,X42] : (~p(s(bool,'T_0')) | ~p(s(bool,X43)) | p(s(bool,X44)) | ~sP6(X43,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X41))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X42)))),X44)) ) | $spl10),
  inference(backward_demodulation,[],[f6115,f1660])).
fof(f6651,plain,(
  ( ! [X39,X37,X38,X40] : (~p(s(bool,X39)) | p(s(bool,X40)) | ~sP3(X39,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X37))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X38)))),X40)) ) | $spl10),
  inference(subsumption_resolution,[],[f6377,f330])).
fof(f6377,plain,(
  ( ! [X39,X37,X38,X40] : (~p(s(bool,'T_0')) | ~p(s(bool,X39)) | p(s(bool,X40)) | ~sP3(X39,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X37))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X38)))),X40)) ) | $spl10),
  inference(backward_demodulation,[],[f6115,f1659])).
fof(f6649,plain,(
  ( ! [X35,X33,X36,X34] : (~p(s(bool,X35)) | p(s(bool,X36)) | ~sP4(X35,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X33))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X34)))),X36)) ) | $spl10),
  inference(subsumption_resolution,[],[f6376,f330])).
fof(f6376,plain,(
  ( ! [X35,X33,X36,X34] : (~p(s(bool,'T_0')) | ~p(s(bool,X35)) | p(s(bool,X36)) | ~sP4(X35,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X33))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X34)))),X36)) ) | $spl10),
  inference(backward_demodulation,[],[f6115,f1658])).
fof(f6647,plain,(
  ( ! [X30,X31,X32] : (p(s(bool,X32)) | sP1(X32,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X30))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X31)))))) ) | $spl10),
  inference(subsumption_resolution,[],[f6375,f330])).
fof(f6375,plain,(
  ( ! [X30,X31,X32] : (~p(s(bool,'T_0')) | p(s(bool,X32)) | sP1(X32,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X30))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X31)))))) ) | $spl10),
  inference(backward_demodulation,[],[f6115,f1657])).
fof(f6645,plain,(
  ( ! [X28,X29,X27] : (p(s(bool,X29)) | sP1('const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X27))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X28)))),X29)) ) | $spl10),
  inference(subsumption_resolution,[],[f6374,f330])).
fof(f6374,plain,(
  ( ! [X28,X29,X27] : (~p(s(bool,'T_0')) | p(s(bool,X29)) | sP1('const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X27))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X28)))),X29)) ) | $spl10),
  inference(backward_demodulation,[],[f6115,f1656])).
fof(f6643,plain,(
  ( ! [X26,X24,X25] : (sP0('const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X24))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X25)))),X26)) ) | $spl10),
  inference(subsumption_resolution,[],[f6373,f330])).
fof(f6373,plain,(
  ( ! [X26,X24,X25] : (~p(s(bool,'T_0')) | sP0('const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X24))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X25)))),X26)) ) | $spl10),
  inference(backward_demodulation,[],[f6115,f1655])).
fof(f6641,plain,(
  ( ! [X23,X21,X22] : (sP0(X23,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X21))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X22)))))) ) | $spl10),
  inference(subsumption_resolution,[],[f6372,f330])).
fof(f6372,plain,(
  ( ! [X23,X21,X22] : (~p(s(bool,'T_0')) | sP0(X23,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X21))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X22)))))) ) | $spl10),
  inference(backward_demodulation,[],[f6115,f1654])).
fof(f6639,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num',X0)) ) | $spl10),
  inference(subsumption_resolution,[],[f6370,f330])).
fof(f6370,plain,(
  ( ! [X0] : (~p(s(bool,'T_0')) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X0)) ) | $spl10),
  inference(backward_demodulation,[],[f6115,f364])).
fof(f6626,plain,(
  ( ! [X65] : (s('type.integer.int',X65) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl10),
  inference(subsumption_resolution,[],[f6625,f330])).
fof(f6625,plain,(
  ( ! [X65] : (~p(s(bool,'T_0')) | s('type.integer.int',X65) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl10),
  inference(forward_demodulation,[],[f6624,f6115])).
fof(f6624,plain,(
  ( ! [X66,X64,X65] : (~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X66),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X64))),s('type.integer.int',X65)))))) | s('type.integer.int',X65) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl10),
  inference(subsumption_resolution,[],[f6358,f330])).
fof(f6358,plain,(
  ( ! [X66,X64,X65] : (~p(s(bool,'T_0')) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X66),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X64))),s('type.integer.int',X65)))))) | s('type.integer.int',X65) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl10),
  inference(backward_demodulation,[],[f6115,f2632])).
fof(f6620,plain,(
  ( ! [X77] : (s('type.integer.int',X77) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl10),
  inference(subsumption_resolution,[],[f6619,f330])).
fof(f6619,plain,(
  ( ! [X77] : (~p(s(bool,'T_0')) | s('type.integer.int',X77) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl10),
  inference(forward_demodulation,[],[f6618,f6115])).
fof(f6618,plain,(
  ( ! [X78,X76,X77] : (~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X78),s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X76),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X76),s('type.integer.int',X77))),s('type.integer.int',X77)))))))) | s('type.integer.int',X77) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl10),
  inference(subsumption_resolution,[],[f6350,f330])).
fof(f6350,plain,(
  ( ! [X78,X76,X77] : (~p(s(bool,'T_0')) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X78),s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X76),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X76),s('type.integer.int',X77))),s('type.integer.int',X77)))))))) | s('type.integer.int',X77) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl10),
  inference(backward_demodulation,[],[f6115,f2928])).
fof(f6614,plain,(
  ( ! [X97] : (s('type.integer.int',X97) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl10),
  inference(subsumption_resolution,[],[f6613,f330])).
fof(f6613,plain,(
  ( ! [X97] : (~p(s(bool,'T_0')) | s('type.integer.int',X97) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl10),
  inference(forward_demodulation,[],[f6612,f6115])).
fof(f6612,plain,(
  ( ! [X97,X98,X96] : (~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X98),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X96))),s('type.integer.int',X97)))))))) | s('type.integer.int',X97) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl10),
  inference(subsumption_resolution,[],[f6348,f330])).
fof(f6348,plain,(
  ( ! [X97,X98,X96] : (~p(s(bool,'T_0')) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X98),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X96))),s('type.integer.int',X97)))))))) | s('type.integer.int',X97) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl10),
  inference(backward_demodulation,[],[f6115,f2790])).
fof(f6596,plain,(
  ( ! [X68] : (s('type.integer.int',X68) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl10),
  inference(subsumption_resolution,[],[f6595,f330])).
fof(f6595,plain,(
  ( ! [X68] : (~p(s(bool,'T_0')) | s('type.integer.int',X68) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl10),
  inference(forward_demodulation,[],[f6594,f6115])).
fof(f6594,plain,(
  ( ! [X68,X69,X67] : (~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X67))),s('type.integer.int',X68))),s('type.integer.int',X69)))) | s('type.integer.int',X68) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl10),
  inference(subsumption_resolution,[],[f6324,f330])).
fof(f6324,plain,(
  ( ! [X68,X69,X67] : (~p(s(bool,'T_0')) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X67))),s('type.integer.int',X68))),s('type.integer.int',X69)))) | s('type.integer.int',X68) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl10),
  inference(backward_demodulation,[],[f6115,f2633])).
fof(f6590,plain,(
  ( ! [X80] : (s('type.integer.int',X80) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl10),
  inference(subsumption_resolution,[],[f6589,f330])).
fof(f6589,plain,(
  ( ! [X80] : (~p(s(bool,'T_0')) | s('type.integer.int',X80) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl10),
  inference(forward_demodulation,[],[f6588,f6115])).
fof(f6588,plain,(
  ( ! [X80,X81,X79] : (~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X79),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X79),s('type.integer.int',X80))),s('type.integer.int',X80))))),s('type.integer.int',X81)))) | s('type.integer.int',X80) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl10),
  inference(subsumption_resolution,[],[f6316,f330])).
fof(f6316,plain,(
  ( ! [X80,X81,X79] : (~p(s(bool,'T_0')) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X79),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X79),s('type.integer.int',X80))),s('type.integer.int',X80))))),s('type.integer.int',X81)))) | s('type.integer.int',X80) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl10),
  inference(backward_demodulation,[],[f6115,f2929])).
fof(f6584,plain,(
  ( ! [X100] : (s('type.integer.int',X100) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl10),
  inference(subsumption_resolution,[],[f6583,f330])).
fof(f6583,plain,(
  ( ! [X100] : (~p(s(bool,'T_0')) | s('type.integer.int',X100) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl10),
  inference(forward_demodulation,[],[f6582,f6115])).
fof(f6582,plain,(
  ( ! [X101,X99,X100] : (~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X99))),s('type.integer.int',X100))))),s('type.integer.int',X101)))) | s('type.integer.int',X100) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl10),
  inference(subsumption_resolution,[],[f6314,f330])).
fof(f6314,plain,(
  ( ! [X101,X99,X100] : (~p(s(bool,'T_0')) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X99))),s('type.integer.int',X100))))),s('type.integer.int',X101)))) | s('type.integer.int',X100) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl10),
  inference(backward_demodulation,[],[f6115,f2791])).
fof(f6577,plain,(
  ( ! [X70,X68,X69] : (~sP8('const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X68)))),X69,X70) | sP9('const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X68)))),X69,X70)) ) | $spl10),
  inference(subsumption_resolution,[],[f6310,f330])).
fof(f6310,plain,(
  ( ! [X70,X68,X69] : (~p(s(bool,'T_0')) | ~sP8('const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X68)))),X69,X70) | sP9('const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X68)))),X69,X70)) ) | $spl10),
  inference(backward_demodulation,[],[f6115,f2148])).
fof(f6575,plain,(
  ( ! [X66,X67,X65] : (~sP10('const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X65)))),X66,X67) | sP11('const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X65)))),X66,X67)) ) | $spl10),
  inference(subsumption_resolution,[],[f6309,f330])).
fof(f6309,plain,(
  ( ! [X66,X67,X65] : (~p(s(bool,'T_0')) | ~sP10('const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X65)))),X66,X67) | sP11('const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X65)))),X66,X67)) ) | $spl10),
  inference(backward_demodulation,[],[f6115,f2147])).
fof(f6573,plain,(
  ( ! [X61,X62,X60] : (~p(s(bool,X61)) | p(s(bool,X62)) | ~sP11('const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X60)))),X62,X61)) ) | $spl10),
  inference(subsumption_resolution,[],[f6308,f330])).
fof(f6308,plain,(
  ( ! [X61,X62,X60] : (~p(s(bool,'T_0')) | ~p(s(bool,X61)) | p(s(bool,X62)) | ~sP11('const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X60)))),X62,X61)) ) | $spl10),
  inference(backward_demodulation,[],[f6115,f2145])).
fof(f6571,plain,(
  ( ! [X59,X57,X58] : (~p(s(bool,X58)) | sP11('const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X57)))),X58,X59)) ) | $spl10),
  inference(subsumption_resolution,[],[f6307,f330])).
fof(f6307,plain,(
  ( ! [X59,X57,X58] : (~p(s(bool,'T_0')) | ~p(s(bool,X58)) | sP11('const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X57)))),X58,X59)) ) | $spl10),
  inference(backward_demodulation,[],[f6115,f2144])).
fof(f6569,plain,(
  ( ! [X54,X56,X55] : (p(s(bool,X55)) | sP11('const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X54)))),X56,X55)) ) | $spl10),
  inference(subsumption_resolution,[],[f6306,f330])).
fof(f6306,plain,(
  ( ! [X54,X56,X55] : (~p(s(bool,'T_0')) | p(s(bool,X55)) | sP11('const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X54)))),X56,X55)) ) | $spl10),
  inference(backward_demodulation,[],[f6115,f2143])).
fof(f6567,plain,(
  ( ! [X52,X53,X51] : (p(s(bool,X52)) | sP11(X53,X52,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X51))))) | p(s(bool,X53))) ) | $spl10),
  inference(subsumption_resolution,[],[f6305,f330])).
fof(f6305,plain,(
  ( ! [X52,X53,X51] : (~p(s(bool,'T_0')) | p(s(bool,X52)) | sP11(X53,X52,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X51))))) | p(s(bool,X53))) ) | $spl10),
  inference(backward_demodulation,[],[f6115,f2142])).
fof(f6565,plain,(
  ( ! [X50,X48,X49] : (p(s(bool,X49)) | ~p(s(bool,X50)) | ~sP10(X50,X49,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X48)))))) ) | $spl10),
  inference(subsumption_resolution,[],[f6304,f330])).
fof(f6304,plain,(
  ( ! [X50,X48,X49] : (~p(s(bool,'T_0')) | p(s(bool,X49)) | ~p(s(bool,X50)) | ~sP10(X50,X49,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X48)))))) ) | $spl10),
  inference(backward_demodulation,[],[f6115,f2141])).
fof(f6563,plain,(
  ( ! [X47,X45,X46] : (p(s(bool,X46)) | p(s(bool,X47)) | ~sP9('const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X45)))),X47,X46)) ) | $spl10),
  inference(subsumption_resolution,[],[f6303,f330])).
fof(f6303,plain,(
  ( ! [X47,X45,X46] : (~p(s(bool,'T_0')) | p(s(bool,X46)) | p(s(bool,X47)) | ~sP9('const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X45)))),X47,X46)) ) | $spl10),
  inference(backward_demodulation,[],[f6115,f2140])).
fof(f6561,plain,(
  ( ! [X43,X44,X42] : (~p(s(bool,X43)) | sP9('const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X42)))),X43,X44)) ) | $spl10),
  inference(subsumption_resolution,[],[f6302,f330])).
fof(f6302,plain,(
  ( ! [X43,X44,X42] : (~p(s(bool,'T_0')) | ~p(s(bool,X43)) | sP9('const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X42)))),X43,X44)) ) | $spl10),
  inference(backward_demodulation,[],[f6115,f2139])).
fof(f6559,plain,(
  ( ! [X39,X41,X40] : (~p(s(bool,X40)) | sP9('const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X39)))),X41,X40)) ) | $spl10),
  inference(subsumption_resolution,[],[f6301,f330])).
fof(f6301,plain,(
  ( ! [X39,X41,X40] : (~p(s(bool,'T_0')) | ~p(s(bool,X40)) | sP9('const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X39)))),X41,X40)) ) | $spl10),
  inference(backward_demodulation,[],[f6115,f2138])).
fof(f6557,plain,(
  ( ! [X37,X38,X36] : (p(s(bool,X37)) | p(s(bool,X38)) | ~sP8('const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X36)))),X37,X38)) ) | $spl10),
  inference(subsumption_resolution,[],[f6300,f330])).
fof(f6300,plain,(
  ( ! [X37,X38,X36] : (~p(s(bool,'T_0')) | p(s(bool,X37)) | p(s(bool,X38)) | ~sP8('const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X36)))),X37,X38)) ) | $spl10),
  inference(backward_demodulation,[],[f6115,f2137])).
fof(f6555,plain,(
  ( ! [X35,X33,X34] : (~p(s(bool,X34)) | p(s(bool,X35)) | ~sP7(X35,X34,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X33)))))) ) | $spl10),
  inference(subsumption_resolution,[],[f6299,f330])).
fof(f6299,plain,(
  ( ! [X35,X33,X34] : (~p(s(bool,'T_0')) | ~p(s(bool,X34)) | p(s(bool,X35)) | ~sP7(X35,X34,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X33)))))) ) | $spl10),
  inference(backward_demodulation,[],[f6115,f2136])).
fof(f6553,plain,(
  ( ! [X30,X31,X32] : (~p(s(bool,X31)) | ~p(s(bool,X32)) | sP7('const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X30)))),X31,X32)) ) | $spl10),
  inference(subsumption_resolution,[],[f6298,f330])).
fof(f6298,plain,(
  ( ! [X30,X31,X32] : (~p(s(bool,'T_0')) | ~p(s(bool,X31)) | ~p(s(bool,X32)) | sP7('const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X30)))),X31,X32)) ) | $spl10),
  inference(backward_demodulation,[],[f6115,f2135])).
fof(f6551,plain,(
  ( ! [X28,X29,X27] : (~p(s(bool,X28)) | p(s(bool,X29)) | ~sP6(X28,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X27)))),X29)) ) | $spl10),
  inference(subsumption_resolution,[],[f6297,f330])).
fof(f6297,plain,(
  ( ! [X28,X29,X27] : (~p(s(bool,'T_0')) | ~p(s(bool,X28)) | p(s(bool,X29)) | ~sP6(X28,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X27)))),X29)) ) | $spl10),
  inference(backward_demodulation,[],[f6115,f2134])).
fof(f6549,plain,(
  ( ! [X26,X24,X25] : (~p(s(bool,X25)) | p(s(bool,X26)) | ~sP3(X25,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X24)))),X26)) ) | $spl10),
  inference(subsumption_resolution,[],[f6296,f330])).
fof(f6296,plain,(
  ( ! [X26,X24,X25] : (~p(s(bool,'T_0')) | ~p(s(bool,X25)) | p(s(bool,X26)) | ~sP3(X25,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X24)))),X26)) ) | $spl10),
  inference(backward_demodulation,[],[f6115,f2133])).
fof(f6547,plain,(
  ( ! [X23,X21,X22] : (~p(s(bool,X22)) | p(s(bool,X23)) | ~sP4(X22,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X21)))),X23)) ) | $spl10),
  inference(subsumption_resolution,[],[f6295,f330])).
fof(f6295,plain,(
  ( ! [X23,X21,X22] : (~p(s(bool,'T_0')) | ~p(s(bool,X22)) | p(s(bool,X23)) | ~sP4(X22,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X21)))),X23)) ) | $spl10),
  inference(backward_demodulation,[],[f6115,f2132])).
fof(f6545,plain,(
  ( ! [X19,X20] : (p(s(bool,X20)) | sP1(X20,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X19)))))) ) | $spl10),
  inference(subsumption_resolution,[],[f6294,f330])).
fof(f6294,plain,(
  ( ! [X19,X20] : (~p(s(bool,'T_0')) | p(s(bool,X20)) | sP1(X20,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X19)))))) ) | $spl10),
  inference(backward_demodulation,[],[f6115,f2131])).
fof(f6543,plain,(
  ( ! [X17,X18] : (p(s(bool,X18)) | sP1('const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X17)))),X18)) ) | $spl10),
  inference(subsumption_resolution,[],[f6293,f330])).
fof(f6293,plain,(
  ( ! [X17,X18] : (~p(s(bool,'T_0')) | p(s(bool,X18)) | sP1('const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X17)))),X18)) ) | $spl10),
  inference(backward_demodulation,[],[f6115,f2130])).
fof(f6541,plain,(
  ( ! [X15,X16] : (sP0('const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X15)))),X16)) ) | $spl10),
  inference(subsumption_resolution,[],[f6292,f330])).
fof(f6292,plain,(
  ( ! [X15,X16] : (~p(s(bool,'T_0')) | sP0('const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X15)))),X16)) ) | $spl10),
  inference(backward_demodulation,[],[f6115,f2129])).
fof(f6539,plain,(
  ( ! [X14,X13] : (sP0(X14,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X13)))))) ) | $spl10),
  inference(subsumption_resolution,[],[f6291,f330])).
fof(f6291,plain,(
  ( ! [X14,X13] : (~p(s(bool,'T_0')) | sP0(X14,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X13)))))) ) | $spl10),
  inference(backward_demodulation,[],[f6115,f2128])).
fof(f6526,plain,(
  ( ! [X57] : (s('type.integer.int',X57) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int',X57) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK13(X57))))) ) | $spl10),
  inference(subsumption_resolution,[],[f6525,f330])).
fof(f6525,plain,(
  ( ! [X57] : (~p(s(bool,'T_0')) | s('type.integer.int',X57) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int',X57) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK13(X57))))) ) | $spl10),
  inference(forward_demodulation,[],[f6524,f6115])).
fof(f6524,plain,(
  ( ! [X57,X58] : (~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK14(X57)))))),s('type.integer.int',X58)))) | s('type.integer.int',X57) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int',X57) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK13(X57))))) ) | $spl10),
  inference(subsumption_resolution,[],[f6276,f330])).
fof(f6276,plain,(
  ( ! [X57,X58] : (~p(s(bool,'T_0')) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK14(X57)))))),s('type.integer.int',X58)))) | s('type.integer.int',X57) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int',X57) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK13(X57))))) ) | $spl10),
  inference(backward_demodulation,[],[f6115,f2512])).
fof(f6522,plain,(
  ( ! [X55] : (s('type.integer.int',X55) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int',X55) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK13(X55))))) ) | $spl10),
  inference(subsumption_resolution,[],[f6521,f330])).
fof(f6521,plain,(
  ( ! [X55] : (~p(s(bool,'T_0')) | s('type.integer.int',X55) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int',X55) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK13(X55))))) ) | $spl10),
  inference(forward_demodulation,[],[f6520,f6115])).
fof(f6520,plain,(
  ( ! [X56,X55] : (~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X56),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK14(X55))))))))) | s('type.integer.int',X55) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int',X55) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK13(X55))))) ) | $spl10),
  inference(subsumption_resolution,[],[f6275,f330])).
fof(f6275,plain,(
  ( ! [X56,X55] : (~p(s(bool,'T_0')) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X56),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK14(X55))))))))) | s('type.integer.int',X55) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int',X55) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK13(X55))))) ) | $spl10),
  inference(backward_demodulation,[],[f6115,f2511])).
fof(f6502,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | $spl10),
  inference(subsumption_resolution,[],[f6244,f6115])).
fof(f6244,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,X0) | ~p(s(bool,X0))) ) | $spl10),
  inference(backward_demodulation,[],[f6115,f360])).
fof(f5860,plain,(
  ( ! [X229,X227,X230,X228] : (s(X229,f(s(bool,'T_0'))) != s(X229,g(s(bool,'T_0'))) | s(fun(bool,X229),X227) = s(fun(bool,X229),X228) | s(bool,X230) = s(bool,sK24(X227,X228,X229,bool)) | s(bool,'T_0') = s(bool,X230)) )),
  inference(superposition,[],[f471,f746])).
fof(f5859,plain,(
  ( ! [X222,X225,X223,X226,X224] : (~p(s(bool,happ(s(fun(X224,bool),happ(s(fun(bool,fun(X224,bool)),X223),s(bool,'T_0'))),s(X224,happ(s(fun(bool,X224),X222),s(bool,'T_0')))))) | p(s(bool,happ(s(fun(X224,bool),happ(s(fun(bool,fun(X224,bool)),X223),s(bool,X225))),s(X224,sK23(X225,X223,bool,X224))))) | s(bool,X226) = s(bool,sK22(X222,X223,bool,X224)) | s(bool,'T_0') = s(bool,X226)) )),
  inference(superposition,[],[f470,f746])).
fof(f5858,plain,(
  ( ! [X218,X220,X219,X217,X221] : (~p(s(bool,happ(s(fun(X218,bool),happ(s(fun(bool,fun(X218,bool)),X217),s(bool,'T_0'))),s(X218,X219)))) | p(s(bool,happ(s(fun(X218,bool),happ(s(fun(bool,fun(X218,bool)),X217),s(bool,X220))),s(X218,happ(s(fun(bool,X218),sK21(X217,bool,X218)),s(bool,X220)))))) | s(bool,X221) = s(bool,sK20(X217,bool,X218)) | s(bool,'T_0') = s(bool,X221)) )),
  inference(superposition,[],[f469,f746])).
fof(f5857,plain,(
  ( ! [X212,X216,X215,X213,X214] : (~p(s(bool,happ(s(fun(bool,bool),happ(s(fun(X212,fun(bool,bool)),X214),s(X212,sK22(X213,X214,X212,bool)))),s(bool,'T_0')))) | p(s(bool,happ(s(fun(bool,bool),happ(s(fun(X212,fun(bool,bool)),X214),s(X212,X215))),s(bool,sK23(X215,X214,X212,bool))))) | s(bool,X216) = s(bool,happ(s(fun(X212,bool),X213),s(X212,sK22(X213,X214,X212,bool)))) | s(bool,'T_0') = s(bool,X216)) )),
  inference(superposition,[],[f470,f746])).
fof(f5856,plain,(
  ( ! [X210,X208,X211,X209] : (s(bool,'T_0') != s(bool,f(s(X208,sK24(X209,X210,bool,X208)))) | s(fun(X208,bool),X209) = s(fun(X208,bool),X210) | s(bool,X211) = s(bool,g(s(X208,sK24(X209,X210,bool,X208)))) | s(bool,'T_0') = s(bool,X211)) )),
  inference(superposition,[],[f471,f746])).
fof(f5854,plain,(
  ( ! [X198,X199,X197] : (~p(s(bool,happ(s(fun(bool,bool),X198),s(bool,'T_0')))) | p(s(bool,happ(s(fun(bool,bool),X198),s(bool,sK19(X197,X198,bool))))) | s(bool,X197) = s(bool,X199) | s(bool,'T_0') = s(bool,X199)) )),
  inference(superposition,[],[f415,f746])).
fof(f5853,plain,(
  ( ! [X196,X194,X195] : (~p(s(bool,happ(s(fun(bool,bool),X195),s(bool,'T_0')))) | s(bool,X194) = s(bool,sK19(X194,X195,bool)) | s(bool,X194) = s(bool,X196) | s(bool,'T_0') = s(bool,X196)) )),
  inference(superposition,[],[f414,f746])).
fof(f5852,plain,(
  ( ! [X191,X192,X190,X193] : (~p(s(bool,happ(s(fun(bool,bool),X191),s(bool,'T_0')))) | p(s(bool,happ(s(fun(bool,bool),X191),s(bool,X192)))) | s(bool,X190) != s(bool,X192) | s(bool,X190) = s(bool,X193) | s(bool,'T_0') = s(bool,X193)) )),
  inference(superposition,[],[f413,f746])).
fof(f6201,plain,(
  ( ! [X167,X171,X169,X166,X170,X168] : (p(s(bool,happ(s(fun(X166,bool),happ(s(fun(X167,fun(X166,bool)),X168),s(X167,X170))),s(X166,sK23(X170,X168,X167,X166))))) | s(bool,X171) = s(bool,happ(s(fun(X166,bool),happ(s(fun(X167,fun(X166,bool)),X168),s(X167,sK22(X169,X168,X167,X166)))),s(X166,happ(s(fun(X167,X166),X169),s(X167,sK22(X169,X168,X167,X166)))))) | s(bool,'T_0') = s(bool,X171)) )),
  inference(subsumption_resolution,[],[f5845,f330])).
fof(f5845,plain,(
  ( ! [X167,X171,X169,X166,X170,X168] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun(X166,bool),happ(s(fun(X167,fun(X166,bool)),X168),s(X167,X170))),s(X166,sK23(X170,X168,X167,X166))))) | s(bool,X171) = s(bool,happ(s(fun(X166,bool),happ(s(fun(X167,fun(X166,bool)),X168),s(X167,sK22(X169,X168,X167,X166)))),s(X166,happ(s(fun(X167,X166),X169),s(X167,sK22(X169,X168,X167,X166)))))) | s(bool,'T_0') = s(bool,X171)) )),
  inference(superposition,[],[f470,f746])).
fof(f6200,plain,(
  ( ! [X165,X163,X161,X164,X162,X160] : (p(s(bool,happ(s(fun(X160,bool),happ(s(fun(X161,fun(X160,bool)),X162),s(X161,X164))),s(X160,happ(s(fun(X161,X160),sK21(X162,X161,X160)),s(X161,X164)))))) | s(bool,X165) = s(bool,happ(s(fun(X160,bool),happ(s(fun(X161,fun(X160,bool)),X162),s(X161,sK20(X162,X161,X160)))),s(X160,X163))) | s(bool,'T_0') = s(bool,X165)) )),
  inference(subsumption_resolution,[],[f5844,f330])).
fof(f5844,plain,(
  ( ! [X165,X163,X161,X164,X162,X160] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun(X160,bool),happ(s(fun(X161,fun(X160,bool)),X162),s(X161,X164))),s(X160,happ(s(fun(X161,X160),sK21(X162,X161,X160)),s(X161,X164)))))) | s(bool,X165) = s(bool,happ(s(fun(X160,bool),happ(s(fun(X161,fun(X160,bool)),X162),s(X161,sK20(X162,X161,X160)))),s(X160,X163))) | s(bool,'T_0') = s(bool,X165)) )),
  inference(superposition,[],[f469,f746])).
fof(f6199,plain,(
  ( ! [X158,X156,X159,X157] : (p(s(bool,happ(s(fun(X156,bool),X157),s(X156,sK19(X158,X157,X156))))) | s(bool,X159) = s(bool,happ(s(fun(X156,bool),X157),s(X156,X158))) | s(bool,'T_0') = s(bool,X159)) )),
  inference(subsumption_resolution,[],[f5843,f330])).
fof(f5843,plain,(
  ( ! [X158,X156,X159,X157] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun(X156,bool),X157),s(X156,sK19(X158,X157,X156))))) | s(bool,X159) = s(bool,happ(s(fun(X156,bool),X157),s(X156,X158))) | s(bool,'T_0') = s(bool,X159)) )),
  inference(superposition,[],[f415,f746])).
fof(f6198,plain,(
  ( ! [X154,X152,X155,X153] : (s(X152,X154) = s(X152,sK19(X154,X153,X152)) | s(bool,X155) = s(bool,happ(s(fun(X152,bool),X153),s(X152,X154))) | s(bool,'T_0') = s(bool,X155)) )),
  inference(subsumption_resolution,[],[f5842,f330])).
fof(f5842,plain,(
  ( ! [X154,X152,X155,X153] : (~p(s(bool,'T_0')) | s(X152,X154) = s(X152,sK19(X154,X153,X152)) | s(bool,X155) = s(bool,happ(s(fun(X152,bool),X153),s(X152,X154))) | s(bool,'T_0') = s(bool,X155)) )),
  inference(superposition,[],[f414,f746])).
fof(f6197,plain,(
  ( ! [X151,X149,X147,X150,X148] : (p(s(bool,happ(s(fun(X147,bool),X148),s(X147,X150)))) | s(X147,X149) != s(X147,X150) | s(bool,X151) = s(bool,happ(s(fun(X147,bool),X148),s(X147,X149))) | s(bool,'T_0') = s(bool,X151)) )),
  inference(subsumption_resolution,[],[f5841,f330])).
fof(f5841,plain,(
  ( ! [X151,X149,X147,X150,X148] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun(X147,bool),X148),s(X147,X150)))) | s(X147,X149) != s(X147,X150) | s(bool,X151) = s(bool,happ(s(fun(X147,bool),X148),s(X147,X149))) | s(bool,'T_0') = s(bool,X151)) )),
  inference(superposition,[],[f413,f746])).
fof(f6196,plain,(
  ( ! [X146,X144,X142,X145,X143] : (p(s(bool,X145)) | p(s(bool,happ(s(fun(X142,bool),X143),s(X142,sK18(X143,X145,X142))))) | s(bool,X146) = s(bool,happ(s(fun(X142,bool),X143),s(X142,X144))) | s(bool,'T_0') = s(bool,X146)) )),
  inference(subsumption_resolution,[],[f5840,f330])).
fof(f5840,plain,(
  ( ! [X146,X144,X142,X145,X143] : (~p(s(bool,'T_0')) | p(s(bool,X145)) | p(s(bool,happ(s(fun(X142,bool),X143),s(X142,sK18(X143,X145,X142))))) | s(bool,X146) = s(bool,happ(s(fun(X142,bool),X143),s(X142,X144))) | s(bool,'T_0') = s(bool,X146)) )),
  inference(superposition,[],[f412,f746])).
fof(f6195,plain,(
  ( ! [X140,X138,X141,X139,X137] : (p(s(bool,X140)) | p(s(bool,happ(s(fun(X137,bool),X138),s(X137,sK17(X138,X140,X137))))) | s(bool,X141) = s(bool,happ(s(fun(X137,bool),X138),s(X137,X139))) | s(bool,'T_0') = s(bool,X141)) )),
  inference(subsumption_resolution,[],[f5839,f330])).
fof(f5839,plain,(
  ( ! [X140,X138,X141,X139,X137] : (~p(s(bool,'T_0')) | p(s(bool,X140)) | p(s(bool,happ(s(fun(X137,bool),X138),s(X137,sK17(X138,X140,X137))))) | s(bool,X141) = s(bool,happ(s(fun(X137,bool),X138),s(X137,X139))) | s(bool,'T_0') = s(bool,X141)) )),
  inference(superposition,[],[f410,f746])).
fof(f6194,plain,(
  ( ! [X134,X136,X135,X133] : (p(s(bool,happ(s(fun(X133,bool),X134),s(X133,sK16(X134,X133))))) | s(bool,X136) = s(bool,happ(s(fun(X133,bool),X134),s(X133,X135))) | s(bool,'T_0') = s(bool,X136)) )),
  inference(subsumption_resolution,[],[f5838,f330])).
fof(f5838,plain,(
  ( ! [X134,X136,X135,X133] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun(X133,bool),X134),s(X133,sK16(X134,X133))))) | s(bool,X136) = s(bool,happ(s(fun(X133,bool),X134),s(X133,X135))) | s(bool,'T_0') = s(bool,X136)) )),
  inference(superposition,[],[f406,f746])).
fof(f6193,plain,(
  ( ! [X132,X130,X131,X129] : (p(s(bool,happ(s(fun(X129,bool),X130),s(X129,sK15(X130,X129))))) | s(bool,X132) = s(bool,happ(s(fun(X129,bool),X130),s(X129,X131))) | s(bool,'T_0') = s(bool,X132)) )),
  inference(subsumption_resolution,[],[f5837,f330])).
fof(f5837,plain,(
  ( ! [X132,X130,X131,X129] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun(X129,bool),X130),s(X129,sK15(X130,X129))))) | s(bool,X132) = s(bool,happ(s(fun(X129,bool),X130),s(X129,X131))) | s(bool,'T_0') = s(bool,X132)) )),
  inference(superposition,[],[f405,f746])).
fof(f6192,plain,(
  ( ! [X127,X128] : (s('type.num.num','const.num.|48|_0') = s('type.num.num',X127) | s(bool,X128) = s(bool,'const.arithmetic.<=_2'(s('type.num.num',X127),s('type.num.num','const.num.|48|_0'))) | s(bool,'T_0') = s(bool,X128)) )),
  inference(subsumption_resolution,[],[f5836,f330])).
fof(f5836,plain,(
  ( ! [X127,X128] : (~p(s(bool,'T_0')) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X127) | s(bool,X128) = s(bool,'const.arithmetic.<=_2'(s('type.num.num',X127),s('type.num.num','const.num.|48|_0'))) | s(bool,'T_0') = s(bool,X128)) )),
  inference(superposition,[],[f364,f746])).
fof(f6191,plain,(
  ( ! [X125,X126,X124] : (p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X124),s('type.integer.int',X125)))) | s(bool,X126) = s(bool,'const.integer.int_lt_2'(s('type.integer.int',X124),s('type.integer.int',X125))) | s(bool,'T_0') = s(bool,X126)) )),
  inference(subsumption_resolution,[],[f5835,f330])).
fof(f5835,plain,(
  ( ! [X125,X126,X124] : (~p(s(bool,'T_0')) | p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X124),s('type.integer.int',X125)))) | s(bool,X126) = s(bool,'const.integer.int_lt_2'(s('type.integer.int',X124),s('type.integer.int',X125))) | s(bool,'T_0') = s(bool,X126)) )),
  inference(superposition,[],[f428,f746])).
fof(f6190,plain,(
  ( ! [X111,X112,X113] : (~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X112),s('type.integer.int',X111)))) | s(bool,X113) = s(bool,'const.integer.int_le_2'(s('type.integer.int',X111),s('type.integer.int',X112))) | s(bool,'T_0') = s(bool,X113)) )),
  inference(subsumption_resolution,[],[f5829,f330])).
fof(f5829,plain,(
  ( ! [X111,X112,X113] : (~p(s(bool,'T_0')) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X112),s('type.integer.int',X111)))) | s(bool,X113) = s(bool,'const.integer.int_le_2'(s('type.integer.int',X111),s('type.integer.int',X112))) | s(bool,'T_0') = s(bool,X113)) )),
  inference(superposition,[],[f464,f746])).
fof(f6189,plain,(
  ( ! [X109,X110,X108] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X108),s('type.integer.int',X109)))) | s('type.integer.int',X108) = s('type.integer.int',X109) | s(bool,X110) = s(bool,'const.integer.int_le_2'(s('type.integer.int',X108),s('type.integer.int',X109))) | s(bool,'T_0') = s(bool,X110)) )),
  inference(subsumption_resolution,[],[f5828,f330])).
fof(f5828,plain,(
  ( ! [X109,X110,X108] : (~p(s(bool,'T_0')) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X108),s('type.integer.int',X109)))) | s('type.integer.int',X108) = s('type.integer.int',X109) | s(bool,X110) = s(bool,'const.integer.int_le_2'(s('type.integer.int',X108),s('type.integer.int',X109))) | s(bool,'T_0') = s(bool,X110)) )),
  inference(superposition,[],[f427,f746])).
fof(f6188,plain,(
  ( ! [X94,X97,X95,X96] : (~sP8(X94,X95,X96) | sP9(X94,X95,X96) | s(bool,X94) = s(bool,X97) | s(bool,'T_0') = s(bool,X97)) )),
  inference(subsumption_resolution,[],[f5821,f330])).
fof(f5821,plain,(
  ( ! [X94,X97,X95,X96] : (~p(s(bool,'T_0')) | ~sP8(X94,X95,X96) | sP9(X94,X95,X96) | s(bool,X94) = s(bool,X97) | s(bool,'T_0') = s(bool,X97)) )),
  inference(superposition,[],[f587,f746])).
fof(f6187,plain,(
  ( ! [X92,X90,X93,X91] : (~sP10(X90,X91,X92) | sP11(X90,X91,X92) | s(bool,X90) = s(bool,X93) | s(bool,'T_0') = s(bool,X93)) )),
  inference(subsumption_resolution,[],[f5820,f330])).
fof(f5820,plain,(
  ( ! [X92,X90,X93,X91] : (~p(s(bool,'T_0')) | ~sP10(X90,X91,X92) | sP11(X90,X91,X92) | s(bool,X90) = s(bool,X93) | s(bool,'T_0') = s(bool,X93)) )),
  inference(superposition,[],[f586,f746])).
fof(f6186,plain,(
  ( ! [X85,X83,X86,X84] : (~p(s(bool,X84)) | p(s(bool,X85)) | ~sP11(X83,X85,X84) | s(bool,X83) = s(bool,X86) | s(bool,'T_0') = s(bool,X86)) )),
  inference(subsumption_resolution,[],[f5818,f330])).
fof(f5818,plain,(
  ( ! [X85,X83,X86,X84] : (~p(s(bool,'T_0')) | ~p(s(bool,X84)) | p(s(bool,X85)) | ~sP11(X83,X85,X84) | s(bool,X83) = s(bool,X86) | s(bool,'T_0') = s(bool,X86)) )),
  inference(superposition,[],[f563,f746])).
fof(f6185,plain,(
  ( ! [X80,X81,X79,X82] : (~p(s(bool,X80)) | sP11(X79,X80,X81) | s(bool,X79) = s(bool,X82) | s(bool,'T_0') = s(bool,X82)) )),
  inference(subsumption_resolution,[],[f5817,f330])).
fof(f5817,plain,(
  ( ! [X80,X81,X79,X82] : (~p(s(bool,'T_0')) | ~p(s(bool,X80)) | sP11(X79,X80,X81) | s(bool,X79) = s(bool,X82) | s(bool,'T_0') = s(bool,X82)) )),
  inference(superposition,[],[f562,f746])).
fof(f6184,plain,(
  ( ! [X78,X76,X77,X75] : (p(s(bool,X76)) | sP11(X75,X77,X76) | s(bool,X75) = s(bool,X78) | s(bool,'T_0') = s(bool,X78)) )),
  inference(subsumption_resolution,[],[f5816,f330])).
fof(f5816,plain,(
  ( ! [X78,X76,X77,X75] : (~p(s(bool,'T_0')) | p(s(bool,X76)) | sP11(X75,X77,X76) | s(bool,X75) = s(bool,X78) | s(bool,'T_0') = s(bool,X78)) )),
  inference(superposition,[],[f561,f746])).
fof(f6183,plain,(
  ( ! [X74,X72,X71,X73] : (p(s(bool,X72)) | sP11(X73,X72,X71) | p(s(bool,X73)) | s(bool,X71) = s(bool,X74) | s(bool,'T_0') = s(bool,X74)) )),
  inference(subsumption_resolution,[],[f5815,f330])).
fof(f5815,plain,(
  ( ! [X74,X72,X71,X73] : (~p(s(bool,'T_0')) | p(s(bool,X72)) | sP11(X73,X72,X71) | p(s(bool,X73)) | s(bool,X71) = s(bool,X74) | s(bool,'T_0') = s(bool,X74)) )),
  inference(superposition,[],[f560,f746])).
fof(f6182,plain,(
  ( ! [X70,X68,X69,X67] : (p(s(bool,X68)) | ~p(s(bool,X69)) | ~sP10(X69,X68,X67) | s(bool,X67) = s(bool,X70) | s(bool,'T_0') = s(bool,X70)) )),
  inference(subsumption_resolution,[],[f5814,f330])).
fof(f5814,plain,(
  ( ! [X70,X68,X69,X67] : (~p(s(bool,'T_0')) | p(s(bool,X68)) | ~p(s(bool,X69)) | ~sP10(X69,X68,X67) | s(bool,X67) = s(bool,X70) | s(bool,'T_0') = s(bool,X70)) )),
  inference(superposition,[],[f556,f746])).
fof(f6181,plain,(
  ( ! [X66,X64,X65,X63] : (p(s(bool,X64)) | p(s(bool,X65)) | ~sP9(X63,X65,X64) | s(bool,X63) = s(bool,X66) | s(bool,'T_0') = s(bool,X66)) )),
  inference(subsumption_resolution,[],[f5813,f330])).
fof(f5813,plain,(
  ( ! [X66,X64,X65,X63] : (~p(s(bool,'T_0')) | p(s(bool,X64)) | p(s(bool,X65)) | ~sP9(X63,X65,X64) | s(bool,X63) = s(bool,X66) | s(bool,'T_0') = s(bool,X66)) )),
  inference(superposition,[],[f546,f746])).
fof(f6180,plain,(
  ( ! [X61,X59,X62,X60] : (~p(s(bool,X60)) | sP9(X59,X60,X61) | s(bool,X59) = s(bool,X62) | s(bool,'T_0') = s(bool,X62)) )),
  inference(subsumption_resolution,[],[f5812,f330])).
fof(f5812,plain,(
  ( ! [X61,X59,X62,X60] : (~p(s(bool,'T_0')) | ~p(s(bool,X60)) | sP9(X59,X60,X61) | s(bool,X59) = s(bool,X62) | s(bool,'T_0') = s(bool,X62)) )),
  inference(superposition,[],[f545,f746])).
fof(f6179,plain,(
  ( ! [X57,X58,X56,X55] : (~p(s(bool,X56)) | sP9(X55,X57,X56) | s(bool,X55) = s(bool,X58) | s(bool,'T_0') = s(bool,X58)) )),
  inference(subsumption_resolution,[],[f5811,f330])).
fof(f5811,plain,(
  ( ! [X57,X58,X56,X55] : (~p(s(bool,'T_0')) | ~p(s(bool,X56)) | sP9(X55,X57,X56) | s(bool,X55) = s(bool,X58) | s(bool,'T_0') = s(bool,X58)) )),
  inference(superposition,[],[f544,f746])).
fof(f6178,plain,(
  ( ! [X54,X52,X53,X51] : (p(s(bool,X52)) | p(s(bool,X53)) | ~sP8(X51,X52,X53) | s(bool,X51) = s(bool,X54) | s(bool,'T_0') = s(bool,X54)) )),
  inference(subsumption_resolution,[],[f5810,f330])).
fof(f5810,plain,(
  ( ! [X54,X52,X53,X51] : (~p(s(bool,'T_0')) | p(s(bool,X52)) | p(s(bool,X53)) | ~sP8(X51,X52,X53) | s(bool,X51) = s(bool,X54) | s(bool,'T_0') = s(bool,X54)) )),
  inference(superposition,[],[f539,f746])).
fof(f6177,plain,(
  ( ! [X47,X50,X48,X49] : (~p(s(bool,X48)) | p(s(bool,X49)) | ~sP7(X49,X48,X47) | s(bool,X47) = s(bool,X50) | s(bool,'T_0') = s(bool,X50)) )),
  inference(subsumption_resolution,[],[f5809,f330])).
fof(f5809,plain,(
  ( ! [X47,X50,X48,X49] : (~p(s(bool,'T_0')) | ~p(s(bool,X48)) | p(s(bool,X49)) | ~sP7(X49,X48,X47) | s(bool,X47) = s(bool,X50) | s(bool,'T_0') = s(bool,X50)) )),
  inference(superposition,[],[f531,f746])).
fof(f6176,plain,(
  ( ! [X45,X43,X46,X44] : (~p(s(bool,X44)) | ~p(s(bool,X45)) | sP7(X43,X44,X45) | s(bool,X43) = s(bool,X46) | s(bool,'T_0') = s(bool,X46)) )),
  inference(subsumption_resolution,[],[f5808,f330])).
fof(f5808,plain,(
  ( ! [X45,X43,X46,X44] : (~p(s(bool,'T_0')) | ~p(s(bool,X44)) | ~p(s(bool,X45)) | sP7(X43,X44,X45) | s(bool,X43) = s(bool,X46) | s(bool,'T_0') = s(bool,X46)) )),
  inference(superposition,[],[f528,f746])).
fof(f6175,plain,(
  ( ! [X39,X41,X42,X40] : (~p(s(bool,X40)) | p(s(bool,X41)) | ~sP6(X40,X39,X41) | s(bool,X39) = s(bool,X42) | s(bool,'T_0') = s(bool,X42)) )),
  inference(subsumption_resolution,[],[f5807,f330])).
fof(f5807,plain,(
  ( ! [X39,X41,X42,X40] : (~p(s(bool,'T_0')) | ~p(s(bool,X40)) | p(s(bool,X41)) | ~sP6(X40,X39,X41) | s(bool,X39) = s(bool,X42) | s(bool,'T_0') = s(bool,X42)) )),
  inference(superposition,[],[f522,f746])).
fof(f6174,plain,(
  ( ! [X37,X35,X38,X36] : (~p(s(bool,X36)) | p(s(bool,X37)) | ~sP3(X36,X35,X37) | s(bool,X35) = s(bool,X38) | s(bool,'T_0') = s(bool,X38)) )),
  inference(subsumption_resolution,[],[f5806,f330])).
fof(f5806,plain,(
  ( ! [X37,X35,X38,X36] : (~p(s(bool,'T_0')) | ~p(s(bool,X36)) | p(s(bool,X37)) | ~sP3(X36,X35,X37) | s(bool,X35) = s(bool,X38) | s(bool,'T_0') = s(bool,X38)) )),
  inference(superposition,[],[f503,f746])).
fof(f6173,plain,(
  ( ! [X33,X31,X34,X32] : (~p(s(bool,X32)) | p(s(bool,X33)) | ~sP4(X32,X31,X33) | s(bool,X31) = s(bool,X34) | s(bool,'T_0') = s(bool,X34)) )),
  inference(subsumption_resolution,[],[f5805,f330])).
fof(f5805,plain,(
  ( ! [X33,X31,X34,X32] : (~p(s(bool,'T_0')) | ~p(s(bool,X32)) | p(s(bool,X33)) | ~sP4(X32,X31,X33) | s(bool,X31) = s(bool,X34) | s(bool,'T_0') = s(bool,X34)) )),
  inference(superposition,[],[f499,f746])).
fof(f6172,plain,(
  ( ! [X30,X28,X29] : (p(s(bool,X29)) | sP1(X29,X28) | s(bool,X28) = s(bool,X30) | s(bool,'T_0') = s(bool,X30)) )),
  inference(subsumption_resolution,[],[f5804,f330])).
fof(f5804,plain,(
  ( ! [X30,X28,X29] : (~p(s(bool,'T_0')) | p(s(bool,X29)) | sP1(X29,X28) | s(bool,X28) = s(bool,X30) | s(bool,'T_0') = s(bool,X30)) )),
  inference(superposition,[],[f458,f746])).
fof(f6171,plain,(
  ( ! [X26,X27,X25] : (p(s(bool,X26)) | sP1(X25,X26) | s(bool,X25) = s(bool,X27) | s(bool,'T_0') = s(bool,X27)) )),
  inference(subsumption_resolution,[],[f5803,f330])).
fof(f5803,plain,(
  ( ! [X26,X27,X25] : (~p(s(bool,'T_0')) | p(s(bool,X26)) | sP1(X25,X26) | s(bool,X25) = s(bool,X27) | s(bool,'T_0') = s(bool,X27)) )),
  inference(superposition,[],[f455,f746])).
fof(f6170,plain,(
  ( ! [X24,X23,X22] : (sP0(X22,X23) | s(bool,X22) = s(bool,X24) | s(bool,'T_0') = s(bool,X24)) )),
  inference(subsumption_resolution,[],[f5802,f330])).
fof(f5802,plain,(
  ( ! [X24,X23,X22] : (~p(s(bool,'T_0')) | sP0(X22,X23) | s(bool,X22) = s(bool,X24) | s(bool,'T_0') = s(bool,X24)) )),
  inference(superposition,[],[f440,f746])).
fof(f6169,plain,(
  ( ! [X21,X19,X20] : (sP0(X20,X19) | s(bool,X19) = s(bool,X21) | s(bool,'T_0') = s(bool,X21)) )),
  inference(subsumption_resolution,[],[f5801,f330])).
fof(f5801,plain,(
  ( ! [X21,X19,X20] : (~p(s(bool,'T_0')) | sP0(X20,X19) | s(bool,X19) = s(bool,X21) | s(bool,'T_0') = s(bool,X21)) )),
  inference(superposition,[],[f439,f746])).
fof(f6168,plain,(
  ( ! [X17,X18,X16] : (~p(s(bool,X17)) | s(bool,X16) = s(bool,X17) | s(bool,X16) = s(bool,X18) | s(bool,'T_0') = s(bool,X18)) )),
  inference(subsumption_resolution,[],[f5800,f330])).
fof(f5800,plain,(
  ( ! [X17,X18,X16] : (~p(s(bool,'T_0')) | ~p(s(bool,X17)) | s(bool,X16) = s(bool,X17) | s(bool,X16) = s(bool,X18) | s(bool,'T_0') = s(bool,X18)) )),
  inference(superposition,[],[f423,f746])).
fof(f6167,plain,(
  ( ! [X6,X7] : (s(bool,'F_0') != s(bool,X6) | s(bool,X6) = s(bool,X7) | s(bool,'T_0') = s(bool,X7)) )),
  inference(subsumption_resolution,[],[f5796,f330])).
fof(f5796,plain,(
  ( ! [X6,X7] : (~p(s(bool,'T_0')) | s(bool,'F_0') != s(bool,X6) | s(bool,X6) = s(bool,X7) | s(bool,'T_0') = s(bool,X7)) )),
  inference(superposition,[],[f360,f746])).
fof(f5791,plain,(
  ( ! [X127,X128,X126] : (~p(s(bool,happ(s(fun(bool,bool),X127),s(bool,X126)))) | p(s(bool,happ(s(fun(bool,bool),X127),s(bool,sK19('T_0',X127,bool))))) | s(bool,X126) = s(bool,X128) | s(bool,'T_0') = s(bool,X128)) )),
  inference(superposition,[],[f415,f746])).
fof(f5790,plain,(
  ( ! [X125,X123,X124] : (~p(s(bool,happ(s(fun(bool,bool),X124),s(bool,X123)))) | s(bool,'T_0') = s(bool,sK19('T_0',X124,bool)) | s(bool,X123) = s(bool,X125) | s(bool,'T_0') = s(bool,X125)) )),
  inference(superposition,[],[f414,f746])).
fof(f5789,plain,(
  ( ! [X121,X122,X120,X119] : (~p(s(bool,happ(s(fun(bool,bool),X120),s(bool,X119)))) | p(s(bool,happ(s(fun(bool,bool),X120),s(bool,X121)))) | s(bool,'T_0') != s(bool,X121) | s(bool,X119) = s(bool,X122) | s(bool,'T_0') = s(bool,X122)) )),
  inference(superposition,[],[f413,f746])).
fof(f5754,plain,(
  ( ! [X2,X3,X1] : (s(bool,X1) != s(bool,X2) | p(s(bool,X2)) | s(bool,X1) = s(bool,X3) | s(bool,'T_0') = s(bool,X3)) )),
  inference(superposition,[],[f356,f746])).
fof(f5685,plain,(
  ( ! [X231,X229,X230,X232] : (s(X231,f(s(bool,X232))) != s(X231,g(s(bool,X232))) | s(fun(bool,X231),X229) = s(fun(bool,X231),X230) | s(bool,'T_0') = s(bool,X232) | s(bool,'T_0') = s(bool,sK24(X229,X230,X231,bool))) )),
  inference(superposition,[],[f471,f746])).
fof(f5684,plain,(
  ( ! [X227,X225,X228,X226,X224] : (~p(s(bool,happ(s(fun(X226,bool),happ(s(fun(bool,fun(X226,bool)),X225),s(bool,X227))),s(X226,happ(s(fun(bool,X226),X224),s(bool,X227)))))) | p(s(bool,happ(s(fun(X226,bool),happ(s(fun(bool,fun(X226,bool)),X225),s(bool,X228))),s(X226,sK23(X228,X225,bool,X226))))) | s(bool,'T_0') = s(bool,X227) | s(bool,'T_0') = s(bool,sK22(X224,X225,bool,X226))) )),
  inference(superposition,[],[f470,f746])).
fof(f5683,plain,(
  ( ! [X222,X220,X219,X223,X221] : (~p(s(bool,happ(s(fun(X220,bool),happ(s(fun(bool,fun(X220,bool)),X219),s(bool,X221))),s(X220,X222)))) | p(s(bool,happ(s(fun(X220,bool),happ(s(fun(bool,fun(X220,bool)),X219),s(bool,X223))),s(X220,happ(s(fun(bool,X220),sK21(X219,bool,X220)),s(bool,X223)))))) | s(bool,'T_0') = s(bool,X221) | s(bool,'T_0') = s(bool,sK20(X219,bool,X220))) )),
  inference(superposition,[],[f469,f746])).
fof(f5682,plain,(
  ( ! [X218,X216,X215,X217,X214] : (~p(s(bool,happ(s(fun(bool,bool),happ(s(fun(X214,fun(bool,bool)),X216),s(X214,sK22(X215,X216,X214,bool)))),s(bool,X217)))) | p(s(bool,happ(s(fun(bool,bool),happ(s(fun(X214,fun(bool,bool)),X216),s(X214,X218))),s(bool,sK23(X218,X216,X214,bool))))) | s(bool,'T_0') = s(bool,X217) | s(bool,'T_0') = s(bool,happ(s(fun(X214,bool),X215),s(X214,sK22(X215,X216,X214,bool))))) )),
  inference(superposition,[],[f470,f746])).
fof(f5681,plain,(
  ( ! [X212,X210,X213,X211] : (s(bool,X213) != s(bool,f(s(X210,sK24(X211,X212,bool,X210)))) | s(fun(X210,bool),X211) = s(fun(X210,bool),X212) | s(bool,'T_0') = s(bool,X213) | s(bool,'T_0') = s(bool,g(s(X210,sK24(X211,X212,bool,X210))))) )),
  inference(superposition,[],[f471,f746])).
fof(f5679,plain,(
  ( ! [X198,X200,X199] : (~p(s(bool,happ(s(fun(bool,bool),X200),s(bool,X199)))) | p(s(bool,happ(s(fun(bool,bool),X200),s(bool,sK19(X198,X200,bool))))) | s(bool,'T_0') = s(bool,X199) | s(bool,'T_0') = s(bool,X198)) )),
  inference(superposition,[],[f415,f746])).
fof(f5678,plain,(
  ( ! [X196,X197,X195] : (~p(s(bool,happ(s(fun(bool,bool),X197),s(bool,X196)))) | s(bool,X195) = s(bool,sK19(X195,X197,bool)) | s(bool,'T_0') = s(bool,X196) | s(bool,'T_0') = s(bool,X195)) )),
  inference(superposition,[],[f414,f746])).
fof(f5677,plain,(
  ( ! [X191,X194,X192,X193] : (~p(s(bool,happ(s(fun(bool,bool),X193),s(bool,X192)))) | p(s(bool,happ(s(fun(bool,bool),X193),s(bool,X194)))) | s(bool,X191) != s(bool,X194) | s(bool,'T_0') = s(bool,X192) | s(bool,'T_0') = s(bool,X191)) )),
  inference(superposition,[],[f413,f746])).
fof(f5601,plain,(
  ( ! [X17,X18] : (s(bool,'T_0') = s(bool,'const.integer.int_le_2'(s('type.integer.int',X17),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,X18) = s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X17))))) | s(bool,'T_0') = s(bool,X18)) )),
  inference(superposition,[],[f746,f339])).
fof(f5600,plain,(
  ( ! [X14,X15,X16] : (s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',X14),s('type.num.num',X15))) | s(bool,X16) = s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X14))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X15))))) | s(bool,'T_0') = s(bool,X16)) )),
  inference(superposition,[],[f746,f417])).
fof(f5590,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,X0) = s(bool,X1) | s(bool,X1) = s(bool,X2) | s(bool,'T_0') = s(bool,X2) | s(bool,X0) = s(bool,X3) | s(bool,'T_0') = s(bool,X3)) )),
  inference(superposition,[],[f746,f746])).
fof(f5575,plain,(
  ( ! [X24,X23] : (s(bool,X24) = s(bool,'const.integer.int_le_2'(s('type.integer.int',X23),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X24) | s(bool,'T_0') = s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X23)))))) )),
  inference(superposition,[],[f746,f339])).
fof(f5574,plain,(
  ( ! [X21,X22,X20] : (s(bool,X22) = s(bool,'const.arithmetic.<=_2'(s('type.num.num',X20),s('type.num.num',X21))) | s(bool,'T_0') = s(bool,X22) | s(bool,'T_0') = s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X20))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X21)))))) )),
  inference(superposition,[],[f746,f417])).
fof(f5475,plain,(
  ( ! [X177,X178] : (~p(s(bool,happ(s(fun('type.integer.int',bool),X178),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | p(s(bool,happ(s(fun('type.integer.int',bool),X178),s('type.integer.int',sK19('const.integer.int_add_2'(s('type.integer.int',X177),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X177)))),X178,'type.integer.int')))))) )),
  inference(superposition,[],[f415,f1132])).
fof(f5538,plain,(
  ( ! [X175,X176] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int',sK19('const.integer.int_add_2'(s('type.integer.int',X175),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X175)))),X176,'type.integer.int')) | ~p(s(bool,happ(s(fun('type.integer.int',bool),X176),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) )),
  inference(forward_demodulation,[],[f5537,f1527])).
fof(f5537,plain,(
  ( ! [X175,X176] : (s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X175),s('type.integer.int',X175))) = s('type.integer.int',sK19('const.integer.int_add_2'(s('type.integer.int',X175),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X175)))),X176,'type.integer.int')) | ~p(s(bool,happ(s(fun('type.integer.int',bool),X176),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) )),
  inference(forward_demodulation,[],[f5474,f416])).
fof(f5474,plain,(
  ( ! [X175,X176] : (~p(s(bool,happ(s(fun('type.integer.int',bool),X176),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X175),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X175))))) = s('type.integer.int',sK19('const.integer.int_add_2'(s('type.integer.int',X175),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X175)))),X176,'type.integer.int'))) )),
  inference(superposition,[],[f414,f1132])).
fof(f5409,plain,(
  ( ! [X66,X64,X65] : (s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X66),s('type.integer.int',X65))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X65))) | s('type.integer.int',X66) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X64),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X64)))))) )),
  inference(superposition,[],[f472,f1132])).
fof(f5401,plain,(
  ( ! [X48,X49] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X49))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X49))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X48),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X48)))))) )),
  inference(superposition,[],[f432,f1132])).
fof(f5372,plain,(
  ( ! [X2,X1] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X2),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X1))))) | s('type.integer.int',X1) = s('type.integer.int',X2)) )),
  inference(superposition,[],[f472,f1132])).
fof(f5366,plain,(
  ( ! [X4,X3] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X3))),s('type.integer.int',X4))),s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X3),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X4))))))) | s('type.integer.int',X4) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f1132,f425])).
fof(f5363,plain,(
  ( ! [X1] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK14(X1)))),s('type.integer.int',X1))) | s('type.integer.int',X1) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int',X1) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK13(X1))))) )),
  inference(superposition,[],[f1132,f343])).
fof(f5021,plain,(
  ( ! [X77] : (~p(s(bool,happ(s(fun('type.integer.int',bool),X77),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | p(s(bool,happ(s(fun('type.integer.int',bool),X77),s('type.integer.int',sK19('const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))),X77,'type.integer.int')))))) )),
  inference(superposition,[],[f415,f1586])).
fof(f5057,plain,(
  ( ! [X76] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int',sK19('const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))),X76,'type.integer.int')) | ~p(s(bool,happ(s(fun('type.integer.int',bool),X76),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) )),
  inference(forward_demodulation,[],[f5020,f1586])).
fof(f5020,plain,(
  ( ! [X76] : (~p(s(bool,happ(s(fun('type.integer.int',bool),X76),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.integer.int',sK19('const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))),X76,'type.integer.int'))) )),
  inference(superposition,[],[f414,f1586])).
fof(f5045,plain,(
  ( ! [X26] : (s('type.integer.int',X26) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X26),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) )),
  inference(forward_demodulation,[],[f4953,f337])).
fof(f4953,plain,(
  ( ! [X26] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X26),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int',X26) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))))) )),
  inference(superposition,[],[f432,f1586])).
fof(f4926,plain,(
  ( ! [X5] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X5))))) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X5))))) | s('type.integer.int',X5) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f425,f1586])).
fof(f4925,plain,(
  ( ! [X4] : (s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X4))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X4))))) | s('type.integer.int',X4) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f424,f1586])).
fof(f4924,plain,(
  ( ! [X3] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X3),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X3))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) )),
  inference(superposition,[],[f419,f1586])).
fof(f5030,plain,(
  ( ! [X2] : (s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X2))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X2)))))) )),
  inference(forward_demodulation,[],[f4923,f416])).
fof(f4923,plain,(
  ( ! [X2] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X2))))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X2)))))) )),
  inference(superposition,[],[f419,f1586])).
fof(f4922,plain,(
  ( ! [X1] : (s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X1),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X1),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))))) )),
  inference(superposition,[],[f418,f1586])).
fof(f4921,plain,(
  ( ! [X0] : (s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) )),
  inference(superposition,[],[f416,f1586])).
fof(f4912,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))),
  inference(unit_resulting_resolution,[],[f1586,f433])).
fof(f4870,plain,(
  ( ! [X161,X162] : (~p(s(bool,happ(s(fun('type.integer.int',bool),X162),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | p(s(bool,happ(s(fun('type.integer.int',bool),X162),s('type.integer.int',sK19('const.integer.int_sub_2'(s('type.integer.int',X161),s('type.integer.int',X161)),X162,'type.integer.int')))))) )),
  inference(superposition,[],[f415,f1527])).
fof(f4900,plain,(
  ( ! [X159,X160] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int',sK19('const.integer.int_sub_2'(s('type.integer.int',X159),s('type.integer.int',X159)),X160,'type.integer.int')) | ~p(s(bool,happ(s(fun('type.integer.int',bool),X160),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) )),
  inference(forward_demodulation,[],[f4869,f1527])).
fof(f4869,plain,(
  ( ! [X159,X160] : (~p(s(bool,happ(s(fun('type.integer.int',bool),X160),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X159),s('type.integer.int',X159))) = s('type.integer.int',sK19('const.integer.int_sub_2'(s('type.integer.int',X159),s('type.integer.int',X159)),X160,'type.integer.int'))) )),
  inference(superposition,[],[f414,f1527])).
fof(f4810,plain,(
  ( ! [X59,X57,X58] : (s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X59),s('type.integer.int',X58))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X58))) | s('type.integer.int',X59) = s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X57),s('type.integer.int',X57)))) )),
  inference(superposition,[],[f472,f1527])).
fof(f4802,plain,(
  ( ! [X41,X42] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X42))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X42))) = s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X41),s('type.integer.int',X41)))) )),
  inference(superposition,[],[f432,f1527])).
fof(f3061,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,happ(s(fun(bool,bool),happ(s(fun(X0,fun(bool,bool)),X2),s(X0,sK22(X1,X2,X0,bool)))),s(bool,'F_0')))) | p(s(bool,happ(s(fun(bool,bool),happ(s(fun(X0,fun(bool,bool)),X2),s(X0,X3))),s(bool,sK23(X3,X2,X0,bool))))) | s(bool,'T_0') = s(bool,happ(s(fun(X0,bool),X1),s(X0,sK22(X1,X2,X0,bool))))) )),
  inference(superposition,[],[f470,f341])).
fof(f3060,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,happ(s(fun(X2,bool),happ(s(fun(bool,fun(X2,bool)),X1),s(bool,'F_0'))),s(X2,happ(s(fun(bool,X2),X0),s(bool,'F_0')))))) | p(s(bool,happ(s(fun(X2,bool),happ(s(fun(bool,fun(X2,bool)),X1),s(bool,X3))),s(X2,sK23(X3,X1,bool,X2))))) | s(bool,'T_0') = s(bool,sK22(X0,X1,bool,X2))) )),
  inference(superposition,[],[f470,f341])).
fof(f3005,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,happ(s(fun(X1,bool),happ(s(fun(bool,fun(X1,bool)),X0),s(bool,'F_0'))),s(X1,X2)))) | p(s(bool,happ(s(fun(X1,bool),happ(s(fun(bool,fun(X1,bool)),X0),s(bool,X3))),s(X1,happ(s(fun(bool,X1),sK21(X0,bool,X1)),s(bool,X3)))))) | s(bool,'T_0') = s(bool,sK20(X0,bool,X1))) )),
  inference(superposition,[],[f469,f341])).
fof(f2962,plain,(
  ( ! [X180,X181,X179] : (~p(s(bool,happ(s(fun('type.integer.int',bool),X181),s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X179),s('type.integer.int',X180)))))) | p(s(bool,happ(s(fun('type.integer.int',bool),X181),s('type.integer.int',sK19('const.integer.int_sub_2'(s('type.integer.int',X179),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X179),s('type.integer.int',X180))),s('type.integer.int',X180)))),X181,'type.integer.int'))))) | s('type.integer.int',X180) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f415,f426])).
fof(f2961,plain,(
  ( ! [X177,X178,X176] : (~p(s(bool,happ(s(fun('type.integer.int',bool),X178),s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X176),s('type.integer.int',X177)))))) | s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X176),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X176),s('type.integer.int',X177))),s('type.integer.int',X177))))) = s('type.integer.int',sK19('const.integer.int_sub_2'(s('type.integer.int',X176),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X176),s('type.integer.int',X177))),s('type.integer.int',X177)))),X178,'type.integer.int')) | s('type.integer.int',X177) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f414,f426])).
fof(f2960,plain,(
  ( ! [X175,X173,X174,X172] : (~p(s(bool,happ(s(fun('type.integer.int',bool),X174),s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X172),s('type.integer.int',X173)))))) | p(s(bool,happ(s(fun('type.integer.int',bool),X174),s('type.integer.int',X175)))) | s('type.integer.int',X175) != s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X172),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X172),s('type.integer.int',X173))),s('type.integer.int',X173))))) | s('type.integer.int',X173) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f413,f426])).
fof(f2933,plain,(
  ( ! [X94,X97,X95,X96] : (s('type.integer.int',X96) != s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X94),s('type.integer.int',X95))) | s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X96),s('type.integer.int',X97))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X94),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X94),s('type.integer.int',X95))),s('type.integer.int',X95))))),s('type.integer.int',X97))) | s('type.integer.int',X95) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f473,f426])).
fof(f2930,plain,(
  ( ! [X85,X83,X84,X82] : (s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X85),s('type.integer.int',X84))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X82),s('type.integer.int',X83))),s('type.integer.int',X84))) | s('type.integer.int',X85) = s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X82),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X82),s('type.integer.int',X83))),s('type.integer.int',X83))))) | s('type.integer.int',X83) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f472,f426])).
fof(f2929,plain,(
  ( ! [X80,X81,X79] : (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X81),s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X79),s('type.integer.int',X80)))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X79),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X79),s('type.integer.int',X80))),s('type.integer.int',X80))))),s('type.integer.int',X81)))) | s('type.integer.int',X80) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f464,f426])).
fof(f2928,plain,(
  ( ! [X78,X76,X77] : (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X76),s('type.integer.int',X77))),s('type.integer.int',X78)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X78),s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X76),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X76),s('type.integer.int',X77))),s('type.integer.int',X77)))))))) | s('type.integer.int',X77) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f464,f426])).
fof(f2927,plain,(
  ( ! [X74,X75,X73] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X73),s('type.integer.int',X74))),s('type.integer.int',X75)))) | p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X75),s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X73),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X73),s('type.integer.int',X74))),s('type.integer.int',X74)))))))) | s('type.integer.int',X74) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f463,f426])).
fof(f2926,plain,(
  ( ! [X70,X72,X71] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X72),s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X70),s('type.integer.int',X71)))))) | p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X70),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X70),s('type.integer.int',X71))),s('type.integer.int',X71))))),s('type.integer.int',X72)))) | s('type.integer.int',X71) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f463,f426])).
fof(f2925,plain,(
  ( ! [X68,X69,X67] : (s('type.integer.int',X69) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X67),s('type.integer.int',X68))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X69),s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X67),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X67),s('type.integer.int',X68))),s('type.integer.int',X68))))))) | s('type.integer.int',X68) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f433,f426])).
fof(f2924,plain,(
  ( ! [X66,X64,X65] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X66))) != s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X64),s('type.integer.int',X65))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X64),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X64),s('type.integer.int',X65))),s('type.integer.int',X65))))),s('type.integer.int',X66))) | s('type.integer.int',X65) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f433,f426])).
fof(f2923,plain,(
  ( ! [X61,X62,X63] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X63),s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X61),s('type.integer.int',X62))))) | s('type.integer.int',X63) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X61),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X61),s('type.integer.int',X62))),s('type.integer.int',X62))))))) | s('type.integer.int',X62) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f432,f426])).
fof(f2922,plain,(
  ( ! [X59,X60,X58] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X58),s('type.integer.int',X59))),s('type.integer.int',X60))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X60))) = s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X58),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X58),s('type.integer.int',X59))),s('type.integer.int',X59))))) | s('type.integer.int',X59) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f432,f426])).
fof(f2921,plain,(
  ( ! [X57,X56,X55] : (s('type.integer.int',X57) != s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X55),s('type.integer.int',X56))) | p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X57),s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X55),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X55),s('type.integer.int',X56))),s('type.integer.int',X56)))))))) | s('type.integer.int',X56) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f429,f426])).
fof(f2920,plain,(
  ( ! [X54,X52,X53] : (s('type.integer.int',X54) != s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X52),s('type.integer.int',X53))) | p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X52),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X52),s('type.integer.int',X53))),s('type.integer.int',X53))))),s('type.integer.int',X54)))) | s('type.integer.int',X53) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f429,f426])).
fof(f2919,plain,(
  ( ! [X50,X51,X49] : (~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X51),s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X49),s('type.integer.int',X50)))))) | p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X51),s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X49),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X49),s('type.integer.int',X50))),s('type.integer.int',X50)))))))) | s('type.integer.int',X50) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f428,f426])).
fof(f2918,plain,(
  ( ! [X47,X48,X46] : (~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X46),s('type.integer.int',X47))),s('type.integer.int',X48)))) | p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X46),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X46),s('type.integer.int',X47))),s('type.integer.int',X47))))),s('type.integer.int',X48)))) | s('type.integer.int',X47) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f428,f426])).
fof(f2917,plain,(
  ( ! [X45,X43,X44] : (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X45),s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X43),s('type.integer.int',X44)))))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X45),s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X43),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X43),s('type.integer.int',X44))),s('type.integer.int',X44)))))))) | s('type.integer.int',X45) = s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X43),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X43),s('type.integer.int',X44))),s('type.integer.int',X44))))) | s('type.integer.int',X44) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f427,f426])).
fof(f2916,plain,(
  ( ! [X41,X42,X40] : (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X40),s('type.integer.int',X41))),s('type.integer.int',X42)))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X40),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X40),s('type.integer.int',X41))),s('type.integer.int',X41))))),s('type.integer.int',X42)))) | s('type.integer.int',X42) = s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X40),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X40),s('type.integer.int',X41))),s('type.integer.int',X41))))) | s('type.integer.int',X41) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f427,f426])).
fof(f2915,plain,(
  ( ! [X39,X37,X38] : (s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X39),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X37),s('type.integer.int',X38))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X39))),s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X37),s('type.integer.int',X38))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X37),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X37),s('type.integer.int',X38))),s('type.integer.int',X38))))) | s('type.integer.int',X38) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f425,f426])).
fof(f2913,plain,(
  ( ! [X33,X31,X32] : (s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X33),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X31),s('type.integer.int',X32))))))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X33))),s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X31),s('type.integer.int',X32))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X31),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X31),s('type.integer.int',X32))),s('type.integer.int',X32))))) | s('type.integer.int',X32) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f424,f426])).
fof(f2905,plain,(
  ( ! [X8,X9] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X8),s('type.integer.int',X9))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X8),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X8),s('type.integer.int',X9))),s('type.integer.int',X9))))))) | s('type.integer.int',X9) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f367,f426])).
fof(f2904,plain,(
  ( ! [X6,X7] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X6),s('type.integer.int',X7))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X6),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X6),s('type.integer.int',X7))),s('type.integer.int',X7))))) | s('type.integer.int',X7) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f366,f426])).
fof(f2900,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X1))))) = s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X1))))),s('type.integer.int',X1))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X1)))) )),
  inference(superposition,[],[f426,f418])).
fof(f2899,plain,(
  ( ! [X26,X27,X25] : (s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X27),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X25),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X26))))))) = s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X27),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X27),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X25),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X26))))))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X25),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X26))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X25))),s('type.integer.int',X26))) | s('type.integer.int',X26) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f426,f424])).
fof(f2898,plain,(
  ( ! [X24,X23,X22] : (s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X24),s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X22),s('type.integer.int',X23))))) = s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X24),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X24),s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X22),s('type.integer.int',X23))))),s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X22),s('type.integer.int',X23))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X22),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X22),s('type.integer.int',X23))),s('type.integer.int',X23))))) | s('type.integer.int',X23) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f426,f426])).
fof(f2969,plain,(
  ( ! [X19,X17,X18] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X17),s('type.integer.int',X18))))) | s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X19),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X17),s('type.integer.int',X18))))))) = s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X19),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X19),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X17),s('type.integer.int',X18))))))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X17),s('type.integer.int',X18)))))))))) )),
  inference(forward_demodulation,[],[f2968,f418])).
fof(f2968,plain,(
  ( ! [X19,X17,X18] : (s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X19),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X17),s('type.integer.int',X18))))))) = s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X19),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X19),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X17),s('type.integer.int',X18))))))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X17),s('type.integer.int',X18))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X17),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X18)))))) )),
  inference(forward_demodulation,[],[f2896,f418])).
fof(f2896,plain,(
  ( ! [X19,X17,X18] : (s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X19),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X17),s('type.integer.int',X18))))))) = s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X19),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X19),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X17),s('type.integer.int',X18))))))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X17),s('type.integer.int',X18))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X17),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X18)))))) )),
  inference(superposition,[],[f426,f418])).
fof(f2966,plain,(
  ( ! [X12,X10,X11] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X10),s('type.integer.int',X11))))) | s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X12),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X10),s('type.integer.int',X11))))))) = s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X12),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X12),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X10),s('type.integer.int',X11))))))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X10),s('type.integer.int',X11)))))))))) )),
  inference(forward_demodulation,[],[f2965,f419])).
fof(f2965,plain,(
  ( ! [X12,X10,X11] : (s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X12),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X10),s('type.integer.int',X11))))))) = s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X12),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X12),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X10),s('type.integer.int',X11))))))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X10),s('type.integer.int',X11))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X10))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X11)))))) )),
  inference(forward_demodulation,[],[f2893,f418])).
fof(f2893,plain,(
  ( ! [X12,X10,X11] : (s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X12),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X10),s('type.integer.int',X11))))))) = s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X12),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X12),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X10),s('type.integer.int',X11))))))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X10),s('type.integer.int',X11))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X10))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X11)))))) )),
  inference(superposition,[],[f426,f419])).
fof(f2890,plain,(
  ( ! [X6,X4,X5] : (s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X6),s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X4),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X5))))))) = s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X6),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X6),s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X4),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X5))))))),s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X4),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X5))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X4))),s('type.integer.int',X5))))) | s('type.integer.int',X5) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f426,f425])).
fof(f2963,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X0))),s('type.integer.int',X1))) = s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X0))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X1))))),s('type.integer.int',X1))))) | s('type.integer.int',X1) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(duplicate_literal_removal,[],[f2887])).
fof(f2887,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X0))),s('type.integer.int',X1))) = s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X0))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X1))))),s('type.integer.int',X1))))) | s('type.integer.int',X1) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int',X1) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f426,f424])).
fof(f2822,plain,(
  ( ! [X194,X195,X193] : (~p(s(bool,happ(s(fun('type.integer.int',bool),X195),s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X193),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X194)))))))) | p(s(bool,happ(s(fun('type.integer.int',bool),X195),s('type.integer.int',sK19('const.integer.int_neg_1'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X193))),s('type.integer.int',X194)))),X195,'type.integer.int'))))) | s('type.integer.int',X194) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f415,f425])).
fof(f2821,plain,(
  ( ! [X191,X192,X190] : (~p(s(bool,happ(s(fun('type.integer.int',bool),X192),s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X190),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X191)))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X190))),s('type.integer.int',X191))))) = s('type.integer.int',sK19('const.integer.int_neg_1'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X190))),s('type.integer.int',X191)))),X192,'type.integer.int')) | s('type.integer.int',X191) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f414,f425])).
fof(f2820,plain,(
  ( ! [X189,X187,X188,X186] : (~p(s(bool,happ(s(fun('type.integer.int',bool),X188),s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X186),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X187)))))))) | p(s(bool,happ(s(fun('type.integer.int',bool),X188),s('type.integer.int',X189)))) | s('type.integer.int',X189) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X186))),s('type.integer.int',X187))))) | s('type.integer.int',X187) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f413,f425])).
fof(f2795,plain,(
  ( ! [X116,X114,X117,X115] : (s('type.integer.int',X116) != s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X114),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X115))))) | s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X116),s('type.integer.int',X117))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X114))),s('type.integer.int',X115))))),s('type.integer.int',X117))) | s('type.integer.int',X115) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f473,f425])).
fof(f2792,plain,(
  ( ! [X103,X105,X102,X104] : (s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X105),s('type.integer.int',X104))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X102),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X103))))),s('type.integer.int',X104))) | s('type.integer.int',X105) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X102))),s('type.integer.int',X103))))) | s('type.integer.int',X103) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f472,f425])).
fof(f2791,plain,(
  ( ! [X101,X99,X100] : (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X101),s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X99),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X100)))))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X99))),s('type.integer.int',X100))))),s('type.integer.int',X101)))) | s('type.integer.int',X100) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f464,f425])).
fof(f2790,plain,(
  ( ! [X97,X98,X96] : (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X96),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X97))))),s('type.integer.int',X98)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X98),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X96))),s('type.integer.int',X97)))))))) | s('type.integer.int',X97) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f464,f425])).
fof(f2789,plain,(
  ( ! [X94,X95,X93] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X93),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X94))))),s('type.integer.int',X95)))) | p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X95),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X93))),s('type.integer.int',X94)))))))) | s('type.integer.int',X94) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f463,f425])).
fof(f2788,plain,(
  ( ! [X92,X90,X91] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X92),s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X90),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X91)))))))) | p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X90))),s('type.integer.int',X91))))),s('type.integer.int',X92)))) | s('type.integer.int',X91) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f463,f425])).
fof(f2787,plain,(
  ( ! [X88,X87,X89] : (s('type.integer.int',X89) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X87),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X88))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X89),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X87))),s('type.integer.int',X88))))))) | s('type.integer.int',X88) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f433,f425])).
fof(f2786,plain,(
  ( ! [X85,X86,X84] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X86))) != s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X84),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X85))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X84))),s('type.integer.int',X85))))),s('type.integer.int',X86))) | s('type.integer.int',X85) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f433,f425])).
fof(f2833,plain,(
  ( ! [X83,X81,X82] : (s('type.integer.int',X83) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X81))),s('type.integer.int',X82))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X83),s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X81),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X82))))))) | s('type.integer.int',X82) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(forward_demodulation,[],[f2785,f337])).
fof(f2785,plain,(
  ( ! [X83,X81,X82] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X83),s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X81),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X82))))))) | s('type.integer.int',X83) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X81))),s('type.integer.int',X82))))))) | s('type.integer.int',X82) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f432,f425])).
fof(f2784,plain,(
  ( ! [X80,X78,X79] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X78),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X79))))),s('type.integer.int',X80))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X80))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X78))),s('type.integer.int',X79))))) | s('type.integer.int',X79) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f432,f425])).
fof(f2783,plain,(
  ( ! [X76,X77,X75] : (s('type.integer.int',X77) != s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X75),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X76))))) | p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X77),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X75))),s('type.integer.int',X76)))))))) | s('type.integer.int',X76) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f429,f425])).
fof(f2782,plain,(
  ( ! [X74,X72,X73] : (s('type.integer.int',X74) != s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X72),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X73))))) | p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X72))),s('type.integer.int',X73))))),s('type.integer.int',X74)))) | s('type.integer.int',X73) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f429,f425])).
fof(f2781,plain,(
  ( ! [X70,X71,X69] : (~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X71),s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X69),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X70)))))))) | p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X71),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X69))),s('type.integer.int',X70)))))))) | s('type.integer.int',X70) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f428,f425])).
fof(f2780,plain,(
  ( ! [X68,X66,X67] : (~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X66),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X67))))),s('type.integer.int',X68)))) | p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X66))),s('type.integer.int',X67))))),s('type.integer.int',X68)))) | s('type.integer.int',X67) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f428,f425])).
fof(f2779,plain,(
  ( ! [X64,X65,X63] : (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X65),s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X63),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X64)))))))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X65),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X63))),s('type.integer.int',X64)))))))) | s('type.integer.int',X65) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X63))),s('type.integer.int',X64))))) | s('type.integer.int',X64) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f427,f425])).
fof(f2778,plain,(
  ( ! [X61,X62,X60] : (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X60),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X61))))),s('type.integer.int',X62)))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X60))),s('type.integer.int',X61))))),s('type.integer.int',X62)))) | s('type.integer.int',X62) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X60))),s('type.integer.int',X61))))) | s('type.integer.int',X61) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f427,f425])).
fof(f2777,plain,(
  ( ! [X59,X57,X58] : (s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X59),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X57),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X58))))))))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X59))),s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X57),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X58))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X57))),s('type.integer.int',X58))))) | s('type.integer.int',X58) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f424,f425])).
fof(f2769,plain,(
  ( ! [X35,X34] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X34),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X35))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X34))),s('type.integer.int',X35))))))) | s('type.integer.int',X35) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f367,f425])).
fof(f2768,plain,(
  ( ! [X33,X32] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X32),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X33))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X32))),s('type.integer.int',X33))))) | s('type.integer.int',X33) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f366,f425])).
fof(f2764,plain,(
  ( ! [X24,X23,X25] : (s('type.integer.int',X25) != s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X23),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X24))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X25),s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X23))),s('type.integer.int',X24))))) | s('type.integer.int',X24) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f433,f425])).
fof(f2763,plain,(
  ( ! [X21,X22,X20] : (s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X20),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X21))))),s('type.integer.int',X22))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X20))),s('type.integer.int',X21))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X22))))) | s('type.integer.int',X22) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int',X21) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f424,f425])).
fof(f2762,plain,(
  ( ! [X19,X17,X18] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X19),s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X17))),s('type.integer.int',X18))))))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X19))),s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X17),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X18))))))) | s('type.integer.int',X18) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f419,f425])).
fof(f2832,plain,(
  ( ! [X14,X15,X16] : (s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X14),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X15))))),s('type.integer.int',X16))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X14))),s('type.integer.int',X15))),s('type.integer.int',X16))))) | s('type.integer.int',X15) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(forward_demodulation,[],[f2761,f416])).
fof(f2761,plain,(
  ( ! [X14,X15,X16] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X14))),s('type.integer.int',X15))),s('type.integer.int',X16))))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X14),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X15))))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X16))))) | s('type.integer.int',X15) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f419,f425])).
fof(f2760,plain,(
  ( ! [X12,X13,X11] : (s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X13),s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X11),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X12))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X13),s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X11))),s('type.integer.int',X12))))))) | s('type.integer.int',X12) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f418,f425])).
fof(f2759,plain,(
  ( ! [X10,X8,X9] : (s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X10),s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X8),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X9))))))) = s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X10),s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X8))),s('type.integer.int',X9))))) | s('type.integer.int',X9) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f416,f425])).
fof(f2758,plain,(
  ( ! [X6,X7] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X6),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X7))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X6))),s('type.integer.int',X7))) | s('type.integer.int',X7) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f366,f425])).
fof(f2757,plain,(
  ( ! [X4,X5] : (s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X4),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X5))))))) = s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X4))),s('type.integer.int',X5))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int',X5) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f339,f425])).
fof(f2756,plain,(
  ( ! [X2,X3] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X2),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X3))))),s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X2))),s('type.integer.int',X3))))) | s('type.integer.int',X3) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f338,f425])).
fof(f2755,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X0))),s('type.integer.int',X1))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X1))))))) | s('type.integer.int',X1) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f337,f425])).
fof(f2754,plain,(
  ( ! [X24,X23,X22] : (s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X24),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X22),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X23))))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X24))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X22),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X23))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X22))),s('type.integer.int',X23))) | s('type.integer.int',X23) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f425,f424])).
fof(f2830,plain,(
  ( ! [X19,X17,X18] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X17),s('type.integer.int',X18))))) | s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X19),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X17),s('type.integer.int',X18))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X19))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X17),s('type.integer.int',X18)))))))))) )),
  inference(forward_demodulation,[],[f2829,f418])).
fof(f2829,plain,(
  ( ! [X19,X17,X18] : (s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X19),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X17),s('type.integer.int',X18))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X19))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X17),s('type.integer.int',X18))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X17),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X18)))))) )),
  inference(forward_demodulation,[],[f2752,f337])).
fof(f2752,plain,(
  ( ! [X19,X17,X18] : (s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X19),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X17),s('type.integer.int',X18))))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X19))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X17),s('type.integer.int',X18))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X17),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X18)))))) )),
  inference(superposition,[],[f425,f418])).
fof(f2827,plain,(
  ( ! [X12,X10,X11] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X10),s('type.integer.int',X11))))) | s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X12),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X10),s('type.integer.int',X11))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X12))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X10),s('type.integer.int',X11)))))))))) )),
  inference(forward_demodulation,[],[f2826,f419])).
fof(f2826,plain,(
  ( ! [X12,X10,X11] : (s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X12),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X10),s('type.integer.int',X11))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X12))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X10),s('type.integer.int',X11))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X10))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X11)))))) )),
  inference(forward_demodulation,[],[f2749,f337])).
fof(f2749,plain,(
  ( ! [X12,X10,X11] : (s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X12),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X10),s('type.integer.int',X11))))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X12))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X10),s('type.integer.int',X11))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X10))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X11)))))) )),
  inference(superposition,[],[f425,f419])).
fof(f2746,plain,(
  ( ! [X6,X4,X5] : (s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X6),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X4),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X5))))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X6))),s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X4),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X5))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X4))),s('type.integer.int',X5))))) | s('type.integer.int',X5) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f425,f425])).
fof(f2742,plain,(
  ( ! [X6,X4,X5] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X4),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X5))))),s('type.integer.int',X6))))) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X4))),s('type.integer.int',X5))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X6))))) | s('type.integer.int',X6) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int',X5) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f425,f425])).
fof(f2741,plain,(
  ( ! [X2,X3] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X2),s('type.integer.int',X3))))) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK14(X2)))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X3))))) | s('type.integer.int',X3) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int',X2) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int',X2) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK13(X2))))) )),
  inference(superposition,[],[f425,f343])).
fof(f2740,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X0),s('type.integer.int',X1))))) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X0))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X1))))) | s('type.integer.int',X1) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f425,f337])).
fof(f2662,plain,(
  ( ! [X158,X159,X157] : (~p(s(bool,happ(s(fun('type.integer.int',bool),X159),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X157),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X158)))))))) | p(s(bool,happ(s(fun('type.integer.int',bool),X159),s('type.integer.int',sK19('const.integer.int_div_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X157))),s('type.integer.int',X158)),X159,'type.integer.int'))))) | s('type.integer.int',X158) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f415,f424])).
fof(f2661,plain,(
  ( ! [X156,X154,X155] : (~p(s(bool,happ(s(fun('type.integer.int',bool),X156),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X154),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X155)))))))) | s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X154))),s('type.integer.int',X155))) = s('type.integer.int',sK19('const.integer.int_div_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X154))),s('type.integer.int',X155)),X156,'type.integer.int')) | s('type.integer.int',X155) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f414,f424])).
fof(f2660,plain,(
  ( ! [X152,X151,X153,X150] : (~p(s(bool,happ(s(fun('type.integer.int',bool),X152),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X150),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X151)))))))) | p(s(bool,happ(s(fun('type.integer.int',bool),X152),s('type.integer.int',X153)))) | s('type.integer.int',X153) != s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X150))),s('type.integer.int',X151))) | s('type.integer.int',X151) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f413,f424])).
fof(f2637,plain,(
  ( ! [X85,X83,X84,X82] : (s('type.integer.int',X84) != s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X82),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X83))))) | s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X84),s('type.integer.int',X85))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X82))),s('type.integer.int',X83))),s('type.integer.int',X85))) | s('type.integer.int',X83) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f473,f424])).
fof(f2634,plain,(
  ( ! [X70,X72,X71,X73] : (s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X73),s('type.integer.int',X72))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X70),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X71))))),s('type.integer.int',X72))) | s('type.integer.int',X73) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X70))),s('type.integer.int',X71))) | s('type.integer.int',X71) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f472,f424])).
fof(f2633,plain,(
  ( ! [X68,X69,X67] : (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X69),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X67),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X68)))))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X67))),s('type.integer.int',X68))),s('type.integer.int',X69)))) | s('type.integer.int',X68) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f464,f424])).
fof(f2632,plain,(
  ( ! [X66,X64,X65] : (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X64),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X65))))),s('type.integer.int',X66)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X66),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X64))),s('type.integer.int',X65)))))) | s('type.integer.int',X65) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f464,f424])).
fof(f2631,plain,(
  ( ! [X61,X62,X63] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X61),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X62))))),s('type.integer.int',X63)))) | p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X63),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X61))),s('type.integer.int',X62)))))) | s('type.integer.int',X62) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f463,f424])).
fof(f2630,plain,(
  ( ! [X59,X60,X58] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X60),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X58),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X59)))))))) | p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X58))),s('type.integer.int',X59))),s('type.integer.int',X60)))) | s('type.integer.int',X59) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f463,f424])).
fof(f2629,plain,(
  ( ! [X57,X56,X55] : (s('type.integer.int',X57) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X55),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X56))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X57),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X55))),s('type.integer.int',X56))))) | s('type.integer.int',X56) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f433,f424])).
fof(f2628,plain,(
  ( ! [X54,X52,X53] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X54))) != s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X52),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X53))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X52))),s('type.integer.int',X53))),s('type.integer.int',X54))) | s('type.integer.int',X53) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f433,f424])).
fof(f2627,plain,(
  ( ! [X50,X51,X49] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X51),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X49),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X50))))))) | s('type.integer.int',X51) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X49))),s('type.integer.int',X50))))) | s('type.integer.int',X50) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f432,f424])).
fof(f2626,plain,(
  ( ! [X47,X48,X46] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X46),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X47))))),s('type.integer.int',X48))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X48))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X46))),s('type.integer.int',X47))) | s('type.integer.int',X47) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f432,f424])).
fof(f2625,plain,(
  ( ! [X45,X43,X44] : (s('type.integer.int',X45) != s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X43),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X44))))) | p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X45),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X43))),s('type.integer.int',X44)))))) | s('type.integer.int',X44) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f429,f424])).
fof(f2624,plain,(
  ( ! [X41,X42,X40] : (s('type.integer.int',X42) != s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X40),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X41))))) | p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X40))),s('type.integer.int',X41))),s('type.integer.int',X42)))) | s('type.integer.int',X41) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f429,f424])).
fof(f2623,plain,(
  ( ! [X39,X37,X38] : (~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X39),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X37),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X38)))))))) | p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X39),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X37))),s('type.integer.int',X38)))))) | s('type.integer.int',X38) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f428,f424])).
fof(f2622,plain,(
  ( ! [X35,X36,X34] : (~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X34),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X35))))),s('type.integer.int',X36)))) | p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X34))),s('type.integer.int',X35))),s('type.integer.int',X36)))) | s('type.integer.int',X35) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f428,f424])).
fof(f2621,plain,(
  ( ! [X33,X31,X32] : (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X33),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X31),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X32)))))))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X33),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X31))),s('type.integer.int',X32)))))) | s('type.integer.int',X33) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X31))),s('type.integer.int',X32))) | s('type.integer.int',X32) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f427,f424])).
fof(f2620,plain,(
  ( ! [X30,X28,X29] : (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X28),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X29))))),s('type.integer.int',X30)))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X28))),s('type.integer.int',X29))),s('type.integer.int',X30)))) | s('type.integer.int',X30) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X28))),s('type.integer.int',X29))) | s('type.integer.int',X29) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f427,f424])).
fof(f2613,plain,(
  ( ! [X8,X9] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X8),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X9))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X8))),s('type.integer.int',X9))))) | s('type.integer.int',X9) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f367,f424])).
fof(f2612,plain,(
  ( ! [X6,X7] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X6),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X7))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X6))),s('type.integer.int',X7))) | s('type.integer.int',X7) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f366,f424])).
fof(f2608,plain,(
  ( ! [X21,X19,X20] : (s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X21),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X19),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X20))))))))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X21))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X19),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X20))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X19))),s('type.integer.int',X20))) | s('type.integer.int',X20) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f424,f424])).
fof(f2670,plain,(
  ( ! [X14,X15,X16] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X14),s('type.integer.int',X15))))) | s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X16),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X14),s('type.integer.int',X15))))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X16))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X14),s('type.integer.int',X15)))))))) )),
  inference(forward_demodulation,[],[f2669,f418])).
fof(f2669,plain,(
  ( ! [X14,X15,X16] : (s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X16),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X14),s('type.integer.int',X15))))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X16))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X14),s('type.integer.int',X15))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X14),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X15)))))) )),
  inference(forward_demodulation,[],[f2606,f337])).
fof(f2606,plain,(
  ( ! [X14,X15,X16] : (s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X16),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X14),s('type.integer.int',X15))))))))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X16))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X14),s('type.integer.int',X15))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X14),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X15)))))) )),
  inference(superposition,[],[f424,f418])).
fof(f2667,plain,(
  ( ! [X8,X7,X9] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X7),s('type.integer.int',X8))))) | s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X9),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X7),s('type.integer.int',X8))))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X9))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X7),s('type.integer.int',X8)))))))) )),
  inference(forward_demodulation,[],[f2666,f419])).
fof(f2666,plain,(
  ( ! [X8,X7,X9] : (s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X9),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X7),s('type.integer.int',X8))))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X9))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X7),s('type.integer.int',X8))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X7))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X8)))))) )),
  inference(forward_demodulation,[],[f2603,f337])).
fof(f2603,plain,(
  ( ! [X8,X7,X9] : (s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X9),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X7),s('type.integer.int',X8))))))))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X9))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X7),s('type.integer.int',X8))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X7))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X8)))))) )),
  inference(superposition,[],[f424,f419])).
fof(f2598,plain,(
  ( ! [X4,X3] : (s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X3),s('type.integer.int',X4))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK14(X3)))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X4))))) | s('type.integer.int',X4) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int',X3) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int',X3) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK13(X3))))) )),
  inference(superposition,[],[f424,f343])).
fof(f2597,plain,(
  ( ! [X2,X1] : (s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X1),s('type.integer.int',X2))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X1))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X2))))) | s('type.integer.int',X2) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f424,f337])).
fof(f2573,plain,(
  ( ! [X0] : (sP5('F_0','F_0','const.integer.int_le_2'(s('type.integer.int',X0),s('type.integer.int',X0)))) )),
  inference(unit_resulting_resolution,[],[f602,f622,f625,f1215,f497])).
fof(f2545,plain,(
  ( ! [X0] : (sP5('F_0','const.integer.int_le_2'(s('type.integer.int',X0),s('type.integer.int',X0)),'F_0')) )),
  inference(unit_resulting_resolution,[],[f602,f622,f624,f1214,f498])).
fof(f2539,plain,(
  ( ! [X112,X113] : (~p(s(bool,happ(s(fun('type.integer.int',bool),X113),s('type.integer.int',X112)))) | p(s(bool,happ(s(fun('type.integer.int',bool),X113),s('type.integer.int',sK19('const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK14(X112))))),X113,'type.integer.int'))))) | s('type.integer.int',X112) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int',X112) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK13(X112))))) )),
  inference(superposition,[],[f415,f343])).
fof(f2538,plain,(
  ( ! [X111,X110] : (~p(s(bool,happ(s(fun('type.integer.int',bool),X111),s('type.integer.int',X110)))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK14(X110)))))) = s('type.integer.int',sK19('const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK14(X110))))),X111,'type.integer.int')) | s('type.integer.int',X110) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int',X110) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK13(X110))))) )),
  inference(superposition,[],[f414,f343])).
fof(f2537,plain,(
  ( ! [X109,X107,X108] : (~p(s(bool,happ(s(fun('type.integer.int',bool),X108),s('type.integer.int',X107)))) | p(s(bool,happ(s(fun('type.integer.int',bool),X108),s('type.integer.int',X109)))) | s('type.integer.int',X109) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK14(X107)))))) | s('type.integer.int',X107) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int',X107) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK13(X107))))) )),
  inference(superposition,[],[f413,f343])).
fof(f2516,plain,(
  ( ! [X70,X68,X69] : (s('type.integer.int',X68) != s('type.integer.int',X69) | s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X69),s('type.integer.int',X70))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK14(X68)))))),s('type.integer.int',X70))) | s('type.integer.int',X68) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int',X68) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK13(X68))))) )),
  inference(superposition,[],[f473,f343])).
fof(f2513,plain,(
  ( ! [X61,X59,X60] : (s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X59),s('type.integer.int',X60))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X61),s('type.integer.int',X60))) | s('type.integer.int',X61) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK14(X59)))))) | s('type.integer.int',X59) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int',X59) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK13(X59))))) )),
  inference(superposition,[],[f472,f343])).
fof(f2512,plain,(
  ( ! [X57,X58] : (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X58),s('type.integer.int',X57)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK14(X57)))))),s('type.integer.int',X58)))) | s('type.integer.int',X57) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int',X57) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK13(X57))))) )),
  inference(superposition,[],[f464,f343])).
fof(f2511,plain,(
  ( ! [X56,X55] : (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X55),s('type.integer.int',X56)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X56),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK14(X55))))))))) | s('type.integer.int',X55) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int',X55) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK13(X55))))) )),
  inference(superposition,[],[f464,f343])).
fof(f2510,plain,(
  ( ! [X54,X53] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X53),s('type.integer.int',X54)))) | p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X54),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK14(X53))))))))) | s('type.integer.int',X53) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int',X53) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK13(X53))))) )),
  inference(superposition,[],[f463,f343])).
fof(f2509,plain,(
  ( ! [X52,X51] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X52),s('type.integer.int',X51)))) | p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK14(X51)))))),s('type.integer.int',X52)))) | s('type.integer.int',X51) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int',X51) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK13(X51))))) )),
  inference(superposition,[],[f463,f343])).
fof(f2508,plain,(
  ( ! [X50,X49] : (s('type.integer.int',X50) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X49))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X50),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK14(X49)))))))) | s('type.integer.int',X49) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int',X49) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK13(X49))))) )),
  inference(superposition,[],[f433,f343])).
fof(f2507,plain,(
  ( ! [X47,X48] : (s('type.integer.int',X47) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X48))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK14(X47)))))),s('type.integer.int',X48))) | s('type.integer.int',X47) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int',X47) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK13(X47))))) )),
  inference(superposition,[],[f433,f343])).
fof(f2506,plain,(
  ( ! [X45,X46] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X46),s('type.integer.int',X45))) | s('type.integer.int',X46) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK14(X45)))))))) | s('type.integer.int',X45) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int',X45) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK13(X45))))) )),
  inference(superposition,[],[f432,f343])).
fof(f2505,plain,(
  ( ! [X43,X44] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X43),s('type.integer.int',X44))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X44))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK14(X43)))))) | s('type.integer.int',X43) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int',X43) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK13(X43))))) )),
  inference(superposition,[],[f432,f343])).
fof(f2504,plain,(
  ( ! [X41,X42] : (s('type.integer.int',X41) != s('type.integer.int',X42) | p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X42),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK14(X41))))))))) | s('type.integer.int',X41) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int',X41) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK13(X41))))) )),
  inference(superposition,[],[f429,f343])).
fof(f2503,plain,(
  ( ! [X39,X40] : (s('type.integer.int',X39) != s('type.integer.int',X40) | p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK14(X39)))))),s('type.integer.int',X40)))) | s('type.integer.int',X39) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int',X39) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK13(X39))))) )),
  inference(superposition,[],[f429,f343])).
fof(f2502,plain,(
  ( ! [X37,X38] : (~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X38),s('type.integer.int',X37)))) | p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X38),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK14(X37))))))))) | s('type.integer.int',X37) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int',X37) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK13(X37))))) )),
  inference(superposition,[],[f428,f343])).
fof(f2501,plain,(
  ( ! [X35,X36] : (~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X35),s('type.integer.int',X36)))) | p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK14(X35)))))),s('type.integer.int',X36)))) | s('type.integer.int',X35) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int',X35) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK13(X35))))) )),
  inference(superposition,[],[f428,f343])).
fof(f2500,plain,(
  ( ! [X33,X34] : (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X34),s('type.integer.int',X33)))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X34),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK14(X33))))))))) | s('type.integer.int',X34) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK14(X33)))))) | s('type.integer.int',X33) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int',X33) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK13(X33))))) )),
  inference(superposition,[],[f427,f343])).
fof(f2499,plain,(
  ( ! [X31,X32] : (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X31),s('type.integer.int',X32)))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK14(X31)))))),s('type.integer.int',X32)))) | s('type.integer.int',X32) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK14(X31)))))) | s('type.integer.int',X31) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int',X31) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK13(X31))))) )),
  inference(superposition,[],[f427,f343])).
fof(f2487,plain,(
  ( ! [X12,X13] : (s('type.integer.int',X12) != s('type.integer.int',X13) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK14(X12)))))) | s('type.integer.int',X12) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int',X12) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK13(X12))))) )),
  inference(superposition,[],[f433,f343])).
fof(f2542,plain,(
  ( ! [X10,X11] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X11),s('type.integer.int',X10))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X11),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK14(X10)))))))) | s('type.integer.int',X10) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int',X10) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK13(X10))))) )),
  inference(forward_demodulation,[],[f2486,f2248])).
fof(f2486,plain,(
  ( ! [X10,X11] : (s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X11))),s('type.integer.int',X10))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X11),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK14(X10)))))))) | s('type.integer.int',X10) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int',X10) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK13(X10))))) )),
  inference(superposition,[],[f419,f343])).
fof(f2541,plain,(
  ( ! [X8,X9] : (s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X8),s('type.integer.int',X9))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK14(X8)))),s('type.integer.int',X9))))) | s('type.integer.int',X8) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int',X8) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK13(X8))))) )),
  inference(forward_demodulation,[],[f2485,f416])).
fof(f2485,plain,(
  ( ! [X8,X9] : (s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X8),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X9))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK14(X8)))),s('type.integer.int',X9))))) | s('type.integer.int',X8) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int',X8) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK13(X8))))) )),
  inference(superposition,[],[f419,f343])).
fof(f2484,plain,(
  ( ! [X6,X7] : (s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X7),s('type.integer.int',X6))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X7),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK14(X6)))))))) | s('type.integer.int',X6) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int',X6) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK13(X6))))) )),
  inference(superposition,[],[f418,f343])).
fof(f2483,plain,(
  ( ! [X4,X5] : (s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X5),s('type.integer.int',X4))) = s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X5),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK14(X4)))))) | s('type.integer.int',X4) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int',X4) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK13(X4))))) )),
  inference(superposition,[],[f416,f343])).
fof(f2540,plain,(
  ( ! [X2] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK14(X2)),s('type.num.num','const.num.|48|_0'))) = s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X2))) | s('type.integer.int',X2) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int',X2) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK13(X2))))) )),
  inference(forward_demodulation,[],[f2481,f417])).
fof(f2481,plain,(
  ( ! [X2] : (s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X2))) = s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK14(X2)))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int',X2) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int',X2) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK13(X2))))) )),
  inference(superposition,[],[f339,f343])).
fof(f2480,plain,(
  ( ! [X1] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X1),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK14(X1)))))) | s('type.integer.int',X1) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int',X1) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK13(X1))))) )),
  inference(superposition,[],[f338,f343])).
fof(f2479,plain,(
  ( ! [X0] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X0))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK14(X0)))) | s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK13(X0))))) )),
  inference(superposition,[],[f337,f343])).
fof(f2465,plain,(
  ( ! [X0] : (sP5('const.integer.int_le_2'(s('type.integer.int',X0),s('type.integer.int',X0)),'F_0','F_0')) )),
  inference(unit_resulting_resolution,[],[f602,f621,f625,f1213,f497])).
fof(f2449,plain,(
  ( ! [X0] : (sP5('const.integer.int_le_2'(s('type.integer.int',X0),s('type.integer.int',X0)),'T_0','T_0')) )),
  inference(unit_resulting_resolution,[],[f330,f628,f620,f1212,f496])).
fof(f2451,plain,(
  ( ! [X0] : (sP5('const.integer.int_le_2'(s('type.integer.int',X0),s('type.integer.int',X0)),'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'T_0')) )),
  inference(unit_resulting_resolution,[],[f330,f628,f989,f1212,f496])).
fof(f2452,plain,(
  ( ! [X0,X1] : (sP5('const.integer.int_le_2'(s('type.integer.int',X0),s('type.integer.int',X0)),'const.integer.int_le_2'(s('type.integer.int',X1),s('type.integer.int',X1)),'T_0')) )),
  inference(unit_resulting_resolution,[],[f330,f628,f1203,f1212,f496])).
fof(f2447,plain,(
  ( ! [X2,X0,X1] : (s(bool,'F_0') != s(bool,f(s(X0,sK24(X1,X2,bool,X0)))) | s(fun(X0,bool),X1) = s(fun(X0,bool),X2) | s(bool,'T_0') = s(bool,g(s(X0,sK24(X1,X2,bool,X0))))) )),
  inference(superposition,[],[f471,f341])).
fof(f2446,plain,(
  ( ! [X2,X0,X1] : (s(X2,f(s(bool,'F_0'))) != s(X2,g(s(bool,'F_0'))) | s(fun(bool,X2),X0) = s(fun(bool,X2),X1) | s(bool,'T_0') = s(bool,sK24(X0,X1,X2,bool))) )),
  inference(superposition,[],[f471,f341])).
fof(f2436,plain,(
  ( ! [X0] : (~sP5('F_0','T_0','const.integer.int_le_2'(s('type.integer.int',X0),s('type.integer.int',X0)))) )),
  inference(unit_resulting_resolution,[],[f1208,f493])).
fof(f2423,plain,(
  ( ! [X0] : (~sP5('F_0','const.integer.int_le_2'(s('type.integer.int',X0),s('type.integer.int',X0)),'T_0')) )),
  inference(unit_resulting_resolution,[],[f1204,f493])).
fof(f2403,plain,(
  ( ! [X0] : (sP5('T_0','const.integer.int_le_2'(s('type.integer.int',X0),s('type.integer.int',X0)),'T_0')) )),
  inference(unit_resulting_resolution,[],[f330,f628,f623,f1203,f496])).
fof(f2405,plain,(
  ( ! [X0] : (sP5('const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'const.integer.int_le_2'(s('type.integer.int',X0),s('type.integer.int',X0)),'T_0')) )),
  inference(unit_resulting_resolution,[],[f330,f628,f998,f1203,f496])).
fof(f2388,plain,(
  ( ! [X0] : (~sP5('T_0','F_0','const.integer.int_le_2'(s('type.integer.int',X0),s('type.integer.int',X0)))) )),
  inference(unit_resulting_resolution,[],[f1199,f494])).
fof(f2363,plain,(
  ( ! [X4,X5,X3] : (~p(s(bool,happ(s(fun(bool,bool),X4),s(bool,X3)))) | p(s(bool,happ(s(fun(bool,bool),X4),s(bool,X5)))) | s(bool,'F_0') != s(bool,X5) | s(bool,'T_0') = s(bool,X3)) )),
  inference(superposition,[],[f413,f341])).
fof(f2362,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,happ(s(fun(bool,bool),X1),s(bool,'F_0')))) | p(s(bool,happ(s(fun(bool,bool),X1),s(bool,X2)))) | s(bool,X0) != s(bool,X2) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f413,f341])).
fof(f2276,plain,(
  ( ! [X121,X122,X120] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X120),s('type.integer.int',X121))))) = s('type.integer.int',sK19('const.integer.int_add_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X120))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X121)))),X122,'type.integer.int')) | ~p(s(bool,happ(s(fun('type.integer.int',bool),X122),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X120),s('type.integer.int',X121))))))))) )),
  inference(forward_demodulation,[],[f2240,f419])).
fof(f2240,plain,(
  ( ! [X121,X122,X120] : (~p(s(bool,happ(s(fun('type.integer.int',bool),X122),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X120),s('type.integer.int',X121)))))))) | s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X120))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X121))))) = s('type.integer.int',sK19('const.integer.int_add_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X120))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X121)))),X122,'type.integer.int'))) )),
  inference(superposition,[],[f414,f419])).
fof(f2237,plain,(
  ( ! [X111,X112,X113] : (~p(s(bool,happ(s(fun('type.integer.int',bool),X113),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X111),s('type.integer.int',X112)))))))) | p(s(bool,happ(s(fun('type.integer.int',bool),X113),s('type.integer.int',sK19('const.integer.int_add_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X111))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X112)))),X113,'type.integer.int')))))) )),
  inference(superposition,[],[f415,f419])).
fof(f2253,plain,(
  ( ! [X17,X18] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X17),s('type.integer.int',X18))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X17))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X18)))))) )),
  inference(forward_demodulation,[],[f2205,f337])).
fof(f2205,plain,(
  ( ! [X17,X18] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X17),s('type.integer.int',X18))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X17))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X18)))))) )),
  inference(superposition,[],[f366,f419])).
fof(f2252,plain,(
  ( ! [X10,X9] : (s('type.integer.int',X10) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X9))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X9),s('type.integer.int',X10)))))) )),
  inference(forward_demodulation,[],[f2201,f337])).
fof(f2201,plain,(
  ( ! [X10,X9] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X9),s('type.integer.int',X10))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X9))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X10)))))) )),
  inference(superposition,[],[f432,f419])).
fof(f2199,plain,(
  ( ! [X4,X5,X3] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X3),s('type.integer.int',X4))))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X5),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X4))))) | s('type.integer.int',X5) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X3)))) )),
  inference(superposition,[],[f472,f419])).
fof(f2196,plain,(
  ( ! [X4,X3] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X3),s('type.integer.int',X4))))) = s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X3))),s('type.integer.int',X4)))) )),
  inference(superposition,[],[f419,f416])).
fof(f2248,plain,(
  ( ! [X2,X1] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X2),s('type.integer.int',X1))))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X2))),s('type.integer.int',X1)))) )),
  inference(forward_demodulation,[],[f2194,f416])).
fof(f2194,plain,(
  ( ! [X2,X1] : (s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X2))),s('type.integer.int',X1))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X2),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X1)))))))) )),
  inference(superposition,[],[f419,f337])).
fof(f2247,plain,(
  ( ! [X2,X1] : (s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X1),s('type.integer.int',X2))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X1))),s('type.integer.int',X2)))))) )),
  inference(forward_demodulation,[],[f2184,f416])).
fof(f2184,plain,(
  ( ! [X2,X1] : (s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X1),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X2))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X1))),s('type.integer.int',X2)))))) )),
  inference(superposition,[],[f419,f337])).
fof(f2161,plain,(
  ( ! [X78,X77] : (s(bool,'const.integer.int_le_2'(s('type.integer.int',X77),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) = s(bool,sK19('const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X77)))),X78,bool)) | ~p(s(bool,happ(s(fun(bool,bool),X78),s(bool,'const.integer.int_le_2'(s('type.integer.int',X77),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))))))) )),
  inference(forward_demodulation,[],[f2152,f339])).
fof(f2152,plain,(
  ( ! [X78,X77] : (~p(s(bool,happ(s(fun(bool,bool),X78),s(bool,'const.integer.int_le_2'(s('type.integer.int',X77),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))))) | s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X77))))) = s(bool,sK19('const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X77)))),X78,bool))) )),
  inference(superposition,[],[f414,f339])).
fof(f2149,plain,(
  ( ! [X72,X71] : (~p(s(bool,happ(s(fun(bool,bool),X72),s(bool,'const.integer.int_le_2'(s('type.integer.int',X71),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))))) | p(s(bool,happ(s(fun(bool,bool),X72),s(bool,sK19('const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X71)))),X72,bool)))))) )),
  inference(superposition,[],[f415,f339])).
fof(f2148,plain,(
  ( ! [X70,X68,X69] : (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X68),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | ~sP8('const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X68)))),X69,X70) | sP9('const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X68)))),X69,X70)) )),
  inference(superposition,[],[f587,f339])).
fof(f2147,plain,(
  ( ! [X66,X67,X65] : (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X65),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | ~sP10('const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X65)))),X66,X67) | sP11('const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X65)))),X66,X67)) )),
  inference(superposition,[],[f586,f339])).
fof(f2145,plain,(
  ( ! [X61,X62,X60] : (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X60),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | ~p(s(bool,X61)) | p(s(bool,X62)) | ~sP11('const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X60)))),X62,X61)) )),
  inference(superposition,[],[f563,f339])).
fof(f2144,plain,(
  ( ! [X59,X57,X58] : (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X57),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | ~p(s(bool,X58)) | sP11('const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X57)))),X58,X59)) )),
  inference(superposition,[],[f562,f339])).
fof(f2143,plain,(
  ( ! [X54,X56,X55] : (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X54),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | p(s(bool,X55)) | sP11('const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X54)))),X56,X55)) )),
  inference(superposition,[],[f561,f339])).
fof(f2142,plain,(
  ( ! [X52,X53,X51] : (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X51),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | p(s(bool,X52)) | sP11(X53,X52,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X51))))) | p(s(bool,X53))) )),
  inference(superposition,[],[f560,f339])).
fof(f2141,plain,(
  ( ! [X50,X48,X49] : (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X48),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | p(s(bool,X49)) | ~p(s(bool,X50)) | ~sP10(X50,X49,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X48)))))) )),
  inference(superposition,[],[f556,f339])).
fof(f2140,plain,(
  ( ! [X47,X45,X46] : (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X45),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | p(s(bool,X46)) | p(s(bool,X47)) | ~sP9('const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X45)))),X47,X46)) )),
  inference(superposition,[],[f546,f339])).
fof(f2139,plain,(
  ( ! [X43,X44,X42] : (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X42),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | ~p(s(bool,X43)) | sP9('const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X42)))),X43,X44)) )),
  inference(superposition,[],[f545,f339])).
fof(f2138,plain,(
  ( ! [X39,X41,X40] : (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X39),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | ~p(s(bool,X40)) | sP9('const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X39)))),X41,X40)) )),
  inference(superposition,[],[f544,f339])).
fof(f2137,plain,(
  ( ! [X37,X38,X36] : (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X36),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | p(s(bool,X37)) | p(s(bool,X38)) | ~sP8('const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X36)))),X37,X38)) )),
  inference(superposition,[],[f539,f339])).
fof(f2136,plain,(
  ( ! [X35,X33,X34] : (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X33),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | ~p(s(bool,X34)) | p(s(bool,X35)) | ~sP7(X35,X34,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X33)))))) )),
  inference(superposition,[],[f531,f339])).
fof(f2135,plain,(
  ( ! [X30,X31,X32] : (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X30),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | ~p(s(bool,X31)) | ~p(s(bool,X32)) | sP7('const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X30)))),X31,X32)) )),
  inference(superposition,[],[f528,f339])).
fof(f2134,plain,(
  ( ! [X28,X29,X27] : (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X27),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | ~p(s(bool,X28)) | p(s(bool,X29)) | ~sP6(X28,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X27)))),X29)) )),
  inference(superposition,[],[f522,f339])).
fof(f2133,plain,(
  ( ! [X26,X24,X25] : (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X24),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | ~p(s(bool,X25)) | p(s(bool,X26)) | ~sP3(X25,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X24)))),X26)) )),
  inference(superposition,[],[f503,f339])).
fof(f2132,plain,(
  ( ! [X23,X21,X22] : (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X21),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | ~p(s(bool,X22)) | p(s(bool,X23)) | ~sP4(X22,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X21)))),X23)) )),
  inference(superposition,[],[f499,f339])).
fof(f2131,plain,(
  ( ! [X19,X20] : (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X19),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | p(s(bool,X20)) | sP1(X20,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X19)))))) )),
  inference(superposition,[],[f458,f339])).
fof(f2130,plain,(
  ( ! [X17,X18] : (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X17),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | p(s(bool,X18)) | sP1('const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X17)))),X18)) )),
  inference(superposition,[],[f455,f339])).
fof(f2129,plain,(
  ( ! [X15,X16] : (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X15),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | sP0('const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X15)))),X16)) )),
  inference(superposition,[],[f440,f339])).
fof(f2128,plain,(
  ( ! [X14,X13] : (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | sP0(X14,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X13)))))) )),
  inference(superposition,[],[f439,f339])).
fof(f2119,plain,(
  ( ! [X1] : (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X1),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X1))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) )),
  inference(superposition,[],[f464,f339])).
fof(f2118,plain,(
  ( ! [X0] : (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X0)))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X0)))) )),
  inference(superposition,[],[f427,f339])).
fof(f2117,plain,(
  ( ! [X1] : (s(bool,'F_0') = s(bool,'const.integer.int_le_2'(s('type.integer.int',X1),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X1)))))) )),
  inference(superposition,[],[f339,f341])).
fof(f2116,plain,(
  ( ! [X0] : (s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X0))) = s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X0))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) )),
  inference(superposition,[],[f339,f337])).
fof(f2104,plain,(
  ( ! [X0] : (~sP5('F_0','const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X0)))),'const.integer.int_le_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) )),
  inference(unit_resulting_resolution,[],[f602,f339,f514])).
fof(f2105,plain,(
  ( ! [X0] : (sP5('T_0','const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X0)))),'const.integer.int_le_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) )),
  inference(unit_resulting_resolution,[],[f330,f339,f512])).
fof(f2106,plain,(
  ( ! [X0] : (~sP5('F_0','const.integer.int_le_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))),'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X0)))))) )),
  inference(unit_resulting_resolution,[],[f602,f339,f514])).
fof(f2107,plain,(
  ( ! [X0] : (sP5('T_0','const.integer.int_le_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))),'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X0)))))) )),
  inference(unit_resulting_resolution,[],[f330,f339,f512])).
fof(f2060,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1)))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X0))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X1)))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X0))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X1)))) )),
  inference(superposition,[],[f427,f417])).
fof(f2032,plain,(
  ( ! [X19,X20,X18] : (~p(s(bool,happ(s(fun(bool,bool),X20),s(bool,'const.arithmetic.<=_2'(s('type.num.num',X18),s('type.num.num',X19)))))) | p(s(bool,happ(s(fun(bool,bool),X20),s(bool,sK19('const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X18))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X19)))),X20,bool)))))) )),
  inference(superposition,[],[f415,f417])).
fof(f2030,plain,(
  ( ! [X14,X15,X13] : (~p(s(bool,happ(s(fun('type.integer.int',bool),X15),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X13),s('type.integer.int',X14)))))))) | p(s(bool,happ(s(fun('type.integer.int',bool),X15),s('type.integer.int',sK19('const.integer.int_mul_2'(s('type.integer.int',X13),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X14)))),X15,'type.integer.int')))))) )),
  inference(superposition,[],[f415,f418])).
fof(f2029,plain,(
  ( ! [X12,X10,X11] : (~p(s(bool,happ(s(fun('type.integer.int',bool),X12),s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X10),s('type.integer.int',X11)))))) | p(s(bool,happ(s(fun('type.integer.int',bool),X12),s('type.integer.int',sK19('const.integer.int_add_2'(s('type.integer.int',X10),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X11)))),X12,'type.integer.int')))))) )),
  inference(superposition,[],[f415,f416])).
fof(f2027,plain,(
  ( ! [X8,X7] : (~p(s(bool,happ(s(fun('type.integer.int',bool),X8),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | p(s(bool,happ(s(fun('type.integer.int',bool),X8),s('type.integer.int',sK19('const.integer.int_add_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X7))),s('type.integer.int',X7)),X8,'type.integer.int')))))) )),
  inference(superposition,[],[f415,f338])).
fof(f2026,plain,(
  ( ! [X6,X5] : (~p(s(bool,happ(s(fun('type.integer.int',bool),X6),s('type.integer.int',X5)))) | p(s(bool,happ(s(fun('type.integer.int',bool),X6),s('type.integer.int',sK19('const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X5)))),X6,'type.integer.int')))))) )),
  inference(superposition,[],[f415,f337])).
fof(f2024,plain,(
  ( ! [X2,X3] : (~p(s(bool,happ(s(fun(bool,bool),X3),s(bool,X2)))) | p(s(bool,happ(s(fun(bool,bool),X3),s(bool,sK19('F_0',X3,bool))))) | s(bool,'T_0') = s(bool,X2)) )),
  inference(superposition,[],[f415,f341])).
fof(f2023,plain,(
  ( ! [X0,X1] : (~p(s(bool,happ(s(fun(bool,bool),X1),s(bool,'F_0')))) | p(s(bool,happ(s(fun(bool,bool),X1),s(bool,sK19(X0,X1,bool))))) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f415,f341])).
fof(f1928,plain,(
  ( ! [X4,X5,X3] : (s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X3),s('type.integer.int',X4))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X5),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X4))))) | s('type.integer.int',X3) = s('type.integer.int',X5)) )),
  inference(superposition,[],[f472,f416])).
fof(f1921,plain,(
  ( ! [X6,X7,X5] : (s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X7),s('type.integer.int',X6))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X6))) | s('type.integer.int',X7) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X5))),s('type.integer.int',X5)))) )),
  inference(superposition,[],[f472,f338])).
fof(f1880,plain,(
  ( ! [X2,X1] : (s('type.integer.int',X1) != s('type.integer.int',X2) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X2),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X1)))))) )),
  inference(superposition,[],[f433,f337])).
fof(f1900,plain,(
  ( ! [X10,X11,X9] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X11),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X9),s('type.integer.int',X10))))))) | s('type.integer.int',X11) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X9),s('type.integer.int',X10)))) )),
  inference(forward_demodulation,[],[f1899,f418])).
fof(f1899,plain,(
  ( ! [X10,X11,X9] : (s('type.integer.int',X11) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X9),s('type.integer.int',X10))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X11),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X9),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X10)))))))) )),
  inference(forward_demodulation,[],[f1877,f337])).
fof(f1877,plain,(
  ( ! [X10,X11,X9] : (s('type.integer.int',X11) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X9),s('type.integer.int',X10))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X11),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X9),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X10)))))))) )),
  inference(superposition,[],[f433,f418])).
fof(f1895,plain,(
  ( ! [X4] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X4),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int',X4) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(forward_demodulation,[],[f1894,f338])).
fof(f1894,plain,(
  ( ! [X4,X3] : (s('type.integer.int',X4) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X4),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X3))),s('type.integer.int',X3)))))) )),
  inference(forward_demodulation,[],[f1874,f1586])).
fof(f1874,plain,(
  ( ! [X4,X3] : (s('type.integer.int',X4) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X4),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X3))),s('type.integer.int',X3)))))) )),
  inference(superposition,[],[f433,f338])).
fof(f1846,plain,(
  ( ! [X2,X1] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X1),s('type.integer.int',X2))) | s('type.integer.int',X1) = s('type.integer.int',X2)) )),
  inference(forward_demodulation,[],[f1831,f337])).
fof(f1831,plain,(
  ( ! [X2,X1] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X1),s('type.integer.int',X2))) | s('type.integer.int',X1) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X2)))))) )),
  inference(superposition,[],[f432,f416])).
fof(f1817,plain,(
  ( ! [X4,X3] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X4))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X4))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X3))),s('type.integer.int',X3)))) )),
  inference(superposition,[],[f432,f338])).
fof(f1754,plain,(
  ( ! [X54,X56,X55] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X54),s('type.integer.int',X55))))) = s('type.integer.int',sK19('const.integer.int_mul_2'(s('type.integer.int',X54),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X55)))),X56,'type.integer.int')) | ~p(s(bool,happ(s(fun('type.integer.int',bool),X56),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X54),s('type.integer.int',X55))))))))) )),
  inference(forward_demodulation,[],[f1738,f418])).
fof(f1738,plain,(
  ( ! [X54,X56,X55] : (~p(s(bool,happ(s(fun('type.integer.int',bool),X56),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X54),s('type.integer.int',X55)))))))) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X54),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X55))))) = s('type.integer.int',sK19('const.integer.int_mul_2'(s('type.integer.int',X54),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X55)))),X56,'type.integer.int'))) )),
  inference(superposition,[],[f414,f418])).
fof(f1684,plain,(
  ( ! [X101,X102,X100] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num',X100),s('type.num.num',X101))) = s(bool,sK19('const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X100))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X101)))),X102,bool)) | ~p(s(bool,happ(s(fun(bool,bool),X102),s(bool,'const.arithmetic.<=_2'(s('type.num.num',X100),s('type.num.num',X101))))))) )),
  inference(forward_demodulation,[],[f1675,f417])).
fof(f1675,plain,(
  ( ! [X101,X102,X100] : (~p(s(bool,happ(s(fun(bool,bool),X102),s(bool,'const.arithmetic.<=_2'(s('type.num.num',X100),s('type.num.num',X101)))))) | s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X100))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X101))))) = s(bool,sK19('const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X100))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X101)))),X102,bool))) )),
  inference(superposition,[],[f414,f417])).
fof(f1674,plain,(
  ( ! [X99,X97,X98,X96] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X96),s('type.num.num',X97)))) | ~sP8('const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X96))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X97)))),X98,X99) | sP9('const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X96))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X97)))),X98,X99)) )),
  inference(superposition,[],[f587,f417])).
fof(f1673,plain,(
  ( ! [X94,X92,X95,X93] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X92),s('type.num.num',X93)))) | ~sP10('const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X92))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X93)))),X94,X95) | sP11('const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X92))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X93)))),X94,X95)) )),
  inference(superposition,[],[f586,f417])).
fof(f1671,plain,(
  ( ! [X88,X87,X85,X86] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X85),s('type.num.num',X86)))) | ~p(s(bool,X87)) | p(s(bool,X88)) | ~sP11('const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X85))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X86)))),X88,X87)) )),
  inference(superposition,[],[f563,f417])).
fof(f1670,plain,(
  ( ! [X83,X81,X84,X82] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X81),s('type.num.num',X82)))) | ~p(s(bool,X83)) | sP11('const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X81))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X82)))),X83,X84)) )),
  inference(superposition,[],[f562,f417])).
fof(f1669,plain,(
  ( ! [X80,X78,X79,X77] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X77),s('type.num.num',X78)))) | p(s(bool,X79)) | sP11('const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X77))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X78)))),X80,X79)) )),
  inference(superposition,[],[f561,f417])).
fof(f1668,plain,(
  ( ! [X76,X74,X75,X73] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X73),s('type.num.num',X74)))) | p(s(bool,X75)) | sP11(X76,X75,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X73))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X74))))) | p(s(bool,X76))) )),
  inference(superposition,[],[f560,f417])).
fof(f1667,plain,(
  ( ! [X70,X72,X71,X69] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X69),s('type.num.num',X70)))) | p(s(bool,X71)) | ~p(s(bool,X72)) | ~sP10(X72,X71,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X69))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X70)))))) )),
  inference(superposition,[],[f556,f417])).
fof(f1666,plain,(
  ( ! [X68,X66,X67,X65] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X65),s('type.num.num',X66)))) | p(s(bool,X67)) | p(s(bool,X68)) | ~sP9('const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X65))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X66)))),X68,X67)) )),
  inference(superposition,[],[f546,f417])).
fof(f1665,plain,(
  ( ! [X61,X64,X62,X63] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X61),s('type.num.num',X62)))) | ~p(s(bool,X63)) | sP9('const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X61))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X62)))),X63,X64)) )),
  inference(superposition,[],[f545,f417])).
fof(f1664,plain,(
  ( ! [X59,X57,X60,X58] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X57),s('type.num.num',X58)))) | ~p(s(bool,X59)) | sP9('const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X57))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X58)))),X60,X59)) )),
  inference(superposition,[],[f544,f417])).
fof(f1663,plain,(
  ( ! [X54,X56,X55,X53] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X53),s('type.num.num',X54)))) | p(s(bool,X55)) | p(s(bool,X56)) | ~sP8('const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X53))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X54)))),X55,X56)) )),
  inference(superposition,[],[f539,f417])).
fof(f1662,plain,(
  ( ! [X52,X50,X51,X49] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X49),s('type.num.num',X50)))) | ~p(s(bool,X51)) | p(s(bool,X52)) | ~sP7(X52,X51,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X49))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X50)))))) )),
  inference(superposition,[],[f531,f417])).
fof(f1661,plain,(
  ( ! [X47,X45,X48,X46] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X45),s('type.num.num',X46)))) | ~p(s(bool,X47)) | ~p(s(bool,X48)) | sP7('const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X45))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X46)))),X47,X48)) )),
  inference(superposition,[],[f528,f417])).
fof(f1660,plain,(
  ( ! [X43,X41,X44,X42] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X41),s('type.num.num',X42)))) | ~p(s(bool,X43)) | p(s(bool,X44)) | ~sP6(X43,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X41))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X42)))),X44)) )),
  inference(superposition,[],[f522,f417])).
fof(f1659,plain,(
  ( ! [X39,X37,X38,X40] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X37),s('type.num.num',X38)))) | ~p(s(bool,X39)) | p(s(bool,X40)) | ~sP3(X39,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X37))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X38)))),X40)) )),
  inference(superposition,[],[f503,f417])).
fof(f1658,plain,(
  ( ! [X35,X33,X36,X34] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X33),s('type.num.num',X34)))) | ~p(s(bool,X35)) | p(s(bool,X36)) | ~sP4(X35,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X33))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X34)))),X36)) )),
  inference(superposition,[],[f499,f417])).
fof(f1657,plain,(
  ( ! [X30,X31,X32] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X30),s('type.num.num',X31)))) | p(s(bool,X32)) | sP1(X32,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X30))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X31)))))) )),
  inference(superposition,[],[f458,f417])).
fof(f1656,plain,(
  ( ! [X28,X29,X27] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X27),s('type.num.num',X28)))) | p(s(bool,X29)) | sP1('const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X27))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X28)))),X29)) )),
  inference(superposition,[],[f455,f417])).
fof(f1655,plain,(
  ( ! [X26,X24,X25] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X24),s('type.num.num',X25)))) | sP0('const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X24))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X25)))),X26)) )),
  inference(superposition,[],[f440,f417])).
fof(f1654,plain,(
  ( ! [X23,X21,X22] : (sP0(X23,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X21))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X22))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X21),s('type.num.num',X22))))) )),
  inference(superposition,[],[f439,f417])).
fof(f1645,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X1))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X0))))))) )),
  inference(superposition,[],[f464,f417])).
fof(f1644,plain,(
  ( ! [X2,X3] : (s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',X2),s('type.num.num',X3))) | s(bool,'T_0') = s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X2))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X3)))))) )),
  inference(superposition,[],[f417,f341])).
fof(f1640,plain,(
  ( ! [X0,X1] : (~sP5('F_0','const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X0))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X1)))),'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1)))) )),
  inference(unit_resulting_resolution,[],[f602,f417,f514])).
fof(f1641,plain,(
  ( ! [X0,X1] : (sP5('T_0','const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X0))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X1)))),'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1)))) )),
  inference(unit_resulting_resolution,[],[f330,f417,f512])).
fof(f1642,plain,(
  ( ! [X0,X1] : (~sP5('F_0','const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1)),'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X0))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X1)))))) )),
  inference(unit_resulting_resolution,[],[f602,f417,f514])).
fof(f1643,plain,(
  ( ! [X0,X1] : (sP5('T_0','const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1)),'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X0))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X1)))))) )),
  inference(unit_resulting_resolution,[],[f330,f417,f512])).
fof(f1608,plain,(
  sP5('F_0','F_0','const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')))),
  inference(unit_resulting_resolution,[],[f602,f622,f625,f1001,f497])).
fof(f1598,plain,(
  sP5('F_0','const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'F_0')),
  inference(unit_resulting_resolution,[],[f602,f622,f624,f1000,f498])).
fof(f1591,plain,(
  ( ! [X2,X3] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X2),s('type.integer.int',X3))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X2),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X3)))))) )),
  inference(superposition,[],[f366,f416])).
fof(f1586,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))),
  inference(unit_resulting_resolution,[],[f337,f366])).
fof(f1580,plain,(
  sP5('const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'F_0','F_0')),
  inference(unit_resulting_resolution,[],[f602,f621,f625,f999,f497])).
fof(f1537,plain,(
  ( ! [X45,X43,X44] : (s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X43),s('type.integer.int',X44))) = s('type.integer.int',sK19('const.integer.int_add_2'(s('type.integer.int',X43),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X44)))),X45,'type.integer.int')) | ~p(s(bool,happ(s(fun('type.integer.int',bool),X45),s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X43),s('type.integer.int',X44))))))) )),
  inference(forward_demodulation,[],[f1522,f416])).
fof(f1522,plain,(
  ( ! [X45,X43,X44] : (~p(s(bool,happ(s(fun('type.integer.int',bool),X45),s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X43),s('type.integer.int',X44)))))) | s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X43),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X44))))) = s('type.integer.int',sK19('const.integer.int_add_2'(s('type.integer.int',X43),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X44)))),X45,'type.integer.int'))) )),
  inference(superposition,[],[f414,f416])).
fof(f1527,plain,(
  ( ! [X0] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X0),s('type.integer.int',X0)))) )),
  inference(forward_demodulation,[],[f1504,f337])).
fof(f1504,plain,(
  ( ! [X0] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X0))))),s('type.integer.int',X0)))) )),
  inference(superposition,[],[f416,f338])).
fof(f1503,plain,(
  ( ! [X2,X1] : (s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X2),s('type.integer.int',X1))) = s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X2),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X1)))))) )),
  inference(superposition,[],[f416,f337])).
fof(f1486,plain,(
  sP5('const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'T_0','T_0')),
  inference(unit_resulting_resolution,[],[f330,f628,f620,f998,f496])).
fof(f1487,plain,(
  sP5('const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'T_0')),
  inference(unit_resulting_resolution,[],[f330,f628,f989,f998,f496])).
fof(f1483,plain,(
  ~sP5('F_0','T_0','const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')))),
  inference(unit_resulting_resolution,[],[f994,f493])).
fof(f1478,plain,(
  ( ! [X8,X7] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int',sK19('const.integer.int_add_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X7))),s('type.integer.int',X7)),X8,'type.integer.int')) | ~p(s(bool,happ(s(fun('type.integer.int',bool),X8),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) )),
  inference(forward_demodulation,[],[f1473,f338])).
fof(f1473,plain,(
  ( ! [X8,X7] : (~p(s(bool,happ(s(fun('type.integer.int',bool),X8),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X7))),s('type.integer.int',X7))) = s('type.integer.int',sK19('const.integer.int_add_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X7))),s('type.integer.int',X7)),X8,'type.integer.int'))) )),
  inference(superposition,[],[f414,f338])).
fof(f1477,plain,(
  ( ! [X6,X5] : (s('type.integer.int',X5) = s('type.integer.int',sK19('const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X5)))),X6,'type.integer.int')) | ~p(s(bool,happ(s(fun('type.integer.int',bool),X6),s('type.integer.int',X5))))) )),
  inference(forward_demodulation,[],[f1472,f337])).
fof(f1472,plain,(
  ( ! [X6,X5] : (~p(s(bool,happ(s(fun('type.integer.int',bool),X6),s('type.integer.int',X5)))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X5))))) = s('type.integer.int',sK19('const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X5)))),X6,'type.integer.int'))) )),
  inference(superposition,[],[f414,f337])).
fof(f1470,plain,(
  ( ! [X2,X3] : (~p(s(bool,happ(s(fun(bool,bool),X3),s(bool,X2)))) | s(bool,'F_0') = s(bool,sK19('F_0',X3,bool)) | s(bool,'T_0') = s(bool,X2)) )),
  inference(superposition,[],[f414,f341])).
fof(f1469,plain,(
  ( ! [X0,X1] : (~p(s(bool,happ(s(fun(bool,bool),X1),s(bool,'F_0')))) | s(bool,X0) = s(bool,sK19(X0,X1,bool)) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f414,f341])).
fof(f1467,plain,(
  ~sP5('F_0','const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'T_0')),
  inference(unit_resulting_resolution,[],[f990,f493])).
fof(f1459,plain,(
  sP5('T_0','const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'T_0')),
  inference(unit_resulting_resolution,[],[f330,f628,f623,f989,f496])).
fof(f1443,plain,(
  ~sP5('T_0','F_0','const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')))),
  inference(unit_resulting_resolution,[],[f985,f494])).
fof(f1430,plain,(
  sP5('T_0','F_0','F_0')),
  inference(unit_resulting_resolution,[],[f626,f623,f621,f602,f497])).
fof(f1410,plain,(
  sP5('T_0','T_0','T_0')),
  inference(unit_resulting_resolution,[],[f628,f623,f620,f330,f496])).
fof(f1181,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,'const.integer.int_le_2'(s('type.integer.int',X0),s('type.integer.int',X0)))) )),
  inference(unit_resulting_resolution,[],[f330,f1117,f423])).
fof(f1182,plain,(
  ( ! [X0,X1] : (s(bool,'const.integer.int_le_2'(s('type.integer.int',X0),s('type.integer.int',X0))) = s(bool,'const.integer.int_le_2'(s('type.integer.int',X1),s('type.integer.int',X1)))) )),
  inference(unit_resulting_resolution,[],[f1117,f1117,f423])).
fof(f1183,plain,(
  ( ! [X0,X1] : (sP0(X0,'const.integer.int_le_2'(s('type.integer.int',X1),s('type.integer.int',X1)))) )),
  inference(unit_resulting_resolution,[],[f1117,f439])).
fof(f1184,plain,(
  ( ! [X0,X1] : (sP0('const.integer.int_le_2'(s('type.integer.int',X0),s('type.integer.int',X0)),X1)) )),
  inference(unit_resulting_resolution,[],[f1117,f440])).
fof(f1185,plain,(
  ( ! [X0] : (~sP1('const.integer.int_le_2'(s('type.integer.int',X0),s('type.integer.int',X0)),'T_0')) )),
  inference(unit_resulting_resolution,[],[f330,f1117,f454])).
fof(f1187,plain,(
  ( ! [X0] : (~sP1('T_0','const.integer.int_le_2'(s('type.integer.int',X0),s('type.integer.int',X0)))) )),
  inference(unit_resulting_resolution,[],[f330,f1117,f454])).
fof(f1188,plain,(
  ( ! [X0,X1] : (~sP1('const.integer.int_le_2'(s('type.integer.int',X0),s('type.integer.int',X0)),'const.integer.int_le_2'(s('type.integer.int',X1),s('type.integer.int',X1)))) )),
  inference(unit_resulting_resolution,[],[f1117,f1117,f454])).
fof(f1189,plain,(
  ( ! [X0] : (sP1('const.integer.int_le_2'(s('type.integer.int',X0),s('type.integer.int',X0)),'F_0')) )),
  inference(unit_resulting_resolution,[],[f602,f1117,f455])).
fof(f1190,plain,(
  ( ! [X0] : (sP1('F_0','const.integer.int_le_2'(s('type.integer.int',X0),s('type.integer.int',X0)))) )),
  inference(unit_resulting_resolution,[],[f602,f1117,f458])).
fof(f1193,plain,(
  ( ! [X0] : (~sP5('T_0','const.integer.int_le_2'(s('type.integer.int',X0),s('type.integer.int',X0)),'F_0')) )),
  inference(unit_resulting_resolution,[],[f330,f602,f1117,f495])).
fof(f1194,plain,(
  ( ! [X0,X1] : (~sP5('const.integer.int_le_2'(s('type.integer.int',X0),s('type.integer.int',X0)),'const.integer.int_le_2'(s('type.integer.int',X1),s('type.integer.int',X1)),'F_0')) )),
  inference(unit_resulting_resolution,[],[f1117,f602,f1117,f495])).
fof(f1195,plain,(
  ( ! [X0] : (~sP4('const.integer.int_le_2'(s('type.integer.int',X0),s('type.integer.int',X0)),'T_0','F_0')) )),
  inference(unit_resulting_resolution,[],[f330,f602,f1117,f499])).
fof(f1199,plain,(
  ( ! [X0] : (~sP4('T_0','const.integer.int_le_2'(s('type.integer.int',X0),s('type.integer.int',X0)),'F_0')) )),
  inference(unit_resulting_resolution,[],[f330,f602,f1117,f499])).
fof(f1200,plain,(
  ( ! [X0,X1] : (~sP4('const.integer.int_le_2'(s('type.integer.int',X0),s('type.integer.int',X0)),'const.integer.int_le_2'(s('type.integer.int',X1),s('type.integer.int',X1)),'F_0')) )),
  inference(unit_resulting_resolution,[],[f1117,f602,f1117,f499])).
fof(f1203,plain,(
  ( ! [X2,X0,X1] : (sP4(X0,X1,'const.integer.int_le_2'(s('type.integer.int',X2),s('type.integer.int',X2)))) )),
  inference(unit_resulting_resolution,[],[f1117,f500])).
fof(f1204,plain,(
  ( ! [X0] : (~sP3('const.integer.int_le_2'(s('type.integer.int',X0),s('type.integer.int',X0)),'T_0','F_0')) )),
  inference(unit_resulting_resolution,[],[f330,f602,f1117,f503])).
fof(f1208,plain,(
  ( ! [X0] : (~sP3('T_0','const.integer.int_le_2'(s('type.integer.int',X0),s('type.integer.int',X0)),'F_0')) )),
  inference(unit_resulting_resolution,[],[f330,f602,f1117,f503])).
fof(f1209,plain,(
  ( ! [X0,X1] : (~sP3('const.integer.int_le_2'(s('type.integer.int',X0),s('type.integer.int',X0)),'const.integer.int_le_2'(s('type.integer.int',X1),s('type.integer.int',X1)),'F_0')) )),
  inference(unit_resulting_resolution,[],[f1117,f602,f1117,f503])).
fof(f1212,plain,(
  ( ! [X2,X0,X1] : (sP3(X0,X1,'const.integer.int_le_2'(s('type.integer.int',X2),s('type.integer.int',X2)))) )),
  inference(unit_resulting_resolution,[],[f1117,f504])).
fof(f1213,plain,(
  ( ! [X2,X0,X1] : (sP2(X0,X1,'const.integer.int_le_2'(s('type.integer.int',X2),s('type.integer.int',X2)))) )),
  inference(unit_resulting_resolution,[],[f1117,f508])).
fof(f1214,plain,(
  ( ! [X2,X0,X1] : (sP2(X0,'const.integer.int_le_2'(s('type.integer.int',X1),s('type.integer.int',X1)),X2)) )),
  inference(unit_resulting_resolution,[],[f1117,f509])).
fof(f1215,plain,(
  ( ! [X2,X0,X1] : (sP2('const.integer.int_le_2'(s('type.integer.int',X0),s('type.integer.int',X0)),X1,X2)) )),
  inference(unit_resulting_resolution,[],[f1117,f510])).
fof(f1216,plain,(
  ( ! [X0] : (~sP5('const.integer.int_le_2'(s('type.integer.int',X0),s('type.integer.int',X0)),'T_0','F_0')) )),
  inference(unit_resulting_resolution,[],[f657,f1117,f513])).
fof(f1217,plain,(
  ( ! [X0] : (~sP5('const.integer.int_le_2'(s('type.integer.int',X0),s('type.integer.int',X0)),'F_0','T_0')) )),
  inference(unit_resulting_resolution,[],[f657,f1117,f513])).
fof(f1218,plain,(
  ( ! [X0,X1] : (~sP7('const.integer.int_le_2'(s('type.integer.int',X0),s('type.integer.int',X0)),X1,'F_0')) )),
  inference(unit_resulting_resolution,[],[f602,f1117,f516])).
fof(f1219,plain,(
  ( ! [X0,X1] : (~sP7('const.integer.int_le_2'(s('type.integer.int',X0),s('type.integer.int',X0)),'F_0',X1)) )),
  inference(unit_resulting_resolution,[],[f602,f1117,f517])).
fof(f1226,plain,(
  ( ! [X0] : (~sP6('const.integer.int_le_2'(s('type.integer.int',X0),s('type.integer.int',X0)),'T_0','F_0')) )),
  inference(unit_resulting_resolution,[],[f330,f602,f1117,f522])).
fof(f1230,plain,(
  ( ! [X0] : (~sP6('T_0','const.integer.int_le_2'(s('type.integer.int',X0),s('type.integer.int',X0)),'F_0')) )),
  inference(unit_resulting_resolution,[],[f330,f602,f1117,f522])).
fof(f1231,plain,(
  ( ! [X0,X1] : (~sP6('const.integer.int_le_2'(s('type.integer.int',X0),s('type.integer.int',X0)),'const.integer.int_le_2'(s('type.integer.int',X1),s('type.integer.int',X1)),'F_0')) )),
  inference(unit_resulting_resolution,[],[f1117,f602,f1117,f522])).
fof(f1234,plain,(
  ( ! [X2,X0,X1] : (sP6(X0,X1,'const.integer.int_le_2'(s('type.integer.int',X2),s('type.integer.int',X2)))) )),
  inference(unit_resulting_resolution,[],[f1117,f523])).
fof(f1235,plain,(
  ( ! [X0] : (sP7('T_0','const.integer.int_le_2'(s('type.integer.int',X0),s('type.integer.int',X0)),'T_0')) )),
  inference(unit_resulting_resolution,[],[f330,f330,f1117,f528])).
fof(f1240,plain,(
  ( ! [X0] : (sP7('T_0','T_0','const.integer.int_le_2'(s('type.integer.int',X0),s('type.integer.int',X0)))) )),
  inference(unit_resulting_resolution,[],[f330,f330,f1117,f528])).
fof(f1241,plain,(
  ( ! [X0,X1] : (sP7('T_0','const.integer.int_le_2'(s('type.integer.int',X0),s('type.integer.int',X0)),'const.integer.int_le_2'(s('type.integer.int',X1),s('type.integer.int',X1)))) )),
  inference(unit_resulting_resolution,[],[f1117,f330,f1117,f528])).
fof(f1245,plain,(
  ( ! [X0] : (sP7('const.integer.int_le_2'(s('type.integer.int',X0),s('type.integer.int',X0)),'T_0','T_0')) )),
  inference(unit_resulting_resolution,[],[f330,f330,f1117,f528])).
fof(f1246,plain,(
  ( ! [X0,X1] : (sP7('const.integer.int_le_2'(s('type.integer.int',X0),s('type.integer.int',X0)),'const.integer.int_le_2'(s('type.integer.int',X1),s('type.integer.int',X1)),'T_0')) )),
  inference(unit_resulting_resolution,[],[f1117,f330,f1117,f528])).
fof(f1247,plain,(
  ( ! [X0,X1] : (sP7('const.integer.int_le_2'(s('type.integer.int',X0),s('type.integer.int',X0)),'T_0','const.integer.int_le_2'(s('type.integer.int',X1),s('type.integer.int',X1)))) )),
  inference(unit_resulting_resolution,[],[f330,f1117,f1117,f528])).
fof(f1248,plain,(
  ( ! [X2,X0,X1] : (sP7('const.integer.int_le_2'(s('type.integer.int',X0),s('type.integer.int',X0)),'const.integer.int_le_2'(s('type.integer.int',X1),s('type.integer.int',X1)),'const.integer.int_le_2'(s('type.integer.int',X2),s('type.integer.int',X2)))) )),
  inference(unit_resulting_resolution,[],[f1117,f1117,f1117,f528])).
fof(f1249,plain,(
  ( ! [X0] : (~sP7('F_0','const.integer.int_le_2'(s('type.integer.int',X0),s('type.integer.int',X0)),'T_0')) )),
  inference(unit_resulting_resolution,[],[f330,f602,f1117,f531])).
fof(f1252,plain,(
  ( ! [X0] : (~sP7('F_0','T_0','const.integer.int_le_2'(s('type.integer.int',X0),s('type.integer.int',X0)))) )),
  inference(unit_resulting_resolution,[],[f330,f602,f1117,f531])).
fof(f1253,plain,(
  ( ! [X0,X1] : (~sP7('F_0','const.integer.int_le_2'(s('type.integer.int',X0),s('type.integer.int',X0)),'const.integer.int_le_2'(s('type.integer.int',X1),s('type.integer.int',X1)))) )),
  inference(unit_resulting_resolution,[],[f1117,f602,f1117,f531])).
fof(f1255,plain,(
  ( ! [X0,X1] : (~sP9('F_0',X0,'const.integer.int_le_2'(s('type.integer.int',X1),s('type.integer.int',X1)))) )),
  inference(unit_resulting_resolution,[],[f602,f1117,f532])).
fof(f1257,plain,(
  ( ! [X0,X1] : (~sP9('F_0','const.integer.int_le_2'(s('type.integer.int',X0),s('type.integer.int',X0)),X1)) )),
  inference(unit_resulting_resolution,[],[f602,f1117,f533])).
fof(f1261,plain,(
  ( ! [X0] : (~sP8('const.integer.int_le_2'(s('type.integer.int',X0),s('type.integer.int',X0)),'F_0','F_0')) )),
  inference(unit_resulting_resolution,[],[f602,f602,f1117,f539])).
fof(f1264,plain,(
  ( ! [X2,X0,X1] : (sP8(X0,X1,'const.integer.int_le_2'(s('type.integer.int',X2),s('type.integer.int',X2)))) )),
  inference(unit_resulting_resolution,[],[f1117,f540])).
fof(f1265,plain,(
  ( ! [X2,X0,X1] : (sP8(X0,'const.integer.int_le_2'(s('type.integer.int',X1),s('type.integer.int',X1)),X2)) )),
  inference(unit_resulting_resolution,[],[f1117,f541])).
fof(f1266,plain,(
  ( ! [X0,X1] : (sP9('T_0',X0,'const.integer.int_le_2'(s('type.integer.int',X1),s('type.integer.int',X1)))) )),
  inference(unit_resulting_resolution,[],[f330,f1117,f544])).
fof(f1270,plain,(
  ( ! [X2,X0,X1] : (sP9('const.integer.int_le_2'(s('type.integer.int',X0),s('type.integer.int',X0)),X1,'const.integer.int_le_2'(s('type.integer.int',X2),s('type.integer.int',X2)))) )),
  inference(unit_resulting_resolution,[],[f1117,f1117,f544])).
fof(f1271,plain,(
  ( ! [X0,X1] : (sP9('T_0','const.integer.int_le_2'(s('type.integer.int',X0),s('type.integer.int',X0)),X1)) )),
  inference(unit_resulting_resolution,[],[f330,f1117,f545])).
fof(f1275,plain,(
  ( ! [X2,X0,X1] : (sP9('const.integer.int_le_2'(s('type.integer.int',X0),s('type.integer.int',X0)),'const.integer.int_le_2'(s('type.integer.int',X1),s('type.integer.int',X1)),X2)) )),
  inference(unit_resulting_resolution,[],[f1117,f1117,f545])).
fof(f1276,plain,(
  ( ! [X0] : (~sP9('const.integer.int_le_2'(s('type.integer.int',X0),s('type.integer.int',X0)),'F_0','F_0')) )),
  inference(unit_resulting_resolution,[],[f602,f602,f1117,f546])).
fof(f1277,plain,(
  ( ! [X0,X1] : (~sP11('F_0','const.integer.int_le_2'(s('type.integer.int',X0),s('type.integer.int',X0)),X1)) )),
  inference(unit_resulting_resolution,[],[f602,f1117,f550])).
fof(f1289,plain,(
  ( ! [X0] : (~sP10('const.integer.int_le_2'(s('type.integer.int',X0),s('type.integer.int',X0)),'F_0','T_0')) )),
  inference(unit_resulting_resolution,[],[f602,f330,f1117,f556])).
fof(f1293,plain,(
  ( ! [X0] : (~sP10('T_0','F_0','const.integer.int_le_2'(s('type.integer.int',X0),s('type.integer.int',X0)))) )),
  inference(unit_resulting_resolution,[],[f602,f330,f1117,f556])).
fof(f1294,plain,(
  ( ! [X0,X1] : (~sP10('const.integer.int_le_2'(s('type.integer.int',X0),s('type.integer.int',X0)),'F_0','const.integer.int_le_2'(s('type.integer.int',X1),s('type.integer.int',X1)))) )),
  inference(unit_resulting_resolution,[],[f602,f1117,f1117,f556])).
fof(f1297,plain,(
  ( ! [X2,X0,X1] : (sP10(X0,'const.integer.int_le_2'(s('type.integer.int',X1),s('type.integer.int',X1)),X2)) )),
  inference(unit_resulting_resolution,[],[f1117,f558])).
fof(f1298,plain,(
  ( ! [X0] : (sP11('F_0','F_0','const.integer.int_le_2'(s('type.integer.int',X0),s('type.integer.int',X0)))) )),
  inference(unit_resulting_resolution,[],[f602,f602,f1117,f560])).
fof(f1301,plain,(
  ( ! [X0,X1] : (sP11('T_0','const.integer.int_le_2'(s('type.integer.int',X0),s('type.integer.int',X0)),X1)) )),
  inference(unit_resulting_resolution,[],[f330,f1117,f562])).
fof(f1305,plain,(
  ( ! [X2,X0,X1] : (sP11('const.integer.int_le_2'(s('type.integer.int',X0),s('type.integer.int',X0)),'const.integer.int_le_2'(s('type.integer.int',X1),s('type.integer.int',X1)),X2)) )),
  inference(unit_resulting_resolution,[],[f1117,f1117,f562])).
fof(f1306,plain,(
  ( ! [X0] : (~sP11('T_0','F_0','const.integer.int_le_2'(s('type.integer.int',X0),s('type.integer.int',X0)))) )),
  inference(unit_resulting_resolution,[],[f330,f602,f1117,f563])).
fof(f1309,plain,(
  ( ! [X0] : (~sP11('const.integer.int_le_2'(s('type.integer.int',X0),s('type.integer.int',X0)),'F_0','T_0')) )),
  inference(unit_resulting_resolution,[],[f330,f602,f1117,f563])).
fof(f1310,plain,(
  ( ! [X0,X1] : (~sP11('const.integer.int_le_2'(s('type.integer.int',X0),s('type.integer.int',X0)),'F_0','const.integer.int_le_2'(s('type.integer.int',X1),s('type.integer.int',X1)))) )),
  inference(unit_resulting_resolution,[],[f1117,f602,f1117,f563])).
fof(f1311,plain,(
  ( ! [X0] : (s(bool,'F_0') != s(bool,'const.integer.int_le_2'(s('type.integer.int',X0),s('type.integer.int',X0)))) )),
  inference(unit_resulting_resolution,[],[f602,f1117,f585])).
fof(f1312,plain,(
  ( ! [X0,X1] : (sP11('const.integer.int_le_2'(s('type.integer.int',X0),s('type.integer.int',X0)),X1,'F_0')) )),
  inference(unit_resulting_resolution,[],[f635,f1117,f586])).
fof(f1313,plain,(
  ( ! [X0,X1] : (sP11('const.integer.int_le_2'(s('type.integer.int',X0),s('type.integer.int',X0)),'T_0',X1)) )),
  inference(unit_resulting_resolution,[],[f636,f1117,f586])).
fof(f1314,plain,(
  ( ! [X0,X1] : (sP9('const.integer.int_le_2'(s('type.integer.int',X0),s('type.integer.int',X0)),X1,'T_0')) )),
  inference(unit_resulting_resolution,[],[f632,f1117,f587])).
fof(f1315,plain,(
  ( ! [X0,X1] : (sP9('const.integer.int_le_2'(s('type.integer.int',X0),s('type.integer.int',X0)),'T_0',X1)) )),
  inference(unit_resulting_resolution,[],[f633,f1117,f587])).
fof(f1132,plain,(
  ( ! [X0] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X0)))))) )),
  inference(superposition,[],[f338,f337])).
fof(f1117,plain,(
  ( ! [X0] : (p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X0),s('type.integer.int',X0))))) )),
  inference(forward_demodulation,[],[f1111,f337])).
fof(f1111,plain,(
  ( ! [X0] : (p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X0))))),s('type.integer.int',X0))))) )),
  inference(unit_resulting_resolution,[],[f337,f429])).
fof(f967,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')))),
  inference(unit_resulting_resolution,[],[f330,f961,f423])).
fof(f969,plain,(
  ( ! [X0] : (sP0(X0,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')))) )),
  inference(unit_resulting_resolution,[],[f961,f439])).
fof(f970,plain,(
  ( ! [X0] : (sP0('const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),X0)) )),
  inference(unit_resulting_resolution,[],[f961,f440])).
fof(f971,plain,(
  ~sP1('const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'T_0')),
  inference(unit_resulting_resolution,[],[f330,f961,f454])).
fof(f973,plain,(
  ~sP1('T_0','const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')))),
  inference(unit_resulting_resolution,[],[f330,f961,f454])).
fof(f974,plain,(
  ~sP1('const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')))),
  inference(unit_resulting_resolution,[],[f961,f961,f454])).
fof(f975,plain,(
  sP1('const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'F_0')),
  inference(unit_resulting_resolution,[],[f602,f961,f455])).
fof(f976,plain,(
  sP1('F_0','const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')))),
  inference(unit_resulting_resolution,[],[f602,f961,f458])).
fof(f979,plain,(
  ~sP5('T_0','const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'F_0')),
  inference(unit_resulting_resolution,[],[f330,f602,f961,f495])).
fof(f980,plain,(
  ~sP5('const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'F_0')),
  inference(unit_resulting_resolution,[],[f961,f602,f961,f495])).
fof(f981,plain,(
  ~sP4('const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'T_0','F_0')),
  inference(unit_resulting_resolution,[],[f330,f602,f961,f499])).
fof(f985,plain,(
  ~sP4('T_0','const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'F_0')),
  inference(unit_resulting_resolution,[],[f330,f602,f961,f499])).
fof(f986,plain,(
  ~sP4('const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'F_0')),
  inference(unit_resulting_resolution,[],[f961,f602,f961,f499])).
fof(f989,plain,(
  ( ! [X0,X1] : (sP4(X0,X1,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')))) )),
  inference(unit_resulting_resolution,[],[f961,f500])).
fof(f990,plain,(
  ~sP3('const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'T_0','F_0')),
  inference(unit_resulting_resolution,[],[f330,f602,f961,f503])).
fof(f994,plain,(
  ~sP3('T_0','const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'F_0')),
  inference(unit_resulting_resolution,[],[f330,f602,f961,f503])).
fof(f995,plain,(
  ~sP3('const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'F_0')),
  inference(unit_resulting_resolution,[],[f961,f602,f961,f503])).
fof(f998,plain,(
  ( ! [X0,X1] : (sP3(X0,X1,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')))) )),
  inference(unit_resulting_resolution,[],[f961,f504])).
fof(f999,plain,(
  ( ! [X0,X1] : (sP2(X0,X1,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')))) )),
  inference(unit_resulting_resolution,[],[f961,f508])).
fof(f1000,plain,(
  ( ! [X0,X1] : (sP2(X0,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),X1)) )),
  inference(unit_resulting_resolution,[],[f961,f509])).
fof(f1001,plain,(
  ( ! [X0,X1] : (sP2('const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),X0,X1)) )),
  inference(unit_resulting_resolution,[],[f961,f510])).
fof(f1002,plain,(
  ~sP5('const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'T_0','F_0')),
  inference(unit_resulting_resolution,[],[f657,f961,f513])).
fof(f1003,plain,(
  ~sP5('const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'F_0','T_0')),
  inference(unit_resulting_resolution,[],[f657,f961,f513])).
fof(f1004,plain,(
  ( ! [X0] : (~sP7('const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),X0,'F_0')) )),
  inference(unit_resulting_resolution,[],[f602,f961,f516])).
fof(f1005,plain,(
  ( ! [X0] : (~sP7('const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'F_0',X0)) )),
  inference(unit_resulting_resolution,[],[f602,f961,f517])).
fof(f1012,plain,(
  ~sP6('const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'T_0','F_0')),
  inference(unit_resulting_resolution,[],[f330,f602,f961,f522])).
fof(f1016,plain,(
  ~sP6('T_0','const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'F_0')),
  inference(unit_resulting_resolution,[],[f330,f602,f961,f522])).
fof(f1017,plain,(
  ~sP6('const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'F_0')),
  inference(unit_resulting_resolution,[],[f961,f602,f961,f522])).
fof(f1020,plain,(
  ( ! [X0,X1] : (sP6(X0,X1,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')))) )),
  inference(unit_resulting_resolution,[],[f961,f523])).
fof(f1021,plain,(
  sP7('T_0','const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'T_0')),
  inference(unit_resulting_resolution,[],[f330,f330,f961,f528])).
fof(f1026,plain,(
  sP7('T_0','T_0','const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')))),
  inference(unit_resulting_resolution,[],[f330,f330,f961,f528])).
fof(f1027,plain,(
  sP7('T_0','const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')))),
  inference(unit_resulting_resolution,[],[f961,f330,f961,f528])).
fof(f1031,plain,(
  sP7('const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'T_0','T_0')),
  inference(unit_resulting_resolution,[],[f330,f330,f961,f528])).
fof(f1032,plain,(
  sP7('const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'T_0')),
  inference(unit_resulting_resolution,[],[f961,f330,f961,f528])).
fof(f1033,plain,(
  sP7('const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'T_0','const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')))),
  inference(unit_resulting_resolution,[],[f330,f961,f961,f528])).
fof(f1034,plain,(
  sP7('const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')))),
  inference(unit_resulting_resolution,[],[f961,f961,f961,f528])).
fof(f1035,plain,(
  ~sP7('F_0','const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'T_0')),
  inference(unit_resulting_resolution,[],[f330,f602,f961,f531])).
fof(f1038,plain,(
  ~sP7('F_0','T_0','const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')))),
  inference(unit_resulting_resolution,[],[f330,f602,f961,f531])).
fof(f1039,plain,(
  ~sP7('F_0','const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')))),
  inference(unit_resulting_resolution,[],[f961,f602,f961,f531])).
fof(f1041,plain,(
  ( ! [X0] : (~sP9('F_0',X0,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')))) )),
  inference(unit_resulting_resolution,[],[f602,f961,f532])).
fof(f1043,plain,(
  ( ! [X0] : (~sP9('F_0','const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),X0)) )),
  inference(unit_resulting_resolution,[],[f602,f961,f533])).
fof(f1047,plain,(
  ~sP8('const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'F_0','F_0')),
  inference(unit_resulting_resolution,[],[f602,f602,f961,f539])).
fof(f1050,plain,(
  ( ! [X0,X1] : (sP8(X0,X1,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')))) )),
  inference(unit_resulting_resolution,[],[f961,f540])).
fof(f1051,plain,(
  ( ! [X0,X1] : (sP8(X0,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),X1)) )),
  inference(unit_resulting_resolution,[],[f961,f541])).
fof(f1052,plain,(
  ( ! [X0] : (sP9('T_0',X0,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')))) )),
  inference(unit_resulting_resolution,[],[f330,f961,f544])).
fof(f1056,plain,(
  ( ! [X0] : (sP9('const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),X0,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')))) )),
  inference(unit_resulting_resolution,[],[f961,f961,f544])).
fof(f1057,plain,(
  ( ! [X0] : (sP9('T_0','const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),X0)) )),
  inference(unit_resulting_resolution,[],[f330,f961,f545])).
fof(f1061,plain,(
  ( ! [X0] : (sP9('const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),X0)) )),
  inference(unit_resulting_resolution,[],[f961,f961,f545])).
fof(f1062,plain,(
  ~sP9('const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'F_0','F_0')),
  inference(unit_resulting_resolution,[],[f602,f602,f961,f546])).
fof(f1063,plain,(
  ( ! [X0] : (~sP11('F_0','const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),X0)) )),
  inference(unit_resulting_resolution,[],[f602,f961,f550])).
fof(f1075,plain,(
  ~sP10('const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'F_0','T_0')),
  inference(unit_resulting_resolution,[],[f602,f330,f961,f556])).
fof(f1079,plain,(
  ~sP10('T_0','F_0','const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')))),
  inference(unit_resulting_resolution,[],[f602,f330,f961,f556])).
fof(f1080,plain,(
  ~sP10('const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'F_0','const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')))),
  inference(unit_resulting_resolution,[],[f602,f961,f961,f556])).
fof(f1083,plain,(
  ( ! [X0,X1] : (sP10(X0,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),X1)) )),
  inference(unit_resulting_resolution,[],[f961,f558])).
fof(f1084,plain,(
  sP11('F_0','F_0','const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')))),
  inference(unit_resulting_resolution,[],[f602,f602,f961,f560])).
fof(f1087,plain,(
  ( ! [X0] : (sP11('T_0','const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),X0)) )),
  inference(unit_resulting_resolution,[],[f330,f961,f562])).
fof(f1091,plain,(
  ( ! [X0] : (sP11('const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),X0)) )),
  inference(unit_resulting_resolution,[],[f961,f961,f562])).
fof(f1092,plain,(
  ~sP11('T_0','F_0','const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')))),
  inference(unit_resulting_resolution,[],[f330,f602,f961,f563])).
fof(f1095,plain,(
  ~sP11('const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'F_0','T_0')),
  inference(unit_resulting_resolution,[],[f330,f602,f961,f563])).
fof(f1096,plain,(
  ~sP11('const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'F_0','const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')))),
  inference(unit_resulting_resolution,[],[f961,f602,f961,f563])).
fof(f1097,plain,(
  s(bool,'F_0') != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')))),
  inference(unit_resulting_resolution,[],[f602,f961,f585])).
fof(f1098,plain,(
  ( ! [X0] : (sP11('const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),X0,'F_0')) )),
  inference(unit_resulting_resolution,[],[f635,f961,f586])).
fof(f1099,plain,(
  ( ! [X0] : (sP11('const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'T_0',X0)) )),
  inference(unit_resulting_resolution,[],[f636,f961,f586])).
fof(f1100,plain,(
  ( ! [X0] : (sP9('const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),X0,'T_0')) )),
  inference(unit_resulting_resolution,[],[f632,f961,f587])).
fof(f1101,plain,(
  ( ! [X0] : (sP9('const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'T_0',X0)) )),
  inference(unit_resulting_resolution,[],[f633,f961,f587])).
fof(f961,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))))),
  inference(equality_resolution,[],[f365])).
fof(f941,plain,(
  ~sP11('T_0','F_0','T_0')),
  inference(unit_resulting_resolution,[],[f935,f551])).
fof(f935,plain,(
  ~sP10('T_0','F_0','T_0')),
  inference(unit_resulting_resolution,[],[f330,f602,f330,f556])).
fof(f928,plain,(
  sP11('F_0','F_0','T_0')),
  inference(unit_resulting_resolution,[],[f637,f330,f602,f555])).
fof(f905,plain,(
  ~sP9('T_0','F_0','F_0')),
  inference(unit_resulting_resolution,[],[f899,f534])).
fof(f899,plain,(
  ~sP8('T_0','F_0','F_0')),
  inference(unit_resulting_resolution,[],[f602,f602,f330,f539])).
fof(f892,plain,(
  sP9('F_0','F_0','F_0')),
  inference(unit_resulting_resolution,[],[f634,f602,f602,f538])).
fof(f869,plain,(
  ~sP7('F_0','T_0','T_0')),
  inference(unit_resulting_resolution,[],[f863,f515])).
fof(f863,plain,(
  ~sP6('T_0','T_0','F_0')),
  inference(unit_resulting_resolution,[],[f602,f330,f330,f522])).
fof(f855,plain,(
  sP7('T_0','T_0','T_0')),
  inference(unit_resulting_resolution,[],[f629,f330,f330,f518])).
fof(f851,plain,(
  ~sP5('F_0','F_0','F_0')),
  inference(unit_resulting_resolution,[],[f846,f492])).
fof(f846,plain,(
  ~sP2('F_0','F_0','F_0')),
  inference(unit_resulting_resolution,[],[f602,f602,f602,f507])).
fof(f843,plain,(
  ~sP5('F_0','T_0','T_0')),
  inference(unit_resulting_resolution,[],[f833,f493])).
fof(f833,plain,(
  ~sP3('T_0','T_0','F_0')),
  inference(unit_resulting_resolution,[],[f602,f330,f330,f503])).
fof(f827,plain,(
  ~sP4('T_0','T_0','F_0')),
  inference(unit_resulting_resolution,[],[f602,f330,f330,f499])).
fof(f809,plain,(
  ~sP5('T_0','F_0','T_0')),
  inference(unit_resulting_resolution,[],[f330,f657,f513])).
fof(f811,plain,(
  ~sP5('T_0','T_0','F_0')),
  inference(unit_resulting_resolution,[],[f330,f657,f513])).
fof(f800,plain,(
  sP5('F_0','F_0','T_0')),
  inference(unit_resulting_resolution,[],[f602,f657,f511])).
fof(f801,plain,(
  sP5('F_0','T_0','F_0')),
  inference(unit_resulting_resolution,[],[f602,f657,f511])).
fof(f746,plain,(
  ( ! [X0,X1] : (s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X1) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f341,f341])).
fof(f716,plain,(
  ( ! [X0] : (sP11('T_0','T_0',X0)) )),
  inference(unit_resulting_resolution,[],[f330,f330,f562])).
fof(f713,plain,(
  ( ! [X0] : (sP11('T_0',X0,'F_0')) )),
  inference(unit_resulting_resolution,[],[f602,f330,f561])).
fof(f710,plain,(
  ( ! [X0] : (~sP11('F_0','T_0',X0)) )),
  inference(unit_resulting_resolution,[],[f330,f602,f550])).
fof(f706,plain,(
  ( ! [X0] : (~sP11('F_0',X0,'F_0')) )),
  inference(unit_resulting_resolution,[],[f602,f602,f549])).
fof(f705,plain,(
  ( ! [X0] : (sP9('T_0','T_0',X0)) )),
  inference(unit_resulting_resolution,[],[f330,f330,f545])).
fof(f699,plain,(
  ( ! [X0] : (sP9('T_0',X0,'T_0')) )),
  inference(unit_resulting_resolution,[],[f330,f330,f544])).
fof(f696,plain,(
  ( ! [X0] : (~sP9('F_0','T_0',X0)) )),
  inference(unit_resulting_resolution,[],[f330,f602,f533])).
fof(f695,plain,(
  ( ! [X0] : (~sP9('F_0',X0,'T_0')) )),
  inference(unit_resulting_resolution,[],[f330,f602,f532])).
fof(f691,plain,(
  ( ! [X0] : (sP7('F_0','F_0',X0)) )),
  inference(unit_resulting_resolution,[],[f602,f602,f527])).
fof(f684,plain,(
  ( ! [X0] : (sP7('F_0',X0,'F_0')) )),
  inference(unit_resulting_resolution,[],[f602,f602,f526])).
fof(f682,plain,(
  ( ! [X0] : (~sP7('T_0','F_0',X0)) )),
  inference(unit_resulting_resolution,[],[f330,f602,f517])).
fof(f681,plain,(
  ( ! [X0] : (~sP7('T_0',X0,'F_0')) )),
  inference(unit_resulting_resolution,[],[f330,f602,f516])).
fof(f676,plain,(
  ~sP0('F_0','F_0')),
  inference(unit_resulting_resolution,[],[f602,f602,f603])).
fof(f673,plain,(
  sP1('F_0','T_0')),
  inference(unit_resulting_resolution,[],[f602,f330,f458])).
fof(f668,plain,(
  sP1('T_0','F_0')),
  inference(unit_resulting_resolution,[],[f602,f330,f455])).
fof(f665,plain,(
  ~sP1('T_0','T_0')),
  inference(unit_resulting_resolution,[],[f330,f330,f454])).
fof(f664,plain,(
  ~sP1('F_0','F_0')),
  inference(unit_resulting_resolution,[],[f602,f602,f453])).
fof(f657,plain,(
  s(bool,'T_0') != s(bool,'F_0')),
  inference(unit_resulting_resolution,[],[f602,f356])).
fof(f338,plain,(
  ( ! [X0] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X0))),s('type.integer.int',X0)))) )),
  inference(cnf_transformation,[],[f76])).
fof(f76,plain,(
  ! [X0] : s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X0))),s('type.integer.int',X0)))),
  inference(rectify,[],[f13])).
fof(f13,axiom,(
  ! [X8] : s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X8))),s('type.integer.int',X8)))),
  file('thm.integer.INT_NEG_SAME_EQ','thm.integer.INT_ADD_LINV')).
fof(f343,plain,(
  ( ! [X0] : (s('type.integer.int',X0) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK14(X0)))))) | s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK13(X0))))) )),
  inference(cnf_transformation,[],[f219])).
fof(f219,plain,(
  ! [X0] : ((s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK13(X0)))) & s('type.num.num','const.num.|48|_0') != s('type.num.num',sK13(X0))) | (s('type.integer.int',X0) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK14(X0)))))) & s('type.num.num','const.num.|48|_0') != s('type.num.num',sK14(X0))) | s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK13,sK14])],[f82])).
fof(f82,plain,(
  ! [X0] : (? [X2] : (s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X2))) & s('type.num.num','const.num.|48|_0') != s('type.num.num',X2)) | ? [X1] : (s('type.integer.int',X0) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X1))))) & s('type.num.num','const.num.|48|_0') != s('type.num.num',X1)) | s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),
  inference(flattening,[],[f81])).
fof(f81,plain,(
  ! [X0] : (? [X2] : (s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X2))) & ~s('type.num.num','const.num.|48|_0') = s('type.num.num',X2)) | ? [X1] : (s('type.integer.int',X0) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X1))))) & ~s('type.num.num','const.num.|48|_0') = s('type.num.num',X1)) | s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),
  inference(rectify,[],[f7])).
fof(f7,axiom,(
  ! [X6] : (? [X7] : (s('type.integer.int',X6) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X7))) & ~s('type.num.num','const.num.|48|_0') = s('type.num.num',X7)) | ? [X7] : (s('type.integer.int',X6) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X7))))) & ~s('type.num.num','const.num.|48|_0') = s('type.num.num',X7)) | s('type.integer.int',X6) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),
  file('thm.integer.INT_NEG_SAME_EQ','thm.integer.INT_NUM_CASES')).
fof(f344,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') != s('type.num.num',sK13(X0)) | s('type.integer.int',X0) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK14(X0)))))) | s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(cnf_transformation,[],[f219])).
fof(f345,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') != s('type.num.num',sK14(X0)) | s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK13(X0))))) )),
  inference(cnf_transformation,[],[f219])).
fof(f366,plain,(
  ( ! [X0] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X0))) | s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(cnf_transformation,[],[f225])).
fof(f225,plain,(
  ! [X0] : ((s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X0))) | s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) & (s('type.integer.int',X0) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X0)))))),
  inference(nnf_transformation,[],[f99])).
fof(f99,plain,(
  ! [X0] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X0))) <=> s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),
  inference(rectify,[],[f30])).
fof(f30,axiom,(
  ! [X8] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X8))) <=> s('type.integer.int',X8) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),
  file('thm.integer.INT_NEG_SAME_EQ','thm.integer.INT_NEG_EQ|48|')).
fof(f367,plain,(
  ( ! [X0] : (s('type.integer.int',X0) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X0)))) )),
  inference(cnf_transformation,[],[f225])).
fof(f426,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X0),s('type.integer.int',X1))) = s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X1))),s('type.integer.int',X1))))) | s('type.integer.int',X1) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(cnf_transformation,[],[f185])).
fof(f185,plain,(
  ! [X0,X1] : (s('type.integer.int',X1) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X0),s('type.integer.int',X1))) = s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X1))),s('type.integer.int',X1))))))),
  inference(ennf_transformation,[],[f134])).
fof(f134,plain,(
  ! [X0,X1] : (s('type.integer.int',X1) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) => s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X0),s('type.integer.int',X1))) = s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X1))),s('type.integer.int',X1))))))),
  inference(flattening,[],[f133])).
fof(f133,plain,(
  ! [X0,X1] : (~s('type.integer.int',X1) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) => s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X0),s('type.integer.int',X1))) = s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X1))),s('type.integer.int',X1))))))),
  inference(rectify,[],[f33])).
fof(f33,axiom,(
  ! [X20,X21] : (~s('type.integer.int',X21) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) => s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X20),s('type.integer.int',X21))) = s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X20),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X20),s('type.integer.int',X21))),s('type.integer.int',X21))))))),
  file('thm.integer.INT_NEG_SAME_EQ','thm.integer.int_mod')).
fof(f432,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int',X1))) | s('type.integer.int',X0) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X1)))) )),
  inference(cnf_transformation,[],[f264])).
fof(f264,plain,(
  ! [X0,X1] : ((s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int',X1))) | s('type.integer.int',X0) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X1)))) & (s('type.integer.int',X0) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X1))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int',X1)))))),
  inference(nnf_transformation,[],[f137])).
fof(f137,plain,(
  ! [X0,X1] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int',X1))) <=> s('type.integer.int',X0) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X1))))),
  inference(rectify,[],[f8])).
fof(f8,axiom,(
  ! [X8,X9] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X8),s('type.integer.int',X9))) <=> s('type.integer.int',X8) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X9))))),
  file('thm.integer.INT_NEG_SAME_EQ','thm.integer.INT_LNEG_UNIQ')).
fof(f433,plain,(
  ( ! [X0,X1] : (s('type.integer.int',X0) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X1))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int',X1)))) )),
  inference(cnf_transformation,[],[f264])).
fof(f637,plain,(
  ( ! [X0,X1] : (sP10('F_0',X0,X1)) )),
  inference(unit_resulting_resolution,[],[f602,f559])).
fof(f636,plain,(
  ( ! [X0,X1] : (sP10(X0,'T_0',X1)) )),
  inference(unit_resulting_resolution,[],[f330,f558])).
fof(f635,plain,(
  ( ! [X0,X1] : (sP10(X0,X1,'F_0')) )),
  inference(unit_resulting_resolution,[],[f602,f557])).
fof(f634,plain,(
  ( ! [X0,X1] : (sP8('F_0',X0,X1)) )),
  inference(unit_resulting_resolution,[],[f602,f542])).
fof(f633,plain,(
  ( ! [X0,X1] : (sP8(X0,'T_0',X1)) )),
  inference(unit_resulting_resolution,[],[f330,f541])).
fof(f632,plain,(
  ( ! [X0,X1] : (sP8(X0,X1,'T_0')) )),
  inference(unit_resulting_resolution,[],[f330,f540])).
fof(f631,plain,(
  ( ! [X0,X1] : (sP6('F_0',X0,X1)) )),
  inference(unit_resulting_resolution,[],[f602,f525])).
fof(f630,plain,(
  ( ! [X0,X1] : (sP6(X0,'F_0',X1)) )),
  inference(unit_resulting_resolution,[],[f602,f524])).
fof(f629,plain,(
  ( ! [X0,X1] : (sP6(X0,X1,'T_0')) )),
  inference(unit_resulting_resolution,[],[f330,f523])).
fof(f628,plain,(
  ( ! [X0,X1] : (sP2('T_0',X0,X1)) )),
  inference(unit_resulting_resolution,[],[f330,f510])).
fof(f627,plain,(
  ( ! [X0,X1] : (sP2(X0,'T_0',X1)) )),
  inference(unit_resulting_resolution,[],[f330,f509])).
fof(f626,plain,(
  ( ! [X0,X1] : (sP2(X0,X1,'T_0')) )),
  inference(unit_resulting_resolution,[],[f330,f508])).
fof(f625,plain,(
  ( ! [X0,X1] : (sP3('F_0',X0,X1)) )),
  inference(unit_resulting_resolution,[],[f602,f506])).
fof(f624,plain,(
  ( ! [X0,X1] : (sP3(X0,'F_0',X1)) )),
  inference(unit_resulting_resolution,[],[f602,f505])).
fof(f623,plain,(
  ( ! [X0,X1] : (sP3(X0,X1,'T_0')) )),
  inference(unit_resulting_resolution,[],[f330,f504])).
fof(f622,plain,(
  ( ! [X0,X1] : (sP4('F_0',X0,X1)) )),
  inference(unit_resulting_resolution,[],[f602,f502])).
fof(f621,plain,(
  ( ! [X0,X1] : (sP4(X0,'F_0',X1)) )),
  inference(unit_resulting_resolution,[],[f602,f501])).
fof(f620,plain,(
  ( ! [X0,X1] : (sP4(X0,X1,'T_0')) )),
  inference(unit_resulting_resolution,[],[f330,f500])).
fof(f617,plain,(
  ( ! [X0] : (sP0('T_0',X0)) )),
  inference(unit_resulting_resolution,[],[f330,f440])).
fof(f616,plain,(
  ( ! [X0] : (sP0(X0,'T_0')) )),
  inference(unit_resulting_resolution,[],[f330,f439])).
fof(f585,plain,(
  ( ! [X0,X1] : (~p(s(bool,X0)) | s(bool,X0) != s(bool,X1) | p(s(bool,X1))) )),
  inference(condensation,[],[f584])).
fof(f584,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,X0)) | p(s(bool,X1)) | s(bool,X0) != s(bool,X1) | s(bool,X0) != s(bool,X2)) )),
  inference(condensation,[],[f573])).
fof(f573,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,X2)) | ~p(s(bool,X0)) | ~p(s(bool,X3)) | s(bool,X2) != s(bool,X3) | s(bool,X0) != s(bool,X1)) )),
  inference(cnf_transformation,[],[f327])).
fof(f327,plain,(
  ! [X0,X1,X2,X3] : (s(bool,X0) != s(bool,X1) | (p(s(bool,X1)) & s(bool,X2) != s(bool,X3)) | (((p(s(bool,X0)) & ~p(s(bool,X2))) | ~p(s(bool,X1)) | p(s(bool,X3))) & ((p(s(bool,X1)) & ~p(s(bool,X3))) | ~p(s(bool,X0)) | p(s(bool,X2)))))),
  inference(flattening,[],[f326])).
fof(f326,plain,(
  ! [X0,X1,X2,X3] : (s(bool,X0) != s(bool,X1) | (p(s(bool,X1)) & s(bool,X2) != s(bool,X3)) | (((p(s(bool,X0)) & ~p(s(bool,X2))) | (~p(s(bool,X1)) | p(s(bool,X3)))) & ((p(s(bool,X1)) & ~p(s(bool,X3))) | (~p(s(bool,X0)) | p(s(bool,X2))))))),
  inference(nnf_transformation,[],[f196])).
fof(f196,plain,(
  ! [X0,X1,X2,X3] : (s(bool,X0) != s(bool,X1) | (p(s(bool,X1)) & s(bool,X2) != s(bool,X3)) | ((~p(s(bool,X0)) | p(s(bool,X2))) <=> (~p(s(bool,X1)) | p(s(bool,X3)))))),
  inference(flattening,[],[f195])).
fof(f195,plain,(
  ! [X0,X1,X2,X3] : ((s(bool,X0) != s(bool,X1) | (p(s(bool,X1)) & s(bool,X2) != s(bool,X3))) | ((~p(s(bool,X0)) | p(s(bool,X2))) <=> (~p(s(bool,X1)) | p(s(bool,X3)))))),
  inference(ennf_transformation,[],[f165])).
fof(f165,plain,(
  ! [X0,X1,X2,X3] : ((s(bool,X0) = s(bool,X1) & (p(s(bool,X1)) => s(bool,X2) = s(bool,X3))) => ((p(s(bool,X0)) => p(s(bool,X2))) <=> (p(s(bool,X1)) => p(s(bool,X3)))))),
  inference(rectify,[],[f31])).
fof(f31,axiom,(
  ! [X8,X18,X9,X19] : ((s(bool,X8) = s(bool,X18) & (p(s(bool,X18)) => s(bool,X9) = s(bool,X19))) => ((p(s(bool,X8)) => p(s(bool,X9))) <=> (p(s(bool,X18)) => p(s(bool,X19)))))),
  file('thm.integer.INT_NEG_SAME_EQ','thm.bool.IMP_CONG')).
fof(f560,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,X1)) | p(s(bool,X0)) | sP11(X2,X0,X1) | p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f325])).
fof(f325,plain,(
  ! [X0,X1,X2] : ((((p(s(bool,X2)) | ~p(s(bool,X1)) | p(s(bool,X0))) & (~p(s(bool,X2)) | (p(s(bool,X1)) & ~p(s(bool,X0))))) | sP11(X2,X0,X1)) & (~sP11(X2,X0,X1) | ((~p(s(bool,X2)) | ~p(s(bool,X1)) | p(s(bool,X0))) & ((p(s(bool,X1)) & ~p(s(bool,X0))) | p(s(bool,X2))))))),
  inference(flattening,[],[f324])).
fof(f324,plain,(
  ! [X0,X1,X2] : ((((p(s(bool,X2)) | (~p(s(bool,X1)) | p(s(bool,X0)))) & (~p(s(bool,X2)) | (p(s(bool,X1)) & ~p(s(bool,X0))))) | sP11(X2,X0,X1)) & (~sP11(X2,X0,X1) | ((~p(s(bool,X2)) | (~p(s(bool,X1)) | p(s(bool,X0)))) & ((p(s(bool,X1)) & ~p(s(bool,X0))) | p(s(bool,X2))))))),
  inference(nnf_transformation,[],[f214])).
fof(f214,plain,(
  ! [X0,X1,X2] : ((p(s(bool,X2)) <=> (~p(s(bool,X1)) | p(s(bool,X0)))) <=> sP11(X2,X0,X1))),
  inference(definition_folding,[],[f194,f213,f212])).
fof(f212,plain,(
  ! [X2,X0,X1] : (sP10(X2,X0,X1) <=> (~p(s(bool,X1)) | p(s(bool,X0)) | ~p(s(bool,X2))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP10])])).
fof(f213,plain,(
  ! [X2,X0,X1] : (sP11(X2,X0,X1) <=> ((p(s(bool,X2)) | p(s(bool,X1))) & (p(s(bool,X2)) | ~p(s(bool,X0))) & sP10(X2,X0,X1)))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP11])])).
fof(f194,plain,(
  ! [X0,X1,X2] : ((p(s(bool,X2)) <=> (~p(s(bool,X1)) | p(s(bool,X0)))) <=> ((p(s(bool,X2)) | p(s(bool,X1))) & (p(s(bool,X2)) | ~p(s(bool,X0))) & (~p(s(bool,X1)) | p(s(bool,X0)) | ~p(s(bool,X2)))))),
  inference(ennf_transformation,[],[f164])).
fof(f164,plain,(
  ! [X0,X1,X2] : ((p(s(bool,X2)) <=> (p(s(bool,X1)) => p(s(bool,X0)))) <=> ((p(s(bool,X2)) | p(s(bool,X1))) & (p(s(bool,X2)) | ~p(s(bool,X0))) & (~p(s(bool,X1)) | p(s(bool,X0)) | ~p(s(bool,X2)))))),
  inference(flattening,[],[f163])).
fof(f163,plain,(
  ! [X0,X1,X2] : ((p(s(bool,X2)) <=> (p(s(bool,X1)) => p(s(bool,X0)))) <=> ((p(s(bool,X2)) | p(s(bool,X1))) & (p(s(bool,X2)) | ~p(s(bool,X0))) & (~p(s(bool,X1)) | p(s(bool,X0)) | ~p(s(bool,X2)))))),
  inference(rectify,[],[f41])).
fof(f41,axiom,(
  ! [X22,X10,X6] : ((p(s(bool,X6)) <=> (p(s(bool,X10)) => p(s(bool,X22)))) <=> ((p(s(bool,X6)) | p(s(bool,X10))) & (p(s(bool,X6)) | ~p(s(bool,X22))) & (~p(s(bool,X10)) | p(s(bool,X22)) | ~p(s(bool,X6)))))),
  file('thm.integer.INT_NEG_SAME_EQ','thm.sat.sat_27_prove_ltb')).
fof(f561,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,X2)) | p(s(bool,X1)) | sP11(X2,X0,X1)) )),
  inference(cnf_transformation,[],[f325])).
fof(f562,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,X2)) | ~p(s(bool,X0)) | sP11(X2,X0,X1)) )),
  inference(cnf_transformation,[],[f325])).
fof(f563,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,X2)) | ~p(s(bool,X1)) | p(s(bool,X0)) | ~sP11(X2,X0,X1)) )),
  inference(cnf_transformation,[],[f325])).
fof(f556,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,X2)) | p(s(bool,X1)) | ~p(s(bool,X0)) | ~sP10(X0,X1,X2)) )),
  inference(cnf_transformation,[],[f323])).
fof(f323,plain,(
  ! [X0,X1,X2] : ((~sP10(X0,X1,X2) | ~p(s(bool,X2)) | p(s(bool,X1)) | ~p(s(bool,X0))) & ((p(s(bool,X2)) & ~p(s(bool,X1)) & p(s(bool,X0))) | sP10(X0,X1,X2)))),
  inference(rectify,[],[f322])).
fof(f322,plain,(
  ! [X2,X0,X1] : ((~sP10(X2,X0,X1) | ~p(s(bool,X1)) | p(s(bool,X0)) | ~p(s(bool,X2))) & ((p(s(bool,X1)) & ~p(s(bool,X0)) & p(s(bool,X2))) | sP10(X2,X0,X1)))),
  inference(flattening,[],[f321])).
fof(f321,plain,(
  ! [X2,X0,X1] : ((~sP10(X2,X0,X1) | (~p(s(bool,X1)) | p(s(bool,X0)) | ~p(s(bool,X2)))) & ((p(s(bool,X1)) & ~p(s(bool,X0)) & p(s(bool,X2))) | sP10(X2,X0,X1)))),
  inference(nnf_transformation,[],[f212])).
fof(f557,plain,(
  ( ! [X2,X0,X1] : (sP10(X0,X1,X2) | p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f323])).
fof(f558,plain,(
  ( ! [X2,X0,X1] : (sP10(X0,X1,X2) | ~p(s(bool,X1))) )),
  inference(cnf_transformation,[],[f323])).
fof(f559,plain,(
  ( ! [X2,X0,X1] : (sP10(X0,X1,X2) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f323])).
fof(f549,plain,(
  ( ! [X2,X0,X1] : (~sP11(X0,X1,X2) | p(s(bool,X0)) | p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f320])).
fof(f320,plain,(
  ! [X0,X1,X2] : ((~sP11(X0,X1,X2) | ((p(s(bool,X0)) | p(s(bool,X2))) & (p(s(bool,X0)) | ~p(s(bool,X1))) & sP10(X0,X1,X2))) & ((~p(s(bool,X0)) & ~p(s(bool,X2))) | (~p(s(bool,X0)) & p(s(bool,X1))) | ~sP10(X0,X1,X2) | sP11(X0,X1,X2)))),
  inference(rectify,[],[f319])).
fof(f319,plain,(
  ! [X2,X0,X1] : ((~sP11(X2,X0,X1) | ((p(s(bool,X2)) | p(s(bool,X1))) & (p(s(bool,X2)) | ~p(s(bool,X0))) & sP10(X2,X0,X1))) & ((~p(s(bool,X2)) & ~p(s(bool,X1))) | (~p(s(bool,X2)) & p(s(bool,X0))) | ~sP10(X2,X0,X1) | sP11(X2,X0,X1)))),
  inference(flattening,[],[f318])).
fof(f318,plain,(
  ! [X2,X0,X1] : ((~sP11(X2,X0,X1) | ((p(s(bool,X2)) | p(s(bool,X1))) & (p(s(bool,X2)) | ~p(s(bool,X0))) & sP10(X2,X0,X1))) & (((~p(s(bool,X2)) & ~p(s(bool,X1))) | (~p(s(bool,X2)) & p(s(bool,X0))) | ~sP10(X2,X0,X1)) | sP11(X2,X0,X1)))),
  inference(nnf_transformation,[],[f213])).
fof(f550,plain,(
  ( ! [X2,X0,X1] : (~sP11(X0,X1,X2) | p(s(bool,X0)) | ~p(s(bool,X1))) )),
  inference(cnf_transformation,[],[f320])).
fof(f551,plain,(
  ( ! [X2,X0,X1] : (~sP11(X0,X1,X2) | sP10(X0,X1,X2)) )),
  inference(cnf_transformation,[],[f320])).
fof(f586,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,X0)) | ~sP10(X0,X1,X2) | sP11(X0,X1,X2)) )),
  inference(duplicate_literal_removal,[],[f552])).
fof(f552,plain,(
  ( ! [X2,X0,X1] : (sP11(X0,X1,X2) | ~sP10(X0,X1,X2) | ~p(s(bool,X0)) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f320])).
fof(f553,plain,(
  ( ! [X2,X0,X1] : (sP11(X0,X1,X2) | ~sP10(X0,X1,X2) | ~p(s(bool,X0)) | ~p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f320])).
fof(f554,plain,(
  ( ! [X2,X0,X1] : (sP11(X0,X1,X2) | ~sP10(X0,X1,X2) | p(s(bool,X1)) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f320])).
fof(f555,plain,(
  ( ! [X2,X0,X1] : (sP11(X0,X1,X2) | ~sP10(X0,X1,X2) | p(s(bool,X1)) | ~p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f320])).
fof(f543,plain,(
  ( ! [X2,X0,X1] : (sP9(X2,X0,X1) | p(s(bool,X0)) | p(s(bool,X1)) | p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f317])).
fof(f317,plain,(
  ! [X0,X1,X2] : ((((p(s(bool,X2)) | p(s(bool,X1)) | p(s(bool,X0))) & (~p(s(bool,X2)) | (~p(s(bool,X1)) & ~p(s(bool,X0))))) | sP9(X2,X0,X1)) & (~sP9(X2,X0,X1) | ((~p(s(bool,X2)) | p(s(bool,X1)) | p(s(bool,X0))) & ((~p(s(bool,X1)) & ~p(s(bool,X0))) | p(s(bool,X2))))))),
  inference(flattening,[],[f316])).
fof(f316,plain,(
  ! [X0,X1,X2] : ((((p(s(bool,X2)) | (p(s(bool,X1)) | p(s(bool,X0)))) & (~p(s(bool,X2)) | (~p(s(bool,X1)) & ~p(s(bool,X0))))) | sP9(X2,X0,X1)) & (~sP9(X2,X0,X1) | ((~p(s(bool,X2)) | (p(s(bool,X1)) | p(s(bool,X0)))) & ((~p(s(bool,X1)) & ~p(s(bool,X0))) | p(s(bool,X2))))))),
  inference(nnf_transformation,[],[f211])).
fof(f211,plain,(
  ! [X0,X1,X2] : ((p(s(bool,X2)) <=> (p(s(bool,X1)) | p(s(bool,X0)))) <=> sP9(X2,X0,X1))),
  inference(definition_folding,[],[f162,f210,f209])).
fof(f209,plain,(
  ! [X2,X0,X1] : (sP8(X2,X0,X1) <=> (p(s(bool,X1)) | p(s(bool,X0)) | ~p(s(bool,X2))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP8])])).
fof(f210,plain,(
  ! [X2,X0,X1] : (sP9(X2,X0,X1) <=> ((p(s(bool,X2)) | ~p(s(bool,X1))) & (p(s(bool,X2)) | ~p(s(bool,X0))) & sP8(X2,X0,X1)))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP9])])).
fof(f162,plain,(
  ! [X0,X1,X2] : ((p(s(bool,X2)) <=> (p(s(bool,X1)) | p(s(bool,X0)))) <=> ((p(s(bool,X2)) | ~p(s(bool,X1))) & (p(s(bool,X2)) | ~p(s(bool,X0))) & (p(s(bool,X1)) | p(s(bool,X0)) | ~p(s(bool,X2)))))),
  inference(flattening,[],[f161])).
fof(f161,plain,(
  ! [X0,X1,X2] : ((p(s(bool,X2)) <=> (p(s(bool,X1)) | p(s(bool,X0)))) <=> ((p(s(bool,X2)) | ~p(s(bool,X1))) & (p(s(bool,X2)) | ~p(s(bool,X0))) & (p(s(bool,X1)) | p(s(bool,X0)) | ~p(s(bool,X2)))))),
  inference(rectify,[],[f51])).
fof(f51,axiom,(
  ! [X22,X10,X6] : ((p(s(bool,X6)) <=> (p(s(bool,X10)) | p(s(bool,X22)))) <=> ((p(s(bool,X6)) | ~p(s(bool,X10))) & (p(s(bool,X6)) | ~p(s(bool,X22))) & (p(s(bool,X10)) | p(s(bool,X22)) | ~p(s(bool,X6)))))),
  file('thm.integer.INT_NEG_SAME_EQ','thm.sat.sat_25_prove_ltb')).
fof(f544,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,X2)) | ~p(s(bool,X1)) | sP9(X2,X0,X1)) )),
  inference(cnf_transformation,[],[f317])).
fof(f545,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,X2)) | ~p(s(bool,X0)) | sP9(X2,X0,X1)) )),
  inference(cnf_transformation,[],[f317])).
fof(f546,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,X2)) | p(s(bool,X1)) | p(s(bool,X0)) | ~sP9(X2,X0,X1)) )),
  inference(cnf_transformation,[],[f317])).
fof(f539,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,X0)) | p(s(bool,X1)) | p(s(bool,X2)) | ~sP8(X0,X1,X2)) )),
  inference(cnf_transformation,[],[f315])).
fof(f315,plain,(
  ! [X0,X1,X2] : ((~sP8(X0,X1,X2) | p(s(bool,X2)) | p(s(bool,X1)) | ~p(s(bool,X0))) & ((~p(s(bool,X2)) & ~p(s(bool,X1)) & p(s(bool,X0))) | sP8(X0,X1,X2)))),
  inference(rectify,[],[f314])).
fof(f314,plain,(
  ! [X2,X0,X1] : ((~sP8(X2,X0,X1) | p(s(bool,X1)) | p(s(bool,X0)) | ~p(s(bool,X2))) & ((~p(s(bool,X1)) & ~p(s(bool,X0)) & p(s(bool,X2))) | sP8(X2,X0,X1)))),
  inference(flattening,[],[f313])).
fof(f313,plain,(
  ! [X2,X0,X1] : ((~sP8(X2,X0,X1) | (p(s(bool,X1)) | p(s(bool,X0)) | ~p(s(bool,X2)))) & ((~p(s(bool,X1)) & ~p(s(bool,X0)) & p(s(bool,X2))) | sP8(X2,X0,X1)))),
  inference(nnf_transformation,[],[f209])).
fof(f540,plain,(
  ( ! [X2,X0,X1] : (sP8(X0,X1,X2) | ~p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f315])).
fof(f541,plain,(
  ( ! [X2,X0,X1] : (sP8(X0,X1,X2) | ~p(s(bool,X1))) )),
  inference(cnf_transformation,[],[f315])).
fof(f542,plain,(
  ( ! [X2,X0,X1] : (sP8(X0,X1,X2) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f315])).
fof(f532,plain,(
  ( ! [X2,X0,X1] : (~sP9(X0,X1,X2) | p(s(bool,X0)) | ~p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f312])).
fof(f312,plain,(
  ! [X0,X1,X2] : ((~sP9(X0,X1,X2) | ((p(s(bool,X0)) | ~p(s(bool,X2))) & (p(s(bool,X0)) | ~p(s(bool,X1))) & sP8(X0,X1,X2))) & ((~p(s(bool,X0)) & p(s(bool,X2))) | (~p(s(bool,X0)) & p(s(bool,X1))) | ~sP8(X0,X1,X2) | sP9(X0,X1,X2)))),
  inference(rectify,[],[f311])).
fof(f311,plain,(
  ! [X2,X0,X1] : ((~sP9(X2,X0,X1) | ((p(s(bool,X2)) | ~p(s(bool,X1))) & (p(s(bool,X2)) | ~p(s(bool,X0))) & sP8(X2,X0,X1))) & ((~p(s(bool,X2)) & p(s(bool,X1))) | (~p(s(bool,X2)) & p(s(bool,X0))) | ~sP8(X2,X0,X1) | sP9(X2,X0,X1)))),
  inference(flattening,[],[f310])).
fof(f310,plain,(
  ! [X2,X0,X1] : ((~sP9(X2,X0,X1) | ((p(s(bool,X2)) | ~p(s(bool,X1))) & (p(s(bool,X2)) | ~p(s(bool,X0))) & sP8(X2,X0,X1))) & (((~p(s(bool,X2)) & p(s(bool,X1))) | (~p(s(bool,X2)) & p(s(bool,X0))) | ~sP8(X2,X0,X1)) | sP9(X2,X0,X1)))),
  inference(nnf_transformation,[],[f210])).
fof(f533,plain,(
  ( ! [X2,X0,X1] : (~sP9(X0,X1,X2) | p(s(bool,X0)) | ~p(s(bool,X1))) )),
  inference(cnf_transformation,[],[f312])).
fof(f534,plain,(
  ( ! [X2,X0,X1] : (~sP9(X0,X1,X2) | sP8(X0,X1,X2)) )),
  inference(cnf_transformation,[],[f312])).
fof(f587,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,X0)) | ~sP8(X0,X1,X2) | sP9(X0,X1,X2)) )),
  inference(duplicate_literal_removal,[],[f535])).
fof(f535,plain,(
  ( ! [X2,X0,X1] : (sP9(X0,X1,X2) | ~sP8(X0,X1,X2) | ~p(s(bool,X0)) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f312])).
fof(f536,plain,(
  ( ! [X2,X0,X1] : (sP9(X0,X1,X2) | ~sP8(X0,X1,X2) | ~p(s(bool,X0)) | p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f312])).
fof(f537,plain,(
  ( ! [X2,X0,X1] : (sP9(X0,X1,X2) | ~sP8(X0,X1,X2) | p(s(bool,X1)) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f312])).
fof(f538,plain,(
  ( ! [X2,X0,X1] : (sP9(X0,X1,X2) | ~sP8(X0,X1,X2) | p(s(bool,X1)) | p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f312])).
fof(f526,plain,(
  ( ! [X2,X0,X1] : (sP7(X2,X0,X1) | p(s(bool,X1)) | p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f309])).
fof(f309,plain,(
  ! [X0,X1,X2] : ((((p(s(bool,X2)) | (p(s(bool,X1)) & p(s(bool,X0)))) & (~p(s(bool,X2)) | ~p(s(bool,X1)) | ~p(s(bool,X0)))) | sP7(X2,X0,X1)) & (~sP7(X2,X0,X1) | ((~p(s(bool,X2)) | (p(s(bool,X1)) & p(s(bool,X0)))) & (~p(s(bool,X1)) | ~p(s(bool,X0)) | p(s(bool,X2))))))),
  inference(flattening,[],[f308])).
fof(f308,plain,(
  ! [X0,X1,X2] : ((((p(s(bool,X2)) | (p(s(bool,X1)) & p(s(bool,X0)))) & (~p(s(bool,X2)) | (~p(s(bool,X1)) | ~p(s(bool,X0))))) | sP7(X2,X0,X1)) & (~sP7(X2,X0,X1) | ((~p(s(bool,X2)) | (p(s(bool,X1)) & p(s(bool,X0)))) & ((~p(s(bool,X1)) | ~p(s(bool,X0))) | p(s(bool,X2))))))),
  inference(nnf_transformation,[],[f208])).
fof(f208,plain,(
  ! [X0,X1,X2] : ((p(s(bool,X2)) <=> (p(s(bool,X1)) & p(s(bool,X0)))) <=> sP7(X2,X0,X1))),
  inference(definition_folding,[],[f160,f207,f206])).
fof(f206,plain,(
  ! [X0,X1,X2] : (sP6(X0,X1,X2) <=> (p(s(bool,X2)) | ~p(s(bool,X1)) | ~p(s(bool,X0))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP6])])).
fof(f207,plain,(
  ! [X2,X0,X1] : (sP7(X2,X0,X1) <=> (sP6(X0,X1,X2) & (p(s(bool,X1)) | ~p(s(bool,X2))) & (p(s(bool,X0)) | ~p(s(bool,X2)))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP7])])).
fof(f160,plain,(
  ! [X0,X1,X2] : ((p(s(bool,X2)) <=> (p(s(bool,X1)) & p(s(bool,X0)))) <=> ((p(s(bool,X2)) | ~p(s(bool,X1)) | ~p(s(bool,X0))) & (p(s(bool,X1)) | ~p(s(bool,X2))) & (p(s(bool,X0)) | ~p(s(bool,X2)))))),
  inference(flattening,[],[f159])).
fof(f159,plain,(
  ! [X0,X1,X2] : ((p(s(bool,X2)) <=> (p(s(bool,X1)) & p(s(bool,X0)))) <=> ((p(s(bool,X2)) | ~p(s(bool,X1)) | ~p(s(bool,X0))) & (p(s(bool,X1)) | ~p(s(bool,X2))) & (p(s(bool,X0)) | ~p(s(bool,X2)))))),
  inference(rectify,[],[f45])).
fof(f45,axiom,(
  ! [X22,X10,X6] : ((p(s(bool,X6)) <=> (p(s(bool,X10)) & p(s(bool,X22)))) <=> ((p(s(bool,X6)) | ~p(s(bool,X10)) | ~p(s(bool,X22))) & (p(s(bool,X10)) | ~p(s(bool,X6))) & (p(s(bool,X22)) | ~p(s(bool,X6)))))),
  file('thm.integer.INT_NEG_SAME_EQ','thm.sat.sat_23_prove_ltb')).
fof(f527,plain,(
  ( ! [X2,X0,X1] : (sP7(X2,X0,X1) | p(s(bool,X0)) | p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f309])).
fof(f528,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,X2)) | ~p(s(bool,X0)) | ~p(s(bool,X1)) | sP7(X2,X0,X1)) )),
  inference(cnf_transformation,[],[f309])).
fof(f531,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,X1)) | ~p(s(bool,X0)) | p(s(bool,X2)) | ~sP7(X2,X0,X1)) )),
  inference(cnf_transformation,[],[f309])).
fof(f522,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,X1)) | ~p(s(bool,X0)) | p(s(bool,X2)) | ~sP6(X0,X1,X2)) )),
  inference(cnf_transformation,[],[f307])).
fof(f307,plain,(
  ! [X0,X1,X2] : ((~sP6(X0,X1,X2) | p(s(bool,X2)) | ~p(s(bool,X1)) | ~p(s(bool,X0))) & ((~p(s(bool,X2)) & p(s(bool,X1)) & p(s(bool,X0))) | sP6(X0,X1,X2)))),
  inference(flattening,[],[f306])).
fof(f306,plain,(
  ! [X0,X1,X2] : ((~sP6(X0,X1,X2) | (p(s(bool,X2)) | ~p(s(bool,X1)) | ~p(s(bool,X0)))) & ((~p(s(bool,X2)) & p(s(bool,X1)) & p(s(bool,X0))) | sP6(X0,X1,X2)))),
  inference(nnf_transformation,[],[f206])).
fof(f523,plain,(
  ( ! [X2,X0,X1] : (sP6(X0,X1,X2) | ~p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f307])).
fof(f524,plain,(
  ( ! [X2,X0,X1] : (sP6(X0,X1,X2) | p(s(bool,X1))) )),
  inference(cnf_transformation,[],[f307])).
fof(f525,plain,(
  ( ! [X2,X0,X1] : (sP6(X0,X1,X2) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f307])).
fof(f515,plain,(
  ( ! [X2,X0,X1] : (~sP7(X0,X1,X2) | sP6(X1,X2,X0)) )),
  inference(cnf_transformation,[],[f305])).
fof(f305,plain,(
  ! [X0,X1,X2] : ((~sP7(X0,X1,X2) | (sP6(X1,X2,X0) & (p(s(bool,X2)) | ~p(s(bool,X0))) & (p(s(bool,X1)) | ~p(s(bool,X0))))) & (~sP6(X1,X2,X0) | (~p(s(bool,X2)) & p(s(bool,X0))) | (~p(s(bool,X1)) & p(s(bool,X0))) | sP7(X0,X1,X2)))),
  inference(rectify,[],[f304])).
fof(f304,plain,(
  ! [X2,X0,X1] : ((~sP7(X2,X0,X1) | (sP6(X0,X1,X2) & (p(s(bool,X1)) | ~p(s(bool,X2))) & (p(s(bool,X0)) | ~p(s(bool,X2))))) & (~sP6(X0,X1,X2) | (~p(s(bool,X1)) & p(s(bool,X2))) | (~p(s(bool,X0)) & p(s(bool,X2))) | sP7(X2,X0,X1)))),
  inference(flattening,[],[f303])).
fof(f303,plain,(
  ! [X2,X0,X1] : ((~sP7(X2,X0,X1) | (sP6(X0,X1,X2) & (p(s(bool,X1)) | ~p(s(bool,X2))) & (p(s(bool,X0)) | ~p(s(bool,X2))))) & ((~sP6(X0,X1,X2) | (~p(s(bool,X1)) & p(s(bool,X2))) | (~p(s(bool,X0)) & p(s(bool,X2)))) | sP7(X2,X0,X1)))),
  inference(nnf_transformation,[],[f207])).
fof(f516,plain,(
  ( ! [X2,X0,X1] : (~sP7(X0,X1,X2) | p(s(bool,X2)) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f305])).
fof(f517,plain,(
  ( ! [X2,X0,X1] : (~sP7(X0,X1,X2) | p(s(bool,X1)) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f305])).
fof(f518,plain,(
  ( ! [X2,X0,X1] : (sP7(X0,X1,X2) | ~p(s(bool,X1)) | ~p(s(bool,X2)) | ~sP6(X1,X2,X0)) )),
  inference(cnf_transformation,[],[f305])).
fof(f588,plain,(
  ( ! [X2,X0,X1] : (sP7(X0,X1,X2) | p(s(bool,X0)) | ~sP6(X1,X2,X0)) )),
  inference(duplicate_literal_removal,[],[f521])).
fof(f521,plain,(
  ( ! [X2,X0,X1] : (sP7(X0,X1,X2) | p(s(bool,X0)) | p(s(bool,X0)) | ~sP6(X1,X2,X0)) )),
  inference(cnf_transformation,[],[f305])).
fof(f511,plain,(
  ( ! [X2,X0,X1] : (sP5(X2,X1,X0) | s(bool,X0) = s(bool,X1) | p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f302])).
fof(f302,plain,(
  ! [X0,X1,X2] : ((((p(s(bool,X2)) | s(bool,X0) = s(bool,X1)) & (~p(s(bool,X2)) | s(bool,X0) != s(bool,X1))) | sP5(X2,X1,X0)) & (~sP5(X2,X1,X0) | ((~p(s(bool,X2)) | s(bool,X0) = s(bool,X1)) & (s(bool,X0) != s(bool,X1) | p(s(bool,X2))))))),
  inference(nnf_transformation,[],[f205])).
fof(f205,plain,(
  ! [X0,X1,X2] : ((p(s(bool,X2)) <=> s(bool,X0) = s(bool,X1)) <=> sP5(X2,X1,X0))),
  inference(definition_folding,[],[f158,f204,f203,f202,f201])).
fof(f201,plain,(
  ! [X0,X1,X2] : (sP2(X0,X1,X2) <=> (p(s(bool,X2)) | p(s(bool,X1)) | p(s(bool,X0))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP2])])).
fof(f202,plain,(
  ! [X1,X0,X2] : (sP3(X1,X0,X2) <=> (p(s(bool,X2)) | ~p(s(bool,X0)) | ~p(s(bool,X1))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP3])])).
fof(f203,plain,(
  ! [X2,X0,X1] : (sP4(X2,X0,X1) <=> (p(s(bool,X1)) | ~p(s(bool,X0)) | ~p(s(bool,X2))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP4])])).
fof(f204,plain,(
  ! [X2,X1,X0] : (sP5(X2,X1,X0) <=> (sP2(X0,X1,X2) & sP3(X1,X0,X2) & sP4(X2,X0,X1) & (p(s(bool,X0)) | ~p(s(bool,X1)) | ~p(s(bool,X2)))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP5])])).
fof(f158,plain,(
  ! [X0,X1,X2] : ((p(s(bool,X2)) <=> s(bool,X0) = s(bool,X1)) <=> ((p(s(bool,X2)) | p(s(bool,X1)) | p(s(bool,X0))) & (p(s(bool,X2)) | ~p(s(bool,X0)) | ~p(s(bool,X1))) & (p(s(bool,X1)) | ~p(s(bool,X0)) | ~p(s(bool,X2))) & (p(s(bool,X0)) | ~p(s(bool,X1)) | ~p(s(bool,X2)))))),
  inference(flattening,[],[f157])).
fof(f157,plain,(
  ! [X0,X1,X2] : ((p(s(bool,X2)) <=> s(bool,X0) = s(bool,X1)) <=> ((p(s(bool,X2)) | p(s(bool,X1)) | p(s(bool,X0))) & (p(s(bool,X2)) | ~p(s(bool,X0)) | ~p(s(bool,X1))) & (p(s(bool,X1)) | ~p(s(bool,X0)) | ~p(s(bool,X2))) & (p(s(bool,X0)) | ~p(s(bool,X1)) | ~p(s(bool,X2)))))),
  inference(rectify,[],[f42])).
fof(f42,axiom,(
  ! [X22,X10,X6] : ((p(s(bool,X6)) <=> s(bool,X10) = s(bool,X22)) <=> ((p(s(bool,X6)) | p(s(bool,X10)) | p(s(bool,X22))) & (p(s(bool,X6)) | ~p(s(bool,X22)) | ~p(s(bool,X10))) & (p(s(bool,X10)) | ~p(s(bool,X22)) | ~p(s(bool,X6))) & (p(s(bool,X22)) | ~p(s(bool,X10)) | ~p(s(bool,X6)))))),
  file('thm.integer.INT_NEG_SAME_EQ','thm.sat.sat_2|49|_prove_ltb')).
fof(f512,plain,(
  ( ! [X2,X0,X1] : (sP5(X2,X1,X0) | s(bool,X0) != s(bool,X1) | ~p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f302])).
fof(f513,plain,(
  ( ! [X2,X0,X1] : (~sP5(X2,X1,X0) | ~p(s(bool,X2)) | s(bool,X0) = s(bool,X1)) )),
  inference(cnf_transformation,[],[f302])).
fof(f514,plain,(
  ( ! [X2,X0,X1] : (~sP5(X2,X1,X0) | s(bool,X0) != s(bool,X1) | p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f302])).
fof(f507,plain,(
  ( ! [X2,X0,X1] : (~sP2(X0,X1,X2) | p(s(bool,X1)) | p(s(bool,X2)) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f301])).
fof(f301,plain,(
  ! [X0,X1,X2] : ((~sP2(X0,X1,X2) | p(s(bool,X2)) | p(s(bool,X1)) | p(s(bool,X0))) & ((~p(s(bool,X2)) & ~p(s(bool,X1)) & ~p(s(bool,X0))) | sP2(X0,X1,X2)))),
  inference(flattening,[],[f300])).
fof(f300,plain,(
  ! [X0,X1,X2] : ((~sP2(X0,X1,X2) | (p(s(bool,X2)) | p(s(bool,X1)) | p(s(bool,X0)))) & ((~p(s(bool,X2)) & ~p(s(bool,X1)) & ~p(s(bool,X0))) | sP2(X0,X1,X2)))),
  inference(nnf_transformation,[],[f201])).
fof(f508,plain,(
  ( ! [X2,X0,X1] : (sP2(X0,X1,X2) | ~p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f301])).
fof(f509,plain,(
  ( ! [X2,X0,X1] : (sP2(X0,X1,X2) | ~p(s(bool,X1))) )),
  inference(cnf_transformation,[],[f301])).
fof(f510,plain,(
  ( ! [X2,X0,X1] : (sP2(X0,X1,X2) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f301])).
fof(f503,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,X1)) | ~p(s(bool,X0)) | p(s(bool,X2)) | ~sP3(X0,X1,X2)) )),
  inference(cnf_transformation,[],[f299])).
fof(f299,plain,(
  ! [X0,X1,X2] : ((~sP3(X0,X1,X2) | p(s(bool,X2)) | ~p(s(bool,X1)) | ~p(s(bool,X0))) & ((~p(s(bool,X2)) & p(s(bool,X1)) & p(s(bool,X0))) | sP3(X0,X1,X2)))),
  inference(rectify,[],[f298])).
fof(f298,plain,(
  ! [X1,X0,X2] : ((~sP3(X1,X0,X2) | p(s(bool,X2)) | ~p(s(bool,X0)) | ~p(s(bool,X1))) & ((~p(s(bool,X2)) & p(s(bool,X0)) & p(s(bool,X1))) | sP3(X1,X0,X2)))),
  inference(flattening,[],[f297])).
fof(f297,plain,(
  ! [X1,X0,X2] : ((~sP3(X1,X0,X2) | (p(s(bool,X2)) | ~p(s(bool,X0)) | ~p(s(bool,X1)))) & ((~p(s(bool,X2)) & p(s(bool,X0)) & p(s(bool,X1))) | sP3(X1,X0,X2)))),
  inference(nnf_transformation,[],[f202])).
fof(f504,plain,(
  ( ! [X2,X0,X1] : (sP3(X0,X1,X2) | ~p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f299])).
fof(f505,plain,(
  ( ! [X2,X0,X1] : (sP3(X0,X1,X2) | p(s(bool,X1))) )),
  inference(cnf_transformation,[],[f299])).
fof(f506,plain,(
  ( ! [X2,X0,X1] : (sP3(X0,X1,X2) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f299])).
fof(f499,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,X1)) | ~p(s(bool,X0)) | p(s(bool,X2)) | ~sP4(X0,X1,X2)) )),
  inference(cnf_transformation,[],[f296])).
fof(f296,plain,(
  ! [X0,X1,X2] : ((~sP4(X0,X1,X2) | p(s(bool,X2)) | ~p(s(bool,X1)) | ~p(s(bool,X0))) & ((~p(s(bool,X2)) & p(s(bool,X1)) & p(s(bool,X0))) | sP4(X0,X1,X2)))),
  inference(rectify,[],[f295])).
fof(f295,plain,(
  ! [X2,X0,X1] : ((~sP4(X2,X0,X1) | p(s(bool,X1)) | ~p(s(bool,X0)) | ~p(s(bool,X2))) & ((~p(s(bool,X1)) & p(s(bool,X0)) & p(s(bool,X2))) | sP4(X2,X0,X1)))),
  inference(flattening,[],[f294])).
fof(f294,plain,(
  ! [X2,X0,X1] : ((~sP4(X2,X0,X1) | (p(s(bool,X1)) | ~p(s(bool,X0)) | ~p(s(bool,X2)))) & ((~p(s(bool,X1)) & p(s(bool,X0)) & p(s(bool,X2))) | sP4(X2,X0,X1)))),
  inference(nnf_transformation,[],[f203])).
fof(f500,plain,(
  ( ! [X2,X0,X1] : (sP4(X0,X1,X2) | ~p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f296])).
fof(f501,plain,(
  ( ! [X2,X0,X1] : (sP4(X0,X1,X2) | p(s(bool,X1))) )),
  inference(cnf_transformation,[],[f296])).
fof(f502,plain,(
  ( ! [X2,X0,X1] : (sP4(X0,X1,X2) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f296])).
fof(f492,plain,(
  ( ! [X2,X0,X1] : (~sP5(X0,X1,X2) | sP2(X2,X1,X0)) )),
  inference(cnf_transformation,[],[f293])).
fof(f293,plain,(
  ! [X0,X1,X2] : ((~sP5(X0,X1,X2) | (sP2(X2,X1,X0) & sP3(X1,X2,X0) & sP4(X0,X2,X1) & (p(s(bool,X2)) | ~p(s(bool,X1)) | ~p(s(bool,X0))))) & (~sP2(X2,X1,X0) | ~sP3(X1,X2,X0) | ~sP4(X0,X2,X1) | (~p(s(bool,X2)) & p(s(bool,X1)) & p(s(bool,X0))) | sP5(X0,X1,X2)))),
  inference(rectify,[],[f292])).
fof(f292,plain,(
  ! [X2,X1,X0] : ((~sP5(X2,X1,X0) | (sP2(X0,X1,X2) & sP3(X1,X0,X2) & sP4(X2,X0,X1) & (p(s(bool,X0)) | ~p(s(bool,X1)) | ~p(s(bool,X2))))) & (~sP2(X0,X1,X2) | ~sP3(X1,X0,X2) | ~sP4(X2,X0,X1) | (~p(s(bool,X0)) & p(s(bool,X1)) & p(s(bool,X2))) | sP5(X2,X1,X0)))),
  inference(flattening,[],[f291])).
fof(f291,plain,(
  ! [X2,X1,X0] : ((~sP5(X2,X1,X0) | (sP2(X0,X1,X2) & sP3(X1,X0,X2) & sP4(X2,X0,X1) & (p(s(bool,X0)) | ~p(s(bool,X1)) | ~p(s(bool,X2))))) & ((~sP2(X0,X1,X2) | ~sP3(X1,X0,X2) | ~sP4(X2,X0,X1) | (~p(s(bool,X0)) & p(s(bool,X1)) & p(s(bool,X2)))) | sP5(X2,X1,X0)))),
  inference(nnf_transformation,[],[f204])).
fof(f493,plain,(
  ( ! [X2,X0,X1] : (~sP5(X0,X1,X2) | sP3(X1,X2,X0)) )),
  inference(cnf_transformation,[],[f293])).
fof(f494,plain,(
  ( ! [X2,X0,X1] : (~sP5(X0,X1,X2) | sP4(X0,X2,X1)) )),
  inference(cnf_transformation,[],[f293])).
fof(f495,plain,(
  ( ! [X2,X0,X1] : (~sP5(X0,X1,X2) | ~p(s(bool,X1)) | p(s(bool,X2)) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f293])).
fof(f496,plain,(
  ( ! [X2,X0,X1] : (~sP4(X0,X2,X1) | ~p(s(bool,X2)) | sP5(X0,X1,X2) | ~sP3(X1,X2,X0) | ~sP2(X2,X1,X0)) )),
  inference(cnf_transformation,[],[f293])).
fof(f497,plain,(
  ( ! [X2,X0,X1] : (~sP4(X0,X2,X1) | p(s(bool,X1)) | sP5(X0,X1,X2) | ~sP3(X1,X2,X0) | ~sP2(X2,X1,X0)) )),
  inference(cnf_transformation,[],[f293])).
fof(f498,plain,(
  ( ! [X2,X0,X1] : (~sP4(X0,X2,X1) | p(s(bool,X0)) | sP5(X0,X1,X2) | ~sP3(X1,X2,X0) | ~sP2(X2,X1,X0)) )),
  inference(cnf_transformation,[],[f293])).
fof(f472,plain,(
  ( ! [X2,X0,X1] : (s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int',X2))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X1),s('type.integer.int',X2))) | s('type.integer.int',X0) = s('type.integer.int',X1)) )),
  inference(cnf_transformation,[],[f284])).
fof(f284,plain,(
  ! [X0,X1,X2] : ((s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int',X2))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X1),s('type.integer.int',X2))) | s('type.integer.int',X0) = s('type.integer.int',X1)) & (s('type.integer.int',X0) != s('type.integer.int',X1) | s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int',X2))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X1),s('type.integer.int',X2)))))),
  inference(nnf_transformation,[],[f153])).
fof(f153,plain,(
  ! [X0,X1,X2] : (s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int',X2))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X1),s('type.integer.int',X2))) <=> s('type.integer.int',X0) = s('type.integer.int',X1))),
  inference(rectify,[],[f12])).
fof(f12,axiom,(
  ! [X8,X9,X12] : (s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X8),s('type.integer.int',X12))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X9),s('type.integer.int',X12))) <=> s('type.integer.int',X8) = s('type.integer.int',X9))),
  file('thm.integer.INT_NEG_SAME_EQ','thm.integer.INT_EQ_RADD')).
fof(f473,plain,(
  ( ! [X2,X0,X1] : (s('type.integer.int',X0) != s('type.integer.int',X1) | s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int',X2))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X1),s('type.integer.int',X2)))) )),
  inference(cnf_transformation,[],[f284])).
fof(f471,plain,(
  ( ! [X2,X0,X3,X1] : (s(X1,f(s(X0,sK24(X3,X2,X1,X0)))) != s(X1,g(s(X0,sK24(X3,X2,X1,X0)))) | s(fun(X0,X1),X2) = s(fun(X0,X1),X3)) )),
  inference(cnf_transformation,[],[f283])).
fof(f283,plain,(
  ! [X0,X1,X2,X3] : (s(X1,f(s(X0,sK24(X3,X2,X1,X0)))) != s(X1,g(s(X0,sK24(X3,X2,X1,X0)))) | s(fun(X0,X1),X2) = s(fun(X0,X1),X3))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK24])],[f191])).
fof(f191,plain,(
  ! [X0,X1,X2,X3] : (? [X4] : s(X1,f(s(X0,X4))) != s(X1,g(s(X0,X4))) | s(fun(X0,X1),X2) = s(fun(X0,X1),X3))),
  inference(ennf_transformation,[],[f152])).
fof(f152,plain,(
  ! [X0,X1,X2,X3] : (! [X4] : s(X1,f(s(X0,X4))) = s(X1,g(s(X0,X4))) => s(fun(X0,X1),X2) = s(fun(X0,X1),X3))),
  inference(flattening,[],[f151])).
fof(f151,plain,(
  ! [X0,X1] : ! [X2,X3] : (! [X4] : s(X1,f(s(X0,X4))) = s(X1,g(s(X0,X4))) => s(fun(X0,X1),X2) = s(fun(X0,X1),X3))),
  inference(rectify,[],[f4])).
fof(f4,axiom,(
  ! [X1,X2] : ! [X3,X4] : (! [X5] : s(X2,f(s(X1,X5))) = s(X2,g(s(X1,X5))) => s(fun(X1,X2),X3) = s(fun(X1,X2),X4))),
  file('thm.integer.INT_NEG_SAME_EQ',aHL_EXT)).
fof(f469,plain,(
  ( ! [X2,X0,X10,X8,X1] : (~p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X1,fun(X0,bool)),X2),s(X1,sK20(X2,X1,X0)))),s(X0,X10)))) | p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X1,fun(X0,bool)),X2),s(X1,X8))),s(X0,happ(s(fun(X1,X0),sK21(X2,X1,X0)),s(X1,X8))))))) )),
  inference(cnf_transformation,[],[f282])).
fof(f282,plain,(
  ! [X0,X1,X2] : ((! [X10] : ~p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X1,fun(X0,bool)),X2),s(X1,sK20(X2,X1,X0)))),s(X0,X10)))) | ! [X8] : p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X1,fun(X0,bool)),X2),s(X1,X8))),s(X0,happ(s(fun(X1,X0),sK21(X2,X1,X0)),s(X1,X8))))))) & (! [X5] : ~p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X1,fun(X0,bool)),X2),s(X1,sK22(X5,X2,X1,X0)))),s(X0,happ(s(fun(X1,X0),X5),s(X1,sK22(X5,X2,X1,X0))))))) | ! [X3] : p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X1,fun(X0,bool)),X2),s(X1,X3))),s(X0,sK23(X3,X2,X1,X0)))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK20,sK21,sK22,sK23])],[f281])).
fof(f281,plain,(
  ! [X0,X1,X2] : ((? [X9] : ! [X10] : ~p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X1,fun(X0,bool)),X2),s(X1,X9))),s(X0,X10)))) | ? [X7] : ! [X8] : p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X1,fun(X0,bool)),X2),s(X1,X8))),s(X0,happ(s(fun(X1,X0),X7),s(X1,X8))))))) & (! [X5] : ? [X6] : ~p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X1,fun(X0,bool)),X2),s(X1,X6))),s(X0,happ(s(fun(X1,X0),X5),s(X1,X6)))))) | ! [X3] : ? [X4] : p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X1,fun(X0,bool)),X2),s(X1,X3))),s(X0,X4))))))),
  inference(rectify,[],[f280])).
fof(f280,plain,(
  ! [X0,X1,X2] : ((? [X3] : ! [X4] : ~p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X1,fun(X0,bool)),X2),s(X1,X3))),s(X0,X4)))) | ? [X5] : ! [X6] : p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X1,fun(X0,bool)),X2),s(X1,X6))),s(X0,happ(s(fun(X1,X0),X5),s(X1,X6))))))) & (! [X5] : ? [X6] : ~p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X1,fun(X0,bool)),X2),s(X1,X6))),s(X0,happ(s(fun(X1,X0),X5),s(X1,X6)))))) | ! [X3] : ? [X4] : p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X1,fun(X0,bool)),X2),s(X1,X3))),s(X0,X4))))))),
  inference(nnf_transformation,[],[f150])).
fof(f150,plain,(
  ! [X0,X1,X2] : (! [X3] : ? [X4] : p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X1,fun(X0,bool)),X2),s(X1,X3))),s(X0,X4)))) <=> ? [X5] : ! [X6] : p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X1,fun(X0,bool)),X2),s(X1,X6))),s(X0,happ(s(fun(X1,X0),X5),s(X1,X6)))))))),
  inference(flattening,[],[f149])).
fof(f149,plain,(
  ! [X0,X1] : ! [X2] : (! [X3] : ? [X4] : p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X1,fun(X0,bool)),X2),s(X1,X3))),s(X0,X4)))) <=> ? [X5] : ! [X6] : p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X1,fun(X0,bool)),X2),s(X1,X6))),s(X0,happ(s(fun(X1,X0),X5),s(X1,X6)))))))),
  inference(rectify,[],[f48])).
fof(f48,axiom,(
  ! [X23,X11] : ! [X24] : (! [X8] : ? [X9] : p(s(bool,happ(s(fun(X23,bool),happ(s(fun(X11,fun(X23,bool)),X24),s(X11,X8))),s(X23,X9)))) <=> ? [X25] : ! [X8] : p(s(bool,happ(s(fun(X23,bool),happ(s(fun(X11,fun(X23,bool)),X24),s(X11,X8))),s(X23,happ(s(fun(X11,X23),X25),s(X11,X8)))))))),
  file('thm.integer.INT_NEG_SAME_EQ','thm.bool.SKOLEM_THM')).
fof(f470,plain,(
  ( ! [X2,X0,X5,X3,X1] : (~p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X1,fun(X0,bool)),X2),s(X1,sK22(X5,X2,X1,X0)))),s(X0,happ(s(fun(X1,X0),X5),s(X1,sK22(X5,X2,X1,X0))))))) | p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X1,fun(X0,bool)),X2),s(X1,X3))),s(X0,sK23(X3,X2,X1,X0)))))) )),
  inference(cnf_transformation,[],[f282])).
fof(f453,plain,(
  ( ! [X0,X1] : (~sP1(X0,X1) | p(s(bool,X0)) | p(s(bool,X1))) )),
  inference(cnf_transformation,[],[f275])).
fof(f275,plain,(
  ! [X0,X1] : ((~sP1(X0,X1) | ((p(s(bool,X0)) | p(s(bool,X1))) & (~p(s(bool,X1)) | ~p(s(bool,X0))))) & ((~p(s(bool,X0)) & ~p(s(bool,X1))) | (p(s(bool,X1)) & p(s(bool,X0))) | sP1(X0,X1)))),
  inference(rectify,[],[f274])).
fof(f274,plain,(
  ! [X1,X0] : ((~sP1(X1,X0) | ((p(s(bool,X1)) | p(s(bool,X0))) & (~p(s(bool,X0)) | ~p(s(bool,X1))))) & ((~p(s(bool,X1)) & ~p(s(bool,X0))) | (p(s(bool,X0)) & p(s(bool,X1))) | sP1(X1,X0)))),
  inference(flattening,[],[f273])).
fof(f273,plain,(
  ! [X1,X0] : ((~sP1(X1,X0) | ((p(s(bool,X1)) | p(s(bool,X0))) & (~p(s(bool,X0)) | ~p(s(bool,X1))))) & (((~p(s(bool,X1)) & ~p(s(bool,X0))) | (p(s(bool,X0)) & p(s(bool,X1)))) | sP1(X1,X0)))),
  inference(nnf_transformation,[],[f199])).
fof(f199,plain,(
  ! [X1,X0] : (sP1(X1,X0) <=> ((p(s(bool,X1)) | p(s(bool,X0))) & (~p(s(bool,X0)) | ~p(s(bool,X1)))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP1])])).
fof(f454,plain,(
  ( ! [X0,X1] : (~sP1(X0,X1) | ~p(s(bool,X1)) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f275])).
fof(f455,plain,(
  ( ! [X0,X1] : (~p(s(bool,X0)) | p(s(bool,X1)) | sP1(X0,X1)) )),
  inference(cnf_transformation,[],[f275])).
fof(f458,plain,(
  ( ! [X0,X1] : (~p(s(bool,X1)) | p(s(bool,X0)) | sP1(X0,X1)) )),
  inference(cnf_transformation,[],[f275])).
fof(f603,plain,(
  ( ! [X0,X1] : (~sP0(X0,X1) | p(s(bool,X1)) | p(s(bool,X0))) )),
  inference(subsumption_resolution,[],[f438,f602])).
fof(f438,plain,(
  ( ! [X0,X1] : (p(s(bool,'F_0')) | p(s(bool,X0)) | p(s(bool,X1)) | ~sP0(X0,X1)) )),
  inference(cnf_transformation,[],[f268])).
fof(f268,plain,(
  ! [X0,X1] : ((~sP0(X0,X1) | p(s(bool,X1)) | p(s(bool,X0)) | p(s(bool,'F_0'))) & ((~p(s(bool,X1)) & ~p(s(bool,X0)) & ~p(s(bool,'F_0'))) | sP0(X0,X1)))),
  inference(flattening,[],[f267])).
fof(f267,plain,(
  ! [X0,X1] : ((~sP0(X0,X1) | (p(s(bool,X1)) | p(s(bool,X0)) | p(s(bool,'F_0')))) & ((~p(s(bool,X1)) & ~p(s(bool,X0)) & ~p(s(bool,'F_0'))) | sP0(X0,X1)))),
  inference(nnf_transformation,[],[f197])).
fof(f197,plain,(
  ! [X0,X1] : (sP0(X0,X1) <=> (p(s(bool,X1)) | p(s(bool,X0)) | p(s(bool,'F_0'))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP0])])).
fof(f439,plain,(
  ( ! [X0,X1] : (~p(s(bool,X1)) | sP0(X0,X1)) )),
  inference(cnf_transformation,[],[f268])).
fof(f440,plain,(
  ( ! [X0,X1] : (~p(s(bool,X0)) | sP0(X0,X1)) )),
  inference(cnf_transformation,[],[f268])).
fof(f430,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X0))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X1))) | s('type.num.num',X0) = s('type.num.num',X1)) )),
  inference(cnf_transformation,[],[f263])).
fof(f263,plain,(
  ! [X0,X1] : ((s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X0))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X1))) | s('type.num.num',X0) = s('type.num.num',X1)) & (s('type.num.num',X0) != s('type.num.num',X1) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X0))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X1)))))),
  inference(nnf_transformation,[],[f136])).
fof(f136,plain,(
  ! [X0,X1] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X0))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X1))) <=> s('type.num.num',X0) = s('type.num.num',X1))),
  inference(rectify,[],[f19])).
fof(f19,axiom,(
  ! [X16,X7] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X7))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X16))) <=> s('type.num.num',X7) = s('type.num.num',X16))),
  file('thm.integer.INT_NEG_SAME_EQ','thm.integer.INT_INJ')).
fof(f431,plain,(
  ( ! [X0,X1] : (s('type.num.num',X0) != s('type.num.num',X1) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X0))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X1)))) )),
  inference(cnf_transformation,[],[f263])).
fof(f429,plain,(
  ( ! [X0,X1] : (s('type.integer.int',X0) != s('type.integer.int',X1) | p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X0),s('type.integer.int',X1))))) )),
  inference(cnf_transformation,[],[f262])).
fof(f423,plain,(
  ( ! [X0,X1] : (~p(s(bool,X1)) | ~p(s(bool,X0)) | s(bool,X0) = s(bool,X1)) )),
  inference(cnf_transformation,[],[f182])).
fof(f419,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int',X1))))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X0))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X1)))))) )),
  inference(cnf_transformation,[],[f127])).
fof(f127,plain,(
  ! [X0,X1] : s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int',X1))))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X0))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X1)))))),
  inference(rectify,[],[f27])).
fof(f27,axiom,(
  ! [X8,X9] : s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X8),s('type.integer.int',X9))))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X8))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X9)))))),
  file('thm.integer.INT_NEG_SAME_EQ','thm.integer.INT_NEG_ADD')).
fof(f418,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int',X1))))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X1)))))) )),
  inference(cnf_transformation,[],[f126])).
fof(f126,plain,(
  ! [X0,X1] : s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int',X1))))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X1)))))),
  inference(rectify,[],[f26])).
fof(f26,axiom,(
  ! [X8,X9] : s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X8),s('type.integer.int',X9))))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X8),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X9)))))),
  file('thm.integer.INT_NEG_SAME_EQ','thm.integer.INT_NEG_RMUL')).
fof(f417,plain,(
  ( ! [X0,X1] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1))) = s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X0))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X1)))))) )),
  inference(cnf_transformation,[],[f125])).
fof(f125,plain,(
  ! [X0,X1] : s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1))) = s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X0))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X1)))))),
  inference(rectify,[],[f70])).
fof(f70,axiom,(
  ! [X16,X7] : s(bool,'const.arithmetic.<=_2'(s('type.num.num',X16),s('type.num.num',X7))) = s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X16))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X7)))))),
  file('thm.integer.INT_NEG_SAME_EQ','thm.integer.INT_LE')).
fof(f416,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X0),s('type.integer.int',X1))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X1)))))) )),
  inference(cnf_transformation,[],[f124])).
fof(f124,plain,(
  ! [X0,X1] : s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X0),s('type.integer.int',X1))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X1)))))),
  inference(rectify,[],[f28])).
fof(f28,axiom,(
  ! [X8,X9] : s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X8),s('type.integer.int',X9))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X8),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X9)))))),
  file('thm.integer.INT_NEG_SAME_EQ','thm.integer.int_sub')).
fof(f413,plain,(
  ( ! [X4,X2,X0,X1] : (~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X4)))) | p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2)))) | s(X0,X2) != s(X0,X4)) )),
  inference(cnf_transformation,[],[f260])).
fof(f260,plain,(
  ! [X0,X1,X2] : ((! [X4] : (s(X0,X2) != s(X0,X4) | ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X4))))) | p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2))))) & (~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2)))) | (s(X0,X2) = s(X0,sK19(X2,X1,X0)) & p(s(bool,happ(s(fun(X0,bool),X1),s(X0,sK19(X2,X1,X0))))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK19])],[f259])).
fof(f259,plain,(
  ! [X0,X1,X2] : ((! [X4] : (s(X0,X2) != s(X0,X4) | ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X4))))) | p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2))))) & (~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2)))) | ? [X3] : (s(X0,X2) = s(X0,X3) & p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3)))))))),
  inference(rectify,[],[f258])).
fof(f258,plain,(
  ! [X0,X1,X2] : ((! [X3] : (s(X0,X2) != s(X0,X3) | ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3))))) | p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2))))) & (~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2)))) | ? [X3] : (s(X0,X2) = s(X0,X3) & p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3)))))))),
  inference(nnf_transformation,[],[f123])).
fof(f123,plain,(
  ! [X0,X1,X2] : (? [X3] : (s(X0,X2) = s(X0,X3) & p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3))))) <=> p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2)))))),
  inference(flattening,[],[f122])).
fof(f122,plain,(
  ! [X0] : ! [X1,X2] : (? [X3] : (s(X0,X2) = s(X0,X3) & p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3))))) <=> p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2)))))),
  inference(rectify,[],[f50])).
fof(f50,axiom,(
  ! [X11] : ! [X24,X26] : (? [X8] : (s(X11,X8) = s(X11,X26) & p(s(bool,happ(s(fun(X11,bool),X24),s(X11,X8))))) <=> p(s(bool,happ(s(fun(X11,bool),X24),s(X11,X26)))))),
  file('thm.integer.INT_NEG_SAME_EQ','thm.bool.UNWIND_THM2')).
fof(f414,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2)))) | s(X0,X2) = s(X0,sK19(X2,X1,X0))) )),
  inference(cnf_transformation,[],[f260])).
fof(f415,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2)))) | p(s(bool,happ(s(fun(X0,bool),X1),s(X0,sK19(X2,X1,X0)))))) )),
  inference(cnf_transformation,[],[f260])).
fof(f410,plain,(
  ( ! [X6,X2,X0,X1] : (~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X6)))) | p(s(bool,X1)) | p(s(bool,happ(s(fun(X0,bool),X2),s(X0,sK17(X2,X1,X0)))))) )),
  inference(cnf_transformation,[],[f257])).
fof(f257,plain,(
  ! [X0,X1,X2] : (((~p(s(bool,X1)) & ! [X6] : ~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X6))))) | (p(s(bool,X1)) | p(s(bool,happ(s(fun(X0,bool),X2),s(X0,sK17(X2,X1,X0))))))) & (! [X4] : (~p(s(bool,X1)) & ~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X4))))) | p(s(bool,X1)) | p(s(bool,happ(s(fun(X0,bool),X2),s(X0,sK18(X2,X1,X0)))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK17,sK18])],[f256])).
fof(f256,plain,(
  ! [X0,X1,X2] : (((~p(s(bool,X1)) & ! [X6] : ~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X6))))) | ? [X5] : (p(s(bool,X1)) | p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X5)))))) & (! [X4] : (~p(s(bool,X1)) & ~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X4))))) | p(s(bool,X1)) | ? [X3] : p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X3))))))),
  inference(rectify,[],[f255])).
fof(f255,plain,(
  ! [X0,X1,X2] : (((~p(s(bool,X1)) & ! [X3] : ~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X3))))) | ? [X4] : (p(s(bool,X1)) | p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X4)))))) & (! [X4] : (~p(s(bool,X1)) & ~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X4))))) | p(s(bool,X1)) | ? [X3] : p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X3))))))),
  inference(flattening,[],[f254])).
fof(f254,plain,(
  ! [X0,X1,X2] : (((~p(s(bool,X1)) & ! [X3] : ~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X3))))) | ? [X4] : (p(s(bool,X1)) | p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X4)))))) & (! [X4] : (~p(s(bool,X1)) & ~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X4))))) | (p(s(bool,X1)) | ? [X3] : p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X3)))))))),
  inference(nnf_transformation,[],[f121])).
fof(f121,plain,(
  ! [X0,X1,X2] : ((p(s(bool,X1)) | ? [X3] : p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X3))))) <=> ? [X4] : (p(s(bool,X1)) | p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X4))))))),
  inference(flattening,[],[f120])).
fof(f120,plain,(
  ! [X0] : ! [X1,X2] : ((p(s(bool,X1)) | ? [X3] : p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X3))))) <=> ? [X4] : (p(s(bool,X1)) | p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X4))))))),
  inference(rectify,[],[f55])).
fof(f55,axiom,(
  ! [X11] : ! [X24,X27] : ((p(s(bool,X24)) | ? [X8] : p(s(bool,happ(s(fun(X11,bool),X27),s(X11,X8))))) <=> ? [X8] : (p(s(bool,X24)) | p(s(bool,happ(s(fun(X11,bool),X27),s(X11,X8))))))),
  file('thm.integer.INT_NEG_SAME_EQ','thm.bool.RIGHT_OR_EXISTS_THM')).
fof(f412,plain,(
  ( ! [X4,X2,X0,X1] : (~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X4)))) | p(s(bool,X1)) | p(s(bool,happ(s(fun(X0,bool),X2),s(X0,sK18(X2,X1,X0)))))) )),
  inference(cnf_transformation,[],[f257])).
fof(f405,plain,(
  ( ! [X4,X0,X1] : (~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X4)))) | p(s(bool,happ(s(fun(X0,bool),X1),s(X0,sK15(X1,X0)))))) )),
  inference(cnf_transformation,[],[f252])).
fof(f252,plain,(
  ! [X0,X1] : ((p(s(bool,happ(s(fun(X0,bool),X1),s(X0,sK15(X1,X0))))) | ! [X4] : ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X4))))) & (p(s(bool,happ(s(fun(X0,bool),X1),s(X0,sK16(X1,X0))))) | ! [X2] : ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK15,sK16])],[f251])).
fof(f251,plain,(
  ! [X0,X1] : ((? [X5] : p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X5)))) | ! [X4] : ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X4))))) & (? [X3] : p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3)))) | ! [X2] : ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2))))))),
  inference(rectify,[],[f250])).
fof(f250,plain,(
  ! [X0,X1] : ((? [X2] : p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2)))) | ! [X3] : ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3))))) & (? [X3] : p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3)))) | ! [X2] : ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2))))))),
  inference(nnf_transformation,[],[f180])).
fof(f180,plain,(
  ! [X0,X1] : (! [X2] : ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2)))) <=> ! [X3] : ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3)))))),
  inference(ennf_transformation,[],[f117])).
fof(f117,plain,(
  ! [X0,X1] : (~? [X2] : p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2)))) <=> ! [X3] : ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3)))))),
  inference(flattening,[],[f116])).
fof(f116,plain,(
  ! [X0] : ! [X1] : (~? [X2] : p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2)))) <=> ! [X3] : ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3)))))),
  inference(rectify,[],[f54])).
fof(f54,axiom,(
  ! [X11] : ! [X24] : (~? [X8] : p(s(bool,happ(s(fun(X11,bool),X24),s(X11,X8)))) <=> ! [X8] : ~p(s(bool,happ(s(fun(X11,bool),X24),s(X11,X8)))))),
  file('thm.integer.INT_NEG_SAME_EQ','thm.bool.NOT_EXISTS_THM')).
fof(f406,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2)))) | p(s(bool,happ(s(fun(X0,bool),X1),s(X0,sK16(X1,X0)))))) )),
  inference(cnf_transformation,[],[f252])).
fof(f364,plain,(
  ( ! [X0] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X0)) )),
  inference(cnf_transformation,[],[f224])).
fof(f224,plain,(
  ! [X0] : ((~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X0)) & (s('type.num.num','const.num.|48|_0') != s('type.num.num',X0) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0'))))))),
  inference(nnf_transformation,[],[f98])).
fof(f98,plain,(
  ! [X0] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) <=> s('type.num.num','const.num.|48|_0') = s('type.num.num',X0))),
  inference(rectify,[],[f39])).
fof(f39,axiom,(
  ! [X7] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X7),s('type.num.num','const.num.|48|_0')))) <=> s('type.num.num','const.num.|48|_0') = s('type.num.num',X7))),
  file('thm.integer.INT_NEG_SAME_EQ','thm.arithmetic.LESS_EQ_|48|')).
fof(f365,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') != s('type.num.num',X0) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0'))))) )),
  inference(cnf_transformation,[],[f224])).
fof(f360,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'F_0') != s(bool,X0)) )),
  inference(cnf_transformation,[],[f222])).
fof(f356,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,X0) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f220])).
fof(f346,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') != s('type.num.num',sK14(X0)) | s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.|48|_0') != s('type.num.num',sK13(X0))) )),
  inference(cnf_transformation,[],[f219])).
fof(f337,plain,(
  ( ! [X0] : (s('type.integer.int',X0) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X0)))))) )),
  inference(cnf_transformation,[],[f75])).
fof(f75,plain,(
  ! [X0] : s('type.integer.int',X0) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X0)))))),
  inference(rectify,[],[f32])).
fof(f32,axiom,(
  ! [X8] : s('type.integer.int',X8) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X8)))))),
  file('thm.integer.INT_NEG_SAME_EQ','thm.integer.INT_NEGNEG')).
fof(f6786,plain,(
  ( ! [X4] : (s('type.integer.int',sK12) = s('type.integer.int',sK19('const.integer.int_neg_1'(s('type.integer.int',sK12)),X4,'type.integer.int'))) ) | ($spl0 | $spl10)),
  inference(subsumption_resolution,[],[f6477,f330])).
fof(f6477,plain,(
  ( ! [X4] : (~p(s(bool,'T_0')) | s('type.integer.int',sK12) = s('type.integer.int',sK19('const.integer.int_neg_1'(s('type.integer.int',sK12)),X4,'type.integer.int'))) ) | ($spl0 | $spl10)),
  inference(backward_demodulation,[],[f6115,f1476])).
fof(f1476,plain,(
  ( ! [X4] : (~p(s(bool,happ(s(fun('type.integer.int',bool),X4),s('type.integer.int',sK12)))) | s('type.integer.int',sK12) = s('type.integer.int',sK19('const.integer.int_neg_1'(s('type.integer.int',sK12)),X4,'type.integer.int'))) ) | $spl0),
  inference(forward_demodulation,[],[f1471,f598])).
fof(f1471,plain,(
  ( ! [X4] : (~p(s(bool,happ(s(fun('type.integer.int',bool),X4),s('type.integer.int',sK12)))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK12))) = s('type.integer.int',sK19('const.integer.int_neg_1'(s('type.integer.int',sK12)),X4,'type.integer.int'))) ) | $spl0),
  inference(superposition,[],[f414,f598])).
fof(f6783,plain,(
  $false | ($spl0 | $spl10)),
  inference(global_subsumption,[],[f6782,f329,f328,f330,f602,f337,f341,f346,f357,f356,f361,f360,f365,f364,f406,f405,f412,f410,f415,f414,f413,f416,f417,f418,f419,f423,f420,f429,f428,f427,f431,f430,f440,f439,f603,f458,f455,f454,f453,f464,f463,f470,f469,f471,f473,f472,f498,f497,f496,f495,f494,f493,f492,f502,f501,f500,f499,f506,f505,f504,f503,f510,f509,f508,f507,f514,f513,f512,f511,f588,f518,f517,f516,f515,f525,f524,f523,f522,f531,f528,f527,f526,f538,f537,f536,f587,f534,f533,f532,f542,f541,f540,f539,f546,f545,f544,f543,f555,f554,f553,f586,f551,f550,f549,f559,f558,f557,f556,f563,f562,f561,f560,f585,f616,f617,f620,f621,f622,f623,f624,f625,f626,f627,f628,f629,f630,f631,f632,f633,f634,f635,f636,f637,f433,f432,f426,f425,f424,f367,f366,f345,f344,f343,f339,f338,f657,f664,f665,f668,f673,f676,f681,f682,f684,f691,f695,f696,f699,f705,f706,f710,f713,f716,f746,f792,f801,f800,f811,f809,f827,f833,f843,f846,f851,f855,f863,f869,f892,f899,f905,f928,f935,f941,f961,f1101,f1100,f1099,f1098,f1097,f1096,f1095,f1092,f1091,f1087,f1084,f1083,f1080,f1079,f1075,f1063,f1062,f1061,f1057,f1056,f1052,f1051,f1050,f1047,f1043,f1041,f1039,f1038,f1035,f1034,f1033,f1032,f1031,f1027,f1026,f1021,f1020,f1017,f1016,f1012,f1005,f1004,f1003,f1002,f1001,f1000,f999,f998,f995,f994,f990,f989,f986,f985,f981,f980,f979,f976,f975,f974,f973,f971,f970,f969,f967,f1117,f1132,f1315,f1314,f1313,f1312,f1311,f1310,f1309,f1306,f1305,f1301,f1298,f1297,f1294,f1293,f1289,f1277,f1276,f1275,f1271,f1270,f1266,f1265,f1264,f1261,f1257,f1255,f1253,f1252,f1249,f1248,f1247,f1246,f1245,f1241,f1240,f1235,f1234,f1231,f1230,f1226,f1219,f1218,f1217,f1216,f1215,f1214,f1213,f1212,f1209,f1208,f1204,f1203,f1200,f1199,f1195,f1194,f1193,f1190,f1189,f1188,f1187,f1185,f1184,f1183,f1182,f1181,f1368,f1410,f1430,f1443,f1459,f1467,f1469,f1470,f1477,f1478,f1483,f1487,f1486,f1503,f1527,f1537,f1580,f1586,f1591,f1598,f1608,f1643,f1642,f1641,f1640,f1644,f1645,f1654,f1655,f1656,f1657,f1658,f1659,f1660,f1661,f1662,f1663,f1664,f1665,f1666,f1667,f1668,f1669,f1670,f1671,f1673,f1674,f1684,f1754,f1817,f1846,f1895,f1900,f1880,f1921,f1928,f2023,f2024,f2026,f2027,f2029,f2030,f2032,f2060,f2107,f2106,f2105,f2104,f2116,f2117,f2118,f2119,f2128,f2129,f2130,f2131,f2132,f2133,f2134,f2135,f2136,f2137,f2138,f2139,f2140,f2141,f2142,f2143,f2144,f2145,f2147,f2148,f2149,f2161,f2247,f2248,f2196,f2199,f2252,f2253,f2237,f2276,f2362,f2363,f2388,f2405,f2403,f2423,f2436,f2446,f2447,f2452,f2451,f2449,f2465,f2479,f2480,f2540,f2483,f2484,f2541,f2542,f2487,f2499,f2500,f2501,f2502,f2503,f2504,f2505,f2506,f2507,f2508,f2509,f2510,f2511,f2512,f2513,f2516,f2537,f2538,f2539,f2545,f2573,f2597,f2598,f2667,f2670,f2608,f2612,f2613,f2620,f2621,f2622,f2623,f2624,f2625,f2626,f2627,f2628,f2629,f2630,f2631,f2632,f2633,f2634,f2637,f2660,f2661,f2662,f2740,f2741,f2742,f2746,f2827,f2830,f2754,f2755,f2756,f2757,f2758,f2759,f2760,f2832,f2762,f2763,f2764,f2768,f2769,f2777,f2778,f2779,f2780,f2781,f2782,f2783,f2784,f2833,f2786,f2787,f2788,f2789,f2790,f2791,f2792,f2795,f2820,f2821,f2822,f2963,f2890,f2966,f2969,f2898,f2899,f2900,f2904,f2905,f2913,f2915,f2916,f2917,f2918,f2919,f2920,f2921,f2922,f2923,f2924,f2925,f2926,f2927,f2928,f2929,f2930,f2933,f2960,f2961,f2962,f3005,f3060,f3061,f4802,f4810,f4900,f4870,f4912,f4921,f4922,f5030,f4924,f4925,f4926,f5045,f5057,f5021,f5363,f5366,f5372,f5401,f5409,f5538,f5475,f5574,f5575,f5590,f5600,f5601,f5677,f5678,f5679,f5681,f5682,f5683,f5684,f5685,f5754,f6113,f6117,f6120,f6123,f6126,f6129,f6132,f6135,f6138,f6141,f6144,f6147,f6150,f6153,f6156,f6159,f6162,f6165,f5789,f5790,f5791,f6167,f6168,f6169,f6170,f6171,f6172,f6173,f6174,f6175,f6176,f6177,f6178,f6179,f6180,f6181,f6182,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6193,f6194,f6195,f6196,f6197,f6198,f6199,f6200,f6201,f5852,f5853,f5854,f5856,f5857,f5858,f5859,f5860,f6209,f6211,f6213,f6215,f6217,f6219,f6221,f6223,f6225,f6227,f6229,f6231,f6233,f6235,f6237,f6239,f6241,f6243,f6115,f6502,f6522,f6526,f6539,f6541,f6543,f6545,f6547,f6549,f6551,f6553,f6555,f6557,f6559,f6561,f6563,f6565,f6567,f6569,f6571,f6573,f6575,f6577,f6584,f6590,f6596,f6614,f6620,f6626,f6639,f6641,f6643,f6645,f6647,f6649,f6651,f6653,f6655,f6657,f6659,f6661,f6663,f6665,f6667,f6669,f6671,f6673,f6675,f6677,f6679,f6694,f6698,f6704,f6710,f6712,f6724,f6734,f6738,f6742,f6750,f6754,f6766,f6774])).
fof(f6782,plain,(
  ( ! [X159,X160] : (s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK12),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X159))))) = s('type.integer.int',sK19('const.integer.int_div_2'(s('type.integer.int',sK12),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X159)))),X160,'type.integer.int')) | s('type.integer.int',X159) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | ($spl0 | $spl10)),
  inference(subsumption_resolution,[],[f6474,f330])).
fof(f6474,plain,(
  ( ! [X159,X160] : (~p(s(bool,'T_0')) | s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK12),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X159))))) = s('type.integer.int',sK19('const.integer.int_div_2'(s('type.integer.int',sK12),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X159)))),X160,'type.integer.int')) | s('type.integer.int',X159) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | ($spl0 | $spl10)),
  inference(backward_demodulation,[],[f6115,f4725])).
fof(f4725,plain,(
  ( ! [X159,X160] : (~p(s(bool,happ(s(fun('type.integer.int',bool),X160),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK12),s('type.integer.int',X159)))))) | s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK12),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X159))))) = s('type.integer.int',sK19('const.integer.int_div_2'(s('type.integer.int',sK12),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X159)))),X160,'type.integer.int')) | s('type.integer.int',X159) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl0),
  inference(superposition,[],[f414,f2596])).
fof(f2596,plain,(
  ( ! [X0] : (s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK12),s('type.integer.int',X0))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK12),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X0))))) | s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl0),
  inference(superposition,[],[f424,f598])).
fof(f6779,plain,(
  $false | ($spl0 | $spl3 | $spl10)),
  inference(global_subsumption,[],[f6778,f329,f328,f330,f602,f337,f341,f346,f357,f356,f361,f360,f365,f364,f406,f405,f412,f410,f415,f414,f413,f416,f417,f418,f419,f423,f420,f429,f428,f427,f431,f430,f440,f439,f603,f458,f455,f454,f453,f464,f463,f470,f469,f471,f473,f472,f498,f497,f496,f495,f494,f493,f492,f502,f501,f500,f499,f506,f505,f504,f503,f510,f509,f508,f507,f514,f513,f512,f511,f588,f518,f517,f516,f515,f525,f524,f523,f522,f531,f528,f527,f526,f538,f537,f536,f587,f534,f533,f532,f542,f541,f540,f539,f546,f545,f544,f543,f555,f554,f553,f586,f551,f550,f549,f559,f558,f557,f556,f563,f562,f561,f560,f585,f616,f617,f620,f621,f622,f623,f624,f625,f626,f627,f628,f629,f630,f631,f632,f633,f634,f635,f636,f637,f433,f432,f426,f425,f424,f367,f366,f345,f344,f343,f339,f338,f657,f664,f665,f668,f673,f676,f681,f682,f684,f691,f695,f696,f699,f705,f706,f710,f713,f716,f746,f792,f801,f800,f811,f809,f827,f833,f843,f846,f851,f855,f863,f869,f892,f899,f905,f928,f935,f941,f961,f1101,f1100,f1099,f1098,f1097,f1096,f1095,f1092,f1091,f1087,f1084,f1083,f1080,f1079,f1075,f1063,f1062,f1061,f1057,f1056,f1052,f1051,f1050,f1047,f1043,f1041,f1039,f1038,f1035,f1034,f1033,f1032,f1031,f1027,f1026,f1021,f1020,f1017,f1016,f1012,f1005,f1004,f1003,f1002,f1001,f1000,f999,f998,f995,f994,f990,f989,f986,f985,f981,f980,f979,f976,f975,f974,f973,f971,f970,f969,f967,f1117,f1132,f1315,f1314,f1313,f1312,f1311,f1310,f1309,f1306,f1305,f1301,f1298,f1297,f1294,f1293,f1289,f1277,f1276,f1275,f1271,f1270,f1266,f1265,f1264,f1261,f1257,f1255,f1253,f1252,f1249,f1248,f1247,f1246,f1245,f1241,f1240,f1235,f1234,f1231,f1230,f1226,f1219,f1218,f1217,f1216,f1215,f1214,f1213,f1212,f1209,f1208,f1204,f1203,f1200,f1199,f1195,f1194,f1193,f1190,f1189,f1188,f1187,f1185,f1184,f1183,f1182,f1181,f1368,f1410,f1430,f1443,f1459,f1467,f1469,f1470,f1477,f1478,f1483,f1487,f1486,f1503,f1527,f1537,f1580,f1586,f1591,f1598,f1608,f1643,f1642,f1641,f1640,f1644,f1645,f1654,f1655,f1656,f1657,f1658,f1659,f1660,f1661,f1662,f1663,f1664,f1665,f1666,f1667,f1668,f1669,f1670,f1671,f1673,f1674,f1684,f1754,f1817,f1846,f1895,f1900,f1880,f1921,f1928,f2023,f2024,f2026,f2027,f2029,f2030,f2032,f2060,f2107,f2106,f2105,f2104,f2116,f2117,f2118,f2119,f2128,f2129,f2130,f2131,f2132,f2133,f2134,f2135,f2136,f2137,f2138,f2139,f2140,f2141,f2142,f2143,f2144,f2145,f2147,f2148,f2149,f2161,f2247,f2248,f2196,f2199,f2252,f2253,f2237,f2276,f2362,f2363,f2388,f2405,f2403,f2423,f2436,f2446,f2447,f2452,f2451,f2449,f2465,f2479,f2480,f2540,f2483,f2484,f2541,f2542,f2487,f2499,f2500,f2501,f2502,f2503,f2504,f2505,f2506,f2507,f2508,f2509,f2510,f2511,f2512,f2513,f2516,f2537,f2538,f2539,f2545,f2573,f2597,f2598,f2667,f2670,f2608,f2612,f2613,f2620,f2621,f2622,f2623,f2624,f2625,f2626,f2627,f2628,f2629,f2630,f2631,f2632,f2633,f2634,f2637,f2660,f2661,f2662,f2740,f2741,f2742,f2746,f2827,f2830,f2754,f2755,f2756,f2757,f2758,f2759,f2760,f2832,f2762,f2763,f2764,f2768,f2769,f2777,f2778,f2779,f2780,f2781,f2782,f2783,f2784,f2833,f2786,f2787,f2788,f2789,f2790,f2791,f2792,f2795,f2820,f2821,f2822,f2963,f2890,f2966,f2969,f2898,f2899,f2900,f2904,f2905,f2913,f2915,f2916,f2917,f2918,f2919,f2920,f2921,f2922,f2923,f2924,f2925,f2926,f2927,f2928,f2929,f2930,f2933,f2960,f2961,f2962,f3005,f3060,f3061,f4802,f4810,f4900,f4870,f4912,f4921,f4922,f5030,f4924,f4925,f4926,f5045,f5057,f5021,f5363,f5366,f5372,f5401,f5409,f5538,f5475,f5574,f5575,f5590,f5600,f5601,f5677,f5678,f5679,f5681,f5682,f5683,f5684,f5685,f5754,f6113,f6117,f6120,f6123,f6126,f6129,f6132,f6135,f6138,f6141,f6144,f6147,f6150,f6153,f6156,f6159,f6162,f6165,f5789,f5790,f5791,f6167,f6168,f6169,f6170,f6171,f6172,f6173,f6174,f6175,f6176,f6177,f6178,f6179,f6180,f6181,f6182,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6193,f6194,f6195,f6196,f6197,f6198,f6199,f6200,f6201,f5852,f5853,f5854,f5856,f5857,f5858,f5859,f5860,f6209,f6211,f6213,f6215,f6217,f6219,f6221,f6223,f6225,f6227,f6229,f6231,f6233,f6235,f6237,f6239,f6241,f6243,f6115,f6502,f6522,f6526,f6539,f6541,f6543,f6545,f6547,f6549,f6551,f6553,f6555,f6557,f6559,f6561,f6563,f6565,f6567,f6569,f6571,f6573,f6575,f6577,f6584,f6590,f6596,f6614,f6620,f6626,f6639,f6641,f6643,f6645,f6647,f6649,f6651,f6653,f6655,f6657,f6659,f6661,f6663,f6665,f6667,f6669,f6671,f6673,f6675,f6677,f6679,f6694,f6698,f6704,f6710,f6712,f6724,f6734,f6738,f6742,f6750,f6754,f6766,f6774])).
fof(f6778,plain,(
  ( ! [X144,X143] : (s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X143),s('type.integer.int',sK12))) = s('type.integer.int',sK19('const.integer.int_div_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X143))),s('type.integer.int',sK12)),X144,'type.integer.int'))) ) | ($spl0 | $spl3 | $spl10)),
  inference(subsumption_resolution,[],[f6472,f330])).
fof(f6472,plain,(
  ( ! [X144,X143] : (~p(s(bool,'T_0')) | s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X143),s('type.integer.int',sK12))) = s('type.integer.int',sK19('const.integer.int_div_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X143))),s('type.integer.int',sK12)),X144,'type.integer.int'))) ) | ($spl0 | $spl3 | $spl10)),
  inference(backward_demodulation,[],[f6115,f3647])).
fof(f3647,plain,(
  ( ! [X144,X143] : (s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X143),s('type.integer.int',sK12))) = s('type.integer.int',sK19('const.integer.int_div_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X143))),s('type.integer.int',sK12)),X144,'type.integer.int')) | ~p(s(bool,happ(s(fun('type.integer.int',bool),X144),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X143),s('type.integer.int',sK12))))))) ) | ($spl0 | $spl3)),
  inference(forward_demodulation,[],[f3612,f2663])).
fof(f2663,plain,(
  ( ! [X0] : (s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',sK12))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X0))),s('type.integer.int',sK12)))) ) | ($spl0 | $spl3)),
  inference(forward_demodulation,[],[f2585,f598])).
fof(f2585,plain,(
  ( ! [X0] : (s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK12))))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X0))),s('type.integer.int',sK12)))) ) | $spl3),
  inference(unit_resulting_resolution,[],[f601,f424])).
fof(f3612,plain,(
  ( ! [X144,X143] : (~p(s(bool,happ(s(fun('type.integer.int',bool),X144),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X143),s('type.integer.int',sK12)))))) | s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X143))),s('type.integer.int',sK12))) = s('type.integer.int',sK19('const.integer.int_div_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X143))),s('type.integer.int',sK12)),X144,'type.integer.int'))) ) | ($spl0 | $spl3)),
  inference(superposition,[],[f414,f2663])).
fof(f6775,plain,(
  $false | $spl10),
  inference(global_subsumption,[],[f329,f328,f330,f602,f337,f341,f346,f357,f356,f361,f360,f365,f364,f406,f405,f412,f410,f415,f414,f413,f416,f417,f418,f419,f423,f420,f429,f428,f427,f431,f430,f440,f439,f603,f458,f455,f454,f453,f464,f463,f470,f469,f471,f473,f472,f498,f497,f496,f495,f494,f493,f492,f502,f501,f500,f499,f506,f505,f504,f503,f510,f509,f508,f507,f514,f513,f512,f511,f588,f518,f517,f516,f515,f525,f524,f523,f522,f531,f528,f527,f526,f538,f537,f536,f587,f534,f533,f532,f542,f541,f540,f539,f546,f545,f544,f543,f555,f554,f553,f586,f551,f550,f549,f559,f558,f557,f556,f563,f562,f561,f560,f585,f616,f617,f620,f621,f622,f623,f624,f625,f626,f627,f628,f629,f630,f631,f632,f633,f634,f635,f636,f637,f433,f432,f426,f425,f424,f367,f366,f345,f344,f343,f339,f338,f657,f664,f665,f668,f673,f676,f681,f682,f684,f691,f695,f696,f699,f705,f706,f710,f713,f716,f746,f792,f801,f800,f811,f809,f827,f833,f843,f846,f851,f855,f863,f869,f892,f899,f905,f928,f935,f941,f961,f1101,f1100,f1099,f1098,f1097,f1096,f1095,f1092,f1091,f1087,f1084,f1083,f1080,f1079,f1075,f1063,f1062,f1061,f1057,f1056,f1052,f1051,f1050,f1047,f1043,f1041,f1039,f1038,f1035,f1034,f1033,f1032,f1031,f1027,f1026,f1021,f1020,f1017,f1016,f1012,f1005,f1004,f1003,f1002,f1001,f1000,f999,f998,f995,f994,f990,f989,f986,f985,f981,f980,f979,f976,f975,f974,f973,f971,f970,f969,f967,f1117,f1132,f1315,f1314,f1313,f1312,f1311,f1310,f1309,f1306,f1305,f1301,f1298,f1297,f1294,f1293,f1289,f1277,f1276,f1275,f1271,f1270,f1266,f1265,f1264,f1261,f1257,f1255,f1253,f1252,f1249,f1248,f1247,f1246,f1245,f1241,f1240,f1235,f1234,f1231,f1230,f1226,f1219,f1218,f1217,f1216,f1215,f1214,f1213,f1212,f1209,f1208,f1204,f1203,f1200,f1199,f1195,f1194,f1193,f1190,f1189,f1188,f1187,f1185,f1184,f1183,f1182,f1181,f1368,f1410,f1430,f1443,f1459,f1467,f1469,f1470,f1477,f1478,f1483,f1487,f1486,f1503,f1527,f1537,f1580,f1586,f1591,f1598,f1608,f1643,f1642,f1641,f1640,f1644,f1645,f1654,f1655,f1656,f1657,f1658,f1659,f1660,f1661,f1662,f1663,f1664,f1665,f1666,f1667,f1668,f1669,f1670,f1671,f1673,f1674,f1684,f1754,f1817,f1846,f1895,f1900,f1880,f1921,f1928,f2023,f2024,f2026,f2027,f2029,f2030,f2032,f2060,f2107,f2106,f2105,f2104,f2116,f2117,f2118,f2119,f2128,f2129,f2130,f2131,f2132,f2133,f2134,f2135,f2136,f2137,f2138,f2139,f2140,f2141,f2142,f2143,f2144,f2145,f2147,f2148,f2149,f2161,f2247,f2248,f2196,f2199,f2252,f2253,f2237,f2276,f2362,f2363,f2388,f2405,f2403,f2423,f2436,f2446,f2447,f2452,f2451,f2449,f2465,f2479,f2480,f2540,f2483,f2484,f2541,f2542,f2487,f2499,f2500,f2501,f2502,f2503,f2504,f2505,f2506,f2507,f2508,f2509,f2510,f2511,f2512,f2513,f2516,f2537,f2538,f2539,f2545,f2573,f2597,f2598,f2667,f2670,f2608,f2612,f2613,f2620,f2621,f2622,f2623,f2624,f2625,f2626,f2627,f2628,f2629,f2630,f2631,f2632,f2633,f2634,f2637,f2660,f2661,f2662,f2740,f2741,f2742,f2746,f2827,f2830,f2754,f2755,f2756,f2757,f2758,f2759,f2760,f2832,f2762,f2763,f2764,f2768,f2769,f2777,f2778,f2779,f2780,f2781,f2782,f2783,f2784,f2833,f2786,f2787,f2788,f2789,f2790,f2791,f2792,f2795,f2820,f2821,f2822,f2963,f2890,f2966,f2969,f2898,f2899,f2900,f2904,f2905,f2913,f2915,f2916,f2917,f2918,f2919,f2920,f2921,f2922,f2923,f2924,f2925,f2926,f2927,f2928,f2929,f2930,f2933,f2960,f2961,f2962,f3005,f3060,f3061,f4802,f4810,f4900,f4870,f4912,f4921,f4922,f5030,f4924,f4925,f4926,f5045,f5057,f5021,f5363,f5366,f5372,f5401,f5409,f5538,f5475,f5574,f5575,f5590,f5600,f5601,f5677,f5678,f5679,f5681,f5682,f5683,f5684,f5685,f5754,f6113,f6117,f6120,f6123,f6126,f6129,f6132,f6135,f6138,f6141,f6144,f6147,f6150,f6153,f6156,f6159,f6162,f6165,f5789,f5790,f5791,f6167,f6168,f6169,f6170,f6171,f6172,f6173,f6174,f6175,f6176,f6177,f6178,f6179,f6180,f6181,f6182,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6193,f6194,f6195,f6196,f6197,f6198,f6199,f6200,f6201,f5852,f5853,f5854,f5856,f5857,f5858,f5859,f5860,f6209,f6211,f6213,f6215,f6217,f6219,f6221,f6223,f6225,f6227,f6229,f6231,f6233,f6235,f6237,f6239,f6241,f6243,f6115,f6502,f6522,f6526,f6539,f6541,f6543,f6545,f6547,f6549,f6551,f6553,f6555,f6557,f6559,f6561,f6563,f6565,f6567,f6569,f6571,f6573,f6575,f6577,f6584,f6590,f6596,f6614,f6620,f6626,f6639,f6641,f6643,f6645,f6647,f6649,f6651,f6653,f6655,f6657,f6659,f6661,f6663,f6665,f6667,f6669,f6671,f6673,f6675,f6677,f6679,f6694,f6698,f6704,f6710,f6712,f6724,f6734,f6738,f6742,f6750,f6754,f6766,f6774])).
fof(f6771,plain,(
  $false | ($spl0 | $spl10)),
  inference(global_subsumption,[],[f6770,f329,f328,f330,f602,f337,f341,f346,f357,f356,f361,f360,f365,f364,f406,f405,f412,f410,f415,f414,f413,f416,f417,f418,f419,f423,f420,f429,f428,f427,f431,f430,f440,f439,f603,f458,f455,f454,f453,f464,f463,f470,f469,f471,f473,f472,f498,f497,f496,f495,f494,f493,f492,f502,f501,f500,f499,f506,f505,f504,f503,f510,f509,f508,f507,f514,f513,f512,f511,f588,f518,f517,f516,f515,f525,f524,f523,f522,f531,f528,f527,f526,f538,f537,f536,f587,f534,f533,f532,f542,f541,f540,f539,f546,f545,f544,f543,f555,f554,f553,f586,f551,f550,f549,f559,f558,f557,f556,f563,f562,f561,f560,f585,f616,f617,f620,f621,f622,f623,f624,f625,f626,f627,f628,f629,f630,f631,f632,f633,f634,f635,f636,f637,f433,f432,f426,f425,f424,f367,f366,f345,f344,f343,f339,f338,f657,f664,f665,f668,f673,f676,f681,f682,f684,f691,f695,f696,f699,f705,f706,f710,f713,f716,f746,f792,f801,f800,f811,f809,f827,f833,f843,f846,f851,f855,f863,f869,f892,f899,f905,f928,f935,f941,f961,f1101,f1100,f1099,f1098,f1097,f1096,f1095,f1092,f1091,f1087,f1084,f1083,f1080,f1079,f1075,f1063,f1062,f1061,f1057,f1056,f1052,f1051,f1050,f1047,f1043,f1041,f1039,f1038,f1035,f1034,f1033,f1032,f1031,f1027,f1026,f1021,f1020,f1017,f1016,f1012,f1005,f1004,f1003,f1002,f1001,f1000,f999,f998,f995,f994,f990,f989,f986,f985,f981,f980,f979,f976,f975,f974,f973,f971,f970,f969,f967,f1117,f1132,f1315,f1314,f1313,f1312,f1311,f1310,f1309,f1306,f1305,f1301,f1298,f1297,f1294,f1293,f1289,f1277,f1276,f1275,f1271,f1270,f1266,f1265,f1264,f1261,f1257,f1255,f1253,f1252,f1249,f1248,f1247,f1246,f1245,f1241,f1240,f1235,f1234,f1231,f1230,f1226,f1219,f1218,f1217,f1216,f1215,f1214,f1213,f1212,f1209,f1208,f1204,f1203,f1200,f1199,f1195,f1194,f1193,f1190,f1189,f1188,f1187,f1185,f1184,f1183,f1182,f1181,f1368,f1410,f1430,f1443,f1459,f1467,f1469,f1470,f1477,f1478,f1483,f1487,f1486,f1503,f1527,f1537,f1580,f1586,f1591,f1598,f1608,f1643,f1642,f1641,f1640,f1644,f1645,f1654,f1655,f1656,f1657,f1658,f1659,f1660,f1661,f1662,f1663,f1664,f1665,f1666,f1667,f1668,f1669,f1670,f1671,f1673,f1674,f1684,f1754,f1817,f1846,f1895,f1900,f1880,f1921,f1928,f2023,f2024,f2026,f2027,f2029,f2030,f2032,f2060,f2107,f2106,f2105,f2104,f2116,f2117,f2118,f2119,f2128,f2129,f2130,f2131,f2132,f2133,f2134,f2135,f2136,f2137,f2138,f2139,f2140,f2141,f2142,f2143,f2144,f2145,f2147,f2148,f2149,f2161,f2247,f2248,f2196,f2199,f2252,f2253,f2237,f2276,f2362,f2363,f2388,f2405,f2403,f2423,f2436,f2446,f2447,f2452,f2451,f2449,f2465,f2479,f2480,f2540,f2483,f2484,f2541,f2542,f2487,f2499,f2500,f2501,f2502,f2503,f2504,f2505,f2506,f2507,f2508,f2509,f2510,f2511,f2512,f2513,f2516,f2537,f2538,f2539,f2545,f2573,f2597,f2598,f2667,f2670,f2608,f2612,f2613,f2620,f2621,f2622,f2623,f2624,f2625,f2626,f2627,f2628,f2629,f2630,f2631,f2632,f2633,f2634,f2637,f2660,f2661,f2662,f2740,f2741,f2742,f2746,f2827,f2830,f2754,f2755,f2756,f2757,f2758,f2759,f2760,f2832,f2762,f2763,f2764,f2768,f2769,f2777,f2778,f2779,f2780,f2781,f2782,f2783,f2784,f2833,f2786,f2787,f2788,f2789,f2790,f2791,f2792,f2795,f2820,f2821,f2822,f2963,f2890,f2966,f2969,f2898,f2899,f2900,f2904,f2905,f2913,f2915,f2916,f2917,f2918,f2919,f2920,f2921,f2922,f2923,f2924,f2925,f2926,f2927,f2928,f2929,f2930,f2933,f2960,f2961,f2962,f3005,f3060,f3061,f4802,f4810,f4900,f4870,f4912,f4921,f4922,f5030,f4924,f4925,f4926,f5045,f5057,f5021,f5363,f5366,f5372,f5401,f5409,f5538,f5475,f5574,f5575,f5590,f5600,f5601,f5677,f5678,f5679,f5681,f5682,f5683,f5684,f5685,f5754,f6113,f6117,f6120,f6123,f6126,f6129,f6132,f6135,f6138,f6141,f6144,f6147,f6150,f6153,f6156,f6159,f6162,f6165,f5789,f5790,f5791,f6167,f6168,f6169,f6170,f6171,f6172,f6173,f6174,f6175,f6176,f6177,f6178,f6179,f6180,f6181,f6182,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6193,f6194,f6195,f6196,f6197,f6198,f6199,f6200,f6201,f5852,f5853,f5854,f5856,f5857,f5858,f5859,f5860,f6209,f6211,f6213,f6215,f6217,f6219,f6221,f6223,f6225,f6227,f6229,f6231,f6233,f6235,f6237,f6239,f6241,f6243,f6115,f6502,f6522,f6526,f6539,f6541,f6543,f6545,f6547,f6549,f6551,f6553,f6555,f6557,f6559,f6561,f6563,f6565,f6567,f6569,f6571,f6573,f6575,f6577,f6584,f6590,f6596,f6614,f6620,f6626,f6639,f6641,f6643,f6645,f6647,f6649,f6651,f6653,f6655,f6657,f6659,f6661,f6663,f6665,f6667,f6669,f6671,f6673,f6675,f6677,f6679,f6694,f6698,f6704,f6710,f6712,f6724,f6734,f6738,f6742,f6750,f6754,f6766])).
fof(f6770,plain,(
  ( ! [X154,X155] : (s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK12),s('type.integer.int',X154))) = s('type.integer.int',sK19('const.integer.int_neg_1'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK12),s('type.integer.int',X154)))),X155,'type.integer.int'))) ) | ($spl0 | $spl10)),
  inference(subsumption_resolution,[],[f6468,f330])).
fof(f6468,plain,(
  ( ! [X154,X155] : (~p(s(bool,'T_0')) | s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK12),s('type.integer.int',X154))) = s('type.integer.int',sK19('const.integer.int_neg_1'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK12),s('type.integer.int',X154)))),X155,'type.integer.int'))) ) | ($spl0 | $spl10)),
  inference(backward_demodulation,[],[f6115,f3464])).
fof(f3464,plain,(
  ( ! [X154,X155] : (s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK12),s('type.integer.int',X154))) = s('type.integer.int',sK19('const.integer.int_neg_1'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK12),s('type.integer.int',X154)))),X155,'type.integer.int')) | ~p(s(bool,happ(s(fun('type.integer.int',bool),X155),s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK12),s('type.integer.int',X154))))))) ) | $spl0),
  inference(forward_demodulation,[],[f3426,f2246])).
fof(f2246,plain,(
  ( ! [X0] : (s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK12),s('type.integer.int',X0))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK12),s('type.integer.int',X0)))))) ) | $spl0),
  inference(forward_demodulation,[],[f2183,f416])).
fof(f2183,plain,(
  ( ! [X0] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK12),s('type.integer.int',X0))))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK12),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X0)))))) ) | $spl0),
  inference(superposition,[],[f419,f598])).
fof(f3426,plain,(
  ( ! [X154,X155] : (~p(s(bool,happ(s(fun('type.integer.int',bool),X155),s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK12),s('type.integer.int',X154)))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK12),s('type.integer.int',X154))))) = s('type.integer.int',sK19('const.integer.int_neg_1'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK12),s('type.integer.int',X154)))),X155,'type.integer.int'))) ) | $spl0),
  inference(superposition,[],[f414,f2246])).
fof(f6767,plain,(
  $false | $spl10),
  inference(global_subsumption,[],[f329,f328,f330,f602,f337,f341,f346,f357,f356,f361,f360,f365,f364,f406,f405,f412,f410,f415,f414,f413,f416,f417,f418,f419,f423,f420,f429,f428,f427,f431,f430,f440,f439,f603,f458,f455,f454,f453,f464,f463,f470,f469,f471,f473,f472,f498,f497,f496,f495,f494,f493,f492,f502,f501,f500,f499,f506,f505,f504,f503,f510,f509,f508,f507,f514,f513,f512,f511,f588,f518,f517,f516,f515,f525,f524,f523,f522,f531,f528,f527,f526,f538,f537,f536,f587,f534,f533,f532,f542,f541,f540,f539,f546,f545,f544,f543,f555,f554,f553,f586,f551,f550,f549,f559,f558,f557,f556,f563,f562,f561,f560,f585,f616,f617,f620,f621,f622,f623,f624,f625,f626,f627,f628,f629,f630,f631,f632,f633,f634,f635,f636,f637,f433,f432,f426,f425,f424,f367,f366,f345,f344,f343,f339,f338,f657,f664,f665,f668,f673,f676,f681,f682,f684,f691,f695,f696,f699,f705,f706,f710,f713,f716,f746,f792,f801,f800,f811,f809,f827,f833,f843,f846,f851,f855,f863,f869,f892,f899,f905,f928,f935,f941,f961,f1101,f1100,f1099,f1098,f1097,f1096,f1095,f1092,f1091,f1087,f1084,f1083,f1080,f1079,f1075,f1063,f1062,f1061,f1057,f1056,f1052,f1051,f1050,f1047,f1043,f1041,f1039,f1038,f1035,f1034,f1033,f1032,f1031,f1027,f1026,f1021,f1020,f1017,f1016,f1012,f1005,f1004,f1003,f1002,f1001,f1000,f999,f998,f995,f994,f990,f989,f986,f985,f981,f980,f979,f976,f975,f974,f973,f971,f970,f969,f967,f1117,f1132,f1315,f1314,f1313,f1312,f1311,f1310,f1309,f1306,f1305,f1301,f1298,f1297,f1294,f1293,f1289,f1277,f1276,f1275,f1271,f1270,f1266,f1265,f1264,f1261,f1257,f1255,f1253,f1252,f1249,f1248,f1247,f1246,f1245,f1241,f1240,f1235,f1234,f1231,f1230,f1226,f1219,f1218,f1217,f1216,f1215,f1214,f1213,f1212,f1209,f1208,f1204,f1203,f1200,f1199,f1195,f1194,f1193,f1190,f1189,f1188,f1187,f1185,f1184,f1183,f1182,f1181,f1368,f1410,f1430,f1443,f1459,f1467,f1469,f1470,f1477,f1478,f1483,f1487,f1486,f1503,f1527,f1537,f1580,f1586,f1591,f1598,f1608,f1643,f1642,f1641,f1640,f1644,f1645,f1654,f1655,f1656,f1657,f1658,f1659,f1660,f1661,f1662,f1663,f1664,f1665,f1666,f1667,f1668,f1669,f1670,f1671,f1673,f1674,f1684,f1754,f1817,f1846,f1895,f1900,f1880,f1921,f1928,f2023,f2024,f2026,f2027,f2029,f2030,f2032,f2060,f2107,f2106,f2105,f2104,f2116,f2117,f2118,f2119,f2128,f2129,f2130,f2131,f2132,f2133,f2134,f2135,f2136,f2137,f2138,f2139,f2140,f2141,f2142,f2143,f2144,f2145,f2147,f2148,f2149,f2161,f2247,f2248,f2196,f2199,f2252,f2253,f2237,f2276,f2362,f2363,f2388,f2405,f2403,f2423,f2436,f2446,f2447,f2452,f2451,f2449,f2465,f2479,f2480,f2540,f2483,f2484,f2541,f2542,f2487,f2499,f2500,f2501,f2502,f2503,f2504,f2505,f2506,f2507,f2508,f2509,f2510,f2511,f2512,f2513,f2516,f2537,f2538,f2539,f2545,f2573,f2597,f2598,f2667,f2670,f2608,f2612,f2613,f2620,f2621,f2622,f2623,f2624,f2625,f2626,f2627,f2628,f2629,f2630,f2631,f2632,f2633,f2634,f2637,f2660,f2661,f2662,f2740,f2741,f2742,f2746,f2827,f2830,f2754,f2755,f2756,f2757,f2758,f2759,f2760,f2832,f2762,f2763,f2764,f2768,f2769,f2777,f2778,f2779,f2780,f2781,f2782,f2783,f2784,f2833,f2786,f2787,f2788,f2789,f2790,f2791,f2792,f2795,f2820,f2821,f2822,f2963,f2890,f2966,f2969,f2898,f2899,f2900,f2904,f2905,f2913,f2915,f2916,f2917,f2918,f2919,f2920,f2921,f2922,f2923,f2924,f2925,f2926,f2927,f2928,f2929,f2930,f2933,f2960,f2961,f2962,f3005,f3060,f3061,f4802,f4810,f4900,f4870,f4912,f4921,f4922,f5030,f4924,f4925,f4926,f5045,f5057,f5021,f5363,f5366,f5372,f5401,f5409,f5538,f5475,f5574,f5575,f5590,f5600,f5601,f5677,f5678,f5679,f5681,f5682,f5683,f5684,f5685,f5754,f6113,f6117,f6120,f6123,f6126,f6129,f6132,f6135,f6138,f6141,f6144,f6147,f6150,f6153,f6156,f6159,f6162,f6165,f5789,f5790,f5791,f6167,f6168,f6169,f6170,f6171,f6172,f6173,f6174,f6175,f6176,f6177,f6178,f6179,f6180,f6181,f6182,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6193,f6194,f6195,f6196,f6197,f6198,f6199,f6200,f6201,f5852,f5853,f5854,f5856,f5857,f5858,f5859,f5860,f6209,f6211,f6213,f6215,f6217,f6219,f6221,f6223,f6225,f6227,f6229,f6231,f6233,f6235,f6237,f6239,f6241,f6243,f6115,f6502,f6522,f6526,f6539,f6541,f6543,f6545,f6547,f6549,f6551,f6553,f6555,f6557,f6559,f6561,f6563,f6565,f6567,f6569,f6571,f6573,f6575,f6577,f6584,f6590,f6596,f6614,f6620,f6626,f6639,f6641,f6643,f6645,f6647,f6649,f6651,f6653,f6655,f6657,f6659,f6661,f6663,f6665,f6667,f6669,f6671,f6673,f6675,f6677,f6679,f6694,f6698,f6704,f6710,f6712,f6724,f6734,f6738,f6742,f6750,f6754,f6766])).
fof(f6763,plain,(
  $false | ($spl0 | $spl10)),
  inference(global_subsumption,[],[f6762,f329,f328,f330,f602,f337,f341,f346,f357,f356,f361,f360,f365,f364,f406,f405,f412,f410,f415,f414,f413,f416,f417,f418,f419,f423,f420,f429,f428,f427,f431,f430,f440,f439,f603,f458,f455,f454,f453,f464,f463,f470,f469,f471,f473,f472,f498,f497,f496,f495,f494,f493,f492,f502,f501,f500,f499,f506,f505,f504,f503,f510,f509,f508,f507,f514,f513,f512,f511,f588,f518,f517,f516,f515,f525,f524,f523,f522,f531,f528,f527,f526,f538,f537,f536,f587,f534,f533,f532,f542,f541,f540,f539,f546,f545,f544,f543,f555,f554,f553,f586,f551,f550,f549,f559,f558,f557,f556,f563,f562,f561,f560,f585,f616,f617,f620,f621,f622,f623,f624,f625,f626,f627,f628,f629,f630,f631,f632,f633,f634,f635,f636,f637,f433,f432,f426,f425,f424,f367,f366,f345,f344,f343,f339,f338,f657,f664,f665,f668,f673,f676,f681,f682,f684,f691,f695,f696,f699,f705,f706,f710,f713,f716,f746,f792,f801,f800,f811,f809,f827,f833,f843,f846,f851,f855,f863,f869,f892,f899,f905,f928,f935,f941,f961,f1101,f1100,f1099,f1098,f1097,f1096,f1095,f1092,f1091,f1087,f1084,f1083,f1080,f1079,f1075,f1063,f1062,f1061,f1057,f1056,f1052,f1051,f1050,f1047,f1043,f1041,f1039,f1038,f1035,f1034,f1033,f1032,f1031,f1027,f1026,f1021,f1020,f1017,f1016,f1012,f1005,f1004,f1003,f1002,f1001,f1000,f999,f998,f995,f994,f990,f989,f986,f985,f981,f980,f979,f976,f975,f974,f973,f971,f970,f969,f967,f1117,f1132,f1315,f1314,f1313,f1312,f1311,f1310,f1309,f1306,f1305,f1301,f1298,f1297,f1294,f1293,f1289,f1277,f1276,f1275,f1271,f1270,f1266,f1265,f1264,f1261,f1257,f1255,f1253,f1252,f1249,f1248,f1247,f1246,f1245,f1241,f1240,f1235,f1234,f1231,f1230,f1226,f1219,f1218,f1217,f1216,f1215,f1214,f1213,f1212,f1209,f1208,f1204,f1203,f1200,f1199,f1195,f1194,f1193,f1190,f1189,f1188,f1187,f1185,f1184,f1183,f1182,f1181,f1368,f1410,f1430,f1443,f1459,f1467,f1469,f1470,f1477,f1478,f1483,f1487,f1486,f1503,f1527,f1537,f1580,f1586,f1591,f1598,f1608,f1643,f1642,f1641,f1640,f1644,f1645,f1654,f1655,f1656,f1657,f1658,f1659,f1660,f1661,f1662,f1663,f1664,f1665,f1666,f1667,f1668,f1669,f1670,f1671,f1673,f1674,f1684,f1754,f1817,f1846,f1895,f1900,f1880,f1921,f1928,f2023,f2024,f2026,f2027,f2029,f2030,f2032,f2060,f2107,f2106,f2105,f2104,f2116,f2117,f2118,f2119,f2128,f2129,f2130,f2131,f2132,f2133,f2134,f2135,f2136,f2137,f2138,f2139,f2140,f2141,f2142,f2143,f2144,f2145,f2147,f2148,f2149,f2161,f2247,f2248,f2196,f2199,f2252,f2253,f2237,f2276,f2362,f2363,f2388,f2405,f2403,f2423,f2436,f2446,f2447,f2452,f2451,f2449,f2465,f2479,f2480,f2540,f2483,f2484,f2541,f2542,f2487,f2499,f2500,f2501,f2502,f2503,f2504,f2505,f2506,f2507,f2508,f2509,f2510,f2511,f2512,f2513,f2516,f2537,f2538,f2539,f2545,f2573,f2597,f2598,f2667,f2670,f2608,f2612,f2613,f2620,f2621,f2622,f2623,f2624,f2625,f2626,f2627,f2628,f2629,f2630,f2631,f2632,f2633,f2634,f2637,f2660,f2661,f2662,f2740,f2741,f2742,f2746,f2827,f2830,f2754,f2755,f2756,f2757,f2758,f2759,f2760,f2832,f2762,f2763,f2764,f2768,f2769,f2777,f2778,f2779,f2780,f2781,f2782,f2783,f2784,f2833,f2786,f2787,f2788,f2789,f2790,f2791,f2792,f2795,f2820,f2821,f2822,f2963,f2890,f2966,f2969,f2898,f2899,f2900,f2904,f2905,f2913,f2915,f2916,f2917,f2918,f2919,f2920,f2921,f2922,f2923,f2924,f2925,f2926,f2927,f2928,f2929,f2930,f2933,f2960,f2961,f2962,f3005,f3060,f3061,f4802,f4810,f4900,f4870,f4912,f4921,f4922,f5030,f4924,f4925,f4926,f5045,f5057,f5021,f5363,f5366,f5372,f5401,f5409,f5538,f5475,f5574,f5575,f5590,f5600,f5601,f5677,f5678,f5679,f5681,f5682,f5683,f5684,f5685,f5754,f6113,f6117,f6120,f6123,f6126,f6129,f6132,f6135,f6138,f6141,f6144,f6147,f6150,f6153,f6156,f6159,f6162,f6165,f5789,f5790,f5791,f6167,f6168,f6169,f6170,f6171,f6172,f6173,f6174,f6175,f6176,f6177,f6178,f6179,f6180,f6181,f6182,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6193,f6194,f6195,f6196,f6197,f6198,f6199,f6200,f6201,f5852,f5853,f5854,f5856,f5857,f5858,f5859,f5860,f6209,f6211,f6213,f6215,f6217,f6219,f6221,f6223,f6225,f6227,f6229,f6231,f6233,f6235,f6237,f6239,f6241,f6243,f6115,f6502,f6522,f6526,f6539,f6541,f6543,f6545,f6547,f6549,f6551,f6553,f6555,f6557,f6559,f6561,f6563,f6565,f6567,f6569,f6571,f6573,f6575,f6577,f6584,f6590,f6596,f6614,f6620,f6626,f6639,f6641,f6643,f6645,f6647,f6649,f6651,f6653,f6655,f6657,f6659,f6661,f6663,f6665,f6667,f6669,f6671,f6673,f6675,f6677,f6679,f6694,f6698,f6704,f6710,f6712,f6724,f6734,f6738,f6742,f6750,f6754])).
fof(f6762,plain,(
  ( ! [X146,X147] : (s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X146),s('type.integer.int',sK12))) = s('type.integer.int',sK19('const.integer.int_neg_1'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X146),s('type.integer.int',sK12)))),X147,'type.integer.int'))) ) | ($spl0 | $spl10)),
  inference(subsumption_resolution,[],[f6464,f330])).
fof(f6464,plain,(
  ( ! [X146,X147] : (~p(s(bool,'T_0')) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X146),s('type.integer.int',sK12))) = s('type.integer.int',sK19('const.integer.int_neg_1'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X146),s('type.integer.int',sK12)))),X147,'type.integer.int'))) ) | ($spl0 | $spl10)),
  inference(backward_demodulation,[],[f6115,f3226])).
fof(f3226,plain,(
  ( ! [X146,X147] : (s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X146),s('type.integer.int',sK12))) = s('type.integer.int',sK19('const.integer.int_neg_1'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X146),s('type.integer.int',sK12)))),X147,'type.integer.int')) | ~p(s(bool,happ(s(fun('type.integer.int',bool),X147),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X146),s('type.integer.int',sK12))))))) ) | $spl0),
  inference(forward_demodulation,[],[f3191,f1715])).
fof(f1715,plain,(
  ( ! [X0] : (s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int',sK12))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int',sK12)))))) ) | $spl0),
  inference(superposition,[],[f418,f598])).
fof(f3191,plain,(
  ( ! [X146,X147] : (~p(s(bool,happ(s(fun('type.integer.int',bool),X147),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X146),s('type.integer.int',sK12)))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X146),s('type.integer.int',sK12))))) = s('type.integer.int',sK19('const.integer.int_neg_1'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X146),s('type.integer.int',sK12)))),X147,'type.integer.int'))) ) | $spl0),
  inference(superposition,[],[f414,f1715])).
fof(f6759,plain,(
  $false | ($spl3 | $spl10)),
  inference(global_subsumption,[],[f6758,f329,f328,f330,f602,f337,f341,f346,f357,f356,f361,f360,f365,f364,f406,f405,f412,f410,f415,f414,f413,f416,f417,f418,f419,f423,f420,f429,f428,f427,f431,f430,f440,f439,f603,f458,f455,f454,f453,f464,f463,f470,f469,f471,f473,f472,f498,f497,f496,f495,f494,f493,f492,f502,f501,f500,f499,f506,f505,f504,f503,f510,f509,f508,f507,f514,f513,f512,f511,f588,f518,f517,f516,f515,f525,f524,f523,f522,f531,f528,f527,f526,f538,f537,f536,f587,f534,f533,f532,f542,f541,f540,f539,f546,f545,f544,f543,f555,f554,f553,f586,f551,f550,f549,f559,f558,f557,f556,f563,f562,f561,f560,f585,f616,f617,f620,f621,f622,f623,f624,f625,f626,f627,f628,f629,f630,f631,f632,f633,f634,f635,f636,f637,f433,f432,f426,f425,f424,f367,f366,f345,f344,f343,f339,f338,f657,f664,f665,f668,f673,f676,f681,f682,f684,f691,f695,f696,f699,f705,f706,f710,f713,f716,f746,f792,f801,f800,f811,f809,f827,f833,f843,f846,f851,f855,f863,f869,f892,f899,f905,f928,f935,f941,f961,f1101,f1100,f1099,f1098,f1097,f1096,f1095,f1092,f1091,f1087,f1084,f1083,f1080,f1079,f1075,f1063,f1062,f1061,f1057,f1056,f1052,f1051,f1050,f1047,f1043,f1041,f1039,f1038,f1035,f1034,f1033,f1032,f1031,f1027,f1026,f1021,f1020,f1017,f1016,f1012,f1005,f1004,f1003,f1002,f1001,f1000,f999,f998,f995,f994,f990,f989,f986,f985,f981,f980,f979,f976,f975,f974,f973,f971,f970,f969,f967,f1117,f1132,f1315,f1314,f1313,f1312,f1311,f1310,f1309,f1306,f1305,f1301,f1298,f1297,f1294,f1293,f1289,f1277,f1276,f1275,f1271,f1270,f1266,f1265,f1264,f1261,f1257,f1255,f1253,f1252,f1249,f1248,f1247,f1246,f1245,f1241,f1240,f1235,f1234,f1231,f1230,f1226,f1219,f1218,f1217,f1216,f1215,f1214,f1213,f1212,f1209,f1208,f1204,f1203,f1200,f1199,f1195,f1194,f1193,f1190,f1189,f1188,f1187,f1185,f1184,f1183,f1182,f1181,f1368,f1410,f1430,f1443,f1459,f1467,f1469,f1470,f1477,f1478,f1483,f1487,f1486,f1503,f1527,f1537,f1580,f1586,f1591,f1598,f1608,f1643,f1642,f1641,f1640,f1644,f1645,f1654,f1655,f1656,f1657,f1658,f1659,f1660,f1661,f1662,f1663,f1664,f1665,f1666,f1667,f1668,f1669,f1670,f1671,f1673,f1674,f1684,f1754,f1817,f1846,f1895,f1900,f1880,f1921,f1928,f2023,f2024,f2026,f2027,f2029,f2030,f2032,f2060,f2107,f2106,f2105,f2104,f2116,f2117,f2118,f2119,f2128,f2129,f2130,f2131,f2132,f2133,f2134,f2135,f2136,f2137,f2138,f2139,f2140,f2141,f2142,f2143,f2144,f2145,f2147,f2148,f2149,f2161,f2247,f2248,f2196,f2199,f2252,f2253,f2237,f2276,f2362,f2363,f2388,f2405,f2403,f2423,f2436,f2446,f2447,f2452,f2451,f2449,f2465,f2479,f2480,f2540,f2483,f2484,f2541,f2542,f2487,f2499,f2500,f2501,f2502,f2503,f2504,f2505,f2506,f2507,f2508,f2509,f2510,f2511,f2512,f2513,f2516,f2537,f2538,f2539,f2545,f2573,f2597,f2598,f2667,f2670,f2608,f2612,f2613,f2620,f2621,f2622,f2623,f2624,f2625,f2626,f2627,f2628,f2629,f2630,f2631,f2632,f2633,f2634,f2637,f2660,f2661,f2662,f2740,f2741,f2742,f2746,f2827,f2830,f2754,f2755,f2756,f2757,f2758,f2759,f2760,f2832,f2762,f2763,f2764,f2768,f2769,f2777,f2778,f2779,f2780,f2781,f2782,f2783,f2784,f2833,f2786,f2787,f2788,f2789,f2790,f2791,f2792,f2795,f2820,f2821,f2822,f2963,f2890,f2966,f2969,f2898,f2899,f2900,f2904,f2905,f2913,f2915,f2916,f2917,f2918,f2919,f2920,f2921,f2922,f2923,f2924,f2925,f2926,f2927,f2928,f2929,f2930,f2933,f2960,f2961,f2962,f3005,f3060,f3061,f4802,f4810,f4900,f4870,f4912,f4921,f4922,f5030,f4924,f4925,f4926,f5045,f5057,f5021,f5363,f5366,f5372,f5401,f5409,f5538,f5475,f5574,f5575,f5590,f5600,f5601,f5677,f5678,f5679,f5681,f5682,f5683,f5684,f5685,f5754,f6113,f6117,f6120,f6123,f6126,f6129,f6132,f6135,f6138,f6141,f6144,f6147,f6150,f6153,f6156,f6159,f6162,f6165,f5789,f5790,f5791,f6167,f6168,f6169,f6170,f6171,f6172,f6173,f6174,f6175,f6176,f6177,f6178,f6179,f6180,f6181,f6182,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6193,f6194,f6195,f6196,f6197,f6198,f6199,f6200,f6201,f5852,f5853,f5854,f5856,f5857,f5858,f5859,f5860,f6209,f6211,f6213,f6215,f6217,f6219,f6221,f6223,f6225,f6227,f6229,f6231,f6233,f6235,f6237,f6239,f6241,f6243,f6115,f6502,f6522,f6526,f6539,f6541,f6543,f6545,f6547,f6549,f6551,f6553,f6555,f6557,f6559,f6561,f6563,f6565,f6567,f6569,f6571,f6573,f6575,f6577,f6584,f6590,f6596,f6614,f6620,f6626,f6639,f6641,f6643,f6645,f6647,f6649,f6651,f6653,f6655,f6657,f6659,f6661,f6663,f6665,f6667,f6669,f6671,f6673,f6675,f6677,f6679,f6694,f6698,f6704,f6710,f6712,f6724,f6734,f6738,f6742,f6750,f6754])).
fof(f6758,plain,(
  ( ! [X158,X159] : (s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X158),s('type.integer.int',sK12))) = s('type.integer.int',sK19('const.integer.int_sub_2'(s('type.integer.int',X158),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X158),s('type.integer.int',sK12))),s('type.integer.int',sK12)))),X159,'type.integer.int'))) ) | ($spl3 | $spl10)),
  inference(subsumption_resolution,[],[f6462,f330])).
fof(f6462,plain,(
  ( ! [X158,X159] : (~p(s(bool,'T_0')) | s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X158),s('type.integer.int',sK12))) = s('type.integer.int',sK19('const.integer.int_sub_2'(s('type.integer.int',X158),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X158),s('type.integer.int',sK12))),s('type.integer.int',sK12)))),X159,'type.integer.int'))) ) | ($spl3 | $spl10)),
  inference(backward_demodulation,[],[f6115,f4555])).
fof(f4555,plain,(
  ( ! [X158,X159] : (s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X158),s('type.integer.int',sK12))) = s('type.integer.int',sK19('const.integer.int_sub_2'(s('type.integer.int',X158),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X158),s('type.integer.int',sK12))),s('type.integer.int',sK12)))),X159,'type.integer.int')) | ~p(s(bool,happ(s(fun('type.integer.int',bool),X159),s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X158),s('type.integer.int',sK12))))))) ) | $spl3),
  inference(forward_demodulation,[],[f4526,f2874])).
fof(f2874,plain,(
  ( ! [X0] : (s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X0),s('type.integer.int',sK12))) = s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',sK12))),s('type.integer.int',sK12)))))) ) | $spl3),
  inference(unit_resulting_resolution,[],[f601,f426])).
fof(f4526,plain,(
  ( ! [X158,X159] : (~p(s(bool,happ(s(fun('type.integer.int',bool),X159),s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X158),s('type.integer.int',sK12)))))) | s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X158),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X158),s('type.integer.int',sK12))),s('type.integer.int',sK12))))) = s('type.integer.int',sK19('const.integer.int_sub_2'(s('type.integer.int',X158),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X158),s('type.integer.int',sK12))),s('type.integer.int',sK12)))),X159,'type.integer.int'))) ) | $spl3),
  inference(superposition,[],[f414,f2874])).
fof(f6755,plain,(
  $false | $spl10),
  inference(global_subsumption,[],[f329,f328,f330,f602,f337,f341,f346,f357,f356,f361,f360,f365,f364,f406,f405,f412,f410,f415,f414,f413,f416,f417,f418,f419,f423,f420,f429,f428,f427,f431,f430,f440,f439,f603,f458,f455,f454,f453,f464,f463,f470,f469,f471,f473,f472,f498,f497,f496,f495,f494,f493,f492,f502,f501,f500,f499,f506,f505,f504,f503,f510,f509,f508,f507,f514,f513,f512,f511,f588,f518,f517,f516,f515,f525,f524,f523,f522,f531,f528,f527,f526,f538,f537,f536,f587,f534,f533,f532,f542,f541,f540,f539,f546,f545,f544,f543,f555,f554,f553,f586,f551,f550,f549,f559,f558,f557,f556,f563,f562,f561,f560,f585,f616,f617,f620,f621,f622,f623,f624,f625,f626,f627,f628,f629,f630,f631,f632,f633,f634,f635,f636,f637,f433,f432,f426,f425,f424,f367,f366,f345,f344,f343,f339,f338,f657,f664,f665,f668,f673,f676,f681,f682,f684,f691,f695,f696,f699,f705,f706,f710,f713,f716,f746,f792,f801,f800,f811,f809,f827,f833,f843,f846,f851,f855,f863,f869,f892,f899,f905,f928,f935,f941,f961,f1101,f1100,f1099,f1098,f1097,f1096,f1095,f1092,f1091,f1087,f1084,f1083,f1080,f1079,f1075,f1063,f1062,f1061,f1057,f1056,f1052,f1051,f1050,f1047,f1043,f1041,f1039,f1038,f1035,f1034,f1033,f1032,f1031,f1027,f1026,f1021,f1020,f1017,f1016,f1012,f1005,f1004,f1003,f1002,f1001,f1000,f999,f998,f995,f994,f990,f989,f986,f985,f981,f980,f979,f976,f975,f974,f973,f971,f970,f969,f967,f1117,f1132,f1315,f1314,f1313,f1312,f1311,f1310,f1309,f1306,f1305,f1301,f1298,f1297,f1294,f1293,f1289,f1277,f1276,f1275,f1271,f1270,f1266,f1265,f1264,f1261,f1257,f1255,f1253,f1252,f1249,f1248,f1247,f1246,f1245,f1241,f1240,f1235,f1234,f1231,f1230,f1226,f1219,f1218,f1217,f1216,f1215,f1214,f1213,f1212,f1209,f1208,f1204,f1203,f1200,f1199,f1195,f1194,f1193,f1190,f1189,f1188,f1187,f1185,f1184,f1183,f1182,f1181,f1368,f1410,f1430,f1443,f1459,f1467,f1469,f1470,f1477,f1478,f1483,f1487,f1486,f1503,f1527,f1537,f1580,f1586,f1591,f1598,f1608,f1643,f1642,f1641,f1640,f1644,f1645,f1654,f1655,f1656,f1657,f1658,f1659,f1660,f1661,f1662,f1663,f1664,f1665,f1666,f1667,f1668,f1669,f1670,f1671,f1673,f1674,f1684,f1754,f1817,f1846,f1895,f1900,f1880,f1921,f1928,f2023,f2024,f2026,f2027,f2029,f2030,f2032,f2060,f2107,f2106,f2105,f2104,f2116,f2117,f2118,f2119,f2128,f2129,f2130,f2131,f2132,f2133,f2134,f2135,f2136,f2137,f2138,f2139,f2140,f2141,f2142,f2143,f2144,f2145,f2147,f2148,f2149,f2161,f2247,f2248,f2196,f2199,f2252,f2253,f2237,f2276,f2362,f2363,f2388,f2405,f2403,f2423,f2436,f2446,f2447,f2452,f2451,f2449,f2465,f2479,f2480,f2540,f2483,f2484,f2541,f2542,f2487,f2499,f2500,f2501,f2502,f2503,f2504,f2505,f2506,f2507,f2508,f2509,f2510,f2511,f2512,f2513,f2516,f2537,f2538,f2539,f2545,f2573,f2597,f2598,f2667,f2670,f2608,f2612,f2613,f2620,f2621,f2622,f2623,f2624,f2625,f2626,f2627,f2628,f2629,f2630,f2631,f2632,f2633,f2634,f2637,f2660,f2661,f2662,f2740,f2741,f2742,f2746,f2827,f2830,f2754,f2755,f2756,f2757,f2758,f2759,f2760,f2832,f2762,f2763,f2764,f2768,f2769,f2777,f2778,f2779,f2780,f2781,f2782,f2783,f2784,f2833,f2786,f2787,f2788,f2789,f2790,f2791,f2792,f2795,f2820,f2821,f2822,f2963,f2890,f2966,f2969,f2898,f2899,f2900,f2904,f2905,f2913,f2915,f2916,f2917,f2918,f2919,f2920,f2921,f2922,f2923,f2924,f2925,f2926,f2927,f2928,f2929,f2930,f2933,f2960,f2961,f2962,f3005,f3060,f3061,f4802,f4810,f4900,f4870,f4912,f4921,f4922,f5030,f4924,f4925,f4926,f5045,f5057,f5021,f5363,f5366,f5372,f5401,f5409,f5538,f5475,f5574,f5575,f5590,f5600,f5601,f5677,f5678,f5679,f5681,f5682,f5683,f5684,f5685,f5754,f6113,f6117,f6120,f6123,f6126,f6129,f6132,f6135,f6138,f6141,f6144,f6147,f6150,f6153,f6156,f6159,f6162,f6165,f5789,f5790,f5791,f6167,f6168,f6169,f6170,f6171,f6172,f6173,f6174,f6175,f6176,f6177,f6178,f6179,f6180,f6181,f6182,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6193,f6194,f6195,f6196,f6197,f6198,f6199,f6200,f6201,f5852,f5853,f5854,f5856,f5857,f5858,f5859,f5860,f6209,f6211,f6213,f6215,f6217,f6219,f6221,f6223,f6225,f6227,f6229,f6231,f6233,f6235,f6237,f6239,f6241,f6243,f6115,f6502,f6522,f6526,f6539,f6541,f6543,f6545,f6547,f6549,f6551,f6553,f6555,f6557,f6559,f6561,f6563,f6565,f6567,f6569,f6571,f6573,f6575,f6577,f6584,f6590,f6596,f6614,f6620,f6626,f6639,f6641,f6643,f6645,f6647,f6649,f6651,f6653,f6655,f6657,f6659,f6661,f6663,f6665,f6667,f6669,f6671,f6673,f6675,f6677,f6679,f6694,f6698,f6704,f6710,f6712,f6724,f6734,f6738,f6742,f6750,f6754])).
fof(f6751,plain,(
  $false | $spl10),
  inference(global_subsumption,[],[f329,f328,f330,f602,f337,f341,f346,f357,f356,f361,f360,f365,f364,f406,f405,f412,f410,f415,f414,f413,f416,f417,f418,f419,f423,f420,f429,f428,f427,f431,f430,f440,f439,f603,f458,f455,f454,f453,f464,f463,f470,f469,f471,f473,f472,f498,f497,f496,f495,f494,f493,f492,f502,f501,f500,f499,f506,f505,f504,f503,f510,f509,f508,f507,f514,f513,f512,f511,f588,f518,f517,f516,f515,f525,f524,f523,f522,f531,f528,f527,f526,f538,f537,f536,f587,f534,f533,f532,f542,f541,f540,f539,f546,f545,f544,f543,f555,f554,f553,f586,f551,f550,f549,f559,f558,f557,f556,f563,f562,f561,f560,f585,f616,f617,f620,f621,f622,f623,f624,f625,f626,f627,f628,f629,f630,f631,f632,f633,f634,f635,f636,f637,f433,f432,f426,f425,f424,f367,f366,f345,f344,f343,f339,f338,f657,f664,f665,f668,f673,f676,f681,f682,f684,f691,f695,f696,f699,f705,f706,f710,f713,f716,f746,f792,f801,f800,f811,f809,f827,f833,f843,f846,f851,f855,f863,f869,f892,f899,f905,f928,f935,f941,f961,f1101,f1100,f1099,f1098,f1097,f1096,f1095,f1092,f1091,f1087,f1084,f1083,f1080,f1079,f1075,f1063,f1062,f1061,f1057,f1056,f1052,f1051,f1050,f1047,f1043,f1041,f1039,f1038,f1035,f1034,f1033,f1032,f1031,f1027,f1026,f1021,f1020,f1017,f1016,f1012,f1005,f1004,f1003,f1002,f1001,f1000,f999,f998,f995,f994,f990,f989,f986,f985,f981,f980,f979,f976,f975,f974,f973,f971,f970,f969,f967,f1117,f1132,f1315,f1314,f1313,f1312,f1311,f1310,f1309,f1306,f1305,f1301,f1298,f1297,f1294,f1293,f1289,f1277,f1276,f1275,f1271,f1270,f1266,f1265,f1264,f1261,f1257,f1255,f1253,f1252,f1249,f1248,f1247,f1246,f1245,f1241,f1240,f1235,f1234,f1231,f1230,f1226,f1219,f1218,f1217,f1216,f1215,f1214,f1213,f1212,f1209,f1208,f1204,f1203,f1200,f1199,f1195,f1194,f1193,f1190,f1189,f1188,f1187,f1185,f1184,f1183,f1182,f1181,f1368,f1410,f1430,f1443,f1459,f1467,f1469,f1470,f1477,f1478,f1483,f1487,f1486,f1503,f1527,f1537,f1580,f1586,f1591,f1598,f1608,f1643,f1642,f1641,f1640,f1644,f1645,f1654,f1655,f1656,f1657,f1658,f1659,f1660,f1661,f1662,f1663,f1664,f1665,f1666,f1667,f1668,f1669,f1670,f1671,f1673,f1674,f1684,f1754,f1817,f1846,f1895,f1900,f1880,f1921,f1928,f2023,f2024,f2026,f2027,f2029,f2030,f2032,f2060,f2107,f2106,f2105,f2104,f2116,f2117,f2118,f2119,f2128,f2129,f2130,f2131,f2132,f2133,f2134,f2135,f2136,f2137,f2138,f2139,f2140,f2141,f2142,f2143,f2144,f2145,f2147,f2148,f2149,f2161,f2247,f2248,f2196,f2199,f2252,f2253,f2237,f2276,f2362,f2363,f2388,f2405,f2403,f2423,f2436,f2446,f2447,f2452,f2451,f2449,f2465,f2479,f2480,f2540,f2483,f2484,f2541,f2542,f2487,f2499,f2500,f2501,f2502,f2503,f2504,f2505,f2506,f2507,f2508,f2509,f2510,f2511,f2512,f2513,f2516,f2537,f2538,f2539,f2545,f2573,f2597,f2598,f2667,f2670,f2608,f2612,f2613,f2620,f2621,f2622,f2623,f2624,f2625,f2626,f2627,f2628,f2629,f2630,f2631,f2632,f2633,f2634,f2637,f2660,f2661,f2662,f2740,f2741,f2742,f2746,f2827,f2830,f2754,f2755,f2756,f2757,f2758,f2759,f2760,f2832,f2762,f2763,f2764,f2768,f2769,f2777,f2778,f2779,f2780,f2781,f2782,f2783,f2784,f2833,f2786,f2787,f2788,f2789,f2790,f2791,f2792,f2795,f2820,f2821,f2822,f2963,f2890,f2966,f2969,f2898,f2899,f2900,f2904,f2905,f2913,f2915,f2916,f2917,f2918,f2919,f2920,f2921,f2922,f2923,f2924,f2925,f2926,f2927,f2928,f2929,f2930,f2933,f2960,f2961,f2962,f3005,f3060,f3061,f4802,f4810,f4900,f4870,f4912,f4921,f4922,f5030,f4924,f4925,f4926,f5045,f5057,f5021,f5363,f5366,f5372,f5401,f5409,f5538,f5475,f5574,f5575,f5590,f5600,f5601,f5677,f5678,f5679,f5681,f5682,f5683,f5684,f5685,f5754,f6113,f6117,f6120,f6123,f6126,f6129,f6132,f6135,f6138,f6141,f6144,f6147,f6150,f6153,f6156,f6159,f6162,f6165,f5789,f5790,f5791,f6167,f6168,f6169,f6170,f6171,f6172,f6173,f6174,f6175,f6176,f6177,f6178,f6179,f6180,f6181,f6182,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6193,f6194,f6195,f6196,f6197,f6198,f6199,f6200,f6201,f5852,f5853,f5854,f5856,f5857,f5858,f5859,f5860,f6209,f6211,f6213,f6215,f6217,f6219,f6221,f6223,f6225,f6227,f6229,f6231,f6233,f6235,f6237,f6239,f6241,f6243,f6115,f6502,f6522,f6526,f6539,f6541,f6543,f6545,f6547,f6549,f6551,f6553,f6555,f6557,f6559,f6561,f6563,f6565,f6567,f6569,f6571,f6573,f6575,f6577,f6584,f6590,f6596,f6614,f6620,f6626,f6639,f6641,f6643,f6645,f6647,f6649,f6651,f6653,f6655,f6657,f6659,f6661,f6663,f6665,f6667,f6669,f6671,f6673,f6675,f6677,f6679,f6694,f6698,f6704,f6710,f6712,f6724,f6734,f6738,f6742,f6750])).
fof(f6747,plain,(
  $false | ($spl0 | $spl10)),
  inference(global_subsumption,[],[f6746,f329,f328,f330,f602,f337,f341,f346,f357,f356,f361,f360,f365,f364,f406,f405,f412,f410,f415,f414,f413,f416,f417,f418,f419,f423,f420,f429,f428,f427,f431,f430,f440,f439,f603,f458,f455,f454,f453,f464,f463,f470,f469,f471,f473,f472,f498,f497,f496,f495,f494,f493,f492,f502,f501,f500,f499,f506,f505,f504,f503,f510,f509,f508,f507,f514,f513,f512,f511,f588,f518,f517,f516,f515,f525,f524,f523,f522,f531,f528,f527,f526,f538,f537,f536,f587,f534,f533,f532,f542,f541,f540,f539,f546,f545,f544,f543,f555,f554,f553,f586,f551,f550,f549,f559,f558,f557,f556,f563,f562,f561,f560,f585,f616,f617,f620,f621,f622,f623,f624,f625,f626,f627,f628,f629,f630,f631,f632,f633,f634,f635,f636,f637,f433,f432,f426,f425,f424,f367,f366,f345,f344,f343,f339,f338,f657,f664,f665,f668,f673,f676,f681,f682,f684,f691,f695,f696,f699,f705,f706,f710,f713,f716,f746,f792,f801,f800,f811,f809,f827,f833,f843,f846,f851,f855,f863,f869,f892,f899,f905,f928,f935,f941,f961,f1101,f1100,f1099,f1098,f1097,f1096,f1095,f1092,f1091,f1087,f1084,f1083,f1080,f1079,f1075,f1063,f1062,f1061,f1057,f1056,f1052,f1051,f1050,f1047,f1043,f1041,f1039,f1038,f1035,f1034,f1033,f1032,f1031,f1027,f1026,f1021,f1020,f1017,f1016,f1012,f1005,f1004,f1003,f1002,f1001,f1000,f999,f998,f995,f994,f990,f989,f986,f985,f981,f980,f979,f976,f975,f974,f973,f971,f970,f969,f967,f1117,f1132,f1315,f1314,f1313,f1312,f1311,f1310,f1309,f1306,f1305,f1301,f1298,f1297,f1294,f1293,f1289,f1277,f1276,f1275,f1271,f1270,f1266,f1265,f1264,f1261,f1257,f1255,f1253,f1252,f1249,f1248,f1247,f1246,f1245,f1241,f1240,f1235,f1234,f1231,f1230,f1226,f1219,f1218,f1217,f1216,f1215,f1214,f1213,f1212,f1209,f1208,f1204,f1203,f1200,f1199,f1195,f1194,f1193,f1190,f1189,f1188,f1187,f1185,f1184,f1183,f1182,f1181,f1368,f1410,f1430,f1443,f1459,f1467,f1469,f1470,f1477,f1478,f1483,f1487,f1486,f1503,f1527,f1537,f1580,f1586,f1591,f1598,f1608,f1643,f1642,f1641,f1640,f1644,f1645,f1654,f1655,f1656,f1657,f1658,f1659,f1660,f1661,f1662,f1663,f1664,f1665,f1666,f1667,f1668,f1669,f1670,f1671,f1673,f1674,f1684,f1754,f1817,f1846,f1895,f1900,f1880,f1921,f1928,f2023,f2024,f2026,f2027,f2029,f2030,f2032,f2060,f2107,f2106,f2105,f2104,f2116,f2117,f2118,f2119,f2128,f2129,f2130,f2131,f2132,f2133,f2134,f2135,f2136,f2137,f2138,f2139,f2140,f2141,f2142,f2143,f2144,f2145,f2147,f2148,f2149,f2161,f2247,f2248,f2196,f2199,f2252,f2253,f2237,f2276,f2362,f2363,f2388,f2405,f2403,f2423,f2436,f2446,f2447,f2452,f2451,f2449,f2465,f2479,f2480,f2540,f2483,f2484,f2541,f2542,f2487,f2499,f2500,f2501,f2502,f2503,f2504,f2505,f2506,f2507,f2508,f2509,f2510,f2511,f2512,f2513,f2516,f2537,f2538,f2539,f2545,f2573,f2597,f2598,f2667,f2670,f2608,f2612,f2613,f2620,f2621,f2622,f2623,f2624,f2625,f2626,f2627,f2628,f2629,f2630,f2631,f2632,f2633,f2634,f2637,f2660,f2661,f2662,f2740,f2741,f2742,f2746,f2827,f2830,f2754,f2755,f2756,f2757,f2758,f2759,f2760,f2832,f2762,f2763,f2764,f2768,f2769,f2777,f2778,f2779,f2780,f2781,f2782,f2783,f2784,f2833,f2786,f2787,f2788,f2789,f2790,f2791,f2792,f2795,f2820,f2821,f2822,f2963,f2890,f2966,f2969,f2898,f2899,f2900,f2904,f2905,f2913,f2915,f2916,f2917,f2918,f2919,f2920,f2921,f2922,f2923,f2924,f2925,f2926,f2927,f2928,f2929,f2930,f2933,f2960,f2961,f2962,f3005,f3060,f3061,f4802,f4810,f4900,f4870,f4912,f4921,f4922,f5030,f4924,f4925,f4926,f5045,f5057,f5021,f5363,f5366,f5372,f5401,f5409,f5538,f5475,f5574,f5575,f5590,f5600,f5601,f5677,f5678,f5679,f5681,f5682,f5683,f5684,f5685,f5754,f6113,f6117,f6120,f6123,f6126,f6129,f6132,f6135,f6138,f6141,f6144,f6147,f6150,f6153,f6156,f6159,f6162,f6165,f5789,f5790,f5791,f6167,f6168,f6169,f6170,f6171,f6172,f6173,f6174,f6175,f6176,f6177,f6178,f6179,f6180,f6181,f6182,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6193,f6194,f6195,f6196,f6197,f6198,f6199,f6200,f6201,f5852,f5853,f5854,f5856,f5857,f5858,f5859,f5860,f6209,f6211,f6213,f6215,f6217,f6219,f6221,f6223,f6225,f6227,f6229,f6231,f6233,f6235,f6237,f6239,f6241,f6243,f6115,f6502,f6522,f6526,f6539,f6541,f6543,f6545,f6547,f6549,f6551,f6553,f6555,f6557,f6559,f6561,f6563,f6565,f6567,f6569,f6571,f6573,f6575,f6577,f6584,f6590,f6596,f6614,f6620,f6626,f6639,f6641,f6643,f6645,f6647,f6649,f6651,f6653,f6655,f6657,f6659,f6661,f6663,f6665,f6667,f6669,f6671,f6673,f6675,f6677,f6679,f6694,f6698,f6704,f6710,f6712,f6724,f6734,f6738,f6742])).
fof(f6746,plain,(
  ( ! [X30,X31] : (s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X30),s('type.integer.int',sK12))) = s('type.integer.int',sK19('const.integer.int_sub_2'(s('type.integer.int',X30),s('type.integer.int',sK12)),X31,'type.integer.int'))) ) | ($spl0 | $spl10)),
  inference(subsumption_resolution,[],[f6456,f330])).
fof(f6456,plain,(
  ( ! [X30,X31] : (~p(s(bool,'T_0')) | s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X30),s('type.integer.int',sK12))) = s('type.integer.int',sK19('const.integer.int_sub_2'(s('type.integer.int',X30),s('type.integer.int',sK12)),X31,'type.integer.int'))) ) | ($spl0 | $spl10)),
  inference(backward_demodulation,[],[f6115,f1577])).
fof(f1577,plain,(
  ( ! [X30,X31] : (s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X30),s('type.integer.int',sK12))) = s('type.integer.int',sK19('const.integer.int_sub_2'(s('type.integer.int',X30),s('type.integer.int',sK12)),X31,'type.integer.int')) | ~p(s(bool,happ(s(fun('type.integer.int',bool),X31),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X30),s('type.integer.int',sK12))))))) ) | $spl0),
  inference(forward_demodulation,[],[f1564,f1502])).
fof(f1502,plain,(
  ( ! [X0] : (s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int',sK12))) = s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X0),s('type.integer.int',sK12)))) ) | $spl0),
  inference(superposition,[],[f416,f598])).
fof(f1564,plain,(
  ( ! [X30,X31] : (~p(s(bool,happ(s(fun('type.integer.int',bool),X31),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X30),s('type.integer.int',sK12)))))) | s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X30),s('type.integer.int',sK12))) = s('type.integer.int',sK19('const.integer.int_sub_2'(s('type.integer.int',X30),s('type.integer.int',sK12)),X31,'type.integer.int'))) ) | $spl0),
  inference(superposition,[],[f414,f1502])).
fof(f6743,plain,(
  $false | $spl10),
  inference(global_subsumption,[],[f329,f328,f330,f602,f337,f341,f346,f357,f356,f361,f360,f365,f364,f406,f405,f412,f410,f415,f414,f413,f416,f417,f418,f419,f423,f420,f429,f428,f427,f431,f430,f440,f439,f603,f458,f455,f454,f453,f464,f463,f470,f469,f471,f473,f472,f498,f497,f496,f495,f494,f493,f492,f502,f501,f500,f499,f506,f505,f504,f503,f510,f509,f508,f507,f514,f513,f512,f511,f588,f518,f517,f516,f515,f525,f524,f523,f522,f531,f528,f527,f526,f538,f537,f536,f587,f534,f533,f532,f542,f541,f540,f539,f546,f545,f544,f543,f555,f554,f553,f586,f551,f550,f549,f559,f558,f557,f556,f563,f562,f561,f560,f585,f616,f617,f620,f621,f622,f623,f624,f625,f626,f627,f628,f629,f630,f631,f632,f633,f634,f635,f636,f637,f433,f432,f426,f425,f424,f367,f366,f345,f344,f343,f339,f338,f657,f664,f665,f668,f673,f676,f681,f682,f684,f691,f695,f696,f699,f705,f706,f710,f713,f716,f746,f792,f801,f800,f811,f809,f827,f833,f843,f846,f851,f855,f863,f869,f892,f899,f905,f928,f935,f941,f961,f1101,f1100,f1099,f1098,f1097,f1096,f1095,f1092,f1091,f1087,f1084,f1083,f1080,f1079,f1075,f1063,f1062,f1061,f1057,f1056,f1052,f1051,f1050,f1047,f1043,f1041,f1039,f1038,f1035,f1034,f1033,f1032,f1031,f1027,f1026,f1021,f1020,f1017,f1016,f1012,f1005,f1004,f1003,f1002,f1001,f1000,f999,f998,f995,f994,f990,f989,f986,f985,f981,f980,f979,f976,f975,f974,f973,f971,f970,f969,f967,f1117,f1132,f1315,f1314,f1313,f1312,f1311,f1310,f1309,f1306,f1305,f1301,f1298,f1297,f1294,f1293,f1289,f1277,f1276,f1275,f1271,f1270,f1266,f1265,f1264,f1261,f1257,f1255,f1253,f1252,f1249,f1248,f1247,f1246,f1245,f1241,f1240,f1235,f1234,f1231,f1230,f1226,f1219,f1218,f1217,f1216,f1215,f1214,f1213,f1212,f1209,f1208,f1204,f1203,f1200,f1199,f1195,f1194,f1193,f1190,f1189,f1188,f1187,f1185,f1184,f1183,f1182,f1181,f1368,f1410,f1430,f1443,f1459,f1467,f1469,f1470,f1477,f1478,f1483,f1487,f1486,f1503,f1527,f1537,f1580,f1586,f1591,f1598,f1608,f1643,f1642,f1641,f1640,f1644,f1645,f1654,f1655,f1656,f1657,f1658,f1659,f1660,f1661,f1662,f1663,f1664,f1665,f1666,f1667,f1668,f1669,f1670,f1671,f1673,f1674,f1684,f1754,f1817,f1846,f1895,f1900,f1880,f1921,f1928,f2023,f2024,f2026,f2027,f2029,f2030,f2032,f2060,f2107,f2106,f2105,f2104,f2116,f2117,f2118,f2119,f2128,f2129,f2130,f2131,f2132,f2133,f2134,f2135,f2136,f2137,f2138,f2139,f2140,f2141,f2142,f2143,f2144,f2145,f2147,f2148,f2149,f2161,f2247,f2248,f2196,f2199,f2252,f2253,f2237,f2276,f2362,f2363,f2388,f2405,f2403,f2423,f2436,f2446,f2447,f2452,f2451,f2449,f2465,f2479,f2480,f2540,f2483,f2484,f2541,f2542,f2487,f2499,f2500,f2501,f2502,f2503,f2504,f2505,f2506,f2507,f2508,f2509,f2510,f2511,f2512,f2513,f2516,f2537,f2538,f2539,f2545,f2573,f2597,f2598,f2667,f2670,f2608,f2612,f2613,f2620,f2621,f2622,f2623,f2624,f2625,f2626,f2627,f2628,f2629,f2630,f2631,f2632,f2633,f2634,f2637,f2660,f2661,f2662,f2740,f2741,f2742,f2746,f2827,f2830,f2754,f2755,f2756,f2757,f2758,f2759,f2760,f2832,f2762,f2763,f2764,f2768,f2769,f2777,f2778,f2779,f2780,f2781,f2782,f2783,f2784,f2833,f2786,f2787,f2788,f2789,f2790,f2791,f2792,f2795,f2820,f2821,f2822,f2963,f2890,f2966,f2969,f2898,f2899,f2900,f2904,f2905,f2913,f2915,f2916,f2917,f2918,f2919,f2920,f2921,f2922,f2923,f2924,f2925,f2926,f2927,f2928,f2929,f2930,f2933,f2960,f2961,f2962,f3005,f3060,f3061,f4802,f4810,f4900,f4870,f4912,f4921,f4922,f5030,f4924,f4925,f4926,f5045,f5057,f5021,f5363,f5366,f5372,f5401,f5409,f5538,f5475,f5574,f5575,f5590,f5600,f5601,f5677,f5678,f5679,f5681,f5682,f5683,f5684,f5685,f5754,f6113,f6117,f6120,f6123,f6126,f6129,f6132,f6135,f6138,f6141,f6144,f6147,f6150,f6153,f6156,f6159,f6162,f6165,f5789,f5790,f5791,f6167,f6168,f6169,f6170,f6171,f6172,f6173,f6174,f6175,f6176,f6177,f6178,f6179,f6180,f6181,f6182,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6193,f6194,f6195,f6196,f6197,f6198,f6199,f6200,f6201,f5852,f5853,f5854,f5856,f5857,f5858,f5859,f5860,f6209,f6211,f6213,f6215,f6217,f6219,f6221,f6223,f6225,f6227,f6229,f6231,f6233,f6235,f6237,f6239,f6241,f6243,f6115,f6502,f6522,f6526,f6539,f6541,f6543,f6545,f6547,f6549,f6551,f6553,f6555,f6557,f6559,f6561,f6563,f6565,f6567,f6569,f6571,f6573,f6575,f6577,f6584,f6590,f6596,f6614,f6620,f6626,f6639,f6641,f6643,f6645,f6647,f6649,f6651,f6653,f6655,f6657,f6659,f6661,f6663,f6665,f6667,f6669,f6671,f6673,f6675,f6677,f6679,f6694,f6698,f6704,f6710,f6712,f6724,f6734,f6738,f6742])).
fof(f6739,plain,(
  $false | $spl10),
  inference(global_subsumption,[],[f329,f328,f330,f602,f337,f341,f346,f357,f356,f361,f360,f365,f364,f406,f405,f412,f410,f415,f414,f413,f416,f417,f418,f419,f423,f420,f429,f428,f427,f431,f430,f440,f439,f603,f458,f455,f454,f453,f464,f463,f470,f469,f471,f473,f472,f498,f497,f496,f495,f494,f493,f492,f502,f501,f500,f499,f506,f505,f504,f503,f510,f509,f508,f507,f514,f513,f512,f511,f588,f518,f517,f516,f515,f525,f524,f523,f522,f531,f528,f527,f526,f538,f537,f536,f587,f534,f533,f532,f542,f541,f540,f539,f546,f545,f544,f543,f555,f554,f553,f586,f551,f550,f549,f559,f558,f557,f556,f563,f562,f561,f560,f585,f616,f617,f620,f621,f622,f623,f624,f625,f626,f627,f628,f629,f630,f631,f632,f633,f634,f635,f636,f637,f433,f432,f426,f425,f424,f367,f366,f345,f344,f343,f339,f338,f657,f664,f665,f668,f673,f676,f681,f682,f684,f691,f695,f696,f699,f705,f706,f710,f713,f716,f746,f792,f801,f800,f811,f809,f827,f833,f843,f846,f851,f855,f863,f869,f892,f899,f905,f928,f935,f941,f961,f1101,f1100,f1099,f1098,f1097,f1096,f1095,f1092,f1091,f1087,f1084,f1083,f1080,f1079,f1075,f1063,f1062,f1061,f1057,f1056,f1052,f1051,f1050,f1047,f1043,f1041,f1039,f1038,f1035,f1034,f1033,f1032,f1031,f1027,f1026,f1021,f1020,f1017,f1016,f1012,f1005,f1004,f1003,f1002,f1001,f1000,f999,f998,f995,f994,f990,f989,f986,f985,f981,f980,f979,f976,f975,f974,f973,f971,f970,f969,f967,f1117,f1132,f1315,f1314,f1313,f1312,f1311,f1310,f1309,f1306,f1305,f1301,f1298,f1297,f1294,f1293,f1289,f1277,f1276,f1275,f1271,f1270,f1266,f1265,f1264,f1261,f1257,f1255,f1253,f1252,f1249,f1248,f1247,f1246,f1245,f1241,f1240,f1235,f1234,f1231,f1230,f1226,f1219,f1218,f1217,f1216,f1215,f1214,f1213,f1212,f1209,f1208,f1204,f1203,f1200,f1199,f1195,f1194,f1193,f1190,f1189,f1188,f1187,f1185,f1184,f1183,f1182,f1181,f1368,f1410,f1430,f1443,f1459,f1467,f1469,f1470,f1477,f1478,f1483,f1487,f1486,f1503,f1527,f1537,f1580,f1586,f1591,f1598,f1608,f1643,f1642,f1641,f1640,f1644,f1645,f1654,f1655,f1656,f1657,f1658,f1659,f1660,f1661,f1662,f1663,f1664,f1665,f1666,f1667,f1668,f1669,f1670,f1671,f1673,f1674,f1684,f1754,f1817,f1846,f1895,f1900,f1880,f1921,f1928,f2023,f2024,f2026,f2027,f2029,f2030,f2032,f2060,f2107,f2106,f2105,f2104,f2116,f2117,f2118,f2119,f2128,f2129,f2130,f2131,f2132,f2133,f2134,f2135,f2136,f2137,f2138,f2139,f2140,f2141,f2142,f2143,f2144,f2145,f2147,f2148,f2149,f2161,f2247,f2248,f2196,f2199,f2252,f2253,f2237,f2276,f2362,f2363,f2388,f2405,f2403,f2423,f2436,f2446,f2447,f2452,f2451,f2449,f2465,f2479,f2480,f2540,f2483,f2484,f2541,f2542,f2487,f2499,f2500,f2501,f2502,f2503,f2504,f2505,f2506,f2507,f2508,f2509,f2510,f2511,f2512,f2513,f2516,f2537,f2538,f2539,f2545,f2573,f2597,f2598,f2667,f2670,f2608,f2612,f2613,f2620,f2621,f2622,f2623,f2624,f2625,f2626,f2627,f2628,f2629,f2630,f2631,f2632,f2633,f2634,f2637,f2660,f2661,f2662,f2740,f2741,f2742,f2746,f2827,f2830,f2754,f2755,f2756,f2757,f2758,f2759,f2760,f2832,f2762,f2763,f2764,f2768,f2769,f2777,f2778,f2779,f2780,f2781,f2782,f2783,f2784,f2833,f2786,f2787,f2788,f2789,f2790,f2791,f2792,f2795,f2820,f2821,f2822,f2963,f2890,f2966,f2969,f2898,f2899,f2900,f2904,f2905,f2913,f2915,f2916,f2917,f2918,f2919,f2920,f2921,f2922,f2923,f2924,f2925,f2926,f2927,f2928,f2929,f2930,f2933,f2960,f2961,f2962,f3005,f3060,f3061,f4802,f4810,f4900,f4870,f4912,f4921,f4922,f5030,f4924,f4925,f4926,f5045,f5057,f5021,f5363,f5366,f5372,f5401,f5409,f5538,f5475,f5574,f5575,f5590,f5600,f5601,f5677,f5678,f5679,f5681,f5682,f5683,f5684,f5685,f5754,f6113,f6117,f6120,f6123,f6126,f6129,f6132,f6135,f6138,f6141,f6144,f6147,f6150,f6153,f6156,f6159,f6162,f6165,f5789,f5790,f5791,f6167,f6168,f6169,f6170,f6171,f6172,f6173,f6174,f6175,f6176,f6177,f6178,f6179,f6180,f6181,f6182,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6193,f6194,f6195,f6196,f6197,f6198,f6199,f6200,f6201,f5852,f5853,f5854,f5856,f5857,f5858,f5859,f5860,f6209,f6211,f6213,f6215,f6217,f6219,f6221,f6223,f6225,f6227,f6229,f6231,f6233,f6235,f6237,f6239,f6241,f6243,f6115,f6502,f6522,f6526,f6539,f6541,f6543,f6545,f6547,f6549,f6551,f6553,f6555,f6557,f6559,f6561,f6563,f6565,f6567,f6569,f6571,f6573,f6575,f6577,f6584,f6590,f6596,f6614,f6620,f6626,f6639,f6641,f6643,f6645,f6647,f6649,f6651,f6653,f6655,f6657,f6659,f6661,f6663,f6665,f6667,f6669,f6671,f6673,f6675,f6677,f6679,f6694,f6698,f6704,f6710,f6712,f6724,f6734,f6738])).
fof(f6735,plain,(
  $false | $spl10),
  inference(global_subsumption,[],[f329,f328,f330,f602,f337,f341,f346,f357,f356,f361,f360,f365,f364,f406,f405,f412,f410,f415,f414,f413,f416,f417,f418,f419,f423,f420,f429,f428,f427,f431,f430,f440,f439,f603,f458,f455,f454,f453,f464,f463,f470,f469,f471,f473,f472,f498,f497,f496,f495,f494,f493,f492,f502,f501,f500,f499,f506,f505,f504,f503,f510,f509,f508,f507,f514,f513,f512,f511,f588,f518,f517,f516,f515,f525,f524,f523,f522,f531,f528,f527,f526,f538,f537,f536,f587,f534,f533,f532,f542,f541,f540,f539,f546,f545,f544,f543,f555,f554,f553,f586,f551,f550,f549,f559,f558,f557,f556,f563,f562,f561,f560,f585,f616,f617,f620,f621,f622,f623,f624,f625,f626,f627,f628,f629,f630,f631,f632,f633,f634,f635,f636,f637,f433,f432,f426,f425,f424,f367,f366,f345,f344,f343,f339,f338,f657,f664,f665,f668,f673,f676,f681,f682,f684,f691,f695,f696,f699,f705,f706,f710,f713,f716,f746,f792,f801,f800,f811,f809,f827,f833,f843,f846,f851,f855,f863,f869,f892,f899,f905,f928,f935,f941,f961,f1101,f1100,f1099,f1098,f1097,f1096,f1095,f1092,f1091,f1087,f1084,f1083,f1080,f1079,f1075,f1063,f1062,f1061,f1057,f1056,f1052,f1051,f1050,f1047,f1043,f1041,f1039,f1038,f1035,f1034,f1033,f1032,f1031,f1027,f1026,f1021,f1020,f1017,f1016,f1012,f1005,f1004,f1003,f1002,f1001,f1000,f999,f998,f995,f994,f990,f989,f986,f985,f981,f980,f979,f976,f975,f974,f973,f971,f970,f969,f967,f1117,f1132,f1315,f1314,f1313,f1312,f1311,f1310,f1309,f1306,f1305,f1301,f1298,f1297,f1294,f1293,f1289,f1277,f1276,f1275,f1271,f1270,f1266,f1265,f1264,f1261,f1257,f1255,f1253,f1252,f1249,f1248,f1247,f1246,f1245,f1241,f1240,f1235,f1234,f1231,f1230,f1226,f1219,f1218,f1217,f1216,f1215,f1214,f1213,f1212,f1209,f1208,f1204,f1203,f1200,f1199,f1195,f1194,f1193,f1190,f1189,f1188,f1187,f1185,f1184,f1183,f1182,f1181,f1368,f1410,f1430,f1443,f1459,f1467,f1469,f1470,f1477,f1478,f1483,f1487,f1486,f1503,f1527,f1537,f1580,f1586,f1591,f1598,f1608,f1643,f1642,f1641,f1640,f1644,f1645,f1654,f1655,f1656,f1657,f1658,f1659,f1660,f1661,f1662,f1663,f1664,f1665,f1666,f1667,f1668,f1669,f1670,f1671,f1673,f1674,f1684,f1754,f1817,f1846,f1895,f1900,f1880,f1921,f1928,f2023,f2024,f2026,f2027,f2029,f2030,f2032,f2060,f2107,f2106,f2105,f2104,f2116,f2117,f2118,f2119,f2128,f2129,f2130,f2131,f2132,f2133,f2134,f2135,f2136,f2137,f2138,f2139,f2140,f2141,f2142,f2143,f2144,f2145,f2147,f2148,f2149,f2161,f2247,f2248,f2196,f2199,f2252,f2253,f2237,f2276,f2362,f2363,f2388,f2405,f2403,f2423,f2436,f2446,f2447,f2452,f2451,f2449,f2465,f2479,f2480,f2540,f2483,f2484,f2541,f2542,f2487,f2499,f2500,f2501,f2502,f2503,f2504,f2505,f2506,f2507,f2508,f2509,f2510,f2511,f2512,f2513,f2516,f2537,f2538,f2539,f2545,f2573,f2597,f2598,f2667,f2670,f2608,f2612,f2613,f2620,f2621,f2622,f2623,f2624,f2625,f2626,f2627,f2628,f2629,f2630,f2631,f2632,f2633,f2634,f2637,f2660,f2661,f2662,f2740,f2741,f2742,f2746,f2827,f2830,f2754,f2755,f2756,f2757,f2758,f2759,f2760,f2832,f2762,f2763,f2764,f2768,f2769,f2777,f2778,f2779,f2780,f2781,f2782,f2783,f2784,f2833,f2786,f2787,f2788,f2789,f2790,f2791,f2792,f2795,f2820,f2821,f2822,f2963,f2890,f2966,f2969,f2898,f2899,f2900,f2904,f2905,f2913,f2915,f2916,f2917,f2918,f2919,f2920,f2921,f2922,f2923,f2924,f2925,f2926,f2927,f2928,f2929,f2930,f2933,f2960,f2961,f2962,f3005,f3060,f3061,f4802,f4810,f4900,f4870,f4912,f4921,f4922,f5030,f4924,f4925,f4926,f5045,f5057,f5021,f5363,f5366,f5372,f5401,f5409,f5538,f5475,f5574,f5575,f5590,f5600,f5601,f5677,f5678,f5679,f5681,f5682,f5683,f5684,f5685,f5754,f6113,f6117,f6120,f6123,f6126,f6129,f6132,f6135,f6138,f6141,f6144,f6147,f6150,f6153,f6156,f6159,f6162,f6165,f5789,f5790,f5791,f6167,f6168,f6169,f6170,f6171,f6172,f6173,f6174,f6175,f6176,f6177,f6178,f6179,f6180,f6181,f6182,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6193,f6194,f6195,f6196,f6197,f6198,f6199,f6200,f6201,f5852,f5853,f5854,f5856,f5857,f5858,f5859,f5860,f6209,f6211,f6213,f6215,f6217,f6219,f6221,f6223,f6225,f6227,f6229,f6231,f6233,f6235,f6237,f6239,f6241,f6243,f6115,f6502,f6522,f6526,f6539,f6541,f6543,f6545,f6547,f6549,f6551,f6553,f6555,f6557,f6559,f6561,f6563,f6565,f6567,f6569,f6571,f6573,f6575,f6577,f6584,f6590,f6596,f6614,f6620,f6626,f6639,f6641,f6643,f6645,f6647,f6649,f6651,f6653,f6655,f6657,f6659,f6661,f6663,f6665,f6667,f6669,f6671,f6673,f6675,f6677,f6679,f6694,f6698,f6704,f6710,f6712,f6724,f6734])).
fof(f6727,plain,(
  $false | ($spl0 | $spl10)),
  inference(global_subsumption,[],[f6726,f329,f328,f330,f602,f337,f341,f346,f357,f356,f361,f360,f365,f364,f406,f405,f412,f410,f415,f414,f413,f416,f417,f418,f419,f423,f420,f429,f428,f427,f431,f430,f440,f439,f603,f458,f455,f454,f453,f464,f463,f470,f469,f471,f473,f472,f498,f497,f496,f495,f494,f493,f492,f502,f501,f500,f499,f506,f505,f504,f503,f510,f509,f508,f507,f514,f513,f512,f511,f588,f518,f517,f516,f515,f525,f524,f523,f522,f531,f528,f527,f526,f538,f537,f536,f587,f534,f533,f532,f542,f541,f540,f539,f546,f545,f544,f543,f555,f554,f553,f586,f551,f550,f549,f559,f558,f557,f556,f563,f562,f561,f560,f585,f616,f617,f620,f621,f622,f623,f624,f625,f626,f627,f628,f629,f630,f631,f632,f633,f634,f635,f636,f637,f433,f432,f426,f425,f424,f367,f366,f345,f344,f343,f339,f338,f657,f664,f665,f668,f673,f676,f681,f682,f684,f691,f695,f696,f699,f705,f706,f710,f713,f716,f746,f792,f801,f800,f811,f809,f827,f833,f843,f846,f851,f855,f863,f869,f892,f899,f905,f928,f935,f941,f961,f1101,f1100,f1099,f1098,f1097,f1096,f1095,f1092,f1091,f1087,f1084,f1083,f1080,f1079,f1075,f1063,f1062,f1061,f1057,f1056,f1052,f1051,f1050,f1047,f1043,f1041,f1039,f1038,f1035,f1034,f1033,f1032,f1031,f1027,f1026,f1021,f1020,f1017,f1016,f1012,f1005,f1004,f1003,f1002,f1001,f1000,f999,f998,f995,f994,f990,f989,f986,f985,f981,f980,f979,f976,f975,f974,f973,f971,f970,f969,f967,f1117,f1132,f1315,f1314,f1313,f1312,f1311,f1310,f1309,f1306,f1305,f1301,f1298,f1297,f1294,f1293,f1289,f1277,f1276,f1275,f1271,f1270,f1266,f1265,f1264,f1261,f1257,f1255,f1253,f1252,f1249,f1248,f1247,f1246,f1245,f1241,f1240,f1235,f1234,f1231,f1230,f1226,f1219,f1218,f1217,f1216,f1215,f1214,f1213,f1212,f1209,f1208,f1204,f1203,f1200,f1199,f1195,f1194,f1193,f1190,f1189,f1188,f1187,f1185,f1184,f1183,f1182,f1181,f1368,f1410,f1430,f1443,f1459,f1467,f1469,f1470,f1477,f1478,f1483,f1487,f1486,f1503,f1527,f1537,f1580,f1586,f1591,f1598,f1608,f1643,f1642,f1641,f1640,f1644,f1645,f1654,f1655,f1656,f1657,f1658,f1659,f1660,f1661,f1662,f1663,f1664,f1665,f1666,f1667,f1668,f1669,f1670,f1671,f1673,f1674,f1684,f1754,f1817,f1846,f1895,f1900,f1880,f1921,f1928,f2023,f2024,f2026,f2027,f2029,f2030,f2032,f2060,f2107,f2106,f2105,f2104,f2116,f2117,f2118,f2119,f2128,f2129,f2130,f2131,f2132,f2133,f2134,f2135,f2136,f2137,f2138,f2139,f2140,f2141,f2142,f2143,f2144,f2145,f2147,f2148,f2149,f2161,f2247,f2248,f2196,f2199,f2252,f2253,f2237,f2276,f2362,f2363,f2388,f2405,f2403,f2423,f2436,f2446,f2447,f2452,f2451,f2449,f2465,f2479,f2480,f2540,f2483,f2484,f2541,f2542,f2487,f2499,f2500,f2501,f2502,f2503,f2504,f2505,f2506,f2507,f2508,f2509,f2510,f2511,f2512,f2513,f2516,f2537,f2538,f2539,f2545,f2573,f2597,f2598,f2667,f2670,f2608,f2612,f2613,f2620,f2621,f2622,f2623,f2624,f2625,f2626,f2627,f2628,f2629,f2630,f2631,f2632,f2633,f2634,f2637,f2660,f2661,f2662,f2740,f2741,f2742,f2746,f2827,f2830,f2754,f2755,f2756,f2757,f2758,f2759,f2760,f2832,f2762,f2763,f2764,f2768,f2769,f2777,f2778,f2779,f2780,f2781,f2782,f2783,f2784,f2833,f2786,f2787,f2788,f2789,f2790,f2791,f2792,f2795,f2820,f2821,f2822,f2963,f2890,f2966,f2969,f2898,f2899,f2900,f2904,f2905,f2913,f2915,f2916,f2917,f2918,f2919,f2920,f2921,f2922,f2923,f2924,f2925,f2926,f2927,f2928,f2929,f2930,f2933,f2960,f2961,f2962,f3005,f3060,f3061,f4802,f4810,f4900,f4870,f4912,f4921,f4922,f5030,f4924,f4925,f4926,f5045,f5057,f5021,f5363,f5366,f5372,f5401,f5409,f5538,f5475,f5574,f5575,f5590,f5600,f5601,f5677,f5678,f5679,f5681,f5682,f5683,f5684,f5685,f5754,f6113,f6117,f6120,f6123,f6126,f6129,f6132,f6135,f6138,f6141,f6144,f6147,f6150,f6153,f6156,f6159,f6162,f6165,f5789,f5790,f5791,f6167,f6168,f6169,f6170,f6171,f6172,f6173,f6174,f6175,f6176,f6177,f6178,f6179,f6180,f6181,f6182,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6193,f6194,f6195,f6196,f6197,f6198,f6199,f6200,f6201,f5852,f5853,f5854,f5856,f5857,f5858,f5859,f5860,f6209,f6211,f6213,f6215,f6217,f6219,f6221,f6223,f6225,f6227,f6229,f6231,f6233,f6235,f6237,f6239,f6241,f6243,f6115,f6502,f6522,f6526,f6539,f6541,f6543,f6545,f6547,f6549,f6551,f6553,f6555,f6557,f6559,f6561,f6563,f6565,f6567,f6569,f6571,f6573,f6575,f6577,f6584,f6590,f6596,f6614,f6620,f6626,f6639,f6641,f6643,f6645,f6647,f6649,f6651,f6653,f6655,f6657,f6659,f6661,f6663,f6665,f6667,f6669,f6671,f6673,f6675,f6677,f6679,f6694,f6698,f6704,f6710,f6712,f6724])).
fof(f6726,plain,(
  ( ! [X9] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int',sK19('const.integer.int_add_2'(s('type.integer.int',sK12),s('type.integer.int',sK12)),X9,'type.integer.int'))) ) | ($spl0 | $spl10)),
  inference(subsumption_resolution,[],[f6446,f330])).
fof(f6446,plain,(
  ( ! [X9] : (~p(s(bool,'T_0')) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int',sK19('const.integer.int_add_2'(s('type.integer.int',sK12),s('type.integer.int',sK12)),X9,'type.integer.int'))) ) | ($spl0 | $spl10)),
  inference(backward_demodulation,[],[f6115,f1479])).
fof(f1479,plain,(
  ( ! [X9] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int',sK19('const.integer.int_add_2'(s('type.integer.int',sK12),s('type.integer.int',sK12)),X9,'type.integer.int')) | ~p(s(bool,happ(s(fun('type.integer.int',bool),X9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) ) | $spl0),
  inference(forward_demodulation,[],[f1474,f1131])).
fof(f1131,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK12),s('type.integer.int',sK12))) | $spl0),
  inference(superposition,[],[f338,f598])).
fof(f1474,plain,(
  ( ! [X9] : (~p(s(bool,happ(s(fun('type.integer.int',bool),X9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK12),s('type.integer.int',sK12))) = s('type.integer.int',sK19('const.integer.int_add_2'(s('type.integer.int',sK12),s('type.integer.int',sK12)),X9,'type.integer.int'))) ) | $spl0),
  inference(superposition,[],[f414,f1131])).
fof(f6725,plain,(
  $false | $spl10),
  inference(global_subsumption,[],[f329,f328,f330,f602,f337,f341,f346,f357,f356,f361,f360,f365,f364,f406,f405,f412,f410,f415,f414,f413,f416,f417,f418,f419,f423,f420,f429,f428,f427,f431,f430,f440,f439,f603,f458,f455,f454,f453,f464,f463,f470,f469,f471,f473,f472,f498,f497,f496,f495,f494,f493,f492,f502,f501,f500,f499,f506,f505,f504,f503,f510,f509,f508,f507,f514,f513,f512,f511,f588,f518,f517,f516,f515,f525,f524,f523,f522,f531,f528,f527,f526,f538,f537,f536,f587,f534,f533,f532,f542,f541,f540,f539,f546,f545,f544,f543,f555,f554,f553,f586,f551,f550,f549,f559,f558,f557,f556,f563,f562,f561,f560,f585,f616,f617,f620,f621,f622,f623,f624,f625,f626,f627,f628,f629,f630,f631,f632,f633,f634,f635,f636,f637,f433,f432,f426,f425,f424,f367,f366,f345,f344,f343,f339,f338,f657,f664,f665,f668,f673,f676,f681,f682,f684,f691,f695,f696,f699,f705,f706,f710,f713,f716,f746,f792,f801,f800,f811,f809,f827,f833,f843,f846,f851,f855,f863,f869,f892,f899,f905,f928,f935,f941,f961,f1101,f1100,f1099,f1098,f1097,f1096,f1095,f1092,f1091,f1087,f1084,f1083,f1080,f1079,f1075,f1063,f1062,f1061,f1057,f1056,f1052,f1051,f1050,f1047,f1043,f1041,f1039,f1038,f1035,f1034,f1033,f1032,f1031,f1027,f1026,f1021,f1020,f1017,f1016,f1012,f1005,f1004,f1003,f1002,f1001,f1000,f999,f998,f995,f994,f990,f989,f986,f985,f981,f980,f979,f976,f975,f974,f973,f971,f970,f969,f967,f1117,f1132,f1315,f1314,f1313,f1312,f1311,f1310,f1309,f1306,f1305,f1301,f1298,f1297,f1294,f1293,f1289,f1277,f1276,f1275,f1271,f1270,f1266,f1265,f1264,f1261,f1257,f1255,f1253,f1252,f1249,f1248,f1247,f1246,f1245,f1241,f1240,f1235,f1234,f1231,f1230,f1226,f1219,f1218,f1217,f1216,f1215,f1214,f1213,f1212,f1209,f1208,f1204,f1203,f1200,f1199,f1195,f1194,f1193,f1190,f1189,f1188,f1187,f1185,f1184,f1183,f1182,f1181,f1368,f1410,f1430,f1443,f1459,f1467,f1469,f1470,f1477,f1478,f1483,f1487,f1486,f1503,f1527,f1537,f1580,f1586,f1591,f1598,f1608,f1643,f1642,f1641,f1640,f1644,f1645,f1654,f1655,f1656,f1657,f1658,f1659,f1660,f1661,f1662,f1663,f1664,f1665,f1666,f1667,f1668,f1669,f1670,f1671,f1673,f1674,f1684,f1754,f1817,f1846,f1895,f1900,f1880,f1921,f1928,f2023,f2024,f2026,f2027,f2029,f2030,f2032,f2060,f2107,f2106,f2105,f2104,f2116,f2117,f2118,f2119,f2128,f2129,f2130,f2131,f2132,f2133,f2134,f2135,f2136,f2137,f2138,f2139,f2140,f2141,f2142,f2143,f2144,f2145,f2147,f2148,f2149,f2161,f2247,f2248,f2196,f2199,f2252,f2253,f2237,f2276,f2362,f2363,f2388,f2405,f2403,f2423,f2436,f2446,f2447,f2452,f2451,f2449,f2465,f2479,f2480,f2540,f2483,f2484,f2541,f2542,f2487,f2499,f2500,f2501,f2502,f2503,f2504,f2505,f2506,f2507,f2508,f2509,f2510,f2511,f2512,f2513,f2516,f2537,f2538,f2539,f2545,f2573,f2597,f2598,f2667,f2670,f2608,f2612,f2613,f2620,f2621,f2622,f2623,f2624,f2625,f2626,f2627,f2628,f2629,f2630,f2631,f2632,f2633,f2634,f2637,f2660,f2661,f2662,f2740,f2741,f2742,f2746,f2827,f2830,f2754,f2755,f2756,f2757,f2758,f2759,f2760,f2832,f2762,f2763,f2764,f2768,f2769,f2777,f2778,f2779,f2780,f2781,f2782,f2783,f2784,f2833,f2786,f2787,f2788,f2789,f2790,f2791,f2792,f2795,f2820,f2821,f2822,f2963,f2890,f2966,f2969,f2898,f2899,f2900,f2904,f2905,f2913,f2915,f2916,f2917,f2918,f2919,f2920,f2921,f2922,f2923,f2924,f2925,f2926,f2927,f2928,f2929,f2930,f2933,f2960,f2961,f2962,f3005,f3060,f3061,f4802,f4810,f4900,f4870,f4912,f4921,f4922,f5030,f4924,f4925,f4926,f5045,f5057,f5021,f5363,f5366,f5372,f5401,f5409,f5538,f5475,f5574,f5575,f5590,f5600,f5601,f5677,f5678,f5679,f5681,f5682,f5683,f5684,f5685,f5754,f6113,f6117,f6120,f6123,f6126,f6129,f6132,f6135,f6138,f6141,f6144,f6147,f6150,f6153,f6156,f6159,f6162,f6165,f5789,f5790,f5791,f6167,f6168,f6169,f6170,f6171,f6172,f6173,f6174,f6175,f6176,f6177,f6178,f6179,f6180,f6181,f6182,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6193,f6194,f6195,f6196,f6197,f6198,f6199,f6200,f6201,f5852,f5853,f5854,f5856,f5857,f5858,f5859,f5860,f6209,f6211,f6213,f6215,f6217,f6219,f6221,f6223,f6225,f6227,f6229,f6231,f6233,f6235,f6237,f6239,f6241,f6243,f6115,f6502,f6522,f6526,f6539,f6541,f6543,f6545,f6547,f6549,f6551,f6553,f6555,f6557,f6559,f6561,f6563,f6565,f6567,f6569,f6571,f6573,f6575,f6577,f6584,f6590,f6596,f6614,f6620,f6626,f6639,f6641,f6643,f6645,f6647,f6649,f6651,f6653,f6655,f6657,f6659,f6661,f6663,f6665,f6667,f6669,f6671,f6673,f6675,f6677,f6679,f6694,f6698,f6704,f6710,f6712,f6724])).
fof(f6723,plain,(
  $false | ($spl0 | $spl10)),
  inference(global_subsumption,[],[f6722,f329,f328,f330,f602,f337,f341,f346,f357,f356,f361,f360,f365,f364,f406,f405,f412,f410,f415,f414,f413,f416,f417,f418,f419,f423,f420,f429,f428,f427,f431,f430,f440,f439,f603,f458,f455,f454,f453,f464,f463,f470,f469,f471,f473,f472,f498,f497,f496,f495,f494,f493,f492,f502,f501,f500,f499,f506,f505,f504,f503,f510,f509,f508,f507,f514,f513,f512,f511,f588,f518,f517,f516,f515,f525,f524,f523,f522,f531,f528,f527,f526,f538,f537,f536,f587,f534,f533,f532,f542,f541,f540,f539,f546,f545,f544,f543,f555,f554,f553,f586,f551,f550,f549,f559,f558,f557,f556,f563,f562,f561,f560,f585,f616,f617,f620,f621,f622,f623,f624,f625,f626,f627,f628,f629,f630,f631,f632,f633,f634,f635,f636,f637,f433,f432,f426,f425,f424,f367,f366,f345,f344,f343,f339,f338,f657,f664,f665,f668,f673,f676,f681,f682,f684,f691,f695,f696,f699,f705,f706,f710,f713,f716,f746,f792,f801,f800,f811,f809,f827,f833,f843,f846,f851,f855,f863,f869,f892,f899,f905,f928,f935,f941,f961,f1101,f1100,f1099,f1098,f1097,f1096,f1095,f1092,f1091,f1087,f1084,f1083,f1080,f1079,f1075,f1063,f1062,f1061,f1057,f1056,f1052,f1051,f1050,f1047,f1043,f1041,f1039,f1038,f1035,f1034,f1033,f1032,f1031,f1027,f1026,f1021,f1020,f1017,f1016,f1012,f1005,f1004,f1003,f1002,f1001,f1000,f999,f998,f995,f994,f990,f989,f986,f985,f981,f980,f979,f976,f975,f974,f973,f971,f970,f969,f967,f1117,f1132,f1315,f1314,f1313,f1312,f1311,f1310,f1309,f1306,f1305,f1301,f1298,f1297,f1294,f1293,f1289,f1277,f1276,f1275,f1271,f1270,f1266,f1265,f1264,f1261,f1257,f1255,f1253,f1252,f1249,f1248,f1247,f1246,f1245,f1241,f1240,f1235,f1234,f1231,f1230,f1226,f1219,f1218,f1217,f1216,f1215,f1214,f1213,f1212,f1209,f1208,f1204,f1203,f1200,f1199,f1195,f1194,f1193,f1190,f1189,f1188,f1187,f1185,f1184,f1183,f1182,f1181,f1368,f1410,f1430,f1443,f1459,f1467,f1469,f1470,f1477,f1478,f1483,f1487,f1486,f1503,f1527,f1537,f1580,f1586,f1591,f1598,f1608,f1643,f1642,f1641,f1640,f1644,f1645,f1654,f1655,f1656,f1657,f1658,f1659,f1660,f1661,f1662,f1663,f1664,f1665,f1666,f1667,f1668,f1669,f1670,f1671,f1673,f1674,f1684,f1754,f1817,f1846,f1895,f1900,f1880,f1921,f1928,f2023,f2024,f2026,f2027,f2029,f2030,f2032,f2060,f2107,f2106,f2105,f2104,f2116,f2117,f2118,f2119,f2128,f2129,f2130,f2131,f2132,f2133,f2134,f2135,f2136,f2137,f2138,f2139,f2140,f2141,f2142,f2143,f2144,f2145,f2147,f2148,f2149,f2161,f2247,f2248,f2196,f2199,f2252,f2253,f2237,f2276,f2362,f2363,f2388,f2405,f2403,f2423,f2436,f2446,f2447,f2452,f2451,f2449,f2465,f2479,f2480,f2540,f2483,f2484,f2541,f2542,f2487,f2499,f2500,f2501,f2502,f2503,f2504,f2505,f2506,f2507,f2508,f2509,f2510,f2511,f2512,f2513,f2516,f2537,f2538,f2539,f2545,f2573,f2597,f2598,f2667,f2670,f2608,f2612,f2613,f2620,f2621,f2622,f2623,f2624,f2625,f2626,f2627,f2628,f2629,f2630,f2631,f2632,f2633,f2634,f2637,f2660,f2661,f2662,f2740,f2741,f2742,f2746,f2827,f2830,f2754,f2755,f2756,f2757,f2758,f2759,f2760,f2832,f2762,f2763,f2764,f2768,f2769,f2777,f2778,f2779,f2780,f2781,f2782,f2783,f2784,f2833,f2786,f2787,f2788,f2789,f2790,f2791,f2792,f2795,f2820,f2821,f2822,f2963,f2890,f2966,f2969,f2898,f2899,f2900,f2904,f2905,f2913,f2915,f2916,f2917,f2918,f2919,f2920,f2921,f2922,f2923,f2924,f2925,f2926,f2927,f2928,f2929,f2930,f2933,f2960,f2961,f2962,f3005,f3060,f3061,f4802,f4810,f4900,f4870,f4912,f4921,f4922,f5030,f4924,f4925,f4926,f5045,f5057,f5021,f5363,f5366,f5372,f5401,f5409,f5538,f5475,f5574,f5575,f5590,f5600,f5601,f5677,f5678,f5679,f5681,f5682,f5683,f5684,f5685,f5754,f6113,f6117,f6120,f6123,f6126,f6129,f6132,f6135,f6138,f6141,f6144,f6147,f6150,f6153,f6156,f6159,f6162,f6165,f5789,f5790,f5791,f6167,f6168,f6169,f6170,f6171,f6172,f6173,f6174,f6175,f6176,f6177,f6178,f6179,f6180,f6181,f6182,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6193,f6194,f6195,f6196,f6197,f6198,f6199,f6200,f6201,f5852,f5853,f5854,f5856,f5857,f5858,f5859,f5860,f6209,f6211,f6213,f6215,f6217,f6219,f6221,f6223,f6225,f6227,f6229,f6231,f6233,f6235,f6237,f6239,f6241,f6243,f6115,f6502,f6522,f6526,f6539,f6541,f6543,f6545,f6547,f6549,f6551,f6553,f6555,f6557,f6559,f6561,f6563,f6565,f6567,f6569,f6571,f6573,f6575,f6577,f6584,f6590,f6596,f6614,f6620,f6626,f6639,f6641,f6643,f6645,f6647,f6649,f6651,f6653,f6655,f6657,f6659,f6661,f6663,f6665,f6667,f6669,f6671,f6673,f6675,f6677,f6679,f6694,f6698,f6704,f6710,f6712])).
fof(f6722,plain,(
  ( ! [X161,X160] : (s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',sK12),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X160))))) = s('type.integer.int',sK19('const.integer.int_mod_2'(s('type.integer.int',sK12),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X160)))),X161,'type.integer.int')) | s('type.integer.int',X160) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | ($spl0 | $spl10)),
  inference(subsumption_resolution,[],[f6444,f330])).
fof(f6444,plain,(
  ( ! [X161,X160] : (~p(s(bool,'T_0')) | s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',sK12),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X160))))) = s('type.integer.int',sK19('const.integer.int_mod_2'(s('type.integer.int',sK12),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X160)))),X161,'type.integer.int')) | s('type.integer.int',X160) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | ($spl0 | $spl10)),
  inference(backward_demodulation,[],[f6115,f5187])).
fof(f5187,plain,(
  ( ! [X161,X160] : (~p(s(bool,happ(s(fun('type.integer.int',bool),X161),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',sK12),s('type.integer.int',X160)))))))) | s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',sK12),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X160))))) = s('type.integer.int',sK19('const.integer.int_mod_2'(s('type.integer.int',sK12),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X160)))),X161,'type.integer.int')) | s('type.integer.int',X160) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl0),
  inference(superposition,[],[f414,f2743])).
fof(f6719,plain,(
  $false | ($spl0 | $spl10)),
  inference(global_subsumption,[],[f6718,f329,f328,f330,f602,f337,f341,f346,f357,f356,f361,f360,f365,f364,f406,f405,f412,f410,f415,f414,f413,f416,f417,f418,f419,f423,f420,f429,f428,f427,f431,f430,f440,f439,f603,f458,f455,f454,f453,f464,f463,f470,f469,f471,f473,f472,f498,f497,f496,f495,f494,f493,f492,f502,f501,f500,f499,f506,f505,f504,f503,f510,f509,f508,f507,f514,f513,f512,f511,f588,f518,f517,f516,f515,f525,f524,f523,f522,f531,f528,f527,f526,f538,f537,f536,f587,f534,f533,f532,f542,f541,f540,f539,f546,f545,f544,f543,f555,f554,f553,f586,f551,f550,f549,f559,f558,f557,f556,f563,f562,f561,f560,f585,f616,f617,f620,f621,f622,f623,f624,f625,f626,f627,f628,f629,f630,f631,f632,f633,f634,f635,f636,f637,f433,f432,f426,f425,f424,f367,f366,f345,f344,f343,f339,f338,f657,f664,f665,f668,f673,f676,f681,f682,f684,f691,f695,f696,f699,f705,f706,f710,f713,f716,f746,f792,f801,f800,f811,f809,f827,f833,f843,f846,f851,f855,f863,f869,f892,f899,f905,f928,f935,f941,f961,f1101,f1100,f1099,f1098,f1097,f1096,f1095,f1092,f1091,f1087,f1084,f1083,f1080,f1079,f1075,f1063,f1062,f1061,f1057,f1056,f1052,f1051,f1050,f1047,f1043,f1041,f1039,f1038,f1035,f1034,f1033,f1032,f1031,f1027,f1026,f1021,f1020,f1017,f1016,f1012,f1005,f1004,f1003,f1002,f1001,f1000,f999,f998,f995,f994,f990,f989,f986,f985,f981,f980,f979,f976,f975,f974,f973,f971,f970,f969,f967,f1117,f1132,f1315,f1314,f1313,f1312,f1311,f1310,f1309,f1306,f1305,f1301,f1298,f1297,f1294,f1293,f1289,f1277,f1276,f1275,f1271,f1270,f1266,f1265,f1264,f1261,f1257,f1255,f1253,f1252,f1249,f1248,f1247,f1246,f1245,f1241,f1240,f1235,f1234,f1231,f1230,f1226,f1219,f1218,f1217,f1216,f1215,f1214,f1213,f1212,f1209,f1208,f1204,f1203,f1200,f1199,f1195,f1194,f1193,f1190,f1189,f1188,f1187,f1185,f1184,f1183,f1182,f1181,f1368,f1410,f1430,f1443,f1459,f1467,f1469,f1470,f1477,f1478,f1483,f1487,f1486,f1503,f1527,f1537,f1580,f1586,f1591,f1598,f1608,f1643,f1642,f1641,f1640,f1644,f1645,f1654,f1655,f1656,f1657,f1658,f1659,f1660,f1661,f1662,f1663,f1664,f1665,f1666,f1667,f1668,f1669,f1670,f1671,f1673,f1674,f1684,f1754,f1817,f1846,f1895,f1900,f1880,f1921,f1928,f2023,f2024,f2026,f2027,f2029,f2030,f2032,f2060,f2107,f2106,f2105,f2104,f2116,f2117,f2118,f2119,f2128,f2129,f2130,f2131,f2132,f2133,f2134,f2135,f2136,f2137,f2138,f2139,f2140,f2141,f2142,f2143,f2144,f2145,f2147,f2148,f2149,f2161,f2247,f2248,f2196,f2199,f2252,f2253,f2237,f2276,f2362,f2363,f2388,f2405,f2403,f2423,f2436,f2446,f2447,f2452,f2451,f2449,f2465,f2479,f2480,f2540,f2483,f2484,f2541,f2542,f2487,f2499,f2500,f2501,f2502,f2503,f2504,f2505,f2506,f2507,f2508,f2509,f2510,f2511,f2512,f2513,f2516,f2537,f2538,f2539,f2545,f2573,f2597,f2598,f2667,f2670,f2608,f2612,f2613,f2620,f2621,f2622,f2623,f2624,f2625,f2626,f2627,f2628,f2629,f2630,f2631,f2632,f2633,f2634,f2637,f2660,f2661,f2662,f2740,f2741,f2742,f2746,f2827,f2830,f2754,f2755,f2756,f2757,f2758,f2759,f2760,f2832,f2762,f2763,f2764,f2768,f2769,f2777,f2778,f2779,f2780,f2781,f2782,f2783,f2784,f2833,f2786,f2787,f2788,f2789,f2790,f2791,f2792,f2795,f2820,f2821,f2822,f2963,f2890,f2966,f2969,f2898,f2899,f2900,f2904,f2905,f2913,f2915,f2916,f2917,f2918,f2919,f2920,f2921,f2922,f2923,f2924,f2925,f2926,f2927,f2928,f2929,f2930,f2933,f2960,f2961,f2962,f3005,f3060,f3061,f4802,f4810,f4900,f4870,f4912,f4921,f4922,f5030,f4924,f4925,f4926,f5045,f5057,f5021,f5363,f5366,f5372,f5401,f5409,f5538,f5475,f5574,f5575,f5590,f5600,f5601,f5677,f5678,f5679,f5681,f5682,f5683,f5684,f5685,f5754,f6113,f6117,f6120,f6123,f6126,f6129,f6132,f6135,f6138,f6141,f6144,f6147,f6150,f6153,f6156,f6159,f6162,f6165,f5789,f5790,f5791,f6167,f6168,f6169,f6170,f6171,f6172,f6173,f6174,f6175,f6176,f6177,f6178,f6179,f6180,f6181,f6182,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6193,f6194,f6195,f6196,f6197,f6198,f6199,f6200,f6201,f5852,f5853,f5854,f5856,f5857,f5858,f5859,f5860,f6209,f6211,f6213,f6215,f6217,f6219,f6221,f6223,f6225,f6227,f6229,f6231,f6233,f6235,f6237,f6239,f6241,f6243,f6115,f6502,f6522,f6526,f6539,f6541,f6543,f6545,f6547,f6549,f6551,f6553,f6555,f6557,f6559,f6561,f6563,f6565,f6567,f6569,f6571,f6573,f6575,f6577,f6584,f6590,f6596,f6614,f6620,f6626,f6639,f6641,f6643,f6645,f6647,f6649,f6651,f6653,f6655,f6657,f6659,f6661,f6663,f6665,f6667,f6669,f6671,f6673,f6675,f6677,f6679,f6694,f6698,f6704,f6710,f6712])).
fof(f6718,plain,(
  ( ! [X163,X162] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X162),s('type.integer.int',sK12))))) = s('type.integer.int',sK19('const.integer.int_add_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X162))),s('type.integer.int',sK12)),X163,'type.integer.int'))) ) | ($spl0 | $spl10)),
  inference(subsumption_resolution,[],[f6442,f330])).
fof(f6442,plain,(
  ( ! [X163,X162] : (~p(s(bool,'T_0')) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X162),s('type.integer.int',sK12))))) = s('type.integer.int',sK19('const.integer.int_add_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X162))),s('type.integer.int',sK12)),X163,'type.integer.int'))) ) | ($spl0 | $spl10)),
  inference(backward_demodulation,[],[f6115,f4166])).
fof(f4166,plain,(
  ( ! [X163,X162] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X162),s('type.integer.int',sK12))))) = s('type.integer.int',sK19('const.integer.int_add_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X162))),s('type.integer.int',sK12)),X163,'type.integer.int')) | ~p(s(bool,happ(s(fun('type.integer.int',bool),X163),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X162),s('type.integer.int',sK12))))))))) ) | $spl0),
  inference(forward_demodulation,[],[f4121,f2193])).
fof(f2193,plain,(
  ( ! [X0] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int',sK12))))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X0))),s('type.integer.int',sK12)))) ) | $spl0),
  inference(superposition,[],[f419,f598])).
fof(f4121,plain,(
  ( ! [X163,X162] : (~p(s(bool,happ(s(fun('type.integer.int',bool),X163),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X162),s('type.integer.int',sK12)))))))) | s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X162))),s('type.integer.int',sK12))) = s('type.integer.int',sK19('const.integer.int_add_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X162))),s('type.integer.int',sK12)),X163,'type.integer.int'))) ) | $spl0),
  inference(superposition,[],[f414,f2193])).
fof(f6713,plain,(
  $false | $spl10),
  inference(global_subsumption,[],[f329,f328,f330,f602,f337,f341,f346,f357,f356,f361,f360,f365,f364,f406,f405,f412,f410,f415,f414,f413,f416,f417,f418,f419,f423,f420,f429,f428,f427,f431,f430,f440,f439,f603,f458,f455,f454,f453,f464,f463,f470,f469,f471,f473,f472,f498,f497,f496,f495,f494,f493,f492,f502,f501,f500,f499,f506,f505,f504,f503,f510,f509,f508,f507,f514,f513,f512,f511,f588,f518,f517,f516,f515,f525,f524,f523,f522,f531,f528,f527,f526,f538,f537,f536,f587,f534,f533,f532,f542,f541,f540,f539,f546,f545,f544,f543,f555,f554,f553,f586,f551,f550,f549,f559,f558,f557,f556,f563,f562,f561,f560,f585,f616,f617,f620,f621,f622,f623,f624,f625,f626,f627,f628,f629,f630,f631,f632,f633,f634,f635,f636,f637,f433,f432,f426,f425,f424,f367,f366,f345,f344,f343,f339,f338,f657,f664,f665,f668,f673,f676,f681,f682,f684,f691,f695,f696,f699,f705,f706,f710,f713,f716,f746,f792,f801,f800,f811,f809,f827,f833,f843,f846,f851,f855,f863,f869,f892,f899,f905,f928,f935,f941,f961,f1101,f1100,f1099,f1098,f1097,f1096,f1095,f1092,f1091,f1087,f1084,f1083,f1080,f1079,f1075,f1063,f1062,f1061,f1057,f1056,f1052,f1051,f1050,f1047,f1043,f1041,f1039,f1038,f1035,f1034,f1033,f1032,f1031,f1027,f1026,f1021,f1020,f1017,f1016,f1012,f1005,f1004,f1003,f1002,f1001,f1000,f999,f998,f995,f994,f990,f989,f986,f985,f981,f980,f979,f976,f975,f974,f973,f971,f970,f969,f967,f1117,f1132,f1315,f1314,f1313,f1312,f1311,f1310,f1309,f1306,f1305,f1301,f1298,f1297,f1294,f1293,f1289,f1277,f1276,f1275,f1271,f1270,f1266,f1265,f1264,f1261,f1257,f1255,f1253,f1252,f1249,f1248,f1247,f1246,f1245,f1241,f1240,f1235,f1234,f1231,f1230,f1226,f1219,f1218,f1217,f1216,f1215,f1214,f1213,f1212,f1209,f1208,f1204,f1203,f1200,f1199,f1195,f1194,f1193,f1190,f1189,f1188,f1187,f1185,f1184,f1183,f1182,f1181,f1368,f1410,f1430,f1443,f1459,f1467,f1469,f1470,f1477,f1478,f1483,f1487,f1486,f1503,f1527,f1537,f1580,f1586,f1591,f1598,f1608,f1643,f1642,f1641,f1640,f1644,f1645,f1654,f1655,f1656,f1657,f1658,f1659,f1660,f1661,f1662,f1663,f1664,f1665,f1666,f1667,f1668,f1669,f1670,f1671,f1673,f1674,f1684,f1754,f1817,f1846,f1895,f1900,f1880,f1921,f1928,f2023,f2024,f2026,f2027,f2029,f2030,f2032,f2060,f2107,f2106,f2105,f2104,f2116,f2117,f2118,f2119,f2128,f2129,f2130,f2131,f2132,f2133,f2134,f2135,f2136,f2137,f2138,f2139,f2140,f2141,f2142,f2143,f2144,f2145,f2147,f2148,f2149,f2161,f2247,f2248,f2196,f2199,f2252,f2253,f2237,f2276,f2362,f2363,f2388,f2405,f2403,f2423,f2436,f2446,f2447,f2452,f2451,f2449,f2465,f2479,f2480,f2540,f2483,f2484,f2541,f2542,f2487,f2499,f2500,f2501,f2502,f2503,f2504,f2505,f2506,f2507,f2508,f2509,f2510,f2511,f2512,f2513,f2516,f2537,f2538,f2539,f2545,f2573,f2597,f2598,f2667,f2670,f2608,f2612,f2613,f2620,f2621,f2622,f2623,f2624,f2625,f2626,f2627,f2628,f2629,f2630,f2631,f2632,f2633,f2634,f2637,f2660,f2661,f2662,f2740,f2741,f2742,f2746,f2827,f2830,f2754,f2755,f2756,f2757,f2758,f2759,f2760,f2832,f2762,f2763,f2764,f2768,f2769,f2777,f2778,f2779,f2780,f2781,f2782,f2783,f2784,f2833,f2786,f2787,f2788,f2789,f2790,f2791,f2792,f2795,f2820,f2821,f2822,f2963,f2890,f2966,f2969,f2898,f2899,f2900,f2904,f2905,f2913,f2915,f2916,f2917,f2918,f2919,f2920,f2921,f2922,f2923,f2924,f2925,f2926,f2927,f2928,f2929,f2930,f2933,f2960,f2961,f2962,f3005,f3060,f3061,f4802,f4810,f4900,f4870,f4912,f4921,f4922,f5030,f4924,f4925,f4926,f5045,f5057,f5021,f5363,f5366,f5372,f5401,f5409,f5538,f5475,f5574,f5575,f5590,f5600,f5601,f5677,f5678,f5679,f5681,f5682,f5683,f5684,f5685,f5754,f6113,f6117,f6120,f6123,f6126,f6129,f6132,f6135,f6138,f6141,f6144,f6147,f6150,f6153,f6156,f6159,f6162,f6165,f5789,f5790,f5791,f6167,f6168,f6169,f6170,f6171,f6172,f6173,f6174,f6175,f6176,f6177,f6178,f6179,f6180,f6181,f6182,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6193,f6194,f6195,f6196,f6197,f6198,f6199,f6200,f6201,f5852,f5853,f5854,f5856,f5857,f5858,f5859,f5860,f6209,f6211,f6213,f6215,f6217,f6219,f6221,f6223,f6225,f6227,f6229,f6231,f6233,f6235,f6237,f6239,f6241,f6243,f6115,f6502,f6522,f6526,f6539,f6541,f6543,f6545,f6547,f6549,f6551,f6553,f6555,f6557,f6559,f6561,f6563,f6565,f6567,f6569,f6571,f6573,f6575,f6577,f6584,f6590,f6596,f6614,f6620,f6626,f6639,f6641,f6643,f6645,f6647,f6649,f6651,f6653,f6655,f6657,f6659,f6661,f6663,f6665,f6667,f6669,f6671,f6673,f6675,f6677,f6679,f6694,f6698,f6704,f6710,f6712])).
fof(f6711,plain,(
  $false | $spl10),
  inference(global_subsumption,[],[f329,f328,f330,f602,f337,f341,f346,f357,f356,f361,f360,f365,f364,f406,f405,f412,f410,f415,f414,f413,f416,f417,f418,f419,f423,f420,f429,f428,f427,f431,f430,f440,f439,f603,f458,f455,f454,f453,f464,f463,f470,f469,f471,f473,f472,f498,f497,f496,f495,f494,f493,f492,f502,f501,f500,f499,f506,f505,f504,f503,f510,f509,f508,f507,f514,f513,f512,f511,f588,f518,f517,f516,f515,f525,f524,f523,f522,f531,f528,f527,f526,f538,f537,f536,f587,f534,f533,f532,f542,f541,f540,f539,f546,f545,f544,f543,f555,f554,f553,f586,f551,f550,f549,f559,f558,f557,f556,f563,f562,f561,f560,f585,f616,f617,f620,f621,f622,f623,f624,f625,f626,f627,f628,f629,f630,f631,f632,f633,f634,f635,f636,f637,f433,f432,f426,f425,f424,f367,f366,f345,f344,f343,f339,f338,f657,f664,f665,f668,f673,f676,f681,f682,f684,f691,f695,f696,f699,f705,f706,f710,f713,f716,f746,f792,f801,f800,f811,f809,f827,f833,f843,f846,f851,f855,f863,f869,f892,f899,f905,f928,f935,f941,f961,f1101,f1100,f1099,f1098,f1097,f1096,f1095,f1092,f1091,f1087,f1084,f1083,f1080,f1079,f1075,f1063,f1062,f1061,f1057,f1056,f1052,f1051,f1050,f1047,f1043,f1041,f1039,f1038,f1035,f1034,f1033,f1032,f1031,f1027,f1026,f1021,f1020,f1017,f1016,f1012,f1005,f1004,f1003,f1002,f1001,f1000,f999,f998,f995,f994,f990,f989,f986,f985,f981,f980,f979,f976,f975,f974,f973,f971,f970,f969,f967,f1117,f1132,f1315,f1314,f1313,f1312,f1311,f1310,f1309,f1306,f1305,f1301,f1298,f1297,f1294,f1293,f1289,f1277,f1276,f1275,f1271,f1270,f1266,f1265,f1264,f1261,f1257,f1255,f1253,f1252,f1249,f1248,f1247,f1246,f1245,f1241,f1240,f1235,f1234,f1231,f1230,f1226,f1219,f1218,f1217,f1216,f1215,f1214,f1213,f1212,f1209,f1208,f1204,f1203,f1200,f1199,f1195,f1194,f1193,f1190,f1189,f1188,f1187,f1185,f1184,f1183,f1182,f1181,f1368,f1410,f1430,f1443,f1459,f1467,f1469,f1470,f1477,f1478,f1483,f1487,f1486,f1503,f1527,f1537,f1580,f1586,f1591,f1598,f1608,f1643,f1642,f1641,f1640,f1644,f1645,f1654,f1655,f1656,f1657,f1658,f1659,f1660,f1661,f1662,f1663,f1664,f1665,f1666,f1667,f1668,f1669,f1670,f1671,f1673,f1674,f1684,f1754,f1817,f1846,f1895,f1900,f1880,f1921,f1928,f2023,f2024,f2026,f2027,f2029,f2030,f2032,f2060,f2107,f2106,f2105,f2104,f2116,f2117,f2118,f2119,f2128,f2129,f2130,f2131,f2132,f2133,f2134,f2135,f2136,f2137,f2138,f2139,f2140,f2141,f2142,f2143,f2144,f2145,f2147,f2148,f2149,f2161,f2247,f2248,f2196,f2199,f2252,f2253,f2237,f2276,f2362,f2363,f2388,f2405,f2403,f2423,f2436,f2446,f2447,f2452,f2451,f2449,f2465,f2479,f2480,f2540,f2483,f2484,f2541,f2542,f2487,f2499,f2500,f2501,f2502,f2503,f2504,f2505,f2506,f2507,f2508,f2509,f2510,f2511,f2512,f2513,f2516,f2537,f2538,f2539,f2545,f2573,f2597,f2598,f2667,f2670,f2608,f2612,f2613,f2620,f2621,f2622,f2623,f2624,f2625,f2626,f2627,f2628,f2629,f2630,f2631,f2632,f2633,f2634,f2637,f2660,f2661,f2662,f2740,f2741,f2742,f2746,f2827,f2830,f2754,f2755,f2756,f2757,f2758,f2759,f2760,f2832,f2762,f2763,f2764,f2768,f2769,f2777,f2778,f2779,f2780,f2781,f2782,f2783,f2784,f2833,f2786,f2787,f2788,f2789,f2790,f2791,f2792,f2795,f2820,f2821,f2822,f2963,f2890,f2966,f2969,f2898,f2899,f2900,f2904,f2905,f2913,f2915,f2916,f2917,f2918,f2919,f2920,f2921,f2922,f2923,f2924,f2925,f2926,f2927,f2928,f2929,f2930,f2933,f2960,f2961,f2962,f3005,f3060,f3061,f4802,f4810,f4900,f4870,f4912,f4921,f4922,f5030,f4924,f4925,f4926,f5045,f5057,f5021,f5363,f5366,f5372,f5401,f5409,f5538,f5475,f5574,f5575,f5590,f5600,f5601,f5677,f5678,f5679,f5681,f5682,f5683,f5684,f5685,f5754,f6113,f6117,f6120,f6123,f6126,f6129,f6132,f6135,f6138,f6141,f6144,f6147,f6150,f6153,f6156,f6159,f6162,f6165,f5789,f5790,f5791,f6167,f6168,f6169,f6170,f6171,f6172,f6173,f6174,f6175,f6176,f6177,f6178,f6179,f6180,f6181,f6182,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6193,f6194,f6195,f6196,f6197,f6198,f6199,f6200,f6201,f5852,f5853,f5854,f5856,f5857,f5858,f5859,f5860,f6209,f6211,f6213,f6215,f6217,f6219,f6221,f6223,f6225,f6227,f6229,f6231,f6233,f6235,f6237,f6239,f6241,f6243,f6115,f6502,f6522,f6526,f6539,f6541,f6543,f6545,f6547,f6549,f6551,f6553,f6555,f6557,f6559,f6561,f6563,f6565,f6567,f6569,f6571,f6573,f6575,f6577,f6584,f6590,f6596,f6614,f6620,f6626,f6639,f6641,f6643,f6645,f6647,f6649,f6651,f6653,f6655,f6657,f6659,f6661,f6663,f6665,f6667,f6669,f6671,f6673,f6675,f6677,f6679,f6694,f6698,f6704,f6710])).
fof(f6705,plain,(
  $false | $spl10),
  inference(global_subsumption,[],[f329,f328,f330,f602,f337,f341,f346,f357,f356,f361,f360,f365,f364,f406,f405,f412,f410,f415,f414,f413,f416,f417,f418,f419,f423,f420,f429,f428,f427,f431,f430,f440,f439,f603,f458,f455,f454,f453,f464,f463,f470,f469,f471,f473,f472,f498,f497,f496,f495,f494,f493,f492,f502,f501,f500,f499,f506,f505,f504,f503,f510,f509,f508,f507,f514,f513,f512,f511,f588,f518,f517,f516,f515,f525,f524,f523,f522,f531,f528,f527,f526,f538,f537,f536,f587,f534,f533,f532,f542,f541,f540,f539,f546,f545,f544,f543,f555,f554,f553,f586,f551,f550,f549,f559,f558,f557,f556,f563,f562,f561,f560,f585,f616,f617,f620,f621,f622,f623,f624,f625,f626,f627,f628,f629,f630,f631,f632,f633,f634,f635,f636,f637,f433,f432,f426,f425,f424,f367,f366,f345,f344,f343,f339,f338,f657,f664,f665,f668,f673,f676,f681,f682,f684,f691,f695,f696,f699,f705,f706,f710,f713,f716,f746,f792,f801,f800,f811,f809,f827,f833,f843,f846,f851,f855,f863,f869,f892,f899,f905,f928,f935,f941,f961,f1101,f1100,f1099,f1098,f1097,f1096,f1095,f1092,f1091,f1087,f1084,f1083,f1080,f1079,f1075,f1063,f1062,f1061,f1057,f1056,f1052,f1051,f1050,f1047,f1043,f1041,f1039,f1038,f1035,f1034,f1033,f1032,f1031,f1027,f1026,f1021,f1020,f1017,f1016,f1012,f1005,f1004,f1003,f1002,f1001,f1000,f999,f998,f995,f994,f990,f989,f986,f985,f981,f980,f979,f976,f975,f974,f973,f971,f970,f969,f967,f1117,f1132,f1315,f1314,f1313,f1312,f1311,f1310,f1309,f1306,f1305,f1301,f1298,f1297,f1294,f1293,f1289,f1277,f1276,f1275,f1271,f1270,f1266,f1265,f1264,f1261,f1257,f1255,f1253,f1252,f1249,f1248,f1247,f1246,f1245,f1241,f1240,f1235,f1234,f1231,f1230,f1226,f1219,f1218,f1217,f1216,f1215,f1214,f1213,f1212,f1209,f1208,f1204,f1203,f1200,f1199,f1195,f1194,f1193,f1190,f1189,f1188,f1187,f1185,f1184,f1183,f1182,f1181,f1368,f1410,f1430,f1443,f1459,f1467,f1469,f1470,f1477,f1478,f1483,f1487,f1486,f1503,f1527,f1537,f1580,f1586,f1591,f1598,f1608,f1643,f1642,f1641,f1640,f1644,f1645,f1654,f1655,f1656,f1657,f1658,f1659,f1660,f1661,f1662,f1663,f1664,f1665,f1666,f1667,f1668,f1669,f1670,f1671,f1673,f1674,f1684,f1754,f1817,f1846,f1895,f1900,f1880,f1921,f1928,f2023,f2024,f2026,f2027,f2029,f2030,f2032,f2060,f2107,f2106,f2105,f2104,f2116,f2117,f2118,f2119,f2128,f2129,f2130,f2131,f2132,f2133,f2134,f2135,f2136,f2137,f2138,f2139,f2140,f2141,f2142,f2143,f2144,f2145,f2147,f2148,f2149,f2161,f2247,f2248,f2196,f2199,f2252,f2253,f2237,f2276,f2362,f2363,f2388,f2405,f2403,f2423,f2436,f2446,f2447,f2452,f2451,f2449,f2465,f2479,f2480,f2540,f2483,f2484,f2541,f2542,f2487,f2499,f2500,f2501,f2502,f2503,f2504,f2505,f2506,f2507,f2508,f2509,f2510,f2511,f2512,f2513,f2516,f2537,f2538,f2539,f2545,f2573,f2597,f2598,f2667,f2670,f2608,f2612,f2613,f2620,f2621,f2622,f2623,f2624,f2625,f2626,f2627,f2628,f2629,f2630,f2631,f2632,f2633,f2634,f2637,f2660,f2661,f2662,f2740,f2741,f2742,f2746,f2827,f2830,f2754,f2755,f2756,f2757,f2758,f2759,f2760,f2832,f2762,f2763,f2764,f2768,f2769,f2777,f2778,f2779,f2780,f2781,f2782,f2783,f2784,f2833,f2786,f2787,f2788,f2789,f2790,f2791,f2792,f2795,f2820,f2821,f2822,f2963,f2890,f2966,f2969,f2898,f2899,f2900,f2904,f2905,f2913,f2915,f2916,f2917,f2918,f2919,f2920,f2921,f2922,f2923,f2924,f2925,f2926,f2927,f2928,f2929,f2930,f2933,f2960,f2961,f2962,f3005,f3060,f3061,f4802,f4810,f4900,f4870,f4912,f4921,f4922,f5030,f4924,f4925,f4926,f5045,f5057,f5021,f5363,f5366,f5372,f5401,f5409,f5538,f5475,f5574,f5575,f5590,f5600,f5601,f5677,f5678,f5679,f5681,f5682,f5683,f5684,f5685,f5754,f6113,f6117,f6120,f6123,f6126,f6129,f6132,f6135,f6138,f6141,f6144,f6147,f6150,f6153,f6156,f6159,f6162,f6165,f5789,f5790,f5791,f6167,f6168,f6169,f6170,f6171,f6172,f6173,f6174,f6175,f6176,f6177,f6178,f6179,f6180,f6181,f6182,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6193,f6194,f6195,f6196,f6197,f6198,f6199,f6200,f6201,f5852,f5853,f5854,f5856,f5857,f5858,f5859,f5860,f6209,f6211,f6213,f6215,f6217,f6219,f6221,f6223,f6225,f6227,f6229,f6231,f6233,f6235,f6237,f6239,f6241,f6243,f6115,f6502,f6522,f6526,f6539,f6541,f6543,f6545,f6547,f6549,f6551,f6553,f6555,f6557,f6559,f6561,f6563,f6565,f6567,f6569,f6571,f6573,f6575,f6577,f6584,f6590,f6596,f6614,f6620,f6626,f6639,f6641,f6643,f6645,f6647,f6649,f6651,f6653,f6655,f6657,f6659,f6661,f6663,f6665,f6667,f6669,f6671,f6673,f6675,f6677,f6679,f6694,f6698,f6704])).
fof(f6699,plain,(
  $false | $spl10),
  inference(global_subsumption,[],[f329,f328,f330,f602,f337,f341,f346,f357,f356,f361,f360,f365,f364,f406,f405,f412,f410,f415,f414,f413,f416,f417,f418,f419,f423,f420,f429,f428,f427,f431,f430,f440,f439,f603,f458,f455,f454,f453,f464,f463,f470,f469,f471,f473,f472,f498,f497,f496,f495,f494,f493,f492,f502,f501,f500,f499,f506,f505,f504,f503,f510,f509,f508,f507,f514,f513,f512,f511,f588,f518,f517,f516,f515,f525,f524,f523,f522,f531,f528,f527,f526,f538,f537,f536,f587,f534,f533,f532,f542,f541,f540,f539,f546,f545,f544,f543,f555,f554,f553,f586,f551,f550,f549,f559,f558,f557,f556,f563,f562,f561,f560,f585,f616,f617,f620,f621,f622,f623,f624,f625,f626,f627,f628,f629,f630,f631,f632,f633,f634,f635,f636,f637,f433,f432,f426,f425,f424,f367,f366,f345,f344,f343,f339,f338,f657,f664,f665,f668,f673,f676,f681,f682,f684,f691,f695,f696,f699,f705,f706,f710,f713,f716,f746,f792,f801,f800,f811,f809,f827,f833,f843,f846,f851,f855,f863,f869,f892,f899,f905,f928,f935,f941,f961,f1101,f1100,f1099,f1098,f1097,f1096,f1095,f1092,f1091,f1087,f1084,f1083,f1080,f1079,f1075,f1063,f1062,f1061,f1057,f1056,f1052,f1051,f1050,f1047,f1043,f1041,f1039,f1038,f1035,f1034,f1033,f1032,f1031,f1027,f1026,f1021,f1020,f1017,f1016,f1012,f1005,f1004,f1003,f1002,f1001,f1000,f999,f998,f995,f994,f990,f989,f986,f985,f981,f980,f979,f976,f975,f974,f973,f971,f970,f969,f967,f1117,f1132,f1315,f1314,f1313,f1312,f1311,f1310,f1309,f1306,f1305,f1301,f1298,f1297,f1294,f1293,f1289,f1277,f1276,f1275,f1271,f1270,f1266,f1265,f1264,f1261,f1257,f1255,f1253,f1252,f1249,f1248,f1247,f1246,f1245,f1241,f1240,f1235,f1234,f1231,f1230,f1226,f1219,f1218,f1217,f1216,f1215,f1214,f1213,f1212,f1209,f1208,f1204,f1203,f1200,f1199,f1195,f1194,f1193,f1190,f1189,f1188,f1187,f1185,f1184,f1183,f1182,f1181,f1368,f1410,f1430,f1443,f1459,f1467,f1469,f1470,f1477,f1478,f1483,f1487,f1486,f1503,f1527,f1537,f1580,f1586,f1591,f1598,f1608,f1643,f1642,f1641,f1640,f1644,f1645,f1654,f1655,f1656,f1657,f1658,f1659,f1660,f1661,f1662,f1663,f1664,f1665,f1666,f1667,f1668,f1669,f1670,f1671,f1673,f1674,f1684,f1754,f1817,f1846,f1895,f1900,f1880,f1921,f1928,f2023,f2024,f2026,f2027,f2029,f2030,f2032,f2060,f2107,f2106,f2105,f2104,f2116,f2117,f2118,f2119,f2128,f2129,f2130,f2131,f2132,f2133,f2134,f2135,f2136,f2137,f2138,f2139,f2140,f2141,f2142,f2143,f2144,f2145,f2147,f2148,f2149,f2161,f2247,f2248,f2196,f2199,f2252,f2253,f2237,f2276,f2362,f2363,f2388,f2405,f2403,f2423,f2436,f2446,f2447,f2452,f2451,f2449,f2465,f2479,f2480,f2540,f2483,f2484,f2541,f2542,f2487,f2499,f2500,f2501,f2502,f2503,f2504,f2505,f2506,f2507,f2508,f2509,f2510,f2511,f2512,f2513,f2516,f2537,f2538,f2539,f2545,f2573,f2597,f2598,f2667,f2670,f2608,f2612,f2613,f2620,f2621,f2622,f2623,f2624,f2625,f2626,f2627,f2628,f2629,f2630,f2631,f2632,f2633,f2634,f2637,f2660,f2661,f2662,f2740,f2741,f2742,f2746,f2827,f2830,f2754,f2755,f2756,f2757,f2758,f2759,f2760,f2832,f2762,f2763,f2764,f2768,f2769,f2777,f2778,f2779,f2780,f2781,f2782,f2783,f2784,f2833,f2786,f2787,f2788,f2789,f2790,f2791,f2792,f2795,f2820,f2821,f2822,f2963,f2890,f2966,f2969,f2898,f2899,f2900,f2904,f2905,f2913,f2915,f2916,f2917,f2918,f2919,f2920,f2921,f2922,f2923,f2924,f2925,f2926,f2927,f2928,f2929,f2930,f2933,f2960,f2961,f2962,f3005,f3060,f3061,f4802,f4810,f4900,f4870,f4912,f4921,f4922,f5030,f4924,f4925,f4926,f5045,f5057,f5021,f5363,f5366,f5372,f5401,f5409,f5538,f5475,f5574,f5575,f5590,f5600,f5601,f5677,f5678,f5679,f5681,f5682,f5683,f5684,f5685,f5754,f6113,f6117,f6120,f6123,f6126,f6129,f6132,f6135,f6138,f6141,f6144,f6147,f6150,f6153,f6156,f6159,f6162,f6165,f5789,f5790,f5791,f6167,f6168,f6169,f6170,f6171,f6172,f6173,f6174,f6175,f6176,f6177,f6178,f6179,f6180,f6181,f6182,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6193,f6194,f6195,f6196,f6197,f6198,f6199,f6200,f6201,f5852,f5853,f5854,f5856,f5857,f5858,f5859,f5860,f6209,f6211,f6213,f6215,f6217,f6219,f6221,f6223,f6225,f6227,f6229,f6231,f6233,f6235,f6237,f6239,f6241,f6243,f6115,f6502,f6522,f6526,f6539,f6541,f6543,f6545,f6547,f6549,f6551,f6553,f6555,f6557,f6559,f6561,f6563,f6565,f6567,f6569,f6571,f6573,f6575,f6577,f6584,f6590,f6596,f6614,f6620,f6626,f6639,f6641,f6643,f6645,f6647,f6649,f6651,f6653,f6655,f6657,f6659,f6661,f6663,f6665,f6667,f6669,f6671,f6673,f6675,f6677,f6679,f6694,f6698])).
fof(f6695,plain,(
  $false | $spl10),
  inference(global_subsumption,[],[f329,f328,f330,f602,f337,f341,f346,f357,f356,f361,f360,f365,f364,f406,f405,f412,f410,f415,f414,f413,f416,f417,f418,f419,f423,f420,f429,f428,f427,f431,f430,f440,f439,f603,f458,f455,f454,f453,f464,f463,f470,f469,f471,f473,f472,f498,f497,f496,f495,f494,f493,f492,f502,f501,f500,f499,f506,f505,f504,f503,f510,f509,f508,f507,f514,f513,f512,f511,f588,f518,f517,f516,f515,f525,f524,f523,f522,f531,f528,f527,f526,f538,f537,f536,f587,f534,f533,f532,f542,f541,f540,f539,f546,f545,f544,f543,f555,f554,f553,f586,f551,f550,f549,f559,f558,f557,f556,f563,f562,f561,f560,f585,f616,f617,f620,f621,f622,f623,f624,f625,f626,f627,f628,f629,f630,f631,f632,f633,f634,f635,f636,f637,f433,f432,f426,f425,f424,f367,f366,f345,f344,f343,f339,f338,f657,f664,f665,f668,f673,f676,f681,f682,f684,f691,f695,f696,f699,f705,f706,f710,f713,f716,f746,f792,f801,f800,f811,f809,f827,f833,f843,f846,f851,f855,f863,f869,f892,f899,f905,f928,f935,f941,f961,f1101,f1100,f1099,f1098,f1097,f1096,f1095,f1092,f1091,f1087,f1084,f1083,f1080,f1079,f1075,f1063,f1062,f1061,f1057,f1056,f1052,f1051,f1050,f1047,f1043,f1041,f1039,f1038,f1035,f1034,f1033,f1032,f1031,f1027,f1026,f1021,f1020,f1017,f1016,f1012,f1005,f1004,f1003,f1002,f1001,f1000,f999,f998,f995,f994,f990,f989,f986,f985,f981,f980,f979,f976,f975,f974,f973,f971,f970,f969,f967,f1117,f1132,f1315,f1314,f1313,f1312,f1311,f1310,f1309,f1306,f1305,f1301,f1298,f1297,f1294,f1293,f1289,f1277,f1276,f1275,f1271,f1270,f1266,f1265,f1264,f1261,f1257,f1255,f1253,f1252,f1249,f1248,f1247,f1246,f1245,f1241,f1240,f1235,f1234,f1231,f1230,f1226,f1219,f1218,f1217,f1216,f1215,f1214,f1213,f1212,f1209,f1208,f1204,f1203,f1200,f1199,f1195,f1194,f1193,f1190,f1189,f1188,f1187,f1185,f1184,f1183,f1182,f1181,f1368,f1410,f1430,f1443,f1459,f1467,f1469,f1470,f1477,f1478,f1483,f1487,f1486,f1503,f1527,f1537,f1580,f1586,f1591,f1598,f1608,f1643,f1642,f1641,f1640,f1644,f1645,f1654,f1655,f1656,f1657,f1658,f1659,f1660,f1661,f1662,f1663,f1664,f1665,f1666,f1667,f1668,f1669,f1670,f1671,f1673,f1674,f1684,f1754,f1817,f1846,f1895,f1900,f1880,f1921,f1928,f2023,f2024,f2026,f2027,f2029,f2030,f2032,f2060,f2107,f2106,f2105,f2104,f2116,f2117,f2118,f2119,f2128,f2129,f2130,f2131,f2132,f2133,f2134,f2135,f2136,f2137,f2138,f2139,f2140,f2141,f2142,f2143,f2144,f2145,f2147,f2148,f2149,f2161,f2247,f2248,f2196,f2199,f2252,f2253,f2237,f2276,f2362,f2363,f2388,f2405,f2403,f2423,f2436,f2446,f2447,f2452,f2451,f2449,f2465,f2479,f2480,f2540,f2483,f2484,f2541,f2542,f2487,f2499,f2500,f2501,f2502,f2503,f2504,f2505,f2506,f2507,f2508,f2509,f2510,f2511,f2512,f2513,f2516,f2537,f2538,f2539,f2545,f2573,f2597,f2598,f2667,f2670,f2608,f2612,f2613,f2620,f2621,f2622,f2623,f2624,f2625,f2626,f2627,f2628,f2629,f2630,f2631,f2632,f2633,f2634,f2637,f2660,f2661,f2662,f2740,f2741,f2742,f2746,f2827,f2830,f2754,f2755,f2756,f2757,f2758,f2759,f2760,f2832,f2762,f2763,f2764,f2768,f2769,f2777,f2778,f2779,f2780,f2781,f2782,f2783,f2784,f2833,f2786,f2787,f2788,f2789,f2790,f2791,f2792,f2795,f2820,f2821,f2822,f2963,f2890,f2966,f2969,f2898,f2899,f2900,f2904,f2905,f2913,f2915,f2916,f2917,f2918,f2919,f2920,f2921,f2922,f2923,f2924,f2925,f2926,f2927,f2928,f2929,f2930,f2933,f2960,f2961,f2962,f3005,f3060,f3061,f4802,f4810,f4900,f4870,f4912,f4921,f4922,f5030,f4924,f4925,f4926,f5045,f5057,f5021,f5363,f5366,f5372,f5401,f5409,f5538,f5475,f5574,f5575,f5590,f5600,f5601,f5677,f5678,f5679,f5681,f5682,f5683,f5684,f5685,f5754,f6113,f6117,f6120,f6123,f6126,f6129,f6132,f6135,f6138,f6141,f6144,f6147,f6150,f6153,f6156,f6159,f6162,f6165,f5789,f5790,f5791,f6167,f6168,f6169,f6170,f6171,f6172,f6173,f6174,f6175,f6176,f6177,f6178,f6179,f6180,f6181,f6182,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6193,f6194,f6195,f6196,f6197,f6198,f6199,f6200,f6201,f5852,f5853,f5854,f5856,f5857,f5858,f5859,f5860,f6209,f6211,f6213,f6215,f6217,f6219,f6221,f6223,f6225,f6227,f6229,f6231,f6233,f6235,f6237,f6239,f6241,f6243,f6115,f6502,f6522,f6526,f6539,f6541,f6543,f6545,f6547,f6549,f6551,f6553,f6555,f6557,f6559,f6561,f6563,f6565,f6567,f6569,f6571,f6573,f6575,f6577,f6584,f6590,f6596,f6614,f6620,f6626,f6639,f6641,f6643,f6645,f6647,f6649,f6651,f6653,f6655,f6657,f6659,f6661,f6663,f6665,f6667,f6669,f6671,f6673,f6675,f6677,f6679,f6694])).
fof(f6680,plain,(
  $false | $spl10),
  inference(global_subsumption,[],[f329,f328,f330,f602,f337,f341,f346,f357,f356,f361,f360,f365,f364,f406,f405,f412,f410,f415,f414,f413,f416,f417,f418,f419,f423,f420,f429,f428,f427,f431,f430,f440,f439,f603,f458,f455,f454,f453,f464,f463,f470,f469,f471,f473,f472,f498,f497,f496,f495,f494,f493,f492,f502,f501,f500,f499,f506,f505,f504,f503,f510,f509,f508,f507,f514,f513,f512,f511,f588,f518,f517,f516,f515,f525,f524,f523,f522,f531,f528,f527,f526,f538,f537,f536,f587,f534,f533,f532,f542,f541,f540,f539,f546,f545,f544,f543,f555,f554,f553,f586,f551,f550,f549,f559,f558,f557,f556,f563,f562,f561,f560,f585,f616,f617,f620,f621,f622,f623,f624,f625,f626,f627,f628,f629,f630,f631,f632,f633,f634,f635,f636,f637,f433,f432,f426,f425,f424,f367,f366,f345,f344,f343,f339,f338,f657,f664,f665,f668,f673,f676,f681,f682,f684,f691,f695,f696,f699,f705,f706,f710,f713,f716,f746,f792,f801,f800,f811,f809,f827,f833,f843,f846,f851,f855,f863,f869,f892,f899,f905,f928,f935,f941,f961,f1101,f1100,f1099,f1098,f1097,f1096,f1095,f1092,f1091,f1087,f1084,f1083,f1080,f1079,f1075,f1063,f1062,f1061,f1057,f1056,f1052,f1051,f1050,f1047,f1043,f1041,f1039,f1038,f1035,f1034,f1033,f1032,f1031,f1027,f1026,f1021,f1020,f1017,f1016,f1012,f1005,f1004,f1003,f1002,f1001,f1000,f999,f998,f995,f994,f990,f989,f986,f985,f981,f980,f979,f976,f975,f974,f973,f971,f970,f969,f967,f1117,f1132,f1315,f1314,f1313,f1312,f1311,f1310,f1309,f1306,f1305,f1301,f1298,f1297,f1294,f1293,f1289,f1277,f1276,f1275,f1271,f1270,f1266,f1265,f1264,f1261,f1257,f1255,f1253,f1252,f1249,f1248,f1247,f1246,f1245,f1241,f1240,f1235,f1234,f1231,f1230,f1226,f1219,f1218,f1217,f1216,f1215,f1214,f1213,f1212,f1209,f1208,f1204,f1203,f1200,f1199,f1195,f1194,f1193,f1190,f1189,f1188,f1187,f1185,f1184,f1183,f1182,f1181,f1368,f1410,f1430,f1443,f1459,f1467,f1469,f1470,f1477,f1478,f1483,f1487,f1486,f1503,f1527,f1537,f1580,f1586,f1591,f1598,f1608,f1643,f1642,f1641,f1640,f1644,f1645,f1654,f1655,f1656,f1657,f1658,f1659,f1660,f1661,f1662,f1663,f1664,f1665,f1666,f1667,f1668,f1669,f1670,f1671,f1673,f1674,f1684,f1754,f1817,f1846,f1895,f1900,f1880,f1921,f1928,f2023,f2024,f2026,f2027,f2029,f2030,f2032,f2060,f2107,f2106,f2105,f2104,f2116,f2117,f2118,f2119,f2128,f2129,f2130,f2131,f2132,f2133,f2134,f2135,f2136,f2137,f2138,f2139,f2140,f2141,f2142,f2143,f2144,f2145,f2147,f2148,f2149,f2161,f2247,f2248,f2196,f2199,f2252,f2253,f2237,f2276,f2362,f2363,f2388,f2405,f2403,f2423,f2436,f2446,f2447,f2452,f2451,f2449,f2465,f2479,f2480,f2540,f2483,f2484,f2541,f2542,f2487,f2499,f2500,f2501,f2502,f2503,f2504,f2505,f2506,f2507,f2508,f2509,f2510,f2511,f2512,f2513,f2516,f2537,f2538,f2539,f2545,f2573,f2597,f2598,f2667,f2670,f2608,f2612,f2613,f2620,f2621,f2622,f2623,f2624,f2625,f2626,f2627,f2628,f2629,f2630,f2631,f2632,f2633,f2634,f2637,f2660,f2661,f2662,f2740,f2741,f2742,f2746,f2827,f2830,f2754,f2755,f2756,f2757,f2758,f2759,f2760,f2832,f2762,f2763,f2764,f2768,f2769,f2777,f2778,f2779,f2780,f2781,f2782,f2783,f2784,f2833,f2786,f2787,f2788,f2789,f2790,f2791,f2792,f2795,f2820,f2821,f2822,f2963,f2890,f2966,f2969,f2898,f2899,f2900,f2904,f2905,f2913,f2915,f2916,f2917,f2918,f2919,f2920,f2921,f2922,f2923,f2924,f2925,f2926,f2927,f2928,f2929,f2930,f2933,f2960,f2961,f2962,f3005,f3060,f3061,f4802,f4810,f4900,f4870,f4912,f4921,f4922,f5030,f4924,f4925,f4926,f5045,f5057,f5021,f5363,f5366,f5372,f5401,f5409,f5538,f5475,f5574,f5575,f5590,f5600,f5601,f5677,f5678,f5679,f5681,f5682,f5683,f5684,f5685,f5754,f6113,f6117,f6120,f6123,f6126,f6129,f6132,f6135,f6138,f6141,f6144,f6147,f6150,f6153,f6156,f6159,f6162,f6165,f5789,f5790,f5791,f6167,f6168,f6169,f6170,f6171,f6172,f6173,f6174,f6175,f6176,f6177,f6178,f6179,f6180,f6181,f6182,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6193,f6194,f6195,f6196,f6197,f6198,f6199,f6200,f6201,f5852,f5853,f5854,f5856,f5857,f5858,f5859,f5860,f6209,f6211,f6213,f6215,f6217,f6219,f6221,f6223,f6225,f6227,f6229,f6231,f6233,f6235,f6237,f6239,f6241,f6243,f6115,f6502,f6522,f6526,f6539,f6541,f6543,f6545,f6547,f6549,f6551,f6553,f6555,f6557,f6559,f6561,f6563,f6565,f6567,f6569,f6571,f6573,f6575,f6577,f6584,f6590,f6596,f6614,f6620,f6626,f6639,f6641,f6643,f6645,f6647,f6649,f6651,f6653,f6655,f6657,f6659,f6661,f6663,f6665,f6667,f6669,f6671,f6673,f6675,f6677,f6679])).
fof(f6678,plain,(
  $false | $spl10),
  inference(global_subsumption,[],[f329,f328,f330,f602,f337,f341,f346,f357,f356,f361,f360,f365,f364,f406,f405,f412,f410,f415,f414,f413,f416,f417,f418,f419,f423,f420,f429,f428,f427,f431,f430,f440,f439,f603,f458,f455,f454,f453,f464,f463,f470,f469,f471,f473,f472,f498,f497,f496,f495,f494,f493,f492,f502,f501,f500,f499,f506,f505,f504,f503,f510,f509,f508,f507,f514,f513,f512,f511,f588,f518,f517,f516,f515,f525,f524,f523,f522,f531,f528,f527,f526,f538,f537,f536,f587,f534,f533,f532,f542,f541,f540,f539,f546,f545,f544,f543,f555,f554,f553,f586,f551,f550,f549,f559,f558,f557,f556,f563,f562,f561,f560,f585,f616,f617,f620,f621,f622,f623,f624,f625,f626,f627,f628,f629,f630,f631,f632,f633,f634,f635,f636,f637,f433,f432,f426,f425,f424,f367,f366,f345,f344,f343,f339,f338,f657,f664,f665,f668,f673,f676,f681,f682,f684,f691,f695,f696,f699,f705,f706,f710,f713,f716,f746,f792,f801,f800,f811,f809,f827,f833,f843,f846,f851,f855,f863,f869,f892,f899,f905,f928,f935,f941,f961,f1101,f1100,f1099,f1098,f1097,f1096,f1095,f1092,f1091,f1087,f1084,f1083,f1080,f1079,f1075,f1063,f1062,f1061,f1057,f1056,f1052,f1051,f1050,f1047,f1043,f1041,f1039,f1038,f1035,f1034,f1033,f1032,f1031,f1027,f1026,f1021,f1020,f1017,f1016,f1012,f1005,f1004,f1003,f1002,f1001,f1000,f999,f998,f995,f994,f990,f989,f986,f985,f981,f980,f979,f976,f975,f974,f973,f971,f970,f969,f967,f1117,f1132,f1315,f1314,f1313,f1312,f1311,f1310,f1309,f1306,f1305,f1301,f1298,f1297,f1294,f1293,f1289,f1277,f1276,f1275,f1271,f1270,f1266,f1265,f1264,f1261,f1257,f1255,f1253,f1252,f1249,f1248,f1247,f1246,f1245,f1241,f1240,f1235,f1234,f1231,f1230,f1226,f1219,f1218,f1217,f1216,f1215,f1214,f1213,f1212,f1209,f1208,f1204,f1203,f1200,f1199,f1195,f1194,f1193,f1190,f1189,f1188,f1187,f1185,f1184,f1183,f1182,f1181,f1368,f1410,f1430,f1443,f1459,f1467,f1469,f1470,f1477,f1478,f1483,f1487,f1486,f1503,f1527,f1537,f1580,f1586,f1591,f1598,f1608,f1643,f1642,f1641,f1640,f1644,f1645,f1654,f1655,f1656,f1657,f1658,f1659,f1660,f1661,f1662,f1663,f1664,f1665,f1666,f1667,f1668,f1669,f1670,f1671,f1673,f1674,f1684,f1754,f1817,f1846,f1895,f1900,f1880,f1921,f1928,f2023,f2024,f2026,f2027,f2029,f2030,f2032,f2060,f2107,f2106,f2105,f2104,f2116,f2117,f2118,f2119,f2128,f2129,f2130,f2131,f2132,f2133,f2134,f2135,f2136,f2137,f2138,f2139,f2140,f2141,f2142,f2143,f2144,f2145,f2147,f2148,f2149,f2161,f2247,f2248,f2196,f2199,f2252,f2253,f2237,f2276,f2362,f2363,f2388,f2405,f2403,f2423,f2436,f2446,f2447,f2452,f2451,f2449,f2465,f2479,f2480,f2540,f2483,f2484,f2541,f2542,f2487,f2499,f2500,f2501,f2502,f2503,f2504,f2505,f2506,f2507,f2508,f2509,f2510,f2511,f2512,f2513,f2516,f2537,f2538,f2539,f2545,f2573,f2597,f2598,f2667,f2670,f2608,f2612,f2613,f2620,f2621,f2622,f2623,f2624,f2625,f2626,f2627,f2628,f2629,f2630,f2631,f2632,f2633,f2634,f2637,f2660,f2661,f2662,f2740,f2741,f2742,f2746,f2827,f2830,f2754,f2755,f2756,f2757,f2758,f2759,f2760,f2832,f2762,f2763,f2764,f2768,f2769,f2777,f2778,f2779,f2780,f2781,f2782,f2783,f2784,f2833,f2786,f2787,f2788,f2789,f2790,f2791,f2792,f2795,f2820,f2821,f2822,f2963,f2890,f2966,f2969,f2898,f2899,f2900,f2904,f2905,f2913,f2915,f2916,f2917,f2918,f2919,f2920,f2921,f2922,f2923,f2924,f2925,f2926,f2927,f2928,f2929,f2930,f2933,f2960,f2961,f2962,f3005,f3060,f3061,f4802,f4810,f4900,f4870,f4912,f4921,f4922,f5030,f4924,f4925,f4926,f5045,f5057,f5021,f5363,f5366,f5372,f5401,f5409,f5538,f5475,f5574,f5575,f5590,f5600,f5601,f5677,f5678,f5679,f5681,f5682,f5683,f5684,f5685,f5754,f6113,f6117,f6120,f6123,f6126,f6129,f6132,f6135,f6138,f6141,f6144,f6147,f6150,f6153,f6156,f6159,f6162,f6165,f5789,f5790,f5791,f6167,f6168,f6169,f6170,f6171,f6172,f6173,f6174,f6175,f6176,f6177,f6178,f6179,f6180,f6181,f6182,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6193,f6194,f6195,f6196,f6197,f6198,f6199,f6200,f6201,f5852,f5853,f5854,f5856,f5857,f5858,f5859,f5860,f6209,f6211,f6213,f6215,f6217,f6219,f6221,f6223,f6225,f6227,f6229,f6231,f6233,f6235,f6237,f6239,f6241,f6243,f6115,f6502,f6522,f6526,f6539,f6541,f6543,f6545,f6547,f6549,f6551,f6553,f6555,f6557,f6559,f6561,f6563,f6565,f6567,f6569,f6571,f6573,f6575,f6577,f6584,f6590,f6596,f6614,f6620,f6626,f6639,f6641,f6643,f6645,f6647,f6649,f6651,f6653,f6655,f6657,f6659,f6661,f6663,f6665,f6667,f6669,f6671,f6673,f6675,f6677])).
fof(f6676,plain,(
  $false | $spl10),
  inference(global_subsumption,[],[f329,f328,f330,f602,f337,f341,f346,f357,f356,f361,f360,f365,f364,f406,f405,f412,f410,f415,f414,f413,f416,f417,f418,f419,f423,f420,f429,f428,f427,f431,f430,f440,f439,f603,f458,f455,f454,f453,f464,f463,f470,f469,f471,f473,f472,f498,f497,f496,f495,f494,f493,f492,f502,f501,f500,f499,f506,f505,f504,f503,f510,f509,f508,f507,f514,f513,f512,f511,f588,f518,f517,f516,f515,f525,f524,f523,f522,f531,f528,f527,f526,f538,f537,f536,f587,f534,f533,f532,f542,f541,f540,f539,f546,f545,f544,f543,f555,f554,f553,f586,f551,f550,f549,f559,f558,f557,f556,f563,f562,f561,f560,f585,f616,f617,f620,f621,f622,f623,f624,f625,f626,f627,f628,f629,f630,f631,f632,f633,f634,f635,f636,f637,f433,f432,f426,f425,f424,f367,f366,f345,f344,f343,f339,f338,f657,f664,f665,f668,f673,f676,f681,f682,f684,f691,f695,f696,f699,f705,f706,f710,f713,f716,f746,f792,f801,f800,f811,f809,f827,f833,f843,f846,f851,f855,f863,f869,f892,f899,f905,f928,f935,f941,f961,f1101,f1100,f1099,f1098,f1097,f1096,f1095,f1092,f1091,f1087,f1084,f1083,f1080,f1079,f1075,f1063,f1062,f1061,f1057,f1056,f1052,f1051,f1050,f1047,f1043,f1041,f1039,f1038,f1035,f1034,f1033,f1032,f1031,f1027,f1026,f1021,f1020,f1017,f1016,f1012,f1005,f1004,f1003,f1002,f1001,f1000,f999,f998,f995,f994,f990,f989,f986,f985,f981,f980,f979,f976,f975,f974,f973,f971,f970,f969,f967,f1117,f1132,f1315,f1314,f1313,f1312,f1311,f1310,f1309,f1306,f1305,f1301,f1298,f1297,f1294,f1293,f1289,f1277,f1276,f1275,f1271,f1270,f1266,f1265,f1264,f1261,f1257,f1255,f1253,f1252,f1249,f1248,f1247,f1246,f1245,f1241,f1240,f1235,f1234,f1231,f1230,f1226,f1219,f1218,f1217,f1216,f1215,f1214,f1213,f1212,f1209,f1208,f1204,f1203,f1200,f1199,f1195,f1194,f1193,f1190,f1189,f1188,f1187,f1185,f1184,f1183,f1182,f1181,f1368,f1410,f1430,f1443,f1459,f1467,f1469,f1470,f1477,f1478,f1483,f1487,f1486,f1503,f1527,f1537,f1580,f1586,f1591,f1598,f1608,f1643,f1642,f1641,f1640,f1644,f1645,f1654,f1655,f1656,f1657,f1658,f1659,f1660,f1661,f1662,f1663,f1664,f1665,f1666,f1667,f1668,f1669,f1670,f1671,f1673,f1674,f1684,f1754,f1817,f1846,f1895,f1900,f1880,f1921,f1928,f2023,f2024,f2026,f2027,f2029,f2030,f2032,f2060,f2107,f2106,f2105,f2104,f2116,f2117,f2118,f2119,f2128,f2129,f2130,f2131,f2132,f2133,f2134,f2135,f2136,f2137,f2138,f2139,f2140,f2141,f2142,f2143,f2144,f2145,f2147,f2148,f2149,f2161,f2247,f2248,f2196,f2199,f2252,f2253,f2237,f2276,f2362,f2363,f2388,f2405,f2403,f2423,f2436,f2446,f2447,f2452,f2451,f2449,f2465,f2479,f2480,f2540,f2483,f2484,f2541,f2542,f2487,f2499,f2500,f2501,f2502,f2503,f2504,f2505,f2506,f2507,f2508,f2509,f2510,f2511,f2512,f2513,f2516,f2537,f2538,f2539,f2545,f2573,f2597,f2598,f2667,f2670,f2608,f2612,f2613,f2620,f2621,f2622,f2623,f2624,f2625,f2626,f2627,f2628,f2629,f2630,f2631,f2632,f2633,f2634,f2637,f2660,f2661,f2662,f2740,f2741,f2742,f2746,f2827,f2830,f2754,f2755,f2756,f2757,f2758,f2759,f2760,f2832,f2762,f2763,f2764,f2768,f2769,f2777,f2778,f2779,f2780,f2781,f2782,f2783,f2784,f2833,f2786,f2787,f2788,f2789,f2790,f2791,f2792,f2795,f2820,f2821,f2822,f2963,f2890,f2966,f2969,f2898,f2899,f2900,f2904,f2905,f2913,f2915,f2916,f2917,f2918,f2919,f2920,f2921,f2922,f2923,f2924,f2925,f2926,f2927,f2928,f2929,f2930,f2933,f2960,f2961,f2962,f3005,f3060,f3061,f4802,f4810,f4900,f4870,f4912,f4921,f4922,f5030,f4924,f4925,f4926,f5045,f5057,f5021,f5363,f5366,f5372,f5401,f5409,f5538,f5475,f5574,f5575,f5590,f5600,f5601,f5677,f5678,f5679,f5681,f5682,f5683,f5684,f5685,f5754,f6113,f6117,f6120,f6123,f6126,f6129,f6132,f6135,f6138,f6141,f6144,f6147,f6150,f6153,f6156,f6159,f6162,f6165,f5789,f5790,f5791,f6167,f6168,f6169,f6170,f6171,f6172,f6173,f6174,f6175,f6176,f6177,f6178,f6179,f6180,f6181,f6182,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6193,f6194,f6195,f6196,f6197,f6198,f6199,f6200,f6201,f5852,f5853,f5854,f5856,f5857,f5858,f5859,f5860,f6209,f6211,f6213,f6215,f6217,f6219,f6221,f6223,f6225,f6227,f6229,f6231,f6233,f6235,f6237,f6239,f6241,f6243,f6115,f6502,f6522,f6526,f6539,f6541,f6543,f6545,f6547,f6549,f6551,f6553,f6555,f6557,f6559,f6561,f6563,f6565,f6567,f6569,f6571,f6573,f6575,f6577,f6584,f6590,f6596,f6614,f6620,f6626,f6639,f6641,f6643,f6645,f6647,f6649,f6651,f6653,f6655,f6657,f6659,f6661,f6663,f6665,f6667,f6669,f6671,f6673,f6675])).
fof(f6674,plain,(
  $false | $spl10),
  inference(global_subsumption,[],[f329,f328,f330,f602,f337,f341,f346,f357,f356,f361,f360,f365,f364,f406,f405,f412,f410,f415,f414,f413,f416,f417,f418,f419,f423,f420,f429,f428,f427,f431,f430,f440,f439,f603,f458,f455,f454,f453,f464,f463,f470,f469,f471,f473,f472,f498,f497,f496,f495,f494,f493,f492,f502,f501,f500,f499,f506,f505,f504,f503,f510,f509,f508,f507,f514,f513,f512,f511,f588,f518,f517,f516,f515,f525,f524,f523,f522,f531,f528,f527,f526,f538,f537,f536,f587,f534,f533,f532,f542,f541,f540,f539,f546,f545,f544,f543,f555,f554,f553,f586,f551,f550,f549,f559,f558,f557,f556,f563,f562,f561,f560,f585,f616,f617,f620,f621,f622,f623,f624,f625,f626,f627,f628,f629,f630,f631,f632,f633,f634,f635,f636,f637,f433,f432,f426,f425,f424,f367,f366,f345,f344,f343,f339,f338,f657,f664,f665,f668,f673,f676,f681,f682,f684,f691,f695,f696,f699,f705,f706,f710,f713,f716,f746,f792,f801,f800,f811,f809,f827,f833,f843,f846,f851,f855,f863,f869,f892,f899,f905,f928,f935,f941,f961,f1101,f1100,f1099,f1098,f1097,f1096,f1095,f1092,f1091,f1087,f1084,f1083,f1080,f1079,f1075,f1063,f1062,f1061,f1057,f1056,f1052,f1051,f1050,f1047,f1043,f1041,f1039,f1038,f1035,f1034,f1033,f1032,f1031,f1027,f1026,f1021,f1020,f1017,f1016,f1012,f1005,f1004,f1003,f1002,f1001,f1000,f999,f998,f995,f994,f990,f989,f986,f985,f981,f980,f979,f976,f975,f974,f973,f971,f970,f969,f967,f1117,f1132,f1315,f1314,f1313,f1312,f1311,f1310,f1309,f1306,f1305,f1301,f1298,f1297,f1294,f1293,f1289,f1277,f1276,f1275,f1271,f1270,f1266,f1265,f1264,f1261,f1257,f1255,f1253,f1252,f1249,f1248,f1247,f1246,f1245,f1241,f1240,f1235,f1234,f1231,f1230,f1226,f1219,f1218,f1217,f1216,f1215,f1214,f1213,f1212,f1209,f1208,f1204,f1203,f1200,f1199,f1195,f1194,f1193,f1190,f1189,f1188,f1187,f1185,f1184,f1183,f1182,f1181,f1368,f1410,f1430,f1443,f1459,f1467,f1469,f1470,f1477,f1478,f1483,f1487,f1486,f1503,f1527,f1537,f1580,f1586,f1591,f1598,f1608,f1643,f1642,f1641,f1640,f1644,f1645,f1654,f1655,f1656,f1657,f1658,f1659,f1660,f1661,f1662,f1663,f1664,f1665,f1666,f1667,f1668,f1669,f1670,f1671,f1673,f1674,f1684,f1754,f1817,f1846,f1895,f1900,f1880,f1921,f1928,f2023,f2024,f2026,f2027,f2029,f2030,f2032,f2060,f2107,f2106,f2105,f2104,f2116,f2117,f2118,f2119,f2128,f2129,f2130,f2131,f2132,f2133,f2134,f2135,f2136,f2137,f2138,f2139,f2140,f2141,f2142,f2143,f2144,f2145,f2147,f2148,f2149,f2161,f2247,f2248,f2196,f2199,f2252,f2253,f2237,f2276,f2362,f2363,f2388,f2405,f2403,f2423,f2436,f2446,f2447,f2452,f2451,f2449,f2465,f2479,f2480,f2540,f2483,f2484,f2541,f2542,f2487,f2499,f2500,f2501,f2502,f2503,f2504,f2505,f2506,f2507,f2508,f2509,f2510,f2511,f2512,f2513,f2516,f2537,f2538,f2539,f2545,f2573,f2597,f2598,f2667,f2670,f2608,f2612,f2613,f2620,f2621,f2622,f2623,f2624,f2625,f2626,f2627,f2628,f2629,f2630,f2631,f2632,f2633,f2634,f2637,f2660,f2661,f2662,f2740,f2741,f2742,f2746,f2827,f2830,f2754,f2755,f2756,f2757,f2758,f2759,f2760,f2832,f2762,f2763,f2764,f2768,f2769,f2777,f2778,f2779,f2780,f2781,f2782,f2783,f2784,f2833,f2786,f2787,f2788,f2789,f2790,f2791,f2792,f2795,f2820,f2821,f2822,f2963,f2890,f2966,f2969,f2898,f2899,f2900,f2904,f2905,f2913,f2915,f2916,f2917,f2918,f2919,f2920,f2921,f2922,f2923,f2924,f2925,f2926,f2927,f2928,f2929,f2930,f2933,f2960,f2961,f2962,f3005,f3060,f3061,f4802,f4810,f4900,f4870,f4912,f4921,f4922,f5030,f4924,f4925,f4926,f5045,f5057,f5021,f5363,f5366,f5372,f5401,f5409,f5538,f5475,f5574,f5575,f5590,f5600,f5601,f5677,f5678,f5679,f5681,f5682,f5683,f5684,f5685,f5754,f6113,f6117,f6120,f6123,f6126,f6129,f6132,f6135,f6138,f6141,f6144,f6147,f6150,f6153,f6156,f6159,f6162,f6165,f5789,f5790,f5791,f6167,f6168,f6169,f6170,f6171,f6172,f6173,f6174,f6175,f6176,f6177,f6178,f6179,f6180,f6181,f6182,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6193,f6194,f6195,f6196,f6197,f6198,f6199,f6200,f6201,f5852,f5853,f5854,f5856,f5857,f5858,f5859,f5860,f6209,f6211,f6213,f6215,f6217,f6219,f6221,f6223,f6225,f6227,f6229,f6231,f6233,f6235,f6237,f6239,f6241,f6243,f6115,f6502,f6522,f6526,f6539,f6541,f6543,f6545,f6547,f6549,f6551,f6553,f6555,f6557,f6559,f6561,f6563,f6565,f6567,f6569,f6571,f6573,f6575,f6577,f6584,f6590,f6596,f6614,f6620,f6626,f6639,f6641,f6643,f6645,f6647,f6649,f6651,f6653,f6655,f6657,f6659,f6661,f6663,f6665,f6667,f6669,f6671,f6673])).
fof(f6672,plain,(
  $false | $spl10),
  inference(global_subsumption,[],[f329,f328,f330,f602,f337,f341,f346,f357,f356,f361,f360,f365,f364,f406,f405,f412,f410,f415,f414,f413,f416,f417,f418,f419,f423,f420,f429,f428,f427,f431,f430,f440,f439,f603,f458,f455,f454,f453,f464,f463,f470,f469,f471,f473,f472,f498,f497,f496,f495,f494,f493,f492,f502,f501,f500,f499,f506,f505,f504,f503,f510,f509,f508,f507,f514,f513,f512,f511,f588,f518,f517,f516,f515,f525,f524,f523,f522,f531,f528,f527,f526,f538,f537,f536,f587,f534,f533,f532,f542,f541,f540,f539,f546,f545,f544,f543,f555,f554,f553,f586,f551,f550,f549,f559,f558,f557,f556,f563,f562,f561,f560,f585,f616,f617,f620,f621,f622,f623,f624,f625,f626,f627,f628,f629,f630,f631,f632,f633,f634,f635,f636,f637,f433,f432,f426,f425,f424,f367,f366,f345,f344,f343,f339,f338,f657,f664,f665,f668,f673,f676,f681,f682,f684,f691,f695,f696,f699,f705,f706,f710,f713,f716,f746,f792,f801,f800,f811,f809,f827,f833,f843,f846,f851,f855,f863,f869,f892,f899,f905,f928,f935,f941,f961,f1101,f1100,f1099,f1098,f1097,f1096,f1095,f1092,f1091,f1087,f1084,f1083,f1080,f1079,f1075,f1063,f1062,f1061,f1057,f1056,f1052,f1051,f1050,f1047,f1043,f1041,f1039,f1038,f1035,f1034,f1033,f1032,f1031,f1027,f1026,f1021,f1020,f1017,f1016,f1012,f1005,f1004,f1003,f1002,f1001,f1000,f999,f998,f995,f994,f990,f989,f986,f985,f981,f980,f979,f976,f975,f974,f973,f971,f970,f969,f967,f1117,f1132,f1315,f1314,f1313,f1312,f1311,f1310,f1309,f1306,f1305,f1301,f1298,f1297,f1294,f1293,f1289,f1277,f1276,f1275,f1271,f1270,f1266,f1265,f1264,f1261,f1257,f1255,f1253,f1252,f1249,f1248,f1247,f1246,f1245,f1241,f1240,f1235,f1234,f1231,f1230,f1226,f1219,f1218,f1217,f1216,f1215,f1214,f1213,f1212,f1209,f1208,f1204,f1203,f1200,f1199,f1195,f1194,f1193,f1190,f1189,f1188,f1187,f1185,f1184,f1183,f1182,f1181,f1368,f1410,f1430,f1443,f1459,f1467,f1469,f1470,f1477,f1478,f1483,f1487,f1486,f1503,f1527,f1537,f1580,f1586,f1591,f1598,f1608,f1643,f1642,f1641,f1640,f1644,f1645,f1654,f1655,f1656,f1657,f1658,f1659,f1660,f1661,f1662,f1663,f1664,f1665,f1666,f1667,f1668,f1669,f1670,f1671,f1673,f1674,f1684,f1754,f1817,f1846,f1895,f1900,f1880,f1921,f1928,f2023,f2024,f2026,f2027,f2029,f2030,f2032,f2060,f2107,f2106,f2105,f2104,f2116,f2117,f2118,f2119,f2128,f2129,f2130,f2131,f2132,f2133,f2134,f2135,f2136,f2137,f2138,f2139,f2140,f2141,f2142,f2143,f2144,f2145,f2147,f2148,f2149,f2161,f2247,f2248,f2196,f2199,f2252,f2253,f2237,f2276,f2362,f2363,f2388,f2405,f2403,f2423,f2436,f2446,f2447,f2452,f2451,f2449,f2465,f2479,f2480,f2540,f2483,f2484,f2541,f2542,f2487,f2499,f2500,f2501,f2502,f2503,f2504,f2505,f2506,f2507,f2508,f2509,f2510,f2511,f2512,f2513,f2516,f2537,f2538,f2539,f2545,f2573,f2597,f2598,f2667,f2670,f2608,f2612,f2613,f2620,f2621,f2622,f2623,f2624,f2625,f2626,f2627,f2628,f2629,f2630,f2631,f2632,f2633,f2634,f2637,f2660,f2661,f2662,f2740,f2741,f2742,f2746,f2827,f2830,f2754,f2755,f2756,f2757,f2758,f2759,f2760,f2832,f2762,f2763,f2764,f2768,f2769,f2777,f2778,f2779,f2780,f2781,f2782,f2783,f2784,f2833,f2786,f2787,f2788,f2789,f2790,f2791,f2792,f2795,f2820,f2821,f2822,f2963,f2890,f2966,f2969,f2898,f2899,f2900,f2904,f2905,f2913,f2915,f2916,f2917,f2918,f2919,f2920,f2921,f2922,f2923,f2924,f2925,f2926,f2927,f2928,f2929,f2930,f2933,f2960,f2961,f2962,f3005,f3060,f3061,f4802,f4810,f4900,f4870,f4912,f4921,f4922,f5030,f4924,f4925,f4926,f5045,f5057,f5021,f5363,f5366,f5372,f5401,f5409,f5538,f5475,f5574,f5575,f5590,f5600,f5601,f5677,f5678,f5679,f5681,f5682,f5683,f5684,f5685,f5754,f6113,f6117,f6120,f6123,f6126,f6129,f6132,f6135,f6138,f6141,f6144,f6147,f6150,f6153,f6156,f6159,f6162,f6165,f5789,f5790,f5791,f6167,f6168,f6169,f6170,f6171,f6172,f6173,f6174,f6175,f6176,f6177,f6178,f6179,f6180,f6181,f6182,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6193,f6194,f6195,f6196,f6197,f6198,f6199,f6200,f6201,f5852,f5853,f5854,f5856,f5857,f5858,f5859,f5860,f6209,f6211,f6213,f6215,f6217,f6219,f6221,f6223,f6225,f6227,f6229,f6231,f6233,f6235,f6237,f6239,f6241,f6243,f6115,f6502,f6522,f6526,f6539,f6541,f6543,f6545,f6547,f6549,f6551,f6553,f6555,f6557,f6559,f6561,f6563,f6565,f6567,f6569,f6571,f6573,f6575,f6577,f6584,f6590,f6596,f6614,f6620,f6626,f6639,f6641,f6643,f6645,f6647,f6649,f6651,f6653,f6655,f6657,f6659,f6661,f6663,f6665,f6667,f6669,f6671])).
fof(f6670,plain,(
  $false | $spl10),
  inference(global_subsumption,[],[f329,f328,f330,f602,f337,f341,f346,f357,f356,f361,f360,f365,f364,f406,f405,f412,f410,f415,f414,f413,f416,f417,f418,f419,f423,f420,f429,f428,f427,f431,f430,f440,f439,f603,f458,f455,f454,f453,f464,f463,f470,f469,f471,f473,f472,f498,f497,f496,f495,f494,f493,f492,f502,f501,f500,f499,f506,f505,f504,f503,f510,f509,f508,f507,f514,f513,f512,f511,f588,f518,f517,f516,f515,f525,f524,f523,f522,f531,f528,f527,f526,f538,f537,f536,f587,f534,f533,f532,f542,f541,f540,f539,f546,f545,f544,f543,f555,f554,f553,f586,f551,f550,f549,f559,f558,f557,f556,f563,f562,f561,f560,f585,f616,f617,f620,f621,f622,f623,f624,f625,f626,f627,f628,f629,f630,f631,f632,f633,f634,f635,f636,f637,f433,f432,f426,f425,f424,f367,f366,f345,f344,f343,f339,f338,f657,f664,f665,f668,f673,f676,f681,f682,f684,f691,f695,f696,f699,f705,f706,f710,f713,f716,f746,f792,f801,f800,f811,f809,f827,f833,f843,f846,f851,f855,f863,f869,f892,f899,f905,f928,f935,f941,f961,f1101,f1100,f1099,f1098,f1097,f1096,f1095,f1092,f1091,f1087,f1084,f1083,f1080,f1079,f1075,f1063,f1062,f1061,f1057,f1056,f1052,f1051,f1050,f1047,f1043,f1041,f1039,f1038,f1035,f1034,f1033,f1032,f1031,f1027,f1026,f1021,f1020,f1017,f1016,f1012,f1005,f1004,f1003,f1002,f1001,f1000,f999,f998,f995,f994,f990,f989,f986,f985,f981,f980,f979,f976,f975,f974,f973,f971,f970,f969,f967,f1117,f1132,f1315,f1314,f1313,f1312,f1311,f1310,f1309,f1306,f1305,f1301,f1298,f1297,f1294,f1293,f1289,f1277,f1276,f1275,f1271,f1270,f1266,f1265,f1264,f1261,f1257,f1255,f1253,f1252,f1249,f1248,f1247,f1246,f1245,f1241,f1240,f1235,f1234,f1231,f1230,f1226,f1219,f1218,f1217,f1216,f1215,f1214,f1213,f1212,f1209,f1208,f1204,f1203,f1200,f1199,f1195,f1194,f1193,f1190,f1189,f1188,f1187,f1185,f1184,f1183,f1182,f1181,f1368,f1410,f1430,f1443,f1459,f1467,f1469,f1470,f1477,f1478,f1483,f1487,f1486,f1503,f1527,f1537,f1580,f1586,f1591,f1598,f1608,f1643,f1642,f1641,f1640,f1644,f1645,f1654,f1655,f1656,f1657,f1658,f1659,f1660,f1661,f1662,f1663,f1664,f1665,f1666,f1667,f1668,f1669,f1670,f1671,f1673,f1674,f1684,f1754,f1817,f1846,f1895,f1900,f1880,f1921,f1928,f2023,f2024,f2026,f2027,f2029,f2030,f2032,f2060,f2107,f2106,f2105,f2104,f2116,f2117,f2118,f2119,f2128,f2129,f2130,f2131,f2132,f2133,f2134,f2135,f2136,f2137,f2138,f2139,f2140,f2141,f2142,f2143,f2144,f2145,f2147,f2148,f2149,f2161,f2247,f2248,f2196,f2199,f2252,f2253,f2237,f2276,f2362,f2363,f2388,f2405,f2403,f2423,f2436,f2446,f2447,f2452,f2451,f2449,f2465,f2479,f2480,f2540,f2483,f2484,f2541,f2542,f2487,f2499,f2500,f2501,f2502,f2503,f2504,f2505,f2506,f2507,f2508,f2509,f2510,f2511,f2512,f2513,f2516,f2537,f2538,f2539,f2545,f2573,f2597,f2598,f2667,f2670,f2608,f2612,f2613,f2620,f2621,f2622,f2623,f2624,f2625,f2626,f2627,f2628,f2629,f2630,f2631,f2632,f2633,f2634,f2637,f2660,f2661,f2662,f2740,f2741,f2742,f2746,f2827,f2830,f2754,f2755,f2756,f2757,f2758,f2759,f2760,f2832,f2762,f2763,f2764,f2768,f2769,f2777,f2778,f2779,f2780,f2781,f2782,f2783,f2784,f2833,f2786,f2787,f2788,f2789,f2790,f2791,f2792,f2795,f2820,f2821,f2822,f2963,f2890,f2966,f2969,f2898,f2899,f2900,f2904,f2905,f2913,f2915,f2916,f2917,f2918,f2919,f2920,f2921,f2922,f2923,f2924,f2925,f2926,f2927,f2928,f2929,f2930,f2933,f2960,f2961,f2962,f3005,f3060,f3061,f4802,f4810,f4900,f4870,f4912,f4921,f4922,f5030,f4924,f4925,f4926,f5045,f5057,f5021,f5363,f5366,f5372,f5401,f5409,f5538,f5475,f5574,f5575,f5590,f5600,f5601,f5677,f5678,f5679,f5681,f5682,f5683,f5684,f5685,f5754,f6113,f6117,f6120,f6123,f6126,f6129,f6132,f6135,f6138,f6141,f6144,f6147,f6150,f6153,f6156,f6159,f6162,f6165,f5789,f5790,f5791,f6167,f6168,f6169,f6170,f6171,f6172,f6173,f6174,f6175,f6176,f6177,f6178,f6179,f6180,f6181,f6182,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6193,f6194,f6195,f6196,f6197,f6198,f6199,f6200,f6201,f5852,f5853,f5854,f5856,f5857,f5858,f5859,f5860,f6209,f6211,f6213,f6215,f6217,f6219,f6221,f6223,f6225,f6227,f6229,f6231,f6233,f6235,f6237,f6239,f6241,f6243,f6115,f6502,f6522,f6526,f6539,f6541,f6543,f6545,f6547,f6549,f6551,f6553,f6555,f6557,f6559,f6561,f6563,f6565,f6567,f6569,f6571,f6573,f6575,f6577,f6584,f6590,f6596,f6614,f6620,f6626,f6639,f6641,f6643,f6645,f6647,f6649,f6651,f6653,f6655,f6657,f6659,f6661,f6663,f6665,f6667,f6669])).
fof(f6668,plain,(
  $false | $spl10),
  inference(global_subsumption,[],[f329,f328,f330,f602,f337,f341,f346,f357,f356,f361,f360,f365,f364,f406,f405,f412,f410,f415,f414,f413,f416,f417,f418,f419,f423,f420,f429,f428,f427,f431,f430,f440,f439,f603,f458,f455,f454,f453,f464,f463,f470,f469,f471,f473,f472,f498,f497,f496,f495,f494,f493,f492,f502,f501,f500,f499,f506,f505,f504,f503,f510,f509,f508,f507,f514,f513,f512,f511,f588,f518,f517,f516,f515,f525,f524,f523,f522,f531,f528,f527,f526,f538,f537,f536,f587,f534,f533,f532,f542,f541,f540,f539,f546,f545,f544,f543,f555,f554,f553,f586,f551,f550,f549,f559,f558,f557,f556,f563,f562,f561,f560,f585,f616,f617,f620,f621,f622,f623,f624,f625,f626,f627,f628,f629,f630,f631,f632,f633,f634,f635,f636,f637,f433,f432,f426,f425,f424,f367,f366,f345,f344,f343,f339,f338,f657,f664,f665,f668,f673,f676,f681,f682,f684,f691,f695,f696,f699,f705,f706,f710,f713,f716,f746,f792,f801,f800,f811,f809,f827,f833,f843,f846,f851,f855,f863,f869,f892,f899,f905,f928,f935,f941,f961,f1101,f1100,f1099,f1098,f1097,f1096,f1095,f1092,f1091,f1087,f1084,f1083,f1080,f1079,f1075,f1063,f1062,f1061,f1057,f1056,f1052,f1051,f1050,f1047,f1043,f1041,f1039,f1038,f1035,f1034,f1033,f1032,f1031,f1027,f1026,f1021,f1020,f1017,f1016,f1012,f1005,f1004,f1003,f1002,f1001,f1000,f999,f998,f995,f994,f990,f989,f986,f985,f981,f980,f979,f976,f975,f974,f973,f971,f970,f969,f967,f1117,f1132,f1315,f1314,f1313,f1312,f1311,f1310,f1309,f1306,f1305,f1301,f1298,f1297,f1294,f1293,f1289,f1277,f1276,f1275,f1271,f1270,f1266,f1265,f1264,f1261,f1257,f1255,f1253,f1252,f1249,f1248,f1247,f1246,f1245,f1241,f1240,f1235,f1234,f1231,f1230,f1226,f1219,f1218,f1217,f1216,f1215,f1214,f1213,f1212,f1209,f1208,f1204,f1203,f1200,f1199,f1195,f1194,f1193,f1190,f1189,f1188,f1187,f1185,f1184,f1183,f1182,f1181,f1368,f1410,f1430,f1443,f1459,f1467,f1469,f1470,f1477,f1478,f1483,f1487,f1486,f1503,f1527,f1537,f1580,f1586,f1591,f1598,f1608,f1643,f1642,f1641,f1640,f1644,f1645,f1654,f1655,f1656,f1657,f1658,f1659,f1660,f1661,f1662,f1663,f1664,f1665,f1666,f1667,f1668,f1669,f1670,f1671,f1673,f1674,f1684,f1754,f1817,f1846,f1895,f1900,f1880,f1921,f1928,f2023,f2024,f2026,f2027,f2029,f2030,f2032,f2060,f2107,f2106,f2105,f2104,f2116,f2117,f2118,f2119,f2128,f2129,f2130,f2131,f2132,f2133,f2134,f2135,f2136,f2137,f2138,f2139,f2140,f2141,f2142,f2143,f2144,f2145,f2147,f2148,f2149,f2161,f2247,f2248,f2196,f2199,f2252,f2253,f2237,f2276,f2362,f2363,f2388,f2405,f2403,f2423,f2436,f2446,f2447,f2452,f2451,f2449,f2465,f2479,f2480,f2540,f2483,f2484,f2541,f2542,f2487,f2499,f2500,f2501,f2502,f2503,f2504,f2505,f2506,f2507,f2508,f2509,f2510,f2511,f2512,f2513,f2516,f2537,f2538,f2539,f2545,f2573,f2597,f2598,f2667,f2670,f2608,f2612,f2613,f2620,f2621,f2622,f2623,f2624,f2625,f2626,f2627,f2628,f2629,f2630,f2631,f2632,f2633,f2634,f2637,f2660,f2661,f2662,f2740,f2741,f2742,f2746,f2827,f2830,f2754,f2755,f2756,f2757,f2758,f2759,f2760,f2832,f2762,f2763,f2764,f2768,f2769,f2777,f2778,f2779,f2780,f2781,f2782,f2783,f2784,f2833,f2786,f2787,f2788,f2789,f2790,f2791,f2792,f2795,f2820,f2821,f2822,f2963,f2890,f2966,f2969,f2898,f2899,f2900,f2904,f2905,f2913,f2915,f2916,f2917,f2918,f2919,f2920,f2921,f2922,f2923,f2924,f2925,f2926,f2927,f2928,f2929,f2930,f2933,f2960,f2961,f2962,f3005,f3060,f3061,f4802,f4810,f4900,f4870,f4912,f4921,f4922,f5030,f4924,f4925,f4926,f5045,f5057,f5021,f5363,f5366,f5372,f5401,f5409,f5538,f5475,f5574,f5575,f5590,f5600,f5601,f5677,f5678,f5679,f5681,f5682,f5683,f5684,f5685,f5754,f6113,f6117,f6120,f6123,f6126,f6129,f6132,f6135,f6138,f6141,f6144,f6147,f6150,f6153,f6156,f6159,f6162,f6165,f5789,f5790,f5791,f6167,f6168,f6169,f6170,f6171,f6172,f6173,f6174,f6175,f6176,f6177,f6178,f6179,f6180,f6181,f6182,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6193,f6194,f6195,f6196,f6197,f6198,f6199,f6200,f6201,f5852,f5853,f5854,f5856,f5857,f5858,f5859,f5860,f6209,f6211,f6213,f6215,f6217,f6219,f6221,f6223,f6225,f6227,f6229,f6231,f6233,f6235,f6237,f6239,f6241,f6243,f6115,f6502,f6522,f6526,f6539,f6541,f6543,f6545,f6547,f6549,f6551,f6553,f6555,f6557,f6559,f6561,f6563,f6565,f6567,f6569,f6571,f6573,f6575,f6577,f6584,f6590,f6596,f6614,f6620,f6626,f6639,f6641,f6643,f6645,f6647,f6649,f6651,f6653,f6655,f6657,f6659,f6661,f6663,f6665,f6667])).
fof(f6666,plain,(
  $false | $spl10),
  inference(global_subsumption,[],[f329,f328,f330,f602,f337,f341,f346,f357,f356,f361,f360,f365,f364,f406,f405,f412,f410,f415,f414,f413,f416,f417,f418,f419,f423,f420,f429,f428,f427,f431,f430,f440,f439,f603,f458,f455,f454,f453,f464,f463,f470,f469,f471,f473,f472,f498,f497,f496,f495,f494,f493,f492,f502,f501,f500,f499,f506,f505,f504,f503,f510,f509,f508,f507,f514,f513,f512,f511,f588,f518,f517,f516,f515,f525,f524,f523,f522,f531,f528,f527,f526,f538,f537,f536,f587,f534,f533,f532,f542,f541,f540,f539,f546,f545,f544,f543,f555,f554,f553,f586,f551,f550,f549,f559,f558,f557,f556,f563,f562,f561,f560,f585,f616,f617,f620,f621,f622,f623,f624,f625,f626,f627,f628,f629,f630,f631,f632,f633,f634,f635,f636,f637,f433,f432,f426,f425,f424,f367,f366,f345,f344,f343,f339,f338,f657,f664,f665,f668,f673,f676,f681,f682,f684,f691,f695,f696,f699,f705,f706,f710,f713,f716,f746,f792,f801,f800,f811,f809,f827,f833,f843,f846,f851,f855,f863,f869,f892,f899,f905,f928,f935,f941,f961,f1101,f1100,f1099,f1098,f1097,f1096,f1095,f1092,f1091,f1087,f1084,f1083,f1080,f1079,f1075,f1063,f1062,f1061,f1057,f1056,f1052,f1051,f1050,f1047,f1043,f1041,f1039,f1038,f1035,f1034,f1033,f1032,f1031,f1027,f1026,f1021,f1020,f1017,f1016,f1012,f1005,f1004,f1003,f1002,f1001,f1000,f999,f998,f995,f994,f990,f989,f986,f985,f981,f980,f979,f976,f975,f974,f973,f971,f970,f969,f967,f1117,f1132,f1315,f1314,f1313,f1312,f1311,f1310,f1309,f1306,f1305,f1301,f1298,f1297,f1294,f1293,f1289,f1277,f1276,f1275,f1271,f1270,f1266,f1265,f1264,f1261,f1257,f1255,f1253,f1252,f1249,f1248,f1247,f1246,f1245,f1241,f1240,f1235,f1234,f1231,f1230,f1226,f1219,f1218,f1217,f1216,f1215,f1214,f1213,f1212,f1209,f1208,f1204,f1203,f1200,f1199,f1195,f1194,f1193,f1190,f1189,f1188,f1187,f1185,f1184,f1183,f1182,f1181,f1368,f1410,f1430,f1443,f1459,f1467,f1469,f1470,f1477,f1478,f1483,f1487,f1486,f1503,f1527,f1537,f1580,f1586,f1591,f1598,f1608,f1643,f1642,f1641,f1640,f1644,f1645,f1654,f1655,f1656,f1657,f1658,f1659,f1660,f1661,f1662,f1663,f1664,f1665,f1666,f1667,f1668,f1669,f1670,f1671,f1673,f1674,f1684,f1754,f1817,f1846,f1895,f1900,f1880,f1921,f1928,f2023,f2024,f2026,f2027,f2029,f2030,f2032,f2060,f2107,f2106,f2105,f2104,f2116,f2117,f2118,f2119,f2128,f2129,f2130,f2131,f2132,f2133,f2134,f2135,f2136,f2137,f2138,f2139,f2140,f2141,f2142,f2143,f2144,f2145,f2147,f2148,f2149,f2161,f2247,f2248,f2196,f2199,f2252,f2253,f2237,f2276,f2362,f2363,f2388,f2405,f2403,f2423,f2436,f2446,f2447,f2452,f2451,f2449,f2465,f2479,f2480,f2540,f2483,f2484,f2541,f2542,f2487,f2499,f2500,f2501,f2502,f2503,f2504,f2505,f2506,f2507,f2508,f2509,f2510,f2511,f2512,f2513,f2516,f2537,f2538,f2539,f2545,f2573,f2597,f2598,f2667,f2670,f2608,f2612,f2613,f2620,f2621,f2622,f2623,f2624,f2625,f2626,f2627,f2628,f2629,f2630,f2631,f2632,f2633,f2634,f2637,f2660,f2661,f2662,f2740,f2741,f2742,f2746,f2827,f2830,f2754,f2755,f2756,f2757,f2758,f2759,f2760,f2832,f2762,f2763,f2764,f2768,f2769,f2777,f2778,f2779,f2780,f2781,f2782,f2783,f2784,f2833,f2786,f2787,f2788,f2789,f2790,f2791,f2792,f2795,f2820,f2821,f2822,f2963,f2890,f2966,f2969,f2898,f2899,f2900,f2904,f2905,f2913,f2915,f2916,f2917,f2918,f2919,f2920,f2921,f2922,f2923,f2924,f2925,f2926,f2927,f2928,f2929,f2930,f2933,f2960,f2961,f2962,f3005,f3060,f3061,f4802,f4810,f4900,f4870,f4912,f4921,f4922,f5030,f4924,f4925,f4926,f5045,f5057,f5021,f5363,f5366,f5372,f5401,f5409,f5538,f5475,f5574,f5575,f5590,f5600,f5601,f5677,f5678,f5679,f5681,f5682,f5683,f5684,f5685,f5754,f6113,f6117,f6120,f6123,f6126,f6129,f6132,f6135,f6138,f6141,f6144,f6147,f6150,f6153,f6156,f6159,f6162,f6165,f5789,f5790,f5791,f6167,f6168,f6169,f6170,f6171,f6172,f6173,f6174,f6175,f6176,f6177,f6178,f6179,f6180,f6181,f6182,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6193,f6194,f6195,f6196,f6197,f6198,f6199,f6200,f6201,f5852,f5853,f5854,f5856,f5857,f5858,f5859,f5860,f6209,f6211,f6213,f6215,f6217,f6219,f6221,f6223,f6225,f6227,f6229,f6231,f6233,f6235,f6237,f6239,f6241,f6243,f6115,f6502,f6522,f6526,f6539,f6541,f6543,f6545,f6547,f6549,f6551,f6553,f6555,f6557,f6559,f6561,f6563,f6565,f6567,f6569,f6571,f6573,f6575,f6577,f6584,f6590,f6596,f6614,f6620,f6626,f6639,f6641,f6643,f6645,f6647,f6649,f6651,f6653,f6655,f6657,f6659,f6661,f6663,f6665])).
fof(f6664,plain,(
  $false | $spl10),
  inference(global_subsumption,[],[f329,f328,f330,f602,f337,f341,f346,f357,f356,f361,f360,f365,f364,f406,f405,f412,f410,f415,f414,f413,f416,f417,f418,f419,f423,f420,f429,f428,f427,f431,f430,f440,f439,f603,f458,f455,f454,f453,f464,f463,f470,f469,f471,f473,f472,f498,f497,f496,f495,f494,f493,f492,f502,f501,f500,f499,f506,f505,f504,f503,f510,f509,f508,f507,f514,f513,f512,f511,f588,f518,f517,f516,f515,f525,f524,f523,f522,f531,f528,f527,f526,f538,f537,f536,f587,f534,f533,f532,f542,f541,f540,f539,f546,f545,f544,f543,f555,f554,f553,f586,f551,f550,f549,f559,f558,f557,f556,f563,f562,f561,f560,f585,f616,f617,f620,f621,f622,f623,f624,f625,f626,f627,f628,f629,f630,f631,f632,f633,f634,f635,f636,f637,f433,f432,f426,f425,f424,f367,f366,f345,f344,f343,f339,f338,f657,f664,f665,f668,f673,f676,f681,f682,f684,f691,f695,f696,f699,f705,f706,f710,f713,f716,f746,f792,f801,f800,f811,f809,f827,f833,f843,f846,f851,f855,f863,f869,f892,f899,f905,f928,f935,f941,f961,f1101,f1100,f1099,f1098,f1097,f1096,f1095,f1092,f1091,f1087,f1084,f1083,f1080,f1079,f1075,f1063,f1062,f1061,f1057,f1056,f1052,f1051,f1050,f1047,f1043,f1041,f1039,f1038,f1035,f1034,f1033,f1032,f1031,f1027,f1026,f1021,f1020,f1017,f1016,f1012,f1005,f1004,f1003,f1002,f1001,f1000,f999,f998,f995,f994,f990,f989,f986,f985,f981,f980,f979,f976,f975,f974,f973,f971,f970,f969,f967,f1117,f1132,f1315,f1314,f1313,f1312,f1311,f1310,f1309,f1306,f1305,f1301,f1298,f1297,f1294,f1293,f1289,f1277,f1276,f1275,f1271,f1270,f1266,f1265,f1264,f1261,f1257,f1255,f1253,f1252,f1249,f1248,f1247,f1246,f1245,f1241,f1240,f1235,f1234,f1231,f1230,f1226,f1219,f1218,f1217,f1216,f1215,f1214,f1213,f1212,f1209,f1208,f1204,f1203,f1200,f1199,f1195,f1194,f1193,f1190,f1189,f1188,f1187,f1185,f1184,f1183,f1182,f1181,f1368,f1410,f1430,f1443,f1459,f1467,f1469,f1470,f1477,f1478,f1483,f1487,f1486,f1503,f1527,f1537,f1580,f1586,f1591,f1598,f1608,f1643,f1642,f1641,f1640,f1644,f1645,f1654,f1655,f1656,f1657,f1658,f1659,f1660,f1661,f1662,f1663,f1664,f1665,f1666,f1667,f1668,f1669,f1670,f1671,f1673,f1674,f1684,f1754,f1817,f1846,f1895,f1900,f1880,f1921,f1928,f2023,f2024,f2026,f2027,f2029,f2030,f2032,f2060,f2107,f2106,f2105,f2104,f2116,f2117,f2118,f2119,f2128,f2129,f2130,f2131,f2132,f2133,f2134,f2135,f2136,f2137,f2138,f2139,f2140,f2141,f2142,f2143,f2144,f2145,f2147,f2148,f2149,f2161,f2247,f2248,f2196,f2199,f2252,f2253,f2237,f2276,f2362,f2363,f2388,f2405,f2403,f2423,f2436,f2446,f2447,f2452,f2451,f2449,f2465,f2479,f2480,f2540,f2483,f2484,f2541,f2542,f2487,f2499,f2500,f2501,f2502,f2503,f2504,f2505,f2506,f2507,f2508,f2509,f2510,f2511,f2512,f2513,f2516,f2537,f2538,f2539,f2545,f2573,f2597,f2598,f2667,f2670,f2608,f2612,f2613,f2620,f2621,f2622,f2623,f2624,f2625,f2626,f2627,f2628,f2629,f2630,f2631,f2632,f2633,f2634,f2637,f2660,f2661,f2662,f2740,f2741,f2742,f2746,f2827,f2830,f2754,f2755,f2756,f2757,f2758,f2759,f2760,f2832,f2762,f2763,f2764,f2768,f2769,f2777,f2778,f2779,f2780,f2781,f2782,f2783,f2784,f2833,f2786,f2787,f2788,f2789,f2790,f2791,f2792,f2795,f2820,f2821,f2822,f2963,f2890,f2966,f2969,f2898,f2899,f2900,f2904,f2905,f2913,f2915,f2916,f2917,f2918,f2919,f2920,f2921,f2922,f2923,f2924,f2925,f2926,f2927,f2928,f2929,f2930,f2933,f2960,f2961,f2962,f3005,f3060,f3061,f4802,f4810,f4900,f4870,f4912,f4921,f4922,f5030,f4924,f4925,f4926,f5045,f5057,f5021,f5363,f5366,f5372,f5401,f5409,f5538,f5475,f5574,f5575,f5590,f5600,f5601,f5677,f5678,f5679,f5681,f5682,f5683,f5684,f5685,f5754,f6113,f6117,f6120,f6123,f6126,f6129,f6132,f6135,f6138,f6141,f6144,f6147,f6150,f6153,f6156,f6159,f6162,f6165,f5789,f5790,f5791,f6167,f6168,f6169,f6170,f6171,f6172,f6173,f6174,f6175,f6176,f6177,f6178,f6179,f6180,f6181,f6182,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6193,f6194,f6195,f6196,f6197,f6198,f6199,f6200,f6201,f5852,f5853,f5854,f5856,f5857,f5858,f5859,f5860,f6209,f6211,f6213,f6215,f6217,f6219,f6221,f6223,f6225,f6227,f6229,f6231,f6233,f6235,f6237,f6239,f6241,f6243,f6115,f6502,f6522,f6526,f6539,f6541,f6543,f6545,f6547,f6549,f6551,f6553,f6555,f6557,f6559,f6561,f6563,f6565,f6567,f6569,f6571,f6573,f6575,f6577,f6584,f6590,f6596,f6614,f6620,f6626,f6639,f6641,f6643,f6645,f6647,f6649,f6651,f6653,f6655,f6657,f6659,f6661,f6663])).
fof(f6662,plain,(
  $false | $spl10),
  inference(global_subsumption,[],[f329,f328,f330,f602,f337,f341,f346,f357,f356,f361,f360,f365,f364,f406,f405,f412,f410,f415,f414,f413,f416,f417,f418,f419,f423,f420,f429,f428,f427,f431,f430,f440,f439,f603,f458,f455,f454,f453,f464,f463,f470,f469,f471,f473,f472,f498,f497,f496,f495,f494,f493,f492,f502,f501,f500,f499,f506,f505,f504,f503,f510,f509,f508,f507,f514,f513,f512,f511,f588,f518,f517,f516,f515,f525,f524,f523,f522,f531,f528,f527,f526,f538,f537,f536,f587,f534,f533,f532,f542,f541,f540,f539,f546,f545,f544,f543,f555,f554,f553,f586,f551,f550,f549,f559,f558,f557,f556,f563,f562,f561,f560,f585,f616,f617,f620,f621,f622,f623,f624,f625,f626,f627,f628,f629,f630,f631,f632,f633,f634,f635,f636,f637,f433,f432,f426,f425,f424,f367,f366,f345,f344,f343,f339,f338,f657,f664,f665,f668,f673,f676,f681,f682,f684,f691,f695,f696,f699,f705,f706,f710,f713,f716,f746,f792,f801,f800,f811,f809,f827,f833,f843,f846,f851,f855,f863,f869,f892,f899,f905,f928,f935,f941,f961,f1101,f1100,f1099,f1098,f1097,f1096,f1095,f1092,f1091,f1087,f1084,f1083,f1080,f1079,f1075,f1063,f1062,f1061,f1057,f1056,f1052,f1051,f1050,f1047,f1043,f1041,f1039,f1038,f1035,f1034,f1033,f1032,f1031,f1027,f1026,f1021,f1020,f1017,f1016,f1012,f1005,f1004,f1003,f1002,f1001,f1000,f999,f998,f995,f994,f990,f989,f986,f985,f981,f980,f979,f976,f975,f974,f973,f971,f970,f969,f967,f1117,f1132,f1315,f1314,f1313,f1312,f1311,f1310,f1309,f1306,f1305,f1301,f1298,f1297,f1294,f1293,f1289,f1277,f1276,f1275,f1271,f1270,f1266,f1265,f1264,f1261,f1257,f1255,f1253,f1252,f1249,f1248,f1247,f1246,f1245,f1241,f1240,f1235,f1234,f1231,f1230,f1226,f1219,f1218,f1217,f1216,f1215,f1214,f1213,f1212,f1209,f1208,f1204,f1203,f1200,f1199,f1195,f1194,f1193,f1190,f1189,f1188,f1187,f1185,f1184,f1183,f1182,f1181,f1368,f1410,f1430,f1443,f1459,f1467,f1469,f1470,f1477,f1478,f1483,f1487,f1486,f1503,f1527,f1537,f1580,f1586,f1591,f1598,f1608,f1643,f1642,f1641,f1640,f1644,f1645,f1654,f1655,f1656,f1657,f1658,f1659,f1660,f1661,f1662,f1663,f1664,f1665,f1666,f1667,f1668,f1669,f1670,f1671,f1673,f1674,f1684,f1754,f1817,f1846,f1895,f1900,f1880,f1921,f1928,f2023,f2024,f2026,f2027,f2029,f2030,f2032,f2060,f2107,f2106,f2105,f2104,f2116,f2117,f2118,f2119,f2128,f2129,f2130,f2131,f2132,f2133,f2134,f2135,f2136,f2137,f2138,f2139,f2140,f2141,f2142,f2143,f2144,f2145,f2147,f2148,f2149,f2161,f2247,f2248,f2196,f2199,f2252,f2253,f2237,f2276,f2362,f2363,f2388,f2405,f2403,f2423,f2436,f2446,f2447,f2452,f2451,f2449,f2465,f2479,f2480,f2540,f2483,f2484,f2541,f2542,f2487,f2499,f2500,f2501,f2502,f2503,f2504,f2505,f2506,f2507,f2508,f2509,f2510,f2511,f2512,f2513,f2516,f2537,f2538,f2539,f2545,f2573,f2597,f2598,f2667,f2670,f2608,f2612,f2613,f2620,f2621,f2622,f2623,f2624,f2625,f2626,f2627,f2628,f2629,f2630,f2631,f2632,f2633,f2634,f2637,f2660,f2661,f2662,f2740,f2741,f2742,f2746,f2827,f2830,f2754,f2755,f2756,f2757,f2758,f2759,f2760,f2832,f2762,f2763,f2764,f2768,f2769,f2777,f2778,f2779,f2780,f2781,f2782,f2783,f2784,f2833,f2786,f2787,f2788,f2789,f2790,f2791,f2792,f2795,f2820,f2821,f2822,f2963,f2890,f2966,f2969,f2898,f2899,f2900,f2904,f2905,f2913,f2915,f2916,f2917,f2918,f2919,f2920,f2921,f2922,f2923,f2924,f2925,f2926,f2927,f2928,f2929,f2930,f2933,f2960,f2961,f2962,f3005,f3060,f3061,f4802,f4810,f4900,f4870,f4912,f4921,f4922,f5030,f4924,f4925,f4926,f5045,f5057,f5021,f5363,f5366,f5372,f5401,f5409,f5538,f5475,f5574,f5575,f5590,f5600,f5601,f5677,f5678,f5679,f5681,f5682,f5683,f5684,f5685,f5754,f6113,f6117,f6120,f6123,f6126,f6129,f6132,f6135,f6138,f6141,f6144,f6147,f6150,f6153,f6156,f6159,f6162,f6165,f5789,f5790,f5791,f6167,f6168,f6169,f6170,f6171,f6172,f6173,f6174,f6175,f6176,f6177,f6178,f6179,f6180,f6181,f6182,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6193,f6194,f6195,f6196,f6197,f6198,f6199,f6200,f6201,f5852,f5853,f5854,f5856,f5857,f5858,f5859,f5860,f6209,f6211,f6213,f6215,f6217,f6219,f6221,f6223,f6225,f6227,f6229,f6231,f6233,f6235,f6237,f6239,f6241,f6243,f6115,f6502,f6522,f6526,f6539,f6541,f6543,f6545,f6547,f6549,f6551,f6553,f6555,f6557,f6559,f6561,f6563,f6565,f6567,f6569,f6571,f6573,f6575,f6577,f6584,f6590,f6596,f6614,f6620,f6626,f6639,f6641,f6643,f6645,f6647,f6649,f6651,f6653,f6655,f6657,f6659,f6661])).
fof(f6660,plain,(
  $false | $spl10),
  inference(global_subsumption,[],[f329,f328,f330,f602,f337,f341,f346,f357,f356,f361,f360,f365,f364,f406,f405,f412,f410,f415,f414,f413,f416,f417,f418,f419,f423,f420,f429,f428,f427,f431,f430,f440,f439,f603,f458,f455,f454,f453,f464,f463,f470,f469,f471,f473,f472,f498,f497,f496,f495,f494,f493,f492,f502,f501,f500,f499,f506,f505,f504,f503,f510,f509,f508,f507,f514,f513,f512,f511,f588,f518,f517,f516,f515,f525,f524,f523,f522,f531,f528,f527,f526,f538,f537,f536,f587,f534,f533,f532,f542,f541,f540,f539,f546,f545,f544,f543,f555,f554,f553,f586,f551,f550,f549,f559,f558,f557,f556,f563,f562,f561,f560,f585,f616,f617,f620,f621,f622,f623,f624,f625,f626,f627,f628,f629,f630,f631,f632,f633,f634,f635,f636,f637,f433,f432,f426,f425,f424,f367,f366,f345,f344,f343,f339,f338,f657,f664,f665,f668,f673,f676,f681,f682,f684,f691,f695,f696,f699,f705,f706,f710,f713,f716,f746,f792,f801,f800,f811,f809,f827,f833,f843,f846,f851,f855,f863,f869,f892,f899,f905,f928,f935,f941,f961,f1101,f1100,f1099,f1098,f1097,f1096,f1095,f1092,f1091,f1087,f1084,f1083,f1080,f1079,f1075,f1063,f1062,f1061,f1057,f1056,f1052,f1051,f1050,f1047,f1043,f1041,f1039,f1038,f1035,f1034,f1033,f1032,f1031,f1027,f1026,f1021,f1020,f1017,f1016,f1012,f1005,f1004,f1003,f1002,f1001,f1000,f999,f998,f995,f994,f990,f989,f986,f985,f981,f980,f979,f976,f975,f974,f973,f971,f970,f969,f967,f1117,f1132,f1315,f1314,f1313,f1312,f1311,f1310,f1309,f1306,f1305,f1301,f1298,f1297,f1294,f1293,f1289,f1277,f1276,f1275,f1271,f1270,f1266,f1265,f1264,f1261,f1257,f1255,f1253,f1252,f1249,f1248,f1247,f1246,f1245,f1241,f1240,f1235,f1234,f1231,f1230,f1226,f1219,f1218,f1217,f1216,f1215,f1214,f1213,f1212,f1209,f1208,f1204,f1203,f1200,f1199,f1195,f1194,f1193,f1190,f1189,f1188,f1187,f1185,f1184,f1183,f1182,f1181,f1368,f1410,f1430,f1443,f1459,f1467,f1469,f1470,f1477,f1478,f1483,f1487,f1486,f1503,f1527,f1537,f1580,f1586,f1591,f1598,f1608,f1643,f1642,f1641,f1640,f1644,f1645,f1654,f1655,f1656,f1657,f1658,f1659,f1660,f1661,f1662,f1663,f1664,f1665,f1666,f1667,f1668,f1669,f1670,f1671,f1673,f1674,f1684,f1754,f1817,f1846,f1895,f1900,f1880,f1921,f1928,f2023,f2024,f2026,f2027,f2029,f2030,f2032,f2060,f2107,f2106,f2105,f2104,f2116,f2117,f2118,f2119,f2128,f2129,f2130,f2131,f2132,f2133,f2134,f2135,f2136,f2137,f2138,f2139,f2140,f2141,f2142,f2143,f2144,f2145,f2147,f2148,f2149,f2161,f2247,f2248,f2196,f2199,f2252,f2253,f2237,f2276,f2362,f2363,f2388,f2405,f2403,f2423,f2436,f2446,f2447,f2452,f2451,f2449,f2465,f2479,f2480,f2540,f2483,f2484,f2541,f2542,f2487,f2499,f2500,f2501,f2502,f2503,f2504,f2505,f2506,f2507,f2508,f2509,f2510,f2511,f2512,f2513,f2516,f2537,f2538,f2539,f2545,f2573,f2597,f2598,f2667,f2670,f2608,f2612,f2613,f2620,f2621,f2622,f2623,f2624,f2625,f2626,f2627,f2628,f2629,f2630,f2631,f2632,f2633,f2634,f2637,f2660,f2661,f2662,f2740,f2741,f2742,f2746,f2827,f2830,f2754,f2755,f2756,f2757,f2758,f2759,f2760,f2832,f2762,f2763,f2764,f2768,f2769,f2777,f2778,f2779,f2780,f2781,f2782,f2783,f2784,f2833,f2786,f2787,f2788,f2789,f2790,f2791,f2792,f2795,f2820,f2821,f2822,f2963,f2890,f2966,f2969,f2898,f2899,f2900,f2904,f2905,f2913,f2915,f2916,f2917,f2918,f2919,f2920,f2921,f2922,f2923,f2924,f2925,f2926,f2927,f2928,f2929,f2930,f2933,f2960,f2961,f2962,f3005,f3060,f3061,f4802,f4810,f4900,f4870,f4912,f4921,f4922,f5030,f4924,f4925,f4926,f5045,f5057,f5021,f5363,f5366,f5372,f5401,f5409,f5538,f5475,f5574,f5575,f5590,f5600,f5601,f5677,f5678,f5679,f5681,f5682,f5683,f5684,f5685,f5754,f6113,f6117,f6120,f6123,f6126,f6129,f6132,f6135,f6138,f6141,f6144,f6147,f6150,f6153,f6156,f6159,f6162,f6165,f5789,f5790,f5791,f6167,f6168,f6169,f6170,f6171,f6172,f6173,f6174,f6175,f6176,f6177,f6178,f6179,f6180,f6181,f6182,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6193,f6194,f6195,f6196,f6197,f6198,f6199,f6200,f6201,f5852,f5853,f5854,f5856,f5857,f5858,f5859,f5860,f6209,f6211,f6213,f6215,f6217,f6219,f6221,f6223,f6225,f6227,f6229,f6231,f6233,f6235,f6237,f6239,f6241,f6243,f6115,f6502,f6522,f6526,f6539,f6541,f6543,f6545,f6547,f6549,f6551,f6553,f6555,f6557,f6559,f6561,f6563,f6565,f6567,f6569,f6571,f6573,f6575,f6577,f6584,f6590,f6596,f6614,f6620,f6626,f6639,f6641,f6643,f6645,f6647,f6649,f6651,f6653,f6655,f6657,f6659])).
fof(f6658,plain,(
  $false | $spl10),
  inference(global_subsumption,[],[f329,f328,f330,f602,f337,f341,f346,f357,f356,f361,f360,f365,f364,f406,f405,f412,f410,f415,f414,f413,f416,f417,f418,f419,f423,f420,f429,f428,f427,f431,f430,f440,f439,f603,f458,f455,f454,f453,f464,f463,f470,f469,f471,f473,f472,f498,f497,f496,f495,f494,f493,f492,f502,f501,f500,f499,f506,f505,f504,f503,f510,f509,f508,f507,f514,f513,f512,f511,f588,f518,f517,f516,f515,f525,f524,f523,f522,f531,f528,f527,f526,f538,f537,f536,f587,f534,f533,f532,f542,f541,f540,f539,f546,f545,f544,f543,f555,f554,f553,f586,f551,f550,f549,f559,f558,f557,f556,f563,f562,f561,f560,f585,f616,f617,f620,f621,f622,f623,f624,f625,f626,f627,f628,f629,f630,f631,f632,f633,f634,f635,f636,f637,f433,f432,f426,f425,f424,f367,f366,f345,f344,f343,f339,f338,f657,f664,f665,f668,f673,f676,f681,f682,f684,f691,f695,f696,f699,f705,f706,f710,f713,f716,f746,f792,f801,f800,f811,f809,f827,f833,f843,f846,f851,f855,f863,f869,f892,f899,f905,f928,f935,f941,f961,f1101,f1100,f1099,f1098,f1097,f1096,f1095,f1092,f1091,f1087,f1084,f1083,f1080,f1079,f1075,f1063,f1062,f1061,f1057,f1056,f1052,f1051,f1050,f1047,f1043,f1041,f1039,f1038,f1035,f1034,f1033,f1032,f1031,f1027,f1026,f1021,f1020,f1017,f1016,f1012,f1005,f1004,f1003,f1002,f1001,f1000,f999,f998,f995,f994,f990,f989,f986,f985,f981,f980,f979,f976,f975,f974,f973,f971,f970,f969,f967,f1117,f1132,f1315,f1314,f1313,f1312,f1311,f1310,f1309,f1306,f1305,f1301,f1298,f1297,f1294,f1293,f1289,f1277,f1276,f1275,f1271,f1270,f1266,f1265,f1264,f1261,f1257,f1255,f1253,f1252,f1249,f1248,f1247,f1246,f1245,f1241,f1240,f1235,f1234,f1231,f1230,f1226,f1219,f1218,f1217,f1216,f1215,f1214,f1213,f1212,f1209,f1208,f1204,f1203,f1200,f1199,f1195,f1194,f1193,f1190,f1189,f1188,f1187,f1185,f1184,f1183,f1182,f1181,f1368,f1410,f1430,f1443,f1459,f1467,f1469,f1470,f1477,f1478,f1483,f1487,f1486,f1503,f1527,f1537,f1580,f1586,f1591,f1598,f1608,f1643,f1642,f1641,f1640,f1644,f1645,f1654,f1655,f1656,f1657,f1658,f1659,f1660,f1661,f1662,f1663,f1664,f1665,f1666,f1667,f1668,f1669,f1670,f1671,f1673,f1674,f1684,f1754,f1817,f1846,f1895,f1900,f1880,f1921,f1928,f2023,f2024,f2026,f2027,f2029,f2030,f2032,f2060,f2107,f2106,f2105,f2104,f2116,f2117,f2118,f2119,f2128,f2129,f2130,f2131,f2132,f2133,f2134,f2135,f2136,f2137,f2138,f2139,f2140,f2141,f2142,f2143,f2144,f2145,f2147,f2148,f2149,f2161,f2247,f2248,f2196,f2199,f2252,f2253,f2237,f2276,f2362,f2363,f2388,f2405,f2403,f2423,f2436,f2446,f2447,f2452,f2451,f2449,f2465,f2479,f2480,f2540,f2483,f2484,f2541,f2542,f2487,f2499,f2500,f2501,f2502,f2503,f2504,f2505,f2506,f2507,f2508,f2509,f2510,f2511,f2512,f2513,f2516,f2537,f2538,f2539,f2545,f2573,f2597,f2598,f2667,f2670,f2608,f2612,f2613,f2620,f2621,f2622,f2623,f2624,f2625,f2626,f2627,f2628,f2629,f2630,f2631,f2632,f2633,f2634,f2637,f2660,f2661,f2662,f2740,f2741,f2742,f2746,f2827,f2830,f2754,f2755,f2756,f2757,f2758,f2759,f2760,f2832,f2762,f2763,f2764,f2768,f2769,f2777,f2778,f2779,f2780,f2781,f2782,f2783,f2784,f2833,f2786,f2787,f2788,f2789,f2790,f2791,f2792,f2795,f2820,f2821,f2822,f2963,f2890,f2966,f2969,f2898,f2899,f2900,f2904,f2905,f2913,f2915,f2916,f2917,f2918,f2919,f2920,f2921,f2922,f2923,f2924,f2925,f2926,f2927,f2928,f2929,f2930,f2933,f2960,f2961,f2962,f3005,f3060,f3061,f4802,f4810,f4900,f4870,f4912,f4921,f4922,f5030,f4924,f4925,f4926,f5045,f5057,f5021,f5363,f5366,f5372,f5401,f5409,f5538,f5475,f5574,f5575,f5590,f5600,f5601,f5677,f5678,f5679,f5681,f5682,f5683,f5684,f5685,f5754,f6113,f6117,f6120,f6123,f6126,f6129,f6132,f6135,f6138,f6141,f6144,f6147,f6150,f6153,f6156,f6159,f6162,f6165,f5789,f5790,f5791,f6167,f6168,f6169,f6170,f6171,f6172,f6173,f6174,f6175,f6176,f6177,f6178,f6179,f6180,f6181,f6182,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6193,f6194,f6195,f6196,f6197,f6198,f6199,f6200,f6201,f5852,f5853,f5854,f5856,f5857,f5858,f5859,f5860,f6209,f6211,f6213,f6215,f6217,f6219,f6221,f6223,f6225,f6227,f6229,f6231,f6233,f6235,f6237,f6239,f6241,f6243,f6115,f6502,f6522,f6526,f6539,f6541,f6543,f6545,f6547,f6549,f6551,f6553,f6555,f6557,f6559,f6561,f6563,f6565,f6567,f6569,f6571,f6573,f6575,f6577,f6584,f6590,f6596,f6614,f6620,f6626,f6639,f6641,f6643,f6645,f6647,f6649,f6651,f6653,f6655,f6657])).
fof(f6656,plain,(
  $false | $spl10),
  inference(global_subsumption,[],[f329,f328,f330,f602,f337,f341,f346,f357,f356,f361,f360,f365,f364,f406,f405,f412,f410,f415,f414,f413,f416,f417,f418,f419,f423,f420,f429,f428,f427,f431,f430,f440,f439,f603,f458,f455,f454,f453,f464,f463,f470,f469,f471,f473,f472,f498,f497,f496,f495,f494,f493,f492,f502,f501,f500,f499,f506,f505,f504,f503,f510,f509,f508,f507,f514,f513,f512,f511,f588,f518,f517,f516,f515,f525,f524,f523,f522,f531,f528,f527,f526,f538,f537,f536,f587,f534,f533,f532,f542,f541,f540,f539,f546,f545,f544,f543,f555,f554,f553,f586,f551,f550,f549,f559,f558,f557,f556,f563,f562,f561,f560,f585,f616,f617,f620,f621,f622,f623,f624,f625,f626,f627,f628,f629,f630,f631,f632,f633,f634,f635,f636,f637,f433,f432,f426,f425,f424,f367,f366,f345,f344,f343,f339,f338,f657,f664,f665,f668,f673,f676,f681,f682,f684,f691,f695,f696,f699,f705,f706,f710,f713,f716,f746,f792,f801,f800,f811,f809,f827,f833,f843,f846,f851,f855,f863,f869,f892,f899,f905,f928,f935,f941,f961,f1101,f1100,f1099,f1098,f1097,f1096,f1095,f1092,f1091,f1087,f1084,f1083,f1080,f1079,f1075,f1063,f1062,f1061,f1057,f1056,f1052,f1051,f1050,f1047,f1043,f1041,f1039,f1038,f1035,f1034,f1033,f1032,f1031,f1027,f1026,f1021,f1020,f1017,f1016,f1012,f1005,f1004,f1003,f1002,f1001,f1000,f999,f998,f995,f994,f990,f989,f986,f985,f981,f980,f979,f976,f975,f974,f973,f971,f970,f969,f967,f1117,f1132,f1315,f1314,f1313,f1312,f1311,f1310,f1309,f1306,f1305,f1301,f1298,f1297,f1294,f1293,f1289,f1277,f1276,f1275,f1271,f1270,f1266,f1265,f1264,f1261,f1257,f1255,f1253,f1252,f1249,f1248,f1247,f1246,f1245,f1241,f1240,f1235,f1234,f1231,f1230,f1226,f1219,f1218,f1217,f1216,f1215,f1214,f1213,f1212,f1209,f1208,f1204,f1203,f1200,f1199,f1195,f1194,f1193,f1190,f1189,f1188,f1187,f1185,f1184,f1183,f1182,f1181,f1368,f1410,f1430,f1443,f1459,f1467,f1469,f1470,f1477,f1478,f1483,f1487,f1486,f1503,f1527,f1537,f1580,f1586,f1591,f1598,f1608,f1643,f1642,f1641,f1640,f1644,f1645,f1654,f1655,f1656,f1657,f1658,f1659,f1660,f1661,f1662,f1663,f1664,f1665,f1666,f1667,f1668,f1669,f1670,f1671,f1673,f1674,f1684,f1754,f1817,f1846,f1895,f1900,f1880,f1921,f1928,f2023,f2024,f2026,f2027,f2029,f2030,f2032,f2060,f2107,f2106,f2105,f2104,f2116,f2117,f2118,f2119,f2128,f2129,f2130,f2131,f2132,f2133,f2134,f2135,f2136,f2137,f2138,f2139,f2140,f2141,f2142,f2143,f2144,f2145,f2147,f2148,f2149,f2161,f2247,f2248,f2196,f2199,f2252,f2253,f2237,f2276,f2362,f2363,f2388,f2405,f2403,f2423,f2436,f2446,f2447,f2452,f2451,f2449,f2465,f2479,f2480,f2540,f2483,f2484,f2541,f2542,f2487,f2499,f2500,f2501,f2502,f2503,f2504,f2505,f2506,f2507,f2508,f2509,f2510,f2511,f2512,f2513,f2516,f2537,f2538,f2539,f2545,f2573,f2597,f2598,f2667,f2670,f2608,f2612,f2613,f2620,f2621,f2622,f2623,f2624,f2625,f2626,f2627,f2628,f2629,f2630,f2631,f2632,f2633,f2634,f2637,f2660,f2661,f2662,f2740,f2741,f2742,f2746,f2827,f2830,f2754,f2755,f2756,f2757,f2758,f2759,f2760,f2832,f2762,f2763,f2764,f2768,f2769,f2777,f2778,f2779,f2780,f2781,f2782,f2783,f2784,f2833,f2786,f2787,f2788,f2789,f2790,f2791,f2792,f2795,f2820,f2821,f2822,f2963,f2890,f2966,f2969,f2898,f2899,f2900,f2904,f2905,f2913,f2915,f2916,f2917,f2918,f2919,f2920,f2921,f2922,f2923,f2924,f2925,f2926,f2927,f2928,f2929,f2930,f2933,f2960,f2961,f2962,f3005,f3060,f3061,f4802,f4810,f4900,f4870,f4912,f4921,f4922,f5030,f4924,f4925,f4926,f5045,f5057,f5021,f5363,f5366,f5372,f5401,f5409,f5538,f5475,f5574,f5575,f5590,f5600,f5601,f5677,f5678,f5679,f5681,f5682,f5683,f5684,f5685,f5754,f6113,f6117,f6120,f6123,f6126,f6129,f6132,f6135,f6138,f6141,f6144,f6147,f6150,f6153,f6156,f6159,f6162,f6165,f5789,f5790,f5791,f6167,f6168,f6169,f6170,f6171,f6172,f6173,f6174,f6175,f6176,f6177,f6178,f6179,f6180,f6181,f6182,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6193,f6194,f6195,f6196,f6197,f6198,f6199,f6200,f6201,f5852,f5853,f5854,f5856,f5857,f5858,f5859,f5860,f6209,f6211,f6213,f6215,f6217,f6219,f6221,f6223,f6225,f6227,f6229,f6231,f6233,f6235,f6237,f6239,f6241,f6243,f6115,f6502,f6522,f6526,f6539,f6541,f6543,f6545,f6547,f6549,f6551,f6553,f6555,f6557,f6559,f6561,f6563,f6565,f6567,f6569,f6571,f6573,f6575,f6577,f6584,f6590,f6596,f6614,f6620,f6626,f6639,f6641,f6643,f6645,f6647,f6649,f6651,f6653,f6655])).
fof(f6654,plain,(
  $false | $spl10),
  inference(global_subsumption,[],[f329,f328,f330,f602,f337,f341,f346,f357,f356,f361,f360,f365,f364,f406,f405,f412,f410,f415,f414,f413,f416,f417,f418,f419,f423,f420,f429,f428,f427,f431,f430,f440,f439,f603,f458,f455,f454,f453,f464,f463,f470,f469,f471,f473,f472,f498,f497,f496,f495,f494,f493,f492,f502,f501,f500,f499,f506,f505,f504,f503,f510,f509,f508,f507,f514,f513,f512,f511,f588,f518,f517,f516,f515,f525,f524,f523,f522,f531,f528,f527,f526,f538,f537,f536,f587,f534,f533,f532,f542,f541,f540,f539,f546,f545,f544,f543,f555,f554,f553,f586,f551,f550,f549,f559,f558,f557,f556,f563,f562,f561,f560,f585,f616,f617,f620,f621,f622,f623,f624,f625,f626,f627,f628,f629,f630,f631,f632,f633,f634,f635,f636,f637,f433,f432,f426,f425,f424,f367,f366,f345,f344,f343,f339,f338,f657,f664,f665,f668,f673,f676,f681,f682,f684,f691,f695,f696,f699,f705,f706,f710,f713,f716,f746,f792,f801,f800,f811,f809,f827,f833,f843,f846,f851,f855,f863,f869,f892,f899,f905,f928,f935,f941,f961,f1101,f1100,f1099,f1098,f1097,f1096,f1095,f1092,f1091,f1087,f1084,f1083,f1080,f1079,f1075,f1063,f1062,f1061,f1057,f1056,f1052,f1051,f1050,f1047,f1043,f1041,f1039,f1038,f1035,f1034,f1033,f1032,f1031,f1027,f1026,f1021,f1020,f1017,f1016,f1012,f1005,f1004,f1003,f1002,f1001,f1000,f999,f998,f995,f994,f990,f989,f986,f985,f981,f980,f979,f976,f975,f974,f973,f971,f970,f969,f967,f1117,f1132,f1315,f1314,f1313,f1312,f1311,f1310,f1309,f1306,f1305,f1301,f1298,f1297,f1294,f1293,f1289,f1277,f1276,f1275,f1271,f1270,f1266,f1265,f1264,f1261,f1257,f1255,f1253,f1252,f1249,f1248,f1247,f1246,f1245,f1241,f1240,f1235,f1234,f1231,f1230,f1226,f1219,f1218,f1217,f1216,f1215,f1214,f1213,f1212,f1209,f1208,f1204,f1203,f1200,f1199,f1195,f1194,f1193,f1190,f1189,f1188,f1187,f1185,f1184,f1183,f1182,f1181,f1368,f1410,f1430,f1443,f1459,f1467,f1469,f1470,f1477,f1478,f1483,f1487,f1486,f1503,f1527,f1537,f1580,f1586,f1591,f1598,f1608,f1643,f1642,f1641,f1640,f1644,f1645,f1654,f1655,f1656,f1657,f1658,f1659,f1660,f1661,f1662,f1663,f1664,f1665,f1666,f1667,f1668,f1669,f1670,f1671,f1673,f1674,f1684,f1754,f1817,f1846,f1895,f1900,f1880,f1921,f1928,f2023,f2024,f2026,f2027,f2029,f2030,f2032,f2060,f2107,f2106,f2105,f2104,f2116,f2117,f2118,f2119,f2128,f2129,f2130,f2131,f2132,f2133,f2134,f2135,f2136,f2137,f2138,f2139,f2140,f2141,f2142,f2143,f2144,f2145,f2147,f2148,f2149,f2161,f2247,f2248,f2196,f2199,f2252,f2253,f2237,f2276,f2362,f2363,f2388,f2405,f2403,f2423,f2436,f2446,f2447,f2452,f2451,f2449,f2465,f2479,f2480,f2540,f2483,f2484,f2541,f2542,f2487,f2499,f2500,f2501,f2502,f2503,f2504,f2505,f2506,f2507,f2508,f2509,f2510,f2511,f2512,f2513,f2516,f2537,f2538,f2539,f2545,f2573,f2597,f2598,f2667,f2670,f2608,f2612,f2613,f2620,f2621,f2622,f2623,f2624,f2625,f2626,f2627,f2628,f2629,f2630,f2631,f2632,f2633,f2634,f2637,f2660,f2661,f2662,f2740,f2741,f2742,f2746,f2827,f2830,f2754,f2755,f2756,f2757,f2758,f2759,f2760,f2832,f2762,f2763,f2764,f2768,f2769,f2777,f2778,f2779,f2780,f2781,f2782,f2783,f2784,f2833,f2786,f2787,f2788,f2789,f2790,f2791,f2792,f2795,f2820,f2821,f2822,f2963,f2890,f2966,f2969,f2898,f2899,f2900,f2904,f2905,f2913,f2915,f2916,f2917,f2918,f2919,f2920,f2921,f2922,f2923,f2924,f2925,f2926,f2927,f2928,f2929,f2930,f2933,f2960,f2961,f2962,f3005,f3060,f3061,f4802,f4810,f4900,f4870,f4912,f4921,f4922,f5030,f4924,f4925,f4926,f5045,f5057,f5021,f5363,f5366,f5372,f5401,f5409,f5538,f5475,f5574,f5575,f5590,f5600,f5601,f5677,f5678,f5679,f5681,f5682,f5683,f5684,f5685,f5754,f6113,f6117,f6120,f6123,f6126,f6129,f6132,f6135,f6138,f6141,f6144,f6147,f6150,f6153,f6156,f6159,f6162,f6165,f5789,f5790,f5791,f6167,f6168,f6169,f6170,f6171,f6172,f6173,f6174,f6175,f6176,f6177,f6178,f6179,f6180,f6181,f6182,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6193,f6194,f6195,f6196,f6197,f6198,f6199,f6200,f6201,f5852,f5853,f5854,f5856,f5857,f5858,f5859,f5860,f6209,f6211,f6213,f6215,f6217,f6219,f6221,f6223,f6225,f6227,f6229,f6231,f6233,f6235,f6237,f6239,f6241,f6243,f6115,f6502,f6522,f6526,f6539,f6541,f6543,f6545,f6547,f6549,f6551,f6553,f6555,f6557,f6559,f6561,f6563,f6565,f6567,f6569,f6571,f6573,f6575,f6577,f6584,f6590,f6596,f6614,f6620,f6626,f6639,f6641,f6643,f6645,f6647,f6649,f6651,f6653])).
fof(f6652,plain,(
  $false | $spl10),
  inference(global_subsumption,[],[f329,f328,f330,f602,f337,f341,f346,f357,f356,f361,f360,f365,f364,f406,f405,f412,f410,f415,f414,f413,f416,f417,f418,f419,f423,f420,f429,f428,f427,f431,f430,f440,f439,f603,f458,f455,f454,f453,f464,f463,f470,f469,f471,f473,f472,f498,f497,f496,f495,f494,f493,f492,f502,f501,f500,f499,f506,f505,f504,f503,f510,f509,f508,f507,f514,f513,f512,f511,f588,f518,f517,f516,f515,f525,f524,f523,f522,f531,f528,f527,f526,f538,f537,f536,f587,f534,f533,f532,f542,f541,f540,f539,f546,f545,f544,f543,f555,f554,f553,f586,f551,f550,f549,f559,f558,f557,f556,f563,f562,f561,f560,f585,f616,f617,f620,f621,f622,f623,f624,f625,f626,f627,f628,f629,f630,f631,f632,f633,f634,f635,f636,f637,f433,f432,f426,f425,f424,f367,f366,f345,f344,f343,f339,f338,f657,f664,f665,f668,f673,f676,f681,f682,f684,f691,f695,f696,f699,f705,f706,f710,f713,f716,f746,f792,f801,f800,f811,f809,f827,f833,f843,f846,f851,f855,f863,f869,f892,f899,f905,f928,f935,f941,f961,f1101,f1100,f1099,f1098,f1097,f1096,f1095,f1092,f1091,f1087,f1084,f1083,f1080,f1079,f1075,f1063,f1062,f1061,f1057,f1056,f1052,f1051,f1050,f1047,f1043,f1041,f1039,f1038,f1035,f1034,f1033,f1032,f1031,f1027,f1026,f1021,f1020,f1017,f1016,f1012,f1005,f1004,f1003,f1002,f1001,f1000,f999,f998,f995,f994,f990,f989,f986,f985,f981,f980,f979,f976,f975,f974,f973,f971,f970,f969,f967,f1117,f1132,f1315,f1314,f1313,f1312,f1311,f1310,f1309,f1306,f1305,f1301,f1298,f1297,f1294,f1293,f1289,f1277,f1276,f1275,f1271,f1270,f1266,f1265,f1264,f1261,f1257,f1255,f1253,f1252,f1249,f1248,f1247,f1246,f1245,f1241,f1240,f1235,f1234,f1231,f1230,f1226,f1219,f1218,f1217,f1216,f1215,f1214,f1213,f1212,f1209,f1208,f1204,f1203,f1200,f1199,f1195,f1194,f1193,f1190,f1189,f1188,f1187,f1185,f1184,f1183,f1182,f1181,f1368,f1410,f1430,f1443,f1459,f1467,f1469,f1470,f1477,f1478,f1483,f1487,f1486,f1503,f1527,f1537,f1580,f1586,f1591,f1598,f1608,f1643,f1642,f1641,f1640,f1644,f1645,f1654,f1655,f1656,f1657,f1658,f1659,f1660,f1661,f1662,f1663,f1664,f1665,f1666,f1667,f1668,f1669,f1670,f1671,f1673,f1674,f1684,f1754,f1817,f1846,f1895,f1900,f1880,f1921,f1928,f2023,f2024,f2026,f2027,f2029,f2030,f2032,f2060,f2107,f2106,f2105,f2104,f2116,f2117,f2118,f2119,f2128,f2129,f2130,f2131,f2132,f2133,f2134,f2135,f2136,f2137,f2138,f2139,f2140,f2141,f2142,f2143,f2144,f2145,f2147,f2148,f2149,f2161,f2247,f2248,f2196,f2199,f2252,f2253,f2237,f2276,f2362,f2363,f2388,f2405,f2403,f2423,f2436,f2446,f2447,f2452,f2451,f2449,f2465,f2479,f2480,f2540,f2483,f2484,f2541,f2542,f2487,f2499,f2500,f2501,f2502,f2503,f2504,f2505,f2506,f2507,f2508,f2509,f2510,f2511,f2512,f2513,f2516,f2537,f2538,f2539,f2545,f2573,f2597,f2598,f2667,f2670,f2608,f2612,f2613,f2620,f2621,f2622,f2623,f2624,f2625,f2626,f2627,f2628,f2629,f2630,f2631,f2632,f2633,f2634,f2637,f2660,f2661,f2662,f2740,f2741,f2742,f2746,f2827,f2830,f2754,f2755,f2756,f2757,f2758,f2759,f2760,f2832,f2762,f2763,f2764,f2768,f2769,f2777,f2778,f2779,f2780,f2781,f2782,f2783,f2784,f2833,f2786,f2787,f2788,f2789,f2790,f2791,f2792,f2795,f2820,f2821,f2822,f2963,f2890,f2966,f2969,f2898,f2899,f2900,f2904,f2905,f2913,f2915,f2916,f2917,f2918,f2919,f2920,f2921,f2922,f2923,f2924,f2925,f2926,f2927,f2928,f2929,f2930,f2933,f2960,f2961,f2962,f3005,f3060,f3061,f4802,f4810,f4900,f4870,f4912,f4921,f4922,f5030,f4924,f4925,f4926,f5045,f5057,f5021,f5363,f5366,f5372,f5401,f5409,f5538,f5475,f5574,f5575,f5590,f5600,f5601,f5677,f5678,f5679,f5681,f5682,f5683,f5684,f5685,f5754,f6113,f6117,f6120,f6123,f6126,f6129,f6132,f6135,f6138,f6141,f6144,f6147,f6150,f6153,f6156,f6159,f6162,f6165,f5789,f5790,f5791,f6167,f6168,f6169,f6170,f6171,f6172,f6173,f6174,f6175,f6176,f6177,f6178,f6179,f6180,f6181,f6182,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6193,f6194,f6195,f6196,f6197,f6198,f6199,f6200,f6201,f5852,f5853,f5854,f5856,f5857,f5858,f5859,f5860,f6209,f6211,f6213,f6215,f6217,f6219,f6221,f6223,f6225,f6227,f6229,f6231,f6233,f6235,f6237,f6239,f6241,f6243,f6115,f6502,f6522,f6526,f6539,f6541,f6543,f6545,f6547,f6549,f6551,f6553,f6555,f6557,f6559,f6561,f6563,f6565,f6567,f6569,f6571,f6573,f6575,f6577,f6584,f6590,f6596,f6614,f6620,f6626,f6639,f6641,f6643,f6645,f6647,f6649,f6651])).
fof(f6650,plain,(
  $false | $spl10),
  inference(global_subsumption,[],[f329,f328,f330,f602,f337,f341,f346,f357,f356,f361,f360,f365,f364,f406,f405,f412,f410,f415,f414,f413,f416,f417,f418,f419,f423,f420,f429,f428,f427,f431,f430,f440,f439,f603,f458,f455,f454,f453,f464,f463,f470,f469,f471,f473,f472,f498,f497,f496,f495,f494,f493,f492,f502,f501,f500,f499,f506,f505,f504,f503,f510,f509,f508,f507,f514,f513,f512,f511,f588,f518,f517,f516,f515,f525,f524,f523,f522,f531,f528,f527,f526,f538,f537,f536,f587,f534,f533,f532,f542,f541,f540,f539,f546,f545,f544,f543,f555,f554,f553,f586,f551,f550,f549,f559,f558,f557,f556,f563,f562,f561,f560,f585,f616,f617,f620,f621,f622,f623,f624,f625,f626,f627,f628,f629,f630,f631,f632,f633,f634,f635,f636,f637,f433,f432,f426,f425,f424,f367,f366,f345,f344,f343,f339,f338,f657,f664,f665,f668,f673,f676,f681,f682,f684,f691,f695,f696,f699,f705,f706,f710,f713,f716,f746,f792,f801,f800,f811,f809,f827,f833,f843,f846,f851,f855,f863,f869,f892,f899,f905,f928,f935,f941,f961,f1101,f1100,f1099,f1098,f1097,f1096,f1095,f1092,f1091,f1087,f1084,f1083,f1080,f1079,f1075,f1063,f1062,f1061,f1057,f1056,f1052,f1051,f1050,f1047,f1043,f1041,f1039,f1038,f1035,f1034,f1033,f1032,f1031,f1027,f1026,f1021,f1020,f1017,f1016,f1012,f1005,f1004,f1003,f1002,f1001,f1000,f999,f998,f995,f994,f990,f989,f986,f985,f981,f980,f979,f976,f975,f974,f973,f971,f970,f969,f967,f1117,f1132,f1315,f1314,f1313,f1312,f1311,f1310,f1309,f1306,f1305,f1301,f1298,f1297,f1294,f1293,f1289,f1277,f1276,f1275,f1271,f1270,f1266,f1265,f1264,f1261,f1257,f1255,f1253,f1252,f1249,f1248,f1247,f1246,f1245,f1241,f1240,f1235,f1234,f1231,f1230,f1226,f1219,f1218,f1217,f1216,f1215,f1214,f1213,f1212,f1209,f1208,f1204,f1203,f1200,f1199,f1195,f1194,f1193,f1190,f1189,f1188,f1187,f1185,f1184,f1183,f1182,f1181,f1368,f1410,f1430,f1443,f1459,f1467,f1469,f1470,f1477,f1478,f1483,f1487,f1486,f1503,f1527,f1537,f1580,f1586,f1591,f1598,f1608,f1643,f1642,f1641,f1640,f1644,f1645,f1654,f1655,f1656,f1657,f1658,f1659,f1660,f1661,f1662,f1663,f1664,f1665,f1666,f1667,f1668,f1669,f1670,f1671,f1673,f1674,f1684,f1754,f1817,f1846,f1895,f1900,f1880,f1921,f1928,f2023,f2024,f2026,f2027,f2029,f2030,f2032,f2060,f2107,f2106,f2105,f2104,f2116,f2117,f2118,f2119,f2128,f2129,f2130,f2131,f2132,f2133,f2134,f2135,f2136,f2137,f2138,f2139,f2140,f2141,f2142,f2143,f2144,f2145,f2147,f2148,f2149,f2161,f2247,f2248,f2196,f2199,f2252,f2253,f2237,f2276,f2362,f2363,f2388,f2405,f2403,f2423,f2436,f2446,f2447,f2452,f2451,f2449,f2465,f2479,f2480,f2540,f2483,f2484,f2541,f2542,f2487,f2499,f2500,f2501,f2502,f2503,f2504,f2505,f2506,f2507,f2508,f2509,f2510,f2511,f2512,f2513,f2516,f2537,f2538,f2539,f2545,f2573,f2597,f2598,f2667,f2670,f2608,f2612,f2613,f2620,f2621,f2622,f2623,f2624,f2625,f2626,f2627,f2628,f2629,f2630,f2631,f2632,f2633,f2634,f2637,f2660,f2661,f2662,f2740,f2741,f2742,f2746,f2827,f2830,f2754,f2755,f2756,f2757,f2758,f2759,f2760,f2832,f2762,f2763,f2764,f2768,f2769,f2777,f2778,f2779,f2780,f2781,f2782,f2783,f2784,f2833,f2786,f2787,f2788,f2789,f2790,f2791,f2792,f2795,f2820,f2821,f2822,f2963,f2890,f2966,f2969,f2898,f2899,f2900,f2904,f2905,f2913,f2915,f2916,f2917,f2918,f2919,f2920,f2921,f2922,f2923,f2924,f2925,f2926,f2927,f2928,f2929,f2930,f2933,f2960,f2961,f2962,f3005,f3060,f3061,f4802,f4810,f4900,f4870,f4912,f4921,f4922,f5030,f4924,f4925,f4926,f5045,f5057,f5021,f5363,f5366,f5372,f5401,f5409,f5538,f5475,f5574,f5575,f5590,f5600,f5601,f5677,f5678,f5679,f5681,f5682,f5683,f5684,f5685,f5754,f6113,f6117,f6120,f6123,f6126,f6129,f6132,f6135,f6138,f6141,f6144,f6147,f6150,f6153,f6156,f6159,f6162,f6165,f5789,f5790,f5791,f6167,f6168,f6169,f6170,f6171,f6172,f6173,f6174,f6175,f6176,f6177,f6178,f6179,f6180,f6181,f6182,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6193,f6194,f6195,f6196,f6197,f6198,f6199,f6200,f6201,f5852,f5853,f5854,f5856,f5857,f5858,f5859,f5860,f6209,f6211,f6213,f6215,f6217,f6219,f6221,f6223,f6225,f6227,f6229,f6231,f6233,f6235,f6237,f6239,f6241,f6243,f6115,f6502,f6522,f6526,f6539,f6541,f6543,f6545,f6547,f6549,f6551,f6553,f6555,f6557,f6559,f6561,f6563,f6565,f6567,f6569,f6571,f6573,f6575,f6577,f6584,f6590,f6596,f6614,f6620,f6626,f6639,f6641,f6643,f6645,f6647,f6649])).
fof(f6648,plain,(
  $false | $spl10),
  inference(global_subsumption,[],[f329,f328,f330,f602,f337,f341,f346,f357,f356,f361,f360,f365,f364,f406,f405,f412,f410,f415,f414,f413,f416,f417,f418,f419,f423,f420,f429,f428,f427,f431,f430,f440,f439,f603,f458,f455,f454,f453,f464,f463,f470,f469,f471,f473,f472,f498,f497,f496,f495,f494,f493,f492,f502,f501,f500,f499,f506,f505,f504,f503,f510,f509,f508,f507,f514,f513,f512,f511,f588,f518,f517,f516,f515,f525,f524,f523,f522,f531,f528,f527,f526,f538,f537,f536,f587,f534,f533,f532,f542,f541,f540,f539,f546,f545,f544,f543,f555,f554,f553,f586,f551,f550,f549,f559,f558,f557,f556,f563,f562,f561,f560,f585,f616,f617,f620,f621,f622,f623,f624,f625,f626,f627,f628,f629,f630,f631,f632,f633,f634,f635,f636,f637,f433,f432,f426,f425,f424,f367,f366,f345,f344,f343,f339,f338,f657,f664,f665,f668,f673,f676,f681,f682,f684,f691,f695,f696,f699,f705,f706,f710,f713,f716,f746,f792,f801,f800,f811,f809,f827,f833,f843,f846,f851,f855,f863,f869,f892,f899,f905,f928,f935,f941,f961,f1101,f1100,f1099,f1098,f1097,f1096,f1095,f1092,f1091,f1087,f1084,f1083,f1080,f1079,f1075,f1063,f1062,f1061,f1057,f1056,f1052,f1051,f1050,f1047,f1043,f1041,f1039,f1038,f1035,f1034,f1033,f1032,f1031,f1027,f1026,f1021,f1020,f1017,f1016,f1012,f1005,f1004,f1003,f1002,f1001,f1000,f999,f998,f995,f994,f990,f989,f986,f985,f981,f980,f979,f976,f975,f974,f973,f971,f970,f969,f967,f1117,f1132,f1315,f1314,f1313,f1312,f1311,f1310,f1309,f1306,f1305,f1301,f1298,f1297,f1294,f1293,f1289,f1277,f1276,f1275,f1271,f1270,f1266,f1265,f1264,f1261,f1257,f1255,f1253,f1252,f1249,f1248,f1247,f1246,f1245,f1241,f1240,f1235,f1234,f1231,f1230,f1226,f1219,f1218,f1217,f1216,f1215,f1214,f1213,f1212,f1209,f1208,f1204,f1203,f1200,f1199,f1195,f1194,f1193,f1190,f1189,f1188,f1187,f1185,f1184,f1183,f1182,f1181,f1368,f1410,f1430,f1443,f1459,f1467,f1469,f1470,f1477,f1478,f1483,f1487,f1486,f1503,f1527,f1537,f1580,f1586,f1591,f1598,f1608,f1643,f1642,f1641,f1640,f1644,f1645,f1654,f1655,f1656,f1657,f1658,f1659,f1660,f1661,f1662,f1663,f1664,f1665,f1666,f1667,f1668,f1669,f1670,f1671,f1673,f1674,f1684,f1754,f1817,f1846,f1895,f1900,f1880,f1921,f1928,f2023,f2024,f2026,f2027,f2029,f2030,f2032,f2060,f2107,f2106,f2105,f2104,f2116,f2117,f2118,f2119,f2128,f2129,f2130,f2131,f2132,f2133,f2134,f2135,f2136,f2137,f2138,f2139,f2140,f2141,f2142,f2143,f2144,f2145,f2147,f2148,f2149,f2161,f2247,f2248,f2196,f2199,f2252,f2253,f2237,f2276,f2362,f2363,f2388,f2405,f2403,f2423,f2436,f2446,f2447,f2452,f2451,f2449,f2465,f2479,f2480,f2540,f2483,f2484,f2541,f2542,f2487,f2499,f2500,f2501,f2502,f2503,f2504,f2505,f2506,f2507,f2508,f2509,f2510,f2511,f2512,f2513,f2516,f2537,f2538,f2539,f2545,f2573,f2597,f2598,f2667,f2670,f2608,f2612,f2613,f2620,f2621,f2622,f2623,f2624,f2625,f2626,f2627,f2628,f2629,f2630,f2631,f2632,f2633,f2634,f2637,f2660,f2661,f2662,f2740,f2741,f2742,f2746,f2827,f2830,f2754,f2755,f2756,f2757,f2758,f2759,f2760,f2832,f2762,f2763,f2764,f2768,f2769,f2777,f2778,f2779,f2780,f2781,f2782,f2783,f2784,f2833,f2786,f2787,f2788,f2789,f2790,f2791,f2792,f2795,f2820,f2821,f2822,f2963,f2890,f2966,f2969,f2898,f2899,f2900,f2904,f2905,f2913,f2915,f2916,f2917,f2918,f2919,f2920,f2921,f2922,f2923,f2924,f2925,f2926,f2927,f2928,f2929,f2930,f2933,f2960,f2961,f2962,f3005,f3060,f3061,f4802,f4810,f4900,f4870,f4912,f4921,f4922,f5030,f4924,f4925,f4926,f5045,f5057,f5021,f5363,f5366,f5372,f5401,f5409,f5538,f5475,f5574,f5575,f5590,f5600,f5601,f5677,f5678,f5679,f5681,f5682,f5683,f5684,f5685,f5754,f6113,f6117,f6120,f6123,f6126,f6129,f6132,f6135,f6138,f6141,f6144,f6147,f6150,f6153,f6156,f6159,f6162,f6165,f5789,f5790,f5791,f6167,f6168,f6169,f6170,f6171,f6172,f6173,f6174,f6175,f6176,f6177,f6178,f6179,f6180,f6181,f6182,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6193,f6194,f6195,f6196,f6197,f6198,f6199,f6200,f6201,f5852,f5853,f5854,f5856,f5857,f5858,f5859,f5860,f6209,f6211,f6213,f6215,f6217,f6219,f6221,f6223,f6225,f6227,f6229,f6231,f6233,f6235,f6237,f6239,f6241,f6243,f6115,f6502,f6522,f6526,f6539,f6541,f6543,f6545,f6547,f6549,f6551,f6553,f6555,f6557,f6559,f6561,f6563,f6565,f6567,f6569,f6571,f6573,f6575,f6577,f6584,f6590,f6596,f6614,f6620,f6626,f6639,f6641,f6643,f6645,f6647])).
fof(f6646,plain,(
  $false | $spl10),
  inference(global_subsumption,[],[f329,f328,f330,f602,f337,f341,f346,f357,f356,f361,f360,f365,f364,f406,f405,f412,f410,f415,f414,f413,f416,f417,f418,f419,f423,f420,f429,f428,f427,f431,f430,f440,f439,f603,f458,f455,f454,f453,f464,f463,f470,f469,f471,f473,f472,f498,f497,f496,f495,f494,f493,f492,f502,f501,f500,f499,f506,f505,f504,f503,f510,f509,f508,f507,f514,f513,f512,f511,f588,f518,f517,f516,f515,f525,f524,f523,f522,f531,f528,f527,f526,f538,f537,f536,f587,f534,f533,f532,f542,f541,f540,f539,f546,f545,f544,f543,f555,f554,f553,f586,f551,f550,f549,f559,f558,f557,f556,f563,f562,f561,f560,f585,f616,f617,f620,f621,f622,f623,f624,f625,f626,f627,f628,f629,f630,f631,f632,f633,f634,f635,f636,f637,f433,f432,f426,f425,f424,f367,f366,f345,f344,f343,f339,f338,f657,f664,f665,f668,f673,f676,f681,f682,f684,f691,f695,f696,f699,f705,f706,f710,f713,f716,f746,f792,f801,f800,f811,f809,f827,f833,f843,f846,f851,f855,f863,f869,f892,f899,f905,f928,f935,f941,f961,f1101,f1100,f1099,f1098,f1097,f1096,f1095,f1092,f1091,f1087,f1084,f1083,f1080,f1079,f1075,f1063,f1062,f1061,f1057,f1056,f1052,f1051,f1050,f1047,f1043,f1041,f1039,f1038,f1035,f1034,f1033,f1032,f1031,f1027,f1026,f1021,f1020,f1017,f1016,f1012,f1005,f1004,f1003,f1002,f1001,f1000,f999,f998,f995,f994,f990,f989,f986,f985,f981,f980,f979,f976,f975,f974,f973,f971,f970,f969,f967,f1117,f1132,f1315,f1314,f1313,f1312,f1311,f1310,f1309,f1306,f1305,f1301,f1298,f1297,f1294,f1293,f1289,f1277,f1276,f1275,f1271,f1270,f1266,f1265,f1264,f1261,f1257,f1255,f1253,f1252,f1249,f1248,f1247,f1246,f1245,f1241,f1240,f1235,f1234,f1231,f1230,f1226,f1219,f1218,f1217,f1216,f1215,f1214,f1213,f1212,f1209,f1208,f1204,f1203,f1200,f1199,f1195,f1194,f1193,f1190,f1189,f1188,f1187,f1185,f1184,f1183,f1182,f1181,f1368,f1410,f1430,f1443,f1459,f1467,f1469,f1470,f1477,f1478,f1483,f1487,f1486,f1503,f1527,f1537,f1580,f1586,f1591,f1598,f1608,f1643,f1642,f1641,f1640,f1644,f1645,f1654,f1655,f1656,f1657,f1658,f1659,f1660,f1661,f1662,f1663,f1664,f1665,f1666,f1667,f1668,f1669,f1670,f1671,f1673,f1674,f1684,f1754,f1817,f1846,f1895,f1900,f1880,f1921,f1928,f2023,f2024,f2026,f2027,f2029,f2030,f2032,f2060,f2107,f2106,f2105,f2104,f2116,f2117,f2118,f2119,f2128,f2129,f2130,f2131,f2132,f2133,f2134,f2135,f2136,f2137,f2138,f2139,f2140,f2141,f2142,f2143,f2144,f2145,f2147,f2148,f2149,f2161,f2247,f2248,f2196,f2199,f2252,f2253,f2237,f2276,f2362,f2363,f2388,f2405,f2403,f2423,f2436,f2446,f2447,f2452,f2451,f2449,f2465,f2479,f2480,f2540,f2483,f2484,f2541,f2542,f2487,f2499,f2500,f2501,f2502,f2503,f2504,f2505,f2506,f2507,f2508,f2509,f2510,f2511,f2512,f2513,f2516,f2537,f2538,f2539,f2545,f2573,f2597,f2598,f2667,f2670,f2608,f2612,f2613,f2620,f2621,f2622,f2623,f2624,f2625,f2626,f2627,f2628,f2629,f2630,f2631,f2632,f2633,f2634,f2637,f2660,f2661,f2662,f2740,f2741,f2742,f2746,f2827,f2830,f2754,f2755,f2756,f2757,f2758,f2759,f2760,f2832,f2762,f2763,f2764,f2768,f2769,f2777,f2778,f2779,f2780,f2781,f2782,f2783,f2784,f2833,f2786,f2787,f2788,f2789,f2790,f2791,f2792,f2795,f2820,f2821,f2822,f2963,f2890,f2966,f2969,f2898,f2899,f2900,f2904,f2905,f2913,f2915,f2916,f2917,f2918,f2919,f2920,f2921,f2922,f2923,f2924,f2925,f2926,f2927,f2928,f2929,f2930,f2933,f2960,f2961,f2962,f3005,f3060,f3061,f4802,f4810,f4900,f4870,f4912,f4921,f4922,f5030,f4924,f4925,f4926,f5045,f5057,f5021,f5363,f5366,f5372,f5401,f5409,f5538,f5475,f5574,f5575,f5590,f5600,f5601,f5677,f5678,f5679,f5681,f5682,f5683,f5684,f5685,f5754,f6113,f6117,f6120,f6123,f6126,f6129,f6132,f6135,f6138,f6141,f6144,f6147,f6150,f6153,f6156,f6159,f6162,f6165,f5789,f5790,f5791,f6167,f6168,f6169,f6170,f6171,f6172,f6173,f6174,f6175,f6176,f6177,f6178,f6179,f6180,f6181,f6182,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6193,f6194,f6195,f6196,f6197,f6198,f6199,f6200,f6201,f5852,f5853,f5854,f5856,f5857,f5858,f5859,f5860,f6209,f6211,f6213,f6215,f6217,f6219,f6221,f6223,f6225,f6227,f6229,f6231,f6233,f6235,f6237,f6239,f6241,f6243,f6115,f6502,f6522,f6526,f6539,f6541,f6543,f6545,f6547,f6549,f6551,f6553,f6555,f6557,f6559,f6561,f6563,f6565,f6567,f6569,f6571,f6573,f6575,f6577,f6584,f6590,f6596,f6614,f6620,f6626,f6639,f6641,f6643,f6645])).
fof(f6644,plain,(
  $false | $spl10),
  inference(global_subsumption,[],[f329,f328,f330,f602,f337,f341,f346,f357,f356,f361,f360,f365,f364,f406,f405,f412,f410,f415,f414,f413,f416,f417,f418,f419,f423,f420,f429,f428,f427,f431,f430,f440,f439,f603,f458,f455,f454,f453,f464,f463,f470,f469,f471,f473,f472,f498,f497,f496,f495,f494,f493,f492,f502,f501,f500,f499,f506,f505,f504,f503,f510,f509,f508,f507,f514,f513,f512,f511,f588,f518,f517,f516,f515,f525,f524,f523,f522,f531,f528,f527,f526,f538,f537,f536,f587,f534,f533,f532,f542,f541,f540,f539,f546,f545,f544,f543,f555,f554,f553,f586,f551,f550,f549,f559,f558,f557,f556,f563,f562,f561,f560,f585,f616,f617,f620,f621,f622,f623,f624,f625,f626,f627,f628,f629,f630,f631,f632,f633,f634,f635,f636,f637,f433,f432,f426,f425,f424,f367,f366,f345,f344,f343,f339,f338,f657,f664,f665,f668,f673,f676,f681,f682,f684,f691,f695,f696,f699,f705,f706,f710,f713,f716,f746,f792,f801,f800,f811,f809,f827,f833,f843,f846,f851,f855,f863,f869,f892,f899,f905,f928,f935,f941,f961,f1101,f1100,f1099,f1098,f1097,f1096,f1095,f1092,f1091,f1087,f1084,f1083,f1080,f1079,f1075,f1063,f1062,f1061,f1057,f1056,f1052,f1051,f1050,f1047,f1043,f1041,f1039,f1038,f1035,f1034,f1033,f1032,f1031,f1027,f1026,f1021,f1020,f1017,f1016,f1012,f1005,f1004,f1003,f1002,f1001,f1000,f999,f998,f995,f994,f990,f989,f986,f985,f981,f980,f979,f976,f975,f974,f973,f971,f970,f969,f967,f1117,f1132,f1315,f1314,f1313,f1312,f1311,f1310,f1309,f1306,f1305,f1301,f1298,f1297,f1294,f1293,f1289,f1277,f1276,f1275,f1271,f1270,f1266,f1265,f1264,f1261,f1257,f1255,f1253,f1252,f1249,f1248,f1247,f1246,f1245,f1241,f1240,f1235,f1234,f1231,f1230,f1226,f1219,f1218,f1217,f1216,f1215,f1214,f1213,f1212,f1209,f1208,f1204,f1203,f1200,f1199,f1195,f1194,f1193,f1190,f1189,f1188,f1187,f1185,f1184,f1183,f1182,f1181,f1368,f1410,f1430,f1443,f1459,f1467,f1469,f1470,f1477,f1478,f1483,f1487,f1486,f1503,f1527,f1537,f1580,f1586,f1591,f1598,f1608,f1643,f1642,f1641,f1640,f1644,f1645,f1654,f1655,f1656,f1657,f1658,f1659,f1660,f1661,f1662,f1663,f1664,f1665,f1666,f1667,f1668,f1669,f1670,f1671,f1673,f1674,f1684,f1754,f1817,f1846,f1895,f1900,f1880,f1921,f1928,f2023,f2024,f2026,f2027,f2029,f2030,f2032,f2060,f2107,f2106,f2105,f2104,f2116,f2117,f2118,f2119,f2128,f2129,f2130,f2131,f2132,f2133,f2134,f2135,f2136,f2137,f2138,f2139,f2140,f2141,f2142,f2143,f2144,f2145,f2147,f2148,f2149,f2161,f2247,f2248,f2196,f2199,f2252,f2253,f2237,f2276,f2362,f2363,f2388,f2405,f2403,f2423,f2436,f2446,f2447,f2452,f2451,f2449,f2465,f2479,f2480,f2540,f2483,f2484,f2541,f2542,f2487,f2499,f2500,f2501,f2502,f2503,f2504,f2505,f2506,f2507,f2508,f2509,f2510,f2511,f2512,f2513,f2516,f2537,f2538,f2539,f2545,f2573,f2597,f2598,f2667,f2670,f2608,f2612,f2613,f2620,f2621,f2622,f2623,f2624,f2625,f2626,f2627,f2628,f2629,f2630,f2631,f2632,f2633,f2634,f2637,f2660,f2661,f2662,f2740,f2741,f2742,f2746,f2827,f2830,f2754,f2755,f2756,f2757,f2758,f2759,f2760,f2832,f2762,f2763,f2764,f2768,f2769,f2777,f2778,f2779,f2780,f2781,f2782,f2783,f2784,f2833,f2786,f2787,f2788,f2789,f2790,f2791,f2792,f2795,f2820,f2821,f2822,f2963,f2890,f2966,f2969,f2898,f2899,f2900,f2904,f2905,f2913,f2915,f2916,f2917,f2918,f2919,f2920,f2921,f2922,f2923,f2924,f2925,f2926,f2927,f2928,f2929,f2930,f2933,f2960,f2961,f2962,f3005,f3060,f3061,f4802,f4810,f4900,f4870,f4912,f4921,f4922,f5030,f4924,f4925,f4926,f5045,f5057,f5021,f5363,f5366,f5372,f5401,f5409,f5538,f5475,f5574,f5575,f5590,f5600,f5601,f5677,f5678,f5679,f5681,f5682,f5683,f5684,f5685,f5754,f6113,f6117,f6120,f6123,f6126,f6129,f6132,f6135,f6138,f6141,f6144,f6147,f6150,f6153,f6156,f6159,f6162,f6165,f5789,f5790,f5791,f6167,f6168,f6169,f6170,f6171,f6172,f6173,f6174,f6175,f6176,f6177,f6178,f6179,f6180,f6181,f6182,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6193,f6194,f6195,f6196,f6197,f6198,f6199,f6200,f6201,f5852,f5853,f5854,f5856,f5857,f5858,f5859,f5860,f6209,f6211,f6213,f6215,f6217,f6219,f6221,f6223,f6225,f6227,f6229,f6231,f6233,f6235,f6237,f6239,f6241,f6243,f6115,f6502,f6522,f6526,f6539,f6541,f6543,f6545,f6547,f6549,f6551,f6553,f6555,f6557,f6559,f6561,f6563,f6565,f6567,f6569,f6571,f6573,f6575,f6577,f6584,f6590,f6596,f6614,f6620,f6626,f6639,f6641,f6643])).
fof(f6642,plain,(
  $false | $spl10),
  inference(global_subsumption,[],[f329,f328,f330,f602,f337,f341,f346,f357,f356,f361,f360,f365,f364,f406,f405,f412,f410,f415,f414,f413,f416,f417,f418,f419,f423,f420,f429,f428,f427,f431,f430,f440,f439,f603,f458,f455,f454,f453,f464,f463,f470,f469,f471,f473,f472,f498,f497,f496,f495,f494,f493,f492,f502,f501,f500,f499,f506,f505,f504,f503,f510,f509,f508,f507,f514,f513,f512,f511,f588,f518,f517,f516,f515,f525,f524,f523,f522,f531,f528,f527,f526,f538,f537,f536,f587,f534,f533,f532,f542,f541,f540,f539,f546,f545,f544,f543,f555,f554,f553,f586,f551,f550,f549,f559,f558,f557,f556,f563,f562,f561,f560,f585,f616,f617,f620,f621,f622,f623,f624,f625,f626,f627,f628,f629,f630,f631,f632,f633,f634,f635,f636,f637,f433,f432,f426,f425,f424,f367,f366,f345,f344,f343,f339,f338,f657,f664,f665,f668,f673,f676,f681,f682,f684,f691,f695,f696,f699,f705,f706,f710,f713,f716,f746,f792,f801,f800,f811,f809,f827,f833,f843,f846,f851,f855,f863,f869,f892,f899,f905,f928,f935,f941,f961,f1101,f1100,f1099,f1098,f1097,f1096,f1095,f1092,f1091,f1087,f1084,f1083,f1080,f1079,f1075,f1063,f1062,f1061,f1057,f1056,f1052,f1051,f1050,f1047,f1043,f1041,f1039,f1038,f1035,f1034,f1033,f1032,f1031,f1027,f1026,f1021,f1020,f1017,f1016,f1012,f1005,f1004,f1003,f1002,f1001,f1000,f999,f998,f995,f994,f990,f989,f986,f985,f981,f980,f979,f976,f975,f974,f973,f971,f970,f969,f967,f1117,f1132,f1315,f1314,f1313,f1312,f1311,f1310,f1309,f1306,f1305,f1301,f1298,f1297,f1294,f1293,f1289,f1277,f1276,f1275,f1271,f1270,f1266,f1265,f1264,f1261,f1257,f1255,f1253,f1252,f1249,f1248,f1247,f1246,f1245,f1241,f1240,f1235,f1234,f1231,f1230,f1226,f1219,f1218,f1217,f1216,f1215,f1214,f1213,f1212,f1209,f1208,f1204,f1203,f1200,f1199,f1195,f1194,f1193,f1190,f1189,f1188,f1187,f1185,f1184,f1183,f1182,f1181,f1368,f1410,f1430,f1443,f1459,f1467,f1469,f1470,f1477,f1478,f1483,f1487,f1486,f1503,f1527,f1537,f1580,f1586,f1591,f1598,f1608,f1643,f1642,f1641,f1640,f1644,f1645,f1654,f1655,f1656,f1657,f1658,f1659,f1660,f1661,f1662,f1663,f1664,f1665,f1666,f1667,f1668,f1669,f1670,f1671,f1673,f1674,f1684,f1754,f1817,f1846,f1895,f1900,f1880,f1921,f1928,f2023,f2024,f2026,f2027,f2029,f2030,f2032,f2060,f2107,f2106,f2105,f2104,f2116,f2117,f2118,f2119,f2128,f2129,f2130,f2131,f2132,f2133,f2134,f2135,f2136,f2137,f2138,f2139,f2140,f2141,f2142,f2143,f2144,f2145,f2147,f2148,f2149,f2161,f2247,f2248,f2196,f2199,f2252,f2253,f2237,f2276,f2362,f2363,f2388,f2405,f2403,f2423,f2436,f2446,f2447,f2452,f2451,f2449,f2465,f2479,f2480,f2540,f2483,f2484,f2541,f2542,f2487,f2499,f2500,f2501,f2502,f2503,f2504,f2505,f2506,f2507,f2508,f2509,f2510,f2511,f2512,f2513,f2516,f2537,f2538,f2539,f2545,f2573,f2597,f2598,f2667,f2670,f2608,f2612,f2613,f2620,f2621,f2622,f2623,f2624,f2625,f2626,f2627,f2628,f2629,f2630,f2631,f2632,f2633,f2634,f2637,f2660,f2661,f2662,f2740,f2741,f2742,f2746,f2827,f2830,f2754,f2755,f2756,f2757,f2758,f2759,f2760,f2832,f2762,f2763,f2764,f2768,f2769,f2777,f2778,f2779,f2780,f2781,f2782,f2783,f2784,f2833,f2786,f2787,f2788,f2789,f2790,f2791,f2792,f2795,f2820,f2821,f2822,f2963,f2890,f2966,f2969,f2898,f2899,f2900,f2904,f2905,f2913,f2915,f2916,f2917,f2918,f2919,f2920,f2921,f2922,f2923,f2924,f2925,f2926,f2927,f2928,f2929,f2930,f2933,f2960,f2961,f2962,f3005,f3060,f3061,f4802,f4810,f4900,f4870,f4912,f4921,f4922,f5030,f4924,f4925,f4926,f5045,f5057,f5021,f5363,f5366,f5372,f5401,f5409,f5538,f5475,f5574,f5575,f5590,f5600,f5601,f5677,f5678,f5679,f5681,f5682,f5683,f5684,f5685,f5754,f6113,f6117,f6120,f6123,f6126,f6129,f6132,f6135,f6138,f6141,f6144,f6147,f6150,f6153,f6156,f6159,f6162,f6165,f5789,f5790,f5791,f6167,f6168,f6169,f6170,f6171,f6172,f6173,f6174,f6175,f6176,f6177,f6178,f6179,f6180,f6181,f6182,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6193,f6194,f6195,f6196,f6197,f6198,f6199,f6200,f6201,f5852,f5853,f5854,f5856,f5857,f5858,f5859,f5860,f6209,f6211,f6213,f6215,f6217,f6219,f6221,f6223,f6225,f6227,f6229,f6231,f6233,f6235,f6237,f6239,f6241,f6243,f6115,f6502,f6522,f6526,f6539,f6541,f6543,f6545,f6547,f6549,f6551,f6553,f6555,f6557,f6559,f6561,f6563,f6565,f6567,f6569,f6571,f6573,f6575,f6577,f6584,f6590,f6596,f6614,f6620,f6626,f6639,f6641])).
fof(f6640,plain,(
  $false | $spl10),
  inference(global_subsumption,[],[f329,f328,f330,f602,f337,f341,f346,f357,f356,f361,f360,f365,f364,f406,f405,f412,f410,f415,f414,f413,f416,f417,f418,f419,f423,f420,f429,f428,f427,f431,f430,f440,f439,f603,f458,f455,f454,f453,f464,f463,f470,f469,f471,f473,f472,f498,f497,f496,f495,f494,f493,f492,f502,f501,f500,f499,f506,f505,f504,f503,f510,f509,f508,f507,f514,f513,f512,f511,f588,f518,f517,f516,f515,f525,f524,f523,f522,f531,f528,f527,f526,f538,f537,f536,f587,f534,f533,f532,f542,f541,f540,f539,f546,f545,f544,f543,f555,f554,f553,f586,f551,f550,f549,f559,f558,f557,f556,f563,f562,f561,f560,f585,f616,f617,f620,f621,f622,f623,f624,f625,f626,f627,f628,f629,f630,f631,f632,f633,f634,f635,f636,f637,f433,f432,f426,f425,f424,f367,f366,f345,f344,f343,f339,f338,f657,f664,f665,f668,f673,f676,f681,f682,f684,f691,f695,f696,f699,f705,f706,f710,f713,f716,f746,f792,f801,f800,f811,f809,f827,f833,f843,f846,f851,f855,f863,f869,f892,f899,f905,f928,f935,f941,f961,f1101,f1100,f1099,f1098,f1097,f1096,f1095,f1092,f1091,f1087,f1084,f1083,f1080,f1079,f1075,f1063,f1062,f1061,f1057,f1056,f1052,f1051,f1050,f1047,f1043,f1041,f1039,f1038,f1035,f1034,f1033,f1032,f1031,f1027,f1026,f1021,f1020,f1017,f1016,f1012,f1005,f1004,f1003,f1002,f1001,f1000,f999,f998,f995,f994,f990,f989,f986,f985,f981,f980,f979,f976,f975,f974,f973,f971,f970,f969,f967,f1117,f1132,f1315,f1314,f1313,f1312,f1311,f1310,f1309,f1306,f1305,f1301,f1298,f1297,f1294,f1293,f1289,f1277,f1276,f1275,f1271,f1270,f1266,f1265,f1264,f1261,f1257,f1255,f1253,f1252,f1249,f1248,f1247,f1246,f1245,f1241,f1240,f1235,f1234,f1231,f1230,f1226,f1219,f1218,f1217,f1216,f1215,f1214,f1213,f1212,f1209,f1208,f1204,f1203,f1200,f1199,f1195,f1194,f1193,f1190,f1189,f1188,f1187,f1185,f1184,f1183,f1182,f1181,f1368,f1410,f1430,f1443,f1459,f1467,f1469,f1470,f1477,f1478,f1483,f1487,f1486,f1503,f1527,f1537,f1580,f1586,f1591,f1598,f1608,f1643,f1642,f1641,f1640,f1644,f1645,f1654,f1655,f1656,f1657,f1658,f1659,f1660,f1661,f1662,f1663,f1664,f1665,f1666,f1667,f1668,f1669,f1670,f1671,f1673,f1674,f1684,f1754,f1817,f1846,f1895,f1900,f1880,f1921,f1928,f2023,f2024,f2026,f2027,f2029,f2030,f2032,f2060,f2107,f2106,f2105,f2104,f2116,f2117,f2118,f2119,f2128,f2129,f2130,f2131,f2132,f2133,f2134,f2135,f2136,f2137,f2138,f2139,f2140,f2141,f2142,f2143,f2144,f2145,f2147,f2148,f2149,f2161,f2247,f2248,f2196,f2199,f2252,f2253,f2237,f2276,f2362,f2363,f2388,f2405,f2403,f2423,f2436,f2446,f2447,f2452,f2451,f2449,f2465,f2479,f2480,f2540,f2483,f2484,f2541,f2542,f2487,f2499,f2500,f2501,f2502,f2503,f2504,f2505,f2506,f2507,f2508,f2509,f2510,f2511,f2512,f2513,f2516,f2537,f2538,f2539,f2545,f2573,f2597,f2598,f2667,f2670,f2608,f2612,f2613,f2620,f2621,f2622,f2623,f2624,f2625,f2626,f2627,f2628,f2629,f2630,f2631,f2632,f2633,f2634,f2637,f2660,f2661,f2662,f2740,f2741,f2742,f2746,f2827,f2830,f2754,f2755,f2756,f2757,f2758,f2759,f2760,f2832,f2762,f2763,f2764,f2768,f2769,f2777,f2778,f2779,f2780,f2781,f2782,f2783,f2784,f2833,f2786,f2787,f2788,f2789,f2790,f2791,f2792,f2795,f2820,f2821,f2822,f2963,f2890,f2966,f2969,f2898,f2899,f2900,f2904,f2905,f2913,f2915,f2916,f2917,f2918,f2919,f2920,f2921,f2922,f2923,f2924,f2925,f2926,f2927,f2928,f2929,f2930,f2933,f2960,f2961,f2962,f3005,f3060,f3061,f4802,f4810,f4900,f4870,f4912,f4921,f4922,f5030,f4924,f4925,f4926,f5045,f5057,f5021,f5363,f5366,f5372,f5401,f5409,f5538,f5475,f5574,f5575,f5590,f5600,f5601,f5677,f5678,f5679,f5681,f5682,f5683,f5684,f5685,f5754,f6113,f6117,f6120,f6123,f6126,f6129,f6132,f6135,f6138,f6141,f6144,f6147,f6150,f6153,f6156,f6159,f6162,f6165,f5789,f5790,f5791,f6167,f6168,f6169,f6170,f6171,f6172,f6173,f6174,f6175,f6176,f6177,f6178,f6179,f6180,f6181,f6182,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6193,f6194,f6195,f6196,f6197,f6198,f6199,f6200,f6201,f5852,f5853,f5854,f5856,f5857,f5858,f5859,f5860,f6209,f6211,f6213,f6215,f6217,f6219,f6221,f6223,f6225,f6227,f6229,f6231,f6233,f6235,f6237,f6239,f6241,f6243,f6115,f6502,f6522,f6526,f6539,f6541,f6543,f6545,f6547,f6549,f6551,f6553,f6555,f6557,f6559,f6561,f6563,f6565,f6567,f6569,f6571,f6573,f6575,f6577,f6584,f6590,f6596,f6614,f6620,f6626,f6639])).
fof(f6638,plain,(
  $false | $spl10),
  inference(subsumption_resolution,[],[f6637,f330])).
fof(f6637,plain,(
  ~p(s(bool,'T_0')) | $spl10),
  inference(forward_demodulation,[],[f6636,f6115])).
fof(f6636,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1))))) ) | $spl10),
  inference(subsumption_resolution,[],[f6369,f330])).
fof(f6369,plain,(
  ( ! [X0,X1] : (~p(s(bool,'T_0')) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1))))) ) | $spl10),
  inference(backward_demodulation,[],[f6115,f1645])).
fof(f6633,plain,(
  $false | ($spl0 | $spl10)),
  inference(global_subsumption,[],[f6632,f329,f328,f330,f602,f337,f341,f346,f357,f356,f361,f360,f365,f364,f406,f405,f412,f410,f415,f414,f413,f416,f417,f418,f419,f423,f420,f429,f428,f427,f431,f430,f440,f439,f603,f458,f455,f454,f453,f464,f463,f470,f469,f471,f473,f472,f498,f497,f496,f495,f494,f493,f492,f502,f501,f500,f499,f506,f505,f504,f503,f510,f509,f508,f507,f514,f513,f512,f511,f588,f518,f517,f516,f515,f525,f524,f523,f522,f531,f528,f527,f526,f538,f537,f536,f587,f534,f533,f532,f542,f541,f540,f539,f546,f545,f544,f543,f555,f554,f553,f586,f551,f550,f549,f559,f558,f557,f556,f563,f562,f561,f560,f585,f616,f617,f620,f621,f622,f623,f624,f625,f626,f627,f628,f629,f630,f631,f632,f633,f634,f635,f636,f637,f433,f432,f426,f425,f424,f367,f366,f345,f344,f343,f339,f338,f657,f664,f665,f668,f673,f676,f681,f682,f684,f691,f695,f696,f699,f705,f706,f710,f713,f716,f746,f792,f801,f800,f811,f809,f827,f833,f843,f846,f851,f855,f863,f869,f892,f899,f905,f928,f935,f941,f961,f1101,f1100,f1099,f1098,f1097,f1096,f1095,f1092,f1091,f1087,f1084,f1083,f1080,f1079,f1075,f1063,f1062,f1061,f1057,f1056,f1052,f1051,f1050,f1047,f1043,f1041,f1039,f1038,f1035,f1034,f1033,f1032,f1031,f1027,f1026,f1021,f1020,f1017,f1016,f1012,f1005,f1004,f1003,f1002,f1001,f1000,f999,f998,f995,f994,f990,f989,f986,f985,f981,f980,f979,f976,f975,f974,f973,f971,f970,f969,f967,f1117,f1132,f1315,f1314,f1313,f1312,f1311,f1310,f1309,f1306,f1305,f1301,f1298,f1297,f1294,f1293,f1289,f1277,f1276,f1275,f1271,f1270,f1266,f1265,f1264,f1261,f1257,f1255,f1253,f1252,f1249,f1248,f1247,f1246,f1245,f1241,f1240,f1235,f1234,f1231,f1230,f1226,f1219,f1218,f1217,f1216,f1215,f1214,f1213,f1212,f1209,f1208,f1204,f1203,f1200,f1199,f1195,f1194,f1193,f1190,f1189,f1188,f1187,f1185,f1184,f1183,f1182,f1181,f1368,f1410,f1430,f1443,f1459,f1467,f1469,f1470,f1477,f1478,f1483,f1487,f1486,f1503,f1527,f1537,f1580,f1586,f1591,f1598,f1608,f1643,f1642,f1641,f1640,f1644,f1645,f1654,f1655,f1656,f1657,f1658,f1659,f1660,f1661,f1662,f1663,f1664,f1665,f1666,f1667,f1668,f1669,f1670,f1671,f1673,f1674,f1684,f1754,f1817,f1846,f1895,f1900,f1880,f1921,f1928,f2023,f2024,f2026,f2027,f2029,f2030,f2032,f2060,f2107,f2106,f2105,f2104,f2116,f2117,f2118,f2119,f2128,f2129,f2130,f2131,f2132,f2133,f2134,f2135,f2136,f2137,f2138,f2139,f2140,f2141,f2142,f2143,f2144,f2145,f2147,f2148,f2149,f2161,f2247,f2248,f2196,f2199,f2252,f2253,f2237,f2276,f2362,f2363,f2388,f2405,f2403,f2423,f2436,f2446,f2447,f2452,f2451,f2449,f2465,f2479,f2480,f2540,f2483,f2484,f2541,f2542,f2487,f2499,f2500,f2501,f2502,f2503,f2504,f2505,f2506,f2507,f2508,f2509,f2510,f2511,f2512,f2513,f2516,f2537,f2538,f2539,f2545,f2573,f2597,f2598,f2667,f2670,f2608,f2612,f2613,f2620,f2621,f2622,f2623,f2624,f2625,f2626,f2627,f2628,f2629,f2630,f2631,f2632,f2633,f2634,f2637,f2660,f2661,f2662,f2740,f2741,f2742,f2746,f2827,f2830,f2754,f2755,f2756,f2757,f2758,f2759,f2760,f2832,f2762,f2763,f2764,f2768,f2769,f2777,f2778,f2779,f2780,f2781,f2782,f2783,f2784,f2833,f2786,f2787,f2788,f2789,f2790,f2791,f2792,f2795,f2820,f2821,f2822,f2963,f2890,f2966,f2969,f2898,f2899,f2900,f2904,f2905,f2913,f2915,f2916,f2917,f2918,f2919,f2920,f2921,f2922,f2923,f2924,f2925,f2926,f2927,f2928,f2929,f2930,f2933,f2960,f2961,f2962,f3005,f3060,f3061,f4802,f4810,f4900,f4870,f4912,f4921,f4922,f5030,f4924,f4925,f4926,f5045,f5057,f5021,f5363,f5366,f5372,f5401,f5409,f5538,f5475,f5574,f5575,f5590,f5600,f5601,f5677,f5678,f5679,f5681,f5682,f5683,f5684,f5685,f5754,f6113,f6117,f6120,f6123,f6126,f6129,f6132,f6135,f6138,f6141,f6144,f6147,f6150,f6153,f6156,f6159,f6162,f6165,f5789,f5790,f5791,f6167,f6168,f6169,f6170,f6171,f6172,f6173,f6174,f6175,f6176,f6177,f6178,f6179,f6180,f6181,f6182,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6193,f6194,f6195,f6196,f6197,f6198,f6199,f6200,f6201,f5852,f5853,f5854,f5856,f5857,f5858,f5859,f5860,f6209,f6211,f6213,f6215,f6217,f6219,f6221,f6223,f6225,f6227,f6229,f6231,f6233,f6235,f6237,f6239,f6241,f6243,f6115,f6502,f6522,f6526,f6539,f6541,f6543,f6545,f6547,f6549,f6551,f6553,f6555,f6557,f6559,f6561,f6563,f6565,f6567,f6569,f6571,f6573,f6575,f6577,f6584,f6590,f6596,f6614,f6620,f6626])).
fof(f6632,plain,(
  ( ! [X54] : (s('type.integer.int',X54) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | ($spl0 | $spl10)),
  inference(subsumption_resolution,[],[f6631,f330])).
fof(f6631,plain,(
  ( ! [X54] : (~p(s(bool,'T_0')) | s('type.integer.int',X54) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | ($spl0 | $spl10)),
  inference(forward_demodulation,[],[f6630,f6115])).
fof(f6630,plain,(
  ( ! [X54,X55] : (~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X55),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK12),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X54)))))))) | s('type.integer.int',X54) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | ($spl0 | $spl10)),
  inference(subsumption_resolution,[],[f6363,f330])).
fof(f6363,plain,(
  ( ! [X54,X55] : (~p(s(bool,'T_0')) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X55),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK12),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X54)))))))) | s('type.integer.int',X54) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | ($spl0 | $spl10)),
  inference(backward_demodulation,[],[f6115,f4665])).
fof(f4665,plain,(
  ( ! [X54,X55] : (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK12),s('type.integer.int',X54))),s('type.integer.int',X55)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X55),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK12),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X54)))))))) | s('type.integer.int',X54) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl0),
  inference(superposition,[],[f464,f2596])).
fof(f6627,plain,(
  $false | $spl10),
  inference(global_subsumption,[],[f329,f328,f330,f602,f337,f341,f346,f357,f356,f361,f360,f365,f364,f406,f405,f412,f410,f415,f414,f413,f416,f417,f418,f419,f423,f420,f429,f428,f427,f431,f430,f440,f439,f603,f458,f455,f454,f453,f464,f463,f470,f469,f471,f473,f472,f498,f497,f496,f495,f494,f493,f492,f502,f501,f500,f499,f506,f505,f504,f503,f510,f509,f508,f507,f514,f513,f512,f511,f588,f518,f517,f516,f515,f525,f524,f523,f522,f531,f528,f527,f526,f538,f537,f536,f587,f534,f533,f532,f542,f541,f540,f539,f546,f545,f544,f543,f555,f554,f553,f586,f551,f550,f549,f559,f558,f557,f556,f563,f562,f561,f560,f585,f616,f617,f620,f621,f622,f623,f624,f625,f626,f627,f628,f629,f630,f631,f632,f633,f634,f635,f636,f637,f433,f432,f426,f425,f424,f367,f366,f345,f344,f343,f339,f338,f657,f664,f665,f668,f673,f676,f681,f682,f684,f691,f695,f696,f699,f705,f706,f710,f713,f716,f746,f792,f801,f800,f811,f809,f827,f833,f843,f846,f851,f855,f863,f869,f892,f899,f905,f928,f935,f941,f961,f1101,f1100,f1099,f1098,f1097,f1096,f1095,f1092,f1091,f1087,f1084,f1083,f1080,f1079,f1075,f1063,f1062,f1061,f1057,f1056,f1052,f1051,f1050,f1047,f1043,f1041,f1039,f1038,f1035,f1034,f1033,f1032,f1031,f1027,f1026,f1021,f1020,f1017,f1016,f1012,f1005,f1004,f1003,f1002,f1001,f1000,f999,f998,f995,f994,f990,f989,f986,f985,f981,f980,f979,f976,f975,f974,f973,f971,f970,f969,f967,f1117,f1132,f1315,f1314,f1313,f1312,f1311,f1310,f1309,f1306,f1305,f1301,f1298,f1297,f1294,f1293,f1289,f1277,f1276,f1275,f1271,f1270,f1266,f1265,f1264,f1261,f1257,f1255,f1253,f1252,f1249,f1248,f1247,f1246,f1245,f1241,f1240,f1235,f1234,f1231,f1230,f1226,f1219,f1218,f1217,f1216,f1215,f1214,f1213,f1212,f1209,f1208,f1204,f1203,f1200,f1199,f1195,f1194,f1193,f1190,f1189,f1188,f1187,f1185,f1184,f1183,f1182,f1181,f1368,f1410,f1430,f1443,f1459,f1467,f1469,f1470,f1477,f1478,f1483,f1487,f1486,f1503,f1527,f1537,f1580,f1586,f1591,f1598,f1608,f1643,f1642,f1641,f1640,f1644,f1645,f1654,f1655,f1656,f1657,f1658,f1659,f1660,f1661,f1662,f1663,f1664,f1665,f1666,f1667,f1668,f1669,f1670,f1671,f1673,f1674,f1684,f1754,f1817,f1846,f1895,f1900,f1880,f1921,f1928,f2023,f2024,f2026,f2027,f2029,f2030,f2032,f2060,f2107,f2106,f2105,f2104,f2116,f2117,f2118,f2119,f2128,f2129,f2130,f2131,f2132,f2133,f2134,f2135,f2136,f2137,f2138,f2139,f2140,f2141,f2142,f2143,f2144,f2145,f2147,f2148,f2149,f2161,f2247,f2248,f2196,f2199,f2252,f2253,f2237,f2276,f2362,f2363,f2388,f2405,f2403,f2423,f2436,f2446,f2447,f2452,f2451,f2449,f2465,f2479,f2480,f2540,f2483,f2484,f2541,f2542,f2487,f2499,f2500,f2501,f2502,f2503,f2504,f2505,f2506,f2507,f2508,f2509,f2510,f2511,f2512,f2513,f2516,f2537,f2538,f2539,f2545,f2573,f2597,f2598,f2667,f2670,f2608,f2612,f2613,f2620,f2621,f2622,f2623,f2624,f2625,f2626,f2627,f2628,f2629,f2630,f2631,f2632,f2633,f2634,f2637,f2660,f2661,f2662,f2740,f2741,f2742,f2746,f2827,f2830,f2754,f2755,f2756,f2757,f2758,f2759,f2760,f2832,f2762,f2763,f2764,f2768,f2769,f2777,f2778,f2779,f2780,f2781,f2782,f2783,f2784,f2833,f2786,f2787,f2788,f2789,f2790,f2791,f2792,f2795,f2820,f2821,f2822,f2963,f2890,f2966,f2969,f2898,f2899,f2900,f2904,f2905,f2913,f2915,f2916,f2917,f2918,f2919,f2920,f2921,f2922,f2923,f2924,f2925,f2926,f2927,f2928,f2929,f2930,f2933,f2960,f2961,f2962,f3005,f3060,f3061,f4802,f4810,f4900,f4870,f4912,f4921,f4922,f5030,f4924,f4925,f4926,f5045,f5057,f5021,f5363,f5366,f5372,f5401,f5409,f5538,f5475,f5574,f5575,f5590,f5600,f5601,f5677,f5678,f5679,f5681,f5682,f5683,f5684,f5685,f5754,f6113,f6117,f6120,f6123,f6126,f6129,f6132,f6135,f6138,f6141,f6144,f6147,f6150,f6153,f6156,f6159,f6162,f6165,f5789,f5790,f5791,f6167,f6168,f6169,f6170,f6171,f6172,f6173,f6174,f6175,f6176,f6177,f6178,f6179,f6180,f6181,f6182,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6193,f6194,f6195,f6196,f6197,f6198,f6199,f6200,f6201,f5852,f5853,f5854,f5856,f5857,f5858,f5859,f5860,f6209,f6211,f6213,f6215,f6217,f6219,f6221,f6223,f6225,f6227,f6229,f6231,f6233,f6235,f6237,f6239,f6241,f6243,f6115,f6502,f6522,f6526,f6539,f6541,f6543,f6545,f6547,f6549,f6551,f6553,f6555,f6557,f6559,f6561,f6563,f6565,f6567,f6569,f6571,f6573,f6575,f6577,f6584,f6590,f6596,f6614,f6620,f6626])).
fof(f6621,plain,(
  $false | $spl10),
  inference(global_subsumption,[],[f329,f328,f330,f602,f337,f341,f346,f357,f356,f361,f360,f365,f364,f406,f405,f412,f410,f415,f414,f413,f416,f417,f418,f419,f423,f420,f429,f428,f427,f431,f430,f440,f439,f603,f458,f455,f454,f453,f464,f463,f470,f469,f471,f473,f472,f498,f497,f496,f495,f494,f493,f492,f502,f501,f500,f499,f506,f505,f504,f503,f510,f509,f508,f507,f514,f513,f512,f511,f588,f518,f517,f516,f515,f525,f524,f523,f522,f531,f528,f527,f526,f538,f537,f536,f587,f534,f533,f532,f542,f541,f540,f539,f546,f545,f544,f543,f555,f554,f553,f586,f551,f550,f549,f559,f558,f557,f556,f563,f562,f561,f560,f585,f616,f617,f620,f621,f622,f623,f624,f625,f626,f627,f628,f629,f630,f631,f632,f633,f634,f635,f636,f637,f433,f432,f426,f425,f424,f367,f366,f345,f344,f343,f339,f338,f657,f664,f665,f668,f673,f676,f681,f682,f684,f691,f695,f696,f699,f705,f706,f710,f713,f716,f746,f792,f801,f800,f811,f809,f827,f833,f843,f846,f851,f855,f863,f869,f892,f899,f905,f928,f935,f941,f961,f1101,f1100,f1099,f1098,f1097,f1096,f1095,f1092,f1091,f1087,f1084,f1083,f1080,f1079,f1075,f1063,f1062,f1061,f1057,f1056,f1052,f1051,f1050,f1047,f1043,f1041,f1039,f1038,f1035,f1034,f1033,f1032,f1031,f1027,f1026,f1021,f1020,f1017,f1016,f1012,f1005,f1004,f1003,f1002,f1001,f1000,f999,f998,f995,f994,f990,f989,f986,f985,f981,f980,f979,f976,f975,f974,f973,f971,f970,f969,f967,f1117,f1132,f1315,f1314,f1313,f1312,f1311,f1310,f1309,f1306,f1305,f1301,f1298,f1297,f1294,f1293,f1289,f1277,f1276,f1275,f1271,f1270,f1266,f1265,f1264,f1261,f1257,f1255,f1253,f1252,f1249,f1248,f1247,f1246,f1245,f1241,f1240,f1235,f1234,f1231,f1230,f1226,f1219,f1218,f1217,f1216,f1215,f1214,f1213,f1212,f1209,f1208,f1204,f1203,f1200,f1199,f1195,f1194,f1193,f1190,f1189,f1188,f1187,f1185,f1184,f1183,f1182,f1181,f1368,f1410,f1430,f1443,f1459,f1467,f1469,f1470,f1477,f1478,f1483,f1487,f1486,f1503,f1527,f1537,f1580,f1586,f1591,f1598,f1608,f1643,f1642,f1641,f1640,f1644,f1645,f1654,f1655,f1656,f1657,f1658,f1659,f1660,f1661,f1662,f1663,f1664,f1665,f1666,f1667,f1668,f1669,f1670,f1671,f1673,f1674,f1684,f1754,f1817,f1846,f1895,f1900,f1880,f1921,f1928,f2023,f2024,f2026,f2027,f2029,f2030,f2032,f2060,f2107,f2106,f2105,f2104,f2116,f2117,f2118,f2119,f2128,f2129,f2130,f2131,f2132,f2133,f2134,f2135,f2136,f2137,f2138,f2139,f2140,f2141,f2142,f2143,f2144,f2145,f2147,f2148,f2149,f2161,f2247,f2248,f2196,f2199,f2252,f2253,f2237,f2276,f2362,f2363,f2388,f2405,f2403,f2423,f2436,f2446,f2447,f2452,f2451,f2449,f2465,f2479,f2480,f2540,f2483,f2484,f2541,f2542,f2487,f2499,f2500,f2501,f2502,f2503,f2504,f2505,f2506,f2507,f2508,f2509,f2510,f2511,f2512,f2513,f2516,f2537,f2538,f2539,f2545,f2573,f2597,f2598,f2667,f2670,f2608,f2612,f2613,f2620,f2621,f2622,f2623,f2624,f2625,f2626,f2627,f2628,f2629,f2630,f2631,f2632,f2633,f2634,f2637,f2660,f2661,f2662,f2740,f2741,f2742,f2746,f2827,f2830,f2754,f2755,f2756,f2757,f2758,f2759,f2760,f2832,f2762,f2763,f2764,f2768,f2769,f2777,f2778,f2779,f2780,f2781,f2782,f2783,f2784,f2833,f2786,f2787,f2788,f2789,f2790,f2791,f2792,f2795,f2820,f2821,f2822,f2963,f2890,f2966,f2969,f2898,f2899,f2900,f2904,f2905,f2913,f2915,f2916,f2917,f2918,f2919,f2920,f2921,f2922,f2923,f2924,f2925,f2926,f2927,f2928,f2929,f2930,f2933,f2960,f2961,f2962,f3005,f3060,f3061,f4802,f4810,f4900,f4870,f4912,f4921,f4922,f5030,f4924,f4925,f4926,f5045,f5057,f5021,f5363,f5366,f5372,f5401,f5409,f5538,f5475,f5574,f5575,f5590,f5600,f5601,f5677,f5678,f5679,f5681,f5682,f5683,f5684,f5685,f5754,f6113,f6117,f6120,f6123,f6126,f6129,f6132,f6135,f6138,f6141,f6144,f6147,f6150,f6153,f6156,f6159,f6162,f6165,f5789,f5790,f5791,f6167,f6168,f6169,f6170,f6171,f6172,f6173,f6174,f6175,f6176,f6177,f6178,f6179,f6180,f6181,f6182,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6193,f6194,f6195,f6196,f6197,f6198,f6199,f6200,f6201,f5852,f5853,f5854,f5856,f5857,f5858,f5859,f5860,f6209,f6211,f6213,f6215,f6217,f6219,f6221,f6223,f6225,f6227,f6229,f6231,f6233,f6235,f6237,f6239,f6241,f6243,f6115,f6502,f6522,f6526,f6539,f6541,f6543,f6545,f6547,f6549,f6551,f6553,f6555,f6557,f6559,f6561,f6563,f6565,f6567,f6569,f6571,f6573,f6575,f6577,f6584,f6590,f6596,f6614,f6620])).
fof(f6615,plain,(
  $false | $spl10),
  inference(global_subsumption,[],[f329,f328,f330,f602,f337,f341,f346,f357,f356,f361,f360,f365,f364,f406,f405,f412,f410,f415,f414,f413,f416,f417,f418,f419,f423,f420,f429,f428,f427,f431,f430,f440,f439,f603,f458,f455,f454,f453,f464,f463,f470,f469,f471,f473,f472,f498,f497,f496,f495,f494,f493,f492,f502,f501,f500,f499,f506,f505,f504,f503,f510,f509,f508,f507,f514,f513,f512,f511,f588,f518,f517,f516,f515,f525,f524,f523,f522,f531,f528,f527,f526,f538,f537,f536,f587,f534,f533,f532,f542,f541,f540,f539,f546,f545,f544,f543,f555,f554,f553,f586,f551,f550,f549,f559,f558,f557,f556,f563,f562,f561,f560,f585,f616,f617,f620,f621,f622,f623,f624,f625,f626,f627,f628,f629,f630,f631,f632,f633,f634,f635,f636,f637,f433,f432,f426,f425,f424,f367,f366,f345,f344,f343,f339,f338,f657,f664,f665,f668,f673,f676,f681,f682,f684,f691,f695,f696,f699,f705,f706,f710,f713,f716,f746,f792,f801,f800,f811,f809,f827,f833,f843,f846,f851,f855,f863,f869,f892,f899,f905,f928,f935,f941,f961,f1101,f1100,f1099,f1098,f1097,f1096,f1095,f1092,f1091,f1087,f1084,f1083,f1080,f1079,f1075,f1063,f1062,f1061,f1057,f1056,f1052,f1051,f1050,f1047,f1043,f1041,f1039,f1038,f1035,f1034,f1033,f1032,f1031,f1027,f1026,f1021,f1020,f1017,f1016,f1012,f1005,f1004,f1003,f1002,f1001,f1000,f999,f998,f995,f994,f990,f989,f986,f985,f981,f980,f979,f976,f975,f974,f973,f971,f970,f969,f967,f1117,f1132,f1315,f1314,f1313,f1312,f1311,f1310,f1309,f1306,f1305,f1301,f1298,f1297,f1294,f1293,f1289,f1277,f1276,f1275,f1271,f1270,f1266,f1265,f1264,f1261,f1257,f1255,f1253,f1252,f1249,f1248,f1247,f1246,f1245,f1241,f1240,f1235,f1234,f1231,f1230,f1226,f1219,f1218,f1217,f1216,f1215,f1214,f1213,f1212,f1209,f1208,f1204,f1203,f1200,f1199,f1195,f1194,f1193,f1190,f1189,f1188,f1187,f1185,f1184,f1183,f1182,f1181,f1368,f1410,f1430,f1443,f1459,f1467,f1469,f1470,f1477,f1478,f1483,f1487,f1486,f1503,f1527,f1537,f1580,f1586,f1591,f1598,f1608,f1643,f1642,f1641,f1640,f1644,f1645,f1654,f1655,f1656,f1657,f1658,f1659,f1660,f1661,f1662,f1663,f1664,f1665,f1666,f1667,f1668,f1669,f1670,f1671,f1673,f1674,f1684,f1754,f1817,f1846,f1895,f1900,f1880,f1921,f1928,f2023,f2024,f2026,f2027,f2029,f2030,f2032,f2060,f2107,f2106,f2105,f2104,f2116,f2117,f2118,f2119,f2128,f2129,f2130,f2131,f2132,f2133,f2134,f2135,f2136,f2137,f2138,f2139,f2140,f2141,f2142,f2143,f2144,f2145,f2147,f2148,f2149,f2161,f2247,f2248,f2196,f2199,f2252,f2253,f2237,f2276,f2362,f2363,f2388,f2405,f2403,f2423,f2436,f2446,f2447,f2452,f2451,f2449,f2465,f2479,f2480,f2540,f2483,f2484,f2541,f2542,f2487,f2499,f2500,f2501,f2502,f2503,f2504,f2505,f2506,f2507,f2508,f2509,f2510,f2511,f2512,f2513,f2516,f2537,f2538,f2539,f2545,f2573,f2597,f2598,f2667,f2670,f2608,f2612,f2613,f2620,f2621,f2622,f2623,f2624,f2625,f2626,f2627,f2628,f2629,f2630,f2631,f2632,f2633,f2634,f2637,f2660,f2661,f2662,f2740,f2741,f2742,f2746,f2827,f2830,f2754,f2755,f2756,f2757,f2758,f2759,f2760,f2832,f2762,f2763,f2764,f2768,f2769,f2777,f2778,f2779,f2780,f2781,f2782,f2783,f2784,f2833,f2786,f2787,f2788,f2789,f2790,f2791,f2792,f2795,f2820,f2821,f2822,f2963,f2890,f2966,f2969,f2898,f2899,f2900,f2904,f2905,f2913,f2915,f2916,f2917,f2918,f2919,f2920,f2921,f2922,f2923,f2924,f2925,f2926,f2927,f2928,f2929,f2930,f2933,f2960,f2961,f2962,f3005,f3060,f3061,f4802,f4810,f4900,f4870,f4912,f4921,f4922,f5030,f4924,f4925,f4926,f5045,f5057,f5021,f5363,f5366,f5372,f5401,f5409,f5538,f5475,f5574,f5575,f5590,f5600,f5601,f5677,f5678,f5679,f5681,f5682,f5683,f5684,f5685,f5754,f6113,f6117,f6120,f6123,f6126,f6129,f6132,f6135,f6138,f6141,f6144,f6147,f6150,f6153,f6156,f6159,f6162,f6165,f5789,f5790,f5791,f6167,f6168,f6169,f6170,f6171,f6172,f6173,f6174,f6175,f6176,f6177,f6178,f6179,f6180,f6181,f6182,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6193,f6194,f6195,f6196,f6197,f6198,f6199,f6200,f6201,f5852,f5853,f5854,f5856,f5857,f5858,f5859,f5860,f6209,f6211,f6213,f6215,f6217,f6219,f6221,f6223,f6225,f6227,f6229,f6231,f6233,f6235,f6237,f6239,f6241,f6243,f6115,f6502,f6522,f6526,f6539,f6541,f6543,f6545,f6547,f6549,f6551,f6553,f6555,f6557,f6559,f6561,f6563,f6565,f6567,f6569,f6571,f6573,f6575,f6577,f6584,f6590,f6596,f6614])).
fof(f6609,plain,(
  $false | ($spl0 | $spl10)),
  inference(global_subsumption,[],[f6608,f329,f328,f330,f602,f337,f341,f346,f357,f356,f361,f360,f365,f364,f406,f405,f412,f410,f415,f414,f413,f416,f417,f418,f419,f423,f420,f429,f428,f427,f431,f430,f440,f439,f603,f458,f455,f454,f453,f464,f463,f470,f469,f471,f473,f472,f498,f497,f496,f495,f494,f493,f492,f502,f501,f500,f499,f506,f505,f504,f503,f510,f509,f508,f507,f514,f513,f512,f511,f588,f518,f517,f516,f515,f525,f524,f523,f522,f531,f528,f527,f526,f538,f537,f536,f587,f534,f533,f532,f542,f541,f540,f539,f546,f545,f544,f543,f555,f554,f553,f586,f551,f550,f549,f559,f558,f557,f556,f563,f562,f561,f560,f585,f616,f617,f620,f621,f622,f623,f624,f625,f626,f627,f628,f629,f630,f631,f632,f633,f634,f635,f636,f637,f433,f432,f426,f425,f424,f367,f366,f345,f344,f343,f339,f338,f657,f664,f665,f668,f673,f676,f681,f682,f684,f691,f695,f696,f699,f705,f706,f710,f713,f716,f746,f792,f801,f800,f811,f809,f827,f833,f843,f846,f851,f855,f863,f869,f892,f899,f905,f928,f935,f941,f961,f1101,f1100,f1099,f1098,f1097,f1096,f1095,f1092,f1091,f1087,f1084,f1083,f1080,f1079,f1075,f1063,f1062,f1061,f1057,f1056,f1052,f1051,f1050,f1047,f1043,f1041,f1039,f1038,f1035,f1034,f1033,f1032,f1031,f1027,f1026,f1021,f1020,f1017,f1016,f1012,f1005,f1004,f1003,f1002,f1001,f1000,f999,f998,f995,f994,f990,f989,f986,f985,f981,f980,f979,f976,f975,f974,f973,f971,f970,f969,f967,f1117,f1132,f1315,f1314,f1313,f1312,f1311,f1310,f1309,f1306,f1305,f1301,f1298,f1297,f1294,f1293,f1289,f1277,f1276,f1275,f1271,f1270,f1266,f1265,f1264,f1261,f1257,f1255,f1253,f1252,f1249,f1248,f1247,f1246,f1245,f1241,f1240,f1235,f1234,f1231,f1230,f1226,f1219,f1218,f1217,f1216,f1215,f1214,f1213,f1212,f1209,f1208,f1204,f1203,f1200,f1199,f1195,f1194,f1193,f1190,f1189,f1188,f1187,f1185,f1184,f1183,f1182,f1181,f1368,f1410,f1430,f1443,f1459,f1467,f1469,f1470,f1477,f1478,f1483,f1487,f1486,f1503,f1527,f1537,f1580,f1586,f1591,f1598,f1608,f1643,f1642,f1641,f1640,f1644,f1645,f1654,f1655,f1656,f1657,f1658,f1659,f1660,f1661,f1662,f1663,f1664,f1665,f1666,f1667,f1668,f1669,f1670,f1671,f1673,f1674,f1684,f1754,f1817,f1846,f1895,f1900,f1880,f1921,f1928,f2023,f2024,f2026,f2027,f2029,f2030,f2032,f2060,f2107,f2106,f2105,f2104,f2116,f2117,f2118,f2119,f2128,f2129,f2130,f2131,f2132,f2133,f2134,f2135,f2136,f2137,f2138,f2139,f2140,f2141,f2142,f2143,f2144,f2145,f2147,f2148,f2149,f2161,f2247,f2248,f2196,f2199,f2252,f2253,f2237,f2276,f2362,f2363,f2388,f2405,f2403,f2423,f2436,f2446,f2447,f2452,f2451,f2449,f2465,f2479,f2480,f2540,f2483,f2484,f2541,f2542,f2487,f2499,f2500,f2501,f2502,f2503,f2504,f2505,f2506,f2507,f2508,f2509,f2510,f2511,f2512,f2513,f2516,f2537,f2538,f2539,f2545,f2573,f2597,f2598,f2667,f2670,f2608,f2612,f2613,f2620,f2621,f2622,f2623,f2624,f2625,f2626,f2627,f2628,f2629,f2630,f2631,f2632,f2633,f2634,f2637,f2660,f2661,f2662,f2740,f2741,f2742,f2746,f2827,f2830,f2754,f2755,f2756,f2757,f2758,f2759,f2760,f2832,f2762,f2763,f2764,f2768,f2769,f2777,f2778,f2779,f2780,f2781,f2782,f2783,f2784,f2833,f2786,f2787,f2788,f2789,f2790,f2791,f2792,f2795,f2820,f2821,f2822,f2963,f2890,f2966,f2969,f2898,f2899,f2900,f2904,f2905,f2913,f2915,f2916,f2917,f2918,f2919,f2920,f2921,f2922,f2923,f2924,f2925,f2926,f2927,f2928,f2929,f2930,f2933,f2960,f2961,f2962,f3005,f3060,f3061,f4802,f4810,f4900,f4870,f4912,f4921,f4922,f5030,f4924,f4925,f4926,f5045,f5057,f5021,f5363,f5366,f5372,f5401,f5409,f5538,f5475,f5574,f5575,f5590,f5600,f5601,f5677,f5678,f5679,f5681,f5682,f5683,f5684,f5685,f5754,f6113,f6117,f6120,f6123,f6126,f6129,f6132,f6135,f6138,f6141,f6144,f6147,f6150,f6153,f6156,f6159,f6162,f6165,f5789,f5790,f5791,f6167,f6168,f6169,f6170,f6171,f6172,f6173,f6174,f6175,f6176,f6177,f6178,f6179,f6180,f6181,f6182,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6193,f6194,f6195,f6196,f6197,f6198,f6199,f6200,f6201,f5852,f5853,f5854,f5856,f5857,f5858,f5859,f5860,f6209,f6211,f6213,f6215,f6217,f6219,f6221,f6223,f6225,f6227,f6229,f6231,f6233,f6235,f6237,f6239,f6241,f6243,f6115,f6502,f6522,f6526,f6539,f6541,f6543,f6545,f6547,f6549,f6551,f6553,f6555,f6557,f6559,f6561,f6563,f6565,f6567,f6569,f6571,f6573,f6575,f6577,f6584,f6590,f6596])).
fof(f6608,plain,(
  ( ! [X53] : (s('type.integer.int',X53) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | ($spl0 | $spl10)),
  inference(subsumption_resolution,[],[f6607,f330])).
fof(f6607,plain,(
  ( ! [X53] : (~p(s(bool,'T_0')) | s('type.integer.int',X53) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | ($spl0 | $spl10)),
  inference(forward_demodulation,[],[f6606,f6115])).
fof(f6606,plain,(
  ( ! [X54,X53] : (~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X54),s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',sK12),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X53)))))))) | s('type.integer.int',X53) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | ($spl0 | $spl10)),
  inference(subsumption_resolution,[],[f6338,f330])).
fof(f6338,plain,(
  ( ! [X54,X53] : (~p(s(bool,'T_0')) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X54),s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',sK12),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X53)))))))) | s('type.integer.int',X53) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | ($spl0 | $spl10)),
  inference(backward_demodulation,[],[f6115,f5125])).
fof(f5125,plain,(
  ( ! [X54,X53] : (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',sK12),s('type.integer.int',X53))))),s('type.integer.int',X54)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X54),s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',sK12),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X53)))))))) | s('type.integer.int',X53) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl0),
  inference(superposition,[],[f464,f2743])).
fof(f6603,plain,(
  $false | ($spl0 | $spl10)),
  inference(global_subsumption,[],[f6602,f329,f328,f330,f602,f337,f341,f346,f357,f356,f361,f360,f365,f364,f406,f405,f412,f410,f415,f414,f413,f416,f417,f418,f419,f423,f420,f429,f428,f427,f431,f430,f440,f439,f603,f458,f455,f454,f453,f464,f463,f470,f469,f471,f473,f472,f498,f497,f496,f495,f494,f493,f492,f502,f501,f500,f499,f506,f505,f504,f503,f510,f509,f508,f507,f514,f513,f512,f511,f588,f518,f517,f516,f515,f525,f524,f523,f522,f531,f528,f527,f526,f538,f537,f536,f587,f534,f533,f532,f542,f541,f540,f539,f546,f545,f544,f543,f555,f554,f553,f586,f551,f550,f549,f559,f558,f557,f556,f563,f562,f561,f560,f585,f616,f617,f620,f621,f622,f623,f624,f625,f626,f627,f628,f629,f630,f631,f632,f633,f634,f635,f636,f637,f433,f432,f426,f425,f424,f367,f366,f345,f344,f343,f339,f338,f657,f664,f665,f668,f673,f676,f681,f682,f684,f691,f695,f696,f699,f705,f706,f710,f713,f716,f746,f792,f801,f800,f811,f809,f827,f833,f843,f846,f851,f855,f863,f869,f892,f899,f905,f928,f935,f941,f961,f1101,f1100,f1099,f1098,f1097,f1096,f1095,f1092,f1091,f1087,f1084,f1083,f1080,f1079,f1075,f1063,f1062,f1061,f1057,f1056,f1052,f1051,f1050,f1047,f1043,f1041,f1039,f1038,f1035,f1034,f1033,f1032,f1031,f1027,f1026,f1021,f1020,f1017,f1016,f1012,f1005,f1004,f1003,f1002,f1001,f1000,f999,f998,f995,f994,f990,f989,f986,f985,f981,f980,f979,f976,f975,f974,f973,f971,f970,f969,f967,f1117,f1132,f1315,f1314,f1313,f1312,f1311,f1310,f1309,f1306,f1305,f1301,f1298,f1297,f1294,f1293,f1289,f1277,f1276,f1275,f1271,f1270,f1266,f1265,f1264,f1261,f1257,f1255,f1253,f1252,f1249,f1248,f1247,f1246,f1245,f1241,f1240,f1235,f1234,f1231,f1230,f1226,f1219,f1218,f1217,f1216,f1215,f1214,f1213,f1212,f1209,f1208,f1204,f1203,f1200,f1199,f1195,f1194,f1193,f1190,f1189,f1188,f1187,f1185,f1184,f1183,f1182,f1181,f1368,f1410,f1430,f1443,f1459,f1467,f1469,f1470,f1477,f1478,f1483,f1487,f1486,f1503,f1527,f1537,f1580,f1586,f1591,f1598,f1608,f1643,f1642,f1641,f1640,f1644,f1645,f1654,f1655,f1656,f1657,f1658,f1659,f1660,f1661,f1662,f1663,f1664,f1665,f1666,f1667,f1668,f1669,f1670,f1671,f1673,f1674,f1684,f1754,f1817,f1846,f1895,f1900,f1880,f1921,f1928,f2023,f2024,f2026,f2027,f2029,f2030,f2032,f2060,f2107,f2106,f2105,f2104,f2116,f2117,f2118,f2119,f2128,f2129,f2130,f2131,f2132,f2133,f2134,f2135,f2136,f2137,f2138,f2139,f2140,f2141,f2142,f2143,f2144,f2145,f2147,f2148,f2149,f2161,f2247,f2248,f2196,f2199,f2252,f2253,f2237,f2276,f2362,f2363,f2388,f2405,f2403,f2423,f2436,f2446,f2447,f2452,f2451,f2449,f2465,f2479,f2480,f2540,f2483,f2484,f2541,f2542,f2487,f2499,f2500,f2501,f2502,f2503,f2504,f2505,f2506,f2507,f2508,f2509,f2510,f2511,f2512,f2513,f2516,f2537,f2538,f2539,f2545,f2573,f2597,f2598,f2667,f2670,f2608,f2612,f2613,f2620,f2621,f2622,f2623,f2624,f2625,f2626,f2627,f2628,f2629,f2630,f2631,f2632,f2633,f2634,f2637,f2660,f2661,f2662,f2740,f2741,f2742,f2746,f2827,f2830,f2754,f2755,f2756,f2757,f2758,f2759,f2760,f2832,f2762,f2763,f2764,f2768,f2769,f2777,f2778,f2779,f2780,f2781,f2782,f2783,f2784,f2833,f2786,f2787,f2788,f2789,f2790,f2791,f2792,f2795,f2820,f2821,f2822,f2963,f2890,f2966,f2969,f2898,f2899,f2900,f2904,f2905,f2913,f2915,f2916,f2917,f2918,f2919,f2920,f2921,f2922,f2923,f2924,f2925,f2926,f2927,f2928,f2929,f2930,f2933,f2960,f2961,f2962,f3005,f3060,f3061,f4802,f4810,f4900,f4870,f4912,f4921,f4922,f5030,f4924,f4925,f4926,f5045,f5057,f5021,f5363,f5366,f5372,f5401,f5409,f5538,f5475,f5574,f5575,f5590,f5600,f5601,f5677,f5678,f5679,f5681,f5682,f5683,f5684,f5685,f5754,f6113,f6117,f6120,f6123,f6126,f6129,f6132,f6135,f6138,f6141,f6144,f6147,f6150,f6153,f6156,f6159,f6162,f6165,f5789,f5790,f5791,f6167,f6168,f6169,f6170,f6171,f6172,f6173,f6174,f6175,f6176,f6177,f6178,f6179,f6180,f6181,f6182,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6193,f6194,f6195,f6196,f6197,f6198,f6199,f6200,f6201,f5852,f5853,f5854,f5856,f5857,f5858,f5859,f5860,f6209,f6211,f6213,f6215,f6217,f6219,f6221,f6223,f6225,f6227,f6229,f6231,f6233,f6235,f6237,f6239,f6241,f6243,f6115,f6502,f6522,f6526,f6539,f6541,f6543,f6545,f6547,f6549,f6551,f6553,f6555,f6557,f6559,f6561,f6563,f6565,f6567,f6569,f6571,f6573,f6575,f6577,f6584,f6590,f6596])).
fof(f6602,plain,(
  ( ! [X56] : (s('type.integer.int',X56) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | ($spl0 | $spl10)),
  inference(subsumption_resolution,[],[f6601,f330])).
fof(f6601,plain,(
  ( ! [X56] : (~p(s(bool,'T_0')) | s('type.integer.int',X56) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | ($spl0 | $spl10)),
  inference(forward_demodulation,[],[f6600,f6115])).
fof(f6600,plain,(
  ( ! [X57,X56] : (~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK12),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X56))))),s('type.integer.int',X57)))) | s('type.integer.int',X56) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | ($spl0 | $spl10)),
  inference(subsumption_resolution,[],[f6329,f330])).
fof(f6329,plain,(
  ( ! [X57,X56] : (~p(s(bool,'T_0')) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK12),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X56))))),s('type.integer.int',X57)))) | s('type.integer.int',X56) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | ($spl0 | $spl10)),
  inference(backward_demodulation,[],[f6115,f4666])).
fof(f4666,plain,(
  ( ! [X57,X56] : (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X57),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK12),s('type.integer.int',X56)))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK12),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X56))))),s('type.integer.int',X57)))) | s('type.integer.int',X56) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl0),
  inference(superposition,[],[f464,f2596])).
fof(f6597,plain,(
  $false | $spl10),
  inference(global_subsumption,[],[f329,f328,f330,f602,f337,f341,f346,f357,f356,f361,f360,f365,f364,f406,f405,f412,f410,f415,f414,f413,f416,f417,f418,f419,f423,f420,f429,f428,f427,f431,f430,f440,f439,f603,f458,f455,f454,f453,f464,f463,f470,f469,f471,f473,f472,f498,f497,f496,f495,f494,f493,f492,f502,f501,f500,f499,f506,f505,f504,f503,f510,f509,f508,f507,f514,f513,f512,f511,f588,f518,f517,f516,f515,f525,f524,f523,f522,f531,f528,f527,f526,f538,f537,f536,f587,f534,f533,f532,f542,f541,f540,f539,f546,f545,f544,f543,f555,f554,f553,f586,f551,f550,f549,f559,f558,f557,f556,f563,f562,f561,f560,f585,f616,f617,f620,f621,f622,f623,f624,f625,f626,f627,f628,f629,f630,f631,f632,f633,f634,f635,f636,f637,f433,f432,f426,f425,f424,f367,f366,f345,f344,f343,f339,f338,f657,f664,f665,f668,f673,f676,f681,f682,f684,f691,f695,f696,f699,f705,f706,f710,f713,f716,f746,f792,f801,f800,f811,f809,f827,f833,f843,f846,f851,f855,f863,f869,f892,f899,f905,f928,f935,f941,f961,f1101,f1100,f1099,f1098,f1097,f1096,f1095,f1092,f1091,f1087,f1084,f1083,f1080,f1079,f1075,f1063,f1062,f1061,f1057,f1056,f1052,f1051,f1050,f1047,f1043,f1041,f1039,f1038,f1035,f1034,f1033,f1032,f1031,f1027,f1026,f1021,f1020,f1017,f1016,f1012,f1005,f1004,f1003,f1002,f1001,f1000,f999,f998,f995,f994,f990,f989,f986,f985,f981,f980,f979,f976,f975,f974,f973,f971,f970,f969,f967,f1117,f1132,f1315,f1314,f1313,f1312,f1311,f1310,f1309,f1306,f1305,f1301,f1298,f1297,f1294,f1293,f1289,f1277,f1276,f1275,f1271,f1270,f1266,f1265,f1264,f1261,f1257,f1255,f1253,f1252,f1249,f1248,f1247,f1246,f1245,f1241,f1240,f1235,f1234,f1231,f1230,f1226,f1219,f1218,f1217,f1216,f1215,f1214,f1213,f1212,f1209,f1208,f1204,f1203,f1200,f1199,f1195,f1194,f1193,f1190,f1189,f1188,f1187,f1185,f1184,f1183,f1182,f1181,f1368,f1410,f1430,f1443,f1459,f1467,f1469,f1470,f1477,f1478,f1483,f1487,f1486,f1503,f1527,f1537,f1580,f1586,f1591,f1598,f1608,f1643,f1642,f1641,f1640,f1644,f1645,f1654,f1655,f1656,f1657,f1658,f1659,f1660,f1661,f1662,f1663,f1664,f1665,f1666,f1667,f1668,f1669,f1670,f1671,f1673,f1674,f1684,f1754,f1817,f1846,f1895,f1900,f1880,f1921,f1928,f2023,f2024,f2026,f2027,f2029,f2030,f2032,f2060,f2107,f2106,f2105,f2104,f2116,f2117,f2118,f2119,f2128,f2129,f2130,f2131,f2132,f2133,f2134,f2135,f2136,f2137,f2138,f2139,f2140,f2141,f2142,f2143,f2144,f2145,f2147,f2148,f2149,f2161,f2247,f2248,f2196,f2199,f2252,f2253,f2237,f2276,f2362,f2363,f2388,f2405,f2403,f2423,f2436,f2446,f2447,f2452,f2451,f2449,f2465,f2479,f2480,f2540,f2483,f2484,f2541,f2542,f2487,f2499,f2500,f2501,f2502,f2503,f2504,f2505,f2506,f2507,f2508,f2509,f2510,f2511,f2512,f2513,f2516,f2537,f2538,f2539,f2545,f2573,f2597,f2598,f2667,f2670,f2608,f2612,f2613,f2620,f2621,f2622,f2623,f2624,f2625,f2626,f2627,f2628,f2629,f2630,f2631,f2632,f2633,f2634,f2637,f2660,f2661,f2662,f2740,f2741,f2742,f2746,f2827,f2830,f2754,f2755,f2756,f2757,f2758,f2759,f2760,f2832,f2762,f2763,f2764,f2768,f2769,f2777,f2778,f2779,f2780,f2781,f2782,f2783,f2784,f2833,f2786,f2787,f2788,f2789,f2790,f2791,f2792,f2795,f2820,f2821,f2822,f2963,f2890,f2966,f2969,f2898,f2899,f2900,f2904,f2905,f2913,f2915,f2916,f2917,f2918,f2919,f2920,f2921,f2922,f2923,f2924,f2925,f2926,f2927,f2928,f2929,f2930,f2933,f2960,f2961,f2962,f3005,f3060,f3061,f4802,f4810,f4900,f4870,f4912,f4921,f4922,f5030,f4924,f4925,f4926,f5045,f5057,f5021,f5363,f5366,f5372,f5401,f5409,f5538,f5475,f5574,f5575,f5590,f5600,f5601,f5677,f5678,f5679,f5681,f5682,f5683,f5684,f5685,f5754,f6113,f6117,f6120,f6123,f6126,f6129,f6132,f6135,f6138,f6141,f6144,f6147,f6150,f6153,f6156,f6159,f6162,f6165,f5789,f5790,f5791,f6167,f6168,f6169,f6170,f6171,f6172,f6173,f6174,f6175,f6176,f6177,f6178,f6179,f6180,f6181,f6182,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6193,f6194,f6195,f6196,f6197,f6198,f6199,f6200,f6201,f5852,f5853,f5854,f5856,f5857,f5858,f5859,f5860,f6209,f6211,f6213,f6215,f6217,f6219,f6221,f6223,f6225,f6227,f6229,f6231,f6233,f6235,f6237,f6239,f6241,f6243,f6115,f6502,f6522,f6526,f6539,f6541,f6543,f6545,f6547,f6549,f6551,f6553,f6555,f6557,f6559,f6561,f6563,f6565,f6567,f6569,f6571,f6573,f6575,f6577,f6584,f6590,f6596])).
fof(f6591,plain,(
  $false | $spl10),
  inference(global_subsumption,[],[f329,f328,f330,f602,f337,f341,f346,f357,f356,f361,f360,f365,f364,f406,f405,f412,f410,f415,f414,f413,f416,f417,f418,f419,f423,f420,f429,f428,f427,f431,f430,f440,f439,f603,f458,f455,f454,f453,f464,f463,f470,f469,f471,f473,f472,f498,f497,f496,f495,f494,f493,f492,f502,f501,f500,f499,f506,f505,f504,f503,f510,f509,f508,f507,f514,f513,f512,f511,f588,f518,f517,f516,f515,f525,f524,f523,f522,f531,f528,f527,f526,f538,f537,f536,f587,f534,f533,f532,f542,f541,f540,f539,f546,f545,f544,f543,f555,f554,f553,f586,f551,f550,f549,f559,f558,f557,f556,f563,f562,f561,f560,f585,f616,f617,f620,f621,f622,f623,f624,f625,f626,f627,f628,f629,f630,f631,f632,f633,f634,f635,f636,f637,f433,f432,f426,f425,f424,f367,f366,f345,f344,f343,f339,f338,f657,f664,f665,f668,f673,f676,f681,f682,f684,f691,f695,f696,f699,f705,f706,f710,f713,f716,f746,f792,f801,f800,f811,f809,f827,f833,f843,f846,f851,f855,f863,f869,f892,f899,f905,f928,f935,f941,f961,f1101,f1100,f1099,f1098,f1097,f1096,f1095,f1092,f1091,f1087,f1084,f1083,f1080,f1079,f1075,f1063,f1062,f1061,f1057,f1056,f1052,f1051,f1050,f1047,f1043,f1041,f1039,f1038,f1035,f1034,f1033,f1032,f1031,f1027,f1026,f1021,f1020,f1017,f1016,f1012,f1005,f1004,f1003,f1002,f1001,f1000,f999,f998,f995,f994,f990,f989,f986,f985,f981,f980,f979,f976,f975,f974,f973,f971,f970,f969,f967,f1117,f1132,f1315,f1314,f1313,f1312,f1311,f1310,f1309,f1306,f1305,f1301,f1298,f1297,f1294,f1293,f1289,f1277,f1276,f1275,f1271,f1270,f1266,f1265,f1264,f1261,f1257,f1255,f1253,f1252,f1249,f1248,f1247,f1246,f1245,f1241,f1240,f1235,f1234,f1231,f1230,f1226,f1219,f1218,f1217,f1216,f1215,f1214,f1213,f1212,f1209,f1208,f1204,f1203,f1200,f1199,f1195,f1194,f1193,f1190,f1189,f1188,f1187,f1185,f1184,f1183,f1182,f1181,f1368,f1410,f1430,f1443,f1459,f1467,f1469,f1470,f1477,f1478,f1483,f1487,f1486,f1503,f1527,f1537,f1580,f1586,f1591,f1598,f1608,f1643,f1642,f1641,f1640,f1644,f1645,f1654,f1655,f1656,f1657,f1658,f1659,f1660,f1661,f1662,f1663,f1664,f1665,f1666,f1667,f1668,f1669,f1670,f1671,f1673,f1674,f1684,f1754,f1817,f1846,f1895,f1900,f1880,f1921,f1928,f2023,f2024,f2026,f2027,f2029,f2030,f2032,f2060,f2107,f2106,f2105,f2104,f2116,f2117,f2118,f2119,f2128,f2129,f2130,f2131,f2132,f2133,f2134,f2135,f2136,f2137,f2138,f2139,f2140,f2141,f2142,f2143,f2144,f2145,f2147,f2148,f2149,f2161,f2247,f2248,f2196,f2199,f2252,f2253,f2237,f2276,f2362,f2363,f2388,f2405,f2403,f2423,f2436,f2446,f2447,f2452,f2451,f2449,f2465,f2479,f2480,f2540,f2483,f2484,f2541,f2542,f2487,f2499,f2500,f2501,f2502,f2503,f2504,f2505,f2506,f2507,f2508,f2509,f2510,f2511,f2512,f2513,f2516,f2537,f2538,f2539,f2545,f2573,f2597,f2598,f2667,f2670,f2608,f2612,f2613,f2620,f2621,f2622,f2623,f2624,f2625,f2626,f2627,f2628,f2629,f2630,f2631,f2632,f2633,f2634,f2637,f2660,f2661,f2662,f2740,f2741,f2742,f2746,f2827,f2830,f2754,f2755,f2756,f2757,f2758,f2759,f2760,f2832,f2762,f2763,f2764,f2768,f2769,f2777,f2778,f2779,f2780,f2781,f2782,f2783,f2784,f2833,f2786,f2787,f2788,f2789,f2790,f2791,f2792,f2795,f2820,f2821,f2822,f2963,f2890,f2966,f2969,f2898,f2899,f2900,f2904,f2905,f2913,f2915,f2916,f2917,f2918,f2919,f2920,f2921,f2922,f2923,f2924,f2925,f2926,f2927,f2928,f2929,f2930,f2933,f2960,f2961,f2962,f3005,f3060,f3061,f4802,f4810,f4900,f4870,f4912,f4921,f4922,f5030,f4924,f4925,f4926,f5045,f5057,f5021,f5363,f5366,f5372,f5401,f5409,f5538,f5475,f5574,f5575,f5590,f5600,f5601,f5677,f5678,f5679,f5681,f5682,f5683,f5684,f5685,f5754,f6113,f6117,f6120,f6123,f6126,f6129,f6132,f6135,f6138,f6141,f6144,f6147,f6150,f6153,f6156,f6159,f6162,f6165,f5789,f5790,f5791,f6167,f6168,f6169,f6170,f6171,f6172,f6173,f6174,f6175,f6176,f6177,f6178,f6179,f6180,f6181,f6182,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6193,f6194,f6195,f6196,f6197,f6198,f6199,f6200,f6201,f5852,f5853,f5854,f5856,f5857,f5858,f5859,f5860,f6209,f6211,f6213,f6215,f6217,f6219,f6221,f6223,f6225,f6227,f6229,f6231,f6233,f6235,f6237,f6239,f6241,f6243,f6115,f6502,f6522,f6526,f6539,f6541,f6543,f6545,f6547,f6549,f6551,f6553,f6555,f6557,f6559,f6561,f6563,f6565,f6567,f6569,f6571,f6573,f6575,f6577,f6584,f6590])).
fof(f6585,plain,(
  $false | $spl10),
  inference(global_subsumption,[],[f329,f328,f330,f602,f337,f341,f346,f357,f356,f361,f360,f365,f364,f406,f405,f412,f410,f415,f414,f413,f416,f417,f418,f419,f423,f420,f429,f428,f427,f431,f430,f440,f439,f603,f458,f455,f454,f453,f464,f463,f470,f469,f471,f473,f472,f498,f497,f496,f495,f494,f493,f492,f502,f501,f500,f499,f506,f505,f504,f503,f510,f509,f508,f507,f514,f513,f512,f511,f588,f518,f517,f516,f515,f525,f524,f523,f522,f531,f528,f527,f526,f538,f537,f536,f587,f534,f533,f532,f542,f541,f540,f539,f546,f545,f544,f543,f555,f554,f553,f586,f551,f550,f549,f559,f558,f557,f556,f563,f562,f561,f560,f585,f616,f617,f620,f621,f622,f623,f624,f625,f626,f627,f628,f629,f630,f631,f632,f633,f634,f635,f636,f637,f433,f432,f426,f425,f424,f367,f366,f345,f344,f343,f339,f338,f657,f664,f665,f668,f673,f676,f681,f682,f684,f691,f695,f696,f699,f705,f706,f710,f713,f716,f746,f792,f801,f800,f811,f809,f827,f833,f843,f846,f851,f855,f863,f869,f892,f899,f905,f928,f935,f941,f961,f1101,f1100,f1099,f1098,f1097,f1096,f1095,f1092,f1091,f1087,f1084,f1083,f1080,f1079,f1075,f1063,f1062,f1061,f1057,f1056,f1052,f1051,f1050,f1047,f1043,f1041,f1039,f1038,f1035,f1034,f1033,f1032,f1031,f1027,f1026,f1021,f1020,f1017,f1016,f1012,f1005,f1004,f1003,f1002,f1001,f1000,f999,f998,f995,f994,f990,f989,f986,f985,f981,f980,f979,f976,f975,f974,f973,f971,f970,f969,f967,f1117,f1132,f1315,f1314,f1313,f1312,f1311,f1310,f1309,f1306,f1305,f1301,f1298,f1297,f1294,f1293,f1289,f1277,f1276,f1275,f1271,f1270,f1266,f1265,f1264,f1261,f1257,f1255,f1253,f1252,f1249,f1248,f1247,f1246,f1245,f1241,f1240,f1235,f1234,f1231,f1230,f1226,f1219,f1218,f1217,f1216,f1215,f1214,f1213,f1212,f1209,f1208,f1204,f1203,f1200,f1199,f1195,f1194,f1193,f1190,f1189,f1188,f1187,f1185,f1184,f1183,f1182,f1181,f1368,f1410,f1430,f1443,f1459,f1467,f1469,f1470,f1477,f1478,f1483,f1487,f1486,f1503,f1527,f1537,f1580,f1586,f1591,f1598,f1608,f1643,f1642,f1641,f1640,f1644,f1645,f1654,f1655,f1656,f1657,f1658,f1659,f1660,f1661,f1662,f1663,f1664,f1665,f1666,f1667,f1668,f1669,f1670,f1671,f1673,f1674,f1684,f1754,f1817,f1846,f1895,f1900,f1880,f1921,f1928,f2023,f2024,f2026,f2027,f2029,f2030,f2032,f2060,f2107,f2106,f2105,f2104,f2116,f2117,f2118,f2119,f2128,f2129,f2130,f2131,f2132,f2133,f2134,f2135,f2136,f2137,f2138,f2139,f2140,f2141,f2142,f2143,f2144,f2145,f2147,f2148,f2149,f2161,f2247,f2248,f2196,f2199,f2252,f2253,f2237,f2276,f2362,f2363,f2388,f2405,f2403,f2423,f2436,f2446,f2447,f2452,f2451,f2449,f2465,f2479,f2480,f2540,f2483,f2484,f2541,f2542,f2487,f2499,f2500,f2501,f2502,f2503,f2504,f2505,f2506,f2507,f2508,f2509,f2510,f2511,f2512,f2513,f2516,f2537,f2538,f2539,f2545,f2573,f2597,f2598,f2667,f2670,f2608,f2612,f2613,f2620,f2621,f2622,f2623,f2624,f2625,f2626,f2627,f2628,f2629,f2630,f2631,f2632,f2633,f2634,f2637,f2660,f2661,f2662,f2740,f2741,f2742,f2746,f2827,f2830,f2754,f2755,f2756,f2757,f2758,f2759,f2760,f2832,f2762,f2763,f2764,f2768,f2769,f2777,f2778,f2779,f2780,f2781,f2782,f2783,f2784,f2833,f2786,f2787,f2788,f2789,f2790,f2791,f2792,f2795,f2820,f2821,f2822,f2963,f2890,f2966,f2969,f2898,f2899,f2900,f2904,f2905,f2913,f2915,f2916,f2917,f2918,f2919,f2920,f2921,f2922,f2923,f2924,f2925,f2926,f2927,f2928,f2929,f2930,f2933,f2960,f2961,f2962,f3005,f3060,f3061,f4802,f4810,f4900,f4870,f4912,f4921,f4922,f5030,f4924,f4925,f4926,f5045,f5057,f5021,f5363,f5366,f5372,f5401,f5409,f5538,f5475,f5574,f5575,f5590,f5600,f5601,f5677,f5678,f5679,f5681,f5682,f5683,f5684,f5685,f5754,f6113,f6117,f6120,f6123,f6126,f6129,f6132,f6135,f6138,f6141,f6144,f6147,f6150,f6153,f6156,f6159,f6162,f6165,f5789,f5790,f5791,f6167,f6168,f6169,f6170,f6171,f6172,f6173,f6174,f6175,f6176,f6177,f6178,f6179,f6180,f6181,f6182,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6193,f6194,f6195,f6196,f6197,f6198,f6199,f6200,f6201,f5852,f5853,f5854,f5856,f5857,f5858,f5859,f5860,f6209,f6211,f6213,f6215,f6217,f6219,f6221,f6223,f6225,f6227,f6229,f6231,f6233,f6235,f6237,f6239,f6241,f6243,f6115,f6502,f6522,f6526,f6539,f6541,f6543,f6545,f6547,f6549,f6551,f6553,f6555,f6557,f6559,f6561,f6563,f6565,f6567,f6569,f6571,f6573,f6575,f6577,f6584])).
fof(f6578,plain,(
  $false | $spl10),
  inference(global_subsumption,[],[f329,f328,f330,f602,f337,f341,f346,f357,f356,f361,f360,f365,f364,f406,f405,f412,f410,f415,f414,f413,f416,f417,f418,f419,f423,f420,f429,f428,f427,f431,f430,f440,f439,f603,f458,f455,f454,f453,f464,f463,f470,f469,f471,f473,f472,f498,f497,f496,f495,f494,f493,f492,f502,f501,f500,f499,f506,f505,f504,f503,f510,f509,f508,f507,f514,f513,f512,f511,f588,f518,f517,f516,f515,f525,f524,f523,f522,f531,f528,f527,f526,f538,f537,f536,f587,f534,f533,f532,f542,f541,f540,f539,f546,f545,f544,f543,f555,f554,f553,f586,f551,f550,f549,f559,f558,f557,f556,f563,f562,f561,f560,f585,f616,f617,f620,f621,f622,f623,f624,f625,f626,f627,f628,f629,f630,f631,f632,f633,f634,f635,f636,f637,f433,f432,f426,f425,f424,f367,f366,f345,f344,f343,f339,f338,f657,f664,f665,f668,f673,f676,f681,f682,f684,f691,f695,f696,f699,f705,f706,f710,f713,f716,f746,f792,f801,f800,f811,f809,f827,f833,f843,f846,f851,f855,f863,f869,f892,f899,f905,f928,f935,f941,f961,f1101,f1100,f1099,f1098,f1097,f1096,f1095,f1092,f1091,f1087,f1084,f1083,f1080,f1079,f1075,f1063,f1062,f1061,f1057,f1056,f1052,f1051,f1050,f1047,f1043,f1041,f1039,f1038,f1035,f1034,f1033,f1032,f1031,f1027,f1026,f1021,f1020,f1017,f1016,f1012,f1005,f1004,f1003,f1002,f1001,f1000,f999,f998,f995,f994,f990,f989,f986,f985,f981,f980,f979,f976,f975,f974,f973,f971,f970,f969,f967,f1117,f1132,f1315,f1314,f1313,f1312,f1311,f1310,f1309,f1306,f1305,f1301,f1298,f1297,f1294,f1293,f1289,f1277,f1276,f1275,f1271,f1270,f1266,f1265,f1264,f1261,f1257,f1255,f1253,f1252,f1249,f1248,f1247,f1246,f1245,f1241,f1240,f1235,f1234,f1231,f1230,f1226,f1219,f1218,f1217,f1216,f1215,f1214,f1213,f1212,f1209,f1208,f1204,f1203,f1200,f1199,f1195,f1194,f1193,f1190,f1189,f1188,f1187,f1185,f1184,f1183,f1182,f1181,f1368,f1410,f1430,f1443,f1459,f1467,f1469,f1470,f1477,f1478,f1483,f1487,f1486,f1503,f1527,f1537,f1580,f1586,f1591,f1598,f1608,f1643,f1642,f1641,f1640,f1644,f1645,f1654,f1655,f1656,f1657,f1658,f1659,f1660,f1661,f1662,f1663,f1664,f1665,f1666,f1667,f1668,f1669,f1670,f1671,f1673,f1674,f1684,f1754,f1817,f1846,f1895,f1900,f1880,f1921,f1928,f2023,f2024,f2026,f2027,f2029,f2030,f2032,f2060,f2107,f2106,f2105,f2104,f2116,f2117,f2118,f2119,f2128,f2129,f2130,f2131,f2132,f2133,f2134,f2135,f2136,f2137,f2138,f2139,f2140,f2141,f2142,f2143,f2144,f2145,f2147,f2148,f2149,f2161,f2247,f2248,f2196,f2199,f2252,f2253,f2237,f2276,f2362,f2363,f2388,f2405,f2403,f2423,f2436,f2446,f2447,f2452,f2451,f2449,f2465,f2479,f2480,f2540,f2483,f2484,f2541,f2542,f2487,f2499,f2500,f2501,f2502,f2503,f2504,f2505,f2506,f2507,f2508,f2509,f2510,f2511,f2512,f2513,f2516,f2537,f2538,f2539,f2545,f2573,f2597,f2598,f2667,f2670,f2608,f2612,f2613,f2620,f2621,f2622,f2623,f2624,f2625,f2626,f2627,f2628,f2629,f2630,f2631,f2632,f2633,f2634,f2637,f2660,f2661,f2662,f2740,f2741,f2742,f2746,f2827,f2830,f2754,f2755,f2756,f2757,f2758,f2759,f2760,f2832,f2762,f2763,f2764,f2768,f2769,f2777,f2778,f2779,f2780,f2781,f2782,f2783,f2784,f2833,f2786,f2787,f2788,f2789,f2790,f2791,f2792,f2795,f2820,f2821,f2822,f2963,f2890,f2966,f2969,f2898,f2899,f2900,f2904,f2905,f2913,f2915,f2916,f2917,f2918,f2919,f2920,f2921,f2922,f2923,f2924,f2925,f2926,f2927,f2928,f2929,f2930,f2933,f2960,f2961,f2962,f3005,f3060,f3061,f4802,f4810,f4900,f4870,f4912,f4921,f4922,f5030,f4924,f4925,f4926,f5045,f5057,f5021,f5363,f5366,f5372,f5401,f5409,f5538,f5475,f5574,f5575,f5590,f5600,f5601,f5677,f5678,f5679,f5681,f5682,f5683,f5684,f5685,f5754,f6113,f6117,f6120,f6123,f6126,f6129,f6132,f6135,f6138,f6141,f6144,f6147,f6150,f6153,f6156,f6159,f6162,f6165,f5789,f5790,f5791,f6167,f6168,f6169,f6170,f6171,f6172,f6173,f6174,f6175,f6176,f6177,f6178,f6179,f6180,f6181,f6182,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6193,f6194,f6195,f6196,f6197,f6198,f6199,f6200,f6201,f5852,f5853,f5854,f5856,f5857,f5858,f5859,f5860,f6209,f6211,f6213,f6215,f6217,f6219,f6221,f6223,f6225,f6227,f6229,f6231,f6233,f6235,f6237,f6239,f6241,f6243,f6115,f6502,f6522,f6526,f6539,f6541,f6543,f6545,f6547,f6549,f6551,f6553,f6555,f6557,f6559,f6561,f6563,f6565,f6567,f6569,f6571,f6573,f6575,f6577])).
fof(f6576,plain,(
  $false | $spl10),
  inference(global_subsumption,[],[f329,f328,f330,f602,f337,f341,f346,f357,f356,f361,f360,f365,f364,f406,f405,f412,f410,f415,f414,f413,f416,f417,f418,f419,f423,f420,f429,f428,f427,f431,f430,f440,f439,f603,f458,f455,f454,f453,f464,f463,f470,f469,f471,f473,f472,f498,f497,f496,f495,f494,f493,f492,f502,f501,f500,f499,f506,f505,f504,f503,f510,f509,f508,f507,f514,f513,f512,f511,f588,f518,f517,f516,f515,f525,f524,f523,f522,f531,f528,f527,f526,f538,f537,f536,f587,f534,f533,f532,f542,f541,f540,f539,f546,f545,f544,f543,f555,f554,f553,f586,f551,f550,f549,f559,f558,f557,f556,f563,f562,f561,f560,f585,f616,f617,f620,f621,f622,f623,f624,f625,f626,f627,f628,f629,f630,f631,f632,f633,f634,f635,f636,f637,f433,f432,f426,f425,f424,f367,f366,f345,f344,f343,f339,f338,f657,f664,f665,f668,f673,f676,f681,f682,f684,f691,f695,f696,f699,f705,f706,f710,f713,f716,f746,f792,f801,f800,f811,f809,f827,f833,f843,f846,f851,f855,f863,f869,f892,f899,f905,f928,f935,f941,f961,f1101,f1100,f1099,f1098,f1097,f1096,f1095,f1092,f1091,f1087,f1084,f1083,f1080,f1079,f1075,f1063,f1062,f1061,f1057,f1056,f1052,f1051,f1050,f1047,f1043,f1041,f1039,f1038,f1035,f1034,f1033,f1032,f1031,f1027,f1026,f1021,f1020,f1017,f1016,f1012,f1005,f1004,f1003,f1002,f1001,f1000,f999,f998,f995,f994,f990,f989,f986,f985,f981,f980,f979,f976,f975,f974,f973,f971,f970,f969,f967,f1117,f1132,f1315,f1314,f1313,f1312,f1311,f1310,f1309,f1306,f1305,f1301,f1298,f1297,f1294,f1293,f1289,f1277,f1276,f1275,f1271,f1270,f1266,f1265,f1264,f1261,f1257,f1255,f1253,f1252,f1249,f1248,f1247,f1246,f1245,f1241,f1240,f1235,f1234,f1231,f1230,f1226,f1219,f1218,f1217,f1216,f1215,f1214,f1213,f1212,f1209,f1208,f1204,f1203,f1200,f1199,f1195,f1194,f1193,f1190,f1189,f1188,f1187,f1185,f1184,f1183,f1182,f1181,f1368,f1410,f1430,f1443,f1459,f1467,f1469,f1470,f1477,f1478,f1483,f1487,f1486,f1503,f1527,f1537,f1580,f1586,f1591,f1598,f1608,f1643,f1642,f1641,f1640,f1644,f1645,f1654,f1655,f1656,f1657,f1658,f1659,f1660,f1661,f1662,f1663,f1664,f1665,f1666,f1667,f1668,f1669,f1670,f1671,f1673,f1674,f1684,f1754,f1817,f1846,f1895,f1900,f1880,f1921,f1928,f2023,f2024,f2026,f2027,f2029,f2030,f2032,f2060,f2107,f2106,f2105,f2104,f2116,f2117,f2118,f2119,f2128,f2129,f2130,f2131,f2132,f2133,f2134,f2135,f2136,f2137,f2138,f2139,f2140,f2141,f2142,f2143,f2144,f2145,f2147,f2148,f2149,f2161,f2247,f2248,f2196,f2199,f2252,f2253,f2237,f2276,f2362,f2363,f2388,f2405,f2403,f2423,f2436,f2446,f2447,f2452,f2451,f2449,f2465,f2479,f2480,f2540,f2483,f2484,f2541,f2542,f2487,f2499,f2500,f2501,f2502,f2503,f2504,f2505,f2506,f2507,f2508,f2509,f2510,f2511,f2512,f2513,f2516,f2537,f2538,f2539,f2545,f2573,f2597,f2598,f2667,f2670,f2608,f2612,f2613,f2620,f2621,f2622,f2623,f2624,f2625,f2626,f2627,f2628,f2629,f2630,f2631,f2632,f2633,f2634,f2637,f2660,f2661,f2662,f2740,f2741,f2742,f2746,f2827,f2830,f2754,f2755,f2756,f2757,f2758,f2759,f2760,f2832,f2762,f2763,f2764,f2768,f2769,f2777,f2778,f2779,f2780,f2781,f2782,f2783,f2784,f2833,f2786,f2787,f2788,f2789,f2790,f2791,f2792,f2795,f2820,f2821,f2822,f2963,f2890,f2966,f2969,f2898,f2899,f2900,f2904,f2905,f2913,f2915,f2916,f2917,f2918,f2919,f2920,f2921,f2922,f2923,f2924,f2925,f2926,f2927,f2928,f2929,f2930,f2933,f2960,f2961,f2962,f3005,f3060,f3061,f4802,f4810,f4900,f4870,f4912,f4921,f4922,f5030,f4924,f4925,f4926,f5045,f5057,f5021,f5363,f5366,f5372,f5401,f5409,f5538,f5475,f5574,f5575,f5590,f5600,f5601,f5677,f5678,f5679,f5681,f5682,f5683,f5684,f5685,f5754,f6113,f6117,f6120,f6123,f6126,f6129,f6132,f6135,f6138,f6141,f6144,f6147,f6150,f6153,f6156,f6159,f6162,f6165,f5789,f5790,f5791,f6167,f6168,f6169,f6170,f6171,f6172,f6173,f6174,f6175,f6176,f6177,f6178,f6179,f6180,f6181,f6182,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6193,f6194,f6195,f6196,f6197,f6198,f6199,f6200,f6201,f5852,f5853,f5854,f5856,f5857,f5858,f5859,f5860,f6209,f6211,f6213,f6215,f6217,f6219,f6221,f6223,f6225,f6227,f6229,f6231,f6233,f6235,f6237,f6239,f6241,f6243,f6115,f6502,f6522,f6526,f6539,f6541,f6543,f6545,f6547,f6549,f6551,f6553,f6555,f6557,f6559,f6561,f6563,f6565,f6567,f6569,f6571,f6573,f6575])).
fof(f6574,plain,(
  $false | $spl10),
  inference(global_subsumption,[],[f329,f328,f330,f602,f337,f341,f346,f357,f356,f361,f360,f365,f364,f406,f405,f412,f410,f415,f414,f413,f416,f417,f418,f419,f423,f420,f429,f428,f427,f431,f430,f440,f439,f603,f458,f455,f454,f453,f464,f463,f470,f469,f471,f473,f472,f498,f497,f496,f495,f494,f493,f492,f502,f501,f500,f499,f506,f505,f504,f503,f510,f509,f508,f507,f514,f513,f512,f511,f588,f518,f517,f516,f515,f525,f524,f523,f522,f531,f528,f527,f526,f538,f537,f536,f587,f534,f533,f532,f542,f541,f540,f539,f546,f545,f544,f543,f555,f554,f553,f586,f551,f550,f549,f559,f558,f557,f556,f563,f562,f561,f560,f585,f616,f617,f620,f621,f622,f623,f624,f625,f626,f627,f628,f629,f630,f631,f632,f633,f634,f635,f636,f637,f433,f432,f426,f425,f424,f367,f366,f345,f344,f343,f339,f338,f657,f664,f665,f668,f673,f676,f681,f682,f684,f691,f695,f696,f699,f705,f706,f710,f713,f716,f746,f792,f801,f800,f811,f809,f827,f833,f843,f846,f851,f855,f863,f869,f892,f899,f905,f928,f935,f941,f961,f1101,f1100,f1099,f1098,f1097,f1096,f1095,f1092,f1091,f1087,f1084,f1083,f1080,f1079,f1075,f1063,f1062,f1061,f1057,f1056,f1052,f1051,f1050,f1047,f1043,f1041,f1039,f1038,f1035,f1034,f1033,f1032,f1031,f1027,f1026,f1021,f1020,f1017,f1016,f1012,f1005,f1004,f1003,f1002,f1001,f1000,f999,f998,f995,f994,f990,f989,f986,f985,f981,f980,f979,f976,f975,f974,f973,f971,f970,f969,f967,f1117,f1132,f1315,f1314,f1313,f1312,f1311,f1310,f1309,f1306,f1305,f1301,f1298,f1297,f1294,f1293,f1289,f1277,f1276,f1275,f1271,f1270,f1266,f1265,f1264,f1261,f1257,f1255,f1253,f1252,f1249,f1248,f1247,f1246,f1245,f1241,f1240,f1235,f1234,f1231,f1230,f1226,f1219,f1218,f1217,f1216,f1215,f1214,f1213,f1212,f1209,f1208,f1204,f1203,f1200,f1199,f1195,f1194,f1193,f1190,f1189,f1188,f1187,f1185,f1184,f1183,f1182,f1181,f1368,f1410,f1430,f1443,f1459,f1467,f1469,f1470,f1477,f1478,f1483,f1487,f1486,f1503,f1527,f1537,f1580,f1586,f1591,f1598,f1608,f1643,f1642,f1641,f1640,f1644,f1645,f1654,f1655,f1656,f1657,f1658,f1659,f1660,f1661,f1662,f1663,f1664,f1665,f1666,f1667,f1668,f1669,f1670,f1671,f1673,f1674,f1684,f1754,f1817,f1846,f1895,f1900,f1880,f1921,f1928,f2023,f2024,f2026,f2027,f2029,f2030,f2032,f2060,f2107,f2106,f2105,f2104,f2116,f2117,f2118,f2119,f2128,f2129,f2130,f2131,f2132,f2133,f2134,f2135,f2136,f2137,f2138,f2139,f2140,f2141,f2142,f2143,f2144,f2145,f2147,f2148,f2149,f2161,f2247,f2248,f2196,f2199,f2252,f2253,f2237,f2276,f2362,f2363,f2388,f2405,f2403,f2423,f2436,f2446,f2447,f2452,f2451,f2449,f2465,f2479,f2480,f2540,f2483,f2484,f2541,f2542,f2487,f2499,f2500,f2501,f2502,f2503,f2504,f2505,f2506,f2507,f2508,f2509,f2510,f2511,f2512,f2513,f2516,f2537,f2538,f2539,f2545,f2573,f2597,f2598,f2667,f2670,f2608,f2612,f2613,f2620,f2621,f2622,f2623,f2624,f2625,f2626,f2627,f2628,f2629,f2630,f2631,f2632,f2633,f2634,f2637,f2660,f2661,f2662,f2740,f2741,f2742,f2746,f2827,f2830,f2754,f2755,f2756,f2757,f2758,f2759,f2760,f2832,f2762,f2763,f2764,f2768,f2769,f2777,f2778,f2779,f2780,f2781,f2782,f2783,f2784,f2833,f2786,f2787,f2788,f2789,f2790,f2791,f2792,f2795,f2820,f2821,f2822,f2963,f2890,f2966,f2969,f2898,f2899,f2900,f2904,f2905,f2913,f2915,f2916,f2917,f2918,f2919,f2920,f2921,f2922,f2923,f2924,f2925,f2926,f2927,f2928,f2929,f2930,f2933,f2960,f2961,f2962,f3005,f3060,f3061,f4802,f4810,f4900,f4870,f4912,f4921,f4922,f5030,f4924,f4925,f4926,f5045,f5057,f5021,f5363,f5366,f5372,f5401,f5409,f5538,f5475,f5574,f5575,f5590,f5600,f5601,f5677,f5678,f5679,f5681,f5682,f5683,f5684,f5685,f5754,f6113,f6117,f6120,f6123,f6126,f6129,f6132,f6135,f6138,f6141,f6144,f6147,f6150,f6153,f6156,f6159,f6162,f6165,f5789,f5790,f5791,f6167,f6168,f6169,f6170,f6171,f6172,f6173,f6174,f6175,f6176,f6177,f6178,f6179,f6180,f6181,f6182,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6193,f6194,f6195,f6196,f6197,f6198,f6199,f6200,f6201,f5852,f5853,f5854,f5856,f5857,f5858,f5859,f5860,f6209,f6211,f6213,f6215,f6217,f6219,f6221,f6223,f6225,f6227,f6229,f6231,f6233,f6235,f6237,f6239,f6241,f6243,f6115,f6502,f6522,f6526,f6539,f6541,f6543,f6545,f6547,f6549,f6551,f6553,f6555,f6557,f6559,f6561,f6563,f6565,f6567,f6569,f6571,f6573])).
fof(f6572,plain,(
  $false | $spl10),
  inference(global_subsumption,[],[f329,f328,f330,f602,f337,f341,f346,f357,f356,f361,f360,f365,f364,f406,f405,f412,f410,f415,f414,f413,f416,f417,f418,f419,f423,f420,f429,f428,f427,f431,f430,f440,f439,f603,f458,f455,f454,f453,f464,f463,f470,f469,f471,f473,f472,f498,f497,f496,f495,f494,f493,f492,f502,f501,f500,f499,f506,f505,f504,f503,f510,f509,f508,f507,f514,f513,f512,f511,f588,f518,f517,f516,f515,f525,f524,f523,f522,f531,f528,f527,f526,f538,f537,f536,f587,f534,f533,f532,f542,f541,f540,f539,f546,f545,f544,f543,f555,f554,f553,f586,f551,f550,f549,f559,f558,f557,f556,f563,f562,f561,f560,f585,f616,f617,f620,f621,f622,f623,f624,f625,f626,f627,f628,f629,f630,f631,f632,f633,f634,f635,f636,f637,f433,f432,f426,f425,f424,f367,f366,f345,f344,f343,f339,f338,f657,f664,f665,f668,f673,f676,f681,f682,f684,f691,f695,f696,f699,f705,f706,f710,f713,f716,f746,f792,f801,f800,f811,f809,f827,f833,f843,f846,f851,f855,f863,f869,f892,f899,f905,f928,f935,f941,f961,f1101,f1100,f1099,f1098,f1097,f1096,f1095,f1092,f1091,f1087,f1084,f1083,f1080,f1079,f1075,f1063,f1062,f1061,f1057,f1056,f1052,f1051,f1050,f1047,f1043,f1041,f1039,f1038,f1035,f1034,f1033,f1032,f1031,f1027,f1026,f1021,f1020,f1017,f1016,f1012,f1005,f1004,f1003,f1002,f1001,f1000,f999,f998,f995,f994,f990,f989,f986,f985,f981,f980,f979,f976,f975,f974,f973,f971,f970,f969,f967,f1117,f1132,f1315,f1314,f1313,f1312,f1311,f1310,f1309,f1306,f1305,f1301,f1298,f1297,f1294,f1293,f1289,f1277,f1276,f1275,f1271,f1270,f1266,f1265,f1264,f1261,f1257,f1255,f1253,f1252,f1249,f1248,f1247,f1246,f1245,f1241,f1240,f1235,f1234,f1231,f1230,f1226,f1219,f1218,f1217,f1216,f1215,f1214,f1213,f1212,f1209,f1208,f1204,f1203,f1200,f1199,f1195,f1194,f1193,f1190,f1189,f1188,f1187,f1185,f1184,f1183,f1182,f1181,f1368,f1410,f1430,f1443,f1459,f1467,f1469,f1470,f1477,f1478,f1483,f1487,f1486,f1503,f1527,f1537,f1580,f1586,f1591,f1598,f1608,f1643,f1642,f1641,f1640,f1644,f1645,f1654,f1655,f1656,f1657,f1658,f1659,f1660,f1661,f1662,f1663,f1664,f1665,f1666,f1667,f1668,f1669,f1670,f1671,f1673,f1674,f1684,f1754,f1817,f1846,f1895,f1900,f1880,f1921,f1928,f2023,f2024,f2026,f2027,f2029,f2030,f2032,f2060,f2107,f2106,f2105,f2104,f2116,f2117,f2118,f2119,f2128,f2129,f2130,f2131,f2132,f2133,f2134,f2135,f2136,f2137,f2138,f2139,f2140,f2141,f2142,f2143,f2144,f2145,f2147,f2148,f2149,f2161,f2247,f2248,f2196,f2199,f2252,f2253,f2237,f2276,f2362,f2363,f2388,f2405,f2403,f2423,f2436,f2446,f2447,f2452,f2451,f2449,f2465,f2479,f2480,f2540,f2483,f2484,f2541,f2542,f2487,f2499,f2500,f2501,f2502,f2503,f2504,f2505,f2506,f2507,f2508,f2509,f2510,f2511,f2512,f2513,f2516,f2537,f2538,f2539,f2545,f2573,f2597,f2598,f2667,f2670,f2608,f2612,f2613,f2620,f2621,f2622,f2623,f2624,f2625,f2626,f2627,f2628,f2629,f2630,f2631,f2632,f2633,f2634,f2637,f2660,f2661,f2662,f2740,f2741,f2742,f2746,f2827,f2830,f2754,f2755,f2756,f2757,f2758,f2759,f2760,f2832,f2762,f2763,f2764,f2768,f2769,f2777,f2778,f2779,f2780,f2781,f2782,f2783,f2784,f2833,f2786,f2787,f2788,f2789,f2790,f2791,f2792,f2795,f2820,f2821,f2822,f2963,f2890,f2966,f2969,f2898,f2899,f2900,f2904,f2905,f2913,f2915,f2916,f2917,f2918,f2919,f2920,f2921,f2922,f2923,f2924,f2925,f2926,f2927,f2928,f2929,f2930,f2933,f2960,f2961,f2962,f3005,f3060,f3061,f4802,f4810,f4900,f4870,f4912,f4921,f4922,f5030,f4924,f4925,f4926,f5045,f5057,f5021,f5363,f5366,f5372,f5401,f5409,f5538,f5475,f5574,f5575,f5590,f5600,f5601,f5677,f5678,f5679,f5681,f5682,f5683,f5684,f5685,f5754,f6113,f6117,f6120,f6123,f6126,f6129,f6132,f6135,f6138,f6141,f6144,f6147,f6150,f6153,f6156,f6159,f6162,f6165,f5789,f5790,f5791,f6167,f6168,f6169,f6170,f6171,f6172,f6173,f6174,f6175,f6176,f6177,f6178,f6179,f6180,f6181,f6182,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6193,f6194,f6195,f6196,f6197,f6198,f6199,f6200,f6201,f5852,f5853,f5854,f5856,f5857,f5858,f5859,f5860,f6209,f6211,f6213,f6215,f6217,f6219,f6221,f6223,f6225,f6227,f6229,f6231,f6233,f6235,f6237,f6239,f6241,f6243,f6115,f6502,f6522,f6526,f6539,f6541,f6543,f6545,f6547,f6549,f6551,f6553,f6555,f6557,f6559,f6561,f6563,f6565,f6567,f6569,f6571])).
fof(f6570,plain,(
  $false | $spl10),
  inference(global_subsumption,[],[f329,f328,f330,f602,f337,f341,f346,f357,f356,f361,f360,f365,f364,f406,f405,f412,f410,f415,f414,f413,f416,f417,f418,f419,f423,f420,f429,f428,f427,f431,f430,f440,f439,f603,f458,f455,f454,f453,f464,f463,f470,f469,f471,f473,f472,f498,f497,f496,f495,f494,f493,f492,f502,f501,f500,f499,f506,f505,f504,f503,f510,f509,f508,f507,f514,f513,f512,f511,f588,f518,f517,f516,f515,f525,f524,f523,f522,f531,f528,f527,f526,f538,f537,f536,f587,f534,f533,f532,f542,f541,f540,f539,f546,f545,f544,f543,f555,f554,f553,f586,f551,f550,f549,f559,f558,f557,f556,f563,f562,f561,f560,f585,f616,f617,f620,f621,f622,f623,f624,f625,f626,f627,f628,f629,f630,f631,f632,f633,f634,f635,f636,f637,f433,f432,f426,f425,f424,f367,f366,f345,f344,f343,f339,f338,f657,f664,f665,f668,f673,f676,f681,f682,f684,f691,f695,f696,f699,f705,f706,f710,f713,f716,f746,f792,f801,f800,f811,f809,f827,f833,f843,f846,f851,f855,f863,f869,f892,f899,f905,f928,f935,f941,f961,f1101,f1100,f1099,f1098,f1097,f1096,f1095,f1092,f1091,f1087,f1084,f1083,f1080,f1079,f1075,f1063,f1062,f1061,f1057,f1056,f1052,f1051,f1050,f1047,f1043,f1041,f1039,f1038,f1035,f1034,f1033,f1032,f1031,f1027,f1026,f1021,f1020,f1017,f1016,f1012,f1005,f1004,f1003,f1002,f1001,f1000,f999,f998,f995,f994,f990,f989,f986,f985,f981,f980,f979,f976,f975,f974,f973,f971,f970,f969,f967,f1117,f1132,f1315,f1314,f1313,f1312,f1311,f1310,f1309,f1306,f1305,f1301,f1298,f1297,f1294,f1293,f1289,f1277,f1276,f1275,f1271,f1270,f1266,f1265,f1264,f1261,f1257,f1255,f1253,f1252,f1249,f1248,f1247,f1246,f1245,f1241,f1240,f1235,f1234,f1231,f1230,f1226,f1219,f1218,f1217,f1216,f1215,f1214,f1213,f1212,f1209,f1208,f1204,f1203,f1200,f1199,f1195,f1194,f1193,f1190,f1189,f1188,f1187,f1185,f1184,f1183,f1182,f1181,f1368,f1410,f1430,f1443,f1459,f1467,f1469,f1470,f1477,f1478,f1483,f1487,f1486,f1503,f1527,f1537,f1580,f1586,f1591,f1598,f1608,f1643,f1642,f1641,f1640,f1644,f1645,f1654,f1655,f1656,f1657,f1658,f1659,f1660,f1661,f1662,f1663,f1664,f1665,f1666,f1667,f1668,f1669,f1670,f1671,f1673,f1674,f1684,f1754,f1817,f1846,f1895,f1900,f1880,f1921,f1928,f2023,f2024,f2026,f2027,f2029,f2030,f2032,f2060,f2107,f2106,f2105,f2104,f2116,f2117,f2118,f2119,f2128,f2129,f2130,f2131,f2132,f2133,f2134,f2135,f2136,f2137,f2138,f2139,f2140,f2141,f2142,f2143,f2144,f2145,f2147,f2148,f2149,f2161,f2247,f2248,f2196,f2199,f2252,f2253,f2237,f2276,f2362,f2363,f2388,f2405,f2403,f2423,f2436,f2446,f2447,f2452,f2451,f2449,f2465,f2479,f2480,f2540,f2483,f2484,f2541,f2542,f2487,f2499,f2500,f2501,f2502,f2503,f2504,f2505,f2506,f2507,f2508,f2509,f2510,f2511,f2512,f2513,f2516,f2537,f2538,f2539,f2545,f2573,f2597,f2598,f2667,f2670,f2608,f2612,f2613,f2620,f2621,f2622,f2623,f2624,f2625,f2626,f2627,f2628,f2629,f2630,f2631,f2632,f2633,f2634,f2637,f2660,f2661,f2662,f2740,f2741,f2742,f2746,f2827,f2830,f2754,f2755,f2756,f2757,f2758,f2759,f2760,f2832,f2762,f2763,f2764,f2768,f2769,f2777,f2778,f2779,f2780,f2781,f2782,f2783,f2784,f2833,f2786,f2787,f2788,f2789,f2790,f2791,f2792,f2795,f2820,f2821,f2822,f2963,f2890,f2966,f2969,f2898,f2899,f2900,f2904,f2905,f2913,f2915,f2916,f2917,f2918,f2919,f2920,f2921,f2922,f2923,f2924,f2925,f2926,f2927,f2928,f2929,f2930,f2933,f2960,f2961,f2962,f3005,f3060,f3061,f4802,f4810,f4900,f4870,f4912,f4921,f4922,f5030,f4924,f4925,f4926,f5045,f5057,f5021,f5363,f5366,f5372,f5401,f5409,f5538,f5475,f5574,f5575,f5590,f5600,f5601,f5677,f5678,f5679,f5681,f5682,f5683,f5684,f5685,f5754,f6113,f6117,f6120,f6123,f6126,f6129,f6132,f6135,f6138,f6141,f6144,f6147,f6150,f6153,f6156,f6159,f6162,f6165,f5789,f5790,f5791,f6167,f6168,f6169,f6170,f6171,f6172,f6173,f6174,f6175,f6176,f6177,f6178,f6179,f6180,f6181,f6182,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6193,f6194,f6195,f6196,f6197,f6198,f6199,f6200,f6201,f5852,f5853,f5854,f5856,f5857,f5858,f5859,f5860,f6209,f6211,f6213,f6215,f6217,f6219,f6221,f6223,f6225,f6227,f6229,f6231,f6233,f6235,f6237,f6239,f6241,f6243,f6115,f6502,f6522,f6526,f6539,f6541,f6543,f6545,f6547,f6549,f6551,f6553,f6555,f6557,f6559,f6561,f6563,f6565,f6567,f6569])).
fof(f6568,plain,(
  $false | $spl10),
  inference(global_subsumption,[],[f329,f328,f330,f602,f337,f341,f346,f357,f356,f361,f360,f365,f364,f406,f405,f412,f410,f415,f414,f413,f416,f417,f418,f419,f423,f420,f429,f428,f427,f431,f430,f440,f439,f603,f458,f455,f454,f453,f464,f463,f470,f469,f471,f473,f472,f498,f497,f496,f495,f494,f493,f492,f502,f501,f500,f499,f506,f505,f504,f503,f510,f509,f508,f507,f514,f513,f512,f511,f588,f518,f517,f516,f515,f525,f524,f523,f522,f531,f528,f527,f526,f538,f537,f536,f587,f534,f533,f532,f542,f541,f540,f539,f546,f545,f544,f543,f555,f554,f553,f586,f551,f550,f549,f559,f558,f557,f556,f563,f562,f561,f560,f585,f616,f617,f620,f621,f622,f623,f624,f625,f626,f627,f628,f629,f630,f631,f632,f633,f634,f635,f636,f637,f433,f432,f426,f425,f424,f367,f366,f345,f344,f343,f339,f338,f657,f664,f665,f668,f673,f676,f681,f682,f684,f691,f695,f696,f699,f705,f706,f710,f713,f716,f746,f792,f801,f800,f811,f809,f827,f833,f843,f846,f851,f855,f863,f869,f892,f899,f905,f928,f935,f941,f961,f1101,f1100,f1099,f1098,f1097,f1096,f1095,f1092,f1091,f1087,f1084,f1083,f1080,f1079,f1075,f1063,f1062,f1061,f1057,f1056,f1052,f1051,f1050,f1047,f1043,f1041,f1039,f1038,f1035,f1034,f1033,f1032,f1031,f1027,f1026,f1021,f1020,f1017,f1016,f1012,f1005,f1004,f1003,f1002,f1001,f1000,f999,f998,f995,f994,f990,f989,f986,f985,f981,f980,f979,f976,f975,f974,f973,f971,f970,f969,f967,f1117,f1132,f1315,f1314,f1313,f1312,f1311,f1310,f1309,f1306,f1305,f1301,f1298,f1297,f1294,f1293,f1289,f1277,f1276,f1275,f1271,f1270,f1266,f1265,f1264,f1261,f1257,f1255,f1253,f1252,f1249,f1248,f1247,f1246,f1245,f1241,f1240,f1235,f1234,f1231,f1230,f1226,f1219,f1218,f1217,f1216,f1215,f1214,f1213,f1212,f1209,f1208,f1204,f1203,f1200,f1199,f1195,f1194,f1193,f1190,f1189,f1188,f1187,f1185,f1184,f1183,f1182,f1181,f1368,f1410,f1430,f1443,f1459,f1467,f1469,f1470,f1477,f1478,f1483,f1487,f1486,f1503,f1527,f1537,f1580,f1586,f1591,f1598,f1608,f1643,f1642,f1641,f1640,f1644,f1645,f1654,f1655,f1656,f1657,f1658,f1659,f1660,f1661,f1662,f1663,f1664,f1665,f1666,f1667,f1668,f1669,f1670,f1671,f1673,f1674,f1684,f1754,f1817,f1846,f1895,f1900,f1880,f1921,f1928,f2023,f2024,f2026,f2027,f2029,f2030,f2032,f2060,f2107,f2106,f2105,f2104,f2116,f2117,f2118,f2119,f2128,f2129,f2130,f2131,f2132,f2133,f2134,f2135,f2136,f2137,f2138,f2139,f2140,f2141,f2142,f2143,f2144,f2145,f2147,f2148,f2149,f2161,f2247,f2248,f2196,f2199,f2252,f2253,f2237,f2276,f2362,f2363,f2388,f2405,f2403,f2423,f2436,f2446,f2447,f2452,f2451,f2449,f2465,f2479,f2480,f2540,f2483,f2484,f2541,f2542,f2487,f2499,f2500,f2501,f2502,f2503,f2504,f2505,f2506,f2507,f2508,f2509,f2510,f2511,f2512,f2513,f2516,f2537,f2538,f2539,f2545,f2573,f2597,f2598,f2667,f2670,f2608,f2612,f2613,f2620,f2621,f2622,f2623,f2624,f2625,f2626,f2627,f2628,f2629,f2630,f2631,f2632,f2633,f2634,f2637,f2660,f2661,f2662,f2740,f2741,f2742,f2746,f2827,f2830,f2754,f2755,f2756,f2757,f2758,f2759,f2760,f2832,f2762,f2763,f2764,f2768,f2769,f2777,f2778,f2779,f2780,f2781,f2782,f2783,f2784,f2833,f2786,f2787,f2788,f2789,f2790,f2791,f2792,f2795,f2820,f2821,f2822,f2963,f2890,f2966,f2969,f2898,f2899,f2900,f2904,f2905,f2913,f2915,f2916,f2917,f2918,f2919,f2920,f2921,f2922,f2923,f2924,f2925,f2926,f2927,f2928,f2929,f2930,f2933,f2960,f2961,f2962,f3005,f3060,f3061,f4802,f4810,f4900,f4870,f4912,f4921,f4922,f5030,f4924,f4925,f4926,f5045,f5057,f5021,f5363,f5366,f5372,f5401,f5409,f5538,f5475,f5574,f5575,f5590,f5600,f5601,f5677,f5678,f5679,f5681,f5682,f5683,f5684,f5685,f5754,f6113,f6117,f6120,f6123,f6126,f6129,f6132,f6135,f6138,f6141,f6144,f6147,f6150,f6153,f6156,f6159,f6162,f6165,f5789,f5790,f5791,f6167,f6168,f6169,f6170,f6171,f6172,f6173,f6174,f6175,f6176,f6177,f6178,f6179,f6180,f6181,f6182,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6193,f6194,f6195,f6196,f6197,f6198,f6199,f6200,f6201,f5852,f5853,f5854,f5856,f5857,f5858,f5859,f5860,f6209,f6211,f6213,f6215,f6217,f6219,f6221,f6223,f6225,f6227,f6229,f6231,f6233,f6235,f6237,f6239,f6241,f6243,f6115,f6502,f6522,f6526,f6539,f6541,f6543,f6545,f6547,f6549,f6551,f6553,f6555,f6557,f6559,f6561,f6563,f6565,f6567])).
fof(f6566,plain,(
  $false | $spl10),
  inference(global_subsumption,[],[f329,f328,f330,f602,f337,f341,f346,f357,f356,f361,f360,f365,f364,f406,f405,f412,f410,f415,f414,f413,f416,f417,f418,f419,f423,f420,f429,f428,f427,f431,f430,f440,f439,f603,f458,f455,f454,f453,f464,f463,f470,f469,f471,f473,f472,f498,f497,f496,f495,f494,f493,f492,f502,f501,f500,f499,f506,f505,f504,f503,f510,f509,f508,f507,f514,f513,f512,f511,f588,f518,f517,f516,f515,f525,f524,f523,f522,f531,f528,f527,f526,f538,f537,f536,f587,f534,f533,f532,f542,f541,f540,f539,f546,f545,f544,f543,f555,f554,f553,f586,f551,f550,f549,f559,f558,f557,f556,f563,f562,f561,f560,f585,f616,f617,f620,f621,f622,f623,f624,f625,f626,f627,f628,f629,f630,f631,f632,f633,f634,f635,f636,f637,f433,f432,f426,f425,f424,f367,f366,f345,f344,f343,f339,f338,f657,f664,f665,f668,f673,f676,f681,f682,f684,f691,f695,f696,f699,f705,f706,f710,f713,f716,f746,f792,f801,f800,f811,f809,f827,f833,f843,f846,f851,f855,f863,f869,f892,f899,f905,f928,f935,f941,f961,f1101,f1100,f1099,f1098,f1097,f1096,f1095,f1092,f1091,f1087,f1084,f1083,f1080,f1079,f1075,f1063,f1062,f1061,f1057,f1056,f1052,f1051,f1050,f1047,f1043,f1041,f1039,f1038,f1035,f1034,f1033,f1032,f1031,f1027,f1026,f1021,f1020,f1017,f1016,f1012,f1005,f1004,f1003,f1002,f1001,f1000,f999,f998,f995,f994,f990,f989,f986,f985,f981,f980,f979,f976,f975,f974,f973,f971,f970,f969,f967,f1117,f1132,f1315,f1314,f1313,f1312,f1311,f1310,f1309,f1306,f1305,f1301,f1298,f1297,f1294,f1293,f1289,f1277,f1276,f1275,f1271,f1270,f1266,f1265,f1264,f1261,f1257,f1255,f1253,f1252,f1249,f1248,f1247,f1246,f1245,f1241,f1240,f1235,f1234,f1231,f1230,f1226,f1219,f1218,f1217,f1216,f1215,f1214,f1213,f1212,f1209,f1208,f1204,f1203,f1200,f1199,f1195,f1194,f1193,f1190,f1189,f1188,f1187,f1185,f1184,f1183,f1182,f1181,f1368,f1410,f1430,f1443,f1459,f1467,f1469,f1470,f1477,f1478,f1483,f1487,f1486,f1503,f1527,f1537,f1580,f1586,f1591,f1598,f1608,f1643,f1642,f1641,f1640,f1644,f1645,f1654,f1655,f1656,f1657,f1658,f1659,f1660,f1661,f1662,f1663,f1664,f1665,f1666,f1667,f1668,f1669,f1670,f1671,f1673,f1674,f1684,f1754,f1817,f1846,f1895,f1900,f1880,f1921,f1928,f2023,f2024,f2026,f2027,f2029,f2030,f2032,f2060,f2107,f2106,f2105,f2104,f2116,f2117,f2118,f2119,f2128,f2129,f2130,f2131,f2132,f2133,f2134,f2135,f2136,f2137,f2138,f2139,f2140,f2141,f2142,f2143,f2144,f2145,f2147,f2148,f2149,f2161,f2247,f2248,f2196,f2199,f2252,f2253,f2237,f2276,f2362,f2363,f2388,f2405,f2403,f2423,f2436,f2446,f2447,f2452,f2451,f2449,f2465,f2479,f2480,f2540,f2483,f2484,f2541,f2542,f2487,f2499,f2500,f2501,f2502,f2503,f2504,f2505,f2506,f2507,f2508,f2509,f2510,f2511,f2512,f2513,f2516,f2537,f2538,f2539,f2545,f2573,f2597,f2598,f2667,f2670,f2608,f2612,f2613,f2620,f2621,f2622,f2623,f2624,f2625,f2626,f2627,f2628,f2629,f2630,f2631,f2632,f2633,f2634,f2637,f2660,f2661,f2662,f2740,f2741,f2742,f2746,f2827,f2830,f2754,f2755,f2756,f2757,f2758,f2759,f2760,f2832,f2762,f2763,f2764,f2768,f2769,f2777,f2778,f2779,f2780,f2781,f2782,f2783,f2784,f2833,f2786,f2787,f2788,f2789,f2790,f2791,f2792,f2795,f2820,f2821,f2822,f2963,f2890,f2966,f2969,f2898,f2899,f2900,f2904,f2905,f2913,f2915,f2916,f2917,f2918,f2919,f2920,f2921,f2922,f2923,f2924,f2925,f2926,f2927,f2928,f2929,f2930,f2933,f2960,f2961,f2962,f3005,f3060,f3061,f4802,f4810,f4900,f4870,f4912,f4921,f4922,f5030,f4924,f4925,f4926,f5045,f5057,f5021,f5363,f5366,f5372,f5401,f5409,f5538,f5475,f5574,f5575,f5590,f5600,f5601,f5677,f5678,f5679,f5681,f5682,f5683,f5684,f5685,f5754,f6113,f6117,f6120,f6123,f6126,f6129,f6132,f6135,f6138,f6141,f6144,f6147,f6150,f6153,f6156,f6159,f6162,f6165,f5789,f5790,f5791,f6167,f6168,f6169,f6170,f6171,f6172,f6173,f6174,f6175,f6176,f6177,f6178,f6179,f6180,f6181,f6182,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6193,f6194,f6195,f6196,f6197,f6198,f6199,f6200,f6201,f5852,f5853,f5854,f5856,f5857,f5858,f5859,f5860,f6209,f6211,f6213,f6215,f6217,f6219,f6221,f6223,f6225,f6227,f6229,f6231,f6233,f6235,f6237,f6239,f6241,f6243,f6115,f6502,f6522,f6526,f6539,f6541,f6543,f6545,f6547,f6549,f6551,f6553,f6555,f6557,f6559,f6561,f6563,f6565])).
fof(f6564,plain,(
  $false | $spl10),
  inference(global_subsumption,[],[f329,f328,f330,f602,f337,f341,f346,f357,f356,f361,f360,f365,f364,f406,f405,f412,f410,f415,f414,f413,f416,f417,f418,f419,f423,f420,f429,f428,f427,f431,f430,f440,f439,f603,f458,f455,f454,f453,f464,f463,f470,f469,f471,f473,f472,f498,f497,f496,f495,f494,f493,f492,f502,f501,f500,f499,f506,f505,f504,f503,f510,f509,f508,f507,f514,f513,f512,f511,f588,f518,f517,f516,f515,f525,f524,f523,f522,f531,f528,f527,f526,f538,f537,f536,f587,f534,f533,f532,f542,f541,f540,f539,f546,f545,f544,f543,f555,f554,f553,f586,f551,f550,f549,f559,f558,f557,f556,f563,f562,f561,f560,f585,f616,f617,f620,f621,f622,f623,f624,f625,f626,f627,f628,f629,f630,f631,f632,f633,f634,f635,f636,f637,f433,f432,f426,f425,f424,f367,f366,f345,f344,f343,f339,f338,f657,f664,f665,f668,f673,f676,f681,f682,f684,f691,f695,f696,f699,f705,f706,f710,f713,f716,f746,f792,f801,f800,f811,f809,f827,f833,f843,f846,f851,f855,f863,f869,f892,f899,f905,f928,f935,f941,f961,f1101,f1100,f1099,f1098,f1097,f1096,f1095,f1092,f1091,f1087,f1084,f1083,f1080,f1079,f1075,f1063,f1062,f1061,f1057,f1056,f1052,f1051,f1050,f1047,f1043,f1041,f1039,f1038,f1035,f1034,f1033,f1032,f1031,f1027,f1026,f1021,f1020,f1017,f1016,f1012,f1005,f1004,f1003,f1002,f1001,f1000,f999,f998,f995,f994,f990,f989,f986,f985,f981,f980,f979,f976,f975,f974,f973,f971,f970,f969,f967,f1117,f1132,f1315,f1314,f1313,f1312,f1311,f1310,f1309,f1306,f1305,f1301,f1298,f1297,f1294,f1293,f1289,f1277,f1276,f1275,f1271,f1270,f1266,f1265,f1264,f1261,f1257,f1255,f1253,f1252,f1249,f1248,f1247,f1246,f1245,f1241,f1240,f1235,f1234,f1231,f1230,f1226,f1219,f1218,f1217,f1216,f1215,f1214,f1213,f1212,f1209,f1208,f1204,f1203,f1200,f1199,f1195,f1194,f1193,f1190,f1189,f1188,f1187,f1185,f1184,f1183,f1182,f1181,f1368,f1410,f1430,f1443,f1459,f1467,f1469,f1470,f1477,f1478,f1483,f1487,f1486,f1503,f1527,f1537,f1580,f1586,f1591,f1598,f1608,f1643,f1642,f1641,f1640,f1644,f1645,f1654,f1655,f1656,f1657,f1658,f1659,f1660,f1661,f1662,f1663,f1664,f1665,f1666,f1667,f1668,f1669,f1670,f1671,f1673,f1674,f1684,f1754,f1817,f1846,f1895,f1900,f1880,f1921,f1928,f2023,f2024,f2026,f2027,f2029,f2030,f2032,f2060,f2107,f2106,f2105,f2104,f2116,f2117,f2118,f2119,f2128,f2129,f2130,f2131,f2132,f2133,f2134,f2135,f2136,f2137,f2138,f2139,f2140,f2141,f2142,f2143,f2144,f2145,f2147,f2148,f2149,f2161,f2247,f2248,f2196,f2199,f2252,f2253,f2237,f2276,f2362,f2363,f2388,f2405,f2403,f2423,f2436,f2446,f2447,f2452,f2451,f2449,f2465,f2479,f2480,f2540,f2483,f2484,f2541,f2542,f2487,f2499,f2500,f2501,f2502,f2503,f2504,f2505,f2506,f2507,f2508,f2509,f2510,f2511,f2512,f2513,f2516,f2537,f2538,f2539,f2545,f2573,f2597,f2598,f2667,f2670,f2608,f2612,f2613,f2620,f2621,f2622,f2623,f2624,f2625,f2626,f2627,f2628,f2629,f2630,f2631,f2632,f2633,f2634,f2637,f2660,f2661,f2662,f2740,f2741,f2742,f2746,f2827,f2830,f2754,f2755,f2756,f2757,f2758,f2759,f2760,f2832,f2762,f2763,f2764,f2768,f2769,f2777,f2778,f2779,f2780,f2781,f2782,f2783,f2784,f2833,f2786,f2787,f2788,f2789,f2790,f2791,f2792,f2795,f2820,f2821,f2822,f2963,f2890,f2966,f2969,f2898,f2899,f2900,f2904,f2905,f2913,f2915,f2916,f2917,f2918,f2919,f2920,f2921,f2922,f2923,f2924,f2925,f2926,f2927,f2928,f2929,f2930,f2933,f2960,f2961,f2962,f3005,f3060,f3061,f4802,f4810,f4900,f4870,f4912,f4921,f4922,f5030,f4924,f4925,f4926,f5045,f5057,f5021,f5363,f5366,f5372,f5401,f5409,f5538,f5475,f5574,f5575,f5590,f5600,f5601,f5677,f5678,f5679,f5681,f5682,f5683,f5684,f5685,f5754,f6113,f6117,f6120,f6123,f6126,f6129,f6132,f6135,f6138,f6141,f6144,f6147,f6150,f6153,f6156,f6159,f6162,f6165,f5789,f5790,f5791,f6167,f6168,f6169,f6170,f6171,f6172,f6173,f6174,f6175,f6176,f6177,f6178,f6179,f6180,f6181,f6182,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6193,f6194,f6195,f6196,f6197,f6198,f6199,f6200,f6201,f5852,f5853,f5854,f5856,f5857,f5858,f5859,f5860,f6209,f6211,f6213,f6215,f6217,f6219,f6221,f6223,f6225,f6227,f6229,f6231,f6233,f6235,f6237,f6239,f6241,f6243,f6115,f6502,f6522,f6526,f6539,f6541,f6543,f6545,f6547,f6549,f6551,f6553,f6555,f6557,f6559,f6561,f6563])).
fof(f6562,plain,(
  $false | $spl10),
  inference(global_subsumption,[],[f329,f328,f330,f602,f337,f341,f346,f357,f356,f361,f360,f365,f364,f406,f405,f412,f410,f415,f414,f413,f416,f417,f418,f419,f423,f420,f429,f428,f427,f431,f430,f440,f439,f603,f458,f455,f454,f453,f464,f463,f470,f469,f471,f473,f472,f498,f497,f496,f495,f494,f493,f492,f502,f501,f500,f499,f506,f505,f504,f503,f510,f509,f508,f507,f514,f513,f512,f511,f588,f518,f517,f516,f515,f525,f524,f523,f522,f531,f528,f527,f526,f538,f537,f536,f587,f534,f533,f532,f542,f541,f540,f539,f546,f545,f544,f543,f555,f554,f553,f586,f551,f550,f549,f559,f558,f557,f556,f563,f562,f561,f560,f585,f616,f617,f620,f621,f622,f623,f624,f625,f626,f627,f628,f629,f630,f631,f632,f633,f634,f635,f636,f637,f433,f432,f426,f425,f424,f367,f366,f345,f344,f343,f339,f338,f657,f664,f665,f668,f673,f676,f681,f682,f684,f691,f695,f696,f699,f705,f706,f710,f713,f716,f746,f792,f801,f800,f811,f809,f827,f833,f843,f846,f851,f855,f863,f869,f892,f899,f905,f928,f935,f941,f961,f1101,f1100,f1099,f1098,f1097,f1096,f1095,f1092,f1091,f1087,f1084,f1083,f1080,f1079,f1075,f1063,f1062,f1061,f1057,f1056,f1052,f1051,f1050,f1047,f1043,f1041,f1039,f1038,f1035,f1034,f1033,f1032,f1031,f1027,f1026,f1021,f1020,f1017,f1016,f1012,f1005,f1004,f1003,f1002,f1001,f1000,f999,f998,f995,f994,f990,f989,f986,f985,f981,f980,f979,f976,f975,f974,f973,f971,f970,f969,f967,f1117,f1132,f1315,f1314,f1313,f1312,f1311,f1310,f1309,f1306,f1305,f1301,f1298,f1297,f1294,f1293,f1289,f1277,f1276,f1275,f1271,f1270,f1266,f1265,f1264,f1261,f1257,f1255,f1253,f1252,f1249,f1248,f1247,f1246,f1245,f1241,f1240,f1235,f1234,f1231,f1230,f1226,f1219,f1218,f1217,f1216,f1215,f1214,f1213,f1212,f1209,f1208,f1204,f1203,f1200,f1199,f1195,f1194,f1193,f1190,f1189,f1188,f1187,f1185,f1184,f1183,f1182,f1181,f1368,f1410,f1430,f1443,f1459,f1467,f1469,f1470,f1477,f1478,f1483,f1487,f1486,f1503,f1527,f1537,f1580,f1586,f1591,f1598,f1608,f1643,f1642,f1641,f1640,f1644,f1645,f1654,f1655,f1656,f1657,f1658,f1659,f1660,f1661,f1662,f1663,f1664,f1665,f1666,f1667,f1668,f1669,f1670,f1671,f1673,f1674,f1684,f1754,f1817,f1846,f1895,f1900,f1880,f1921,f1928,f2023,f2024,f2026,f2027,f2029,f2030,f2032,f2060,f2107,f2106,f2105,f2104,f2116,f2117,f2118,f2119,f2128,f2129,f2130,f2131,f2132,f2133,f2134,f2135,f2136,f2137,f2138,f2139,f2140,f2141,f2142,f2143,f2144,f2145,f2147,f2148,f2149,f2161,f2247,f2248,f2196,f2199,f2252,f2253,f2237,f2276,f2362,f2363,f2388,f2405,f2403,f2423,f2436,f2446,f2447,f2452,f2451,f2449,f2465,f2479,f2480,f2540,f2483,f2484,f2541,f2542,f2487,f2499,f2500,f2501,f2502,f2503,f2504,f2505,f2506,f2507,f2508,f2509,f2510,f2511,f2512,f2513,f2516,f2537,f2538,f2539,f2545,f2573,f2597,f2598,f2667,f2670,f2608,f2612,f2613,f2620,f2621,f2622,f2623,f2624,f2625,f2626,f2627,f2628,f2629,f2630,f2631,f2632,f2633,f2634,f2637,f2660,f2661,f2662,f2740,f2741,f2742,f2746,f2827,f2830,f2754,f2755,f2756,f2757,f2758,f2759,f2760,f2832,f2762,f2763,f2764,f2768,f2769,f2777,f2778,f2779,f2780,f2781,f2782,f2783,f2784,f2833,f2786,f2787,f2788,f2789,f2790,f2791,f2792,f2795,f2820,f2821,f2822,f2963,f2890,f2966,f2969,f2898,f2899,f2900,f2904,f2905,f2913,f2915,f2916,f2917,f2918,f2919,f2920,f2921,f2922,f2923,f2924,f2925,f2926,f2927,f2928,f2929,f2930,f2933,f2960,f2961,f2962,f3005,f3060,f3061,f4802,f4810,f4900,f4870,f4912,f4921,f4922,f5030,f4924,f4925,f4926,f5045,f5057,f5021,f5363,f5366,f5372,f5401,f5409,f5538,f5475,f5574,f5575,f5590,f5600,f5601,f5677,f5678,f5679,f5681,f5682,f5683,f5684,f5685,f5754,f6113,f6117,f6120,f6123,f6126,f6129,f6132,f6135,f6138,f6141,f6144,f6147,f6150,f6153,f6156,f6159,f6162,f6165,f5789,f5790,f5791,f6167,f6168,f6169,f6170,f6171,f6172,f6173,f6174,f6175,f6176,f6177,f6178,f6179,f6180,f6181,f6182,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6193,f6194,f6195,f6196,f6197,f6198,f6199,f6200,f6201,f5852,f5853,f5854,f5856,f5857,f5858,f5859,f5860,f6209,f6211,f6213,f6215,f6217,f6219,f6221,f6223,f6225,f6227,f6229,f6231,f6233,f6235,f6237,f6239,f6241,f6243,f6115,f6502,f6522,f6526,f6539,f6541,f6543,f6545,f6547,f6549,f6551,f6553,f6555,f6557,f6559,f6561])).
fof(f6560,plain,(
  $false | $spl10),
  inference(global_subsumption,[],[f329,f328,f330,f602,f337,f341,f346,f357,f356,f361,f360,f365,f364,f406,f405,f412,f410,f415,f414,f413,f416,f417,f418,f419,f423,f420,f429,f428,f427,f431,f430,f440,f439,f603,f458,f455,f454,f453,f464,f463,f470,f469,f471,f473,f472,f498,f497,f496,f495,f494,f493,f492,f502,f501,f500,f499,f506,f505,f504,f503,f510,f509,f508,f507,f514,f513,f512,f511,f588,f518,f517,f516,f515,f525,f524,f523,f522,f531,f528,f527,f526,f538,f537,f536,f587,f534,f533,f532,f542,f541,f540,f539,f546,f545,f544,f543,f555,f554,f553,f586,f551,f550,f549,f559,f558,f557,f556,f563,f562,f561,f560,f585,f616,f617,f620,f621,f622,f623,f624,f625,f626,f627,f628,f629,f630,f631,f632,f633,f634,f635,f636,f637,f433,f432,f426,f425,f424,f367,f366,f345,f344,f343,f339,f338,f657,f664,f665,f668,f673,f676,f681,f682,f684,f691,f695,f696,f699,f705,f706,f710,f713,f716,f746,f792,f801,f800,f811,f809,f827,f833,f843,f846,f851,f855,f863,f869,f892,f899,f905,f928,f935,f941,f961,f1101,f1100,f1099,f1098,f1097,f1096,f1095,f1092,f1091,f1087,f1084,f1083,f1080,f1079,f1075,f1063,f1062,f1061,f1057,f1056,f1052,f1051,f1050,f1047,f1043,f1041,f1039,f1038,f1035,f1034,f1033,f1032,f1031,f1027,f1026,f1021,f1020,f1017,f1016,f1012,f1005,f1004,f1003,f1002,f1001,f1000,f999,f998,f995,f994,f990,f989,f986,f985,f981,f980,f979,f976,f975,f974,f973,f971,f970,f969,f967,f1117,f1132,f1315,f1314,f1313,f1312,f1311,f1310,f1309,f1306,f1305,f1301,f1298,f1297,f1294,f1293,f1289,f1277,f1276,f1275,f1271,f1270,f1266,f1265,f1264,f1261,f1257,f1255,f1253,f1252,f1249,f1248,f1247,f1246,f1245,f1241,f1240,f1235,f1234,f1231,f1230,f1226,f1219,f1218,f1217,f1216,f1215,f1214,f1213,f1212,f1209,f1208,f1204,f1203,f1200,f1199,f1195,f1194,f1193,f1190,f1189,f1188,f1187,f1185,f1184,f1183,f1182,f1181,f1368,f1410,f1430,f1443,f1459,f1467,f1469,f1470,f1477,f1478,f1483,f1487,f1486,f1503,f1527,f1537,f1580,f1586,f1591,f1598,f1608,f1643,f1642,f1641,f1640,f1644,f1645,f1654,f1655,f1656,f1657,f1658,f1659,f1660,f1661,f1662,f1663,f1664,f1665,f1666,f1667,f1668,f1669,f1670,f1671,f1673,f1674,f1684,f1754,f1817,f1846,f1895,f1900,f1880,f1921,f1928,f2023,f2024,f2026,f2027,f2029,f2030,f2032,f2060,f2107,f2106,f2105,f2104,f2116,f2117,f2118,f2119,f2128,f2129,f2130,f2131,f2132,f2133,f2134,f2135,f2136,f2137,f2138,f2139,f2140,f2141,f2142,f2143,f2144,f2145,f2147,f2148,f2149,f2161,f2247,f2248,f2196,f2199,f2252,f2253,f2237,f2276,f2362,f2363,f2388,f2405,f2403,f2423,f2436,f2446,f2447,f2452,f2451,f2449,f2465,f2479,f2480,f2540,f2483,f2484,f2541,f2542,f2487,f2499,f2500,f2501,f2502,f2503,f2504,f2505,f2506,f2507,f2508,f2509,f2510,f2511,f2512,f2513,f2516,f2537,f2538,f2539,f2545,f2573,f2597,f2598,f2667,f2670,f2608,f2612,f2613,f2620,f2621,f2622,f2623,f2624,f2625,f2626,f2627,f2628,f2629,f2630,f2631,f2632,f2633,f2634,f2637,f2660,f2661,f2662,f2740,f2741,f2742,f2746,f2827,f2830,f2754,f2755,f2756,f2757,f2758,f2759,f2760,f2832,f2762,f2763,f2764,f2768,f2769,f2777,f2778,f2779,f2780,f2781,f2782,f2783,f2784,f2833,f2786,f2787,f2788,f2789,f2790,f2791,f2792,f2795,f2820,f2821,f2822,f2963,f2890,f2966,f2969,f2898,f2899,f2900,f2904,f2905,f2913,f2915,f2916,f2917,f2918,f2919,f2920,f2921,f2922,f2923,f2924,f2925,f2926,f2927,f2928,f2929,f2930,f2933,f2960,f2961,f2962,f3005,f3060,f3061,f4802,f4810,f4900,f4870,f4912,f4921,f4922,f5030,f4924,f4925,f4926,f5045,f5057,f5021,f5363,f5366,f5372,f5401,f5409,f5538,f5475,f5574,f5575,f5590,f5600,f5601,f5677,f5678,f5679,f5681,f5682,f5683,f5684,f5685,f5754,f6113,f6117,f6120,f6123,f6126,f6129,f6132,f6135,f6138,f6141,f6144,f6147,f6150,f6153,f6156,f6159,f6162,f6165,f5789,f5790,f5791,f6167,f6168,f6169,f6170,f6171,f6172,f6173,f6174,f6175,f6176,f6177,f6178,f6179,f6180,f6181,f6182,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6193,f6194,f6195,f6196,f6197,f6198,f6199,f6200,f6201,f5852,f5853,f5854,f5856,f5857,f5858,f5859,f5860,f6209,f6211,f6213,f6215,f6217,f6219,f6221,f6223,f6225,f6227,f6229,f6231,f6233,f6235,f6237,f6239,f6241,f6243,f6115,f6502,f6522,f6526,f6539,f6541,f6543,f6545,f6547,f6549,f6551,f6553,f6555,f6557,f6559])).
fof(f6558,plain,(
  $false | $spl10),
  inference(global_subsumption,[],[f329,f328,f330,f602,f337,f341,f346,f357,f356,f361,f360,f365,f364,f406,f405,f412,f410,f415,f414,f413,f416,f417,f418,f419,f423,f420,f429,f428,f427,f431,f430,f440,f439,f603,f458,f455,f454,f453,f464,f463,f470,f469,f471,f473,f472,f498,f497,f496,f495,f494,f493,f492,f502,f501,f500,f499,f506,f505,f504,f503,f510,f509,f508,f507,f514,f513,f512,f511,f588,f518,f517,f516,f515,f525,f524,f523,f522,f531,f528,f527,f526,f538,f537,f536,f587,f534,f533,f532,f542,f541,f540,f539,f546,f545,f544,f543,f555,f554,f553,f586,f551,f550,f549,f559,f558,f557,f556,f563,f562,f561,f560,f585,f616,f617,f620,f621,f622,f623,f624,f625,f626,f627,f628,f629,f630,f631,f632,f633,f634,f635,f636,f637,f433,f432,f426,f425,f424,f367,f366,f345,f344,f343,f339,f338,f657,f664,f665,f668,f673,f676,f681,f682,f684,f691,f695,f696,f699,f705,f706,f710,f713,f716,f746,f792,f801,f800,f811,f809,f827,f833,f843,f846,f851,f855,f863,f869,f892,f899,f905,f928,f935,f941,f961,f1101,f1100,f1099,f1098,f1097,f1096,f1095,f1092,f1091,f1087,f1084,f1083,f1080,f1079,f1075,f1063,f1062,f1061,f1057,f1056,f1052,f1051,f1050,f1047,f1043,f1041,f1039,f1038,f1035,f1034,f1033,f1032,f1031,f1027,f1026,f1021,f1020,f1017,f1016,f1012,f1005,f1004,f1003,f1002,f1001,f1000,f999,f998,f995,f994,f990,f989,f986,f985,f981,f980,f979,f976,f975,f974,f973,f971,f970,f969,f967,f1117,f1132,f1315,f1314,f1313,f1312,f1311,f1310,f1309,f1306,f1305,f1301,f1298,f1297,f1294,f1293,f1289,f1277,f1276,f1275,f1271,f1270,f1266,f1265,f1264,f1261,f1257,f1255,f1253,f1252,f1249,f1248,f1247,f1246,f1245,f1241,f1240,f1235,f1234,f1231,f1230,f1226,f1219,f1218,f1217,f1216,f1215,f1214,f1213,f1212,f1209,f1208,f1204,f1203,f1200,f1199,f1195,f1194,f1193,f1190,f1189,f1188,f1187,f1185,f1184,f1183,f1182,f1181,f1368,f1410,f1430,f1443,f1459,f1467,f1469,f1470,f1477,f1478,f1483,f1487,f1486,f1503,f1527,f1537,f1580,f1586,f1591,f1598,f1608,f1643,f1642,f1641,f1640,f1644,f1645,f1654,f1655,f1656,f1657,f1658,f1659,f1660,f1661,f1662,f1663,f1664,f1665,f1666,f1667,f1668,f1669,f1670,f1671,f1673,f1674,f1684,f1754,f1817,f1846,f1895,f1900,f1880,f1921,f1928,f2023,f2024,f2026,f2027,f2029,f2030,f2032,f2060,f2107,f2106,f2105,f2104,f2116,f2117,f2118,f2119,f2128,f2129,f2130,f2131,f2132,f2133,f2134,f2135,f2136,f2137,f2138,f2139,f2140,f2141,f2142,f2143,f2144,f2145,f2147,f2148,f2149,f2161,f2247,f2248,f2196,f2199,f2252,f2253,f2237,f2276,f2362,f2363,f2388,f2405,f2403,f2423,f2436,f2446,f2447,f2452,f2451,f2449,f2465,f2479,f2480,f2540,f2483,f2484,f2541,f2542,f2487,f2499,f2500,f2501,f2502,f2503,f2504,f2505,f2506,f2507,f2508,f2509,f2510,f2511,f2512,f2513,f2516,f2537,f2538,f2539,f2545,f2573,f2597,f2598,f2667,f2670,f2608,f2612,f2613,f2620,f2621,f2622,f2623,f2624,f2625,f2626,f2627,f2628,f2629,f2630,f2631,f2632,f2633,f2634,f2637,f2660,f2661,f2662,f2740,f2741,f2742,f2746,f2827,f2830,f2754,f2755,f2756,f2757,f2758,f2759,f2760,f2832,f2762,f2763,f2764,f2768,f2769,f2777,f2778,f2779,f2780,f2781,f2782,f2783,f2784,f2833,f2786,f2787,f2788,f2789,f2790,f2791,f2792,f2795,f2820,f2821,f2822,f2963,f2890,f2966,f2969,f2898,f2899,f2900,f2904,f2905,f2913,f2915,f2916,f2917,f2918,f2919,f2920,f2921,f2922,f2923,f2924,f2925,f2926,f2927,f2928,f2929,f2930,f2933,f2960,f2961,f2962,f3005,f3060,f3061,f4802,f4810,f4900,f4870,f4912,f4921,f4922,f5030,f4924,f4925,f4926,f5045,f5057,f5021,f5363,f5366,f5372,f5401,f5409,f5538,f5475,f5574,f5575,f5590,f5600,f5601,f5677,f5678,f5679,f5681,f5682,f5683,f5684,f5685,f5754,f6113,f6117,f6120,f6123,f6126,f6129,f6132,f6135,f6138,f6141,f6144,f6147,f6150,f6153,f6156,f6159,f6162,f6165,f5789,f5790,f5791,f6167,f6168,f6169,f6170,f6171,f6172,f6173,f6174,f6175,f6176,f6177,f6178,f6179,f6180,f6181,f6182,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6193,f6194,f6195,f6196,f6197,f6198,f6199,f6200,f6201,f5852,f5853,f5854,f5856,f5857,f5858,f5859,f5860,f6209,f6211,f6213,f6215,f6217,f6219,f6221,f6223,f6225,f6227,f6229,f6231,f6233,f6235,f6237,f6239,f6241,f6243,f6115,f6502,f6522,f6526,f6539,f6541,f6543,f6545,f6547,f6549,f6551,f6553,f6555,f6557])).
fof(f6556,plain,(
  $false | $spl10),
  inference(global_subsumption,[],[f329,f328,f330,f602,f337,f341,f346,f357,f356,f361,f360,f365,f364,f406,f405,f412,f410,f415,f414,f413,f416,f417,f418,f419,f423,f420,f429,f428,f427,f431,f430,f440,f439,f603,f458,f455,f454,f453,f464,f463,f470,f469,f471,f473,f472,f498,f497,f496,f495,f494,f493,f492,f502,f501,f500,f499,f506,f505,f504,f503,f510,f509,f508,f507,f514,f513,f512,f511,f588,f518,f517,f516,f515,f525,f524,f523,f522,f531,f528,f527,f526,f538,f537,f536,f587,f534,f533,f532,f542,f541,f540,f539,f546,f545,f544,f543,f555,f554,f553,f586,f551,f550,f549,f559,f558,f557,f556,f563,f562,f561,f560,f585,f616,f617,f620,f621,f622,f623,f624,f625,f626,f627,f628,f629,f630,f631,f632,f633,f634,f635,f636,f637,f433,f432,f426,f425,f424,f367,f366,f345,f344,f343,f339,f338,f657,f664,f665,f668,f673,f676,f681,f682,f684,f691,f695,f696,f699,f705,f706,f710,f713,f716,f746,f792,f801,f800,f811,f809,f827,f833,f843,f846,f851,f855,f863,f869,f892,f899,f905,f928,f935,f941,f961,f1101,f1100,f1099,f1098,f1097,f1096,f1095,f1092,f1091,f1087,f1084,f1083,f1080,f1079,f1075,f1063,f1062,f1061,f1057,f1056,f1052,f1051,f1050,f1047,f1043,f1041,f1039,f1038,f1035,f1034,f1033,f1032,f1031,f1027,f1026,f1021,f1020,f1017,f1016,f1012,f1005,f1004,f1003,f1002,f1001,f1000,f999,f998,f995,f994,f990,f989,f986,f985,f981,f980,f979,f976,f975,f974,f973,f971,f970,f969,f967,f1117,f1132,f1315,f1314,f1313,f1312,f1311,f1310,f1309,f1306,f1305,f1301,f1298,f1297,f1294,f1293,f1289,f1277,f1276,f1275,f1271,f1270,f1266,f1265,f1264,f1261,f1257,f1255,f1253,f1252,f1249,f1248,f1247,f1246,f1245,f1241,f1240,f1235,f1234,f1231,f1230,f1226,f1219,f1218,f1217,f1216,f1215,f1214,f1213,f1212,f1209,f1208,f1204,f1203,f1200,f1199,f1195,f1194,f1193,f1190,f1189,f1188,f1187,f1185,f1184,f1183,f1182,f1181,f1368,f1410,f1430,f1443,f1459,f1467,f1469,f1470,f1477,f1478,f1483,f1487,f1486,f1503,f1527,f1537,f1580,f1586,f1591,f1598,f1608,f1643,f1642,f1641,f1640,f1644,f1645,f1654,f1655,f1656,f1657,f1658,f1659,f1660,f1661,f1662,f1663,f1664,f1665,f1666,f1667,f1668,f1669,f1670,f1671,f1673,f1674,f1684,f1754,f1817,f1846,f1895,f1900,f1880,f1921,f1928,f2023,f2024,f2026,f2027,f2029,f2030,f2032,f2060,f2107,f2106,f2105,f2104,f2116,f2117,f2118,f2119,f2128,f2129,f2130,f2131,f2132,f2133,f2134,f2135,f2136,f2137,f2138,f2139,f2140,f2141,f2142,f2143,f2144,f2145,f2147,f2148,f2149,f2161,f2247,f2248,f2196,f2199,f2252,f2253,f2237,f2276,f2362,f2363,f2388,f2405,f2403,f2423,f2436,f2446,f2447,f2452,f2451,f2449,f2465,f2479,f2480,f2540,f2483,f2484,f2541,f2542,f2487,f2499,f2500,f2501,f2502,f2503,f2504,f2505,f2506,f2507,f2508,f2509,f2510,f2511,f2512,f2513,f2516,f2537,f2538,f2539,f2545,f2573,f2597,f2598,f2667,f2670,f2608,f2612,f2613,f2620,f2621,f2622,f2623,f2624,f2625,f2626,f2627,f2628,f2629,f2630,f2631,f2632,f2633,f2634,f2637,f2660,f2661,f2662,f2740,f2741,f2742,f2746,f2827,f2830,f2754,f2755,f2756,f2757,f2758,f2759,f2760,f2832,f2762,f2763,f2764,f2768,f2769,f2777,f2778,f2779,f2780,f2781,f2782,f2783,f2784,f2833,f2786,f2787,f2788,f2789,f2790,f2791,f2792,f2795,f2820,f2821,f2822,f2963,f2890,f2966,f2969,f2898,f2899,f2900,f2904,f2905,f2913,f2915,f2916,f2917,f2918,f2919,f2920,f2921,f2922,f2923,f2924,f2925,f2926,f2927,f2928,f2929,f2930,f2933,f2960,f2961,f2962,f3005,f3060,f3061,f4802,f4810,f4900,f4870,f4912,f4921,f4922,f5030,f4924,f4925,f4926,f5045,f5057,f5021,f5363,f5366,f5372,f5401,f5409,f5538,f5475,f5574,f5575,f5590,f5600,f5601,f5677,f5678,f5679,f5681,f5682,f5683,f5684,f5685,f5754,f6113,f6117,f6120,f6123,f6126,f6129,f6132,f6135,f6138,f6141,f6144,f6147,f6150,f6153,f6156,f6159,f6162,f6165,f5789,f5790,f5791,f6167,f6168,f6169,f6170,f6171,f6172,f6173,f6174,f6175,f6176,f6177,f6178,f6179,f6180,f6181,f6182,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6193,f6194,f6195,f6196,f6197,f6198,f6199,f6200,f6201,f5852,f5853,f5854,f5856,f5857,f5858,f5859,f5860,f6209,f6211,f6213,f6215,f6217,f6219,f6221,f6223,f6225,f6227,f6229,f6231,f6233,f6235,f6237,f6239,f6241,f6243,f6115,f6502,f6522,f6526,f6539,f6541,f6543,f6545,f6547,f6549,f6551,f6553,f6555])).
fof(f6554,plain,(
  $false | $spl10),
  inference(global_subsumption,[],[f329,f328,f330,f602,f337,f341,f346,f357,f356,f361,f360,f365,f364,f406,f405,f412,f410,f415,f414,f413,f416,f417,f418,f419,f423,f420,f429,f428,f427,f431,f430,f440,f439,f603,f458,f455,f454,f453,f464,f463,f470,f469,f471,f473,f472,f498,f497,f496,f495,f494,f493,f492,f502,f501,f500,f499,f506,f505,f504,f503,f510,f509,f508,f507,f514,f513,f512,f511,f588,f518,f517,f516,f515,f525,f524,f523,f522,f531,f528,f527,f526,f538,f537,f536,f587,f534,f533,f532,f542,f541,f540,f539,f546,f545,f544,f543,f555,f554,f553,f586,f551,f550,f549,f559,f558,f557,f556,f563,f562,f561,f560,f585,f616,f617,f620,f621,f622,f623,f624,f625,f626,f627,f628,f629,f630,f631,f632,f633,f634,f635,f636,f637,f433,f432,f426,f425,f424,f367,f366,f345,f344,f343,f339,f338,f657,f664,f665,f668,f673,f676,f681,f682,f684,f691,f695,f696,f699,f705,f706,f710,f713,f716,f746,f792,f801,f800,f811,f809,f827,f833,f843,f846,f851,f855,f863,f869,f892,f899,f905,f928,f935,f941,f961,f1101,f1100,f1099,f1098,f1097,f1096,f1095,f1092,f1091,f1087,f1084,f1083,f1080,f1079,f1075,f1063,f1062,f1061,f1057,f1056,f1052,f1051,f1050,f1047,f1043,f1041,f1039,f1038,f1035,f1034,f1033,f1032,f1031,f1027,f1026,f1021,f1020,f1017,f1016,f1012,f1005,f1004,f1003,f1002,f1001,f1000,f999,f998,f995,f994,f990,f989,f986,f985,f981,f980,f979,f976,f975,f974,f973,f971,f970,f969,f967,f1117,f1132,f1315,f1314,f1313,f1312,f1311,f1310,f1309,f1306,f1305,f1301,f1298,f1297,f1294,f1293,f1289,f1277,f1276,f1275,f1271,f1270,f1266,f1265,f1264,f1261,f1257,f1255,f1253,f1252,f1249,f1248,f1247,f1246,f1245,f1241,f1240,f1235,f1234,f1231,f1230,f1226,f1219,f1218,f1217,f1216,f1215,f1214,f1213,f1212,f1209,f1208,f1204,f1203,f1200,f1199,f1195,f1194,f1193,f1190,f1189,f1188,f1187,f1185,f1184,f1183,f1182,f1181,f1368,f1410,f1430,f1443,f1459,f1467,f1469,f1470,f1477,f1478,f1483,f1487,f1486,f1503,f1527,f1537,f1580,f1586,f1591,f1598,f1608,f1643,f1642,f1641,f1640,f1644,f1645,f1654,f1655,f1656,f1657,f1658,f1659,f1660,f1661,f1662,f1663,f1664,f1665,f1666,f1667,f1668,f1669,f1670,f1671,f1673,f1674,f1684,f1754,f1817,f1846,f1895,f1900,f1880,f1921,f1928,f2023,f2024,f2026,f2027,f2029,f2030,f2032,f2060,f2107,f2106,f2105,f2104,f2116,f2117,f2118,f2119,f2128,f2129,f2130,f2131,f2132,f2133,f2134,f2135,f2136,f2137,f2138,f2139,f2140,f2141,f2142,f2143,f2144,f2145,f2147,f2148,f2149,f2161,f2247,f2248,f2196,f2199,f2252,f2253,f2237,f2276,f2362,f2363,f2388,f2405,f2403,f2423,f2436,f2446,f2447,f2452,f2451,f2449,f2465,f2479,f2480,f2540,f2483,f2484,f2541,f2542,f2487,f2499,f2500,f2501,f2502,f2503,f2504,f2505,f2506,f2507,f2508,f2509,f2510,f2511,f2512,f2513,f2516,f2537,f2538,f2539,f2545,f2573,f2597,f2598,f2667,f2670,f2608,f2612,f2613,f2620,f2621,f2622,f2623,f2624,f2625,f2626,f2627,f2628,f2629,f2630,f2631,f2632,f2633,f2634,f2637,f2660,f2661,f2662,f2740,f2741,f2742,f2746,f2827,f2830,f2754,f2755,f2756,f2757,f2758,f2759,f2760,f2832,f2762,f2763,f2764,f2768,f2769,f2777,f2778,f2779,f2780,f2781,f2782,f2783,f2784,f2833,f2786,f2787,f2788,f2789,f2790,f2791,f2792,f2795,f2820,f2821,f2822,f2963,f2890,f2966,f2969,f2898,f2899,f2900,f2904,f2905,f2913,f2915,f2916,f2917,f2918,f2919,f2920,f2921,f2922,f2923,f2924,f2925,f2926,f2927,f2928,f2929,f2930,f2933,f2960,f2961,f2962,f3005,f3060,f3061,f4802,f4810,f4900,f4870,f4912,f4921,f4922,f5030,f4924,f4925,f4926,f5045,f5057,f5021,f5363,f5366,f5372,f5401,f5409,f5538,f5475,f5574,f5575,f5590,f5600,f5601,f5677,f5678,f5679,f5681,f5682,f5683,f5684,f5685,f5754,f6113,f6117,f6120,f6123,f6126,f6129,f6132,f6135,f6138,f6141,f6144,f6147,f6150,f6153,f6156,f6159,f6162,f6165,f5789,f5790,f5791,f6167,f6168,f6169,f6170,f6171,f6172,f6173,f6174,f6175,f6176,f6177,f6178,f6179,f6180,f6181,f6182,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6193,f6194,f6195,f6196,f6197,f6198,f6199,f6200,f6201,f5852,f5853,f5854,f5856,f5857,f5858,f5859,f5860,f6209,f6211,f6213,f6215,f6217,f6219,f6221,f6223,f6225,f6227,f6229,f6231,f6233,f6235,f6237,f6239,f6241,f6243,f6115,f6502,f6522,f6526,f6539,f6541,f6543,f6545,f6547,f6549,f6551,f6553])).
fof(f6552,plain,(
  $false | $spl10),
  inference(global_subsumption,[],[f329,f328,f330,f602,f337,f341,f346,f357,f356,f361,f360,f365,f364,f406,f405,f412,f410,f415,f414,f413,f416,f417,f418,f419,f423,f420,f429,f428,f427,f431,f430,f440,f439,f603,f458,f455,f454,f453,f464,f463,f470,f469,f471,f473,f472,f498,f497,f496,f495,f494,f493,f492,f502,f501,f500,f499,f506,f505,f504,f503,f510,f509,f508,f507,f514,f513,f512,f511,f588,f518,f517,f516,f515,f525,f524,f523,f522,f531,f528,f527,f526,f538,f537,f536,f587,f534,f533,f532,f542,f541,f540,f539,f546,f545,f544,f543,f555,f554,f553,f586,f551,f550,f549,f559,f558,f557,f556,f563,f562,f561,f560,f585,f616,f617,f620,f621,f622,f623,f624,f625,f626,f627,f628,f629,f630,f631,f632,f633,f634,f635,f636,f637,f433,f432,f426,f425,f424,f367,f366,f345,f344,f343,f339,f338,f657,f664,f665,f668,f673,f676,f681,f682,f684,f691,f695,f696,f699,f705,f706,f710,f713,f716,f746,f792,f801,f800,f811,f809,f827,f833,f843,f846,f851,f855,f863,f869,f892,f899,f905,f928,f935,f941,f961,f1101,f1100,f1099,f1098,f1097,f1096,f1095,f1092,f1091,f1087,f1084,f1083,f1080,f1079,f1075,f1063,f1062,f1061,f1057,f1056,f1052,f1051,f1050,f1047,f1043,f1041,f1039,f1038,f1035,f1034,f1033,f1032,f1031,f1027,f1026,f1021,f1020,f1017,f1016,f1012,f1005,f1004,f1003,f1002,f1001,f1000,f999,f998,f995,f994,f990,f989,f986,f985,f981,f980,f979,f976,f975,f974,f973,f971,f970,f969,f967,f1117,f1132,f1315,f1314,f1313,f1312,f1311,f1310,f1309,f1306,f1305,f1301,f1298,f1297,f1294,f1293,f1289,f1277,f1276,f1275,f1271,f1270,f1266,f1265,f1264,f1261,f1257,f1255,f1253,f1252,f1249,f1248,f1247,f1246,f1245,f1241,f1240,f1235,f1234,f1231,f1230,f1226,f1219,f1218,f1217,f1216,f1215,f1214,f1213,f1212,f1209,f1208,f1204,f1203,f1200,f1199,f1195,f1194,f1193,f1190,f1189,f1188,f1187,f1185,f1184,f1183,f1182,f1181,f1368,f1410,f1430,f1443,f1459,f1467,f1469,f1470,f1477,f1478,f1483,f1487,f1486,f1503,f1527,f1537,f1580,f1586,f1591,f1598,f1608,f1643,f1642,f1641,f1640,f1644,f1645,f1654,f1655,f1656,f1657,f1658,f1659,f1660,f1661,f1662,f1663,f1664,f1665,f1666,f1667,f1668,f1669,f1670,f1671,f1673,f1674,f1684,f1754,f1817,f1846,f1895,f1900,f1880,f1921,f1928,f2023,f2024,f2026,f2027,f2029,f2030,f2032,f2060,f2107,f2106,f2105,f2104,f2116,f2117,f2118,f2119,f2128,f2129,f2130,f2131,f2132,f2133,f2134,f2135,f2136,f2137,f2138,f2139,f2140,f2141,f2142,f2143,f2144,f2145,f2147,f2148,f2149,f2161,f2247,f2248,f2196,f2199,f2252,f2253,f2237,f2276,f2362,f2363,f2388,f2405,f2403,f2423,f2436,f2446,f2447,f2452,f2451,f2449,f2465,f2479,f2480,f2540,f2483,f2484,f2541,f2542,f2487,f2499,f2500,f2501,f2502,f2503,f2504,f2505,f2506,f2507,f2508,f2509,f2510,f2511,f2512,f2513,f2516,f2537,f2538,f2539,f2545,f2573,f2597,f2598,f2667,f2670,f2608,f2612,f2613,f2620,f2621,f2622,f2623,f2624,f2625,f2626,f2627,f2628,f2629,f2630,f2631,f2632,f2633,f2634,f2637,f2660,f2661,f2662,f2740,f2741,f2742,f2746,f2827,f2830,f2754,f2755,f2756,f2757,f2758,f2759,f2760,f2832,f2762,f2763,f2764,f2768,f2769,f2777,f2778,f2779,f2780,f2781,f2782,f2783,f2784,f2833,f2786,f2787,f2788,f2789,f2790,f2791,f2792,f2795,f2820,f2821,f2822,f2963,f2890,f2966,f2969,f2898,f2899,f2900,f2904,f2905,f2913,f2915,f2916,f2917,f2918,f2919,f2920,f2921,f2922,f2923,f2924,f2925,f2926,f2927,f2928,f2929,f2930,f2933,f2960,f2961,f2962,f3005,f3060,f3061,f4802,f4810,f4900,f4870,f4912,f4921,f4922,f5030,f4924,f4925,f4926,f5045,f5057,f5021,f5363,f5366,f5372,f5401,f5409,f5538,f5475,f5574,f5575,f5590,f5600,f5601,f5677,f5678,f5679,f5681,f5682,f5683,f5684,f5685,f5754,f6113,f6117,f6120,f6123,f6126,f6129,f6132,f6135,f6138,f6141,f6144,f6147,f6150,f6153,f6156,f6159,f6162,f6165,f5789,f5790,f5791,f6167,f6168,f6169,f6170,f6171,f6172,f6173,f6174,f6175,f6176,f6177,f6178,f6179,f6180,f6181,f6182,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6193,f6194,f6195,f6196,f6197,f6198,f6199,f6200,f6201,f5852,f5853,f5854,f5856,f5857,f5858,f5859,f5860,f6209,f6211,f6213,f6215,f6217,f6219,f6221,f6223,f6225,f6227,f6229,f6231,f6233,f6235,f6237,f6239,f6241,f6243,f6115,f6502,f6522,f6526,f6539,f6541,f6543,f6545,f6547,f6549,f6551])).
fof(f6550,plain,(
  $false | $spl10),
  inference(global_subsumption,[],[f329,f328,f330,f602,f337,f341,f346,f357,f356,f361,f360,f365,f364,f406,f405,f412,f410,f415,f414,f413,f416,f417,f418,f419,f423,f420,f429,f428,f427,f431,f430,f440,f439,f603,f458,f455,f454,f453,f464,f463,f470,f469,f471,f473,f472,f498,f497,f496,f495,f494,f493,f492,f502,f501,f500,f499,f506,f505,f504,f503,f510,f509,f508,f507,f514,f513,f512,f511,f588,f518,f517,f516,f515,f525,f524,f523,f522,f531,f528,f527,f526,f538,f537,f536,f587,f534,f533,f532,f542,f541,f540,f539,f546,f545,f544,f543,f555,f554,f553,f586,f551,f550,f549,f559,f558,f557,f556,f563,f562,f561,f560,f585,f616,f617,f620,f621,f622,f623,f624,f625,f626,f627,f628,f629,f630,f631,f632,f633,f634,f635,f636,f637,f433,f432,f426,f425,f424,f367,f366,f345,f344,f343,f339,f338,f657,f664,f665,f668,f673,f676,f681,f682,f684,f691,f695,f696,f699,f705,f706,f710,f713,f716,f746,f792,f801,f800,f811,f809,f827,f833,f843,f846,f851,f855,f863,f869,f892,f899,f905,f928,f935,f941,f961,f1101,f1100,f1099,f1098,f1097,f1096,f1095,f1092,f1091,f1087,f1084,f1083,f1080,f1079,f1075,f1063,f1062,f1061,f1057,f1056,f1052,f1051,f1050,f1047,f1043,f1041,f1039,f1038,f1035,f1034,f1033,f1032,f1031,f1027,f1026,f1021,f1020,f1017,f1016,f1012,f1005,f1004,f1003,f1002,f1001,f1000,f999,f998,f995,f994,f990,f989,f986,f985,f981,f980,f979,f976,f975,f974,f973,f971,f970,f969,f967,f1117,f1132,f1315,f1314,f1313,f1312,f1311,f1310,f1309,f1306,f1305,f1301,f1298,f1297,f1294,f1293,f1289,f1277,f1276,f1275,f1271,f1270,f1266,f1265,f1264,f1261,f1257,f1255,f1253,f1252,f1249,f1248,f1247,f1246,f1245,f1241,f1240,f1235,f1234,f1231,f1230,f1226,f1219,f1218,f1217,f1216,f1215,f1214,f1213,f1212,f1209,f1208,f1204,f1203,f1200,f1199,f1195,f1194,f1193,f1190,f1189,f1188,f1187,f1185,f1184,f1183,f1182,f1181,f1368,f1410,f1430,f1443,f1459,f1467,f1469,f1470,f1477,f1478,f1483,f1487,f1486,f1503,f1527,f1537,f1580,f1586,f1591,f1598,f1608,f1643,f1642,f1641,f1640,f1644,f1645,f1654,f1655,f1656,f1657,f1658,f1659,f1660,f1661,f1662,f1663,f1664,f1665,f1666,f1667,f1668,f1669,f1670,f1671,f1673,f1674,f1684,f1754,f1817,f1846,f1895,f1900,f1880,f1921,f1928,f2023,f2024,f2026,f2027,f2029,f2030,f2032,f2060,f2107,f2106,f2105,f2104,f2116,f2117,f2118,f2119,f2128,f2129,f2130,f2131,f2132,f2133,f2134,f2135,f2136,f2137,f2138,f2139,f2140,f2141,f2142,f2143,f2144,f2145,f2147,f2148,f2149,f2161,f2247,f2248,f2196,f2199,f2252,f2253,f2237,f2276,f2362,f2363,f2388,f2405,f2403,f2423,f2436,f2446,f2447,f2452,f2451,f2449,f2465,f2479,f2480,f2540,f2483,f2484,f2541,f2542,f2487,f2499,f2500,f2501,f2502,f2503,f2504,f2505,f2506,f2507,f2508,f2509,f2510,f2511,f2512,f2513,f2516,f2537,f2538,f2539,f2545,f2573,f2597,f2598,f2667,f2670,f2608,f2612,f2613,f2620,f2621,f2622,f2623,f2624,f2625,f2626,f2627,f2628,f2629,f2630,f2631,f2632,f2633,f2634,f2637,f2660,f2661,f2662,f2740,f2741,f2742,f2746,f2827,f2830,f2754,f2755,f2756,f2757,f2758,f2759,f2760,f2832,f2762,f2763,f2764,f2768,f2769,f2777,f2778,f2779,f2780,f2781,f2782,f2783,f2784,f2833,f2786,f2787,f2788,f2789,f2790,f2791,f2792,f2795,f2820,f2821,f2822,f2963,f2890,f2966,f2969,f2898,f2899,f2900,f2904,f2905,f2913,f2915,f2916,f2917,f2918,f2919,f2920,f2921,f2922,f2923,f2924,f2925,f2926,f2927,f2928,f2929,f2930,f2933,f2960,f2961,f2962,f3005,f3060,f3061,f4802,f4810,f4900,f4870,f4912,f4921,f4922,f5030,f4924,f4925,f4926,f5045,f5057,f5021,f5363,f5366,f5372,f5401,f5409,f5538,f5475,f5574,f5575,f5590,f5600,f5601,f5677,f5678,f5679,f5681,f5682,f5683,f5684,f5685,f5754,f6113,f6117,f6120,f6123,f6126,f6129,f6132,f6135,f6138,f6141,f6144,f6147,f6150,f6153,f6156,f6159,f6162,f6165,f5789,f5790,f5791,f6167,f6168,f6169,f6170,f6171,f6172,f6173,f6174,f6175,f6176,f6177,f6178,f6179,f6180,f6181,f6182,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6193,f6194,f6195,f6196,f6197,f6198,f6199,f6200,f6201,f5852,f5853,f5854,f5856,f5857,f5858,f5859,f5860,f6209,f6211,f6213,f6215,f6217,f6219,f6221,f6223,f6225,f6227,f6229,f6231,f6233,f6235,f6237,f6239,f6241,f6243,f6115,f6502,f6522,f6526,f6539,f6541,f6543,f6545,f6547,f6549])).
fof(f6548,plain,(
  $false | $spl10),
  inference(global_subsumption,[],[f329,f328,f330,f602,f337,f341,f346,f357,f356,f361,f360,f365,f364,f406,f405,f412,f410,f415,f414,f413,f416,f417,f418,f419,f423,f420,f429,f428,f427,f431,f430,f440,f439,f603,f458,f455,f454,f453,f464,f463,f470,f469,f471,f473,f472,f498,f497,f496,f495,f494,f493,f492,f502,f501,f500,f499,f506,f505,f504,f503,f510,f509,f508,f507,f514,f513,f512,f511,f588,f518,f517,f516,f515,f525,f524,f523,f522,f531,f528,f527,f526,f538,f537,f536,f587,f534,f533,f532,f542,f541,f540,f539,f546,f545,f544,f543,f555,f554,f553,f586,f551,f550,f549,f559,f558,f557,f556,f563,f562,f561,f560,f585,f616,f617,f620,f621,f622,f623,f624,f625,f626,f627,f628,f629,f630,f631,f632,f633,f634,f635,f636,f637,f433,f432,f426,f425,f424,f367,f366,f345,f344,f343,f339,f338,f657,f664,f665,f668,f673,f676,f681,f682,f684,f691,f695,f696,f699,f705,f706,f710,f713,f716,f746,f792,f801,f800,f811,f809,f827,f833,f843,f846,f851,f855,f863,f869,f892,f899,f905,f928,f935,f941,f961,f1101,f1100,f1099,f1098,f1097,f1096,f1095,f1092,f1091,f1087,f1084,f1083,f1080,f1079,f1075,f1063,f1062,f1061,f1057,f1056,f1052,f1051,f1050,f1047,f1043,f1041,f1039,f1038,f1035,f1034,f1033,f1032,f1031,f1027,f1026,f1021,f1020,f1017,f1016,f1012,f1005,f1004,f1003,f1002,f1001,f1000,f999,f998,f995,f994,f990,f989,f986,f985,f981,f980,f979,f976,f975,f974,f973,f971,f970,f969,f967,f1117,f1132,f1315,f1314,f1313,f1312,f1311,f1310,f1309,f1306,f1305,f1301,f1298,f1297,f1294,f1293,f1289,f1277,f1276,f1275,f1271,f1270,f1266,f1265,f1264,f1261,f1257,f1255,f1253,f1252,f1249,f1248,f1247,f1246,f1245,f1241,f1240,f1235,f1234,f1231,f1230,f1226,f1219,f1218,f1217,f1216,f1215,f1214,f1213,f1212,f1209,f1208,f1204,f1203,f1200,f1199,f1195,f1194,f1193,f1190,f1189,f1188,f1187,f1185,f1184,f1183,f1182,f1181,f1368,f1410,f1430,f1443,f1459,f1467,f1469,f1470,f1477,f1478,f1483,f1487,f1486,f1503,f1527,f1537,f1580,f1586,f1591,f1598,f1608,f1643,f1642,f1641,f1640,f1644,f1645,f1654,f1655,f1656,f1657,f1658,f1659,f1660,f1661,f1662,f1663,f1664,f1665,f1666,f1667,f1668,f1669,f1670,f1671,f1673,f1674,f1684,f1754,f1817,f1846,f1895,f1900,f1880,f1921,f1928,f2023,f2024,f2026,f2027,f2029,f2030,f2032,f2060,f2107,f2106,f2105,f2104,f2116,f2117,f2118,f2119,f2128,f2129,f2130,f2131,f2132,f2133,f2134,f2135,f2136,f2137,f2138,f2139,f2140,f2141,f2142,f2143,f2144,f2145,f2147,f2148,f2149,f2161,f2247,f2248,f2196,f2199,f2252,f2253,f2237,f2276,f2362,f2363,f2388,f2405,f2403,f2423,f2436,f2446,f2447,f2452,f2451,f2449,f2465,f2479,f2480,f2540,f2483,f2484,f2541,f2542,f2487,f2499,f2500,f2501,f2502,f2503,f2504,f2505,f2506,f2507,f2508,f2509,f2510,f2511,f2512,f2513,f2516,f2537,f2538,f2539,f2545,f2573,f2597,f2598,f2667,f2670,f2608,f2612,f2613,f2620,f2621,f2622,f2623,f2624,f2625,f2626,f2627,f2628,f2629,f2630,f2631,f2632,f2633,f2634,f2637,f2660,f2661,f2662,f2740,f2741,f2742,f2746,f2827,f2830,f2754,f2755,f2756,f2757,f2758,f2759,f2760,f2832,f2762,f2763,f2764,f2768,f2769,f2777,f2778,f2779,f2780,f2781,f2782,f2783,f2784,f2833,f2786,f2787,f2788,f2789,f2790,f2791,f2792,f2795,f2820,f2821,f2822,f2963,f2890,f2966,f2969,f2898,f2899,f2900,f2904,f2905,f2913,f2915,f2916,f2917,f2918,f2919,f2920,f2921,f2922,f2923,f2924,f2925,f2926,f2927,f2928,f2929,f2930,f2933,f2960,f2961,f2962,f3005,f3060,f3061,f4802,f4810,f4900,f4870,f4912,f4921,f4922,f5030,f4924,f4925,f4926,f5045,f5057,f5021,f5363,f5366,f5372,f5401,f5409,f5538,f5475,f5574,f5575,f5590,f5600,f5601,f5677,f5678,f5679,f5681,f5682,f5683,f5684,f5685,f5754,f6113,f6117,f6120,f6123,f6126,f6129,f6132,f6135,f6138,f6141,f6144,f6147,f6150,f6153,f6156,f6159,f6162,f6165,f5789,f5790,f5791,f6167,f6168,f6169,f6170,f6171,f6172,f6173,f6174,f6175,f6176,f6177,f6178,f6179,f6180,f6181,f6182,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6193,f6194,f6195,f6196,f6197,f6198,f6199,f6200,f6201,f5852,f5853,f5854,f5856,f5857,f5858,f5859,f5860,f6209,f6211,f6213,f6215,f6217,f6219,f6221,f6223,f6225,f6227,f6229,f6231,f6233,f6235,f6237,f6239,f6241,f6243,f6115,f6502,f6522,f6526,f6539,f6541,f6543,f6545,f6547])).
fof(f6546,plain,(
  $false | $spl10),
  inference(global_subsumption,[],[f329,f328,f330,f602,f337,f341,f346,f357,f356,f361,f360,f365,f364,f406,f405,f412,f410,f415,f414,f413,f416,f417,f418,f419,f423,f420,f429,f428,f427,f431,f430,f440,f439,f603,f458,f455,f454,f453,f464,f463,f470,f469,f471,f473,f472,f498,f497,f496,f495,f494,f493,f492,f502,f501,f500,f499,f506,f505,f504,f503,f510,f509,f508,f507,f514,f513,f512,f511,f588,f518,f517,f516,f515,f525,f524,f523,f522,f531,f528,f527,f526,f538,f537,f536,f587,f534,f533,f532,f542,f541,f540,f539,f546,f545,f544,f543,f555,f554,f553,f586,f551,f550,f549,f559,f558,f557,f556,f563,f562,f561,f560,f585,f616,f617,f620,f621,f622,f623,f624,f625,f626,f627,f628,f629,f630,f631,f632,f633,f634,f635,f636,f637,f433,f432,f426,f425,f424,f367,f366,f345,f344,f343,f339,f338,f657,f664,f665,f668,f673,f676,f681,f682,f684,f691,f695,f696,f699,f705,f706,f710,f713,f716,f746,f792,f801,f800,f811,f809,f827,f833,f843,f846,f851,f855,f863,f869,f892,f899,f905,f928,f935,f941,f961,f1101,f1100,f1099,f1098,f1097,f1096,f1095,f1092,f1091,f1087,f1084,f1083,f1080,f1079,f1075,f1063,f1062,f1061,f1057,f1056,f1052,f1051,f1050,f1047,f1043,f1041,f1039,f1038,f1035,f1034,f1033,f1032,f1031,f1027,f1026,f1021,f1020,f1017,f1016,f1012,f1005,f1004,f1003,f1002,f1001,f1000,f999,f998,f995,f994,f990,f989,f986,f985,f981,f980,f979,f976,f975,f974,f973,f971,f970,f969,f967,f1117,f1132,f1315,f1314,f1313,f1312,f1311,f1310,f1309,f1306,f1305,f1301,f1298,f1297,f1294,f1293,f1289,f1277,f1276,f1275,f1271,f1270,f1266,f1265,f1264,f1261,f1257,f1255,f1253,f1252,f1249,f1248,f1247,f1246,f1245,f1241,f1240,f1235,f1234,f1231,f1230,f1226,f1219,f1218,f1217,f1216,f1215,f1214,f1213,f1212,f1209,f1208,f1204,f1203,f1200,f1199,f1195,f1194,f1193,f1190,f1189,f1188,f1187,f1185,f1184,f1183,f1182,f1181,f1368,f1410,f1430,f1443,f1459,f1467,f1469,f1470,f1477,f1478,f1483,f1487,f1486,f1503,f1527,f1537,f1580,f1586,f1591,f1598,f1608,f1643,f1642,f1641,f1640,f1644,f1645,f1654,f1655,f1656,f1657,f1658,f1659,f1660,f1661,f1662,f1663,f1664,f1665,f1666,f1667,f1668,f1669,f1670,f1671,f1673,f1674,f1684,f1754,f1817,f1846,f1895,f1900,f1880,f1921,f1928,f2023,f2024,f2026,f2027,f2029,f2030,f2032,f2060,f2107,f2106,f2105,f2104,f2116,f2117,f2118,f2119,f2128,f2129,f2130,f2131,f2132,f2133,f2134,f2135,f2136,f2137,f2138,f2139,f2140,f2141,f2142,f2143,f2144,f2145,f2147,f2148,f2149,f2161,f2247,f2248,f2196,f2199,f2252,f2253,f2237,f2276,f2362,f2363,f2388,f2405,f2403,f2423,f2436,f2446,f2447,f2452,f2451,f2449,f2465,f2479,f2480,f2540,f2483,f2484,f2541,f2542,f2487,f2499,f2500,f2501,f2502,f2503,f2504,f2505,f2506,f2507,f2508,f2509,f2510,f2511,f2512,f2513,f2516,f2537,f2538,f2539,f2545,f2573,f2597,f2598,f2667,f2670,f2608,f2612,f2613,f2620,f2621,f2622,f2623,f2624,f2625,f2626,f2627,f2628,f2629,f2630,f2631,f2632,f2633,f2634,f2637,f2660,f2661,f2662,f2740,f2741,f2742,f2746,f2827,f2830,f2754,f2755,f2756,f2757,f2758,f2759,f2760,f2832,f2762,f2763,f2764,f2768,f2769,f2777,f2778,f2779,f2780,f2781,f2782,f2783,f2784,f2833,f2786,f2787,f2788,f2789,f2790,f2791,f2792,f2795,f2820,f2821,f2822,f2963,f2890,f2966,f2969,f2898,f2899,f2900,f2904,f2905,f2913,f2915,f2916,f2917,f2918,f2919,f2920,f2921,f2922,f2923,f2924,f2925,f2926,f2927,f2928,f2929,f2930,f2933,f2960,f2961,f2962,f3005,f3060,f3061,f4802,f4810,f4900,f4870,f4912,f4921,f4922,f5030,f4924,f4925,f4926,f5045,f5057,f5021,f5363,f5366,f5372,f5401,f5409,f5538,f5475,f5574,f5575,f5590,f5600,f5601,f5677,f5678,f5679,f5681,f5682,f5683,f5684,f5685,f5754,f6113,f6117,f6120,f6123,f6126,f6129,f6132,f6135,f6138,f6141,f6144,f6147,f6150,f6153,f6156,f6159,f6162,f6165,f5789,f5790,f5791,f6167,f6168,f6169,f6170,f6171,f6172,f6173,f6174,f6175,f6176,f6177,f6178,f6179,f6180,f6181,f6182,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6193,f6194,f6195,f6196,f6197,f6198,f6199,f6200,f6201,f5852,f5853,f5854,f5856,f5857,f5858,f5859,f5860,f6209,f6211,f6213,f6215,f6217,f6219,f6221,f6223,f6225,f6227,f6229,f6231,f6233,f6235,f6237,f6239,f6241,f6243,f6115,f6502,f6522,f6526,f6539,f6541,f6543,f6545])).
fof(f6544,plain,(
  $false | $spl10),
  inference(global_subsumption,[],[f329,f328,f330,f602,f337,f341,f346,f357,f356,f361,f360,f365,f364,f406,f405,f412,f410,f415,f414,f413,f416,f417,f418,f419,f423,f420,f429,f428,f427,f431,f430,f440,f439,f603,f458,f455,f454,f453,f464,f463,f470,f469,f471,f473,f472,f498,f497,f496,f495,f494,f493,f492,f502,f501,f500,f499,f506,f505,f504,f503,f510,f509,f508,f507,f514,f513,f512,f511,f588,f518,f517,f516,f515,f525,f524,f523,f522,f531,f528,f527,f526,f538,f537,f536,f587,f534,f533,f532,f542,f541,f540,f539,f546,f545,f544,f543,f555,f554,f553,f586,f551,f550,f549,f559,f558,f557,f556,f563,f562,f561,f560,f585,f616,f617,f620,f621,f622,f623,f624,f625,f626,f627,f628,f629,f630,f631,f632,f633,f634,f635,f636,f637,f433,f432,f426,f425,f424,f367,f366,f345,f344,f343,f339,f338,f657,f664,f665,f668,f673,f676,f681,f682,f684,f691,f695,f696,f699,f705,f706,f710,f713,f716,f746,f792,f801,f800,f811,f809,f827,f833,f843,f846,f851,f855,f863,f869,f892,f899,f905,f928,f935,f941,f961,f1101,f1100,f1099,f1098,f1097,f1096,f1095,f1092,f1091,f1087,f1084,f1083,f1080,f1079,f1075,f1063,f1062,f1061,f1057,f1056,f1052,f1051,f1050,f1047,f1043,f1041,f1039,f1038,f1035,f1034,f1033,f1032,f1031,f1027,f1026,f1021,f1020,f1017,f1016,f1012,f1005,f1004,f1003,f1002,f1001,f1000,f999,f998,f995,f994,f990,f989,f986,f985,f981,f980,f979,f976,f975,f974,f973,f971,f970,f969,f967,f1117,f1132,f1315,f1314,f1313,f1312,f1311,f1310,f1309,f1306,f1305,f1301,f1298,f1297,f1294,f1293,f1289,f1277,f1276,f1275,f1271,f1270,f1266,f1265,f1264,f1261,f1257,f1255,f1253,f1252,f1249,f1248,f1247,f1246,f1245,f1241,f1240,f1235,f1234,f1231,f1230,f1226,f1219,f1218,f1217,f1216,f1215,f1214,f1213,f1212,f1209,f1208,f1204,f1203,f1200,f1199,f1195,f1194,f1193,f1190,f1189,f1188,f1187,f1185,f1184,f1183,f1182,f1181,f1368,f1410,f1430,f1443,f1459,f1467,f1469,f1470,f1477,f1478,f1483,f1487,f1486,f1503,f1527,f1537,f1580,f1586,f1591,f1598,f1608,f1643,f1642,f1641,f1640,f1644,f1645,f1654,f1655,f1656,f1657,f1658,f1659,f1660,f1661,f1662,f1663,f1664,f1665,f1666,f1667,f1668,f1669,f1670,f1671,f1673,f1674,f1684,f1754,f1817,f1846,f1895,f1900,f1880,f1921,f1928,f2023,f2024,f2026,f2027,f2029,f2030,f2032,f2060,f2107,f2106,f2105,f2104,f2116,f2117,f2118,f2119,f2128,f2129,f2130,f2131,f2132,f2133,f2134,f2135,f2136,f2137,f2138,f2139,f2140,f2141,f2142,f2143,f2144,f2145,f2147,f2148,f2149,f2161,f2247,f2248,f2196,f2199,f2252,f2253,f2237,f2276,f2362,f2363,f2388,f2405,f2403,f2423,f2436,f2446,f2447,f2452,f2451,f2449,f2465,f2479,f2480,f2540,f2483,f2484,f2541,f2542,f2487,f2499,f2500,f2501,f2502,f2503,f2504,f2505,f2506,f2507,f2508,f2509,f2510,f2511,f2512,f2513,f2516,f2537,f2538,f2539,f2545,f2573,f2597,f2598,f2667,f2670,f2608,f2612,f2613,f2620,f2621,f2622,f2623,f2624,f2625,f2626,f2627,f2628,f2629,f2630,f2631,f2632,f2633,f2634,f2637,f2660,f2661,f2662,f2740,f2741,f2742,f2746,f2827,f2830,f2754,f2755,f2756,f2757,f2758,f2759,f2760,f2832,f2762,f2763,f2764,f2768,f2769,f2777,f2778,f2779,f2780,f2781,f2782,f2783,f2784,f2833,f2786,f2787,f2788,f2789,f2790,f2791,f2792,f2795,f2820,f2821,f2822,f2963,f2890,f2966,f2969,f2898,f2899,f2900,f2904,f2905,f2913,f2915,f2916,f2917,f2918,f2919,f2920,f2921,f2922,f2923,f2924,f2925,f2926,f2927,f2928,f2929,f2930,f2933,f2960,f2961,f2962,f3005,f3060,f3061,f4802,f4810,f4900,f4870,f4912,f4921,f4922,f5030,f4924,f4925,f4926,f5045,f5057,f5021,f5363,f5366,f5372,f5401,f5409,f5538,f5475,f5574,f5575,f5590,f5600,f5601,f5677,f5678,f5679,f5681,f5682,f5683,f5684,f5685,f5754,f6113,f6117,f6120,f6123,f6126,f6129,f6132,f6135,f6138,f6141,f6144,f6147,f6150,f6153,f6156,f6159,f6162,f6165,f5789,f5790,f5791,f6167,f6168,f6169,f6170,f6171,f6172,f6173,f6174,f6175,f6176,f6177,f6178,f6179,f6180,f6181,f6182,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6193,f6194,f6195,f6196,f6197,f6198,f6199,f6200,f6201,f5852,f5853,f5854,f5856,f5857,f5858,f5859,f5860,f6209,f6211,f6213,f6215,f6217,f6219,f6221,f6223,f6225,f6227,f6229,f6231,f6233,f6235,f6237,f6239,f6241,f6243,f6115,f6502,f6522,f6526,f6539,f6541,f6543])).
fof(f6542,plain,(
  $false | $spl10),
  inference(global_subsumption,[],[f329,f328,f330,f602,f337,f341,f346,f357,f356,f361,f360,f365,f364,f406,f405,f412,f410,f415,f414,f413,f416,f417,f418,f419,f423,f420,f429,f428,f427,f431,f430,f440,f439,f603,f458,f455,f454,f453,f464,f463,f470,f469,f471,f473,f472,f498,f497,f496,f495,f494,f493,f492,f502,f501,f500,f499,f506,f505,f504,f503,f510,f509,f508,f507,f514,f513,f512,f511,f588,f518,f517,f516,f515,f525,f524,f523,f522,f531,f528,f527,f526,f538,f537,f536,f587,f534,f533,f532,f542,f541,f540,f539,f546,f545,f544,f543,f555,f554,f553,f586,f551,f550,f549,f559,f558,f557,f556,f563,f562,f561,f560,f585,f616,f617,f620,f621,f622,f623,f624,f625,f626,f627,f628,f629,f630,f631,f632,f633,f634,f635,f636,f637,f433,f432,f426,f425,f424,f367,f366,f345,f344,f343,f339,f338,f657,f664,f665,f668,f673,f676,f681,f682,f684,f691,f695,f696,f699,f705,f706,f710,f713,f716,f746,f792,f801,f800,f811,f809,f827,f833,f843,f846,f851,f855,f863,f869,f892,f899,f905,f928,f935,f941,f961,f1101,f1100,f1099,f1098,f1097,f1096,f1095,f1092,f1091,f1087,f1084,f1083,f1080,f1079,f1075,f1063,f1062,f1061,f1057,f1056,f1052,f1051,f1050,f1047,f1043,f1041,f1039,f1038,f1035,f1034,f1033,f1032,f1031,f1027,f1026,f1021,f1020,f1017,f1016,f1012,f1005,f1004,f1003,f1002,f1001,f1000,f999,f998,f995,f994,f990,f989,f986,f985,f981,f980,f979,f976,f975,f974,f973,f971,f970,f969,f967,f1117,f1132,f1315,f1314,f1313,f1312,f1311,f1310,f1309,f1306,f1305,f1301,f1298,f1297,f1294,f1293,f1289,f1277,f1276,f1275,f1271,f1270,f1266,f1265,f1264,f1261,f1257,f1255,f1253,f1252,f1249,f1248,f1247,f1246,f1245,f1241,f1240,f1235,f1234,f1231,f1230,f1226,f1219,f1218,f1217,f1216,f1215,f1214,f1213,f1212,f1209,f1208,f1204,f1203,f1200,f1199,f1195,f1194,f1193,f1190,f1189,f1188,f1187,f1185,f1184,f1183,f1182,f1181,f1368,f1410,f1430,f1443,f1459,f1467,f1469,f1470,f1477,f1478,f1483,f1487,f1486,f1503,f1527,f1537,f1580,f1586,f1591,f1598,f1608,f1643,f1642,f1641,f1640,f1644,f1645,f1654,f1655,f1656,f1657,f1658,f1659,f1660,f1661,f1662,f1663,f1664,f1665,f1666,f1667,f1668,f1669,f1670,f1671,f1673,f1674,f1684,f1754,f1817,f1846,f1895,f1900,f1880,f1921,f1928,f2023,f2024,f2026,f2027,f2029,f2030,f2032,f2060,f2107,f2106,f2105,f2104,f2116,f2117,f2118,f2119,f2128,f2129,f2130,f2131,f2132,f2133,f2134,f2135,f2136,f2137,f2138,f2139,f2140,f2141,f2142,f2143,f2144,f2145,f2147,f2148,f2149,f2161,f2247,f2248,f2196,f2199,f2252,f2253,f2237,f2276,f2362,f2363,f2388,f2405,f2403,f2423,f2436,f2446,f2447,f2452,f2451,f2449,f2465,f2479,f2480,f2540,f2483,f2484,f2541,f2542,f2487,f2499,f2500,f2501,f2502,f2503,f2504,f2505,f2506,f2507,f2508,f2509,f2510,f2511,f2512,f2513,f2516,f2537,f2538,f2539,f2545,f2573,f2597,f2598,f2667,f2670,f2608,f2612,f2613,f2620,f2621,f2622,f2623,f2624,f2625,f2626,f2627,f2628,f2629,f2630,f2631,f2632,f2633,f2634,f2637,f2660,f2661,f2662,f2740,f2741,f2742,f2746,f2827,f2830,f2754,f2755,f2756,f2757,f2758,f2759,f2760,f2832,f2762,f2763,f2764,f2768,f2769,f2777,f2778,f2779,f2780,f2781,f2782,f2783,f2784,f2833,f2786,f2787,f2788,f2789,f2790,f2791,f2792,f2795,f2820,f2821,f2822,f2963,f2890,f2966,f2969,f2898,f2899,f2900,f2904,f2905,f2913,f2915,f2916,f2917,f2918,f2919,f2920,f2921,f2922,f2923,f2924,f2925,f2926,f2927,f2928,f2929,f2930,f2933,f2960,f2961,f2962,f3005,f3060,f3061,f4802,f4810,f4900,f4870,f4912,f4921,f4922,f5030,f4924,f4925,f4926,f5045,f5057,f5021,f5363,f5366,f5372,f5401,f5409,f5538,f5475,f5574,f5575,f5590,f5600,f5601,f5677,f5678,f5679,f5681,f5682,f5683,f5684,f5685,f5754,f6113,f6117,f6120,f6123,f6126,f6129,f6132,f6135,f6138,f6141,f6144,f6147,f6150,f6153,f6156,f6159,f6162,f6165,f5789,f5790,f5791,f6167,f6168,f6169,f6170,f6171,f6172,f6173,f6174,f6175,f6176,f6177,f6178,f6179,f6180,f6181,f6182,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6193,f6194,f6195,f6196,f6197,f6198,f6199,f6200,f6201,f5852,f5853,f5854,f5856,f5857,f5858,f5859,f5860,f6209,f6211,f6213,f6215,f6217,f6219,f6221,f6223,f6225,f6227,f6229,f6231,f6233,f6235,f6237,f6239,f6241,f6243,f6115,f6502,f6522,f6526,f6539,f6541])).
fof(f6540,plain,(
  $false | $spl10),
  inference(global_subsumption,[],[f329,f328,f330,f602,f337,f341,f346,f357,f356,f361,f360,f365,f364,f406,f405,f412,f410,f415,f414,f413,f416,f417,f418,f419,f423,f420,f429,f428,f427,f431,f430,f440,f439,f603,f458,f455,f454,f453,f464,f463,f470,f469,f471,f473,f472,f498,f497,f496,f495,f494,f493,f492,f502,f501,f500,f499,f506,f505,f504,f503,f510,f509,f508,f507,f514,f513,f512,f511,f588,f518,f517,f516,f515,f525,f524,f523,f522,f531,f528,f527,f526,f538,f537,f536,f587,f534,f533,f532,f542,f541,f540,f539,f546,f545,f544,f543,f555,f554,f553,f586,f551,f550,f549,f559,f558,f557,f556,f563,f562,f561,f560,f585,f616,f617,f620,f621,f622,f623,f624,f625,f626,f627,f628,f629,f630,f631,f632,f633,f634,f635,f636,f637,f433,f432,f426,f425,f424,f367,f366,f345,f344,f343,f339,f338,f657,f664,f665,f668,f673,f676,f681,f682,f684,f691,f695,f696,f699,f705,f706,f710,f713,f716,f746,f792,f801,f800,f811,f809,f827,f833,f843,f846,f851,f855,f863,f869,f892,f899,f905,f928,f935,f941,f961,f1101,f1100,f1099,f1098,f1097,f1096,f1095,f1092,f1091,f1087,f1084,f1083,f1080,f1079,f1075,f1063,f1062,f1061,f1057,f1056,f1052,f1051,f1050,f1047,f1043,f1041,f1039,f1038,f1035,f1034,f1033,f1032,f1031,f1027,f1026,f1021,f1020,f1017,f1016,f1012,f1005,f1004,f1003,f1002,f1001,f1000,f999,f998,f995,f994,f990,f989,f986,f985,f981,f980,f979,f976,f975,f974,f973,f971,f970,f969,f967,f1117,f1132,f1315,f1314,f1313,f1312,f1311,f1310,f1309,f1306,f1305,f1301,f1298,f1297,f1294,f1293,f1289,f1277,f1276,f1275,f1271,f1270,f1266,f1265,f1264,f1261,f1257,f1255,f1253,f1252,f1249,f1248,f1247,f1246,f1245,f1241,f1240,f1235,f1234,f1231,f1230,f1226,f1219,f1218,f1217,f1216,f1215,f1214,f1213,f1212,f1209,f1208,f1204,f1203,f1200,f1199,f1195,f1194,f1193,f1190,f1189,f1188,f1187,f1185,f1184,f1183,f1182,f1181,f1368,f1410,f1430,f1443,f1459,f1467,f1469,f1470,f1477,f1478,f1483,f1487,f1486,f1503,f1527,f1537,f1580,f1586,f1591,f1598,f1608,f1643,f1642,f1641,f1640,f1644,f1645,f1654,f1655,f1656,f1657,f1658,f1659,f1660,f1661,f1662,f1663,f1664,f1665,f1666,f1667,f1668,f1669,f1670,f1671,f1673,f1674,f1684,f1754,f1817,f1846,f1895,f1900,f1880,f1921,f1928,f2023,f2024,f2026,f2027,f2029,f2030,f2032,f2060,f2107,f2106,f2105,f2104,f2116,f2117,f2118,f2119,f2128,f2129,f2130,f2131,f2132,f2133,f2134,f2135,f2136,f2137,f2138,f2139,f2140,f2141,f2142,f2143,f2144,f2145,f2147,f2148,f2149,f2161,f2247,f2248,f2196,f2199,f2252,f2253,f2237,f2276,f2362,f2363,f2388,f2405,f2403,f2423,f2436,f2446,f2447,f2452,f2451,f2449,f2465,f2479,f2480,f2540,f2483,f2484,f2541,f2542,f2487,f2499,f2500,f2501,f2502,f2503,f2504,f2505,f2506,f2507,f2508,f2509,f2510,f2511,f2512,f2513,f2516,f2537,f2538,f2539,f2545,f2573,f2597,f2598,f2667,f2670,f2608,f2612,f2613,f2620,f2621,f2622,f2623,f2624,f2625,f2626,f2627,f2628,f2629,f2630,f2631,f2632,f2633,f2634,f2637,f2660,f2661,f2662,f2740,f2741,f2742,f2746,f2827,f2830,f2754,f2755,f2756,f2757,f2758,f2759,f2760,f2832,f2762,f2763,f2764,f2768,f2769,f2777,f2778,f2779,f2780,f2781,f2782,f2783,f2784,f2833,f2786,f2787,f2788,f2789,f2790,f2791,f2792,f2795,f2820,f2821,f2822,f2963,f2890,f2966,f2969,f2898,f2899,f2900,f2904,f2905,f2913,f2915,f2916,f2917,f2918,f2919,f2920,f2921,f2922,f2923,f2924,f2925,f2926,f2927,f2928,f2929,f2930,f2933,f2960,f2961,f2962,f3005,f3060,f3061,f4802,f4810,f4900,f4870,f4912,f4921,f4922,f5030,f4924,f4925,f4926,f5045,f5057,f5021,f5363,f5366,f5372,f5401,f5409,f5538,f5475,f5574,f5575,f5590,f5600,f5601,f5677,f5678,f5679,f5681,f5682,f5683,f5684,f5685,f5754,f6113,f6117,f6120,f6123,f6126,f6129,f6132,f6135,f6138,f6141,f6144,f6147,f6150,f6153,f6156,f6159,f6162,f6165,f5789,f5790,f5791,f6167,f6168,f6169,f6170,f6171,f6172,f6173,f6174,f6175,f6176,f6177,f6178,f6179,f6180,f6181,f6182,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6193,f6194,f6195,f6196,f6197,f6198,f6199,f6200,f6201,f5852,f5853,f5854,f5856,f5857,f5858,f5859,f5860,f6209,f6211,f6213,f6215,f6217,f6219,f6221,f6223,f6225,f6227,f6229,f6231,f6233,f6235,f6237,f6239,f6241,f6243,f6115,f6502,f6522,f6526,f6539])).
fof(f6538,plain,(
  $false | $spl10),
  inference(subsumption_resolution,[],[f6537,f330])).
fof(f6537,plain,(
  ~p(s(bool,'T_0')) | $spl10),
  inference(forward_demodulation,[],[f6536,f6115])).
fof(f6536,plain,(
  ( ! [X1] : (~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X1))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) ) | $spl10),
  inference(subsumption_resolution,[],[f6290,f330])).
fof(f6290,plain,(
  ( ! [X1] : (~p(s(bool,'T_0')) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X1))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) ) | $spl10),
  inference(backward_demodulation,[],[f6115,f2119])).
fof(f6531,plain,(
  $false | ($spl0 | $spl10)),
  inference(global_subsumption,[],[f6530,f329,f328,f330,f602,f337,f341,f346,f357,f356,f361,f360,f365,f364,f406,f405,f412,f410,f415,f414,f413,f416,f417,f418,f419,f423,f420,f429,f428,f427,f431,f430,f440,f439,f603,f458,f455,f454,f453,f464,f463,f470,f469,f471,f473,f472,f498,f497,f496,f495,f494,f493,f492,f502,f501,f500,f499,f506,f505,f504,f503,f510,f509,f508,f507,f514,f513,f512,f511,f588,f518,f517,f516,f515,f525,f524,f523,f522,f531,f528,f527,f526,f538,f537,f536,f587,f534,f533,f532,f542,f541,f540,f539,f546,f545,f544,f543,f555,f554,f553,f586,f551,f550,f549,f559,f558,f557,f556,f563,f562,f561,f560,f585,f616,f617,f620,f621,f622,f623,f624,f625,f626,f627,f628,f629,f630,f631,f632,f633,f634,f635,f636,f637,f433,f432,f426,f425,f424,f367,f366,f345,f344,f343,f339,f338,f657,f664,f665,f668,f673,f676,f681,f682,f684,f691,f695,f696,f699,f705,f706,f710,f713,f716,f746,f792,f801,f800,f811,f809,f827,f833,f843,f846,f851,f855,f863,f869,f892,f899,f905,f928,f935,f941,f961,f1101,f1100,f1099,f1098,f1097,f1096,f1095,f1092,f1091,f1087,f1084,f1083,f1080,f1079,f1075,f1063,f1062,f1061,f1057,f1056,f1052,f1051,f1050,f1047,f1043,f1041,f1039,f1038,f1035,f1034,f1033,f1032,f1031,f1027,f1026,f1021,f1020,f1017,f1016,f1012,f1005,f1004,f1003,f1002,f1001,f1000,f999,f998,f995,f994,f990,f989,f986,f985,f981,f980,f979,f976,f975,f974,f973,f971,f970,f969,f967,f1117,f1132,f1315,f1314,f1313,f1312,f1311,f1310,f1309,f1306,f1305,f1301,f1298,f1297,f1294,f1293,f1289,f1277,f1276,f1275,f1271,f1270,f1266,f1265,f1264,f1261,f1257,f1255,f1253,f1252,f1249,f1248,f1247,f1246,f1245,f1241,f1240,f1235,f1234,f1231,f1230,f1226,f1219,f1218,f1217,f1216,f1215,f1214,f1213,f1212,f1209,f1208,f1204,f1203,f1200,f1199,f1195,f1194,f1193,f1190,f1189,f1188,f1187,f1185,f1184,f1183,f1182,f1181,f1368,f1410,f1430,f1443,f1459,f1467,f1469,f1470,f1477,f1478,f1483,f1487,f1486,f1503,f1527,f1537,f1580,f1586,f1591,f1598,f1608,f1643,f1642,f1641,f1640,f1644,f1645,f1654,f1655,f1656,f1657,f1658,f1659,f1660,f1661,f1662,f1663,f1664,f1665,f1666,f1667,f1668,f1669,f1670,f1671,f1673,f1674,f1684,f1754,f1817,f1846,f1895,f1900,f1880,f1921,f1928,f2023,f2024,f2026,f2027,f2029,f2030,f2032,f2060,f2107,f2106,f2105,f2104,f2116,f2117,f2118,f2119,f2128,f2129,f2130,f2131,f2132,f2133,f2134,f2135,f2136,f2137,f2138,f2139,f2140,f2141,f2142,f2143,f2144,f2145,f2147,f2148,f2149,f2161,f2247,f2248,f2196,f2199,f2252,f2253,f2237,f2276,f2362,f2363,f2388,f2405,f2403,f2423,f2436,f2446,f2447,f2452,f2451,f2449,f2465,f2479,f2480,f2540,f2483,f2484,f2541,f2542,f2487,f2499,f2500,f2501,f2502,f2503,f2504,f2505,f2506,f2507,f2508,f2509,f2510,f2511,f2512,f2513,f2516,f2537,f2538,f2539,f2545,f2573,f2597,f2598,f2667,f2670,f2608,f2612,f2613,f2620,f2621,f2622,f2623,f2624,f2625,f2626,f2627,f2628,f2629,f2630,f2631,f2632,f2633,f2634,f2637,f2660,f2661,f2662,f2740,f2741,f2742,f2746,f2827,f2830,f2754,f2755,f2756,f2757,f2758,f2759,f2760,f2832,f2762,f2763,f2764,f2768,f2769,f2777,f2778,f2779,f2780,f2781,f2782,f2783,f2784,f2833,f2786,f2787,f2788,f2789,f2790,f2791,f2792,f2795,f2820,f2821,f2822,f2963,f2890,f2966,f2969,f2898,f2899,f2900,f2904,f2905,f2913,f2915,f2916,f2917,f2918,f2919,f2920,f2921,f2922,f2923,f2924,f2925,f2926,f2927,f2928,f2929,f2930,f2933,f2960,f2961,f2962,f3005,f3060,f3061,f4802,f4810,f4900,f4870,f4912,f4921,f4922,f5030,f4924,f4925,f4926,f5045,f5057,f5021,f5363,f5366,f5372,f5401,f5409,f5538,f5475,f5574,f5575,f5590,f5600,f5601,f5677,f5678,f5679,f5681,f5682,f5683,f5684,f5685,f5754,f6113,f6117,f6120,f6123,f6126,f6129,f6132,f6135,f6138,f6141,f6144,f6147,f6150,f6153,f6156,f6159,f6162,f6165,f5789,f5790,f5791,f6167,f6168,f6169,f6170,f6171,f6172,f6173,f6174,f6175,f6176,f6177,f6178,f6179,f6180,f6181,f6182,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6193,f6194,f6195,f6196,f6197,f6198,f6199,f6200,f6201,f5852,f5853,f5854,f5856,f5857,f5858,f5859,f5860,f6209,f6211,f6213,f6215,f6217,f6219,f6221,f6223,f6225,f6227,f6229,f6231,f6233,f6235,f6237,f6239,f6241,f6243,f6115,f6502,f6522,f6526])).
fof(f6530,plain,(
  ( ! [X55] : (s('type.integer.int',X55) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | ($spl0 | $spl10)),
  inference(subsumption_resolution,[],[f6529,f330])).
fof(f6529,plain,(
  ( ! [X55] : (~p(s(bool,'T_0')) | s('type.integer.int',X55) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | ($spl0 | $spl10)),
  inference(forward_demodulation,[],[f6528,f6115])).
fof(f6528,plain,(
  ( ! [X56,X55] : (~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',sK12),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X55))))),s('type.integer.int',X56)))) | s('type.integer.int',X55) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | ($spl0 | $spl10)),
  inference(subsumption_resolution,[],[f6286,f330])).
fof(f6286,plain,(
  ( ! [X56,X55] : (~p(s(bool,'T_0')) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',sK12),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X55))))),s('type.integer.int',X56)))) | s('type.integer.int',X55) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | ($spl0 | $spl10)),
  inference(backward_demodulation,[],[f6115,f5126])).
fof(f5126,plain,(
  ( ! [X56,X55] : (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X56),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',sK12),s('type.integer.int',X55)))))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',sK12),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X55))))),s('type.integer.int',X56)))) | s('type.integer.int',X55) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl0),
  inference(superposition,[],[f464,f2743])).
fof(f6527,plain,(
  $false | $spl10),
  inference(global_subsumption,[],[f329,f328,f330,f602,f337,f341,f346,f357,f356,f361,f360,f365,f364,f406,f405,f412,f410,f415,f414,f413,f416,f417,f418,f419,f423,f420,f429,f428,f427,f431,f430,f440,f439,f603,f458,f455,f454,f453,f464,f463,f470,f469,f471,f473,f472,f498,f497,f496,f495,f494,f493,f492,f502,f501,f500,f499,f506,f505,f504,f503,f510,f509,f508,f507,f514,f513,f512,f511,f588,f518,f517,f516,f515,f525,f524,f523,f522,f531,f528,f527,f526,f538,f537,f536,f587,f534,f533,f532,f542,f541,f540,f539,f546,f545,f544,f543,f555,f554,f553,f586,f551,f550,f549,f559,f558,f557,f556,f563,f562,f561,f560,f585,f616,f617,f620,f621,f622,f623,f624,f625,f626,f627,f628,f629,f630,f631,f632,f633,f634,f635,f636,f637,f433,f432,f426,f425,f424,f367,f366,f345,f344,f343,f339,f338,f657,f664,f665,f668,f673,f676,f681,f682,f684,f691,f695,f696,f699,f705,f706,f710,f713,f716,f746,f792,f801,f800,f811,f809,f827,f833,f843,f846,f851,f855,f863,f869,f892,f899,f905,f928,f935,f941,f961,f1101,f1100,f1099,f1098,f1097,f1096,f1095,f1092,f1091,f1087,f1084,f1083,f1080,f1079,f1075,f1063,f1062,f1061,f1057,f1056,f1052,f1051,f1050,f1047,f1043,f1041,f1039,f1038,f1035,f1034,f1033,f1032,f1031,f1027,f1026,f1021,f1020,f1017,f1016,f1012,f1005,f1004,f1003,f1002,f1001,f1000,f999,f998,f995,f994,f990,f989,f986,f985,f981,f980,f979,f976,f975,f974,f973,f971,f970,f969,f967,f1117,f1132,f1315,f1314,f1313,f1312,f1311,f1310,f1309,f1306,f1305,f1301,f1298,f1297,f1294,f1293,f1289,f1277,f1276,f1275,f1271,f1270,f1266,f1265,f1264,f1261,f1257,f1255,f1253,f1252,f1249,f1248,f1247,f1246,f1245,f1241,f1240,f1235,f1234,f1231,f1230,f1226,f1219,f1218,f1217,f1216,f1215,f1214,f1213,f1212,f1209,f1208,f1204,f1203,f1200,f1199,f1195,f1194,f1193,f1190,f1189,f1188,f1187,f1185,f1184,f1183,f1182,f1181,f1368,f1410,f1430,f1443,f1459,f1467,f1469,f1470,f1477,f1478,f1483,f1487,f1486,f1503,f1527,f1537,f1580,f1586,f1591,f1598,f1608,f1643,f1642,f1641,f1640,f1644,f1645,f1654,f1655,f1656,f1657,f1658,f1659,f1660,f1661,f1662,f1663,f1664,f1665,f1666,f1667,f1668,f1669,f1670,f1671,f1673,f1674,f1684,f1754,f1817,f1846,f1895,f1900,f1880,f1921,f1928,f2023,f2024,f2026,f2027,f2029,f2030,f2032,f2060,f2107,f2106,f2105,f2104,f2116,f2117,f2118,f2119,f2128,f2129,f2130,f2131,f2132,f2133,f2134,f2135,f2136,f2137,f2138,f2139,f2140,f2141,f2142,f2143,f2144,f2145,f2147,f2148,f2149,f2161,f2247,f2248,f2196,f2199,f2252,f2253,f2237,f2276,f2362,f2363,f2388,f2405,f2403,f2423,f2436,f2446,f2447,f2452,f2451,f2449,f2465,f2479,f2480,f2540,f2483,f2484,f2541,f2542,f2487,f2499,f2500,f2501,f2502,f2503,f2504,f2505,f2506,f2507,f2508,f2509,f2510,f2511,f2512,f2513,f2516,f2537,f2538,f2539,f2545,f2573,f2597,f2598,f2667,f2670,f2608,f2612,f2613,f2620,f2621,f2622,f2623,f2624,f2625,f2626,f2627,f2628,f2629,f2630,f2631,f2632,f2633,f2634,f2637,f2660,f2661,f2662,f2740,f2741,f2742,f2746,f2827,f2830,f2754,f2755,f2756,f2757,f2758,f2759,f2760,f2832,f2762,f2763,f2764,f2768,f2769,f2777,f2778,f2779,f2780,f2781,f2782,f2783,f2784,f2833,f2786,f2787,f2788,f2789,f2790,f2791,f2792,f2795,f2820,f2821,f2822,f2963,f2890,f2966,f2969,f2898,f2899,f2900,f2904,f2905,f2913,f2915,f2916,f2917,f2918,f2919,f2920,f2921,f2922,f2923,f2924,f2925,f2926,f2927,f2928,f2929,f2930,f2933,f2960,f2961,f2962,f3005,f3060,f3061,f4802,f4810,f4900,f4870,f4912,f4921,f4922,f5030,f4924,f4925,f4926,f5045,f5057,f5021,f5363,f5366,f5372,f5401,f5409,f5538,f5475,f5574,f5575,f5590,f5600,f5601,f5677,f5678,f5679,f5681,f5682,f5683,f5684,f5685,f5754,f6113,f6117,f6120,f6123,f6126,f6129,f6132,f6135,f6138,f6141,f6144,f6147,f6150,f6153,f6156,f6159,f6162,f6165,f5789,f5790,f5791,f6167,f6168,f6169,f6170,f6171,f6172,f6173,f6174,f6175,f6176,f6177,f6178,f6179,f6180,f6181,f6182,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6193,f6194,f6195,f6196,f6197,f6198,f6199,f6200,f6201,f5852,f5853,f5854,f5856,f5857,f5858,f5859,f5860,f6209,f6211,f6213,f6215,f6217,f6219,f6221,f6223,f6225,f6227,f6229,f6231,f6233,f6235,f6237,f6239,f6241,f6243,f6115,f6502,f6522,f6526])).
fof(f6523,plain,(
  $false | $spl10),
  inference(global_subsumption,[],[f329,f328,f330,f602,f337,f341,f346,f357,f356,f361,f360,f365,f364,f406,f405,f412,f410,f415,f414,f413,f416,f417,f418,f419,f423,f420,f429,f428,f427,f431,f430,f440,f439,f603,f458,f455,f454,f453,f464,f463,f470,f469,f471,f473,f472,f498,f497,f496,f495,f494,f493,f492,f502,f501,f500,f499,f506,f505,f504,f503,f510,f509,f508,f507,f514,f513,f512,f511,f588,f518,f517,f516,f515,f525,f524,f523,f522,f531,f528,f527,f526,f538,f537,f536,f587,f534,f533,f532,f542,f541,f540,f539,f546,f545,f544,f543,f555,f554,f553,f586,f551,f550,f549,f559,f558,f557,f556,f563,f562,f561,f560,f585,f616,f617,f620,f621,f622,f623,f624,f625,f626,f627,f628,f629,f630,f631,f632,f633,f634,f635,f636,f637,f433,f432,f426,f425,f424,f367,f366,f345,f344,f343,f339,f338,f657,f664,f665,f668,f673,f676,f681,f682,f684,f691,f695,f696,f699,f705,f706,f710,f713,f716,f746,f792,f801,f800,f811,f809,f827,f833,f843,f846,f851,f855,f863,f869,f892,f899,f905,f928,f935,f941,f961,f1101,f1100,f1099,f1098,f1097,f1096,f1095,f1092,f1091,f1087,f1084,f1083,f1080,f1079,f1075,f1063,f1062,f1061,f1057,f1056,f1052,f1051,f1050,f1047,f1043,f1041,f1039,f1038,f1035,f1034,f1033,f1032,f1031,f1027,f1026,f1021,f1020,f1017,f1016,f1012,f1005,f1004,f1003,f1002,f1001,f1000,f999,f998,f995,f994,f990,f989,f986,f985,f981,f980,f979,f976,f975,f974,f973,f971,f970,f969,f967,f1117,f1132,f1315,f1314,f1313,f1312,f1311,f1310,f1309,f1306,f1305,f1301,f1298,f1297,f1294,f1293,f1289,f1277,f1276,f1275,f1271,f1270,f1266,f1265,f1264,f1261,f1257,f1255,f1253,f1252,f1249,f1248,f1247,f1246,f1245,f1241,f1240,f1235,f1234,f1231,f1230,f1226,f1219,f1218,f1217,f1216,f1215,f1214,f1213,f1212,f1209,f1208,f1204,f1203,f1200,f1199,f1195,f1194,f1193,f1190,f1189,f1188,f1187,f1185,f1184,f1183,f1182,f1181,f1368,f1410,f1430,f1443,f1459,f1467,f1469,f1470,f1477,f1478,f1483,f1487,f1486,f1503,f1527,f1537,f1580,f1586,f1591,f1598,f1608,f1643,f1642,f1641,f1640,f1644,f1645,f1654,f1655,f1656,f1657,f1658,f1659,f1660,f1661,f1662,f1663,f1664,f1665,f1666,f1667,f1668,f1669,f1670,f1671,f1673,f1674,f1684,f1754,f1817,f1846,f1895,f1900,f1880,f1921,f1928,f2023,f2024,f2026,f2027,f2029,f2030,f2032,f2060,f2107,f2106,f2105,f2104,f2116,f2117,f2118,f2119,f2128,f2129,f2130,f2131,f2132,f2133,f2134,f2135,f2136,f2137,f2138,f2139,f2140,f2141,f2142,f2143,f2144,f2145,f2147,f2148,f2149,f2161,f2247,f2248,f2196,f2199,f2252,f2253,f2237,f2276,f2362,f2363,f2388,f2405,f2403,f2423,f2436,f2446,f2447,f2452,f2451,f2449,f2465,f2479,f2480,f2540,f2483,f2484,f2541,f2542,f2487,f2499,f2500,f2501,f2502,f2503,f2504,f2505,f2506,f2507,f2508,f2509,f2510,f2511,f2512,f2513,f2516,f2537,f2538,f2539,f2545,f2573,f2597,f2598,f2667,f2670,f2608,f2612,f2613,f2620,f2621,f2622,f2623,f2624,f2625,f2626,f2627,f2628,f2629,f2630,f2631,f2632,f2633,f2634,f2637,f2660,f2661,f2662,f2740,f2741,f2742,f2746,f2827,f2830,f2754,f2755,f2756,f2757,f2758,f2759,f2760,f2832,f2762,f2763,f2764,f2768,f2769,f2777,f2778,f2779,f2780,f2781,f2782,f2783,f2784,f2833,f2786,f2787,f2788,f2789,f2790,f2791,f2792,f2795,f2820,f2821,f2822,f2963,f2890,f2966,f2969,f2898,f2899,f2900,f2904,f2905,f2913,f2915,f2916,f2917,f2918,f2919,f2920,f2921,f2922,f2923,f2924,f2925,f2926,f2927,f2928,f2929,f2930,f2933,f2960,f2961,f2962,f3005,f3060,f3061,f4802,f4810,f4900,f4870,f4912,f4921,f4922,f5030,f4924,f4925,f4926,f5045,f5057,f5021,f5363,f5366,f5372,f5401,f5409,f5538,f5475,f5574,f5575,f5590,f5600,f5601,f5677,f5678,f5679,f5681,f5682,f5683,f5684,f5685,f5754,f6113,f6117,f6120,f6123,f6126,f6129,f6132,f6135,f6138,f6141,f6144,f6147,f6150,f6153,f6156,f6159,f6162,f6165,f5789,f5790,f5791,f6167,f6168,f6169,f6170,f6171,f6172,f6173,f6174,f6175,f6176,f6177,f6178,f6179,f6180,f6181,f6182,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6193,f6194,f6195,f6196,f6197,f6198,f6199,f6200,f6201,f5852,f5853,f5854,f5856,f5857,f5858,f5859,f5860,f6209,f6211,f6213,f6215,f6217,f6219,f6221,f6223,f6225,f6227,f6229,f6231,f6233,f6235,f6237,f6239,f6241,f6243,f6115,f6502,f6522])).
fof(f6515,plain,(
  $false | $spl10),
  inference(subsumption_resolution,[],[f6514,f330])).
fof(f6514,plain,(
  ~p(s(bool,'T_0')) | $spl10),
  inference(forward_demodulation,[],[f6513,f6115])).
fof(f6513,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X1),s('type.integer.int',X0))))) ) | $spl10),
  inference(subsumption_resolution,[],[f6271,f330])).
fof(f6271,plain,(
  ( ! [X0,X1] : (~p(s(bool,'T_0')) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X1),s('type.integer.int',X0))))) ) | $spl10),
  inference(backward_demodulation,[],[f6115,f464])).
fof(f6504,plain,(
  $false | $spl10),
  inference(subsumption_resolution,[],[f6246,f330])).
fof(f6246,plain,(
  ~p(s(bool,'T_0')) | $spl10),
  inference(backward_demodulation,[],[f6115,f602])).
fof(f6503,plain,(
  $false | $spl10),
  inference(global_subsumption,[],[f329,f328,f330,f602,f337,f341,f346,f357,f356,f361,f360,f365,f364,f406,f405,f412,f410,f415,f414,f413,f416,f417,f418,f419,f423,f420,f429,f428,f427,f431,f430,f440,f439,f603,f458,f455,f454,f453,f464,f463,f470,f469,f471,f473,f472,f498,f497,f496,f495,f494,f493,f492,f502,f501,f500,f499,f506,f505,f504,f503,f510,f509,f508,f507,f514,f513,f512,f511,f588,f518,f517,f516,f515,f525,f524,f523,f522,f531,f528,f527,f526,f538,f537,f536,f587,f534,f533,f532,f542,f541,f540,f539,f546,f545,f544,f543,f555,f554,f553,f586,f551,f550,f549,f559,f558,f557,f556,f563,f562,f561,f560,f585,f616,f617,f620,f621,f622,f623,f624,f625,f626,f627,f628,f629,f630,f631,f632,f633,f634,f635,f636,f637,f433,f432,f426,f425,f424,f367,f366,f345,f344,f343,f339,f338,f657,f664,f665,f668,f673,f676,f681,f682,f684,f691,f695,f696,f699,f705,f706,f710,f713,f716,f746,f792,f801,f800,f811,f809,f827,f833,f843,f846,f851,f855,f863,f869,f892,f899,f905,f928,f935,f941,f961,f1101,f1100,f1099,f1098,f1097,f1096,f1095,f1092,f1091,f1087,f1084,f1083,f1080,f1079,f1075,f1063,f1062,f1061,f1057,f1056,f1052,f1051,f1050,f1047,f1043,f1041,f1039,f1038,f1035,f1034,f1033,f1032,f1031,f1027,f1026,f1021,f1020,f1017,f1016,f1012,f1005,f1004,f1003,f1002,f1001,f1000,f999,f998,f995,f994,f990,f989,f986,f985,f981,f980,f979,f976,f975,f974,f973,f971,f970,f969,f967,f1117,f1132,f1315,f1314,f1313,f1312,f1311,f1310,f1309,f1306,f1305,f1301,f1298,f1297,f1294,f1293,f1289,f1277,f1276,f1275,f1271,f1270,f1266,f1265,f1264,f1261,f1257,f1255,f1253,f1252,f1249,f1248,f1247,f1246,f1245,f1241,f1240,f1235,f1234,f1231,f1230,f1226,f1219,f1218,f1217,f1216,f1215,f1214,f1213,f1212,f1209,f1208,f1204,f1203,f1200,f1199,f1195,f1194,f1193,f1190,f1189,f1188,f1187,f1185,f1184,f1183,f1182,f1181,f1368,f1410,f1430,f1443,f1459,f1467,f1469,f1470,f1477,f1478,f1483,f1487,f1486,f1503,f1527,f1537,f1580,f1586,f1591,f1598,f1608,f1643,f1642,f1641,f1640,f1644,f1645,f1654,f1655,f1656,f1657,f1658,f1659,f1660,f1661,f1662,f1663,f1664,f1665,f1666,f1667,f1668,f1669,f1670,f1671,f1673,f1674,f1684,f1754,f1817,f1846,f1895,f1900,f1880,f1921,f1928,f2023,f2024,f2026,f2027,f2029,f2030,f2032,f2060,f2107,f2106,f2105,f2104,f2116,f2117,f2118,f2119,f2128,f2129,f2130,f2131,f2132,f2133,f2134,f2135,f2136,f2137,f2138,f2139,f2140,f2141,f2142,f2143,f2144,f2145,f2147,f2148,f2149,f2161,f2247,f2248,f2196,f2199,f2252,f2253,f2237,f2276,f2362,f2363,f2388,f2405,f2403,f2423,f2436,f2446,f2447,f2452,f2451,f2449,f2465,f2479,f2480,f2540,f2483,f2484,f2541,f2542,f2487,f2499,f2500,f2501,f2502,f2503,f2504,f2505,f2506,f2507,f2508,f2509,f2510,f2511,f2512,f2513,f2516,f2537,f2538,f2539,f2545,f2573,f2597,f2598,f2667,f2670,f2608,f2612,f2613,f2620,f2621,f2622,f2623,f2624,f2625,f2626,f2627,f2628,f2629,f2630,f2631,f2632,f2633,f2634,f2637,f2660,f2661,f2662,f2740,f2741,f2742,f2746,f2827,f2830,f2754,f2755,f2756,f2757,f2758,f2759,f2760,f2832,f2762,f2763,f2764,f2768,f2769,f2777,f2778,f2779,f2780,f2781,f2782,f2783,f2784,f2833,f2786,f2787,f2788,f2789,f2790,f2791,f2792,f2795,f2820,f2821,f2822,f2963,f2890,f2966,f2969,f2898,f2899,f2900,f2904,f2905,f2913,f2915,f2916,f2917,f2918,f2919,f2920,f2921,f2922,f2923,f2924,f2925,f2926,f2927,f2928,f2929,f2930,f2933,f2960,f2961,f2962,f3005,f3060,f3061,f4802,f4810,f4900,f4870,f4912,f4921,f4922,f5030,f4924,f4925,f4926,f5045,f5057,f5021,f5363,f5366,f5372,f5401,f5409,f5538,f5475,f5574,f5575,f5590,f5600,f5601,f5677,f5678,f5679,f5681,f5682,f5683,f5684,f5685,f5754,f6113,f6117,f6120,f6123,f6126,f6129,f6132,f6135,f6138,f6141,f6144,f6147,f6150,f6153,f6156,f6159,f6162,f6165,f5789,f5790,f5791,f6167,f6168,f6169,f6170,f6171,f6172,f6173,f6174,f6175,f6176,f6177,f6178,f6179,f6180,f6181,f6182,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6193,f6194,f6195,f6196,f6197,f6198,f6199,f6200,f6201,f5852,f5853,f5854,f5856,f5857,f5858,f5859,f5860,f6209,f6211,f6213,f6215,f6217,f6219,f6221,f6223,f6225,f6227,f6229,f6231,f6233,f6235,f6237,f6239,f6241,f6243,f6115,f6502])).
fof(f6166,plain,(
  ( ! [X2,X1] : (sP9('T_0',X1,X2) | ~sP8('T_0',X1,X2)) ) | $spl44),
  inference(cnf_transformation,[],[f6166_D])).
fof(f6166_D,plain,(
  ( ! [X2,X1] : (sP9('T_0',X1,X2) | ~sP8('T_0',X1,X2)) ) <=> ~$spl44),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl44])])).
fof(f6115,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,X0)) ) | $spl10),
  inference(cnf_transformation,[],[f6115_D])).
fof(f6115_D,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,X0)) ) <=> ~$spl10),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl10])])).
fof(f6243,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | ~sP8('T_0',X1,X2) | sP9('T_0',X1,X2)) )),
  inference(condensation,[],[f6242])).
fof(f6242,plain,(
  ( ! [X101,X99,X100,X98] : (~sP8('T_0',X99,X100) | sP9('T_0',X99,X100) | s(bool,X98) = s(bool,X101) | s(bool,'T_0') = s(bool,X101)) )),
  inference(subsumption_resolution,[],[f5890,f792])).
fof(f5890,plain,(
  ( ! [X101,X99,X100,X98] : (~p(s(bool,X98)) | ~sP8('T_0',X99,X100) | sP9('T_0',X99,X100) | s(bool,X98) = s(bool,X101) | s(bool,'T_0') = s(bool,X101)) )),
  inference(superposition,[],[f587,f746])).
fof(f6163,plain,(
  ( ! [X2,X1] : (sP11('T_0',X1,X2) | ~sP10('T_0',X1,X2)) ) | $spl42),
  inference(cnf_transformation,[],[f6163_D])).
fof(f6163_D,plain,(
  ( ! [X2,X1] : (sP11('T_0',X1,X2) | ~sP10('T_0',X1,X2)) ) <=> ~$spl42),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl42])])).
fof(f6241,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | ~sP10('T_0',X1,X2) | sP11('T_0',X1,X2)) )),
  inference(condensation,[],[f6240])).
fof(f6240,plain,(
  ( ! [X94,X97,X95,X96] : (~sP10('T_0',X95,X96) | sP11('T_0',X95,X96) | s(bool,X94) = s(bool,X97) | s(bool,'T_0') = s(bool,X97)) )),
  inference(subsumption_resolution,[],[f5889,f792])).
fof(f5889,plain,(
  ( ! [X94,X97,X95,X96] : (~p(s(bool,X94)) | ~sP10('T_0',X95,X96) | sP11('T_0',X95,X96) | s(bool,X94) = s(bool,X97) | s(bool,'T_0') = s(bool,X97)) )),
  inference(superposition,[],[f586,f746])).
fof(f6160,plain,(
  ( ! [X2,X1] : (~p(s(bool,X1)) | p(s(bool,X2)) | ~sP11('T_0',X2,X1)) ) | $spl40),
  inference(cnf_transformation,[],[f6160_D])).
fof(f6160_D,plain,(
  ( ! [X2,X1] : (~p(s(bool,X1)) | p(s(bool,X2)) | ~sP11('T_0',X2,X1)) ) <=> ~$spl40),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl40])])).
fof(f6239,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X1)) | p(s(bool,X2)) | ~sP11('T_0',X2,X1)) )),
  inference(condensation,[],[f6238])).
fof(f6238,plain,(
  ( ! [X90,X88,X87,X89] : (~p(s(bool,X88)) | p(s(bool,X89)) | ~sP11('T_0',X89,X88) | s(bool,X87) = s(bool,X90) | s(bool,'T_0') = s(bool,X90)) )),
  inference(subsumption_resolution,[],[f5887,f792])).
fof(f5887,plain,(
  ( ! [X90,X88,X87,X89] : (~p(s(bool,X87)) | ~p(s(bool,X88)) | p(s(bool,X89)) | ~sP11('T_0',X89,X88) | s(bool,X87) = s(bool,X90) | s(bool,'T_0') = s(bool,X90)) )),
  inference(superposition,[],[f563,f746])).
fof(f6157,plain,(
  ( ! [X2,X1] : (sP11('T_0',X1,X2) | ~p(s(bool,X1))) ) | $spl38),
  inference(cnf_transformation,[],[f6157_D])).
fof(f6157_D,plain,(
  ( ! [X2,X1] : (sP11('T_0',X1,X2) | ~p(s(bool,X1))) ) <=> ~$spl38),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl38])])).
fof(f6237,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X1)) | sP11('T_0',X1,X2)) )),
  inference(condensation,[],[f6236])).
fof(f6236,plain,(
  ( ! [X85,X83,X86,X84] : (~p(s(bool,X84)) | sP11('T_0',X84,X85) | s(bool,X83) = s(bool,X86) | s(bool,'T_0') = s(bool,X86)) )),
  inference(subsumption_resolution,[],[f5886,f792])).
fof(f5886,plain,(
  ( ! [X85,X83,X86,X84] : (~p(s(bool,X83)) | ~p(s(bool,X84)) | sP11('T_0',X84,X85) | s(bool,X83) = s(bool,X86) | s(bool,'T_0') = s(bool,X86)) )),
  inference(superposition,[],[f562,f746])).
fof(f6154,plain,(
  ( ! [X2,X1] : (sP11('T_0',X2,X1) | p(s(bool,X1))) ) | $spl36),
  inference(cnf_transformation,[],[f6154_D])).
fof(f6154_D,plain,(
  ( ! [X2,X1] : (sP11('T_0',X2,X1) | p(s(bool,X1))) ) <=> ~$spl36),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl36])])).
fof(f6235,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,X1)) | sP11('T_0',X2,X1)) )),
  inference(condensation,[],[f6234])).
fof(f6234,plain,(
  ( ! [X80,X81,X79,X82] : (p(s(bool,X80)) | sP11('T_0',X81,X80) | s(bool,X79) = s(bool,X82) | s(bool,'T_0') = s(bool,X82)) )),
  inference(subsumption_resolution,[],[f5885,f792])).
fof(f5885,plain,(
  ( ! [X80,X81,X79,X82] : (~p(s(bool,X79)) | p(s(bool,X80)) | sP11('T_0',X81,X80) | s(bool,X79) = s(bool,X82) | s(bool,'T_0') = s(bool,X82)) )),
  inference(superposition,[],[f561,f746])).
fof(f6151,plain,(
  ( ! [X2,X1] : (p(s(bool,X1)) | p(s(bool,X2)) | sP11(X2,X1,'T_0')) ) | $spl34),
  inference(cnf_transformation,[],[f6151_D])).
fof(f6151_D,plain,(
  ( ! [X2,X1] : (p(s(bool,X1)) | p(s(bool,X2)) | sP11(X2,X1,'T_0')) ) <=> ~$spl34),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl34])])).
fof(f6233,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,X1)) | sP11(X2,X1,'T_0') | p(s(bool,X2))) )),
  inference(condensation,[],[f6232])).
fof(f6232,plain,(
  ( ! [X78,X76,X77,X75] : (p(s(bool,X76)) | sP11(X77,X76,'T_0') | p(s(bool,X77)) | s(bool,X75) = s(bool,X78) | s(bool,'T_0') = s(bool,X78)) )),
  inference(subsumption_resolution,[],[f5884,f792])).
fof(f5884,plain,(
  ( ! [X78,X76,X77,X75] : (~p(s(bool,X75)) | p(s(bool,X76)) | sP11(X77,X76,'T_0') | p(s(bool,X77)) | s(bool,X75) = s(bool,X78) | s(bool,'T_0') = s(bool,X78)) )),
  inference(superposition,[],[f560,f746])).
fof(f6148,plain,(
  ( ! [X2,X1] : (p(s(bool,X1)) | ~p(s(bool,X2)) | ~sP10(X2,X1,'T_0')) ) | $spl32),
  inference(cnf_transformation,[],[f6148_D])).
fof(f6148_D,plain,(
  ( ! [X2,X1] : (p(s(bool,X1)) | ~p(s(bool,X2)) | ~sP10(X2,X1,'T_0')) ) <=> ~$spl32),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl32])])).
fof(f6231,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,X1)) | ~p(s(bool,X2)) | ~sP10(X2,X1,'T_0')) )),
  inference(condensation,[],[f6230])).
fof(f6230,plain,(
  ( ! [X74,X72,X71,X73] : (p(s(bool,X72)) | ~p(s(bool,X73)) | ~sP10(X73,X72,'T_0') | s(bool,X71) = s(bool,X74) | s(bool,'T_0') = s(bool,X74)) )),
  inference(subsumption_resolution,[],[f5883,f792])).
fof(f5883,plain,(
  ( ! [X74,X72,X71,X73] : (~p(s(bool,X71)) | p(s(bool,X72)) | ~p(s(bool,X73)) | ~sP10(X73,X72,'T_0') | s(bool,X71) = s(bool,X74) | s(bool,'T_0') = s(bool,X74)) )),
  inference(superposition,[],[f556,f746])).
fof(f6145,plain,(
  ( ! [X2,X1] : (p(s(bool,X1)) | p(s(bool,X2)) | ~sP9('T_0',X2,X1)) ) | $spl30),
  inference(cnf_transformation,[],[f6145_D])).
fof(f6145_D,plain,(
  ( ! [X2,X1] : (p(s(bool,X1)) | p(s(bool,X2)) | ~sP9('T_0',X2,X1)) ) <=> ~$spl30),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl30])])).
fof(f6229,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,X1)) | p(s(bool,X2)) | ~sP9('T_0',X2,X1)) )),
  inference(condensation,[],[f6228])).
fof(f6228,plain,(
  ( ! [X70,X68,X69,X67] : (p(s(bool,X68)) | p(s(bool,X69)) | ~sP9('T_0',X69,X68) | s(bool,X67) = s(bool,X70) | s(bool,'T_0') = s(bool,X70)) )),
  inference(subsumption_resolution,[],[f5882,f792])).
fof(f5882,plain,(
  ( ! [X70,X68,X69,X67] : (~p(s(bool,X67)) | p(s(bool,X68)) | p(s(bool,X69)) | ~sP9('T_0',X69,X68) | s(bool,X67) = s(bool,X70) | s(bool,'T_0') = s(bool,X70)) )),
  inference(superposition,[],[f546,f746])).
fof(f6142,plain,(
  ( ! [X2,X1] : (sP9('T_0',X1,X2) | ~p(s(bool,X1))) ) | $spl28),
  inference(cnf_transformation,[],[f6142_D])).
fof(f6142_D,plain,(
  ( ! [X2,X1] : (sP9('T_0',X1,X2) | ~p(s(bool,X1))) ) <=> ~$spl28),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl28])])).
fof(f6227,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X1)) | sP9('T_0',X1,X2)) )),
  inference(condensation,[],[f6226])).
fof(f6226,plain,(
  ( ! [X66,X64,X65,X63] : (~p(s(bool,X64)) | sP9('T_0',X64,X65) | s(bool,X63) = s(bool,X66) | s(bool,'T_0') = s(bool,X66)) )),
  inference(subsumption_resolution,[],[f5881,f792])).
fof(f5881,plain,(
  ( ! [X66,X64,X65,X63] : (~p(s(bool,X63)) | ~p(s(bool,X64)) | sP9('T_0',X64,X65) | s(bool,X63) = s(bool,X66) | s(bool,'T_0') = s(bool,X66)) )),
  inference(superposition,[],[f545,f746])).
fof(f6139,plain,(
  ( ! [X2,X1] : (sP9('T_0',X2,X1) | ~p(s(bool,X1))) ) | $spl26),
  inference(cnf_transformation,[],[f6139_D])).
fof(f6139_D,plain,(
  ( ! [X2,X1] : (sP9('T_0',X2,X1) | ~p(s(bool,X1))) ) <=> ~$spl26),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl26])])).
fof(f6225,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X1)) | sP9('T_0',X2,X1)) )),
  inference(condensation,[],[f6224])).
fof(f6224,plain,(
  ( ! [X61,X59,X62,X60] : (~p(s(bool,X60)) | sP9('T_0',X61,X60) | s(bool,X59) = s(bool,X62) | s(bool,'T_0') = s(bool,X62)) )),
  inference(subsumption_resolution,[],[f5880,f792])).
fof(f5880,plain,(
  ( ! [X61,X59,X62,X60] : (~p(s(bool,X59)) | ~p(s(bool,X60)) | sP9('T_0',X61,X60) | s(bool,X59) = s(bool,X62) | s(bool,'T_0') = s(bool,X62)) )),
  inference(superposition,[],[f544,f746])).
fof(f6136,plain,(
  ( ! [X2,X1] : (p(s(bool,X1)) | ~sP8('T_0',X1,X2) | p(s(bool,X2))) ) | $spl24),
  inference(cnf_transformation,[],[f6136_D])).
fof(f6136_D,plain,(
  ( ! [X2,X1] : (p(s(bool,X1)) | ~sP8('T_0',X1,X2) | p(s(bool,X2))) ) <=> ~$spl24),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl24])])).
fof(f6223,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,X1)) | p(s(bool,X2)) | ~sP8('T_0',X1,X2)) )),
  inference(condensation,[],[f6222])).
fof(f6222,plain,(
  ( ! [X57,X58,X56,X55] : (p(s(bool,X56)) | p(s(bool,X57)) | ~sP8('T_0',X56,X57) | s(bool,X55) = s(bool,X58) | s(bool,'T_0') = s(bool,X58)) )),
  inference(subsumption_resolution,[],[f5879,f792])).
fof(f5879,plain,(
  ( ! [X57,X58,X56,X55] : (~p(s(bool,X55)) | p(s(bool,X56)) | p(s(bool,X57)) | ~sP8('T_0',X56,X57) | s(bool,X55) = s(bool,X58) | s(bool,'T_0') = s(bool,X58)) )),
  inference(superposition,[],[f539,f746])).
fof(f6133,plain,(
  ( ! [X2,X1] : (~p(s(bool,X1)) | p(s(bool,X2)) | ~sP7(X2,X1,'T_0')) ) | $spl22),
  inference(cnf_transformation,[],[f6133_D])).
fof(f6133_D,plain,(
  ( ! [X2,X1] : (~p(s(bool,X1)) | p(s(bool,X2)) | ~sP7(X2,X1,'T_0')) ) <=> ~$spl22),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl22])])).
fof(f6221,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X1)) | p(s(bool,X2)) | ~sP7(X2,X1,'T_0')) )),
  inference(condensation,[],[f6220])).
fof(f6220,plain,(
  ( ! [X54,X52,X53,X51] : (~p(s(bool,X52)) | p(s(bool,X53)) | ~sP7(X53,X52,'T_0') | s(bool,X51) = s(bool,X54) | s(bool,'T_0') = s(bool,X54)) )),
  inference(subsumption_resolution,[],[f5878,f792])).
fof(f5878,plain,(
  ( ! [X54,X52,X53,X51] : (~p(s(bool,X51)) | ~p(s(bool,X52)) | p(s(bool,X53)) | ~sP7(X53,X52,'T_0') | s(bool,X51) = s(bool,X54) | s(bool,'T_0') = s(bool,X54)) )),
  inference(superposition,[],[f531,f746])).
fof(f6130,plain,(
  ( ! [X2,X1] : (~p(s(bool,X1)) | sP7('T_0',X1,X2) | ~p(s(bool,X2))) ) | $spl20),
  inference(cnf_transformation,[],[f6130_D])).
fof(f6130_D,plain,(
  ( ! [X2,X1] : (~p(s(bool,X1)) | sP7('T_0',X1,X2) | ~p(s(bool,X2))) ) <=> ~$spl20),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl20])])).
fof(f6219,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X1)) | ~p(s(bool,X2)) | sP7('T_0',X1,X2)) )),
  inference(condensation,[],[f6218])).
fof(f6218,plain,(
  ( ! [X47,X50,X48,X49] : (~p(s(bool,X48)) | ~p(s(bool,X49)) | sP7('T_0',X48,X49) | s(bool,X47) = s(bool,X50) | s(bool,'T_0') = s(bool,X50)) )),
  inference(subsumption_resolution,[],[f5877,f792])).
fof(f5877,plain,(
  ( ! [X47,X50,X48,X49] : (~p(s(bool,X47)) | ~p(s(bool,X48)) | ~p(s(bool,X49)) | sP7('T_0',X48,X49) | s(bool,X47) = s(bool,X50) | s(bool,'T_0') = s(bool,X50)) )),
  inference(superposition,[],[f528,f746])).
fof(f6127,plain,(
  ( ! [X2,X1] : (~p(s(bool,X1)) | ~sP6(X1,'T_0',X2) | p(s(bool,X2))) ) | $spl18),
  inference(cnf_transformation,[],[f6127_D])).
fof(f6127_D,plain,(
  ( ! [X2,X1] : (~p(s(bool,X1)) | ~sP6(X1,'T_0',X2) | p(s(bool,X2))) ) <=> ~$spl18),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl18])])).
fof(f6217,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X1)) | p(s(bool,X2)) | ~sP6(X1,'T_0',X2)) )),
  inference(condensation,[],[f6216])).
fof(f6216,plain,(
  ( ! [X45,X43,X46,X44] : (~p(s(bool,X44)) | p(s(bool,X45)) | ~sP6(X44,'T_0',X45) | s(bool,X43) = s(bool,X46) | s(bool,'T_0') = s(bool,X46)) )),
  inference(subsumption_resolution,[],[f5876,f792])).
fof(f5876,plain,(
  ( ! [X45,X43,X46,X44] : (~p(s(bool,X43)) | ~p(s(bool,X44)) | p(s(bool,X45)) | ~sP6(X44,'T_0',X45) | s(bool,X43) = s(bool,X46) | s(bool,'T_0') = s(bool,X46)) )),
  inference(superposition,[],[f522,f746])).
fof(f6124,plain,(
  ( ! [X2,X1] : (~p(s(bool,X1)) | ~sP3(X1,'T_0',X2) | p(s(bool,X2))) ) | $spl16),
  inference(cnf_transformation,[],[f6124_D])).
fof(f6124_D,plain,(
  ( ! [X2,X1] : (~p(s(bool,X1)) | ~sP3(X1,'T_0',X2) | p(s(bool,X2))) ) <=> ~$spl16),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl16])])).
fof(f6215,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X1)) | p(s(bool,X2)) | ~sP3(X1,'T_0',X2)) )),
  inference(condensation,[],[f6214])).
fof(f6214,plain,(
  ( ! [X39,X41,X42,X40] : (~p(s(bool,X40)) | p(s(bool,X41)) | ~sP3(X40,'T_0',X41) | s(bool,X39) = s(bool,X42) | s(bool,'T_0') = s(bool,X42)) )),
  inference(subsumption_resolution,[],[f5875,f792])).
fof(f5875,plain,(
  ( ! [X39,X41,X42,X40] : (~p(s(bool,X39)) | ~p(s(bool,X40)) | p(s(bool,X41)) | ~sP3(X40,'T_0',X41) | s(bool,X39) = s(bool,X42) | s(bool,'T_0') = s(bool,X42)) )),
  inference(superposition,[],[f503,f746])).
fof(f6121,plain,(
  ( ! [X2,X1] : (~p(s(bool,X1)) | ~sP4(X1,'T_0',X2) | p(s(bool,X2))) ) | $spl14),
  inference(cnf_transformation,[],[f6121_D])).
fof(f6121_D,plain,(
  ( ! [X2,X1] : (~p(s(bool,X1)) | ~sP4(X1,'T_0',X2) | p(s(bool,X2))) ) <=> ~$spl14),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl14])])).
fof(f6213,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X1)) | p(s(bool,X2)) | ~sP4(X1,'T_0',X2)) )),
  inference(condensation,[],[f6212])).
fof(f6212,plain,(
  ( ! [X37,X35,X38,X36] : (~p(s(bool,X36)) | p(s(bool,X37)) | ~sP4(X36,'T_0',X37) | s(bool,X35) = s(bool,X38) | s(bool,'T_0') = s(bool,X38)) )),
  inference(subsumption_resolution,[],[f5874,f792])).
fof(f5874,plain,(
  ( ! [X37,X35,X38,X36] : (~p(s(bool,X35)) | ~p(s(bool,X36)) | p(s(bool,X37)) | ~sP4(X36,'T_0',X37) | s(bool,X35) = s(bool,X38) | s(bool,'T_0') = s(bool,X38)) )),
  inference(superposition,[],[f499,f746])).
fof(f6118,plain,(
  ( ! [X1] : (p(s(bool,X1)) | sP1(X1,'T_0')) ) | $spl12),
  inference(cnf_transformation,[],[f6118_D])).
fof(f6118_D,plain,(
  ( ! [X1] : (p(s(bool,X1)) | sP1(X1,'T_0')) ) <=> ~$spl12),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl12])])).
fof(f6211,plain,(
  ( ! [X0,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,X1)) | sP1(X1,'T_0')) )),
  inference(condensation,[],[f6210])).
fof(f6210,plain,(
  ( ! [X33,X34,X32] : (p(s(bool,X33)) | sP1(X33,'T_0') | s(bool,X32) = s(bool,X34) | s(bool,'T_0') = s(bool,X34)) )),
  inference(subsumption_resolution,[],[f5873,f792])).
fof(f5873,plain,(
  ( ! [X33,X34,X32] : (~p(s(bool,X32)) | p(s(bool,X33)) | sP1(X33,'T_0') | s(bool,X32) = s(bool,X34) | s(bool,'T_0') = s(bool,X34)) )),
  inference(superposition,[],[f458,f746])).
fof(f6114,plain,(
  ( ! [X1] : (p(s(bool,X1)) | sP1('T_0',X1)) ) | $spl8),
  inference(cnf_transformation,[],[f6114_D])).
fof(f6114_D,plain,(
  ( ! [X1] : (p(s(bool,X1)) | sP1('T_0',X1)) ) <=> ~$spl8),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl8])])).
fof(f6209,plain,(
  ( ! [X0,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,X1)) | sP1('T_0',X1)) )),
  inference(condensation,[],[f6208])).
fof(f6208,plain,(
  ( ! [X30,X31,X29] : (p(s(bool,X30)) | sP1('T_0',X30) | s(bool,X29) = s(bool,X31) | s(bool,'T_0') = s(bool,X31)) )),
  inference(subsumption_resolution,[],[f5872,f792])).
fof(f5872,plain,(
  ( ! [X30,X31,X29] : (~p(s(bool,X29)) | p(s(bool,X30)) | sP1('T_0',X30) | s(bool,X29) = s(bool,X31) | s(bool,'T_0') = s(bool,X31)) )),
  inference(superposition,[],[f455,f746])).
fof(f6165,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | ~sP8('T_0',X1,X2) | sP9('T_0',X1,X2)) )),
  inference(condensation,[],[f6164])).
fof(f6164,plain,(
  ( ! [X101,X99,X100,X98] : (~sP8('T_0',X99,X100) | sP9('T_0',X99,X100) | s(bool,X98) = s(bool,X101) | s(bool,'T_0') = s(bool,X101)) )),
  inference(subsumption_resolution,[],[f5783,f792])).
fof(f5783,plain,(
  ( ! [X101,X99,X100,X98] : (~p(s(bool,X98)) | ~sP8('T_0',X99,X100) | sP9('T_0',X99,X100) | s(bool,X98) = s(bool,X101) | s(bool,'T_0') = s(bool,X101)) )),
  inference(superposition,[],[f587,f746])).
fof(f6162,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | ~sP10('T_0',X1,X2) | sP11('T_0',X1,X2)) )),
  inference(condensation,[],[f6161])).
fof(f6161,plain,(
  ( ! [X94,X97,X95,X96] : (~sP10('T_0',X95,X96) | sP11('T_0',X95,X96) | s(bool,X94) = s(bool,X97) | s(bool,'T_0') = s(bool,X97)) )),
  inference(subsumption_resolution,[],[f5782,f792])).
fof(f5782,plain,(
  ( ! [X94,X97,X95,X96] : (~p(s(bool,X94)) | ~sP10('T_0',X95,X96) | sP11('T_0',X95,X96) | s(bool,X94) = s(bool,X97) | s(bool,'T_0') = s(bool,X97)) )),
  inference(superposition,[],[f586,f746])).
fof(f6159,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X1)) | p(s(bool,X2)) | ~sP11('T_0',X2,X1)) )),
  inference(condensation,[],[f6158])).
fof(f6158,plain,(
  ( ! [X90,X88,X87,X89] : (~p(s(bool,X88)) | p(s(bool,X89)) | ~sP11('T_0',X89,X88) | s(bool,X87) = s(bool,X90) | s(bool,'T_0') = s(bool,X90)) )),
  inference(subsumption_resolution,[],[f5780,f792])).
fof(f5780,plain,(
  ( ! [X90,X88,X87,X89] : (~p(s(bool,X87)) | ~p(s(bool,X88)) | p(s(bool,X89)) | ~sP11('T_0',X89,X88) | s(bool,X87) = s(bool,X90) | s(bool,'T_0') = s(bool,X90)) )),
  inference(superposition,[],[f563,f746])).
fof(f6156,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X1)) | sP11('T_0',X1,X2)) )),
  inference(condensation,[],[f6155])).
fof(f6155,plain,(
  ( ! [X85,X83,X86,X84] : (~p(s(bool,X84)) | sP11('T_0',X84,X85) | s(bool,X83) = s(bool,X86) | s(bool,'T_0') = s(bool,X86)) )),
  inference(subsumption_resolution,[],[f5779,f792])).
fof(f5779,plain,(
  ( ! [X85,X83,X86,X84] : (~p(s(bool,X83)) | ~p(s(bool,X84)) | sP11('T_0',X84,X85) | s(bool,X83) = s(bool,X86) | s(bool,'T_0') = s(bool,X86)) )),
  inference(superposition,[],[f562,f746])).
fof(f6153,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,X1)) | sP11('T_0',X2,X1)) )),
  inference(condensation,[],[f6152])).
fof(f6152,plain,(
  ( ! [X80,X81,X79,X82] : (p(s(bool,X80)) | sP11('T_0',X81,X80) | s(bool,X79) = s(bool,X82) | s(bool,'T_0') = s(bool,X82)) )),
  inference(subsumption_resolution,[],[f5778,f792])).
fof(f5778,plain,(
  ( ! [X80,X81,X79,X82] : (~p(s(bool,X79)) | p(s(bool,X80)) | sP11('T_0',X81,X80) | s(bool,X79) = s(bool,X82) | s(bool,'T_0') = s(bool,X82)) )),
  inference(superposition,[],[f561,f746])).
fof(f6150,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,X1)) | sP11(X2,X1,'T_0') | p(s(bool,X2))) )),
  inference(condensation,[],[f6149])).
fof(f6149,plain,(
  ( ! [X78,X76,X77,X75] : (p(s(bool,X76)) | sP11(X77,X76,'T_0') | p(s(bool,X77)) | s(bool,X75) = s(bool,X78) | s(bool,'T_0') = s(bool,X78)) )),
  inference(subsumption_resolution,[],[f5777,f792])).
fof(f5777,plain,(
  ( ! [X78,X76,X77,X75] : (~p(s(bool,X75)) | p(s(bool,X76)) | sP11(X77,X76,'T_0') | p(s(bool,X77)) | s(bool,X75) = s(bool,X78) | s(bool,'T_0') = s(bool,X78)) )),
  inference(superposition,[],[f560,f746])).
fof(f6147,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,X1)) | ~p(s(bool,X2)) | ~sP10(X2,X1,'T_0')) )),
  inference(condensation,[],[f6146])).
fof(f6146,plain,(
  ( ! [X74,X72,X71,X73] : (p(s(bool,X72)) | ~p(s(bool,X73)) | ~sP10(X73,X72,'T_0') | s(bool,X71) = s(bool,X74) | s(bool,'T_0') = s(bool,X74)) )),
  inference(subsumption_resolution,[],[f5776,f792])).
fof(f5776,plain,(
  ( ! [X74,X72,X71,X73] : (~p(s(bool,X71)) | p(s(bool,X72)) | ~p(s(bool,X73)) | ~sP10(X73,X72,'T_0') | s(bool,X71) = s(bool,X74) | s(bool,'T_0') = s(bool,X74)) )),
  inference(superposition,[],[f556,f746])).
fof(f6144,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,X1)) | p(s(bool,X2)) | ~sP9('T_0',X2,X1)) )),
  inference(condensation,[],[f6143])).
fof(f6143,plain,(
  ( ! [X70,X68,X69,X67] : (p(s(bool,X68)) | p(s(bool,X69)) | ~sP9('T_0',X69,X68) | s(bool,X67) = s(bool,X70) | s(bool,'T_0') = s(bool,X70)) )),
  inference(subsumption_resolution,[],[f5775,f792])).
fof(f5775,plain,(
  ( ! [X70,X68,X69,X67] : (~p(s(bool,X67)) | p(s(bool,X68)) | p(s(bool,X69)) | ~sP9('T_0',X69,X68) | s(bool,X67) = s(bool,X70) | s(bool,'T_0') = s(bool,X70)) )),
  inference(superposition,[],[f546,f746])).
fof(f6141,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X1)) | sP9('T_0',X1,X2)) )),
  inference(condensation,[],[f6140])).
fof(f6140,plain,(
  ( ! [X66,X64,X65,X63] : (~p(s(bool,X64)) | sP9('T_0',X64,X65) | s(bool,X63) = s(bool,X66) | s(bool,'T_0') = s(bool,X66)) )),
  inference(subsumption_resolution,[],[f5774,f792])).
fof(f5774,plain,(
  ( ! [X66,X64,X65,X63] : (~p(s(bool,X63)) | ~p(s(bool,X64)) | sP9('T_0',X64,X65) | s(bool,X63) = s(bool,X66) | s(bool,'T_0') = s(bool,X66)) )),
  inference(superposition,[],[f545,f746])).
fof(f6138,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X1)) | sP9('T_0',X2,X1)) )),
  inference(condensation,[],[f6137])).
fof(f6137,plain,(
  ( ! [X61,X59,X62,X60] : (~p(s(bool,X60)) | sP9('T_0',X61,X60) | s(bool,X59) = s(bool,X62) | s(bool,'T_0') = s(bool,X62)) )),
  inference(subsumption_resolution,[],[f5773,f792])).
fof(f5773,plain,(
  ( ! [X61,X59,X62,X60] : (~p(s(bool,X59)) | ~p(s(bool,X60)) | sP9('T_0',X61,X60) | s(bool,X59) = s(bool,X62) | s(bool,'T_0') = s(bool,X62)) )),
  inference(superposition,[],[f544,f746])).
fof(f6135,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,X1)) | p(s(bool,X2)) | ~sP8('T_0',X1,X2)) )),
  inference(condensation,[],[f6134])).
fof(f6134,plain,(
  ( ! [X57,X58,X56,X55] : (p(s(bool,X56)) | p(s(bool,X57)) | ~sP8('T_0',X56,X57) | s(bool,X55) = s(bool,X58) | s(bool,'T_0') = s(bool,X58)) )),
  inference(subsumption_resolution,[],[f5772,f792])).
fof(f5772,plain,(
  ( ! [X57,X58,X56,X55] : (~p(s(bool,X55)) | p(s(bool,X56)) | p(s(bool,X57)) | ~sP8('T_0',X56,X57) | s(bool,X55) = s(bool,X58) | s(bool,'T_0') = s(bool,X58)) )),
  inference(superposition,[],[f539,f746])).
fof(f6132,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X1)) | p(s(bool,X2)) | ~sP7(X2,X1,'T_0')) )),
  inference(condensation,[],[f6131])).
fof(f6131,plain,(
  ( ! [X54,X52,X53,X51] : (~p(s(bool,X52)) | p(s(bool,X53)) | ~sP7(X53,X52,'T_0') | s(bool,X51) = s(bool,X54) | s(bool,'T_0') = s(bool,X54)) )),
  inference(subsumption_resolution,[],[f5771,f792])).
fof(f5771,plain,(
  ( ! [X54,X52,X53,X51] : (~p(s(bool,X51)) | ~p(s(bool,X52)) | p(s(bool,X53)) | ~sP7(X53,X52,'T_0') | s(bool,X51) = s(bool,X54) | s(bool,'T_0') = s(bool,X54)) )),
  inference(superposition,[],[f531,f746])).
fof(f6129,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X1)) | ~p(s(bool,X2)) | sP7('T_0',X1,X2)) )),
  inference(condensation,[],[f6128])).
fof(f6128,plain,(
  ( ! [X47,X50,X48,X49] : (~p(s(bool,X48)) | ~p(s(bool,X49)) | sP7('T_0',X48,X49) | s(bool,X47) = s(bool,X50) | s(bool,'T_0') = s(bool,X50)) )),
  inference(subsumption_resolution,[],[f5770,f792])).
fof(f5770,plain,(
  ( ! [X47,X50,X48,X49] : (~p(s(bool,X47)) | ~p(s(bool,X48)) | ~p(s(bool,X49)) | sP7('T_0',X48,X49) | s(bool,X47) = s(bool,X50) | s(bool,'T_0') = s(bool,X50)) )),
  inference(superposition,[],[f528,f746])).
fof(f6126,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X1)) | p(s(bool,X2)) | ~sP6(X1,'T_0',X2)) )),
  inference(condensation,[],[f6125])).
fof(f6125,plain,(
  ( ! [X45,X43,X46,X44] : (~p(s(bool,X44)) | p(s(bool,X45)) | ~sP6(X44,'T_0',X45) | s(bool,X43) = s(bool,X46) | s(bool,'T_0') = s(bool,X46)) )),
  inference(subsumption_resolution,[],[f5769,f792])).
fof(f5769,plain,(
  ( ! [X45,X43,X46,X44] : (~p(s(bool,X43)) | ~p(s(bool,X44)) | p(s(bool,X45)) | ~sP6(X44,'T_0',X45) | s(bool,X43) = s(bool,X46) | s(bool,'T_0') = s(bool,X46)) )),
  inference(superposition,[],[f522,f746])).
fof(f6123,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X1)) | p(s(bool,X2)) | ~sP3(X1,'T_0',X2)) )),
  inference(condensation,[],[f6122])).
fof(f6122,plain,(
  ( ! [X39,X41,X42,X40] : (~p(s(bool,X40)) | p(s(bool,X41)) | ~sP3(X40,'T_0',X41) | s(bool,X39) = s(bool,X42) | s(bool,'T_0') = s(bool,X42)) )),
  inference(subsumption_resolution,[],[f5768,f792])).
fof(f5768,plain,(
  ( ! [X39,X41,X42,X40] : (~p(s(bool,X39)) | ~p(s(bool,X40)) | p(s(bool,X41)) | ~sP3(X40,'T_0',X41) | s(bool,X39) = s(bool,X42) | s(bool,'T_0') = s(bool,X42)) )),
  inference(superposition,[],[f503,f746])).
fof(f6120,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X1)) | p(s(bool,X2)) | ~sP4(X1,'T_0',X2)) )),
  inference(condensation,[],[f6119])).
fof(f6119,plain,(
  ( ! [X37,X35,X38,X36] : (~p(s(bool,X36)) | p(s(bool,X37)) | ~sP4(X36,'T_0',X37) | s(bool,X35) = s(bool,X38) | s(bool,'T_0') = s(bool,X38)) )),
  inference(subsumption_resolution,[],[f5767,f792])).
fof(f5767,plain,(
  ( ! [X37,X35,X38,X36] : (~p(s(bool,X35)) | ~p(s(bool,X36)) | p(s(bool,X37)) | ~sP4(X36,'T_0',X37) | s(bool,X35) = s(bool,X38) | s(bool,'T_0') = s(bool,X38)) )),
  inference(superposition,[],[f499,f746])).
fof(f6117,plain,(
  ( ! [X0,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,X1)) | sP1(X1,'T_0')) )),
  inference(condensation,[],[f6116])).
fof(f6116,plain,(
  ( ! [X33,X34,X32] : (p(s(bool,X33)) | sP1(X33,'T_0') | s(bool,X32) = s(bool,X34) | s(bool,'T_0') = s(bool,X34)) )),
  inference(subsumption_resolution,[],[f5766,f792])).
fof(f5766,plain,(
  ( ! [X33,X34,X32] : (~p(s(bool,X32)) | p(s(bool,X33)) | sP1(X33,'T_0') | s(bool,X32) = s(bool,X34) | s(bool,'T_0') = s(bool,X34)) )),
  inference(superposition,[],[f458,f746])).
fof(f6113,plain,(
  ( ! [X0,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,X1)) | sP1('T_0',X1)) )),
  inference(condensation,[],[f6112])).
fof(f6112,plain,(
  ( ! [X30,X31,X29] : (p(s(bool,X30)) | sP1('T_0',X30) | s(bool,X29) = s(bool,X31) | s(bool,'T_0') = s(bool,X31)) )),
  inference(subsumption_resolution,[],[f5765,f792])).
fof(f5765,plain,(
  ( ! [X30,X31,X29] : (~p(s(bool,X29)) | p(s(bool,X30)) | sP1('T_0',X30) | s(bool,X29) = s(bool,X31) | s(bool,'T_0') = s(bool,X31)) )),
  inference(superposition,[],[f455,f746])).
fof(f3904,plain,(
  s(bool,'T_0') = s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK12))) | $spl4),
  inference(cnf_transformation,[],[f3904_D])).
fof(f3904_D,plain,(
  s(bool,'T_0') = s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK12))) <=> ~$spl4),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl4])])).
fof(f3906,plain,(
  s(bool,'F_0') = s(bool,'const.integer.int_le_2'(s('type.integer.int',sK12),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | $spl6),
  inference(cnf_transformation,[],[f3906_D])).
fof(f3906_D,plain,(
  s(bool,'F_0') = s(bool,'const.integer.int_le_2'(s('type.integer.int',sK12),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) <=> ~$spl6),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl6])])).
fof(f3866,plain,(
  s(bool,'F_0') = s(bool,'const.integer.int_le_2'(s('type.integer.int',sK12),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK12))) | $spl0),
  inference(superposition,[],[f341,f2115])).
fof(f3863,plain,(
  s(bool,'F_0') = s(bool,'const.integer.int_le_2'(s('type.integer.int',sK12),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK12))) | $spl0),
  inference(superposition,[],[f2115,f341])).
fof(f656,plain,(
  $false | ($spl1 | $spl2)),
  inference(subsumption_resolution,[],[f655,f599])).
fof(f655,plain,(
  s('type.integer.int',sK12) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK12))) | $spl2),
  inference(forward_demodulation,[],[f646,f600])).
fof(f646,plain,(
  s('type.integer.int',sK12) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | $spl2),
  inference(equality_resolution,[],[f610])).
fof(f610,plain,(
  ( ! [X0] : (s('type.integer.int',X0) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int',sK12) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X0)))) ) | $spl2),
  inference(backward_demodulation,[],[f600,f367])).
fof(f654,plain,(
  $false | ($spl1 | $spl2)),
  inference(subsumption_resolution,[],[f653,f599])).
fof(f653,plain,(
  s('type.integer.int',sK12) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK12))) | $spl2),
  inference(forward_demodulation,[],[f652,f604])).
fof(f604,plain,(
  ( ! [X0] : (s('type.integer.int',sK12) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X0))),s('type.integer.int',X0)))) ) | $spl2),
  inference(backward_demodulation,[],[f600,f338])).
fof(f652,plain,(
  ( ! [X0] : (s('type.integer.int',sK12) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X0))),s('type.integer.int',X0)))))) ) | $spl2),
  inference(subsumption_resolution,[],[f644,f600])).
fof(f644,plain,(
  ( ! [X0] : (s('type.integer.int',sK12) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int',sK12) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X0))),s('type.integer.int',X0)))))) ) | $spl2),
  inference(superposition,[],[f610,f604])).
fof(f651,plain,(
  $false | ($spl1 | $spl2)),
  inference(subsumption_resolution,[],[f650,f599])).
fof(f650,plain,(
  s('type.integer.int',sK12) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK12))) | $spl2),
  inference(forward_demodulation,[],[f647,f600])).
fof(f647,plain,(
  s('type.integer.int',sK12) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | $spl2),
  inference(trivial_inequality_removal,[],[f643])).
fof(f643,plain,(
  s('type.integer.int',sK12) != s('type.integer.int',sK12) | s('type.integer.int',sK12) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | $spl2),
  inference(superposition,[],[f610,f600])).
fof(f649,plain,(
  $false | ($spl1 | $spl2)),
  inference(subsumption_resolution,[],[f640,f600])).
fof(f640,plain,(
  s('type.integer.int',sK12) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | ($spl1 | $spl2)),
  inference(unit_resulting_resolution,[],[f599,f610])).
fof(f648,plain,(
  $false | ($spl1 | $spl2)),
  inference(subsumption_resolution,[],[f641,f599])).
fof(f641,plain,(
  s('type.integer.int',sK12) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK12))) | $spl2),
  inference(unit_resulting_resolution,[],[f600,f610])).
fof(f642,plain,(
  $false | ($spl1 | $spl2)),
  inference(unit_resulting_resolution,[],[f599,f600,f610])).
fof(f598,plain,(
  s('type.integer.int',sK12) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK12))) | $spl0),
  inference(cnf_transformation,[],[f598_D])).
fof(f598_D,plain,(
  s('type.integer.int',sK12) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK12))) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f600,plain,(
  s('type.integer.int',sK12) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | $spl2),
  inference(cnf_transformation,[],[f600_D])).
fof(f600_D,plain,(
  s('type.integer.int',sK12) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f328,plain,(
  s('type.integer.int',sK12) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int',sK12) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK12)))),
  inference(cnf_transformation,[],[f216])).
fof(f216,plain,(
  (s('type.integer.int',sK12) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK12))) | s('type.integer.int',sK12) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) & (s('type.integer.int',sK12) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK12))) | s('type.integer.int',sK12) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK12])],[f215])).
fof(f215,plain,(
  ? [X0] : ((s('type.integer.int',X0) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X0))) | s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) & (s('type.integer.int',X0) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X0))) | s('type.integer.int',X0) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))),
  inference(nnf_transformation,[],[f166])).
fof(f166,plain,(
  ? [X0] : (s('type.integer.int',X0) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X0))) <~> s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),
  inference(ennf_transformation,[],[f71])).
fof(f71,plain,(
  ~! [X0] : (s('type.integer.int',X0) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X0))) <=> s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : (s('type.integer.int',X6) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X6))) <=> s('type.integer.int',X6) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : (s('type.integer.int',X6) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X6))) <=> s('type.integer.int',X6) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),
  file('thm.integer.INT_NEG_SAME_EQ','thm.integer.INT_NEG_SAME_EQ')).
fof(f599,plain,(
  s('type.integer.int',sK12) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK12))) | $spl1),
  inference(cnf_transformation,[],[f599_D])).
fof(f599_D,plain,(
  s('type.integer.int',sK12) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK12))) <=> ~$spl1),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1])])).
fof(f601,plain,(
  s('type.integer.int',sK12) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | $spl3),
  inference(cnf_transformation,[],[f601_D])).
fof(f601_D,plain,(
  s('type.integer.int',sK12) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) <=> ~$spl3),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl3])])).
fof(f329,plain,(
  s('type.integer.int',sK12) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int',sK12) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK12)))),
  inference(cnf_transformation,[],[f216])).
% SZS output end Proof for thm.integer
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 411
% Passive clauses: 1289
% Generated clauses: 10282
% Final active clauses: 376
% Final passive clauses: 619
% Input formulas: 69
% Initial clauses: 246
% 
% Duplicate literals: 77
% Trivial inequalities: 24
% Fw subsumption resolutions: 312
% Fw demodulations: 1795
% Bw demodulations: 274
% Condensations: 167
% Global subsumptions: 79
% 
% Simple tautologies: 107
% Equational tautologies: 59
% Forward subsumptions: 6178
% Fw demodulations to eq. taut.: 62
% Bw demodulations to eq. taut.: 4
% 
% Unit resulting resolution: 1799
% Factoring: 1
% Forward superposition: 2388
% Backward superposition: 2749
% Self superposition: 55
% Equality factoring: 28
% Equality resolution: 13
% 
% Split clauses: 45
% Split components: 90
% SAT solver clauses: 1548
% SAT solver unit clauses: 319
% SAT solver binary clauses: 336
% 
% Sat splits: 45
% Sat splitting refutations: 88
% 
% Memory used [KB]: 9210
% Time elapsed: 0.353 s
% ------------------------------
% ------------------------------
% Success in time 1.69 s
