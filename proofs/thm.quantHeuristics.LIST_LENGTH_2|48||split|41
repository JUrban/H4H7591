Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.quantHeuristics
% (41943)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 199
% Passive clauses: 2729
% Generated clauses: 30660
% Final active clauses: 193
% Final passive clauses: 2420
% Input formulas: 37
% Initial clauses: 51
% 
% Duplicate literals: 89
% Trivial inequalities: 7
% Fw subsumption resolutions: 92
% Fw demodulations: 4530
% Bw demodulations: 3
% 
% Simple tautologies: 23
% Equational tautologies: 17
% Forward subsumptions: 23138
% Fw demodulations to eq. taut.: 35
% 
% Binary resolution: 45
% Forward superposition: 12704
% Backward superposition: 13237
% Self superposition: 181
% Equality factoring: 34
% Equality resolution: 3
% 
% Split clauses: 44
% Split components: 88
% SAT solver clauses: 57
% SAT solver unit clauses: 4
% SAT solver binary clauses: 15
% 
% Sat splits: 44
% Sat splitting refutations: 1
% 
% TWLsolver clauses: 57
% TWLsolver calls for satisfiability: 12
% 
% Memory used [KB]: 33005
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 143 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.quantHeuristics
% (41961)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 131
% Passive clauses: 877
% Generated clauses: 14154
% Final active clauses: 122
% Final passive clauses: 728
% Input formulas: 37
% Initial clauses: 51
% 
% Duplicate literals: 519
% Trivial inequalities: 125
% Fw subsumption resolutions: 751
% Fw demodulations: 1462
% Bw demodulations: 23
% Condensations: 1160
% 
% Simple tautologies: 107
% Equational tautologies: 20
% Forward subsumptions: 7854
% Fw demodulations to eq. taut.: 3
% 
% Binary resolution: 25
% Forward superposition: 5102
% Backward superposition: 3766
% Self superposition: 200
% Equality factoring: 40
% Equality resolution: 15
% 
% Split clauses: 128
% Split components: 256
% SAT solver clauses: 1320
% SAT solver unit clauses: 70
% SAT solver binary clauses: 41
% 
% Sat splits: 128
% Sat splitting refutations: 4
% 
% TWLsolver clauses: 1320
% TWLsolver calls for satisfiability: 277
% 
% Memory used [KB]: 20724
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 136 next slice time: 103
lrs+11_2_br=off:cond=on:fde=none:gs=on:gsaa=full_model:lwlo=on:nwc=2:sas=minisat:stl=30:ssfp=100000:ssfq=1.4:smm=sco:ssnc=none:sp=occurrence:urr=on_98 on thm.quantHeuristics
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.quantHeuristics
% SZS output start Proof for thm.quantHeuristics
fof(f5300,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f105,f156,f155,f104,f158,f103,f160,f154,f230,f233,f231,f677,f681,f679,f1072,f1074,f1067,f1061,f1075,f1138,f1734,f1736,f1957,f1958,f1952,f1946,f1959,f2488,f2491,f2489,f2606,f2609,f1073,f2607,f2624,f2629,f2628,f3936,f3946,f3912,f3968,f3910,f3970,f3969,f1735,f4212,f4280,f4278,f4289,f4304,f4302,f4320,f4392,f4395,f4398,f4401,f4404,f4405,f4662,f4678,f4668,f4685,f4683,f5259])).
fof(f5259,plain,(
  $false | ($spl0 | $spl2)),
  inference(subsumption_resolution,[],[f5196,f4943])).
fof(f4943,plain,(
  ( ! [X6,X4,X2,X0,X14,X12,X10,X8,X17,X7,X5,X3,X1,X15,X13,X11,X9,X16] : (s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X17),s('type.list.list'(sK0),sK22(sK2,sK1,sK0))))))))))))))))))))))))))))))))))))))) ) | ($spl0 | $spl2)),
  inference(unit_resulting_resolution,[],[f4810,f156])).
fof(f4810,plain,(
  s('type.num.num',sK1) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK22(sK2,sK1,sK0)))) | $spl0),
  inference(unit_resulting_resolution,[],[f154,f130])).
fof(f130,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) | s('type.num.num',X1) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK22(X2,X1,X0))))) )),
  inference(cnf_transformation,[],[f91])).
fof(f91,plain,(
  ! [X0,X1,X2] : ((s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) | (s('type.num.num',X1) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK22(X2,X1,X0)))) & s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK23(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK24(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK25(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK26(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK27(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK28(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK29(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK30(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK31(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK32(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK33(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK34(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK35(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK36(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK37(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK38(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK39(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK40(X2,X1,X0)),s('type.list.list'(X0),sK22(X2,X1,X0)))))))))))))))))))))))))))))))))))))))) & (! [X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,X21] : (s('type.num.num',X1) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))) | s('type.list.list'(X0),X2) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X12),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X13),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X14),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X15),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X16),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X17),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X18),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X19),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X20),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X21),s('type.list.list'(X0),X3)))))))))))))))))))))))))))))))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK22,sK23,sK24,sK25,sK26,sK27,sK28,sK29,sK30,sK31,sK32,sK33,sK34,sK35,sK36,sK37,sK38,sK39,sK40])],[f90])).
fof(f90,plain,(
  ! [X0,X1,X2] : ((s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) | ? [X22,X23,X24,X25,X26,X27,X28,X29,X30,X31,X32,X33,X34,X35,X36,X37,X38,X39,X40] : (s('type.num.num',X1) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X22))) & s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X23),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X24),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X25),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X26),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X27),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X28),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X29),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X30),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X31),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X32),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X33),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X34),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X35),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X36),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X37),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X38),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X39),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X40),s('type.list.list'(X0),X22))))))))))))))))))))))))))))))))))))))) & (! [X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,X21] : (s('type.num.num',X1) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))) | s('type.list.list'(X0),X2) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X12),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X13),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X14),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X15),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X16),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X17),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X18),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X19),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X20),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X21),s('type.list.list'(X0),X3)))))))))))))))))))))))))))))))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))),
  inference(rectify,[],[f89])).
fof(f89,plain,(
  ! [X0,X1,X2] : ((s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) | ? [X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,X21] : (s('type.num.num',X1) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))) & s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X12),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X13),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X14),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X15),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X16),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X17),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X18),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X19),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X20),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X21),s('type.list.list'(X0),X3))))))))))))))))))))))))))))))))))))))) & (! [X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,X21] : (s('type.num.num',X1) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))) | s('type.list.list'(X0),X2) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X12),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X13),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X14),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X15),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X16),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X17),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X18),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X19),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X20),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X21),s('type.list.list'(X0),X3)))))))))))))))))))))))))))))))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))),
  inference(nnf_transformation,[],[f63])).
fof(f63,plain,(
  ! [X0,X1,X2] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) <=> ? [X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,X21] : (s('type.num.num',X1) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))) & s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X12),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X13),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X14),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X15),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X16),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X17),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X18),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X19),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X20),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X21),s('type.list.list'(X0),X3)))))))))))))))))))))))))))))))))))))))),
  inference(flattening,[],[f62])).
fof(f62,plain,(
  ! [X0] : ! [X1,X2] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) <=> ? [X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,X21] : (s('type.num.num',X1) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))) & s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X12),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X13),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X14),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X15),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X16),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X17),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X18),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X19),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X20),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X21),s('type.list.list'(X0),X3)))))))))))))))))))))))))))))))))))))))),
  inference(rectify,[],[f7])).
fof(f7,axiom,(
  ! [X6] : ! [X7,X8] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X8))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X7),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) <=> ? [X9,X10,X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,X21,X22,X23,X24,X25,X26,X27] : (s('type.num.num',X7) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X9))) & s('type.list.list'(X6),X8) = s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X10),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X11),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X12),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X13),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X14),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X15),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X16),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X17),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X18),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X19),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X20),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X21),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X22),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X23),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X24),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X25),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X26),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X27),s('type.list.list'(X6),X9)))))))))))))))))))))))))))))))))))))))),
  file('thm.quantHeuristics.LIST_LENGTH_2|48||split|41','thm.quantHeuristics.LIST_LENGTH_2|48||split|40')).
fof(f5196,plain,(
  s('type.list.list'(sK0),sK2) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK23(sK2,sK1,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK24(sK2,sK1,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK25(sK2,sK1,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK26(sK2,sK1,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK27(sK2,sK1,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK28(sK2,sK1,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK29(sK2,sK1,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK30(sK2,sK1,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK31(sK2,sK1,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK32(sK2,sK1,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK33(sK2,sK1,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK34(sK2,sK1,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK35(sK2,sK1,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK36(sK2,sK1,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK37(sK2,sK1,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK38(sK2,sK1,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK39(sK2,sK1,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK40(sK2,sK1,sK0)),s('type.list.list'(sK0),sK22(sK2,sK1,sK0)))))))))))))))))))))))))))))))))))))) | $spl0),
  inference(unit_resulting_resolution,[],[f154,f131])).
fof(f131,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) | s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK23(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK24(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK25(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK26(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK27(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK28(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK29(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK30(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK31(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK32(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK33(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK34(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK35(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK36(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK37(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK38(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK39(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK40(X2,X1,X0)),s('type.list.list'(X0),sK22(X2,X1,X0))))))))))))))))))))))))))))))))))))))) )),
  inference(cnf_transformation,[],[f91])).
fof(f4683,plain,(
  ( ! [X6,X4,X2,X0,X14,X12,X10,X8,X17,X7,X5,X3,X1,X15,X13,X11,X9,X16] : (s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X17),s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),sK3),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))))))))))))) ) | $spl52),
  inference(cnf_transformation,[],[f4683_D])).
fof(f4683_D,plain,(
  ( ! [X6,X4,X2,X0,X14,X12,X10,X8,X17,X7,X5,X3,X1,X15,X13,X11,X9,X16] : (s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X17),s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),sK3),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))))))))))))) ) <=> ~$spl52),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl52])])).
fof(f4685,plain,(
  s('type.num.num',sK1) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num',sK1))) | $spl55),
  inference(cnf_transformation,[],[f4685_D])).
fof(f4685_D,plain,(
  s('type.num.num',sK1) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num',sK1))) <=> ~$spl55),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl55])])).
fof(f4668,plain,(
  ( ! [X6,X4,X2,X0,X14,X12,X10,X8,X17,X7,X5,X3,X1,X15,X13,X11,X9,X16] : (s('type.num.num',sK1) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num',sK1))) | s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X17),s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),sK3),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))))))))))))) ) | ($spl2 | $spl6)),
  inference(superposition,[],[f156,f4165])).
fof(f4165,plain,(
  s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num',sK1))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),sK3),s('type.list.list'(sK0),sK3))))) | $spl6),
  inference(forward_demodulation,[],[f4042,f127])).
fof(f127,plain,(
  ( ! [X2,X0,X1] : (s(X0,X2) = s(X0,'const.bool.COND_3'(s(bool,'F_0'),s(X0,X1),s(X0,X2)))) )),
  inference(cnf_transformation,[],[f59])).
fof(f59,plain,(
  ! [X0,X1,X2] : s(X0,X2) = s(X0,'const.bool.COND_3'(s(bool,'F_0'),s(X0,X1),s(X0,X2)))),
  inference(flattening,[],[f58])).
fof(f58,plain,(
  ! [X0] : ! [X1,X2] : s(X0,X2) = s(X0,'const.bool.COND_3'(s(bool,'F_0'),s(X0,X1),s(X0,X2)))),
  inference(rectify,[],[f35])).
fof(f35,axiom,(
  ! [X6] : ! [X40,X41] : s(X6,X41) = s(X6,'const.bool.COND_3'(s(bool,'F_0'),s(X6,X40),s(X6,X41)))),
  file('thm.quantHeuristics.LIST_LENGTH_2|48||split|41','thm.bool.COND_CLAUSES|split|1')).
fof(f4042,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num',sK1))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(sK0),X0),s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),sK3),s('type.list.list'(sK0),sK3)))))))) ) | $spl6),
  inference(unit_resulting_resolution,[],[f160,f160,f127,f143])).
fof(f143,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X4),s('type.list.list'(X0),X5))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X3))) | s('type.num.num',X3) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X5))) | s('type.num.num',X2) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X4)))) )),
  inference(cnf_transformation,[],[f101])).
fof(f101,plain,(
  ! [X0,X1,X2,X3] : ((s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X3))) | (s('type.num.num',X2) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK44(X3,X2,X1,X0)))) & s('type.num.num',X3) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK45(X3,X2,X1,X0)))) & s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),sK44(X3,X2,X1,X0)),s('type.list.list'(X0),sK45(X3,X2,X1,X0)))))) & (! [X4,X5] : (s('type.num.num',X2) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X4))) | s('type.num.num',X3) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X5))) | s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X4),s('type.list.list'(X0),X5)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X3)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK44,sK45])],[f100])).
fof(f100,plain,(
  ! [X0,X1,X2,X3] : ((s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X3))) | ? [X6,X7] : (s('type.num.num',X2) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X6))) & s('type.num.num',X3) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X7))) & s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X6),s('type.list.list'(X0),X7))))) & (! [X4,X5] : (s('type.num.num',X2) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X4))) | s('type.num.num',X3) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X5))) | s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X4),s('type.list.list'(X0),X5)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X3)))))),
  inference(rectify,[],[f99])).
fof(f99,plain,(
  ! [X0,X1,X2,X3] : ((s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X3))) | ? [X4,X5] : (s('type.num.num',X2) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X4))) & s('type.num.num',X3) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X5))) & s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X4),s('type.list.list'(X0),X5))))) & (! [X4,X5] : (s('type.num.num',X2) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X4))) | s('type.num.num',X3) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X5))) | s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X4),s('type.list.list'(X0),X5)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X3)))))),
  inference(nnf_transformation,[],[f69])).
fof(f69,plain,(
  ! [X0,X1,X2,X3] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X3))) <=> ? [X4,X5] : (s('type.num.num',X2) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X4))) & s('type.num.num',X3) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X5))) & s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X4),s('type.list.list'(X0),X5)))))),
  inference(flattening,[],[f68])).
fof(f68,plain,(
  ! [X0] : ! [X1,X2,X3] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X3))) <=> ? [X4,X5] : (s('type.num.num',X2) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X4))) & s('type.num.num',X3) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X5))) & s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X4),s('type.list.list'(X0),X5)))))),
  inference(rectify,[],[f9])).
fof(f9,axiom,(
  ! [X6] : ! [X8,X28,X29] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X8))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X28),s('type.num.num',X29))) <=> ? [X30,X31] : (s('type.num.num',X28) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X30))) & s('type.num.num',X29) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X31))) & s('type.list.list'(X6),X8) = s('type.list.list'(X6),'const.list.APPEND_2'(s('type.list.list'(X6),X30),s('type.list.list'(X6),X31)))))),
  file('thm.quantHeuristics.LIST_LENGTH_2|48||split|41','thm.list.LENGTH_EQ_SUM')).
fof(f4678,plain,(
  $false | ($spl2 | $spl4 | $spl6)),
  inference(subsumption_resolution,[],[f4661,f160])).
fof(f4661,plain,(
  s('type.num.num',sK1) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3))) | ($spl2 | $spl4)),
  inference(unit_resulting_resolution,[],[f158,f156])).
fof(f4662,plain,(
  $false | ($spl2 | $spl4 | $spl6)),
  inference(unit_resulting_resolution,[],[f160,f158,f156])).
fof(f4405,plain,(
  $false | ($spl1 | $spl4 | $spl6)),
  inference(subsumption_resolution,[],[f4314,f155])).
fof(f4314,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) | ($spl4 | $spl6)),
  inference(unit_resulting_resolution,[],[f160,f158,f132])).
fof(f132,plain,(
  ( ! [X6,X4,X2,X0,X14,X12,X10,X8,X21,X19,X17,X7,X5,X3,X1,X15,X13,X11,X9,X20,X18,X16] : (s('type.num.num',X1) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))) | s('type.list.list'(X0),X2) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X12),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X13),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X14),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X15),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X16),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X17),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X18),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X19),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X20),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X21),s('type.list.list'(X0),X3))))))))))))))))))))))))))))))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) )),
  inference(cnf_transformation,[],[f91])).
fof(f4404,plain,(
  $false | ($spl1 | $spl4 | $spl6)),
  inference(subsumption_resolution,[],[f4403,f155])).
fof(f4403,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) | ($spl4 | $spl6)),
  inference(forward_demodulation,[],[f4402,f160])).
fof(f4402,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) | $spl4),
  inference(forward_demodulation,[],[f4315,f110])).
fof(f110,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f42])).
fof(f42,plain,(
  ! [X0] : s('type.num.num',X0) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))),
  inference(rectify,[],[f31])).
fof(f31,axiom,(
  ! [X32] : s('type.num.num',X32) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X32)))),
  file('thm.quantHeuristics.LIST_LENGTH_2|48||split|41','thm.arithmetic.ADD|split|0')).
fof(f4315,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) | $spl4),
  inference(unit_resulting_resolution,[],[f110,f158,f132])).
fof(f4401,plain,(
  $false | ($spl1 | $spl4 | $spl6)),
  inference(subsumption_resolution,[],[f4400,f155])).
fof(f4400,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) | ($spl4 | $spl6)),
  inference(forward_demodulation,[],[f4399,f160])).
fof(f4399,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) | $spl4),
  inference(forward_demodulation,[],[f4316,f115])).
fof(f115,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) )),
  inference(cnf_transformation,[],[f47])).
fof(f47,plain,(
  ! [X0] : s('type.num.num',X0) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))),
  inference(rectify,[],[f15])).
fof(f15,axiom,(
  ! [X32] : s('type.num.num',X32) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X32),s('type.num.num','const.num.|48|_0')))),
  file('thm.quantHeuristics.LIST_LENGTH_2|48||split|41','thm.numeral.numeral_distrib|split|1')).
fof(f4316,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3))),s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) | $spl4),
  inference(unit_resulting_resolution,[],[f115,f158,f132])).
fof(f4398,plain,(
  $false | ($spl1 | $spl4 | $spl6)),
  inference(subsumption_resolution,[],[f4397,f155])).
fof(f4397,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) | ($spl4 | $spl6)),
  inference(forward_demodulation,[],[f4396,f160])).
fof(f4396,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) | $spl4),
  inference(forward_demodulation,[],[f4317,f116])).
fof(f116,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) )),
  inference(cnf_transformation,[],[f48])).
fof(f48,plain,(
  ! [X0] : s('type.num.num',X0) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))),
  inference(rectify,[],[f20])).
fof(f20,axiom,(
  ! [X32] : s('type.num.num',X32) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X32),s('type.num.num','const.num.|48|_0')))),
  file('thm.quantHeuristics.LIST_LENGTH_2|48||split|41','thm.numeral.numeral_distrib|split|7')).
fof(f4317,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3))),s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) | $spl4),
  inference(unit_resulting_resolution,[],[f116,f158,f132])).
fof(f4395,plain,(
  $false | ($spl1 | $spl4 | $spl6)),
  inference(subsumption_resolution,[],[f4394,f155])).
fof(f4394,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) | ($spl4 | $spl6)),
  inference(forward_demodulation,[],[f4393,f160])).
fof(f4393,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) | $spl4),
  inference(forward_demodulation,[],[f4318,f127])).
fof(f4318,plain,(
  ( ! [X0] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X0),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) ) | $spl4),
  inference(unit_resulting_resolution,[],[f127,f158,f132])).
fof(f4392,plain,(
  $false | ($spl1 | $spl4 | $spl6)),
  inference(subsumption_resolution,[],[f4319,f160])).
fof(f4319,plain,(
  s('type.num.num',sK1) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3))) | ($spl1 | $spl4)),
  inference(unit_resulting_resolution,[],[f155,f158,f132])).
fof(f4320,plain,(
  $false | ($spl1 | $spl4 | $spl6)),
  inference(unit_resulting_resolution,[],[f160,f155,f158,f132])).
fof(f4302,plain,(
  s('type.list.list'(sK0),'const.list.NIL_0') = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK19),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK20),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK21),s('type.list.list'(sK0),sK3))))))))))))))))))))))))))))))))))))) | $spl48),
  inference(cnf_transformation,[],[f4302_D])).
fof(f4302_D,plain,(
  s('type.list.list'(sK0),'const.list.NIL_0') = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK19),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK20),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK21),s('type.list.list'(sK0),sK3))))))))))))))))))))))))))))))))))))) <=> ~$spl48),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl48])])).
fof(f4304,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) | $spl51),
  inference(cnf_transformation,[],[f4304_D])).
fof(f4304_D,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) <=> ~$spl51),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl51])])).
fof(f4289,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) | s('type.list.list'(sK0),'const.list.NIL_0') = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK19),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK20),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK21),s('type.list.list'(sK0),sK3))))))))))))))))))))))))))))))))))))) | $spl4),
  inference(superposition,[],[f125,f158])).
fof(f125,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) | s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1)) )),
  inference(cnf_transformation,[],[f87])).
fof(f87,plain,(
  ! [X0,X1] : ((s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) | s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1)) & (s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),X1) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))))),
  inference(nnf_transformation,[],[f57])).
fof(f57,plain,(
  ! [X0,X1] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) <=> s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1))),
  inference(flattening,[],[f56])).
fof(f56,plain,(
  ! [X0] : ! [X1] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) <=> s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1))),
  inference(rectify,[],[f8])).
fof(f8,axiom,(
  ! [X6] : ! [X8] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X8))) <=> s('type.list.list'(X6),'const.list.NIL_0') = s('type.list.list'(X6),X8))),
  file('thm.quantHeuristics.LIST_LENGTH_2|48||split|41','thm.list.LENGTH_NIL')).
fof(f4278,plain,(
  s('type.list.list'(sK0),'const.list.NIL_0') = s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),sK3),s('type.list.list'(sK0),sK3))) | $spl44),
  inference(cnf_transformation,[],[f4278_D])).
fof(f4278_D,plain,(
  s('type.list.list'(sK0),'const.list.NIL_0') = s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),sK3),s('type.list.list'(sK0),sK3))) <=> ~$spl44),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl44])])).
fof(f4280,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num',sK1))) | $spl47),
  inference(cnf_transformation,[],[f4280_D])).
fof(f4280_D,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num',sK1))) <=> ~$spl47),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl47])])).
fof(f4212,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num',sK1))) | s('type.list.list'(sK0),'const.list.NIL_0') = s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),sK3),s('type.list.list'(sK0),sK3))) | $spl6),
  inference(superposition,[],[f125,f4165])).
fof(f1735,plain,(
  ( ! [X3] : (s('type.num.num',sK1) = s('type.num.num',sK41('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),X3,'type.num.num'))) ) | $spl22),
  inference(cnf_transformation,[],[f1735_D])).
fof(f1735_D,plain,(
  ( ! [X3] : (s('type.num.num',sK1) = s('type.num.num',sK41('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),X3,'type.num.num'))) ) <=> ~$spl22),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl22])])).
fof(f3969,plain,(
  ( ! [X14,X12] : (s(bool,'T_0') != s(bool,X12) | s(bool,'T_0') = s(bool,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X14),s(bool,X12)))) ) | $spl42),
  inference(cnf_transformation,[],[f3969_D])).
fof(f3969_D,plain,(
  ( ! [X14,X12] : (s(bool,'T_0') != s(bool,X12) | s(bool,'T_0') = s(bool,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X14),s(bool,X12)))) ) <=> ~$spl42),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl42])])).
fof(f3970,plain,(
  ( ! [X24,X21,X22] : (s(bool,'T_0') = s(bool,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X24),s(bool,X22))) | s(bool,'T_0') != s(bool,X22) | s('type.num.num',sK1) = s('type.num.num',sK41('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),X21,'type.num.num'))) ) | ($spl6 | $spl34)),
  inference(global_subsumption,[],[f105,f104,f103,f106,f107,f108,f110,f111,f112,f113,f114,f115,f116,f117,f118,f119,f120,f121,f122,f161,f124,f126,f125,f132,f131,f130,f143,f142,f141,f140,f146,f148,f149,f150,f151,f153,f160,f225,f227,f230,f268,f347,f387,f431,f677,f707,f758,f808,f1072,f1067,f1061,f998,f768,f744,f145,f769,f745,f147,f144,f995,f996,f959,f961,f964,f975,f983,f988,f987,f986,f985,f984,f981,f980,f979,f940,f994,f993,f992,f990,f991,f989,f976,f977,f982,f138,f136,f135,f134,f133,f1016,f997,f966,f963,f936,f770,f746,f676,f580,f536,f298,f127,f109,f1667,f1668,f1669,f1670,f1671,f1697,f1699,f1701,f1715,f1730,f1719,f1721,f1723,f1734,f1738,f1803,f1830,f1856,f999,f1718,f1696,f1049,f1046,f1034,f1015,f1014,f1013,f1005,f978,f1995,f2022,f2052,f2054,f2059,f2060,f2097,f2143,f2144,f2173,f2206,f2207,f2246,f2247,f2248,f2249,f2250,f2251,f2252,f2253,f2254,f2255,f2256,f2257,f2258,f2259,f2260,f2261,f2293,f2301,f2324,f2326,f2328,f2329,f2331,f2374,f2411,f2428,f2486,f2488,f2491,f2482,f2483,f2484,f2485,f2492,f2493,f2494,f2495,f2496,f2497,f2498,f2499,f2533,f2565,f2566,f2568,f2570,f2572,f2587,f2604,f2606,f2609,f2599,f2600,f2601,f2602,f2603,f2627,f2624,f2628,f2630,f2677,f2757,f2758,f2759,f2761,f2762,f2763,f2796,f2800,f2801,f2802,f2803,f2810,f2884,f2885,f2886,f2887,f2888,f2889,f2890,f2891,f2893,f3025,f3028,f2985,f3031,f3032,f3077,f3078,f3079,f3080,f3081,f3082,f3083,f3084,f3086,f3133,f3136,f3137,f3138,f3139,f3140,f3141,f3142,f3143,f3144,f3146,f3148,f3147,f3149,f3182,f3183,f3186,f3187,f3232,f3233,f3246,f3248,f3247,f3249,f3282,f3283,f3286,f3287,f3288,f3333,f3334,f3335,f3337,f3350,f3351,f3352,f3354,f3356,f3357,f3358,f3360,f3362,f3363,f3364,f3365,f3366,f3367,f3368,f3369,f3370,f3371,f3372,f3410,f3411,f3412,f3413,f3414,f3415,f3416,f3417,f3418,f3419,f3420,f3458,f3471,f3472,f3463,f3464,f3465,f3466,f3467,f3468,f3559,f3560,f3561,f3562,f3563,f3564,f3565,f3566,f3567,f3568,f3570,f3659,f3660,f3661,f3662,f3663,f3664,f3665,f3666,f3667,f3668,f3670,f3723,f3724,f3673,f3674,f3675,f3676,f3677,f3725,f3726,f3727,f3728,f3729,f3730,f3731,f3732,f3733,f3734,f3735,f3736,f3737,f3738,f3692,f3739,f3740,f3741,f3697,f3698,f3742,f3743,f3744,f3745,f3746,f3747,f3748,f3749,f3750,f3751,f3752,f3753,f3754,f3755,f3756,f3757,f3758,f3759,f3760,f3719,f3720,f3722,f3777,f3936,f3788,f3801,f3831,f3866,f3869,f3912,f3910,f3876])).
fof(f3876,plain,(
  ( ! [X24,X23,X21,X22] : (s(bool,'T_0') != s(bool,X22) | s('type.num.num',sK1) = s('type.num.num',sK41('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),'const.bool.COND_3'(s(bool,'F_0'),s(fun('type.num.num',bool),X23),s(fun('type.num.num',bool),X21)),'type.num.num')) | s(bool,'T_0') = s(bool,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X24),s(bool,X22))) | s('type.num.num',sK1) = s('type.num.num',sK41('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),X21,'type.num.num'))) ) | ($spl6 | $spl34)),
  inference(superposition,[],[f2630,f1015])).
fof(f3869,plain,(
  ( ! [X146,X144,X147,X145,X148] : (s(X146,f(s(bool,happ(s(fun('type.num.num',bool),X147),s('type.num.num',sK1))))) != s(X146,g(s(bool,happ(s(fun('type.num.num',bool),X147),s('type.num.num',sK1))))) | s(fun(bool,X146),X144) = s(fun(bool,X146),X145) | s(bool,'T_0') = s(bool,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X148),s(bool,sK46(X144,X145,X146,bool)))) | s('type.num.num',sK1) = s('type.num.num',sK41('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),X147,'type.num.num'))) ) | $spl6),
  inference(superposition,[],[f153,f1015])).
fof(f3866,plain,(
  ( ! [X134,X132,X135,X133,X131] : (s(bool,f(s(X131,sK46(X132,X133,bool,X131)))) != s(bool,happ(s(fun('type.num.num',bool),X134),s('type.num.num',sK1))) | s(fun(X131,bool),X132) = s(fun(X131,bool),X133) | s(bool,'T_0') = s(bool,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X135),s(bool,g(s(X131,sK46(X132,X133,bool,X131)))))) | s('type.num.num',sK1) = s('type.num.num',sK41('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),X134,'type.num.num'))) ) | $spl6),
  inference(superposition,[],[f153,f1015])).
fof(f3831,plain,(
  ( ! [X74,X72,X71,X73] : (s(bool,'T_0') = s(bool,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X73),s(bool,X72))) | s(bool,happ(s(fun('type.num.num',bool),X74),s('type.num.num',sK1))) = s(bool,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X71),s(bool,X72))) | s('type.num.num',sK1) = s('type.num.num',sK41('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),X74,'type.num.num'))) ) | $spl6),
  inference(superposition,[],[f1015,f127])).
fof(f3801,plain,(
  ( ! [X30,X28,X31,X29] : (s(bool,X28) = s(bool,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X28),s(bool,X29))) | s(bool,X29) = s(bool,happ(s(fun('type.num.num',bool),X30),s('type.num.num',sK1))) | s('type.num.num',sK1) = s('type.num.num',sK41('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),X30,'type.num.num')) | s(bool,X28) = s(bool,X31) | s(bool,'T_0') = s(bool,X31)) ) | $spl6),
  inference(superposition,[],[f1015,f225])).
fof(f3788,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,'const.bool.COND_3'(s(bool,X0),s(bool,X1),s(bool,X2))) | s(bool,X2) = s(bool,happ(s(fun('type.num.num',bool),X3),s('type.num.num',sK1))) | s('type.num.num',sK1) = s('type.num.num',sK41('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),X3,'type.num.num')) | s(bool,'T_0') = s(bool,X0)) ) | $spl6),
  inference(superposition,[],[f1015,f124])).
fof(f3777,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,X2) = s(bool,happ(s(fun('type.num.num',bool),X1),s('type.num.num',sK1))) | s(bool,'T_0') = s(bool,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X3),s(bool,X2))) | s('type.num.num',sK1) = s('type.num.num',sK41('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),'const.bool.COND_3'(s(bool,'F_0'),s(fun('type.num.num',bool),X0),s(fun('type.num.num',bool),X1)),'type.num.num'))) ) | $spl6),
  inference(superposition,[],[f1015,f127])).
fof(f3722,plain,(
  ( ! [X10,X8,X9] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X9),X10))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X8),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X8))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X9),sK22(X10,'const.arithmetic.NUMERAL_1'(s('type.num.num',X8)),X9))))) )),
  inference(superposition,[],[f130,f2758])).
fof(f3720,plain,(
  ( ! [X4,X2,X3] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X3),X4))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X2))) | s('type.num.num',X2) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X3),sK22(X4,X2,X3))))) )),
  inference(superposition,[],[f130,f146])).
fof(f3719,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK22(X1,'const.num.|48|_0',X0))))) )),
  inference(superposition,[],[f130,f110])).
fof(f3760,plain,(
  ( ! [X123,X121,X122,X120] : (s('type.num.num',X121) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X122),sK22(X123,'const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X120),s('type.num.num',X121)),X122)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X122),X123))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X121),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) )),
  inference(forward_demodulation,[],[f3718,f127])).
fof(f3718,plain,(
  ( ! [X123,X121,X122,X120] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X122),X123))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X121),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) | s('type.num.num','const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X120),s('type.num.num',X121))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X122),sK22(X123,'const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X120),s('type.num.num',X121)),X122))))) )),
  inference(superposition,[],[f130,f127])).
fof(f3759,plain,(
  ( ! [X114,X115,X113] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X113))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X114),sK22(X115,'const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X113)))),X114)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X114),X115))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X113))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) )),
  inference(forward_demodulation,[],[f3716,f119])).
fof(f3716,plain,(
  ( ! [X114,X115,X113] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X114),X115))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X113))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) | s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X113))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X114),sK22(X115,'const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X113)))),X114))))) )),
  inference(superposition,[],[f130,f119])).
fof(f3758,plain,(
  ( ! [X111,X112] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X111),sK22(X112,'const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))),X111)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X111),X112))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) )),
  inference(forward_demodulation,[],[f3715,f431])).
fof(f3715,plain,(
  ( ! [X111,X112] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X111),X112))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X111),sK22(X112,'const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))),X111))))) )),
  inference(superposition,[],[f130,f431])).
fof(f3757,plain,(
  ( ! [X109,X110,X108] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X108))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X109),sK22(X110,'const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X108)))),X109)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X109),X110))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X108))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) )),
  inference(forward_demodulation,[],[f3714,f120])).
fof(f3714,plain,(
  ( ! [X109,X110,X108] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X109),X110))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X108))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X108))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X109),sK22(X110,'const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X108)))),X109))))) )),
  inference(superposition,[],[f130,f120])).
fof(f3756,plain,(
  ( ! [X107,X105,X106] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X105))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X106),sK22(X107,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X105)))),X106)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X106),X107))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X105))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) )),
  inference(forward_demodulation,[],[f3713,f122])).
fof(f3713,plain,(
  ( ! [X107,X105,X106] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X106),X107))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X105))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X105))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X106),sK22(X107,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X105)))),X106))))) )),
  inference(superposition,[],[f130,f122])).
fof(f3755,plain,(
  ( ! [X103,X102,X104] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X102))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X103),sK22(X104,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X102)))),X103)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X103),X104))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X102))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) )),
  inference(forward_demodulation,[],[f3712,f117])).
fof(f3712,plain,(
  ( ! [X103,X102,X104] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X103),X104))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X102))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X102))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X103),sK22(X104,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X102)))),X103))))) )),
  inference(superposition,[],[f130,f117])).
fof(f3754,plain,(
  ( ! [X101,X100] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X100),sK22(X101,'const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),X100)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X100),X101))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) )),
  inference(forward_demodulation,[],[f3711,f107])).
fof(f3711,plain,(
  ( ! [X101,X100] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X100),X101))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X100),sK22(X101,'const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),X100))))) )),
  inference(superposition,[],[f130,f107])).
fof(f3753,plain,(
  ( ! [X99,X97,X98,X96] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X96),s('type.num.num',X97))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X98),sK22(X99,'const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X96))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X97)))),X98)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X98),X99))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X96),s('type.num.num',X97))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) )),
  inference(forward_demodulation,[],[f3710,f148])).
fof(f3710,plain,(
  ( ! [X99,X97,X98,X96] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X98),X99))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X96),s('type.num.num',X97))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) | s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X96))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X97))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X98),sK22(X99,'const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X96))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X97)))),X98))))) )),
  inference(superposition,[],[f130,f148])).
fof(f3752,plain,(
  ( ! [X94,X95,X93] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X94),sK22(X95,'const.arithmetic.*_2'(s('type.num.num',X93),s('type.num.num','const.num.|48|_0')),X94)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X94),X95))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) )),
  inference(forward_demodulation,[],[f3709,f112])).
fof(f3709,plain,(
  ( ! [X94,X95,X93] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X94),X95))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) | s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X93),s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X94),sK22(X95,'const.arithmetic.*_2'(s('type.num.num',X93),s('type.num.num','const.num.|48|_0')),X94))))) )),
  inference(superposition,[],[f130,f112])).
fof(f3751,plain,(
  ( ! [X92,X90,X91] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X91),sK22(X92,'const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X90)),X91)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X91),X92))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) )),
  inference(forward_demodulation,[],[f3708,f111])).
fof(f3708,plain,(
  ( ! [X92,X90,X91] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X91),X92))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) | s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X90))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X91),sK22(X92,'const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X90)),X91))))) )),
  inference(superposition,[],[f130,f111])).
fof(f3750,plain,(
  ( ! [X88,X87,X89,X86] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X86),s('type.num.num',X87))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X88),sK22(X89,'const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X86))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X87)))),X88)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X88),X89))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X86),s('type.num.num',X87))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) )),
  inference(forward_demodulation,[],[f3707,f150])).
fof(f3707,plain,(
  ( ! [X88,X87,X89,X86] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X88),X89))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X86),s('type.num.num',X87))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) | s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X86))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X87))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X88),sK22(X89,'const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X86))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X87)))),X88))))) )),
  inference(superposition,[],[f130,f150])).
fof(f3749,plain,(
  ( ! [X85,X84] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X84),sK22(X85,'const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))),X84)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X84),X85))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) )),
  inference(forward_demodulation,[],[f3706,f347])).
fof(f3706,plain,(
  ( ! [X85,X84] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X84),X85))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) | s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X84),sK22(X85,'const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))),X84))))) )),
  inference(superposition,[],[f130,f347])).
fof(f3748,plain,(
  ( ! [X83,X81,X82] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X82),sK22(X83,'const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X81)))))),X82)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X82),X83))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) )),
  inference(forward_demodulation,[],[f3705,f121])).
fof(f3705,plain,(
  ( ! [X83,X81,X82] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X82),X83))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) | s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X81))))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X82),sK22(X83,'const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X81)))))),X82))))) )),
  inference(superposition,[],[f130,f121])).
fof(f3747,plain,(
  ( ! [X80,X78,X79] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X79),sK22(X80,'const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X78)))))),X79)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X79),X80))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) )),
  inference(forward_demodulation,[],[f3704,f118])).
fof(f3704,plain,(
  ( ! [X80,X78,X79] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X79),X80))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) | s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X78))))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X79),sK22(X80,'const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X78)))))),X79))))) )),
  inference(superposition,[],[f130,f118])).
fof(f3746,plain,(
  ( ! [X76,X77,X75] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X76),sK22(X77,'const.arithmetic.EXP_2'(s('type.num.num',X75),s('type.num.num','const.num.|48|_0')),X76)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X76),X77))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) )),
  inference(forward_demodulation,[],[f3703,f161])).
fof(f3703,plain,(
  ( ! [X76,X77,X75] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X76),X77))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) | s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X75),s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X76),sK22(X77,'const.arithmetic.EXP_2'(s('type.num.num',X75),s('type.num.num','const.num.|48|_0')),X76))))) )),
  inference(superposition,[],[f130,f161])).
fof(f3745,plain,(
  ( ! [X74,X72,X71,X73] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X71),s('type.num.num',X72))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X73),sK22(X74,'const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X71))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X72)))),X73)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X73),X74))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X71),s('type.num.num',X72))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) )),
  inference(forward_demodulation,[],[f3702,f149])).
fof(f3702,plain,(
  ( ! [X74,X72,X71,X73] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X73),X74))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X71),s('type.num.num',X72))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) | s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X71))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X72))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X73),sK22(X74,'const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X71))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X72)))),X73))))) )),
  inference(superposition,[],[f130,f149])).
fof(f3744,plain,(
  ( ! [X70,X68,X69] : (s('type.num.num',X68) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X69),sK22(X70,'const.arithmetic.-_2'(s('type.num.num',X68),s('type.num.num','const.num.|48|_0')),X69)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X69),X70))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X68),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) )),
  inference(forward_demodulation,[],[f3701,f116])).
fof(f3701,plain,(
  ( ! [X70,X68,X69] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X69),X70))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X68),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) | s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X68),s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X69),sK22(X70,'const.arithmetic.-_2'(s('type.num.num',X68),s('type.num.num','const.num.|48|_0')),X69))))) )),
  inference(superposition,[],[f130,f116])).
fof(f3743,plain,(
  ( ! [X66,X67,X65] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X66),sK22(X67,'const.arithmetic.-_2'(s('type.num.num',X65),s('type.num.num',X65)),X66)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X66),X67))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) )),
  inference(forward_demodulation,[],[f3700,f114])).
fof(f3700,plain,(
  ( ! [X66,X67,X65] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X66),X67))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) | s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X65),s('type.num.num',X65))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X66),sK22(X67,'const.arithmetic.-_2'(s('type.num.num',X65),s('type.num.num',X65)),X66))))) )),
  inference(superposition,[],[f130,f114])).
fof(f3742,plain,(
  ( ! [X64,X62,X63] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X63),sK22(X64,'const.arithmetic.-_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X62)),X63)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X63),X64))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) )),
  inference(forward_demodulation,[],[f3699,f113])).
fof(f3699,plain,(
  ( ! [X64,X62,X63] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X63),X64))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) | s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X62))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X63),sK22(X64,'const.arithmetic.-_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X62)),X63))))) )),
  inference(superposition,[],[f130,f113])).
fof(f3698,plain,(
  ( ! [X61,X59,X57,X60,X58,X56] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X60),X61))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X57),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X56),sK45(X57,X58,X59,X56)))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X60),sK22(X61,'const.list.LENGTH_1'(s('type.list.list'(X56),sK45(X57,X58,X59,X56))),X60)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X56),X59))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X58),s('type.num.num',X57)))) )),
  inference(superposition,[],[f130,f141])).
fof(f3697,plain,(
  ( ! [X54,X52,X50,X55,X53,X51] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X54),X55))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X52),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X50),sK44(X51,X52,X53,X50)))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X54),sK22(X55,'const.list.LENGTH_1'(s('type.list.list'(X50),sK44(X51,X52,X53,X50))),X54)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X50),X53))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X52),s('type.num.num',X51)))) )),
  inference(superposition,[],[f130,f140])).
fof(f3741,plain,(
  ( ! [X47,X48,X49] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X48),sK22(X49,'const.list.LENGTH_1'(s('type.list.list'(X47),'const.list.NIL_0')),X48)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X48),X49))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) )),
  inference(forward_demodulation,[],[f3696,f707])).
fof(f3696,plain,(
  ( ! [X47,X48,X49] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X48),X49))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X47),'const.list.NIL_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X48),sK22(X49,'const.list.LENGTH_1'(s('type.list.list'(X47),'const.list.NIL_0')),X48))))) )),
  inference(superposition,[],[f130,f707])).
fof(f3740,plain,(
  ( ! [X45,X46] : (s('type.num.num',sK1) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X45),sK22(X46,'const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),X45)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X45),X46))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) ) | $spl6),
  inference(forward_demodulation,[],[f3695,f160])).
fof(f3695,plain,(
  ( ! [X45,X46] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X45),X46))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X45),sK22(X46,'const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),X45))))) ) | $spl6),
  inference(superposition,[],[f130,f160])).
fof(f3739,plain,(
  ( ! [X43,X41,X44,X42] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X41),s('type.num.num',X42))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X43),sK22(X44,'const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X41))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X42)))),X43)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X43),X44))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X41),s('type.num.num',X42))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) )),
  inference(forward_demodulation,[],[f3694,f2758])).
fof(f3694,plain,(
  ( ! [X43,X41,X44,X42] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X43),X44))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X41),s('type.num.num',X42))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) | s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X41))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X42))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X43),sK22(X44,'const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X41))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X42)))),X43))))) )),
  inference(superposition,[],[f130,f2758])).
fof(f3692,plain,(
  ( ! [X35,X33,X36,X34] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X35),X36))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X34),s('type.num.num',X33))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) | s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X33),s('type.num.num',X34))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X35),sK22(X36,'const.arithmetic.+_2'(s('type.num.num',X33),s('type.num.num',X34)),X35))))) )),
  inference(superposition,[],[f130,f146])).
fof(f3738,plain,(
  ( ! [X30,X31,X32] : (s('type.num.num',X30) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X31),sK22(X32,'const.arithmetic.+_2'(s('type.num.num',X30),s('type.num.num','const.num.|48|_0')),X31)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X31),X32))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X30),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) )),
  inference(forward_demodulation,[],[f3691,f115])).
fof(f3691,plain,(
  ( ! [X30,X31,X32] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X31),X32))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X30),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) | s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X30),s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X31),sK22(X32,'const.arithmetic.+_2'(s('type.num.num',X30),s('type.num.num','const.num.|48|_0')),X31))))) )),
  inference(superposition,[],[f130,f115])).
fof(f3737,plain,(
  ( ! [X28,X29,X27] : (s('type.num.num',X27) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X28),sK22(X29,'const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X27)),X28)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X28),X29))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X27),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) )),
  inference(forward_demodulation,[],[f3690,f110])).
fof(f3690,plain,(
  ( ! [X28,X29,X27] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X28),X29))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X27),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) | s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X27))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X28),sK22(X29,'const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X27)),X28))))) )),
  inference(superposition,[],[f130,f110])).
fof(f3736,plain,(
  ( ! [X26,X25] : (s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X25),sK22(X26,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))))),X25)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X25),X26))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) )),
  inference(forward_demodulation,[],[f3689,f2254])).
fof(f3689,plain,(
  ( ! [X26,X25] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X25),X26))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X25),sK22(X26,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))))),X25))))) )),
  inference(superposition,[],[f130,f2254])).
fof(f3735,plain,(
  ( ! [X24,X23,X22] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X22))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X23),sK22(X24,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X22)))))),X23)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X23),X24))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X22))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) )),
  inference(forward_demodulation,[],[f3688,f2884])).
fof(f3688,plain,(
  ( ! [X24,X23,X22] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X23),X24))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X22))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X22))))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X23),sK22(X24,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X22)))))),X23))))) )),
  inference(superposition,[],[f130,f2884])).
fof(f3734,plain,(
  ( ! [X21,X20] : (s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X20),sK22(X21,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))),X20)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X20),X21))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) )),
  inference(forward_demodulation,[],[f3687,f2207])).
fof(f3687,plain,(
  ( ! [X21,X20] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X20),X21))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X20),sK22(X21,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))),X20))))) )),
  inference(superposition,[],[f130,f2207])).
fof(f3733,plain,(
  ( ! [X19,X18] : (s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X18),sK22(X19,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))),X18)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X18),X19))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) )),
  inference(forward_demodulation,[],[f3686,f2060])).
fof(f3686,plain,(
  ( ! [X19,X18] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X18),X19))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X18),sK22(X19,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))),X18))))) )),
  inference(superposition,[],[f130,f2060])).
fof(f3732,plain,(
  ( ! [X17,X16] : (s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X16),sK22(X17,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),X16)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X16),X17))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) )),
  inference(forward_demodulation,[],[f3685,f387])).
fof(f3685,plain,(
  ( ! [X17,X16] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X16),X17))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X16),sK22(X17,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),X16))))) )),
  inference(superposition,[],[f130,f387])).
fof(f3731,plain,(
  ( ! [X14,X15,X13] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X13))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X14),sK22(X15,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X13)))),X14)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X14),X15))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X13))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) )),
  inference(forward_demodulation,[],[f3684,f2757])).
fof(f3684,plain,(
  ( ! [X14,X15,X13] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X14),X15))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X13))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X13))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X14),sK22(X15,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X13)))),X14))))) )),
  inference(superposition,[],[f130,f2757])).
fof(f3730,plain,(
  ( ! [X12,X10,X11] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X10))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X11),sK22(X12,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X10)))))),X11)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X11),X12))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X10))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) )),
  inference(forward_demodulation,[],[f3683,f2885])).
fof(f3683,plain,(
  ( ! [X12,X10,X11] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X11),X12))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X10))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X10))))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X11),sK22(X12,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X10)))))),X11))))) )),
  inference(superposition,[],[f130,f2885])).
fof(f3729,plain,(
  ( ! [X8,X9] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X8),sK22(X9,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))))),X8)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X8),X9))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) )),
  inference(forward_demodulation,[],[f3682,f2255])).
fof(f3682,plain,(
  ( ! [X8,X9] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X8),X9))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X8),sK22(X9,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))))),X8))))) )),
  inference(superposition,[],[f130,f2255])).
fof(f3728,plain,(
  ( ! [X6,X7] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),sK22(X7,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))),X6)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X7))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) )),
  inference(forward_demodulation,[],[f3681,f2059])).
fof(f3681,plain,(
  ( ! [X6,X7] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X7))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),sK22(X7,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))),X6))))) )),
  inference(superposition,[],[f130,f2059])).
fof(f3727,plain,(
  ( ! [X4,X5] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X4),sK22(X5,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')),X4)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X4),X5))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) )),
  inference(forward_demodulation,[],[f3680,f2052])).
fof(f3680,plain,(
  ( ! [X4,X5] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X4),X5))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X4),sK22(X5,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')),X4))))) )),
  inference(superposition,[],[f130,f2052])).
fof(f3726,plain,(
  ( ! [X2,X3] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X2),sK22(X3,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),X2)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X2),X3))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) )),
  inference(forward_demodulation,[],[f3679,f2246])).
fof(f3679,plain,(
  ( ! [X2,X3] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X2),X3))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X2),sK22(X3,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),X2))))) )),
  inference(superposition,[],[f130,f2246])).
fof(f3725,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK22(X1,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X0)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) )),
  inference(forward_demodulation,[],[f3678,f108])).
fof(f3678,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK22(X1,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X0))))) )),
  inference(superposition,[],[f130,f108])).
fof(f3677,plain,(
  ( ! [X12,X10,X8,X11,X9] : (s('type.num.num',X9) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X12),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) | s('type.num.num',X12) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X8),sK22(sK45(X9,X10,X11,X8),X12,X8)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X8),X11))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X10),s('type.num.num',X9)))) )),
  inference(superposition,[],[f130,f141])).
fof(f3676,plain,(
  ( ! [X6,X4,X7,X5,X3] : (s('type.num.num',X5) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X7),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) | s('type.num.num',X7) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X3),sK22(sK44(X4,X5,X6,X3),X7,X3)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X3),X6))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X5),s('type.num.num',X4)))) )),
  inference(superposition,[],[f130,f140])).
fof(f3675,plain,(
  ( ! [X2,X1] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) | s('type.num.num',X2) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),sK22('const.list.NIL_0',X2,X1))))) )),
  inference(superposition,[],[f130,f707])).
fof(f3674,plain,(
  ( ! [X14,X12,X13,X11] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X11),X13))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) | s('type.num.num',X14) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X11),sK22('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X11),X12),s('type.list.list'(X11),X13)),X14,X11))))) )),
  inference(superposition,[],[f130,f127])).
fof(f3673,plain,(
  ( ! [X6,X10,X8,X7,X9] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X9))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X10),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) | s('type.num.num',X10) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),sK22('const.list.APPEND_2'(s('type.list.list'(X6),sK44(X7,X8,X9,X6)),s('type.list.list'(X6),sK45(X7,X8,X9,X6))),X10,X6)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X9))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X8),s('type.num.num',X7)))) )),
  inference(superposition,[],[f130,f142])).
fof(f3724,plain,(
  ( ! [X4,X5,X3] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X5),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) | s('type.num.num',X5) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X3),sK22(sK45('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X3),X4)),X4,X3),X5,X3))))) )),
  inference(forward_demodulation,[],[f3672,f707])).
fof(f3672,plain,(
  ( ! [X4,X5,X3] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X3),'const.list.NIL_0'))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X5),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) | s('type.num.num',X5) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X3),sK22(sK45('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X3),X4)),X4,X3),X5,X3))))) )),
  inference(superposition,[],[f130,f3286])).
fof(f3723,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) | s('type.num.num',X2) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK22(sK44('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0),X2,X0))))) )),
  inference(forward_demodulation,[],[f3671,f707])).
fof(f3671,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.NIL_0'))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) | s('type.num.num',X2) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK22(sK44('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0),X2,X0))))) )),
  inference(superposition,[],[f130,f3186])).
fof(f3670,plain,(
  ( ! [X70,X71] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X70))))) = s('type.num.num',sK41('const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X70)))))),X71,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X71),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X70))))))))) )),
  inference(forward_demodulation,[],[f3656,f2885])).
fof(f3656,plain,(
  ( ! [X70,X71] : (~p(s(bool,happ(s(fun('type.num.num',bool),X71),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X70)))))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X70))))))) = s('type.num.num',sK41('const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X70)))))),X71,'type.num.num'))) )),
  inference(superposition,[],[f134,f2885])).
fof(f3668,plain,(
  ( ! [X17,X16] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X17),s('type.num.num','const.num.SUC_1'(s('type.num.num',X16))))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X17),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X16)))))))))) )),
  inference(forward_demodulation,[],[f3621,f2758])).
fof(f3621,plain,(
  ( ! [X17,X16] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X17),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X16))))))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X17))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X16)))))))) )),
  inference(superposition,[],[f2758,f2885])).
fof(f3667,plain,(
  ( ! [X14,X15] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X14))),s('type.num.num',X15))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X14))))),s('type.num.num',X15)))))) )),
  inference(forward_demodulation,[],[f3620,f2758])).
fof(f3620,plain,(
  ( ! [X14,X15] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X14))))),s('type.num.num',X15))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X14))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X15)))))) )),
  inference(superposition,[],[f2758,f2885])).
fof(f3666,plain,(
  ( ! [X12,X13] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X13),s('type.num.num','const.num.SUC_1'(s('type.num.num',X12))))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X13),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X12)))))))))) )),
  inference(forward_demodulation,[],[f3619,f150])).
fof(f3619,plain,(
  ( ! [X12,X13] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X13),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X12))))))))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X13))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X12)))))))) )),
  inference(superposition,[],[f150,f2885])).
fof(f3665,plain,(
  ( ! [X10,X11] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X10))),s('type.num.num',X11))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X10))))),s('type.num.num',X11)))))) )),
  inference(forward_demodulation,[],[f3618,f150])).
fof(f3618,plain,(
  ( ! [X10,X11] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X10))))),s('type.num.num',X11))))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X10))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X11)))))) )),
  inference(superposition,[],[f150,f2885])).
fof(f3664,plain,(
  ( ! [X8,X9] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X9),s('type.num.num','const.num.SUC_1'(s('type.num.num',X8))))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X9),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X8)))))))))) )),
  inference(forward_demodulation,[],[f3617,f149])).
fof(f3617,plain,(
  ( ! [X8,X9] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X9),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X8))))))))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X9))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X8)))))))) )),
  inference(superposition,[],[f149,f2885])).
fof(f3663,plain,(
  ( ! [X6,X7] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X6))),s('type.num.num',X7))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X6))))),s('type.num.num',X7)))))) )),
  inference(forward_demodulation,[],[f3616,f149])).
fof(f3616,plain,(
  ( ! [X6,X7] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X6))))),s('type.num.num',X7))))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X6))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X7)))))) )),
  inference(superposition,[],[f149,f2885])).
fof(f3662,plain,(
  ( ! [X4,X5] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X5),s('type.num.num','const.num.SUC_1'(s('type.num.num',X4))))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X5),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X4)))))))))) )),
  inference(forward_demodulation,[],[f3615,f148])).
fof(f3615,plain,(
  ( ! [X4,X5] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X5),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X4))))))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X5))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X4)))))))) )),
  inference(superposition,[],[f148,f2885])).
fof(f3661,plain,(
  ( ! [X2,X3] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X2))),s('type.num.num',X3))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X2))))),s('type.num.num',X3)))))) )),
  inference(forward_demodulation,[],[f3614,f148])).
fof(f3614,plain,(
  ( ! [X2,X3] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X2))))),s('type.num.num',X3))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X2))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X3)))))) )),
  inference(superposition,[],[f148,f2885])).
fof(f3660,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X1)))))))))) )),
  inference(forward_demodulation,[],[f3613,f120])).
fof(f3613,plain,(
  ( ! [X1] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X1)))))))))) )),
  inference(superposition,[],[f120,f2885])).
fof(f3659,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X0)))))))))) )),
  inference(forward_demodulation,[],[f3612,f119])).
fof(f3612,plain,(
  ( ! [X0] : (s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X0)))))))))) )),
  inference(superposition,[],[f119,f2885])).
fof(f3570,plain,(
  ( ! [X70,X69] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X69))))) = s('type.num.num',sK41('const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X69)))))),X70,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X70),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X69))))))))) )),
  inference(forward_demodulation,[],[f3556,f2884])).
fof(f3556,plain,(
  ( ! [X70,X69] : (~p(s(bool,happ(s(fun('type.num.num',bool),X70),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X69)))))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X69))))))) = s('type.num.num',sK41('const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X69)))))),X70,'type.num.num'))) )),
  inference(superposition,[],[f134,f2884])).
fof(f3568,plain,(
  ( ! [X17,X16] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X17),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X16))))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X17),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X16)))))))))) )),
  inference(forward_demodulation,[],[f3522,f2758])).
fof(f3522,plain,(
  ( ! [X17,X16] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X17),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X16))))))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X17))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X16)))))))) )),
  inference(superposition,[],[f2758,f2884])).
fof(f3567,plain,(
  ( ! [X14,X15] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X14))),s('type.num.num',X15))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X14))))),s('type.num.num',X15)))))) )),
  inference(forward_demodulation,[],[f3521,f2758])).
fof(f3521,plain,(
  ( ! [X14,X15] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X14))))),s('type.num.num',X15))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X14))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X15)))))) )),
  inference(superposition,[],[f2758,f2884])).
fof(f3566,plain,(
  ( ! [X12,X13] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X13),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X12))))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X13),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X12)))))))))) )),
  inference(forward_demodulation,[],[f3520,f150])).
fof(f3520,plain,(
  ( ! [X12,X13] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X13),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X12))))))))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X13))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X12)))))))) )),
  inference(superposition,[],[f150,f2884])).
fof(f3565,plain,(
  ( ! [X10,X11] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X10))),s('type.num.num',X11))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X10))))),s('type.num.num',X11)))))) )),
  inference(forward_demodulation,[],[f3519,f150])).
fof(f3519,plain,(
  ( ! [X10,X11] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X10))))),s('type.num.num',X11))))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X10))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X11)))))) )),
  inference(superposition,[],[f150,f2884])).
fof(f3564,plain,(
  ( ! [X8,X9] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X9),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X8))))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X9),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X8)))))))))) )),
  inference(forward_demodulation,[],[f3518,f149])).
fof(f3518,plain,(
  ( ! [X8,X9] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X9),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X8))))))))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X9))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X8)))))))) )),
  inference(superposition,[],[f149,f2884])).
fof(f3563,plain,(
  ( ! [X6,X7] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X6))),s('type.num.num',X7))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X6))))),s('type.num.num',X7)))))) )),
  inference(forward_demodulation,[],[f3517,f149])).
fof(f3517,plain,(
  ( ! [X6,X7] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X6))))),s('type.num.num',X7))))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X6))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X7)))))) )),
  inference(superposition,[],[f149,f2884])).
fof(f3562,plain,(
  ( ! [X4,X5] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X5),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X4))))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X5),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X4)))))))))) )),
  inference(forward_demodulation,[],[f3516,f148])).
fof(f3516,plain,(
  ( ! [X4,X5] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X5),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X4))))))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X5))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X4)))))))) )),
  inference(superposition,[],[f148,f2884])).
fof(f3561,plain,(
  ( ! [X2,X3] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X2))),s('type.num.num',X3))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X2))))),s('type.num.num',X3)))))) )),
  inference(forward_demodulation,[],[f3515,f148])).
fof(f3515,plain,(
  ( ! [X2,X3] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X2))))),s('type.num.num',X3))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X2))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X3)))))) )),
  inference(superposition,[],[f148,f2884])).
fof(f3560,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X1))))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X1)))))))))) )),
  inference(forward_demodulation,[],[f3514,f120])).
fof(f3514,plain,(
  ( ! [X1] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X1))))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X1)))))))))) )),
  inference(superposition,[],[f120,f2884])).
fof(f3559,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X0))))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X0)))))))))) )),
  inference(forward_demodulation,[],[f3513,f119])).
fof(f3513,plain,(
  ( ! [X0] : (s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X0))))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X0)))))))))) )),
  inference(superposition,[],[f119,f2884])).
fof(f3468,plain,(
  ( ! [X26,X24,X23,X25,X22] : (~p(s(bool,happ(s(fun('type.list.list'(X22),bool),X26),s('type.list.list'(X22),X25)))) | s('type.list.list'(X22),'const.list.APPEND_2'(s('type.list.list'(X22),sK44(X23,X24,X25,X22)),s('type.list.list'(X22),sK45(X23,X24,X25,X22)))) = s('type.list.list'(X22),sK41('const.list.APPEND_2'(s('type.list.list'(X22),sK44(X23,X24,X25,X22)),s('type.list.list'(X22),sK45(X23,X24,X25,X22))),X26,'type.list.list'(X22))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X22),X25))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X24),s('type.num.num',X23)))) )),
  inference(superposition,[],[f134,f142])).
fof(f3467,plain,(
  ( ! [X21,X19,X17,X20,X18,X16] : (~p(s(bool,happ(s(fun('type.list.list'(X16),bool),X20),s('type.list.list'(X16),X19)))) | p(s(bool,happ(s(fun('type.list.list'(X16),bool),X20),s('type.list.list'(X16),X21)))) | s('type.list.list'(X16),X21) != s('type.list.list'(X16),'const.list.APPEND_2'(s('type.list.list'(X16),sK44(X17,X18,X19,X16)),s('type.list.list'(X16),sK45(X17,X18,X19,X16)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X16),X19))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X18),s('type.num.num',X17)))) )),
  inference(superposition,[],[f133,f142])).
fof(f3466,plain,(
  ( ! [X14,X12,X15,X13] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X12),X15))) | s('type.list.list'(X12),'const.list.NIL_0') = s('type.list.list'(X12),'const.list.APPEND_2'(s('type.list.list'(X12),sK44(X13,X14,X15,X12)),s('type.list.list'(X12),sK45(X13,X14,X15,X12)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X12),X15))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X14),s('type.num.num',X13)))) )),
  inference(superposition,[],[f125,f142])).
fof(f3465,plain,(
  ( ! [X10,X8,X11,X9] : (s('type.list.list'(X8),'const.list.NIL_0') != s('type.list.list'(X8),X11) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X8),'const.list.APPEND_2'(s('type.list.list'(X8),sK44(X9,X10,X11,X8)),s('type.list.list'(X8),sK45(X9,X10,X11,X8)))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X8),X11))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X10),s('type.num.num',X9)))) )),
  inference(superposition,[],[f126,f142])).
fof(f3464,plain,(
  ( ! [X6,X4,X7,X5] : (s('type.list.list'(X4),'const.list.NIL_0') = s('type.list.list'(X4),sK44('const.list.LENGTH_1'(s('type.list.list'(X4),X7)),'const.num.|48|_0','const.list.APPEND_2'(s('type.list.list'(X4),sK44(X5,X6,X7,X4)),s('type.list.list'(X4),sK45(X5,X6,X7,X4))),X4)) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X4),X7))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num',X5)))) )),
  inference(superposition,[],[f3186,f142])).
fof(f3463,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),sK45('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X0),X3)),'const.list.APPEND_2'(s('type.list.list'(X0),sK44(X1,X2,X3,X0)),s('type.list.list'(X0),sK45(X1,X2,X3,X0))),X0)) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X1)))) )),
  inference(superposition,[],[f3286,f142])).
fof(f3472,plain,(
  ( ! [X0,X1] : (s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.NIL_0'),s('type.list.list'(X0),sK45('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0))))) )),
  inference(forward_demodulation,[],[f3459,f3186])).
fof(f3459,plain,(
  ( ! [X0,X1] : (s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),sK44('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0)),s('type.list.list'(X0),sK45('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0))))) )),
  inference(unit_resulting_resolution,[],[f110,f142])).
fof(f3471,plain,(
  ( ! [X0,X1] : (s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),sK44('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X0),X1)),X1,X0)),s('type.list.list'(X0),'const.list.NIL_0')))) )),
  inference(forward_demodulation,[],[f3460,f3286])).
fof(f3460,plain,(
  ( ! [X0,X1] : (s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),sK44('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X0),X1)),X1,X0)),s('type.list.list'(X0),sK45('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X0),X1)),X1,X0))))) )),
  inference(unit_resulting_resolution,[],[f115,f142])).
fof(f3458,plain,(
  ( ! [X26] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.num.num',sK41('const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))))),X26,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X26),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0'))))))))) )),
  inference(forward_demodulation,[],[f3454,f2255])).
fof(f3454,plain,(
  ( ! [X26] : (~p(s(bool,happ(s(fun('type.num.num',bool),X26),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num',sK41('const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))))),X26,'type.num.num'))) )),
  inference(superposition,[],[f134,f2255])).
fof(f3420,plain,(
  ( ! [X7] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X7),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0'))))))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X7))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))))))) )),
  inference(superposition,[],[f2758,f2255])).
fof(f3419,plain,(
  ( ! [X6] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0'))))),s('type.num.num',X6))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X6)))))) )),
  inference(superposition,[],[f2758,f2255])).
fof(f3418,plain,(
  ( ! [X5] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X5),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0'))))))))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X5))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))))))) )),
  inference(superposition,[],[f150,f2255])).
fof(f3417,plain,(
  ( ! [X4] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0'))))),s('type.num.num',X4))))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X4)))))) )),
  inference(superposition,[],[f150,f2255])).
fof(f3416,plain,(
  ( ! [X3] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X3),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0'))))))))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X3))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))))))) )),
  inference(superposition,[],[f149,f2255])).
fof(f3415,plain,(
  ( ! [X2] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0'))))),s('type.num.num',X2))))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2)))))) )),
  inference(superposition,[],[f149,f2255])).
fof(f3414,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0'))))))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))))))) )),
  inference(superposition,[],[f148,f2255])).
fof(f3413,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0'))))),s('type.num.num',X0))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))) )),
  inference(superposition,[],[f148,f2255])).
fof(f3412,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))))))))),
  inference(superposition,[],[f120,f2255])).
fof(f3411,plain,(
  s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))))))))),
  inference(superposition,[],[f119,f2255])).
fof(f3410,plain,(
  ( ! [X26] : (s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.num.num',sK41('const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))))),X26,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X26),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0'))))))))) )),
  inference(forward_demodulation,[],[f3406,f2254])).
fof(f3406,plain,(
  ( ! [X26] : (~p(s(bool,happ(s(fun('type.num.num',bool),X26),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num',sK41('const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))))),X26,'type.num.num'))) )),
  inference(superposition,[],[f134,f2254])).
fof(f3372,plain,(
  ( ! [X7] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X7),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0'))))))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X7))),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))))))) )),
  inference(superposition,[],[f2758,f2254])).
fof(f3371,plain,(
  ( ! [X6] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0'))))),s('type.num.num',X6))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X6)))))) )),
  inference(superposition,[],[f2758,f2254])).
fof(f3370,plain,(
  ( ! [X5] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X5),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0'))))))))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X5))),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))))))) )),
  inference(superposition,[],[f150,f2254])).
fof(f3369,plain,(
  ( ! [X4] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0'))))),s('type.num.num',X4))))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X4)))))) )),
  inference(superposition,[],[f150,f2254])).
fof(f3368,plain,(
  ( ! [X3] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X3),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0'))))))))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X3))),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))))))) )),
  inference(superposition,[],[f149,f2254])).
fof(f3367,plain,(
  ( ! [X2] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0'))))),s('type.num.num',X2))))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2)))))) )),
  inference(superposition,[],[f149,f2254])).
fof(f3366,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0'))))))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))))))) )),
  inference(superposition,[],[f148,f2254])).
fof(f3365,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0'))))),s('type.num.num',X0))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))) )),
  inference(superposition,[],[f148,f2254])).
fof(f3364,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))))))))),
  inference(superposition,[],[f120,f2254])).
fof(f3363,plain,(
  s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))))))))),
  inference(superposition,[],[f119,f2254])).
fof(f3362,plain,(
  ( ! [X21,X22,X20] : (s(bool,'F_0') != s(bool,f(s(X20,sK46(X21,X22,bool,X20)))) | s(fun(X20,bool),X21) = s(fun(X20,bool),X22) | s(bool,'T_0') = s(bool,g(s(X20,sK46(X21,X22,bool,X20))))) )),
  inference(superposition,[],[f153,f124])).
fof(f3360,plain,(
  ( ! [X14,X12,X15,X13] : (s(bool,X15) != s(bool,f(s(X12,sK46(X13,X14,bool,X12)))) | s(fun(X12,bool),X13) = s(fun(X12,bool),X14) | s(bool,'T_0') = s(bool,g(s(X12,sK46(X13,X14,bool,X12)))) | s(bool,'T_0') = s(bool,X15)) )),
  inference(superposition,[],[f153,f225])).
fof(f3358,plain,(
  ( ! [X6,X4,X7,X5] : (s(bool,'T_0') != s(bool,f(s(X4,sK46(X5,X6,bool,X4)))) | s(fun(X4,bool),X5) = s(fun(X4,bool),X6) | s(bool,X7) = s(bool,g(s(X4,sK46(X5,X6,bool,X4)))) | s(bool,'T_0') = s(bool,X7)) )),
  inference(superposition,[],[f153,f225])).
fof(f3357,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,f(s(X0,sK46(X1,X2,bool,X0)))) != s(bool,happ(s(fun('type.num.num',bool),X3),s('type.num.num',sK1))) | s(fun(X0,bool),X1) = s(fun(X0,bool),X2) | s('type.num.num',sK1) = s('type.num.num',sK41('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),X3,'type.num.num')) | s(bool,'T_0') = s(bool,g(s(X0,sK46(X1,X2,bool,X0))))) ) | $spl6),
  inference(superposition,[],[f153,f1005])).
fof(f3356,plain,(
  ( ! [X21,X22,X20] : (s(X22,f(s(bool,'F_0'))) != s(X22,g(s(bool,'F_0'))) | s(fun(bool,X22),X20) = s(fun(bool,X22),X21) | s(bool,'T_0') = s(bool,sK46(X20,X21,X22,bool))) )),
  inference(superposition,[],[f153,f124])).
fof(f3354,plain,(
  ( ! [X14,X12,X15,X13] : (s(X14,f(s(bool,X15))) != s(X14,g(s(bool,X15))) | s(fun(bool,X14),X12) = s(fun(bool,X14),X13) | s(bool,'T_0') = s(bool,sK46(X12,X13,X14,bool)) | s(bool,'T_0') = s(bool,X15)) )),
  inference(superposition,[],[f153,f225])).
fof(f3352,plain,(
  ( ! [X6,X4,X7,X5] : (s(X6,f(s(bool,'T_0'))) != s(X6,g(s(bool,'T_0'))) | s(fun(bool,X6),X4) = s(fun(bool,X6),X5) | s(bool,X7) = s(bool,sK46(X4,X5,X6,bool)) | s(bool,'T_0') = s(bool,X7)) )),
  inference(superposition,[],[f153,f225])).
fof(f3351,plain,(
  ( ! [X2,X0,X3,X1] : (s(X2,f(s(bool,happ(s(fun('type.num.num',bool),X3),s('type.num.num',sK1))))) != s(X2,g(s(bool,happ(s(fun('type.num.num',bool),X3),s('type.num.num',sK1))))) | s(fun(bool,X2),X0) = s(fun(bool,X2),X1) | s('type.num.num',sK1) = s('type.num.num',sK41('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),X3,'type.num.num')) | s(bool,'T_0') = s(bool,sK46(X0,X1,X2,bool))) ) | $spl6),
  inference(superposition,[],[f153,f1005])).
fof(f3350,plain,(
  ( ! [X14,X12,X13] : (s('type.list.list'(X12),'const.list.NIL_0') = s('type.list.list'(X12),sK41(sK45('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X12),X13)),X13,X12),X14,'type.list.list'(X12))) | ~p(s(bool,happ(s(fun('type.list.list'(X12),bool),X14),s('type.list.list'(X12),'const.list.NIL_0'))))) )),
  inference(forward_demodulation,[],[f3341,f3286])).
fof(f3341,plain,(
  ( ! [X14,X12,X13] : (~p(s(bool,happ(s(fun('type.list.list'(X12),bool),X14),s('type.list.list'(X12),'const.list.NIL_0')))) | s('type.list.list'(X12),sK45('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X12),X13)),X13,X12)) = s('type.list.list'(X12),sK41(sK45('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X12),X13)),X13,X12),X14,'type.list.list'(X12)))) )),
  inference(superposition,[],[f134,f3286])).
fof(f3337,plain,(
  ( ! [X2,X3] : (s('type.list.list'(X2),'const.list.NIL_0') = s('type.list.list'(X2),sK44('const.list.LENGTH_1'(s('type.list.list'(X2),'const.list.NIL_0')),'const.num.|48|_0',sK45('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X2),X3)),X3,X2),X2))) )),
  inference(superposition,[],[f3186,f3286])).
fof(f3335,plain,(
  ( ! [X6,X4,X5] : (s('type.list.list'(X4),'const.list.NIL_0') = s('type.list.list'(X4),sK45('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X4),X6)),'const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X4),X5),s('type.list.list'(X4),X6)),X4))) )),
  inference(superposition,[],[f3286,f127])).
fof(f3334,plain,(
  ( ! [X2,X3] : (s('type.list.list'(X2),'const.list.NIL_0') = s('type.list.list'(X2),sK45('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X2),'const.list.NIL_0')),sK45('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X2),X3)),X3,X2),X2))) )),
  inference(superposition,[],[f3286,f3286])).
fof(f3333,plain,(
  ( ! [X0,X1] : (s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),sK45('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.NIL_0')),sK44('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0),X0))) )),
  inference(superposition,[],[f3286,f3186])).
fof(f3288,plain,(
  ( ! [X4,X2,X3] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X2),sK45('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X2),X4)),'const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X2),X3),s('type.list.list'(X2),X4)),X2))))) )),
  inference(superposition,[],[f3248,f127])).
fof(f3287,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK45('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.NIL_0')),sK44('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0),X0))))) )),
  inference(superposition,[],[f3248,f3186])).
fof(f3286,plain,(
  ( ! [X0,X1] : (s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),sK45('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X0),X1)),X1,X0))) )),
  inference(unit_resulting_resolution,[],[f3248,f125])).
fof(f3283,plain,(
  ( ! [X158,X156,X154,X157,X155] : (~p(s(bool,happ(s(fun('type.num.num',bool),X158),s('type.num.num',X155)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X154),sK45(X155,X156,X157,X154)))) = s('type.num.num',sK41('const.list.LENGTH_1'(s('type.list.list'(X154),sK45(X155,X156,X157,X154))),X158,'type.num.num')) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X154),X157))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X156),s('type.num.num',X155)))) )),
  inference(superposition,[],[f134,f141])).
fof(f3282,plain,(
  ( ! [X152,X151,X149,X153,X150,X148] : (~p(s(bool,happ(s(fun('type.num.num',bool),X152),s('type.num.num',X149)))) | p(s(bool,happ(s(fun('type.num.num',bool),X152),s('type.num.num',X153)))) | s('type.num.num',X153) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X148),sK45(X149,X150,X151,X148)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X148),X151))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X150),s('type.num.num',X149)))) )),
  inference(superposition,[],[f133,f141])).
fof(f3249,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.num.num','const.num.|48|_0') != s('type.num.num',X1) | s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),sK45(X1,X2,X3,X0)) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X1)))) )),
  inference(superposition,[],[f125,f141])).
fof(f3247,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK45('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0))))) )),
  inference(unit_resulting_resolution,[],[f110,f141])).
fof(f3248,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK45('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X0),X1)),X1,X0))))) )),
  inference(unit_resulting_resolution,[],[f115,f141])).
fof(f3246,plain,(
  ( ! [X12,X10,X11] : (s('type.list.list'(X10),'const.list.NIL_0') = s('type.list.list'(X10),sK41(sK44('const.list.LENGTH_1'(s('type.list.list'(X10),X11)),'const.num.|48|_0',X11,X10),X12,'type.list.list'(X10))) | ~p(s(bool,happ(s(fun('type.list.list'(X10),bool),X12),s('type.list.list'(X10),'const.list.NIL_0'))))) )),
  inference(forward_demodulation,[],[f3238,f3186])).
fof(f3238,plain,(
  ( ! [X12,X10,X11] : (~p(s(bool,happ(s(fun('type.list.list'(X10),bool),X12),s('type.list.list'(X10),'const.list.NIL_0')))) | s('type.list.list'(X10),sK44('const.list.LENGTH_1'(s('type.list.list'(X10),X11)),'const.num.|48|_0',X11,X10)) = s('type.list.list'(X10),sK41(sK44('const.list.LENGTH_1'(s('type.list.list'(X10),X11)),'const.num.|48|_0',X11,X10),X12,'type.list.list'(X10)))) )),
  inference(superposition,[],[f134,f3186])).
fof(f3233,plain,(
  ( ! [X4,X2,X3] : (s('type.list.list'(X2),'const.list.NIL_0') = s('type.list.list'(X2),sK44('const.list.LENGTH_1'(s('type.list.list'(X2),X4)),'const.num.|48|_0','const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X2),X3),s('type.list.list'(X2),X4)),X2))) )),
  inference(superposition,[],[f3186,f127])).
fof(f3232,plain,(
  ( ! [X0,X1] : (s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),sK44('const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.NIL_0')),'const.num.|48|_0',sK44('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0),X0))) )),
  inference(superposition,[],[f3186,f3186])).
fof(f3187,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK44('const.list.LENGTH_1'(s('type.list.list'(X0),X2)),'const.num.|48|_0','const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X0),X1),s('type.list.list'(X0),X2)),X0))))) )),
  inference(superposition,[],[f3147,f127])).
fof(f3186,plain,(
  ( ! [X0,X1] : (s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),sK44('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0))) )),
  inference(unit_resulting_resolution,[],[f3147,f125])).
fof(f3183,plain,(
  ( ! [X158,X156,X154,X157,X155] : (~p(s(bool,happ(s(fun('type.num.num',bool),X158),s('type.num.num',X156)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X154),sK44(X155,X156,X157,X154)))) = s('type.num.num',sK41('const.list.LENGTH_1'(s('type.list.list'(X154),sK44(X155,X156,X157,X154))),X158,'type.num.num')) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X154),X157))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X156),s('type.num.num',X155)))) )),
  inference(superposition,[],[f134,f140])).
fof(f3182,plain,(
  ( ! [X152,X151,X149,X153,X150,X148] : (~p(s(bool,happ(s(fun('type.num.num',bool),X152),s('type.num.num',X150)))) | p(s(bool,happ(s(fun('type.num.num',bool),X152),s('type.num.num',X153)))) | s('type.num.num',X153) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X148),sK44(X149,X150,X151,X148)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X148),X151))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X150),s('type.num.num',X149)))) )),
  inference(superposition,[],[f133,f140])).
fof(f3149,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.num.num','const.num.|48|_0') != s('type.num.num',X2) | s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),sK44(X1,X2,X3,X0)) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X1)))) )),
  inference(superposition,[],[f125,f140])).
fof(f3147,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK44('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0))))) )),
  inference(unit_resulting_resolution,[],[f110,f140])).
fof(f3148,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK44('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X0),X1)),X1,X0))))) )),
  inference(unit_resulting_resolution,[],[f115,f140])).
fof(f3146,plain,(
  ( ! [X26] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num',sK41('const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),X26,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X26),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) )),
  inference(forward_demodulation,[],[f3130,f2246])).
fof(f3130,plain,(
  ( ! [X26] : (~p(s(bool,happ(s(fun('type.num.num',bool),X26),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.num.num',sK41('const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),X26,'type.num.num'))) )),
  inference(superposition,[],[f134,f2246])).
fof(f3144,plain,(
  ( ! [X7] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X7),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X7),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) )),
  inference(forward_demodulation,[],[f3096,f2758])).
fof(f3096,plain,(
  ( ! [X7] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X7),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X7))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) )),
  inference(superposition,[],[f2758,f2246])).
fof(f3143,plain,(
  ( ! [X6] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X6))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X6)))))) )),
  inference(forward_demodulation,[],[f3095,f2758])).
fof(f3095,plain,(
  ( ! [X6] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X6))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X6)))))) )),
  inference(superposition,[],[f2758,f2246])).
fof(f3142,plain,(
  ( ! [X5] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X5),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X5),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) )),
  inference(forward_demodulation,[],[f3094,f150])).
fof(f3094,plain,(
  ( ! [X5] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X5),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X5))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) )),
  inference(superposition,[],[f150,f2246])).
fof(f3141,plain,(
  ( ! [X4] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X4))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X4)))))) )),
  inference(forward_demodulation,[],[f3093,f150])).
fof(f3093,plain,(
  ( ! [X4] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X4))))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X4)))))) )),
  inference(superposition,[],[f150,f2246])).
fof(f3140,plain,(
  ( ! [X3] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X3),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X3),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) )),
  inference(forward_demodulation,[],[f3092,f149])).
fof(f3092,plain,(
  ( ! [X3] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X3),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X3))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) )),
  inference(superposition,[],[f149,f2246])).
fof(f3139,plain,(
  ( ! [X2] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X2))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X2)))))) )),
  inference(forward_demodulation,[],[f3091,f149])).
fof(f3091,plain,(
  ( ! [X2] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X2))))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2)))))) )),
  inference(superposition,[],[f149,f2246])).
fof(f3138,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) )),
  inference(forward_demodulation,[],[f3090,f148])).
fof(f3090,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) )),
  inference(superposition,[],[f148,f2246])).
fof(f3137,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X0))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X0)))))) )),
  inference(forward_demodulation,[],[f3089,f148])).
fof(f3089,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X0))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))) )),
  inference(superposition,[],[f148,f2246])).
fof(f3136,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))),
  inference(forward_demodulation,[],[f3135,f107])).
fof(f3135,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))),
  inference(forward_demodulation,[],[f3134,f122])).
fof(f3134,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))),
  inference(forward_demodulation,[],[f3088,f120])).
fof(f3088,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))),
  inference(superposition,[],[f120,f2246])).
fof(f3133,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))),
  inference(forward_demodulation,[],[f3087,f119])).
fof(f3087,plain,(
  s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))),
  inference(superposition,[],[f119,f2246])).
fof(f3086,plain,(
  ( ! [X26] : (s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.num.num',sK41('const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))),X26,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X26),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) )),
  inference(forward_demodulation,[],[f3074,f2207])).
fof(f3074,plain,(
  ( ! [X26] : (~p(s(bool,happ(s(fun('type.num.num',bool),X26),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num',sK41('const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))),X26,'type.num.num'))) )),
  inference(superposition,[],[f134,f2207])).
fof(f3084,plain,(
  ( ! [X7] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X7),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X7),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))))) )),
  inference(forward_demodulation,[],[f3040,f2802])).
fof(f3040,plain,(
  ( ! [X7] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X7),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X7))),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))) )),
  inference(superposition,[],[f2758,f2207])).
fof(f3083,plain,(
  ( ! [X6] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X6))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))),s('type.num.num',X6)))))) )),
  inference(forward_demodulation,[],[f3039,f2763])).
fof(f3039,plain,(
  ( ! [X6] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))),s('type.num.num',X6))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X6)))))) )),
  inference(superposition,[],[f2758,f2207])).
fof(f3082,plain,(
  ( ! [X5] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X5),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X5),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))))) )),
  inference(forward_demodulation,[],[f3038,f2499])).
fof(f3038,plain,(
  ( ! [X5] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X5),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X5))),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))) )),
  inference(superposition,[],[f150,f2207])).
fof(f3081,plain,(
  ( ! [X4] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X4))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))),s('type.num.num',X4)))))) )),
  inference(forward_demodulation,[],[f3037,f2498])).
fof(f3037,plain,(
  ( ! [X4] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))),s('type.num.num',X4))))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X4)))))) )),
  inference(superposition,[],[f150,f2207])).
fof(f3080,plain,(
  ( ! [X3] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X3),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X3),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))))) )),
  inference(forward_demodulation,[],[f3036,f2497])).
fof(f3036,plain,(
  ( ! [X3] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X3),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X3))),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))) )),
  inference(superposition,[],[f149,f2207])).
fof(f3079,plain,(
  ( ! [X2] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X2))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))),s('type.num.num',X2)))))) )),
  inference(forward_demodulation,[],[f3035,f2496])).
fof(f3035,plain,(
  ( ! [X2] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))),s('type.num.num',X2))))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2)))))) )),
  inference(superposition,[],[f149,f2207])).
fof(f3078,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))))) )),
  inference(forward_demodulation,[],[f3034,f2495])).
fof(f3034,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))) )),
  inference(superposition,[],[f148,f2207])).
fof(f3077,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X0))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))),s('type.num.num',X0)))))) )),
  inference(forward_demodulation,[],[f3033,f2494])).
fof(f3033,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))),s('type.num.num',X0))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))) )),
  inference(superposition,[],[f148,f2207])).
fof(f3032,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))))),
  inference(superposition,[],[f120,f2207])).
fof(f3031,plain,(
  s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))))),
  inference(superposition,[],[f119,f2207])).
fof(f2985,plain,(
  ( ! [X2,X3] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X3))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X3))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2)))))) )),
  inference(superposition,[],[f2758,f146])).
fof(f3028,plain,(
  ( ! [X4,X3] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X4),s('type.num.num',X3))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X4),s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X3)))))))) )),
  inference(forward_demodulation,[],[f2982,f2758])).
fof(f2982,plain,(
  ( ! [X4,X3] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X4),s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X3))))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X4))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X3)))))) )),
  inference(superposition,[],[f2758,f2757])).
fof(f3025,plain,(
  ( ! [X4,X3] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X3),s('type.num.num',X4))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X3))),s('type.num.num',X4)))))) )),
  inference(forward_demodulation,[],[f2943,f2758])).
fof(f2943,plain,(
  ( ! [X4,X3] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X3))),s('type.num.num',X4))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X3))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X4)))))) )),
  inference(superposition,[],[f2758,f2757])).
fof(f2893,plain,(
  ( ! [X61,X60] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X60))) = s('type.num.num',sK41('const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X60)))),X61,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X61),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X60))))))) )),
  inference(forward_demodulation,[],[f2881,f2757])).
fof(f2881,plain,(
  ( ! [X61,X60] : (~p(s(bool,happ(s(fun('type.num.num',bool),X61),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X60)))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X60))))) = s('type.num.num',sK41('const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X60)))),X61,'type.num.num'))) )),
  inference(superposition,[],[f134,f2757])).
fof(f2891,plain,(
  ( ! [X12,X13] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X13),s('type.num.num',X12))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X13),s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X12)))))))) )),
  inference(forward_demodulation,[],[f2850,f150])).
fof(f2850,plain,(
  ( ! [X12,X13] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X13),s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X12))))))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X13))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X12)))))) )),
  inference(superposition,[],[f150,f2757])).
fof(f2890,plain,(
  ( ! [X10,X11] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X10),s('type.num.num',X11))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X10))),s('type.num.num',X11)))))) )),
  inference(forward_demodulation,[],[f2849,f150])).
fof(f2849,plain,(
  ( ! [X10,X11] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X10))),s('type.num.num',X11))))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X10))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X11)))))) )),
  inference(superposition,[],[f150,f2757])).
fof(f2889,plain,(
  ( ! [X8,X9] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X9),s('type.num.num',X8))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X9),s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X8)))))))) )),
  inference(forward_demodulation,[],[f2848,f149])).
fof(f2848,plain,(
  ( ! [X8,X9] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X9),s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X8))))))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X9))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X8)))))) )),
  inference(superposition,[],[f149,f2757])).
fof(f2888,plain,(
  ( ! [X6,X7] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X6),s('type.num.num',X7))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X6))),s('type.num.num',X7)))))) )),
  inference(forward_demodulation,[],[f2847,f149])).
fof(f2847,plain,(
  ( ! [X6,X7] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X6))),s('type.num.num',X7))))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X6))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X7)))))) )),
  inference(superposition,[],[f149,f2757])).
fof(f2887,plain,(
  ( ! [X4,X5] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X5),s('type.num.num',X4))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X5),s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X4)))))))) )),
  inference(forward_demodulation,[],[f2846,f148])).
fof(f2846,plain,(
  ( ! [X4,X5] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X5),s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X4))))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X5))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X4)))))) )),
  inference(superposition,[],[f148,f2757])).
fof(f2886,plain,(
  ( ! [X2,X3] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X3))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X2))),s('type.num.num',X3)))))) )),
  inference(forward_demodulation,[],[f2845,f148])).
fof(f2845,plain,(
  ( ! [X2,X3] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X2))),s('type.num.num',X3))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X3)))))) )),
  inference(superposition,[],[f148,f2757])).
fof(f2885,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X1)))))))) )),
  inference(forward_demodulation,[],[f2844,f120])).
fof(f2844,plain,(
  ( ! [X1] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X1)))))))) )),
  inference(superposition,[],[f120,f2757])).
fof(f2884,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X0))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X0)))))))) )),
  inference(forward_demodulation,[],[f2843,f119])).
fof(f2843,plain,(
  ( ! [X0] : (s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X0)))))))) )),
  inference(superposition,[],[f119,f2757])).
fof(f2810,plain,(
  ( ! [X80,X81,X82] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X80),s('type.num.num',X81))))) = s('type.num.num',sK41('const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X80))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X81)))),X82,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X82),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X80),s('type.num.num',X81))))))))) )),
  inference(forward_demodulation,[],[f2809,f2758])).
fof(f2809,plain,(
  ( ! [X80,X81,X82] : (~p(s(bool,happ(s(fun('type.num.num',bool),X82),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X80),s('type.num.num',X81)))))))) | s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X80))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X81))))) = s('type.num.num',sK41('const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X80))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X81)))),X82,'type.num.num'))) )),
  inference(forward_demodulation,[],[f2753,f2757])).
fof(f2753,plain,(
  ( ! [X80,X81,X82] : (~p(s(bool,happ(s(fun('type.num.num',bool),X82),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X80),s('type.num.num',X81)))))))))) | s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X80))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X81))))) = s('type.num.num',sK41('const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X80))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X81)))),X82,'type.num.num'))) )),
  inference(superposition,[],[f134,f151])).
fof(f2803,plain,(
  ( ! [X2,X3] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X3),s('type.num.num',X2))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X3)))))))) )),
  inference(forward_demodulation,[],[f2719,f2758])).
fof(f2719,plain,(
  ( ! [X2,X3] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X3))))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X3))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2)))))) )),
  inference(superposition,[],[f151,f146])).
fof(f2802,plain,(
  ( ! [X4] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X4),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X4))),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))) )),
  inference(forward_demodulation,[],[f2718,f2757])).
fof(f2718,plain,(
  ( ! [X4] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X4))),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X4),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) )),
  inference(superposition,[],[f151,f387])).
fof(f2801,plain,(
  ( ! [X3] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X3),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X3))),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))))) )),
  inference(forward_demodulation,[],[f2717,f2757])).
fof(f2717,plain,(
  ( ! [X3] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X3))),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X3),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))))))))) )),
  inference(superposition,[],[f151,f2060])).
fof(f2800,plain,(
  ( ! [X2] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))) )),
  inference(forward_demodulation,[],[f2799,f2796])).
fof(f2799,plain,(
  ( ! [X2] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))) )),
  inference(forward_demodulation,[],[f2716,f2757])).
fof(f2716,plain,(
  ( ! [X2] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))))) )),
  inference(superposition,[],[f151,f2059])).
fof(f2796,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))) )),
  inference(forward_demodulation,[],[f2714,f2757])).
fof(f2714,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) )),
  inference(superposition,[],[f151,f108])).
fof(f2763,plain,(
  ( ! [X4] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X4))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X4)))))) )),
  inference(forward_demodulation,[],[f2681,f2757])).
fof(f2681,plain,(
  ( ! [X4] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X4))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X4)))))))) )),
  inference(superposition,[],[f151,f387])).
fof(f2762,plain,(
  ( ! [X3] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num',X3))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X3)))))) )),
  inference(forward_demodulation,[],[f2680,f2757])).
fof(f2680,plain,(
  ( ! [X3] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X3))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num',X3)))))))) )),
  inference(superposition,[],[f151,f2060])).
fof(f2761,plain,(
  ( ! [X2] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X2))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num',X2)))))) )),
  inference(forward_demodulation,[],[f2760,f2759])).
fof(f2760,plain,(
  ( ! [X2] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num',X2))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2)))))) )),
  inference(forward_demodulation,[],[f2679,f2757])).
fof(f2679,plain,(
  ( ! [X2] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num',X2)))))))) )),
  inference(superposition,[],[f151,f2059])).
fof(f2759,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X0))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))) )),
  inference(backward_demodulation,[],[f2757,f2677])).
fof(f2758,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))) )),
  inference(backward_demodulation,[],[f2757,f151])).
fof(f2757,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X1)))))) )),
  inference(forward_demodulation,[],[f2756,f110])).
fof(f2756,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X1))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))) )),
  inference(forward_demodulation,[],[f2678,f110])).
fof(f2678,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X1)))))))) )),
  inference(superposition,[],[f151,f2052])).
fof(f2677,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X0)))))))) )),
  inference(superposition,[],[f151,f108])).
fof(f2630,plain,(
  ( ! [X0,X1] : (s(bool,'T_0') != s(bool,happ(s(fun('type.num.num',bool),X1),s('type.num.num',sK1))) | s('type.num.num',sK1) = s('type.num.num',sK41('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),'const.bool.COND_3'(s(bool,'F_0'),s(fun('type.num.num',bool),X0),s(fun('type.num.num',bool),X1)),'type.num.num'))) ) | $spl34),
  inference(superposition,[],[f2628,f127])).
fof(f2627,plain,(
  ( ! [X2,X0,X1] : (s(bool,X2) = s(bool,happ(s(fun('type.num.num',bool),X1),s('type.num.num',sK1))) | s(bool,'T_0') != s(bool,happ(s(fun('type.num.num',bool),X1),s('type.num.num',sK1))) | s('type.num.num',sK1) = s('type.num.num',sK41('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),'const.bool.COND_3'(s(bool,'F_0'),s(fun('type.num.num',bool),X0),s(fun('type.num.num',bool),X1)),'type.num.num'))) ) | $spl6),
  inference(forward_demodulation,[],[f2610,f127])).
fof(f2610,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') != s(bool,happ(s(fun('type.num.num',bool),X1),s('type.num.num',sK1))) | s(bool,X2) = s(bool,happ(s(fun('type.num.num',bool),'const.bool.COND_3'(s(bool,'F_0'),s(fun('type.num.num',bool),X0),s(fun('type.num.num',bool),X1))),s('type.num.num',sK1))) | s('type.num.num',sK1) = s('type.num.num',sK41('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),'const.bool.COND_3'(s(bool,'F_0'),s(fun('type.num.num',bool),X0),s(fun('type.num.num',bool),X1)),'type.num.num'))) ) | $spl6),
  inference(superposition,[],[f1049,f127])).
fof(f2603,plain,(
  ( ! [X74,X72,X71,X75,X73] : (~p(s(bool,X72)) | p(s(bool,happ(s(fun(X73,bool),X74),s(X73,sK43('const.bool.COND_3'(s(bool,'F_0'),s(bool,X71),s(bool,X72)),X74,X73))))) | ~p(s(bool,happ(s(fun(X73,bool),X74),s(X73,X75))))) )),
  inference(superposition,[],[f138,f127])).
fof(f2602,plain,(
  ( ! [X70,X68,X66,X69,X67] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X67),s('type.num.num',X66)))) | p(s(bool,happ(s(fun(X68,bool),X69),s(X68,sK43('const.arithmetic.>_2'(s('type.num.num',X66),s('type.num.num',X67)),X69,X68))))) | ~p(s(bool,happ(s(fun(X68,bool),X69),s(X68,X70))))) )),
  inference(superposition,[],[f138,f144])).
fof(f2601,plain,(
  ( ! [X61,X64,X62,X65,X63] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X62),s('type.num.num',X61)))) | p(s(bool,happ(s(fun(X63,bool),X64),s(X63,sK43('const.arithmetic.>=_2'(s('type.num.num',X61),s('type.num.num',X62)),X64,X63))))) | ~p(s(bool,happ(s(fun(X63,bool),X64),s(X63,X65))))) )),
  inference(superposition,[],[f138,f145])).
fof(f2600,plain,(
  ( ! [X59,X57,X60,X58] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X57)))) | p(s(bool,happ(s(fun(X58,bool),X59),s(X58,sK43('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X57)),X59,X58))))) | ~p(s(bool,happ(s(fun(X58,bool),X59),s(X58,X60))))) )),
  inference(superposition,[],[f138,f1667])).
fof(f2599,plain,(
  ( ! [X54,X52,X56,X55,X53] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X52),s('type.num.num',X53)))) | p(s(bool,happ(s(fun(X54,bool),X55),s(X54,sK43('const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X52))),s('type.num.num',X53)),X55,X54))))) | ~p(s(bool,happ(s(fun(X54,bool),X55),s(X54,X56))))) )),
  inference(superposition,[],[f138,f147])).
fof(f2604,plain,(
  ( ! [X6,X8,X7,X5,X9] : (p(s(bool,happ(s(fun(X6,bool),X7),s(X6,sK43(X5,X7,X6))))) | ~p(s(bool,happ(s(fun(X6,bool),X7),s(X6,X8)))) | s(bool,X5) = s(bool,X9) | s(bool,'T_0') = s(bool,X9)) )),
  inference(subsumption_resolution,[],[f2589,f106])).
fof(f2589,plain,(
  ( ! [X6,X8,X7,X5,X9] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun(X6,bool),X7),s(X6,sK43(X5,X7,X6))))) | ~p(s(bool,happ(s(fun(X6,bool),X7),s(X6,X8)))) | s(bool,X5) = s(bool,X9) | s(bool,'T_0') = s(bool,X9)) )),
  inference(superposition,[],[f138,f225])).
fof(f2587,plain,(
  ( ! [X21,X22] : (s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X21))) = s(bool,sK41('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X21)),X22,bool)) | ~p(s(bool,happ(s(fun(bool,bool),X22),s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X21))))))) )),
  inference(forward_demodulation,[],[f2581,f1667])).
fof(f2581,plain,(
  ( ! [X21,X22] : (~p(s(bool,happ(s(fun(bool,bool),X22),s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X21)))))) | s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X21))) = s(bool,sK41('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X21)),X22,bool))) )),
  inference(superposition,[],[f134,f1667])).
fof(f2572,plain,(
  ( ! [X4,X2,X3,X1] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X1)))) | p(s(bool,happ(s(fun(X2,bool),X3),s(X2,sK42('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X1)),X3,X2))))) | ~p(s(bool,happ(s(fun(X2,bool),X3),s(X2,X4))))) )),
  inference(superposition,[],[f136,f1667])).
fof(f2570,plain,(
  ( ! [X11] : (s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X11))) | s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X11)))) )),
  inference(superposition,[],[f1667,f124])).
fof(f2568,plain,(
  ( ! [X8,X7] : (s(bool,X8) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X7))) | s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X7))) | s(bool,'T_0') = s(bool,X8)) )),
  inference(superposition,[],[f1667,f225])).
fof(f2566,plain,(
  ( ! [X4,X3] : (s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X3))) | s(bool,X4) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X3))) | s(bool,'T_0') = s(bool,X4)) )),
  inference(superposition,[],[f1667,f225])).
fof(f2565,plain,(
  ( ! [X2,X1] : (s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X1))) = s(bool,happ(s(fun('type.num.num',bool),X2),s('type.num.num',sK1))) | s('type.num.num',sK1) = s('type.num.num',sK41('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),X2,'type.num.num')) | s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X1)))) ) | $spl6),
  inference(superposition,[],[f1667,f1005])).
fof(f2533,plain,(
  ( ! [X22] : (s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.num.num',sK41('const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),X22,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X22),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) )),
  inference(forward_demodulation,[],[f2529,f387])).
fof(f2529,plain,(
  ( ! [X22] : (~p(s(bool,happ(s(fun('type.num.num',bool),X22),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.num.num',sK41('const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),X22,'type.num.num'))) )),
  inference(superposition,[],[f134,f387])).
fof(f2499,plain,(
  ( ! [X5] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X5),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X5))),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))) )),
  inference(superposition,[],[f150,f387])).
fof(f2498,plain,(
  ( ! [X4] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X4))))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X4)))))) )),
  inference(superposition,[],[f150,f387])).
fof(f2497,plain,(
  ( ! [X3] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X3),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X3))),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))) )),
  inference(superposition,[],[f149,f387])).
fof(f2496,plain,(
  ( ! [X2] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X2))))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2)))))) )),
  inference(superposition,[],[f149,f387])).
fof(f2495,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))) )),
  inference(superposition,[],[f148,f387])).
fof(f2494,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X0))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))) )),
  inference(superposition,[],[f148,f387])).
fof(f2493,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))),
  inference(superposition,[],[f120,f387])).
fof(f2492,plain,(
  s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))),
  inference(superposition,[],[f119,f387])).
fof(f2485,plain,(
  ( ! [X70,X68,X71,X69,X67] : (~p(s(bool,X68)) | p(s(bool,happ(s(fun(X69,bool),X70),s(X69,sK42('const.bool.COND_3'(s(bool,'F_0'),s(bool,X67),s(bool,X68)),X70,X69))))) | ~p(s(bool,happ(s(fun(X69,bool),X70),s(X69,X71))))) )),
  inference(superposition,[],[f136,f127])).
fof(f2484,plain,(
  ( ! [X66,X64,X62,X65,X63] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X63),s('type.num.num',X62)))) | p(s(bool,happ(s(fun(X64,bool),X65),s(X64,sK42('const.arithmetic.>_2'(s('type.num.num',X62),s('type.num.num',X63)),X65,X64))))) | ~p(s(bool,happ(s(fun(X64,bool),X65),s(X64,X66))))) )),
  inference(superposition,[],[f136,f144])).
fof(f2483,plain,(
  ( ! [X61,X59,X57,X60,X58] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X58),s('type.num.num',X57)))) | p(s(bool,happ(s(fun(X59,bool),X60),s(X59,sK42('const.arithmetic.>=_2'(s('type.num.num',X57),s('type.num.num',X58)),X60,X59))))) | ~p(s(bool,happ(s(fun(X59,bool),X60),s(X59,X61))))) )),
  inference(superposition,[],[f136,f145])).
fof(f2482,plain,(
  ( ! [X54,X52,X56,X55,X53] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X52),s('type.num.num',X53)))) | p(s(bool,happ(s(fun(X54,bool),X55),s(X54,sK42('const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X52))),s('type.num.num',X53)),X55,X54))))) | ~p(s(bool,happ(s(fun(X54,bool),X55),s(X54,X56))))) )),
  inference(superposition,[],[f136,f147])).
fof(f2486,plain,(
  ( ! [X6,X8,X7,X5,X9] : (p(s(bool,happ(s(fun(X6,bool),X7),s(X6,sK42(X5,X7,X6))))) | ~p(s(bool,happ(s(fun(X6,bool),X7),s(X6,X8)))) | s(bool,X5) = s(bool,X9) | s(bool,'T_0') = s(bool,X9)) )),
  inference(subsumption_resolution,[],[f2472,f106])).
fof(f2472,plain,(
  ( ! [X6,X8,X7,X5,X9] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun(X6,bool),X7),s(X6,sK42(X5,X7,X6))))) | ~p(s(bool,happ(s(fun(X6,bool),X7),s(X6,X8)))) | s(bool,X5) = s(bool,X9) | s(bool,'T_0') = s(bool,X9)) )),
  inference(superposition,[],[f136,f225])).
fof(f2428,plain,(
  ( ! [X30,X28,X31,X29] : (~p(s(bool,happ(s(fun(bool,bool),X30),s(bool,X29)))) | p(s(bool,happ(s(fun(bool,bool),X30),s(bool,X31)))) | s(bool,X31) != s(bool,happ(s(fun('type.num.num',bool),X28),s('type.num.num',sK1))) | s('type.num.num',sK1) = s('type.num.num',sK41('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),X28,'type.num.num')) | s(bool,'T_0') = s(bool,X29)) ) | $spl6),
  inference(superposition,[],[f133,f1005])).
fof(f2411,plain,(
  ( ! [X57,X54,X56,X55] : (~p(s(bool,happ(s(fun(bool,bool),X56),s(bool,happ(s(fun('type.num.num',bool),X55),s('type.num.num',sK1)))))) | p(s(bool,happ(s(fun(bool,bool),X56),s(bool,X57)))) | s(bool,X54) != s(bool,X57) | s('type.num.num',sK1) = s('type.num.num',sK41('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),X55,'type.num.num')) | s(bool,'T_0') = s(bool,X54)) ) | $spl6),
  inference(superposition,[],[f133,f1005])).
fof(f2374,plain,(
  ( ! [X6,X4,X2,X5,X3] : (p(s(bool,happ(s(fun(X2,bool),X3),s(X2,X5)))) | s(X2,X4) != s(X2,X5) | s(bool,X6) = s(bool,happ(s(fun(X2,bool),X3),s(X2,X4))) | s(bool,'T_0') = s(bool,X6)) )),
  inference(subsumption_resolution,[],[f2338,f106])).
fof(f2338,plain,(
  ( ! [X6,X4,X2,X5,X3] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun(X2,bool),X3),s(X2,X5)))) | s(X2,X4) != s(X2,X5) | s(bool,X6) = s(bool,happ(s(fun(X2,bool),X3),s(X2,X4))) | s(bool,'T_0') = s(bool,X6)) )),
  inference(superposition,[],[f133,f225])).
fof(f2331,plain,(
  ( ! [X114,X112,X113] : (~p(s(bool,happ(s(fun(bool,bool),X113),s(bool,X112)))) | p(s(bool,happ(s(fun(bool,bool),X113),s(bool,X114)))) | s(bool,'F_0') != s(bool,X114) | s(bool,'T_0') = s(bool,X112)) )),
  inference(superposition,[],[f133,f124])).
fof(f2329,plain,(
  ( ! [X107,X105,X106,X104] : (~p(s(bool,happ(s(fun(bool,bool),X105),s(bool,X104)))) | p(s(bool,happ(s(fun(bool,bool),X105),s(bool,X106)))) | s(bool,'T_0') != s(bool,X106) | s(bool,X104) = s(bool,X107) | s(bool,'T_0') = s(bool,X107)) )),
  inference(superposition,[],[f133,f225])).
fof(f2328,plain,(
  ( ! [X103,X101,X102] : (~p(s(bool,happ(s(fun(bool,bool),X102),s(bool,'F_0')))) | p(s(bool,happ(s(fun(bool,bool),X102),s(bool,X103)))) | s(bool,X101) != s(bool,X103) | s(bool,'T_0') = s(bool,X101)) )),
  inference(superposition,[],[f133,f124])).
fof(f2326,plain,(
  ( ! [X94,X95,X93,X96] : (~p(s(bool,happ(s(fun(bool,bool),X95),s(bool,X94)))) | p(s(bool,happ(s(fun(bool,bool),X95),s(bool,X96)))) | s(bool,X93) != s(bool,X96) | s(bool,'T_0') = s(bool,X93) | s(bool,'T_0') = s(bool,X94)) )),
  inference(superposition,[],[f133,f225])).
fof(f2324,plain,(
  ( ! [X88,X87,X85,X86] : (~p(s(bool,happ(s(fun(bool,bool),X86),s(bool,'T_0')))) | p(s(bool,happ(s(fun(bool,bool),X86),s(bool,X87)))) | s(bool,X85) != s(bool,X87) | s(bool,X85) = s(bool,X88) | s(bool,'T_0') = s(bool,X88)) )),
  inference(superposition,[],[f133,f225])).
fof(f2301,plain,(
  ( ! [X14,X17,X15,X16] : (~p(s(bool,happ(s(fun('type.num.num',bool),X16),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X15),s('type.num.num',X14)))))) | p(s(bool,happ(s(fun('type.num.num',bool),X16),s('type.num.num',X17)))) | s('type.num.num',X17) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X14),s('type.num.num',X15)))) )),
  inference(superposition,[],[f133,f146])).
fof(f2293,plain,(
  ( ! [X20] : (s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num',sK41('const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))),X20,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X20),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0'))))))) )),
  inference(forward_demodulation,[],[f2290,f2060])).
fof(f2290,plain,(
  ( ! [X20] : (~p(s(bool,happ(s(fun('type.num.num',bool),X20),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.num.num',sK41('const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))),X20,'type.num.num'))) )),
  inference(superposition,[],[f134,f2060])).
fof(f2261,plain,(
  ( ! [X5] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X5),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X5))),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))))) )),
  inference(superposition,[],[f150,f2060])).
fof(f2260,plain,(
  ( ! [X4] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num',X4))))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X4)))))) )),
  inference(superposition,[],[f150,f2060])).
fof(f2259,plain,(
  ( ! [X3] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X3),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X3))),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))))) )),
  inference(superposition,[],[f149,f2060])).
fof(f2258,plain,(
  ( ! [X2] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num',X2))))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2)))))) )),
  inference(superposition,[],[f149,f2060])).
fof(f2257,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))))) )),
  inference(superposition,[],[f148,f2060])).
fof(f2256,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num',X0))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))) )),
  inference(superposition,[],[f148,f2060])).
fof(f2255,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))))))),
  inference(superposition,[],[f120,f2060])).
fof(f2254,plain,(
  s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))))))),
  inference(superposition,[],[f119,f2060])).
fof(f2253,plain,(
  ( ! [X20] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num',sK41('const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))),X20,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X20),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) )),
  inference(forward_demodulation,[],[f2243,f2059])).
fof(f2243,plain,(
  ( ! [X20] : (~p(s(bool,happ(s(fun('type.num.num',bool),X20),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.num.num',sK41('const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))),X20,'type.num.num'))) )),
  inference(superposition,[],[f134,f2059])).
fof(f2252,plain,(
  ( ! [X5] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X5),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X5),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))) )),
  inference(forward_demodulation,[],[f2214,f2173])).
fof(f2214,plain,(
  ( ! [X5] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X5),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X5))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))) )),
  inference(superposition,[],[f150,f2059])).
fof(f2251,plain,(
  ( ! [X4] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X4))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num',X4)))))) )),
  inference(forward_demodulation,[],[f2213,f2143])).
fof(f2213,plain,(
  ( ! [X4] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num',X4))))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X4)))))) )),
  inference(superposition,[],[f150,f2059])).
fof(f2250,plain,(
  ( ! [X3] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X3),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X3),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))) )),
  inference(forward_demodulation,[],[f2212,f2022])).
fof(f2212,plain,(
  ( ! [X3] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X3),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X3))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))) )),
  inference(superposition,[],[f149,f2059])).
fof(f2249,plain,(
  ( ! [X2] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X2))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num',X2)))))) )),
  inference(forward_demodulation,[],[f2211,f1995])).
fof(f2211,plain,(
  ( ! [X2] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num',X2))))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2)))))) )),
  inference(superposition,[],[f149,f2059])).
fof(f2248,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))) )),
  inference(forward_demodulation,[],[f2210,f1830])).
fof(f2210,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))) )),
  inference(superposition,[],[f148,f2059])).
fof(f2247,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X0))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num',X0)))))) )),
  inference(forward_demodulation,[],[f2209,f1803])).
fof(f2209,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num',X0))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))) )),
  inference(superposition,[],[f148,f2059])).
fof(f2246,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),
  inference(forward_demodulation,[],[f2208,f431])).
fof(f2208,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))),
  inference(superposition,[],[f120,f2059])).
fof(f2207,plain,(
  s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))),
  inference(superposition,[],[f119,f2059])).
fof(f2206,plain,(
  ( ! [X66,X64,X65] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X64),s('type.num.num',X65))))) = s('type.num.num',sK41('const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X64))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X65)))),X66,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X66),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X64),s('type.num.num',X65))))))))) )),
  inference(forward_demodulation,[],[f2201,f150])).
fof(f2201,plain,(
  ( ! [X66,X64,X65] : (~p(s(bool,happ(s(fun('type.num.num',bool),X66),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X64),s('type.num.num',X65)))))))) | s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X64))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X65))))) = s('type.num.num',sK41('const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X64))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X65)))),X66,'type.num.num'))) )),
  inference(superposition,[],[f134,f150])).
fof(f2173,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))) )),
  inference(superposition,[],[f150,f108])).
fof(f2144,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X1))))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))) )),
  inference(superposition,[],[f150,f2052])).
fof(f2143,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X0))))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))) )),
  inference(superposition,[],[f150,f108])).
fof(f2097,plain,(
  ( ! [X16] : (s('type.num.num','const.num.|48|_0') = s('type.num.num',sK41('const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')),X16,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X16),s('type.num.num','const.num.|48|_0'))))) )),
  inference(forward_demodulation,[],[f2087,f2052])).
fof(f2087,plain,(
  ( ! [X16] : (~p(s(bool,happ(s(fun('type.num.num',bool),X16),s('type.num.num','const.num.|48|_0')))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num',sK41('const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')),X16,'type.num.num'))) )),
  inference(superposition,[],[f134,f2052])).
fof(f2060,plain,(
  s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))))),
  inference(superposition,[],[f119,f2052])).
fof(f2059,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))),
  inference(superposition,[],[f120,f2052])).
fof(f2054,plain,(
  ( ! [X61,X59,X60] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X59),s('type.num.num',X60))))) = s('type.num.num',sK41('const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X59))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X60)))),X61,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X61),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X59),s('type.num.num',X60))))))))) )),
  inference(forward_demodulation,[],[f2049,f149])).
fof(f2049,plain,(
  ( ! [X61,X59,X60] : (~p(s(bool,happ(s(fun('type.num.num',bool),X61),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X59),s('type.num.num',X60)))))))) | s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X59))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X60))))) = s('type.num.num',sK41('const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X59))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X60)))),X61,'type.num.num'))) )),
  inference(superposition,[],[f134,f149])).
fof(f2052,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')))),
  inference(forward_demodulation,[],[f2023,f114])).
fof(f2023,plain,(
  ( ! [X2] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X2),s('type.num.num',X2)))))) )),
  inference(superposition,[],[f149,f114])).
fof(f2022,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))) )),
  inference(superposition,[],[f149,f108])).
fof(f1995,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X0))))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))) )),
  inference(superposition,[],[f149,f108])).
fof(f978,plain,(
  ( ! [X11] : (~p(s(bool,happ(s(fun('type.num.num',bool),X11),s('type.num.num',sK1)))) | s('type.num.num',sK1) = s('type.num.num',sK41('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),X11,'type.num.num'))) ) | $spl6),
  inference(forward_demodulation,[],[f942,f160])).
fof(f942,plain,(
  ( ! [X11] : (~p(s(bool,happ(s(fun('type.num.num',bool),X11),s('type.num.num',sK1)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3))) = s('type.num.num',sK41('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),X11,'type.num.num'))) ) | $spl6),
  inference(superposition,[],[f134,f160])).
fof(f1005,plain,(
  ( ! [X0,X1] : (s(bool,X1) = s(bool,happ(s(fun('type.num.num',bool),X0),s('type.num.num',sK1))) | s('type.num.num',sK1) = s('type.num.num',sK41('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),X0,'type.num.num')) | s(bool,'T_0') = s(bool,X1)) ) | $spl6),
  inference(subsumption_resolution,[],[f1000,f106])).
fof(f1000,plain,(
  ( ! [X0,X1] : (~p(s(bool,'T_0')) | s('type.num.num',sK1) = s('type.num.num',sK41('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),X0,'type.num.num')) | s(bool,X1) = s(bool,happ(s(fun('type.num.num',bool),X0),s('type.num.num',sK1))) | s(bool,'T_0') = s(bool,X1)) ) | $spl6),
  inference(superposition,[],[f978,f225])).
fof(f1013,plain,(
  ( ! [X28,X26,X27] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num',X27),s('type.num.num',X26))) = s(bool,happ(s(fun('type.num.num',bool),X28),s('type.num.num',sK1))) | s('type.num.num',sK1) = s('type.num.num',sK41('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),X28,'type.num.num')) | s(bool,'T_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num',X26),s('type.num.num',X27)))) ) | $spl6),
  inference(superposition,[],[f1005,f145])).
fof(f1014,plain,(
  ( ! [X30,X31,X29] : (s(bool,'const.prim_rec.<_2'(s('type.num.num',X30),s('type.num.num',X29))) = s(bool,happ(s(fun('type.num.num',bool),X31),s('type.num.num',sK1))) | s('type.num.num',sK1) = s('type.num.num',sK41('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),X31,'type.num.num')) | s(bool,'T_0') = s(bool,'const.arithmetic.>_2'(s('type.num.num',X29),s('type.num.num',X30)))) ) | $spl6),
  inference(superposition,[],[f1005,f144])).
fof(f1015,plain,(
  ( ! [X33,X34,X32] : (s(bool,X33) = s(bool,happ(s(fun('type.num.num',bool),X34),s('type.num.num',sK1))) | s(bool,'T_0') = s(bool,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X32),s(bool,X33))) | s('type.num.num',sK1) = s('type.num.num',sK41('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),X34,'type.num.num'))) ) | $spl6),
  inference(superposition,[],[f1005,f127])).
fof(f1034,plain,(
  ( ! [X37,X38,X36] : (~p(s(bool,happ(s(fun(bool,bool),X38),s(bool,happ(s(fun('type.num.num',bool),X37),s('type.num.num',sK1)))))) | s(bool,X36) = s(bool,sK41(X36,X38,bool)) | s('type.num.num',sK1) = s('type.num.num',sK41('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),X37,'type.num.num')) | s(bool,'T_0') = s(bool,X36)) ) | $spl6),
  inference(superposition,[],[f134,f1005])).
fof(f1046,plain,(
  ( ! [X21,X22,X20] : (~p(s(bool,happ(s(fun(bool,bool),X22),s(bool,X21)))) | s(bool,happ(s(fun('type.num.num',bool),X20),s('type.num.num',sK1))) = s(bool,sK41(happ(s(fun('type.num.num',bool),X20),s('type.num.num',sK1)),X22,bool)) | s('type.num.num',sK1) = s('type.num.num',sK41('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),X20,'type.num.num')) | s(bool,'T_0') = s(bool,X21)) ) | $spl6),
  inference(superposition,[],[f134,f1005])).
fof(f1049,plain,(
  ( ! [X0,X1] : (s(bool,'T_0') != s(bool,happ(s(fun('type.num.num',bool),X1),s('type.num.num',sK1))) | s(bool,X0) = s(bool,happ(s(fun('type.num.num',bool),X1),s('type.num.num',sK1))) | s('type.num.num',sK1) = s('type.num.num',sK41('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),X1,'type.num.num'))) ) | $spl6),
  inference(equality_factoring,[],[f1005])).
fof(f1696,plain,(
  ( ! [X4,X2,X3] : (s(bool,'const.prim_rec.<_2'(s('type.num.num',X2),s('type.num.num',X3))) = s(bool,happ(s(fun('type.num.num',bool),X4),s('type.num.num',sK1))) | s('type.num.num',sK1) = s('type.num.num',sK41('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),X4,'type.num.num')) | s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X2))),s('type.num.num',X3)))) ) | $spl6),
  inference(superposition,[],[f147,f1005])).
fof(f1718,plain,(
  ( ! [X4,X2,X3] : (p(s(bool,happ(s(fun(bool,bool),X3),s(bool,happ(s(fun('type.num.num',bool),X4),s('type.num.num',sK1)))))) | ~p(s(bool,happ(s(fun(bool,bool),X3),s(bool,X2)))) | s('type.num.num',sK1) = s('type.num.num',sK41('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),X4,'type.num.num')) | s(bool,'T_0') = s(bool,sK41(X2,X3,bool))) ) | $spl6),
  inference(superposition,[],[f135,f1005])).
fof(f999,plain,(
  ( ! [X0,X1] : (~p(s(bool,happ(s(fun('type.num.num',bool),X1),s('type.num.num',sK1)))) | s('type.num.num',sK1) = s('type.num.num',sK41('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),'const.bool.COND_3'(s(bool,'F_0'),s(fun('type.num.num',bool),X0),s(fun('type.num.num',bool),X1)),'type.num.num'))) ) | $spl6),
  inference(superposition,[],[f978,f127])).
fof(f1856,plain,(
  ( ! [X54,X52,X53] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X52),s('type.num.num',X53))))) = s('type.num.num',sK41('const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X52))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X53)))),X54,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X54),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X52),s('type.num.num',X53))))))))) )),
  inference(forward_demodulation,[],[f1853,f148])).
fof(f1853,plain,(
  ( ! [X54,X52,X53] : (~p(s(bool,happ(s(fun('type.num.num',bool),X54),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X52),s('type.num.num',X53)))))))) | s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X52))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X53))))) = s('type.num.num',sK41('const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X52))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X53)))),X54,'type.num.num'))) )),
  inference(superposition,[],[f134,f148])).
fof(f1830,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))) )),
  inference(superposition,[],[f148,f108])).
fof(f1803,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X0))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))) )),
  inference(superposition,[],[f148,f108])).
fof(f1738,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,happ(s(fun(X0,bool),X1),s(X0,sK41(X2,X1,X0)))) | ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2))))) )),
  inference(condensation,[],[f1737])).
fof(f1737,plain,(
  ( ! [X14,X12,X15,X13] : (~p(s(bool,happ(s(fun(X12,bool),X13),s(X12,X14)))) | s(bool,'T_0') = s(bool,happ(s(fun(X12,bool),X13),s(X12,sK41(X14,X13,X12)))) | s(bool,'T_0') = s(bool,X15)) )),
  inference(subsumption_resolution,[],[f1727,f227])).
fof(f1727,plain,(
  ( ! [X14,X12,X15,X13] : (p(s(bool,X15)) | ~p(s(bool,happ(s(fun(X12,bool),X13),s(X12,X14)))) | s(bool,'T_0') = s(bool,happ(s(fun(X12,bool),X13),s(X12,sK41(X14,X13,X12)))) | s(bool,'T_0') = s(bool,X15)) )),
  inference(superposition,[],[f135,f225])).
fof(f1723,plain,(
  ( ! [X17,X18] : (p(s(bool,happ(s(fun(bool,bool),X18),s(bool,'F_0')))) | ~p(s(bool,happ(s(fun(bool,bool),X18),s(bool,X17)))) | s(bool,'T_0') = s(bool,sK41(X17,X18,bool))) )),
  inference(superposition,[],[f135,f124])).
fof(f1721,plain,(
  ( ! [X12,X13,X11] : (p(s(bool,happ(s(fun(bool,bool),X12),s(bool,X13)))) | ~p(s(bool,happ(s(fun(bool,bool),X12),s(bool,X11)))) | s(bool,'T_0') = s(bool,sK41(X11,X12,bool)) | s(bool,'T_0') = s(bool,X13)) )),
  inference(superposition,[],[f135,f225])).
fof(f1719,plain,(
  ( ! [X6,X7,X5] : (p(s(bool,happ(s(fun(bool,bool),X6),s(bool,'T_0')))) | ~p(s(bool,happ(s(fun(bool,bool),X6),s(bool,X5)))) | s(bool,X7) = s(bool,sK41(X5,X6,bool)) | s(bool,'T_0') = s(bool,X7)) )),
  inference(superposition,[],[f135,f225])).
fof(f1730,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X3)))) | p(s(bool,happ(s(fun(X0,bool),X2),s(X0,sK41(X3,'const.bool.COND_3'(s(bool,'F_0'),s(fun(X0,bool),X1),s(fun(X0,bool),X2)),X0)))))) )),
  inference(forward_demodulation,[],[f1716,f127])).
fof(f1716,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,happ(s(fun(X0,bool),X2),s(X0,sK41(X3,'const.bool.COND_3'(s(bool,'F_0'),s(fun(X0,bool),X1),s(fun(X0,bool),X2)),X0))))) | ~p(s(bool,happ(s(fun(X0,bool),'const.bool.COND_3'(s(bool,'F_0'),s(fun(X0,bool),X1),s(fun(X0,bool),X2))),s(X0,X3))))) )),
  inference(superposition,[],[f135,f127])).
fof(f1715,plain,(
  ( ! [X24,X23,X22] : (s(bool,'const.prim_rec.<_2'(s('type.num.num',X22),s('type.num.num',X23))) = s(bool,sK41('const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X22))),s('type.num.num',X23)),X24,bool)) | ~p(s(bool,happ(s(fun(bool,bool),X24),s(bool,'const.prim_rec.<_2'(s('type.num.num',X22),s('type.num.num',X23))))))) )),
  inference(forward_demodulation,[],[f1710,f147])).
fof(f1710,plain,(
  ( ! [X24,X23,X22] : (~p(s(bool,happ(s(fun(bool,bool),X24),s(bool,'const.prim_rec.<_2'(s('type.num.num',X22),s('type.num.num',X23)))))) | s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X22))),s('type.num.num',X23))) = s(bool,sK41('const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X22))),s('type.num.num',X23)),X24,bool))) )),
  inference(superposition,[],[f134,f147])).
fof(f1701,plain,(
  ( ! [X17,X18] : (s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',X17),s('type.num.num',X18))) | s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X17))),s('type.num.num',X18)))) )),
  inference(superposition,[],[f147,f124])).
fof(f1699,plain,(
  ( ! [X12,X13,X11] : (s(bool,X13) = s(bool,'const.prim_rec.<_2'(s('type.num.num',X11),s('type.num.num',X12))) | s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X11))),s('type.num.num',X12))) | s(bool,'T_0') = s(bool,X13)) )),
  inference(superposition,[],[f147,f225])).
fof(f1697,plain,(
  ( ! [X6,X7,X5] : (s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',X5),s('type.num.num',X6))) | s(bool,X7) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X5))),s('type.num.num',X6))) | s(bool,'T_0') = s(bool,X7)) )),
  inference(superposition,[],[f147,f225])).
fof(f1671,plain,(
  ( ! [X7] : (s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num',X7))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X7)))) )),
  inference(superposition,[],[f147,f431])).
fof(f1670,plain,(
  ( ! [X6,X5] : (s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X5))),s('type.num.num',X6))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X5))))),s('type.num.num',X6)))) )),
  inference(superposition,[],[f147,f120])).
fof(f1669,plain,(
  ( ! [X4,X3] : (s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X3))),s('type.num.num',X4))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X3))))),s('type.num.num',X4)))) )),
  inference(superposition,[],[f147,f122])).
fof(f1668,plain,(
  ( ! [X2,X1] : (s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1))),s('type.num.num',X2))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1))),s('type.num.num',X2)))) )),
  inference(superposition,[],[f147,f117])).
fof(f1667,plain,(
  ( ! [X0] : (s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X0))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X0)))) )),
  inference(superposition,[],[f147,f107])).
fof(f109,plain,(
  ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f41])).
fof(f41,plain,(
  ~p(s(bool,'F_0'))),
  inference(flattening,[],[f2])).
fof(f2,axiom,(
  ~p(s(bool,'F_0'))),
  file('thm.quantHeuristics.LIST_LENGTH_2|48||split|41',aHL_FALSITY)).
fof(f298,plain,(
  ( ! [X0,X1] : (s(bool,'F_0') = s(bool,X1) | s(bool,'T_0') = s(bool,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X0),s(bool,X1)))) )),
  inference(superposition,[],[f127,f124])).
fof(f536,plain,(
  ( ! [X2,X3] : (s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',X3),s('type.num.num',X2))) | s(bool,'T_0') = s(bool,'const.arithmetic.>_2'(s('type.num.num',X2),s('type.num.num',X3)))) )),
  inference(superposition,[],[f144,f124])).
fof(f580,plain,(
  ( ! [X2,X3] : (s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',X3),s('type.num.num',X2))) | s(bool,'T_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num',X2),s('type.num.num',X3)))) )),
  inference(superposition,[],[f145,f124])).
fof(f676,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))) | s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),'const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X0),X1),s('type.list.list'(X0),X2)))) )),
  inference(superposition,[],[f125,f127])).
fof(f746,plain,(
  ( ! [X28,X26,X27] : (s(bool,X27) = s(bool,X28) | s(bool,'T_0') = s(bool,X28) | s(bool,'T_0') = s(bool,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X26),s(bool,X27)))) )),
  inference(superposition,[],[f225,f127])).
fof(f770,plain,(
  ( ! [X21,X22,X20] : (s(bool,'T_0') = s(bool,X21) | s(bool,X22) = s(bool,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X20),s(bool,X21))) | s(bool,'T_0') = s(bool,X22)) )),
  inference(superposition,[],[f225,f127])).
fof(f936,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X3)))) | s(X0,X3) = s(X0,sK41(X3,'const.bool.COND_3'(s(bool,'F_0'),s(fun(X0,bool),X1),s(fun(X0,bool),X2)),X0))) )),
  inference(superposition,[],[f134,f127])).
fof(f963,plain,(
  ( ! [X54,X53] : (~p(s(bool,happ(s(fun(bool,bool),X54),s(bool,'F_0')))) | s(bool,X53) = s(bool,sK41(X53,X54,bool)) | s(bool,'T_0') = s(bool,X53)) )),
  inference(superposition,[],[f134,f124])).
fof(f966,plain,(
  ( ! [X61,X62] : (~p(s(bool,happ(s(fun(bool,bool),X62),s(bool,X61)))) | s(bool,'F_0') = s(bool,sK41('F_0',X62,bool)) | s(bool,'T_0') = s(bool,X61)) )),
  inference(superposition,[],[f134,f124])).
fof(f997,plain,(
  ( ! [X70,X72,X71,X69] : (s(X69,X71) = s(X69,sK41('const.bool.COND_3'(s(bool,'F_0'),s(X69,X70),s(X69,X71)),X72,X69)) | ~p(s(bool,happ(s(fun(X69,bool),X72),s(X69,X71))))) )),
  inference(forward_demodulation,[],[f969,f127])).
fof(f969,plain,(
  ( ! [X70,X72,X71,X69] : (~p(s(bool,happ(s(fun(X69,bool),X72),s(X69,X71)))) | s(X69,'const.bool.COND_3'(s(bool,'F_0'),s(X69,X70),s(X69,X71))) = s(X69,sK41('const.bool.COND_3'(s(bool,'F_0'),s(X69,X70),s(X69,X71)),X72,X69))) )),
  inference(superposition,[],[f134,f127])).
fof(f1016,plain,(
  ( ! [X2,X0,X1] : (s(bool,X2) = s(bool,happ(s(fun('type.num.num',bool),X1),s('type.num.num',sK1))) | s('type.num.num',sK1) = s('type.num.num',sK41('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),'const.bool.COND_3'(s(bool,'F_0'),s(fun('type.num.num',bool),X0),s(fun('type.num.num',bool),X1)),'type.num.num')) | s(bool,'T_0') = s(bool,X2)) ) | $spl6),
  inference(superposition,[],[f1005,f127])).
fof(f133,plain,(
  ( ! [X4,X2,X0,X1] : (~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X4)))) | p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2)))) | s(X0,X2) != s(X0,X4)) )),
  inference(cnf_transformation,[],[f94])).
fof(f94,plain,(
  ! [X0,X1,X2] : ((! [X4] : (s(X0,X2) != s(X0,X4) | ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X4))))) | p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2))))) & (~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2)))) | (s(X0,X2) = s(X0,sK41(X2,X1,X0)) & p(s(bool,happ(s(fun(X0,bool),X1),s(X0,sK41(X2,X1,X0))))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK41])],[f93])).
fof(f93,plain,(
  ! [X0,X1,X2] : ((! [X4] : (s(X0,X2) != s(X0,X4) | ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X4))))) | p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2))))) & (~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2)))) | ? [X3] : (s(X0,X2) = s(X0,X3) & p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3)))))))),
  inference(rectify,[],[f92])).
fof(f92,plain,(
  ! [X0,X1,X2] : ((! [X3] : (s(X0,X2) != s(X0,X3) | ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3))))) | p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2))))) & (~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2)))) | ? [X3] : (s(X0,X2) = s(X0,X3) & p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3)))))))),
  inference(nnf_transformation,[],[f65])).
fof(f65,plain,(
  ! [X0,X1,X2] : (? [X3] : (s(X0,X2) = s(X0,X3) & p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3))))) <=> p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2)))))),
  inference(flattening,[],[f64])).
fof(f64,plain,(
  ! [X0] : ! [X1,X2] : (? [X3] : (s(X0,X2) = s(X0,X3) & p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3))))) <=> p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2)))))),
  inference(rectify,[],[f34])).
fof(f34,axiom,(
  ! [X6] : ! [X37,X39] : (? [X7] : (s(X6,X7) = s(X6,X39) & p(s(bool,happ(s(fun(X6,bool),X37),s(X6,X7))))) <=> p(s(bool,happ(s(fun(X6,bool),X37),s(X6,X39)))))),
  file('thm.quantHeuristics.LIST_LENGTH_2|48||split|41','thm.bool.UNWIND_THM2')).
fof(f134,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2)))) | s(X0,X2) = s(X0,sK41(X2,X1,X0))) )),
  inference(cnf_transformation,[],[f94])).
fof(f135,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,happ(s(fun(X0,bool),X1),s(X0,sK41(X2,X1,X0))))) | ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2))))) )),
  inference(cnf_transformation,[],[f94])).
fof(f136,plain,(
  ( ! [X6,X2,X0,X1] : (~p(s(bool,X2)) | p(s(bool,happ(s(fun(X0,bool),X1),s(X0,sK42(X2,X1,X0))))) | ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X6))))) )),
  inference(cnf_transformation,[],[f98])).
fof(f98,plain,(
  ! [X0,X1,X2] : ((! [X6] : (~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X6)))) | ~p(s(bool,X2))) | (p(s(bool,happ(s(fun(X0,bool),X1),s(X0,sK42(X2,X1,X0))))) & p(s(bool,X2)))) & (! [X4] : ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X4)))) | ~p(s(bool,X2)) | (p(s(bool,happ(s(fun(X0,bool),X1),s(X0,sK43(X2,X1,X0))))) & p(s(bool,X2)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK42,sK43])],[f97])).
fof(f97,plain,(
  ! [X0,X1,X2] : ((! [X6] : (~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X6)))) | ~p(s(bool,X2))) | (? [X5] : p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X5)))) & p(s(bool,X2)))) & (! [X4] : ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X4)))) | ~p(s(bool,X2)) | ? [X3] : (p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3)))) & p(s(bool,X2)))))),
  inference(rectify,[],[f96])).
fof(f96,plain,(
  ! [X0,X1,X2] : ((! [X3] : (~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3)))) | ~p(s(bool,X2))) | (? [X4] : p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X4)))) & p(s(bool,X2)))) & (! [X4] : ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X4)))) | ~p(s(bool,X2)) | ? [X3] : (p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3)))) & p(s(bool,X2)))))),
  inference(flattening,[],[f95])).
fof(f95,plain,(
  ! [X0,X1,X2] : ((! [X3] : (~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3)))) | ~p(s(bool,X2))) | (? [X4] : p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X4)))) & p(s(bool,X2)))) & ((! [X4] : ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X4)))) | ~p(s(bool,X2))) | ? [X3] : (p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3)))) & p(s(bool,X2)))))),
  inference(nnf_transformation,[],[f67])).
fof(f67,plain,(
  ! [X0,X1,X2] : (? [X3] : (p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3)))) & p(s(bool,X2))) <=> (? [X4] : p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X4)))) & p(s(bool,X2))))),
  inference(flattening,[],[f66])).
fof(f66,plain,(
  ! [X0] : ! [X1,X2] : (? [X3] : (p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3)))) & p(s(bool,X2))) <=> (? [X4] : p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X4)))) & p(s(bool,X2))))),
  inference(rectify,[],[f32])).
fof(f32,axiom,(
  ! [X6] : ! [X37,X38] : (? [X7] : (p(s(bool,happ(s(fun(X6,bool),X37),s(X6,X7)))) & p(s(bool,X38))) <=> (? [X7] : p(s(bool,happ(s(fun(X6,bool),X37),s(X6,X7)))) & p(s(bool,X38))))),
  file('thm.quantHeuristics.LIST_LENGTH_2|48||split|41','thm.bool.LEFT_EXISTS_AND_THM')).
fof(f138,plain,(
  ( ! [X4,X2,X0,X1] : (~p(s(bool,X2)) | p(s(bool,happ(s(fun(X0,bool),X1),s(X0,sK43(X2,X1,X0))))) | ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X4))))) )),
  inference(cnf_transformation,[],[f98])).
fof(f982,plain,(
  ( ! [X19,X18] : (s('type.num.num',X18) = s('type.num.num',sK41('const.arithmetic.-_2'(s('type.num.num',X18),s('type.num.num','const.num.|48|_0')),X19,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X19),s('type.num.num',X18))))) )),
  inference(forward_demodulation,[],[f946,f116])).
fof(f946,plain,(
  ( ! [X19,X18] : (~p(s(bool,happ(s(fun('type.num.num',bool),X19),s('type.num.num',X18)))) | s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X18),s('type.num.num','const.num.|48|_0'))) = s('type.num.num',sK41('const.arithmetic.-_2'(s('type.num.num',X18),s('type.num.num','const.num.|48|_0')),X19,'type.num.num'))) )),
  inference(superposition,[],[f134,f116])).
fof(f977,plain,(
  ( ! [X4,X3] : (s('type.num.num',X3) = s('type.num.num',sK41('const.arithmetic.+_2'(s('type.num.num',X3),s('type.num.num','const.num.|48|_0')),X4,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X4),s('type.num.num',X3))))) )),
  inference(forward_demodulation,[],[f939,f115])).
fof(f939,plain,(
  ( ! [X4,X3] : (~p(s(bool,happ(s(fun('type.num.num',bool),X4),s('type.num.num',X3)))) | s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X3),s('type.num.num','const.num.|48|_0'))) = s('type.num.num',sK41('const.arithmetic.+_2'(s('type.num.num',X3),s('type.num.num','const.num.|48|_0')),X4,'type.num.num'))) )),
  inference(superposition,[],[f134,f115])).
fof(f976,plain,(
  ( ! [X2,X1] : (s('type.num.num',X1) = s('type.num.num',sK41('const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X1)),X2,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X2),s('type.num.num',X1))))) )),
  inference(forward_demodulation,[],[f938,f110])).
fof(f938,plain,(
  ( ! [X2,X1] : (~p(s(bool,happ(s(fun('type.num.num',bool),X2),s('type.num.num',X1)))) | s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X1))) = s('type.num.num',sK41('const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X1)),X2,'type.num.num'))) )),
  inference(superposition,[],[f134,f110])).
fof(f989,plain,(
  ( ! [X31] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num',sK41('const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),X31,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X31),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) )),
  inference(forward_demodulation,[],[f953,f107])).
fof(f953,plain,(
  ( ! [X31] : (~p(s(bool,happ(s(fun('type.num.num',bool),X31),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num',sK41('const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),X31,'type.num.num'))) )),
  inference(superposition,[],[f134,f107])).
fof(f991,plain,(
  ( ! [X35,X34] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X34))))) = s('type.num.num',sK41('const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X34)))),X35,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X35),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X34))))))))) )),
  inference(forward_demodulation,[],[f955,f122])).
fof(f955,plain,(
  ( ! [X35,X34] : (~p(s(bool,happ(s(fun('type.num.num',bool),X35),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X34)))))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X34))))) = s('type.num.num',sK41('const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X34)))),X35,'type.num.num'))) )),
  inference(superposition,[],[f134,f122])).
fof(f990,plain,(
  ( ! [X33,X32] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X32))) = s('type.num.num',sK41('const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X32)))),X33,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X33),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X32))))))) )),
  inference(forward_demodulation,[],[f954,f117])).
fof(f954,plain,(
  ( ! [X33,X32] : (~p(s(bool,happ(s(fun('type.num.num',bool),X33),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X32)))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X32))))) = s('type.num.num',sK41('const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X32)))),X33,'type.num.num'))) )),
  inference(superposition,[],[f134,f117])).
fof(f992,plain,(
  ( ! [X37,X36] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X36))))) = s('type.num.num',sK41('const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X36)))),X37,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X37),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X36))))))))) )),
  inference(forward_demodulation,[],[f956,f120])).
fof(f956,plain,(
  ( ! [X37,X36] : (~p(s(bool,happ(s(fun('type.num.num',bool),X37),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X36)))))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X36))))) = s('type.num.num',sK41('const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X36)))),X37,'type.num.num'))) )),
  inference(superposition,[],[f134,f120])).
fof(f993,plain,(
  ( ! [X38] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num',sK41('const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))),X38,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X38),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) )),
  inference(forward_demodulation,[],[f957,f431])).
fof(f957,plain,(
  ( ! [X38] : (~p(s(bool,happ(s(fun('type.num.num',bool),X38),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.num.num',sK41('const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))),X38,'type.num.num'))) )),
  inference(superposition,[],[f134,f431])).
fof(f994,plain,(
  ( ! [X39,X40] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X39))))) = s('type.num.num',sK41('const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X39)))),X40,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X40),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X39))))))))) )),
  inference(forward_demodulation,[],[f958,f119])).
fof(f958,plain,(
  ( ! [X39,X40] : (~p(s(bool,happ(s(fun('type.num.num',bool),X40),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X39)))))))) | s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X39))))) = s('type.num.num',sK41('const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X39)))),X40,'type.num.num'))) )),
  inference(superposition,[],[f134,f119])).
fof(f940,plain,(
  ( ! [X6,X7,X5] : (~p(s(bool,happ(s(fun('type.num.num',bool),X7),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num',X5)))))) | s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X5),s('type.num.num',X6))) = s('type.num.num',sK41('const.arithmetic.+_2'(s('type.num.num',X5),s('type.num.num',X6)),X7,'type.num.num'))) )),
  inference(superposition,[],[f134,f146])).
fof(f979,plain,(
  ( ! [X12,X13] : (s('type.num.num','const.num.|48|_0') = s('type.num.num',sK41('const.list.LENGTH_1'(s('type.list.list'(X12),'const.list.NIL_0')),X13,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X13),s('type.num.num','const.num.|48|_0'))))) )),
  inference(forward_demodulation,[],[f943,f707])).
fof(f943,plain,(
  ( ! [X12,X13] : (~p(s(bool,happ(s(fun('type.num.num',bool),X13),s('type.num.num','const.num.|48|_0')))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X12),'const.list.NIL_0'))) = s('type.num.num',sK41('const.list.LENGTH_1'(s('type.list.list'(X12),'const.list.NIL_0')),X13,'type.num.num'))) )),
  inference(superposition,[],[f134,f707])).
fof(f980,plain,(
  ( ! [X14,X15] : (s('type.num.num','const.num.|48|_0') = s('type.num.num',sK41('const.arithmetic.-_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X14)),X15,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X15),s('type.num.num','const.num.|48|_0'))))) )),
  inference(forward_demodulation,[],[f944,f113])).
fof(f944,plain,(
  ( ! [X14,X15] : (~p(s(bool,happ(s(fun('type.num.num',bool),X15),s('type.num.num','const.num.|48|_0')))) | s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X14))) = s('type.num.num',sK41('const.arithmetic.-_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X14)),X15,'type.num.num'))) )),
  inference(superposition,[],[f134,f113])).
fof(f981,plain,(
  ( ! [X17,X16] : (s('type.num.num','const.num.|48|_0') = s('type.num.num',sK41('const.arithmetic.-_2'(s('type.num.num',X16),s('type.num.num',X16)),X17,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X17),s('type.num.num','const.num.|48|_0'))))) )),
  inference(forward_demodulation,[],[f945,f114])).
fof(f945,plain,(
  ( ! [X17,X16] : (~p(s(bool,happ(s(fun('type.num.num',bool),X17),s('type.num.num','const.num.|48|_0')))) | s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X16),s('type.num.num',X16))) = s('type.num.num',sK41('const.arithmetic.-_2'(s('type.num.num',X16),s('type.num.num',X16)),X17,'type.num.num'))) )),
  inference(superposition,[],[f134,f114])).
fof(f984,plain,(
  ( ! [X23,X22] : (s('type.num.num','const.num.|48|_0') = s('type.num.num',sK41('const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X22)))))),X23,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X23),s('type.num.num','const.num.|48|_0'))))) )),
  inference(forward_demodulation,[],[f948,f118])).
fof(f948,plain,(
  ( ! [X23,X22] : (~p(s(bool,happ(s(fun('type.num.num',bool),X23),s('type.num.num','const.num.|48|_0')))) | s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X22))))))) = s('type.num.num',sK41('const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X22)))))),X23,'type.num.num'))) )),
  inference(superposition,[],[f134,f118])).
fof(f985,plain,(
  ( ! [X24,X25] : (s('type.num.num','const.num.|48|_0') = s('type.num.num',sK41('const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X24)))))),X25,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X25),s('type.num.num','const.num.|48|_0'))))) )),
  inference(forward_demodulation,[],[f949,f121])).
fof(f949,plain,(
  ( ! [X24,X25] : (~p(s(bool,happ(s(fun('type.num.num',bool),X25),s('type.num.num','const.num.|48|_0')))) | s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X24))))))) = s('type.num.num',sK41('const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X24)))))),X25,'type.num.num'))) )),
  inference(superposition,[],[f134,f121])).
fof(f986,plain,(
  ( ! [X26] : (s('type.num.num','const.num.|48|_0') = s('type.num.num',sK41('const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))),X26,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X26),s('type.num.num','const.num.|48|_0'))))) )),
  inference(forward_demodulation,[],[f950,f347])).
fof(f950,plain,(
  ( ! [X26] : (~p(s(bool,happ(s(fun('type.num.num',bool),X26),s('type.num.num','const.num.|48|_0')))) | s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.num.num',sK41('const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))),X26,'type.num.num'))) )),
  inference(superposition,[],[f134,f347])).
fof(f987,plain,(
  ( ! [X28,X27] : (s('type.num.num','const.num.|48|_0') = s('type.num.num',sK41('const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X27)),X28,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X28),s('type.num.num','const.num.|48|_0'))))) )),
  inference(forward_demodulation,[],[f951,f111])).
fof(f951,plain,(
  ( ! [X28,X27] : (~p(s(bool,happ(s(fun('type.num.num',bool),X28),s('type.num.num','const.num.|48|_0')))) | s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X27))) = s('type.num.num',sK41('const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X27)),X28,'type.num.num'))) )),
  inference(superposition,[],[f134,f111])).
fof(f988,plain,(
  ( ! [X30,X29] : (s('type.num.num','const.num.|48|_0') = s('type.num.num',sK41('const.arithmetic.*_2'(s('type.num.num',X29),s('type.num.num','const.num.|48|_0')),X30,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X30),s('type.num.num','const.num.|48|_0'))))) )),
  inference(forward_demodulation,[],[f952,f112])).
fof(f952,plain,(
  ( ! [X30,X29] : (~p(s(bool,happ(s(fun('type.num.num',bool),X30),s('type.num.num','const.num.|48|_0')))) | s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X29),s('type.num.num','const.num.|48|_0'))) = s('type.num.num',sK41('const.arithmetic.*_2'(s('type.num.num',X29),s('type.num.num','const.num.|48|_0')),X30,'type.num.num'))) )),
  inference(superposition,[],[f134,f112])).
fof(f983,plain,(
  ( ! [X21,X20] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num',sK41('const.arithmetic.EXP_2'(s('type.num.num',X20),s('type.num.num','const.num.|48|_0')),X21,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X21),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) )),
  inference(forward_demodulation,[],[f947,f161])).
fof(f947,plain,(
  ( ! [X21,X20] : (~p(s(bool,happ(s(fun('type.num.num',bool),X21),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X20),s('type.num.num','const.num.|48|_0'))) = s('type.num.num',sK41('const.arithmetic.EXP_2'(s('type.num.num',X20),s('type.num.num','const.num.|48|_0')),X21,'type.num.num'))) )),
  inference(superposition,[],[f134,f161])).
fof(f975,plain,(
  ( ! [X0] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num',sK41('const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X0,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X0),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) )),
  inference(forward_demodulation,[],[f937,f108])).
fof(f937,plain,(
  ( ! [X0] : (~p(s(bool,happ(s(fun('type.num.num',bool),X0),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num',sK41('const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X0,'type.num.num'))) )),
  inference(superposition,[],[f134,f108])).
fof(f964,plain,(
  ( ! [X57,X56,X55] : (~p(s(bool,happ(s(fun(bool,bool),X56),s(bool,X55)))) | s(bool,'T_0') = s(bool,sK41('T_0',X56,bool)) | s(bool,X55) = s(bool,X57) | s(bool,'T_0') = s(bool,X57)) )),
  inference(superposition,[],[f134,f225])).
fof(f961,plain,(
  ( ! [X47,X48,X49] : (~p(s(bool,happ(s(fun(bool,bool),X49),s(bool,X48)))) | s(bool,X47) = s(bool,sK41(X47,X49,bool)) | s(bool,'T_0') = s(bool,X47) | s(bool,'T_0') = s(bool,X48)) )),
  inference(superposition,[],[f134,f225])).
fof(f959,plain,(
  ( ! [X43,X41,X42] : (~p(s(bool,happ(s(fun(bool,bool),X42),s(bool,'T_0')))) | s(bool,X41) = s(bool,sK41(X41,X42,bool)) | s(bool,X41) = s(bool,X43) | s(bool,'T_0') = s(bool,X43)) )),
  inference(superposition,[],[f134,f225])).
fof(f996,plain,(
  ( ! [X68,X66,X67] : (s(bool,'const.prim_rec.<_2'(s('type.num.num',X67),s('type.num.num',X66))) = s(bool,sK41('const.arithmetic.>_2'(s('type.num.num',X66),s('type.num.num',X67)),X68,bool)) | ~p(s(bool,happ(s(fun(bool,bool),X68),s(bool,'const.prim_rec.<_2'(s('type.num.num',X67),s('type.num.num',X66))))))) )),
  inference(forward_demodulation,[],[f968,f144])).
fof(f968,plain,(
  ( ! [X68,X66,X67] : (~p(s(bool,happ(s(fun(bool,bool),X68),s(bool,'const.prim_rec.<_2'(s('type.num.num',X67),s('type.num.num',X66)))))) | s(bool,'const.arithmetic.>_2'(s('type.num.num',X66),s('type.num.num',X67))) = s(bool,sK41('const.arithmetic.>_2'(s('type.num.num',X66),s('type.num.num',X67)),X68,bool))) )),
  inference(superposition,[],[f134,f144])).
fof(f995,plain,(
  ( ! [X64,X65,X63] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num',X64),s('type.num.num',X63))) = s(bool,sK41('const.arithmetic.>=_2'(s('type.num.num',X63),s('type.num.num',X64)),X65,bool)) | ~p(s(bool,happ(s(fun(bool,bool),X65),s(bool,'const.arithmetic.<=_2'(s('type.num.num',X64),s('type.num.num',X63))))))) )),
  inference(forward_demodulation,[],[f967,f145])).
fof(f967,plain,(
  ( ! [X64,X65,X63] : (~p(s(bool,happ(s(fun(bool,bool),X65),s(bool,'const.arithmetic.<=_2'(s('type.num.num',X64),s('type.num.num',X63)))))) | s(bool,'const.arithmetic.>=_2'(s('type.num.num',X63),s('type.num.num',X64))) = s(bool,sK41('const.arithmetic.>=_2'(s('type.num.num',X63),s('type.num.num',X64)),X65,bool))) )),
  inference(superposition,[],[f134,f145])).
fof(f144,plain,(
  ( ! [X0,X1] : (s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X0))) = s(bool,'const.arithmetic.>_2'(s('type.num.num',X0),s('type.num.num',X1)))) )),
  inference(cnf_transformation,[],[f70])).
fof(f70,plain,(
  ! [X0,X1] : s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X0))) = s(bool,'const.arithmetic.>_2'(s('type.num.num',X0),s('type.num.num',X1)))),
  inference(rectify,[],[f30])).
fof(f30,axiom,(
  ! [X33,X32] : s(bool,'const.prim_rec.<_2'(s('type.num.num',X32),s('type.num.num',X33))) = s(bool,'const.arithmetic.>_2'(s('type.num.num',X33),s('type.num.num',X32)))),
  file('thm.quantHeuristics.LIST_LENGTH_2|48||split|41','thm.arithmetic.GREATER_DEF')).
fof(f147,plain,(
  ( ! [X0,X1] : (s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num',X1)))) )),
  inference(cnf_transformation,[],[f73])).
fof(f73,plain,(
  ! [X0,X1] : s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num',X1)))),
  inference(rectify,[],[f26])).
fof(f26,axiom,(
  ! [X33,X32] : s(bool,'const.prim_rec.<_2'(s('type.num.num',X33),s('type.num.num',X32))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X33))),s('type.num.num',X32)))),
  file('thm.quantHeuristics.LIST_LENGTH_2|48||split|41','thm.arithmetic.LESS_EQ')).
fof(f745,plain,(
  ( ! [X24,X23,X25] : (s(bool,X25) = s(bool,'const.prim_rec.<_2'(s('type.num.num',X24),s('type.num.num',X23))) | s(bool,'T_0') = s(bool,X25) | s(bool,'T_0') = s(bool,'const.arithmetic.>_2'(s('type.num.num',X23),s('type.num.num',X24)))) )),
  inference(superposition,[],[f225,f144])).
fof(f769,plain,(
  ( ! [X19,X17,X18] : (s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',X18),s('type.num.num',X17))) | s(bool,X19) = s(bool,'const.arithmetic.>_2'(s('type.num.num',X17),s('type.num.num',X18))) | s(bool,'T_0') = s(bool,X19)) )),
  inference(superposition,[],[f225,f144])).
fof(f145,plain,(
  ( ! [X0,X1] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0))) = s(bool,'const.arithmetic.>=_2'(s('type.num.num',X0),s('type.num.num',X1)))) )),
  inference(cnf_transformation,[],[f71])).
fof(f71,plain,(
  ! [X0,X1] : s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0))) = s(bool,'const.arithmetic.>=_2'(s('type.num.num',X0),s('type.num.num',X1)))),
  inference(rectify,[],[f28])).
fof(f28,axiom,(
  ! [X32,X33] : s(bool,'const.arithmetic.<=_2'(s('type.num.num',X33),s('type.num.num',X32))) = s(bool,'const.arithmetic.>=_2'(s('type.num.num',X32),s('type.num.num',X33)))),
  file('thm.quantHeuristics.LIST_LENGTH_2|48||split|41','thm.arithmetic.GREATER_EQ')).
fof(f744,plain,(
  ( ! [X21,X22,X20] : (s(bool,X22) = s(bool,'const.arithmetic.<=_2'(s('type.num.num',X21),s('type.num.num',X20))) | s(bool,'T_0') = s(bool,X22) | s(bool,'T_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num',X20),s('type.num.num',X21)))) )),
  inference(superposition,[],[f225,f145])).
fof(f768,plain,(
  ( ! [X14,X15,X16] : (s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',X15),s('type.num.num',X14))) | s(bool,X16) = s(bool,'const.arithmetic.>=_2'(s('type.num.num',X14),s('type.num.num',X15))) | s(bool,'T_0') = s(bool,X16)) )),
  inference(superposition,[],[f225,f145])).
fof(f998,plain,(
  ( ! [X2,X0,X3,X1] : (s(X0,X2) = s(X0,sK41(X2,X1,X0)) | s(bool,X3) = s(bool,happ(s(fun(X0,bool),X1),s(X0,X2))) | s(bool,'T_0') = s(bool,X3)) )),
  inference(subsumption_resolution,[],[f970,f106])).
fof(f970,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,'T_0')) | s(X0,X2) = s(X0,sK41(X2,X1,X0)) | s(bool,X3) = s(bool,happ(s(fun(X0,bool),X1),s(X0,X2))) | s(bool,'T_0') = s(bool,X3)) )),
  inference(superposition,[],[f134,f225])).
fof(f808,plain,(
  ( ! [X2,X1] : (p(s(bool,X1)) | s(bool,X1) = s(bool,X2) | s(bool,'T_0') = s(bool,X2)) )),
  inference(superposition,[],[f106,f225])).
fof(f758,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,X0) = s(bool,X1) | s(bool,X1) = s(bool,X2) | s(bool,'T_0') = s(bool,X2) | s(bool,X0) = s(bool,X3) | s(bool,'T_0') = s(bool,X3)) )),
  inference(superposition,[],[f225,f225])).
fof(f707,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.NIL_0')))) )),
  inference(forward_demodulation,[],[f704,f127])).
fof(f704,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X0),X1),s('type.list.list'(X0),'const.list.NIL_0')))))) )),
  inference(unit_resulting_resolution,[],[f127,f126])).
fof(f431,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))),
  inference(forward_demodulation,[],[f417,f117])).
fof(f417,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),
  inference(superposition,[],[f120,f108])).
fof(f387,plain,(
  s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),
  inference(superposition,[],[f119,f108])).
fof(f347,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))),
  inference(superposition,[],[f118,f108])).
fof(f268,plain,(
  ( ! [X2,X0,X3,X1] : (s(X1,X2) = s(X1,'const.bool.COND_3'(s(bool,X0),s(X1,X3),s(X1,X2))) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f127,f124])).
fof(f227,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f109,f124])).
fof(f225,plain,(
  ( ! [X0,X1] : (s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X1) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f124,f124])).
fof(f153,plain,(
  ( ! [X2,X0,X3,X1] : (s(X1,f(s(X0,sK46(X3,X2,X1,X0)))) != s(X1,g(s(X0,sK46(X3,X2,X1,X0)))) | s(fun(X0,X1),X2) = s(fun(X0,X1),X3)) )),
  inference(cnf_transformation,[],[f102])).
fof(f102,plain,(
  ! [X0,X1,X2,X3] : (s(X1,f(s(X0,sK46(X3,X2,X1,X0)))) != s(X1,g(s(X0,sK46(X3,X2,X1,X0)))) | s(fun(X0,X1),X2) = s(fun(X0,X1),X3))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK46])],[f83])).
fof(f83,plain,(
  ! [X0,X1,X2,X3] : (? [X4] : s(X1,f(s(X0,X4))) != s(X1,g(s(X0,X4))) | s(fun(X0,X1),X2) = s(fun(X0,X1),X3))),
  inference(ennf_transformation,[],[f81])).
fof(f81,plain,(
  ! [X0,X1,X2,X3] : (! [X4] : s(X1,f(s(X0,X4))) = s(X1,g(s(X0,X4))) => s(fun(X0,X1),X2) = s(fun(X0,X1),X3))),
  inference(flattening,[],[f80])).
fof(f80,plain,(
  ! [X0,X1] : ! [X2,X3] : (! [X4] : s(X1,f(s(X0,X4))) = s(X1,g(s(X0,X4))) => s(fun(X0,X1),X2) = s(fun(X0,X1),X3))),
  inference(rectify,[],[f4])).
fof(f4,axiom,(
  ! [X1,X2] : ! [X3,X4] : (! [X5] : s(X2,f(s(X1,X5))) = s(X2,g(s(X1,X5))) => s(fun(X1,X2),X3) = s(fun(X1,X2),X4))),
  file('thm.quantHeuristics.LIST_LENGTH_2|48||split|41',aHL_EXT)).
fof(f151,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))) )),
  inference(cnf_transformation,[],[f77])).
fof(f77,plain,(
  ! [X0,X1] : s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))),
  inference(rectify,[],[f22])).
fof(f22,axiom,(
  ! [X32,X33] : s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X32),s('type.num.num',X33))))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X32))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X33)))))),
  file('thm.quantHeuristics.LIST_LENGTH_2|48||split|41','thm.numeral.numeral_distrib|split|2')).
fof(f150,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num',X1))))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))) )),
  inference(cnf_transformation,[],[f76])).
fof(f76,plain,(
  ! [X0,X1] : s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num',X1))))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))),
  inference(rectify,[],[f19])).
fof(f19,axiom,(
  ! [X32,X33] : s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X32),s('type.num.num',X33))))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X32))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X33)))))),
  file('thm.quantHeuristics.LIST_LENGTH_2|48||split|41','thm.numeral.numeral_distrib|split|12')).
fof(f149,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X0),s('type.num.num',X1))))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))) )),
  inference(cnf_transformation,[],[f75])).
fof(f75,plain,(
  ! [X0,X1] : s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X0),s('type.num.num',X1))))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))),
  inference(rectify,[],[f12])).
fof(f12,axiom,(
  ! [X32,X33] : s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X32),s('type.num.num',X33))))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X32))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X33)))))),
  file('thm.quantHeuristics.LIST_LENGTH_2|48||split|41','thm.numeral.numeral_distrib|split|8')).
fof(f148,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))) )),
  inference(cnf_transformation,[],[f74])).
fof(f74,plain,(
  ! [X0,X1] : s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))),
  inference(rectify,[],[f13])).
fof(f13,axiom,(
  ! [X32,X33] : s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X32),s('type.num.num',X33))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X32))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X33)))))),
  file('thm.quantHeuristics.LIST_LENGTH_2|48||split|41','thm.numeral.numeral_distrib|split|5')).
fof(f146,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f72])).
fof(f72,plain,(
  ! [X0,X1] : s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X0)))),
  inference(rectify,[],[f17])).
fof(f17,axiom,(
  ! [X33,X32] : s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X32),s('type.num.num',X33))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X33),s('type.num.num',X32)))),
  file('thm.quantHeuristics.LIST_LENGTH_2|48||split|41','thm.arithmetic.ADD_SYM')).
fof(f140,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.num.num',X2) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK44(X3,X2,X1,X0)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X3)))) )),
  inference(cnf_transformation,[],[f101])).
fof(f141,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.num.num',X3) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK45(X3,X2,X1,X0)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X3)))) )),
  inference(cnf_transformation,[],[f101])).
fof(f142,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),sK44(X3,X2,X1,X0)),s('type.list.list'(X0),sK45(X3,X2,X1,X0)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X3)))) )),
  inference(cnf_transformation,[],[f101])).
fof(f126,plain,(
  ( ! [X0,X1] : (s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),X1) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))) )),
  inference(cnf_transformation,[],[f87])).
fof(f124,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f3])).
fof(f3,axiom,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) | s(bool,'F_0') = s(bool,X0))),
  file('thm.quantHeuristics.LIST_LENGTH_2|48||split|41',aHL_BOOL_CASES)).
fof(f161,plain,(
  ( ! [X0] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) )),
  inference(forward_demodulation,[],[f123,f108])).
fof(f123,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) )),
  inference(cnf_transformation,[],[f55])).
fof(f55,plain,(
  ! [X0] : s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))),
  inference(rectify,[],[f33])).
fof(f33,axiom,(
  ! [X32] : s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X32),s('type.num.num','const.num.|48|_0')))),
  file('thm.quantHeuristics.LIST_LENGTH_2|48||split|41','thm.numeral.numeral_distrib|split|11')).
fof(f122,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))) )),
  inference(cnf_transformation,[],[f54])).
fof(f54,plain,(
  ! [X0] : s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))),
  inference(rectify,[],[f24])).
fof(f24,axiom,(
  ! [X32] : s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X32))))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X32)))))),
  file('thm.quantHeuristics.LIST_LENGTH_2|48||split|41','thm.numeral.numeral_suc|split|2')).
fof(f121,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))) )),
  inference(cnf_transformation,[],[f53])).
fof(f53,plain,(
  ! [X0] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))),
  inference(rectify,[],[f18])).
fof(f18,axiom,(
  ! [X32] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X32)))))))),
  file('thm.quantHeuristics.LIST_LENGTH_2|48||split|41','thm.numeral.numeral_distrib|split|10')).
fof(f120,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))) )),
  inference(cnf_transformation,[],[f52])).
fof(f52,plain,(
  ! [X0] : s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))),
  inference(rectify,[],[f25])).
fof(f25,axiom,(
  ! [X32] : s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X32))))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X32)))))),
  file('thm.quantHeuristics.LIST_LENGTH_2|48||split|41','thm.numeral.numeral_distrib|split|14')).
fof(f119,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X0))))) = s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))) )),
  inference(cnf_transformation,[],[f51])).
fof(f51,plain,(
  ! [X0] : s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X0))))) = s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))),
  inference(rectify,[],[f37])).
fof(f37,axiom,(
  ! [X32] : s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X32))))) = s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X32)))))),
  file('thm.quantHeuristics.LIST_LENGTH_2|48||split|41','thm.numeral.numeral_distrib|split|16')).
fof(f118,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))))) )),
  inference(cnf_transformation,[],[f50])).
fof(f50,plain,(
  ! [X0] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))))),
  inference(rectify,[],[f11])).
fof(f11,axiom,(
  ! [X32] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X32)))))))),
  file('thm.quantHeuristics.LIST_LENGTH_2|48||split|41','thm.numeral.numeral_distrib|split|9')).
fof(f117,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))) )),
  inference(cnf_transformation,[],[f49])).
fof(f49,plain,(
  ! [X0] : s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))),
  inference(rectify,[],[f16])).
fof(f16,axiom,(
  ! [X32] : s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X32))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X32)))))),
  file('thm.quantHeuristics.LIST_LENGTH_2|48||split|41','thm.numeral.numeral_suc|split|1')).
fof(f114,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X0),s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f46])).
fof(f46,plain,(
  ! [X0] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X0),s('type.num.num',X0)))),
  inference(rectify,[],[f27])).
fof(f27,axiom,(
  ! [X36] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X36),s('type.num.num',X36)))),
  file('thm.quantHeuristics.LIST_LENGTH_2|48||split|41','thm.arithmetic.SUB_EQUAL_|48|')).
fof(f113,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f45])).
fof(f45,plain,(
  ! [X0] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))),
  inference(rectify,[],[f10])).
fof(f10,axiom,(
  ! [X32] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X32)))),
  file('thm.quantHeuristics.LIST_LENGTH_2|48||split|41','thm.numeral.numeral_distrib|split|6')).
fof(f112,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) )),
  inference(cnf_transformation,[],[f44])).
fof(f44,plain,(
  ! [X0] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))),
  inference(rectify,[],[f23])).
fof(f23,axiom,(
  ! [X32] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X32),s('type.num.num','const.num.|48|_0')))),
  file('thm.quantHeuristics.LIST_LENGTH_2|48||split|41','thm.numeral.numeral_distrib|split|4')).
fof(f111,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f43])).
fof(f43,plain,(
  ! [X0] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))),
  inference(rectify,[],[f29])).
fof(f29,axiom,(
  ! [X32] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X32)))),
  file('thm.quantHeuristics.LIST_LENGTH_2|48||split|41','thm.arithmetic.MULT|split|0')).
fof(f108,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  inference(cnf_transformation,[],[f21])).
fof(f21,axiom,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  file('thm.quantHeuristics.LIST_LENGTH_2|48||split|41','thm.numeral.numeral_distrib|split|13')).
fof(f107,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))),
  inference(cnf_transformation,[],[f38])).
fof(f38,axiom,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))),
  file('thm.quantHeuristics.LIST_LENGTH_2|48||split|41','thm.numeral.numeral_suc|split|0')).
fof(f106,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f1])).
fof(f1,axiom,(
  p(s(bool,'T_0'))),
  file('thm.quantHeuristics.LIST_LENGTH_2|48||split|41',aHL_TRUTH)).
fof(f3910,plain,(
  ( ! [X19,X20,X18] : (s(bool,'T_0') != s(bool,X19) | s('type.num.num',sK1) = s('type.num.num',sK41('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),X18,'type.num.num')) | s(bool,'T_0') = s(bool,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X20),s(bool,X19)))) ) | ($spl6 | $spl34)),
  inference(duplicate_literal_removal,[],[f3875])).
fof(f3875,plain,(
  ( ! [X19,X20,X18] : (s(bool,'T_0') != s(bool,X19) | s('type.num.num',sK1) = s('type.num.num',sK41('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),X18,'type.num.num')) | s(bool,'T_0') = s(bool,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X20),s(bool,X19))) | s('type.num.num',sK1) = s('type.num.num',sK41('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),X18,'type.num.num'))) ) | ($spl6 | $spl34)),
  inference(superposition,[],[f2628,f1015])).
fof(f3968,plain,(
  ( ! [X13,X11] : (s(bool,X13) = s(bool,happ(s(fun('type.num.num',bool),X11),s('type.num.num',sK1))) | s('type.num.num',sK1) = s('type.num.num',sK41('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),X11,'type.num.num'))) ) | $spl40),
  inference(cnf_transformation,[],[f3968_D])).
fof(f3968_D,plain,(
  ( ! [X13,X11] : (s(bool,X13) = s(bool,happ(s(fun('type.num.num',bool),X11),s('type.num.num',sK1))) | s('type.num.num',sK1) = s('type.num.num',sK41('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),X11,'type.num.num'))) ) <=> ~$spl40),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl40])])).
fof(f3912,plain,(
  ( ! [X14,X12,X13,X11] : (s(bool,'T_0') != s(bool,X12) | s(bool,X13) = s(bool,happ(s(fun('type.num.num',bool),X11),s('type.num.num',sK1))) | s('type.num.num',sK1) = s('type.num.num',sK41('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),X11,'type.num.num')) | s(bool,'T_0') = s(bool,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X14),s(bool,X12)))) ) | $spl6),
  inference(duplicate_literal_removal,[],[f3873])).
fof(f3873,plain,(
  ( ! [X14,X12,X13,X11] : (s(bool,'T_0') != s(bool,X12) | s(bool,X13) = s(bool,happ(s(fun('type.num.num',bool),X11),s('type.num.num',sK1))) | s('type.num.num',sK1) = s('type.num.num',sK41('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),X11,'type.num.num')) | s(bool,'T_0') = s(bool,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X14),s(bool,X12))) | s('type.num.num',sK1) = s('type.num.num',sK41('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),X11,'type.num.num'))) ) | $spl6),
  inference(superposition,[],[f1049,f1015])).
fof(f3946,plain,(
  ( ! [X4,X2,X3,X1] : (s(bool,X1) = s(bool,X2) | s(bool,'T_0') = s(bool,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X4),s(bool,X1))) | s(bool,'T_0') = s(bool,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X3),s(bool,X2)))) ) | $spl38),
  inference(cnf_transformation,[],[f3946_D])).
fof(f3946_D,plain,(
  ( ! [X4,X2,X3,X1] : (s(bool,X1) = s(bool,X2) | s(bool,'T_0') = s(bool,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X4),s(bool,X1))) | s(bool,'T_0') = s(bool,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X3),s(bool,X2)))) ) <=> ~$spl38),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl38])])).
fof(f3936,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s(bool,X1) = s(bool,X2) | s(bool,'T_0') = s(bool,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X3),s(bool,X2))) | s('type.num.num',sK1) = s('type.num.num',sK41('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),X0,'type.num.num')) | s(bool,'T_0') = s(bool,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X4),s(bool,X1)))) ) | $spl6),
  inference(duplicate_literal_removal,[],[f3778])).
fof(f3778,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s(bool,X1) = s(bool,X2) | s(bool,'T_0') = s(bool,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X3),s(bool,X2))) | s('type.num.num',sK1) = s('type.num.num',sK41('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),X0,'type.num.num')) | s(bool,'T_0') = s(bool,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X4),s(bool,X1))) | s('type.num.num',sK1) = s('type.num.num',sK41('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),X0,'type.num.num'))) ) | $spl6),
  inference(superposition,[],[f1015,f1015])).
fof(f2628,plain,(
  ( ! [X1] : (s(bool,'T_0') != s(bool,happ(s(fun('type.num.num',bool),X1),s('type.num.num',sK1))) | s('type.num.num',sK1) = s('type.num.num',sK41('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),X1,'type.num.num'))) ) | $spl34),
  inference(cnf_transformation,[],[f2628_D])).
fof(f2628_D,plain,(
  ( ! [X1] : (s(bool,'T_0') != s(bool,happ(s(fun('type.num.num',bool),X1),s('type.num.num',sK1))) | s('type.num.num',sK1) = s('type.num.num',sK41('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),X1,'type.num.num'))) ) <=> ~$spl34),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl34])])).
fof(f2629,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,happ(s(fun('type.num.num',bool),X0),s('type.num.num',sK1))) | s('type.num.num',sK1) = s('type.num.num',sK41('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),X0,'type.num.num'))) ) | $spl36),
  inference(cnf_transformation,[],[f2629_D])).
fof(f2629_D,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,happ(s(fun('type.num.num',bool),X0),s('type.num.num',sK1))) | s('type.num.num',sK1) = s('type.num.num',sK41('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),X0,'type.num.num'))) ) <=> ~$spl36),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl36])])).
fof(f2624,plain,(
  ( ! [X0,X1] : (s(bool,'T_0') = s(bool,happ(s(fun('type.num.num',bool),X0),s('type.num.num',sK1))) | s(bool,'T_0') != s(bool,happ(s(fun('type.num.num',bool),X1),s('type.num.num',sK1))) | s('type.num.num',sK1) = s('type.num.num',sK41('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),X0,'type.num.num')) | s('type.num.num',sK1) = s('type.num.num',sK41('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),X1,'type.num.num'))) ) | $spl6),
  inference(condensation,[],[f2613])).
fof(f2613,plain,(
  ( ! [X6,X7,X5] : (s(bool,'T_0') != s(bool,happ(s(fun('type.num.num',bool),X6),s('type.num.num',sK1))) | s(bool,X7) = s(bool,happ(s(fun('type.num.num',bool),X5),s('type.num.num',sK1))) | s('type.num.num',sK1) = s('type.num.num',sK41('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),X5,'type.num.num')) | s('type.num.num',sK1) = s('type.num.num',sK41('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),X6,'type.num.num')) | s(bool,'T_0') = s(bool,happ(s(fun('type.num.num',bool),X5),s('type.num.num',sK1)))) ) | $spl6),
  inference(superposition,[],[f1049,f1005])).
fof(f2607,plain,(
  ( ! [X2,X3,X1] : (p(s(bool,happ(s(fun(X1,bool),X2),s(X1,sK43('T_0',X2,X1))))) | ~p(s(bool,happ(s(fun(X1,bool),X2),s(X1,X3))))) ) | $spl32),
  inference(cnf_transformation,[],[f2607_D])).
fof(f2607_D,plain,(
  ( ! [X2,X3,X1] : (p(s(bool,happ(s(fun(X1,bool),X2),s(X1,sK43('T_0',X2,X1))))) | ~p(s(bool,happ(s(fun(X1,bool),X2),s(X1,X3))))) ) <=> ~$spl32),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl32])])).
fof(f1073,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,X0)) ) | $spl16),
  inference(cnf_transformation,[],[f1073_D])).
fof(f1073_D,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,X0)) ) <=> ~$spl16),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl16])])).
fof(f2609,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,happ(s(fun(X1,bool),X2),s(X1,sK43('T_0',X2,X1))))) | ~p(s(bool,happ(s(fun(X1,bool),X2),s(X1,X3))))) )),
  inference(condensation,[],[f2608])).
fof(f2608,plain,(
  ( ! [X37,X35,X38,X36,X34] : (p(s(bool,happ(s(fun(X35,bool),X36),s(X35,sK43('T_0',X36,X35))))) | ~p(s(bool,happ(s(fun(X35,bool),X36),s(X35,X37)))) | s(bool,X34) = s(bool,X38) | s(bool,'T_0') = s(bool,X38)) )),
  inference(subsumption_resolution,[],[f2595,f808])).
fof(f2595,plain,(
  ( ! [X37,X35,X38,X36,X34] : (~p(s(bool,X34)) | p(s(bool,happ(s(fun(X35,bool),X36),s(X35,sK43('T_0',X36,X35))))) | ~p(s(bool,happ(s(fun(X35,bool),X36),s(X35,X37)))) | s(bool,X34) = s(bool,X38) | s(bool,'T_0') = s(bool,X38)) )),
  inference(superposition,[],[f138,f225])).
fof(f2606,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,happ(s(fun(X1,bool),X2),s(X1,sK43('T_0',X2,X1))))) | ~p(s(bool,happ(s(fun(X1,bool),X2),s(X1,X3))))) )),
  inference(condensation,[],[f2605])).
fof(f2605,plain,(
  ( ! [X30,X33,X31,X29,X32] : (p(s(bool,happ(s(fun(X30,bool),X31),s(X30,sK43('T_0',X31,X30))))) | ~p(s(bool,happ(s(fun(X30,bool),X31),s(X30,X32)))) | s(bool,X29) = s(bool,X33) | s(bool,'T_0') = s(bool,X33)) )),
  inference(subsumption_resolution,[],[f2594,f808])).
fof(f2594,plain,(
  ( ! [X30,X33,X31,X29,X32] : (~p(s(bool,X29)) | p(s(bool,happ(s(fun(X30,bool),X31),s(X30,sK43('T_0',X31,X30))))) | ~p(s(bool,happ(s(fun(X30,bool),X31),s(X30,X32)))) | s(bool,X29) = s(bool,X33) | s(bool,'T_0') = s(bool,X33)) )),
  inference(superposition,[],[f138,f225])).
fof(f2489,plain,(
  ( ! [X2,X3,X1] : (p(s(bool,happ(s(fun(X1,bool),X2),s(X1,sK42('T_0',X2,X1))))) | ~p(s(bool,happ(s(fun(X1,bool),X2),s(X1,X3))))) ) | $spl30),
  inference(cnf_transformation,[],[f2489_D])).
fof(f2489_D,plain,(
  ( ! [X2,X3,X1] : (p(s(bool,happ(s(fun(X1,bool),X2),s(X1,sK42('T_0',X2,X1))))) | ~p(s(bool,happ(s(fun(X1,bool),X2),s(X1,X3))))) ) <=> ~$spl30),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl30])])).
fof(f2491,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,happ(s(fun(X1,bool),X2),s(X1,sK42('T_0',X2,X1))))) | ~p(s(bool,happ(s(fun(X1,bool),X2),s(X1,X3))))) )),
  inference(condensation,[],[f2490])).
fof(f2490,plain,(
  ( ! [X37,X35,X38,X36,X34] : (p(s(bool,happ(s(fun(X35,bool),X36),s(X35,sK42('T_0',X36,X35))))) | ~p(s(bool,happ(s(fun(X35,bool),X36),s(X35,X37)))) | s(bool,X34) = s(bool,X38) | s(bool,'T_0') = s(bool,X38)) )),
  inference(subsumption_resolution,[],[f2478,f808])).
fof(f2478,plain,(
  ( ! [X37,X35,X38,X36,X34] : (~p(s(bool,X34)) | p(s(bool,happ(s(fun(X35,bool),X36),s(X35,sK42('T_0',X36,X35))))) | ~p(s(bool,happ(s(fun(X35,bool),X36),s(X35,X37)))) | s(bool,X34) = s(bool,X38) | s(bool,'T_0') = s(bool,X38)) )),
  inference(superposition,[],[f136,f225])).
fof(f2488,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,happ(s(fun(X1,bool),X2),s(X1,sK42('T_0',X2,X1))))) | ~p(s(bool,happ(s(fun(X1,bool),X2),s(X1,X3))))) )),
  inference(condensation,[],[f2487])).
fof(f2487,plain,(
  ( ! [X30,X33,X31,X29,X32] : (p(s(bool,happ(s(fun(X30,bool),X31),s(X30,sK42('T_0',X31,X30))))) | ~p(s(bool,happ(s(fun(X30,bool),X31),s(X30,X32)))) | s(bool,X29) = s(bool,X33) | s(bool,'T_0') = s(bool,X33)) )),
  inference(subsumption_resolution,[],[f2477,f808])).
fof(f2477,plain,(
  ( ! [X30,X33,X31,X29,X32] : (~p(s(bool,X29)) | p(s(bool,happ(s(fun(X30,bool),X31),s(X30,sK42('T_0',X31,X30))))) | ~p(s(bool,happ(s(fun(X30,bool),X31),s(X30,X32)))) | s(bool,X29) = s(bool,X33) | s(bool,'T_0') = s(bool,X33)) )),
  inference(superposition,[],[f136,f225])).
fof(f1959,plain,(
  ( ! [X23,X22] : (s(bool,'F_0') = s(bool,happ(s(fun('type.num.num',bool),X22),s('type.num.num',sK1))) | s('type.num.num',sK1) = s('type.num.num',sK41(sK41('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),X23,'type.num.num'),X22,'type.num.num'))) ) | $spl28),
  inference(cnf_transformation,[],[f1959_D])).
fof(f1959_D,plain,(
  ( ! [X23,X22] : (s(bool,'F_0') = s(bool,happ(s(fun('type.num.num',bool),X22),s('type.num.num',sK1))) | s('type.num.num',sK1) = s('type.num.num',sK41(sK41('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),X23,'type.num.num'),X22,'type.num.num'))) ) <=> ~$spl28),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl28])])).
fof(f1946,plain,(
  ( ! [X2,X0,X1] : (s(bool,'F_0') = s(bool,happ(s(fun('type.num.num',bool),X1),s('type.num.num',sK1))) | s(bool,'T_0') = s(bool,X0) | s('type.num.num',sK1) = s('type.num.num',sK41(sK41('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),X2,'type.num.num'),X1,'type.num.num'))) ) | $spl22),
  inference(duplicate_literal_removal,[],[f1904])).
fof(f1904,plain,(
  ( ! [X2,X0,X1] : (s(bool,'F_0') = s(bool,happ(s(fun('type.num.num',bool),X1),s('type.num.num',sK1))) | s(bool,'T_0') = s(bool,X0) | s('type.num.num',sK1) = s('type.num.num',sK41(sK41('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),X2,'type.num.num'),X1,'type.num.num')) | s(bool,'T_0') = s(bool,X0)) ) | $spl22),
  inference(superposition,[],[f124,f1776])).
fof(f1776,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num',sK1) = s('type.num.num',sK41(sK41('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),X1,'type.num.num'),X0,'type.num.num')) | s(bool,X2) = s(bool,happ(s(fun('type.num.num',bool),X0),s('type.num.num',sK1))) | s(bool,'T_0') = s(bool,X2)) ) | $spl22),
  inference(subsumption_resolution,[],[f1771,f106])).
fof(f1771,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'T_0')) | s('type.num.num',sK1) = s('type.num.num',sK41(sK41('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),X1,'type.num.num'),X0,'type.num.num')) | s(bool,X2) = s(bool,happ(s(fun('type.num.num',bool),X0),s('type.num.num',sK1))) | s(bool,'T_0') = s(bool,X2)) ) | $spl22),
  inference(superposition,[],[f1769,f225])).
fof(f1769,plain,(
  ( ! [X33,X34] : (~p(s(bool,happ(s(fun('type.num.num',bool),X34),s('type.num.num',sK1)))) | s('type.num.num',sK1) = s('type.num.num',sK41(sK41('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),X33,'type.num.num'),X34,'type.num.num'))) ) | $spl22),
  inference(forward_demodulation,[],[f1765,f1735])).
fof(f1765,plain,(
  ( ! [X33,X34] : (~p(s(bool,happ(s(fun('type.num.num',bool),X34),s('type.num.num',sK1)))) | s('type.num.num',sK41('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),X33,'type.num.num')) = s('type.num.num',sK41(sK41('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),X33,'type.num.num'),X34,'type.num.num'))) ) | $spl22),
  inference(superposition,[],[f134,f1735])).
fof(f1952,plain,(
  ( ! [X23,X21,X22] : (s(bool,'F_0') = s(bool,happ(s(fun('type.num.num',bool),X22),s('type.num.num',sK1))) | s('type.num.num',sK1) = s('type.num.num',sK41(sK41('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),X23,'type.num.num'),X22,'type.num.num')) | s(bool,'T_0') = s(bool,X21)) ) | $spl22),
  inference(duplicate_literal_removal,[],[f1862])).
fof(f1862,plain,(
  ( ! [X23,X21,X22] : (s(bool,'F_0') = s(bool,happ(s(fun('type.num.num',bool),X22),s('type.num.num',sK1))) | s('type.num.num',sK1) = s('type.num.num',sK41(sK41('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),X23,'type.num.num'),X22,'type.num.num')) | s(bool,'T_0') = s(bool,X21) | s(bool,'T_0') = s(bool,X21)) ) | $spl22),
  inference(superposition,[],[f1776,f124])).
fof(f1958,plain,(
  ( ! [X4,X2,X3,X1] : (s(bool,happ(s(fun('type.num.num',bool),X1),s('type.num.num',sK1))) = s(bool,happ(s(fun('type.num.num',bool),X2),s('type.num.num',sK1))) | s('type.num.num',sK1) = s('type.num.num',sK41(sK41('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),X4,'type.num.num'),X1,'type.num.num')) | s('type.num.num',sK1) = s('type.num.num',sK41(sK41('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),X3,'type.num.num'),X2,'type.num.num'))) ) | $spl26),
  inference(cnf_transformation,[],[f1958_D])).
fof(f1958_D,plain,(
  ( ! [X4,X2,X3,X1] : (s(bool,happ(s(fun('type.num.num',bool),X1),s('type.num.num',sK1))) = s(bool,happ(s(fun('type.num.num',bool),X2),s('type.num.num',sK1))) | s('type.num.num',sK1) = s('type.num.num',sK41(sK41('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),X4,'type.num.num'),X1,'type.num.num')) | s('type.num.num',sK1) = s('type.num.num',sK41(sK41('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),X3,'type.num.num'),X2,'type.num.num'))) ) <=> ~$spl26),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl26])])).
fof(f1957,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s(bool,happ(s(fun('type.num.num',bool),X1),s('type.num.num',sK1))) = s(bool,happ(s(fun('type.num.num',bool),X2),s('type.num.num',sK1))) | s('type.num.num',sK1) = s('type.num.num',sK41(sK41('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),X3,'type.num.num'),X2,'type.num.num')) | s(bool,'T_0') = s(bool,X0) | s('type.num.num',sK1) = s('type.num.num',sK41(sK41('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),X4,'type.num.num'),X1,'type.num.num'))) ) | $spl22),
  inference(duplicate_literal_removal,[],[f1857])).
fof(f1857,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s(bool,happ(s(fun('type.num.num',bool),X1),s('type.num.num',sK1))) = s(bool,happ(s(fun('type.num.num',bool),X2),s('type.num.num',sK1))) | s('type.num.num',sK1) = s('type.num.num',sK41(sK41('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),X3,'type.num.num'),X2,'type.num.num')) | s(bool,'T_0') = s(bool,X0) | s('type.num.num',sK1) = s('type.num.num',sK41(sK41('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),X4,'type.num.num'),X1,'type.num.num')) | s(bool,'T_0') = s(bool,X0)) ) | $spl22),
  inference(superposition,[],[f1776,f1776])).
fof(f1736,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2)))) | s(bool,'T_0') = s(bool,happ(s(fun(X0,bool),X1),s(X0,sK41(X2,X1,X0))))) ) | $spl24),
  inference(cnf_transformation,[],[f1736_D])).
fof(f1736_D,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2)))) | s(bool,'T_0') = s(bool,happ(s(fun(X0,bool),X1),s(X0,sK41(X2,X1,X0))))) ) <=> ~$spl24),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl24])])).
fof(f1734,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2)))) | s('type.num.num',sK1) = s('type.num.num',sK41('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),X3,'type.num.num')) | s(bool,'T_0') = s(bool,happ(s(fun(X0,bool),X1),s(X0,sK41(X2,X1,X0))))) ) | $spl6),
  inference(subsumption_resolution,[],[f1724,f978])).
fof(f1724,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,happ(s(fun('type.num.num',bool),X3),s('type.num.num',sK1)))) | ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2)))) | s('type.num.num',sK1) = s('type.num.num',sK41('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),X3,'type.num.num')) | s(bool,'T_0') = s(bool,happ(s(fun(X0,bool),X1),s(X0,sK41(X2,X1,X0))))) ) | $spl6),
  inference(superposition,[],[f135,f1005])).
fof(f1138,plain,(
  $false | $spl16),
  inference(subsumption_resolution,[],[f1076,f106])).
fof(f1076,plain,(
  ~p(s(bool,'T_0')) | $spl16),
  inference(backward_demodulation,[],[f1073,f109])).
fof(f1075,plain,(
  ( ! [X16] : (s(bool,'F_0') = s(bool,happ(s(fun('type.num.num',bool),X16),s('type.num.num',sK1))) | s('type.num.num',sK1) = s('type.num.num',sK41('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),X16,'type.num.num'))) ) | $spl20),
  inference(cnf_transformation,[],[f1075_D])).
fof(f1075_D,plain,(
  ( ! [X16] : (s(bool,'F_0') = s(bool,happ(s(fun('type.num.num',bool),X16),s('type.num.num',sK1))) | s('type.num.num',sK1) = s('type.num.num',sK41('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),X16,'type.num.num'))) ) <=> ~$spl20),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl20])])).
fof(f1061,plain,(
  ( ! [X0,X1] : (s(bool,'F_0') = s(bool,happ(s(fun('type.num.num',bool),X1),s('type.num.num',sK1))) | s(bool,'T_0') = s(bool,X0) | s('type.num.num',sK1) = s('type.num.num',sK41('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),X1,'type.num.num'))) ) | $spl6),
  inference(duplicate_literal_removal,[],[f1024])).
fof(f1024,plain,(
  ( ! [X0,X1] : (s(bool,'F_0') = s(bool,happ(s(fun('type.num.num',bool),X1),s('type.num.num',sK1))) | s(bool,'T_0') = s(bool,X0) | s('type.num.num',sK1) = s('type.num.num',sK41('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),X1,'type.num.num')) | s(bool,'T_0') = s(bool,X0)) ) | $spl6),
  inference(superposition,[],[f124,f1005])).
fof(f1067,plain,(
  ( ! [X15,X16] : (s(bool,'F_0') = s(bool,happ(s(fun('type.num.num',bool),X16),s('type.num.num',sK1))) | s('type.num.num',sK1) = s('type.num.num',sK41('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),X16,'type.num.num')) | s(bool,'T_0') = s(bool,X15)) ) | $spl6),
  inference(duplicate_literal_removal,[],[f1011])).
fof(f1011,plain,(
  ( ! [X15,X16] : (s(bool,'F_0') = s(bool,happ(s(fun('type.num.num',bool),X16),s('type.num.num',sK1))) | s('type.num.num',sK1) = s('type.num.num',sK41('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),X16,'type.num.num')) | s(bool,'T_0') = s(bool,X15) | s(bool,'T_0') = s(bool,X15)) ) | $spl6),
  inference(superposition,[],[f1005,f124])).
fof(f1074,plain,(
  ( ! [X2,X1] : (s(bool,happ(s(fun('type.num.num',bool),X1),s('type.num.num',sK1))) = s(bool,happ(s(fun('type.num.num',bool),X2),s('type.num.num',sK1))) | s('type.num.num',sK1) = s('type.num.num',sK41('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),X1,'type.num.num')) | s('type.num.num',sK1) = s('type.num.num',sK41('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),X2,'type.num.num'))) ) | $spl18),
  inference(cnf_transformation,[],[f1074_D])).
fof(f1074_D,plain,(
  ( ! [X2,X1] : (s(bool,happ(s(fun('type.num.num',bool),X1),s('type.num.num',sK1))) = s(bool,happ(s(fun('type.num.num',bool),X2),s('type.num.num',sK1))) | s('type.num.num',sK1) = s('type.num.num',sK41('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),X1,'type.num.num')) | s('type.num.num',sK1) = s('type.num.num',sK41('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),X2,'type.num.num'))) ) <=> ~$spl18),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl18])])).
fof(f1072,plain,(
  ( ! [X2,X0,X1] : (s(bool,happ(s(fun('type.num.num',bool),X1),s('type.num.num',sK1))) = s(bool,happ(s(fun('type.num.num',bool),X2),s('type.num.num',sK1))) | s('type.num.num',sK1) = s('type.num.num',sK41('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),X2,'type.num.num')) | s(bool,'T_0') = s(bool,X0) | s('type.num.num',sK1) = s('type.num.num',sK41('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),X1,'type.num.num'))) ) | $spl6),
  inference(duplicate_literal_removal,[],[f1006])).
fof(f1006,plain,(
  ( ! [X2,X0,X1] : (s(bool,happ(s(fun('type.num.num',bool),X1),s('type.num.num',sK1))) = s(bool,happ(s(fun('type.num.num',bool),X2),s('type.num.num',sK1))) | s('type.num.num',sK1) = s('type.num.num',sK41('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),X2,'type.num.num')) | s(bool,'T_0') = s(bool,X0) | s('type.num.num',sK1) = s('type.num.num',sK41('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),X1,'type.num.num')) | s(bool,'T_0') = s(bool,X0)) ) | $spl6),
  inference(superposition,[],[f1005,f1005])).
fof(f679,plain,(
  s('type.list.list'(sK0),'const.list.NIL_0') = s('type.list.list'(sK0),sK3) | $spl12),
  inference(cnf_transformation,[],[f679_D])).
fof(f679_D,plain,(
  s('type.list.list'(sK0),'const.list.NIL_0') = s('type.list.list'(sK0),sK3) <=> ~$spl12),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl12])])).
fof(f681,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num',sK1) | $spl15),
  inference(cnf_transformation,[],[f681_D])).
fof(f681_D,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num',sK1) <=> ~$spl15),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl15])])).
fof(f677,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num',sK1) | s('type.list.list'(sK0),'const.list.NIL_0') = s('type.list.list'(sK0),sK3) | $spl6),
  inference(superposition,[],[f125,f160])).
fof(f231,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0)) ) | $spl8),
  inference(cnf_transformation,[],[f231_D])).
fof(f231_D,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0)) ) <=> ~$spl8),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl8])])).
fof(f233,plain,(
  s(bool,'T_0') != s(bool,'F_0') | $spl11),
  inference(cnf_transformation,[],[f233_D])).
fof(f233_D,plain,(
  s(bool,'T_0') != s(bool,'F_0') <=> ~$spl11),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl11])])).
fof(f230,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,'F_0') = s(bool,X0)) )),
  inference(equality_factoring,[],[f124])).
fof(f154,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) | $spl0),
  inference(cnf_transformation,[],[f154_D])).
fof(f154_D,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f160,plain,(
  s('type.num.num',sK1) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3))) | $spl6),
  inference(cnf_transformation,[],[f160_D])).
fof(f160_D,plain,(
  s('type.num.num',sK1) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3))) <=> ~$spl6),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl6])])).
fof(f103,plain,(
  s('type.num.num',sK1) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))),
  inference(cnf_transformation,[],[f86])).
fof(f86,plain,(
  (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) | (s('type.num.num',sK1) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3))) & s('type.list.list'(sK0),sK2) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK19),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK20),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK21),s('type.list.list'(sK0),sK3))))))))))))))))))))))))))))))))))))))) & (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) | ! [X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,X21] : (s('type.num.num',sK1) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X3))) | s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X18),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X19),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X20),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X21),s('type.list.list'(sK0),X3)))))))))))))))))))))))))))))))))))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2,sK3,sK4,sK5,sK6,sK7,sK8,sK9,sK10,sK11,sK12,sK13,sK14,sK15,sK16,sK17,sK18,sK19,sK20,sK21])],[f85])).
fof(f85,plain,(
  ? [X0,X1,X2] : ((s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) | ? [X22,X23,X24,X25,X26,X27,X28,X29,X30,X31,X32,X33,X34,X35,X36,X37,X38,X39,X40] : (s('type.num.num',X1) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X22))) & s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X23),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X24),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X25),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X26),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X27),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X28),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X29),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X30),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X31),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X32),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X33),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X34),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X35),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X36),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X37),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X38),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X39),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X40),s('type.list.list'(X0),X22))))))))))))))))))))))))))))))))))))))) & (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) | ! [X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,X21] : (s('type.num.num',X1) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))) | s('type.list.list'(X0),X2) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X12),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X13),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X14),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X15),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X16),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X17),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X18),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X19),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X20),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X21),s('type.list.list'(X0),X3))))))))))))))))))))))))))))))))))))))))),
  inference(rectify,[],[f84])).
fof(f84,plain,(
  ? [X0,X1,X2] : ((s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) | ? [X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,X21] : (s('type.num.num',X1) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))) & s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X12),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X13),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X14),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X15),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X16),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X17),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X18),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X19),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X20),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X21),s('type.list.list'(X0),X3))))))))))))))))))))))))))))))))))))))) & (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) | ! [X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,X21] : (s('type.num.num',X1) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))) | s('type.list.list'(X0),X2) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X12),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X13),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X14),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X15),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X16),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X17),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X18),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X19),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X20),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X21),s('type.list.list'(X0),X3))))))))))))))))))))))))))))))))))))))))),
  inference(nnf_transformation,[],[f82])).
fof(f82,plain,(
  ? [X0,X1,X2] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) <~> ? [X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,X21] : (s('type.num.num',X1) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))) & s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X12),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X13),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X14),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X15),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X16),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X17),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X18),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X19),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X20),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X21),s('type.list.list'(X0),X3)))))))))))))))))))))))))))))))))))))))),
  inference(ennf_transformation,[],[f40])).
fof(f40,plain,(
  ~! [X0,X1,X2] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) <=> ? [X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,X21] : (s('type.num.num',X1) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))) & s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X12),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X13),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X14),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X15),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X16),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X17),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X18),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X19),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X20),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X21),s('type.list.list'(X0),X3)))))))))))))))))))))))))))))))))))))))),
  inference(flattening,[],[f39])).
fof(f39,plain,(
  ~! [X0] : ! [X1,X2] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) <=> ? [X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,X21] : (s('type.num.num',X1) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))) & s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X12),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X13),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X14),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X15),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X16),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X17),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X18),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X19),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X20),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X21),s('type.list.list'(X0),X3)))))))))))))))))))))))))))))))))))))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : ! [X7,X8] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X8))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X7),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) <=> ? [X9,X10,X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,X21,X22,X23,X24,X25,X26,X27] : (s('type.num.num',X7) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X9))) & s('type.list.list'(X6),X8) = s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X10),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X11),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X12),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X13),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X14),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X15),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X16),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X17),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X18),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X19),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X20),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X21),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X22),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X23),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X24),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X25),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X26),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X27),s('type.list.list'(X6),X9)))))))))))))))))))))))))))))))))))))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : ! [X7,X8] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X8))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X7),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) <=> ? [X9,X10,X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,X21,X22,X23,X24,X25,X26,X27] : (s('type.num.num',X7) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X9))) & s('type.list.list'(X6),X8) = s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X10),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X11),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X12),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X13),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X14),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X15),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X16),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X17),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X18),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X19),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X20),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X21),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X22),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X23),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X24),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X25),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X26),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X27),s('type.list.list'(X6),X9)))))))))))))))))))))))))))))))))))))))),
  file('thm.quantHeuristics.LIST_LENGTH_2|48||split|41','thm.quantHeuristics.LIST_LENGTH_2|48||split|41')).
fof(f158,plain,(
  s('type.list.list'(sK0),sK2) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK19),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK20),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK21),s('type.list.list'(sK0),sK3))))))))))))))))))))))))))))))))))))) | $spl4),
  inference(cnf_transformation,[],[f158_D])).
fof(f158_D,plain,(
  s('type.list.list'(sK0),sK2) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK19),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK20),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK21),s('type.list.list'(sK0),sK3))))))))))))))))))))))))))))))))))))) <=> ~$spl4),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl4])])).
fof(f104,plain,(
  s('type.list.list'(sK0),sK2) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK19),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK20),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK21),s('type.list.list'(sK0),sK3))))))))))))))))))))))))))))))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))),
  inference(cnf_transformation,[],[f86])).
fof(f155,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) | $spl1),
  inference(cnf_transformation,[],[f155_D])).
fof(f155_D,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) <=> ~$spl1),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1])])).
fof(f156,plain,(
  ( ! [X6,X4,X14,X12,X10,X8,X21,X19,X17,X7,X5,X3,X15,X13,X11,X9,X20,X18,X16] : (s('type.num.num',sK1) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X3))) | s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X18),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X19),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X20),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X21),s('type.list.list'(sK0),X3)))))))))))))))))))))))))))))))))))))) ) | $spl2),
  inference(cnf_transformation,[],[f156_D])).
fof(f156_D,plain,(
  ( ! [X6,X4,X14,X12,X10,X8,X21,X19,X17,X7,X5,X3,X15,X13,X11,X9,X20,X18,X16] : (s('type.num.num',sK1) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X3))) | s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X18),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X19),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X20),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X21),s('type.list.list'(sK0),X3)))))))))))))))))))))))))))))))))))))) ) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f105,plain,(
  ( ! [X6,X4,X14,X12,X10,X8,X21,X19,X17,X7,X5,X3,X15,X13,X11,X9,X20,X18,X16] : (s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X18),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X19),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X20),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X21),s('type.list.list'(sK0),X3))))))))))))))))))))))))))))))))))))) | s('type.num.num',sK1) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X3))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) )),
  inference(cnf_transformation,[],[f86])).
% SZS output end Proof for thm.quantHeuristics
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 107
% Passive clauses: 746
% Generated clauses: 5254
% Final active clauses: 81
% Final passive clauses: 489
% Input formulas: 37
% Initial clauses: 51
% 
% Duplicate literals: 125
% Trivial inequalities: 17
% Fw subsumption resolutions: 65
% Fw demodulations: 919
% Bw demodulations: 74
% Condensations: 121
% Global subsumptions: 2
% 
% Simple tautologies: 32
% Equational tautologies: 27
% Forward subsumptions: 3146
% Fw demodulations to eq. taut.: 19
% Bw demodulations to eq. taut.: 47
% 
% Unit resulting resolution: 240
% Forward superposition: 1638
% Backward superposition: 1769
% Self superposition: 87
% Equality factoring: 34
% Equality resolution: 3
% 
% Split clauses: 24
% Split components: 48
% SAT solver clauses: 809
% SAT solver unit clauses: 182
% SAT solver binary clauses: 301
% 
% Sat splits: 24
% Sat splitting refutations: 11
% 
% Memory used [KB]: 17782
% Time elapsed: 0.319 s
% ------------------------------
% ------------------------------
% Success in time 1.66 s
